; ModuleID = '../bcout/drivers/opp/core.llvm.bc'
source_filename = "drivers/opp/core.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kmem_cache = type opaque
%struct.lock_class_key = type {}
%struct.opp_table = type { %struct.list_head, %struct.blocking_notifier_head, %struct.list_head, %struct.list_head, %struct.kref, %struct.mutex, %struct.device_node*, i64, i32, i32, i32, %struct.dev_pm_opp*, %struct.mutex, %struct.device**, %struct.opp_table**, i32, i32*, i32, i8*, %struct.clk*, %struct.regulator**, i32, %struct.icc_path**, i32, i8, i8, i8, i32 (%struct.dev_pm_set_opp_data*)*, %struct.dev_pm_set_opp_data* }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.attribute = type { i8*, i16 }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.67, %struct.list_head, %struct.list_head, %union.anon.68 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.65 }
%union.anon.65 = type { %struct.anon.66 }
%struct.anon.66 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.2, %union.anon.57, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.57 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.58, i32 }
%union.anon.58 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kgid_t = type { i32 }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rb_root = type { %struct.rb_node* }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type { %struct.list_head, %struct.device* }
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.35, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.35 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.70, %union.anon.71, %union.anon.72, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.75, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.70 = type { %struct.hlist_node }
%union.anon.71 = type { %struct.rb_node }
%union.anon.72 = type { %struct.anon.74 }
%struct.anon.74 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.75 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.76, void (i8*)*, i8* }
%union.anon.76 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.77, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.77 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.36, %union.anon.37, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%union.anon.36 = type { %struct.list_head }
%union.anon.37 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.50, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type { i64 }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.42 }
%struct.anon.42 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.49, i32, [12 x i8] }
%union.anon.49 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.50 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.51, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.54 }
%union.anon.51 = type { %struct.anon.52 }
%struct.anon.52 = type { i64, i64 }
%union.anon.54 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.30 }
%union.anon.30 = type { %struct.anon.31, [48 x i8] }
%struct.anon.31 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.32, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.32 = type { %struct.anon.33 }
%struct.anon.33 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.67 = type { %struct.list_head }
%union.anon.68 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.59, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.60, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.61, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.64, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.59 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.60 = type { %struct.callback_head }
%union.anon.61 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type opaque
%struct.swap_info_struct = type { i64, i16, %struct.plist_node, i8, i32, i8*, %struct.swap_cluster_info*, %struct.swap_cluster_list, i32, i32, i32, i32, i32, i32, i32*, %struct.percpu_cluster*, %struct.rb_root, %struct.block_device*, %struct.file*, i32, %struct.spinlock, %struct.spinlock, %struct.work_struct, %struct.swap_cluster_list, [0 x %struct.plist_node] }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.swap_cluster_info = type { %struct.spinlock, i32 }
%struct.percpu_cluster = type { %struct.swap_cluster_info, i32 }
%struct.swap_cluster_list = type { %struct.swap_cluster_info, %struct.swap_cluster_info }
%union.anon.64 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.62 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.62 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.34 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.34 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.69, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.69 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.dev_pm_opp = type { %struct.list_head, %struct.kref, i8, i8, i8, i8, i32, i64, i32, %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_icc_bw*, i64, %struct.dev_pm_opp**, %struct.opp_table*, %struct.device_node* }
%struct.dev_pm_opp_supply = type { i64, i64, i64, i64 }
%struct.dev_pm_opp_icc_bw = type { i32, i32 }
%struct.clk = type opaque
%struct.regulator = type opaque
%struct.icc_path = type opaque
%struct.dev_pm_set_opp_data = type { %struct.dev_pm_opp_info, %struct.dev_pm_opp_info, %struct.regulator**, i32, %struct.clk*, %struct.device* }
%struct.dev_pm_opp_info = type { i64, %struct.dev_pm_opp_supply* }
%struct.opp_device = type { %struct.list_head, %struct.device* }
%struct.anon.79 = type { i64, i64 }

@opp_tables = dso_local global %struct.list_head { %struct.list_head* @opp_tables, %struct.list_head* @opp_tables }, align 8, !dbg !0
@opp_table_lock = dso_local global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @opp_table_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @opp_table_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4979
@.str = private unnamed_addr constant [32 x i8] c"\013core: %s: Invalid parameters\0A\00", align 1
@__func__._find_opp_table = private unnamed_addr constant [16 x i8] c"_find_opp_table\00", align 1
@__func__.dev_pm_opp_get_voltage = private unnamed_addr constant [23 x i8] c"dev_pm_opp_get_voltage\00", align 1
@__func__.dev_pm_opp_get_freq = private unnamed_addr constant [20 x i8] c"dev_pm_opp_get_freq\00", align 1
@__func__.dev_pm_opp_get_level = private unnamed_addr constant [21 x i8] c"dev_pm_opp_get_level\00", align 1
@__func__.dev_pm_opp_is_turbo = private unnamed_addr constant [20 x i8] c"dev_pm_opp_is_turbo\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"%s: OPP table not found (%d)\0A\00", align 1
@__func__.dev_pm_opp_find_freq_exact = private unnamed_addr constant [27 x i8] c"dev_pm_opp_find_freq_exact\00", align 1
@__func__.dev_pm_opp_find_level_exact = private unnamed_addr constant [28 x i8] c"dev_pm_opp_find_level_exact\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"%s: Invalid argument freq=%p\0A\00", align 1
@__func__.dev_pm_opp_find_freq_ceil = private unnamed_addr constant [26 x i8] c"dev_pm_opp_find_freq_ceil\00", align 1
@__func__.dev_pm_opp_find_freq_floor = private unnamed_addr constant [27 x i8] c"dev_pm_opp_find_freq_floor\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"%s: Invalid argument volt=%lu\0A\00", align 1
@__func__.dev_pm_opp_find_freq_ceil_by_volt = private unnamed_addr constant [34 x i8] c"dev_pm_opp_find_freq_ceil_by_volt\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"%s: device opp table doesn't exist\0A\00", align 1
@__func__.dev_pm_opp_set_bw = private unnamed_addr constant [18 x i8] c"dev_pm_opp_set_bw\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"%s: device opp doesn't exist\0A\00", align 1
@__func__.dev_pm_opp_set_rate = private unnamed_addr constant [20 x i8] c"dev_pm_opp_set_rate\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"%s: No clock available for the device\0A\00", align 1
@.str.7 = private unnamed_addr constant [51 x i8] c"%s: failed to find current OPP for freq %lu (%ld)\0A\00", align 1
@.str.8 = private unnamed_addr constant [42 x i8] c"%s: failed to find OPP for freq %lu (%d)\0A\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"Failed to set required opps: %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [38 x i8] c"%s: Couldn't find OPP with freq: %lu\0A\00", align 1
@__func__.dev_pm_opp_remove = private unnamed_addr constant [18 x i8] c"dev_pm_opp_remove\00", align 1
@.str.11 = private unnamed_addr constant [43 x i8] c"%s: OPP not supported by regulators (%lu)\0A\00", align 1
@__func__._opp_add = private unnamed_addr constant [9 x i8] c"_opp_add\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"drivers/opp/core.c\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"%s: no regulator (%s) found: %d\0A\00", align 1
@__func__.dev_pm_opp_set_regulators = private unnamed_addr constant [26 x i8] c"dev_pm_opp_set_regulators\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"%s: Couldn't find clock: %d\0A\00", align 1
@__func__.dev_pm_opp_set_clkname = private unnamed_addr constant [23 x i8] c"dev_pm_opp_set_clkname\00", align 1
@.str.15 = private unnamed_addr constant [66 x i8] c"Index can't be greater than required-opp-count - 1, %s (%d : %d)\0A\00", align 1
@.str.16 = private unnamed_addr constant [34 x i8] c"Couldn't attach to pm_domain: %d\0A\00", align 1
@.str.17 = private unnamed_addr constant [55 x i8] c"\013core: %s: Couldn't find matching OPP table (%p: %p)\0A\00", align 1
@__func__.dev_pm_opp_xlate_performance_state = private unnamed_addr constant [35 x i8] c"dev_pm_opp_xlate_performance_state\00", align 1
@.str.18 = private unnamed_addr constant [49 x i8] c"\013core: %s: Couldn't find matching OPP (%p: %p)\0A\00", align 1
@.str.19 = private unnamed_addr constant [31 x i8] c"%s: Device OPP not found (%d)\0A\00", align 1
@__func__.dev_pm_opp_adjust_voltage = private unnamed_addr constant [26 x i8] c"dev_pm_opp_adjust_voltage\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"%s: opp_table: %d\0A\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"Invalid device\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.22 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.23 = private unnamed_addr constant [32 x i8] c"Failed to %s bandwidth[%d]: %d\0A\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"remove\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"set\00", align 1
@.str.26 = private unnamed_addr constant [34 x i8] c"%s: failed to set clock rate: %d\0A\00", align 1
@__func__._generic_set_opp_clk_only = private unnamed_addr constant [26 x i8] c"_generic_set_opp_clk_only\00", align 1
@.str.27 = private unnamed_addr constant [47 x i8] c"Failed to set performance rate of %s: %d (%d)\0A\00", align 1
@.str.28 = private unnamed_addr constant [39 x i8] c"multiple regulators are not supported\0A\00", align 1
@.str.29 = private unnamed_addr constant [31 x i8] c"Failed to enable regulator: %d\00", align 1
@.str.30 = private unnamed_addr constant [41 x i8] c"%s: failed to restore old-freq (%lu Hz)\0A\00", align 1
@__func__._generic_set_opp_regulator = private unnamed_addr constant [27 x i8] c"_generic_set_opp_regulator\00", align 1
@.str.31 = private unnamed_addr constant [48 x i8] c"%s: failed to set voltage (%lu %lu %lu mV): %d\0A\00", align 1
@__func__._set_opp_voltage = private unnamed_addr constant [17 x i8] c"_set_opp_voltage\00", align 1
@_allocate_opp_table.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4981
@.str.32 = private unnamed_addr constant [17 x i8] c"&opp_table->lock\00", align 1
@_allocate_opp_table.__key.33 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4986
@.str.34 = private unnamed_addr constant [32 x i8] c"&opp_table->genpd_virt_dev_lock\00", align 1
@.str.35 = private unnamed_addr constant [42 x i8] c"%s: Error finding interconnect paths: %d\0A\00", align 1
@__func__._allocate_opp_table = private unnamed_addr constant [20 x i8] c"_allocate_opp_table\00", align 1
@_allocate_opp_table.__key.36 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4988
@.str.37 = private unnamed_addr constant [27 x i8] c"&(&opp_table->head)->rwsem\00", align 1
@.str.38 = private unnamed_addr constant [114 x i8] c"%s: duplicate OPPs detected. Existing: freq: %lu, volt: %lu, enabled: %d. New: freq: %lu, volt: %lu, enabled: %d\0A\00", align 1
@__func__._opp_is_duplicate = private unnamed_addr constant [18 x i8] c"_opp_is_duplicate\00", align 1
@.str.39 = private unnamed_addr constant [67 x i8] c"\014core: %s: OPP minuV: %lu maxuV: %lu, not supported by regulator\0A\00", align 1
@__func__._opp_supported_by_regulators = private unnamed_addr constant [29 x i8] c"_opp_supported_by_regulators\00", align 1
@__func__._opp_set_availability = private unnamed_addr constant [22 x i8] c"_opp_set_availability\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.opp_table* @_find_opp_table(%struct.device* %dev) #0 !dbg !4995 {
entry:
  %retval = alloca %struct.opp_table*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4998, metadata !DIExpression()), !dbg !4999
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !5000, metadata !DIExpression()), !dbg !5001
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5002
  %1 = bitcast %struct.device* %0 to i8*, !dbg !5002
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #8, !dbg !5004
  br i1 %call, label %if.then, label %if.end, !dbg !5005

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__._find_opp_table, i64 0, i64 0)) #9, !dbg !5006
  %call2 = call i8* @ERR_PTR(i64 -22) #8, !dbg !5008
  %2 = bitcast i8* %call2 to %struct.opp_table*, !dbg !5008
  store %struct.opp_table* %2, %struct.opp_table** %retval, align 8, !dbg !5009
  br label %return, !dbg !5009

if.end:                                           ; preds = %entry
  call void @mutex_lock(%struct.mutex* @opp_table_lock) #8, !dbg !5010
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5011
  %call3 = call %struct.opp_table* @_find_opp_table_unlocked(%struct.device* %3) #8, !dbg !5012
  store %struct.opp_table* %call3, %struct.opp_table** %opp_table, align 8, !dbg !5013
  call void @mutex_unlock(%struct.mutex* @opp_table_lock) #8, !dbg !5014
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5015
  store %struct.opp_table* %4, %struct.opp_table** %retval, align 8, !dbg !5016
  br label %return, !dbg !5016

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct.opp_table*, %struct.opp_table** %retval, align 8, !dbg !5017
  ret %struct.opp_table* %5, !dbg !5017
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #0 !dbg !5018 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5022, metadata !DIExpression()), !dbg !5023
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5024
  %tobool = icmp ne i8* %0, null, !dbg !5024
  %lnot = xor i1 %tobool, true, !dbg !5024
  %lnot1 = xor i1 %lnot, true, !dbg !5024
  %lnot2 = xor i1 %lnot1, true, !dbg !5024
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !5024
  %conv = sext i32 %lnot.ext to i64, !dbg !5024
  %tobool3 = icmp ne i64 %conv, 0, !dbg !5024
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !5025

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !5026
  %2 = ptrtoint i8* %1 to i64, !dbg !5026
  %3 = inttoptr i64 %2 to i8*, !dbg !5026
  %4 = ptrtoint i8* %3 to i64, !dbg !5026
  %cmp = icmp uge i64 %4, -4095, !dbg !5026
  %lnot5 = xor i1 %cmp, true, !dbg !5026
  %lnot7 = xor i1 %lnot5, true, !dbg !5026
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !5026
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !5026
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !5025
  br label %lor.end, !dbg !5025

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !5027
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !5028 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !5031, metadata !DIExpression()), !dbg !5032
  %0 = load i64, i64* %error.addr, align 8, !dbg !5033
  %1 = inttoptr i64 %0 to i8*, !dbg !5034
  ret i8* %1, !dbg !5035
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.opp_table* @_find_opp_table_unlocked(%struct.device* %dev) #0 !dbg !5036 {
entry:
  %retval = alloca %struct.opp_table*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %found = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.opp_table*, align 8
  %__mptr5 = alloca i8*, align 8
  %tmp9 = alloca %struct.opp_table*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5037, metadata !DIExpression()), !dbg !5038
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !5039, metadata !DIExpression()), !dbg !5040
  call void @llvm.dbg.declare(metadata i8* %found, metadata !5041, metadata !DIExpression()), !dbg !5042
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5043, metadata !DIExpression()), !dbg !5046
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @opp_tables, i32 0, i32 0), align 8, !dbg !5046
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !5046
  store i8* %1, i8** %__mptr, align 8, !dbg !5046
  br label %do.body, !dbg !5046

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5047

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !5046
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !5046
  %3 = bitcast i8* %add.ptr to %struct.opp_table*, !dbg !5046
  store %struct.opp_table* %3, %struct.opp_table** %tmp, align 8, !dbg !5047
  %4 = load %struct.opp_table*, %struct.opp_table** %tmp, align 8, !dbg !5046
  store %struct.opp_table* %4, %struct.opp_table** %opp_table, align 8, !dbg !5049
  br label %for.cond, !dbg !5049

for.cond:                                         ; preds = %do.end8, %do.end
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5050
  %node = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 0, !dbg !5050
  %cmp = icmp eq %struct.list_head* %node, @opp_tables, !dbg !5050
  %lnot = xor i1 %cmp, true, !dbg !5050
  br i1 %lnot, label %for.body, label %for.end, !dbg !5049

for.body:                                         ; preds = %for.cond
  %6 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5052
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %6, i32 0, i32 5, !dbg !5054
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !5055
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5056
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5057
  %call = call %struct.opp_device* @_find_opp_dev(%struct.device* %7, %struct.opp_table* %8) #8, !dbg !5058
  %tobool = icmp ne %struct.opp_device* %call, null, !dbg !5059
  %lnot1 = xor i1 %tobool, true, !dbg !5059
  %lnot2 = xor i1 %lnot1, true, !dbg !5060
  %frombool = zext i1 %lnot2 to i8, !dbg !5061
  store i8 %frombool, i8* %found, align 1, !dbg !5061
  %9 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5062
  %lock3 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %9, i32 0, i32 5, !dbg !5063
  call void @mutex_unlock(%struct.mutex* %lock3) #8, !dbg !5064
  %10 = load i8, i8* %found, align 1, !dbg !5065
  %tobool4 = trunc i8 %10 to i1, !dbg !5065
  br i1 %tobool4, label %if.then, label %if.end, !dbg !5067

if.then:                                          ; preds = %for.body
  %11 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5068
  call void @_get_opp_table_kref(%struct.opp_table* %11) #8, !dbg !5070
  %12 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5071
  store %struct.opp_table* %12, %struct.opp_table** %retval, align 8, !dbg !5072
  br label %return, !dbg !5072

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5073

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !5074, metadata !DIExpression()), !dbg !5076
  %13 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5076
  %node6 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %13, i32 0, i32 0, !dbg !5076
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %node6, i32 0, i32 0, !dbg !5076
  %14 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5076
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !5076
  store i8* %15, i8** %__mptr5, align 8, !dbg !5076
  br label %do.body7, !dbg !5076

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !5077

do.end8:                                          ; preds = %do.body7
  %16 = load i8*, i8** %__mptr5, align 8, !dbg !5076
  %add.ptr10 = getelementptr i8, i8* %16, i64 0, !dbg !5076
  %17 = bitcast i8* %add.ptr10 to %struct.opp_table*, !dbg !5076
  store %struct.opp_table* %17, %struct.opp_table** %tmp9, align 8, !dbg !5077
  %18 = load %struct.opp_table*, %struct.opp_table** %tmp9, align 8, !dbg !5076
  store %struct.opp_table* %18, %struct.opp_table** %opp_table, align 8, !dbg !5050
  br label %for.cond, !dbg !5050, !llvm.loop !5079

for.end:                                          ; preds = %for.cond
  %call11 = call i8* @ERR_PTR(i64 -19) #8, !dbg !5081
  %19 = bitcast i8* %call11 to %struct.opp_table*, !dbg !5081
  store %struct.opp_table* %19, %struct.opp_table** %retval, align 8, !dbg !5082
  br label %return, !dbg !5082

return:                                           ; preds = %for.end, %if.then
  %20 = load %struct.opp_table*, %struct.opp_table** %retval, align 8, !dbg !5083
  ret %struct.opp_table* %20, !dbg !5083
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @dev_pm_opp_get_voltage(%struct.dev_pm_opp* %opp) #0 !dbg !5084 {
entry:
  %retval = alloca i64, align 8
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !5087, metadata !DIExpression()), !dbg !5088
  %0 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !5089
  %1 = bitcast %struct.dev_pm_opp* %0 to i8*, !dbg !5089
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #8, !dbg !5091
  br i1 %call, label %if.then, label %if.end, !dbg !5092

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.dev_pm_opp_get_voltage, i64 0, i64 0)) #9, !dbg !5093
  store i64 0, i64* %retval, align 8, !dbg !5095
  br label %return, !dbg !5095

if.end:                                           ; preds = %entry
  %2 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !5096
  %supplies = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %2, i32 0, i32 9, !dbg !5097
  %3 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies, align 8, !dbg !5097
  %arrayidx = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %3, i64 0, !dbg !5096
  %u_volt = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx, i32 0, i32 0, !dbg !5098
  %4 = load i64, i64* %u_volt, align 8, !dbg !5098
  store i64 %4, i64* %retval, align 8, !dbg !5099
  br label %return, !dbg !5099

return:                                           ; preds = %if.end, %if.then
  %5 = load i64, i64* %retval, align 8, !dbg !5100
  ret i64 %5, !dbg !5100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @dev_pm_opp_get_freq(%struct.dev_pm_opp* %opp) #0 !dbg !5101 {
entry:
  %retval = alloca i64, align 8
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !5102, metadata !DIExpression()), !dbg !5103
  %0 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !5104
  %1 = bitcast %struct.dev_pm_opp* %0 to i8*, !dbg !5104
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #8, !dbg !5106
  br i1 %call, label %if.then, label %if.end, !dbg !5107

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dev_pm_opp_get_freq, i64 0, i64 0)) #9, !dbg !5108
  store i64 0, i64* %retval, align 8, !dbg !5110
  br label %return, !dbg !5110

if.end:                                           ; preds = %entry
  %2 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !5111
  %rate = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %2, i32 0, i32 7, !dbg !5112
  %3 = load i64, i64* %rate, align 8, !dbg !5112
  store i64 %3, i64* %retval, align 8, !dbg !5113
  br label %return, !dbg !5113

return:                                           ; preds = %if.end, %if.then
  %4 = load i64, i64* %retval, align 8, !dbg !5114
  ret i64 %4, !dbg !5114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_pm_opp_get_level(%struct.dev_pm_opp* %opp) #0 !dbg !5115 {
entry:
  %retval = alloca i32, align 4
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !5118, metadata !DIExpression()), !dbg !5119
  %0 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !5120
  %1 = bitcast %struct.dev_pm_opp* %0 to i8*, !dbg !5120
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #8, !dbg !5122
  br i1 %call, label %if.then, label %lor.lhs.false, !dbg !5123

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !5124
  %available = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %2, i32 0, i32 2, !dbg !5125
  %3 = load i8, i8* %available, align 4, !dbg !5125
  %tobool = trunc i8 %3 to i1, !dbg !5125
  br i1 %tobool, label %if.end, label %if.then, !dbg !5126

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.dev_pm_opp_get_level, i64 0, i64 0)) #9, !dbg !5127
  store i32 0, i32* %retval, align 4, !dbg !5129
  br label %return, !dbg !5129

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !5130
  %level = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %4, i32 0, i32 8, !dbg !5131
  %5 = load i32, i32* %level, align 8, !dbg !5131
  store i32 %5, i32* %retval, align 4, !dbg !5132
  br label %return, !dbg !5132

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !5133
  ret i32 %6, !dbg !5133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @dev_pm_opp_is_turbo(%struct.dev_pm_opp* %opp) #0 !dbg !5134 {
entry:
  %retval = alloca i1, align 1
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !5137, metadata !DIExpression()), !dbg !5138
  %0 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !5139
  %1 = bitcast %struct.dev_pm_opp* %0 to i8*, !dbg !5139
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #8, !dbg !5141
  br i1 %call, label %if.then, label %lor.lhs.false, !dbg !5142

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !5143
  %available = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %2, i32 0, i32 2, !dbg !5144
  %3 = load i8, i8* %available, align 4, !dbg !5144
  %tobool = trunc i8 %3 to i1, !dbg !5144
  br i1 %tobool, label %if.end, label %if.then, !dbg !5145

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dev_pm_opp_is_turbo, i64 0, i64 0)) #9, !dbg !5146
  store i1 false, i1* %retval, align 1, !dbg !5148
  br label %return, !dbg !5148

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !5149
  %turbo = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %4, i32 0, i32 4, !dbg !5150
  %5 = load i8, i8* %turbo, align 2, !dbg !5150
  %tobool2 = trunc i8 %5 to i1, !dbg !5150
  store i1 %tobool2, i1* %retval, align 1, !dbg !5151
  br label %return, !dbg !5151

return:                                           ; preds = %if.end, %if.then
  %6 = load i1, i1* %retval, align 1, !dbg !5152
  ret i1 %6, !dbg !5152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @dev_pm_opp_get_max_clock_latency(%struct.device* %dev) #0 !dbg !5153 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %clock_latency_ns = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5156, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !5158, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.declare(metadata i64* %clock_latency_ns, metadata !5160, metadata !DIExpression()), !dbg !5161
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5162
  %call = call %struct.opp_table* @_find_opp_table(%struct.device* %0) #8, !dbg !5163
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !5164
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5165
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !5165
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !5167
  br i1 %call1, label %if.then, label %if.end, !dbg !5168

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !5169
  br label %return, !dbg !5169

if.end:                                           ; preds = %entry
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5170
  %clock_latency_ns_max = getelementptr inbounds %struct.opp_table, %struct.opp_table* %3, i32 0, i32 7, !dbg !5171
  %4 = load i64, i64* %clock_latency_ns_max, align 8, !dbg !5171
  store i64 %4, i64* %clock_latency_ns, align 8, !dbg !5172
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5173
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %5) #8, !dbg !5174
  %6 = load i64, i64* %clock_latency_ns, align 8, !dbg !5175
  store i64 %6, i64* %retval, align 8, !dbg !5176
  br label %return, !dbg !5176

return:                                           ; preds = %if.end, %if.then
  %7 = load i64, i64* %retval, align 8, !dbg !5177
  ret i64 %7, !dbg !5177
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !5178 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5179, metadata !DIExpression()), !dbg !5180
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5181
  %1 = ptrtoint i8* %0 to i64, !dbg !5181
  %2 = inttoptr i64 %1 to i8*, !dbg !5181
  %3 = ptrtoint i8* %2 to i64, !dbg !5181
  %cmp = icmp uge i64 %3, -4095, !dbg !5181
  %lnot = xor i1 %cmp, true, !dbg !5181
  %lnot1 = xor i1 %lnot, true, !dbg !5181
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5181
  %conv = sext i32 %lnot.ext to i64, !dbg !5181
  %tobool = icmp ne i64 %conv, 0, !dbg !5181
  ret i1 %tobool, !dbg !5182
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dev_pm_opp_put_opp_table(%struct.opp_table* %opp_table) #0 !dbg !5183 {
entry:
  %opp_table.addr = alloca %struct.opp_table*, align 8
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !5186, metadata !DIExpression()), !dbg !5187
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !5188
  %kref = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 4, !dbg !5189
  %call = call i32 @kref_put_mutex(%struct.kref* %kref, void (%struct.kref*)* @_opp_table_kref_release, %struct.mutex* @opp_table_lock) #8, !dbg !5190
  ret void, !dbg !5191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @dev_pm_opp_get_max_volt_latency(%struct.device* %dev) #0 !dbg !5192 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %reg = alloca %struct.regulator*, align 8
  %latency_ns = alloca i64, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  %uV = alloca %struct.anon.79*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %__mptr52 = alloca i8*, align 8
  %tmp57 = alloca %struct.dev_pm_opp*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5193, metadata !DIExpression()), !dbg !5194
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !5195, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !5197, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.declare(metadata %struct.regulator** %reg, metadata !5199, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.declare(metadata i64* %latency_ns, metadata !5201, metadata !DIExpression()), !dbg !5202
  store i64 0, i64* %latency_ns, align 8, !dbg !5202
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5203, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5205, metadata !DIExpression()), !dbg !5206
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5207, metadata !DIExpression()), !dbg !5208
  call void @llvm.dbg.declare(metadata %struct.anon.79** %uV, metadata !5209, metadata !DIExpression()), !dbg !5215
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5216
  %call = call %struct.opp_table* @_find_opp_table(%struct.device* %0) #8, !dbg !5217
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !5218
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5219
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !5219
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !5221
  br i1 %call1, label %if.then, label %if.end, !dbg !5222

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !5223
  br label %return, !dbg !5223

if.end:                                           ; preds = %entry
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5224
  %regulators = getelementptr inbounds %struct.opp_table, %struct.opp_table* %3, i32 0, i32 20, !dbg !5226
  %4 = load %struct.regulator**, %struct.regulator*** %regulators, align 8, !dbg !5226
  %tobool = icmp ne %struct.regulator** %4, null, !dbg !5224
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !5227

if.then2:                                         ; preds = %if.end
  br label %put_opp_table, !dbg !5228

if.end3:                                          ; preds = %if.end
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5229
  %regulator_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 21, !dbg !5230
  %6 = load i32, i32* %regulator_count, align 8, !dbg !5230
  store i32 %6, i32* %count, align 4, !dbg !5231
  %7 = load i32, i32* %count, align 4, !dbg !5232
  %conv = sext i32 %7 to i64, !dbg !5232
  %call4 = call i8* @kmalloc_array(i64 %conv, i64 16, i32 3264) #8, !dbg !5233
  %8 = bitcast i8* %call4 to %struct.anon.79*, !dbg !5233
  store %struct.anon.79* %8, %struct.anon.79** %uV, align 8, !dbg !5234
  %9 = load %struct.anon.79*, %struct.anon.79** %uV, align 8, !dbg !5235
  %tobool5 = icmp ne %struct.anon.79* %9, null, !dbg !5235
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !5237

if.then6:                                         ; preds = %if.end3
  br label %put_opp_table, !dbg !5238

if.end7:                                          ; preds = %if.end3
  %10 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5239
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %10, i32 0, i32 5, !dbg !5240
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !5241
  store i32 0, i32* %i, align 4, !dbg !5242
  br label %for.cond, !dbg !5244

for.cond:                                         ; preds = %for.inc59, %if.end7
  %11 = load i32, i32* %i, align 4, !dbg !5245
  %12 = load i32, i32* %count, align 4, !dbg !5247
  %cmp = icmp slt i32 %11, %12, !dbg !5248
  br i1 %cmp, label %for.body, label %for.end60, !dbg !5249

for.body:                                         ; preds = %for.cond
  %13 = load %struct.anon.79*, %struct.anon.79** %uV, align 8, !dbg !5250
  %14 = load i32, i32* %i, align 4, !dbg !5252
  %idxprom = sext i32 %14 to i64, !dbg !5250
  %arrayidx = getelementptr %struct.anon.79, %struct.anon.79* %13, i64 %idxprom, !dbg !5250
  %min = getelementptr inbounds %struct.anon.79, %struct.anon.79* %arrayidx, i32 0, i32 0, !dbg !5253
  store i64 -1, i64* %min, align 8, !dbg !5254
  %15 = load %struct.anon.79*, %struct.anon.79** %uV, align 8, !dbg !5255
  %16 = load i32, i32* %i, align 4, !dbg !5256
  %idxprom9 = sext i32 %16 to i64, !dbg !5255
  %arrayidx10 = getelementptr %struct.anon.79, %struct.anon.79* %15, i64 %idxprom9, !dbg !5255
  %max = getelementptr inbounds %struct.anon.79, %struct.anon.79* %arrayidx10, i32 0, i32 1, !dbg !5257
  store i64 0, i64* %max, align 8, !dbg !5258
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5259, metadata !DIExpression()), !dbg !5262
  %17 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5262
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %17, i32 0, i32 3, !dbg !5262
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %opp_list, i32 0, i32 0, !dbg !5262
  %18 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5262
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !5262
  store i8* %19, i8** %__mptr, align 8, !dbg !5262
  br label %do.body, !dbg !5262

do.body:                                          ; preds = %for.body
  br label %do.end, !dbg !5263

do.end:                                           ; preds = %do.body
  %20 = load i8*, i8** %__mptr, align 8, !dbg !5262
  %add.ptr = getelementptr i8, i8* %20, i64 0, !dbg !5262
  %21 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !5262
  store %struct.dev_pm_opp* %21, %struct.dev_pm_opp** %tmp, align 8, !dbg !5263
  %22 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !5262
  store %struct.dev_pm_opp* %22, %struct.dev_pm_opp** %opp, align 8, !dbg !5265
  br label %for.cond11, !dbg !5265

for.cond11:                                       ; preds = %do.end56, %do.end
  %23 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5266
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %23, i32 0, i32 0, !dbg !5266
  %24 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5266
  %opp_list12 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %24, i32 0, i32 3, !dbg !5266
  %cmp13 = icmp eq %struct.list_head* %node, %opp_list12, !dbg !5266
  %lnot = xor i1 %cmp13, true, !dbg !5266
  br i1 %lnot, label %for.body15, label %for.end, !dbg !5265

for.body15:                                       ; preds = %for.cond11
  %25 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5268
  %available = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %25, i32 0, i32 2, !dbg !5271
  %26 = load i8, i8* %available, align 4, !dbg !5271
  %tobool16 = trunc i8 %26 to i1, !dbg !5271
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !5272

if.then17:                                        ; preds = %for.body15
  br label %for.inc, !dbg !5273

if.end18:                                         ; preds = %for.body15
  %27 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5274
  %supplies = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %27, i32 0, i32 9, !dbg !5276
  %28 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies, align 8, !dbg !5276
  %29 = load i32, i32* %i, align 4, !dbg !5277
  %idxprom19 = sext i32 %29 to i64, !dbg !5274
  %arrayidx20 = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %28, i64 %idxprom19, !dbg !5274
  %u_volt_min = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx20, i32 0, i32 1, !dbg !5278
  %30 = load i64, i64* %u_volt_min, align 8, !dbg !5278
  %31 = load %struct.anon.79*, %struct.anon.79** %uV, align 8, !dbg !5279
  %32 = load i32, i32* %i, align 4, !dbg !5280
  %idxprom21 = sext i32 %32 to i64, !dbg !5279
  %arrayidx22 = getelementptr %struct.anon.79, %struct.anon.79* %31, i64 %idxprom21, !dbg !5279
  %min23 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %arrayidx22, i32 0, i32 0, !dbg !5281
  %33 = load i64, i64* %min23, align 8, !dbg !5281
  %cmp24 = icmp ult i64 %30, %33, !dbg !5282
  br i1 %cmp24, label %if.then26, label %if.end34, !dbg !5283

if.then26:                                        ; preds = %if.end18
  %34 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5284
  %supplies27 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %34, i32 0, i32 9, !dbg !5285
  %35 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies27, align 8, !dbg !5285
  %36 = load i32, i32* %i, align 4, !dbg !5286
  %idxprom28 = sext i32 %36 to i64, !dbg !5284
  %arrayidx29 = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %35, i64 %idxprom28, !dbg !5284
  %u_volt_min30 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx29, i32 0, i32 1, !dbg !5287
  %37 = load i64, i64* %u_volt_min30, align 8, !dbg !5287
  %38 = load %struct.anon.79*, %struct.anon.79** %uV, align 8, !dbg !5288
  %39 = load i32, i32* %i, align 4, !dbg !5289
  %idxprom31 = sext i32 %39 to i64, !dbg !5288
  %arrayidx32 = getelementptr %struct.anon.79, %struct.anon.79* %38, i64 %idxprom31, !dbg !5288
  %min33 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %arrayidx32, i32 0, i32 0, !dbg !5290
  store i64 %37, i64* %min33, align 8, !dbg !5291
  br label %if.end34, !dbg !5288

if.end34:                                         ; preds = %if.then26, %if.end18
  %40 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5292
  %supplies35 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %40, i32 0, i32 9, !dbg !5294
  %41 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies35, align 8, !dbg !5294
  %42 = load i32, i32* %i, align 4, !dbg !5295
  %idxprom36 = sext i32 %42 to i64, !dbg !5292
  %arrayidx37 = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %41, i64 %idxprom36, !dbg !5292
  %u_volt_max = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx37, i32 0, i32 2, !dbg !5296
  %43 = load i64, i64* %u_volt_max, align 8, !dbg !5296
  %44 = load %struct.anon.79*, %struct.anon.79** %uV, align 8, !dbg !5297
  %45 = load i32, i32* %i, align 4, !dbg !5298
  %idxprom38 = sext i32 %45 to i64, !dbg !5297
  %arrayidx39 = getelementptr %struct.anon.79, %struct.anon.79* %44, i64 %idxprom38, !dbg !5297
  %max40 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %arrayidx39, i32 0, i32 1, !dbg !5299
  %46 = load i64, i64* %max40, align 8, !dbg !5299
  %cmp41 = icmp ugt i64 %43, %46, !dbg !5300
  br i1 %cmp41, label %if.then43, label %if.end51, !dbg !5301

if.then43:                                        ; preds = %if.end34
  %47 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5302
  %supplies44 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %47, i32 0, i32 9, !dbg !5303
  %48 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies44, align 8, !dbg !5303
  %49 = load i32, i32* %i, align 4, !dbg !5304
  %idxprom45 = sext i32 %49 to i64, !dbg !5302
  %arrayidx46 = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %48, i64 %idxprom45, !dbg !5302
  %u_volt_max47 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx46, i32 0, i32 2, !dbg !5305
  %50 = load i64, i64* %u_volt_max47, align 8, !dbg !5305
  %51 = load %struct.anon.79*, %struct.anon.79** %uV, align 8, !dbg !5306
  %52 = load i32, i32* %i, align 4, !dbg !5307
  %idxprom48 = sext i32 %52 to i64, !dbg !5306
  %arrayidx49 = getelementptr %struct.anon.79, %struct.anon.79* %51, i64 %idxprom48, !dbg !5306
  %max50 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %arrayidx49, i32 0, i32 1, !dbg !5308
  store i64 %50, i64* %max50, align 8, !dbg !5309
  br label %if.end51, !dbg !5306

if.end51:                                         ; preds = %if.then43, %if.end34
  br label %for.inc, !dbg !5310

for.inc:                                          ; preds = %if.end51, %if.then17
  call void @llvm.dbg.declare(metadata i8** %__mptr52, metadata !5311, metadata !DIExpression()), !dbg !5313
  %53 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5313
  %node53 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %53, i32 0, i32 0, !dbg !5313
  %next54 = getelementptr inbounds %struct.list_head, %struct.list_head* %node53, i32 0, i32 0, !dbg !5313
  %54 = load %struct.list_head*, %struct.list_head** %next54, align 8, !dbg !5313
  %55 = bitcast %struct.list_head* %54 to i8*, !dbg !5313
  store i8* %55, i8** %__mptr52, align 8, !dbg !5313
  br label %do.body55, !dbg !5313

do.body55:                                        ; preds = %for.inc
  br label %do.end56, !dbg !5314

do.end56:                                         ; preds = %do.body55
  %56 = load i8*, i8** %__mptr52, align 8, !dbg !5313
  %add.ptr58 = getelementptr i8, i8* %56, i64 0, !dbg !5313
  %57 = bitcast i8* %add.ptr58 to %struct.dev_pm_opp*, !dbg !5313
  store %struct.dev_pm_opp* %57, %struct.dev_pm_opp** %tmp57, align 8, !dbg !5314
  %58 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp57, align 8, !dbg !5313
  store %struct.dev_pm_opp* %58, %struct.dev_pm_opp** %opp, align 8, !dbg !5266
  br label %for.cond11, !dbg !5266, !llvm.loop !5316

for.end:                                          ; preds = %for.cond11
  br label %for.inc59, !dbg !5318

for.inc59:                                        ; preds = %for.end
  %59 = load i32, i32* %i, align 4, !dbg !5319
  %inc = add i32 %59, 1, !dbg !5319
  store i32 %inc, i32* %i, align 4, !dbg !5319
  br label %for.cond, !dbg !5320, !llvm.loop !5321

for.end60:                                        ; preds = %for.cond
  %60 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5323
  %lock61 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %60, i32 0, i32 5, !dbg !5324
  call void @mutex_unlock(%struct.mutex* %lock61) #8, !dbg !5325
  store i32 0, i32* %i, align 4, !dbg !5326
  br label %for.cond62, !dbg !5328

for.cond62:                                       ; preds = %for.inc83, %for.end60
  %61 = load i32, i32* %i, align 4, !dbg !5329
  %62 = load i32, i32* %count, align 4, !dbg !5331
  %cmp63 = icmp slt i32 %61, %62, !dbg !5332
  br i1 %cmp63, label %for.body65, label %for.end85, !dbg !5333

for.body65:                                       ; preds = %for.cond62
  %63 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5334
  %regulators66 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %63, i32 0, i32 20, !dbg !5336
  %64 = load %struct.regulator**, %struct.regulator*** %regulators66, align 8, !dbg !5336
  %65 = load i32, i32* %i, align 4, !dbg !5337
  %idxprom67 = sext i32 %65 to i64, !dbg !5334
  %arrayidx68 = getelementptr %struct.regulator*, %struct.regulator** %64, i64 %idxprom67, !dbg !5334
  %66 = load %struct.regulator*, %struct.regulator** %arrayidx68, align 8, !dbg !5334
  store %struct.regulator* %66, %struct.regulator** %reg, align 8, !dbg !5338
  %67 = load %struct.regulator*, %struct.regulator** %reg, align 8, !dbg !5339
  %68 = load %struct.anon.79*, %struct.anon.79** %uV, align 8, !dbg !5340
  %69 = load i32, i32* %i, align 4, !dbg !5341
  %idxprom69 = sext i32 %69 to i64, !dbg !5340
  %arrayidx70 = getelementptr %struct.anon.79, %struct.anon.79* %68, i64 %idxprom69, !dbg !5340
  %min71 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %arrayidx70, i32 0, i32 0, !dbg !5342
  %70 = load i64, i64* %min71, align 8, !dbg !5342
  %conv72 = trunc i64 %70 to i32, !dbg !5340
  %71 = load %struct.anon.79*, %struct.anon.79** %uV, align 8, !dbg !5343
  %72 = load i32, i32* %i, align 4, !dbg !5344
  %idxprom73 = sext i32 %72 to i64, !dbg !5343
  %arrayidx74 = getelementptr %struct.anon.79, %struct.anon.79* %71, i64 %idxprom73, !dbg !5343
  %max75 = getelementptr inbounds %struct.anon.79, %struct.anon.79* %arrayidx74, i32 0, i32 1, !dbg !5345
  %73 = load i64, i64* %max75, align 8, !dbg !5345
  %conv76 = trunc i64 %73 to i32, !dbg !5343
  %call77 = call i32 @regulator_set_voltage_time(%struct.regulator* %67, i32 %conv72, i32 %conv76) #8, !dbg !5346
  store i32 %call77, i32* %ret, align 4, !dbg !5347
  %74 = load i32, i32* %ret, align 4, !dbg !5348
  %cmp78 = icmp sgt i32 %74, 0, !dbg !5350
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !5351

if.then80:                                        ; preds = %for.body65
  %75 = load i32, i32* %ret, align 4, !dbg !5352
  %mul = mul i32 %75, 1000, !dbg !5353
  %conv81 = sext i32 %mul to i64, !dbg !5352
  %76 = load i64, i64* %latency_ns, align 8, !dbg !5354
  %add = add i64 %76, %conv81, !dbg !5354
  store i64 %add, i64* %latency_ns, align 8, !dbg !5354
  br label %if.end82, !dbg !5355

if.end82:                                         ; preds = %if.then80, %for.body65
  br label %for.inc83, !dbg !5356

for.inc83:                                        ; preds = %if.end82
  %77 = load i32, i32* %i, align 4, !dbg !5357
  %inc84 = add i32 %77, 1, !dbg !5357
  store i32 %inc84, i32* %i, align 4, !dbg !5357
  br label %for.cond62, !dbg !5358, !llvm.loop !5359

for.end85:                                        ; preds = %for.cond62
  %78 = load %struct.anon.79*, %struct.anon.79** %uV, align 8, !dbg !5361
  %79 = bitcast %struct.anon.79* %78 to i8*, !dbg !5361
  call void @kfree(i8* %79) #8, !dbg !5362
  br label %put_opp_table, !dbg !5362

put_opp_table:                                    ; preds = %for.end85, %if.then6, %if.then2
  call void @llvm.dbg.label(metadata !5363), !dbg !5364
  %80 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5365
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %80) #8, !dbg !5366
  %81 = load i64, i64* %latency_ns, align 8, !dbg !5367
  store i64 %81, i64* %retval, align 8, !dbg !5368
  br label %return, !dbg !5368

return:                                           ; preds = %put_opp_table, %if.then
  %82 = load i64, i64* %retval, align 8, !dbg !5369
  ret i64 %82, !dbg !5369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !5370 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5373, metadata !DIExpression()), !dbg !5377
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5386, metadata !DIExpression()), !dbg !5387
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5388, metadata !DIExpression()), !dbg !5389
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5390, metadata !DIExpression()), !dbg !5391
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5392, metadata !DIExpression()), !dbg !5396
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5398, metadata !DIExpression()), !dbg !5402
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5404, metadata !DIExpression()), !dbg !5408
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5413, metadata !DIExpression()), !dbg !5414
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5415, metadata !DIExpression()), !dbg !5416
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5417, metadata !DIExpression()), !dbg !5418
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5419, metadata !DIExpression()), !dbg !5420
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5421, metadata !DIExpression()), !dbg !5422
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5423, metadata !DIExpression()), !dbg !5424
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5425, metadata !DIExpression()), !dbg !5426
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5427, metadata !DIExpression()), !dbg !5428
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5429, metadata !DIExpression()), !dbg !5430
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5431, metadata !DIExpression()), !dbg !5432
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5433, metadata !DIExpression()), !dbg !5434
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !5435, metadata !DIExpression()), !dbg !5436
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !5437, metadata !DIExpression()), !dbg !5440
  %0 = load i64, i64* %n.addr, align 8, !dbg !5440
  store i64 %0, i64* %__a, align 8, !dbg !5440
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !5441, metadata !DIExpression()), !dbg !5440
  %1 = load i64, i64* %size.addr, align 8, !dbg !5440
  store i64 %1, i64* %__b, align 8, !dbg !5440
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !5442, metadata !DIExpression()), !dbg !5440
  store i64* %bytes, i64** %__d, align 8, !dbg !5440
  %cmp = icmp eq i64* %__a, %__b, !dbg !5440
  %conv = zext i1 %cmp to i32, !dbg !5440
  %2 = load i64*, i64** %__d, align 8, !dbg !5440
  %cmp1 = icmp eq i64* %__a, %2, !dbg !5440
  %conv2 = zext i1 %cmp1 to i32, !dbg !5440
  %3 = load i64, i64* %__a, align 8, !dbg !5440
  %4 = load i64, i64* %__b, align 8, !dbg !5440
  %5 = load i64*, i64** %__d, align 8, !dbg !5440
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !5440
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !5440
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !5440
  store i64 %8, i64* %5, align 8, !dbg !5440
  %frombool = zext i1 %7 to i8, !dbg !5440
  store i8 %frombool, i8* %tmp, align 1, !dbg !5440
  %9 = load i8, i8* %tmp, align 1, !dbg !5440
  %tobool = trunc i8 %9 to i1, !dbg !5440
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #8, !dbg !5443
  %lnot = xor i1 %call, true, !dbg !5443
  %lnot3 = xor i1 %lnot, true, !dbg !5443
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !5443
  %conv4 = sext i32 %lnot.ext to i64, !dbg !5443
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !5443
  br i1 %tobool5, label %if.then, label %if.end, !dbg !5444

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !5445
  br label %return, !dbg !5445

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !5446
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !5447
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !5448

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !5449
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !5450
  br i1 %13, label %if.then6, label %if.end8, !dbg !5451

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !5452
  %15 = load i32, i32* %flags.addr, align 4, !dbg !5453
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !5454
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #10, !dbg !5455
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !5456

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !5457
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !5458
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5459

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !5460
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !5461
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !5462
  %call.i.i = call i32 @get_order(i64 %21) #11, !dbg !5463
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5422
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !5464
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5465
  %24 = load i32, i32* %order.i.i, align 4, !dbg !5466
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5467
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5468
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5469
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #12, !dbg !5470
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5470
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5470
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5470
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !5470
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5471
  br label %kmalloc.exit, !dbg !5471

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !5472
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5473
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !5473
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5475

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5476
  br label %kmalloc_index.exit.i, !dbg !5476

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5477
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !5479
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5480

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5481
  br label %kmalloc_index.exit.i, !dbg !5481

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5482
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !5484
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5485

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5486
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !5487
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5488

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5489
  br label %kmalloc_index.exit.i, !dbg !5489

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5490
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !5492
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5493

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5494
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !5495
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5496

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5497
  br label %kmalloc_index.exit.i, !dbg !5497

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5498
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !5500
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5501

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5502
  br label %kmalloc_index.exit.i, !dbg !5502

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5503
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !5505
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5506

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5507
  br label %kmalloc_index.exit.i, !dbg !5507

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5508
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !5510
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5511

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5512
  br label %kmalloc_index.exit.i, !dbg !5512

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5513
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !5515
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5516

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5517
  br label %kmalloc_index.exit.i, !dbg !5517

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5518
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !5520
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5521

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5522
  br label %kmalloc_index.exit.i, !dbg !5522

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5523
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !5525
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5526

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5527
  br label %kmalloc_index.exit.i, !dbg !5527

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5528
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !5530
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5531

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5532
  br label %kmalloc_index.exit.i, !dbg !5532

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5533
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !5535
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5536

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5537
  br label %kmalloc_index.exit.i, !dbg !5537

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5538
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !5540
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5541

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5542
  br label %kmalloc_index.exit.i, !dbg !5542

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5543
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !5545
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5546

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5547
  br label %kmalloc_index.exit.i, !dbg !5547

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5548
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !5550
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5551

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5552
  br label %kmalloc_index.exit.i, !dbg !5552

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5553
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !5555
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5556

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5557
  br label %kmalloc_index.exit.i, !dbg !5557

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5558
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !5560
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5561

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5562
  br label %kmalloc_index.exit.i, !dbg !5562

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5563
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !5565
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5566

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5567
  br label %kmalloc_index.exit.i, !dbg !5567

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5568
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !5570
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5571

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5572
  br label %kmalloc_index.exit.i, !dbg !5572

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5573
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !5575
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5576

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5577
  br label %kmalloc_index.exit.i, !dbg !5577

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5578
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !5580
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5581

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5582
  br label %kmalloc_index.exit.i, !dbg !5582

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5583
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !5585
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5586

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5587
  br label %kmalloc_index.exit.i, !dbg !5587

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5588
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !5590
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5591

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5592
  br label %kmalloc_index.exit.i, !dbg !5592

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5593
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !5595
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5596

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5597
  br label %kmalloc_index.exit.i, !dbg !5597

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5598
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !5600
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5601

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5602
  br label %kmalloc_index.exit.i, !dbg !5602

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5603
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !5605
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5606

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5607
  br label %kmalloc_index.exit.i, !dbg !5607

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5608
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !5610
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5611

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5612
  br label %kmalloc_index.exit.i, !dbg !5612

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5613
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !5615
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5616

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5617
  br label %kmalloc_index.exit.i, !dbg !5617

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !5618, !srcloc !5621
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #10, !dbg !5622, !srcloc !5625
  unreachable, !dbg !5626

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !5627
  store i32 %59, i32* %index.i, align 4, !dbg !5628
  %60 = load i32, i32* %index.i, align 4, !dbg !5629
  %tobool.i = icmp ne i32 %60, 0, !dbg !5629
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5631

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5632
  br label %kmalloc.exit, !dbg !5632

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !5633
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5634
  %and.i.i = and i32 %62, 17, !dbg !5634
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5634
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5634
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5634
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5634
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5636

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5637
  br label %kmalloc_type.exit.i, !dbg !5637

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5638
  %and2.i.i = and i32 %63, 1, !dbg !5639
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5638
  %64 = zext i1 %tobool3.i.i to i64, !dbg !5638
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5638
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5640
  br label %kmalloc_type.exit.i, !dbg !5640

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !5641
  %idxprom.i = zext i32 %65 to i64, !dbg !5642
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5642
  %66 = load i32, i32* %index.i, align 4, !dbg !5643
  %idxprom6.i = zext i32 %66 to i64, !dbg !5642
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5642
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5642
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !5644
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !5645
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5646
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5647
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #12, !dbg !5648
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5648
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5648
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5648
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !5648
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5391
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5649
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !5650
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5651
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5652
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #12, !dbg !5653
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5654
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !5655
  store i8* %76, i8** %retval.i, align 8, !dbg !5656
  br label %kmalloc.exit, !dbg !5656

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !5657
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !5658
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #12, !dbg !5659
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5659
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5659
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5659
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !5659
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5660
  br label %kmalloc.exit, !dbg !5660

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !5661
  store i8* %79, i8** %retval, align 8, !dbg !5662
  br label %return, !dbg !5662

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !5663
  %81 = load i32, i32* %flags.addr, align 4, !dbg !5664
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #8, !dbg !5665
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !5665
  %maskedptr = and i64 %ptrint, 7, !dbg !5665
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !5665
  call void @llvm.assume(i1 %maskcond), !dbg !5665
  store i8* %call9, i8** %retval, align 8, !dbg !5666
  br label %return, !dbg !5666

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !5667
  ret i8* %82, !dbg !5667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @regulator_set_voltage_time(%struct.regulator* %regulator, i32 %old_uV, i32 %new_uV) #0 !dbg !5668 {
entry:
  %regulator.addr = alloca %struct.regulator*, align 8
  %old_uV.addr = alloca i32, align 4
  %new_uV.addr = alloca i32, align 4
  store %struct.regulator* %regulator, %struct.regulator** %regulator.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.regulator** %regulator.addr, metadata !5671, metadata !DIExpression()), !dbg !5672
  store i32 %old_uV, i32* %old_uV.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %old_uV.addr, metadata !5673, metadata !DIExpression()), !dbg !5674
  store i32 %new_uV, i32* %new_uV.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_uV.addr, metadata !5675, metadata !DIExpression()), !dbg !5676
  ret i32 0, !dbg !5677
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @dev_pm_opp_get_max_transition_latency(%struct.device* %dev) #0 !dbg !5678 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5679, metadata !DIExpression()), !dbg !5680
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5681
  %call = call i64 @dev_pm_opp_get_max_volt_latency(%struct.device* %0) #8, !dbg !5682
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5683
  %call1 = call i64 @dev_pm_opp_get_max_clock_latency(%struct.device* %1) #8, !dbg !5684
  %add = add i64 %call, %call1, !dbg !5685
  ret i64 %add, !dbg !5686
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @dev_pm_opp_get_suspend_opp_freq(%struct.device* %dev) #0 !dbg !5687 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %freq = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5688, metadata !DIExpression()), !dbg !5689
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !5690, metadata !DIExpression()), !dbg !5691
  call void @llvm.dbg.declare(metadata i64* %freq, metadata !5692, metadata !DIExpression()), !dbg !5693
  store i64 0, i64* %freq, align 8, !dbg !5693
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5694
  %call = call %struct.opp_table* @_find_opp_table(%struct.device* %0) #8, !dbg !5695
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !5696
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5697
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !5697
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !5699
  br i1 %call1, label %if.then, label %if.end, !dbg !5700

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !5701
  br label %return, !dbg !5701

if.end:                                           ; preds = %entry
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5702
  %suspend_opp = getelementptr inbounds %struct.opp_table, %struct.opp_table* %3, i32 0, i32 11, !dbg !5704
  %4 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %suspend_opp, align 8, !dbg !5704
  %tobool = icmp ne %struct.dev_pm_opp* %4, null, !dbg !5702
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !5705

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5706
  %suspend_opp2 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 11, !dbg !5707
  %6 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %suspend_opp2, align 8, !dbg !5707
  %available = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %6, i32 0, i32 2, !dbg !5708
  %7 = load i8, i8* %available, align 4, !dbg !5708
  %tobool3 = trunc i8 %7 to i1, !dbg !5708
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !5709

if.then4:                                         ; preds = %land.lhs.true
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5710
  %suspend_opp5 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %8, i32 0, i32 11, !dbg !5711
  %9 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %suspend_opp5, align 8, !dbg !5711
  %call6 = call i64 @dev_pm_opp_get_freq(%struct.dev_pm_opp* %9) #8, !dbg !5712
  store i64 %call6, i64* %freq, align 8, !dbg !5713
  br label %if.end7, !dbg !5714

if.end7:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %10 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5715
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %10) #8, !dbg !5716
  %11 = load i64, i64* %freq, align 8, !dbg !5717
  store i64 %11, i64* %retval, align 8, !dbg !5718
  br label %return, !dbg !5718

return:                                           ; preds = %if.end7, %if.then
  %12 = load i64, i64* %retval, align 8, !dbg !5719
  ret i64 %12, !dbg !5719
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @_get_opp_count(%struct.opp_table* %opp_table) #0 !dbg !5720 {
entry:
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %count = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp7 = alloca %struct.dev_pm_opp*, align 8
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !5723, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !5725, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5727, metadata !DIExpression()), !dbg !5728
  store i32 0, i32* %count, align 4, !dbg !5728
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !5729
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 5, !dbg !5730
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !5731
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5732, metadata !DIExpression()), !dbg !5735
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !5735
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %1, i32 0, i32 3, !dbg !5735
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %opp_list, i32 0, i32 0, !dbg !5735
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5735
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !5735
  store i8* %3, i8** %__mptr, align 8, !dbg !5735
  br label %do.body, !dbg !5735

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5736

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !5735
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !5735
  %5 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !5735
  store %struct.dev_pm_opp* %5, %struct.dev_pm_opp** %tmp, align 8, !dbg !5736
  %6 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !5735
  store %struct.dev_pm_opp* %6, %struct.dev_pm_opp** %opp, align 8, !dbg !5738
  br label %for.cond, !dbg !5738

for.cond:                                         ; preds = %do.end6, %do.end
  %7 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5739
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %7, i32 0, i32 0, !dbg !5739
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !5739
  %opp_list1 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %8, i32 0, i32 3, !dbg !5739
  %cmp = icmp eq %struct.list_head* %node, %opp_list1, !dbg !5739
  %lnot = xor i1 %cmp, true, !dbg !5739
  br i1 %lnot, label %for.body, label %for.end, !dbg !5738

for.body:                                         ; preds = %for.cond
  %9 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5741
  %available = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %9, i32 0, i32 2, !dbg !5744
  %10 = load i8, i8* %available, align 4, !dbg !5744
  %tobool = trunc i8 %10 to i1, !dbg !5744
  br i1 %tobool, label %if.then, label %if.end, !dbg !5745

if.then:                                          ; preds = %for.body
  %11 = load i32, i32* %count, align 4, !dbg !5746
  %inc = add i32 %11, 1, !dbg !5746
  store i32 %inc, i32* %count, align 4, !dbg !5746
  br label %if.end, !dbg !5747

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5748

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !5749, metadata !DIExpression()), !dbg !5751
  %12 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5751
  %node3 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %12, i32 0, i32 0, !dbg !5751
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %node3, i32 0, i32 0, !dbg !5751
  %13 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !5751
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !5751
  store i8* %14, i8** %__mptr2, align 8, !dbg !5751
  br label %do.body5, !dbg !5751

do.body5:                                         ; preds = %for.inc
  br label %do.end6, !dbg !5752

do.end6:                                          ; preds = %do.body5
  %15 = load i8*, i8** %__mptr2, align 8, !dbg !5751
  %add.ptr8 = getelementptr i8, i8* %15, i64 0, !dbg !5751
  %16 = bitcast i8* %add.ptr8 to %struct.dev_pm_opp*, !dbg !5751
  store %struct.dev_pm_opp* %16, %struct.dev_pm_opp** %tmp7, align 8, !dbg !5752
  %17 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp7, align 8, !dbg !5751
  store %struct.dev_pm_opp* %17, %struct.dev_pm_opp** %opp, align 8, !dbg !5739
  br label %for.cond, !dbg !5739, !llvm.loop !5754

for.end:                                          ; preds = %for.cond
  %18 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !5756
  %lock9 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %18, i32 0, i32 5, !dbg !5757
  call void @mutex_unlock(%struct.mutex* %lock9) #8, !dbg !5758
  %19 = load i32, i32* %count, align 4, !dbg !5759
  ret i32 %19, !dbg !5760
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_pm_opp_get_opp_count(%struct.device* %dev) #0 !dbg !5761 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %count = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5762, metadata !DIExpression()), !dbg !5763
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !5764, metadata !DIExpression()), !dbg !5765
  call void @llvm.dbg.declare(metadata i32* %count, metadata !5766, metadata !DIExpression()), !dbg !5767
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5768
  %call = call %struct.opp_table* @_find_opp_table(%struct.device* %0) #8, !dbg !5769
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !5770
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5771
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !5771
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !5773
  br i1 %call1, label %if.then, label %if.end, !dbg !5774

if.then:                                          ; preds = %entry
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5775
  %4 = bitcast %struct.opp_table* %3 to i8*, !dbg !5775
  %call2 = call i64 @PTR_ERR(i8* %4) #8, !dbg !5777
  %conv = trunc i64 %call2 to i32, !dbg !5777
  store i32 %conv, i32* %count, align 4, !dbg !5778
  %5 = load i32, i32* %count, align 4, !dbg !5779
  store i32 %5, i32* %retval, align 4, !dbg !5780
  br label %return, !dbg !5780

if.end:                                           ; preds = %entry
  %6 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5781
  %call3 = call i32 @_get_opp_count(%struct.opp_table* %6) #8, !dbg !5782
  store i32 %call3, i32* %count, align 4, !dbg !5783
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5784
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %7) #8, !dbg !5785
  %8 = load i32, i32* %count, align 4, !dbg !5786
  store i32 %8, i32* %retval, align 4, !dbg !5787
  br label %return, !dbg !5787

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !5788
  ret i32 %9, !dbg !5788
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !5789 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5792, metadata !DIExpression()), !dbg !5793
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !5794
  %1 = ptrtoint i8* %0 to i64, !dbg !5795
  ret i64 %1, !dbg !5796
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dev_pm_opp* @dev_pm_opp_find_freq_exact(%struct.device* %dev, i64 %freq, i1 zeroext %available) #0 !dbg !5797 {
entry:
  %retval = alloca %struct.dev_pm_opp*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %freq.addr = alloca i64, align 8
  %available.addr = alloca i8, align 1
  %opp_table = alloca %struct.opp_table*, align 8
  %temp_opp = alloca %struct.dev_pm_opp*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %r = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %__mptr18 = alloca i8*, align 8
  %tmp23 = alloca %struct.dev_pm_opp*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5800, metadata !DIExpression()), !dbg !5801
  store i64 %freq, i64* %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %freq.addr, metadata !5802, metadata !DIExpression()), !dbg !5803
  %frombool = zext i1 %available to i8
  store i8 %frombool, i8* %available.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %available.addr, metadata !5804, metadata !DIExpression()), !dbg !5805
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !5806, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %temp_opp, metadata !5808, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !5810, metadata !DIExpression()), !dbg !5811
  %call = call i8* @ERR_PTR(i64 -34) #8, !dbg !5812
  %0 = bitcast i8* %call to %struct.dev_pm_opp*, !dbg !5812
  store %struct.dev_pm_opp* %0, %struct.dev_pm_opp** %opp, align 8, !dbg !5811
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5813
  %call1 = call %struct.opp_table* @_find_opp_table(%struct.device* %1) #8, !dbg !5814
  store %struct.opp_table* %call1, %struct.opp_table** %opp_table, align 8, !dbg !5815
  %2 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5816
  %3 = bitcast %struct.opp_table* %2 to i8*, !dbg !5816
  %call2 = call zeroext i1 @IS_ERR(i8* %3) #8, !dbg !5818
  br i1 %call2, label %if.then, label %if.end, !dbg !5819

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %r, metadata !5820, metadata !DIExpression()), !dbg !5822
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5823
  %5 = bitcast %struct.opp_table* %4 to i8*, !dbg !5823
  %call3 = call i64 @PTR_ERR(i8* %5) #8, !dbg !5824
  %conv = trunc i64 %call3 to i32, !dbg !5824
  store i32 %conv, i32* %r, align 4, !dbg !5822
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5825
  %7 = load i32, i32* %r, align 4, !dbg !5825
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.dev_pm_opp_find_freq_exact, i64 0, i64 0), i32 %7) #9, !dbg !5825
  %8 = load i32, i32* %r, align 4, !dbg !5826
  %conv4 = sext i32 %8 to i64, !dbg !5826
  %call5 = call i8* @ERR_PTR(i64 %conv4) #8, !dbg !5827
  %9 = bitcast i8* %call5 to %struct.dev_pm_opp*, !dbg !5827
  store %struct.dev_pm_opp* %9, %struct.dev_pm_opp** %retval, align 8, !dbg !5828
  br label %return, !dbg !5828

if.end:                                           ; preds = %entry
  %10 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5829
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %10, i32 0, i32 5, !dbg !5830
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !5831
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5832, metadata !DIExpression()), !dbg !5835
  %11 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5835
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %11, i32 0, i32 3, !dbg !5835
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %opp_list, i32 0, i32 0, !dbg !5835
  %12 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5835
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !5835
  store i8* %13, i8** %__mptr, align 8, !dbg !5835
  br label %do.body, !dbg !5835

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !5836

do.end:                                           ; preds = %do.body
  %14 = load i8*, i8** %__mptr, align 8, !dbg !5835
  %add.ptr = getelementptr i8, i8* %14, i64 0, !dbg !5835
  %15 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !5835
  store %struct.dev_pm_opp* %15, %struct.dev_pm_opp** %tmp, align 8, !dbg !5836
  %16 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !5835
  store %struct.dev_pm_opp* %16, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !5838
  br label %for.cond, !dbg !5838

for.cond:                                         ; preds = %do.end22, %do.end
  %17 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !5839
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %17, i32 0, i32 0, !dbg !5839
  %18 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5839
  %opp_list6 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %18, i32 0, i32 3, !dbg !5839
  %cmp = icmp eq %struct.list_head* %node, %opp_list6, !dbg !5839
  %lnot = xor i1 %cmp, true, !dbg !5839
  br i1 %lnot, label %for.body, label %for.end, !dbg !5838

for.body:                                         ; preds = %for.cond
  %19 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !5841
  %available8 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %19, i32 0, i32 2, !dbg !5844
  %20 = load i8, i8* %available8, align 4, !dbg !5844
  %tobool = trunc i8 %20 to i1, !dbg !5844
  %conv9 = zext i1 %tobool to i32, !dbg !5841
  %21 = load i8, i8* %available.addr, align 1, !dbg !5845
  %tobool10 = trunc i8 %21 to i1, !dbg !5845
  %conv11 = zext i1 %tobool10 to i32, !dbg !5845
  %cmp12 = icmp eq i32 %conv9, %conv11, !dbg !5846
  br i1 %cmp12, label %land.lhs.true, label %if.end17, !dbg !5847

land.lhs.true:                                    ; preds = %for.body
  %22 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !5848
  %rate = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %22, i32 0, i32 7, !dbg !5849
  %23 = load i64, i64* %rate, align 8, !dbg !5849
  %24 = load i64, i64* %freq.addr, align 8, !dbg !5850
  %cmp14 = icmp eq i64 %23, %24, !dbg !5851
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !5852

if.then16:                                        ; preds = %land.lhs.true
  %25 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !5853
  store %struct.dev_pm_opp* %25, %struct.dev_pm_opp** %opp, align 8, !dbg !5855
  %26 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5856
  call void @dev_pm_opp_get(%struct.dev_pm_opp* %26) #8, !dbg !5857
  br label %for.end, !dbg !5858

if.end17:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !5859

for.inc:                                          ; preds = %if.end17
  call void @llvm.dbg.declare(metadata i8** %__mptr18, metadata !5860, metadata !DIExpression()), !dbg !5862
  %27 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !5862
  %node19 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %27, i32 0, i32 0, !dbg !5862
  %next20 = getelementptr inbounds %struct.list_head, %struct.list_head* %node19, i32 0, i32 0, !dbg !5862
  %28 = load %struct.list_head*, %struct.list_head** %next20, align 8, !dbg !5862
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !5862
  store i8* %29, i8** %__mptr18, align 8, !dbg !5862
  br label %do.body21, !dbg !5862

do.body21:                                        ; preds = %for.inc
  br label %do.end22, !dbg !5863

do.end22:                                         ; preds = %do.body21
  %30 = load i8*, i8** %__mptr18, align 8, !dbg !5862
  %add.ptr24 = getelementptr i8, i8* %30, i64 0, !dbg !5862
  %31 = bitcast i8* %add.ptr24 to %struct.dev_pm_opp*, !dbg !5862
  store %struct.dev_pm_opp* %31, %struct.dev_pm_opp** %tmp23, align 8, !dbg !5863
  %32 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp23, align 8, !dbg !5862
  store %struct.dev_pm_opp* %32, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !5839
  br label %for.cond, !dbg !5839, !llvm.loop !5865

for.end:                                          ; preds = %if.then16, %for.cond
  %33 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5867
  %lock25 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %33, i32 0, i32 5, !dbg !5868
  call void @mutex_unlock(%struct.mutex* %lock25) #8, !dbg !5869
  %34 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5870
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %34) #8, !dbg !5871
  %35 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5872
  store %struct.dev_pm_opp* %35, %struct.dev_pm_opp** %retval, align 8, !dbg !5873
  br label %return, !dbg !5873

return:                                           ; preds = %for.end, %if.then
  %36 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %retval, align 8, !dbg !5874
  ret %struct.dev_pm_opp* %36, !dbg !5874
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dev_pm_opp_get(%struct.dev_pm_opp* %opp) #0 !dbg !5875 {
entry:
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !5878, metadata !DIExpression()), !dbg !5879
  %0 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !5880
  %kref = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %0, i32 0, i32 1, !dbg !5881
  call void @kref_get(%struct.kref* %kref) #8, !dbg !5882
  ret void, !dbg !5883
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dev_pm_opp* @dev_pm_opp_find_level_exact(%struct.device* %dev, i32 %level) #0 !dbg !5884 {
entry:
  %retval = alloca %struct.dev_pm_opp*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %level.addr = alloca i32, align 4
  %opp_table = alloca %struct.opp_table*, align 8
  %temp_opp = alloca %struct.dev_pm_opp*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %r = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %__mptr13 = alloca i8*, align 8
  %tmp18 = alloca %struct.dev_pm_opp*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5887, metadata !DIExpression()), !dbg !5888
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !5889, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !5891, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %temp_opp, metadata !5893, metadata !DIExpression()), !dbg !5894
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !5895, metadata !DIExpression()), !dbg !5896
  %call = call i8* @ERR_PTR(i64 -34) #8, !dbg !5897
  %0 = bitcast i8* %call to %struct.dev_pm_opp*, !dbg !5897
  store %struct.dev_pm_opp* %0, %struct.dev_pm_opp** %opp, align 8, !dbg !5896
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5898
  %call1 = call %struct.opp_table* @_find_opp_table(%struct.device* %1) #8, !dbg !5899
  store %struct.opp_table* %call1, %struct.opp_table** %opp_table, align 8, !dbg !5900
  %2 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5901
  %3 = bitcast %struct.opp_table* %2 to i8*, !dbg !5901
  %call2 = call zeroext i1 @IS_ERR(i8* %3) #8, !dbg !5903
  br i1 %call2, label %if.then, label %if.end, !dbg !5904

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %r, metadata !5905, metadata !DIExpression()), !dbg !5907
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5908
  %5 = bitcast %struct.opp_table* %4 to i8*, !dbg !5908
  %call3 = call i64 @PTR_ERR(i8* %5) #8, !dbg !5909
  %conv = trunc i64 %call3 to i32, !dbg !5909
  store i32 %conv, i32* %r, align 4, !dbg !5907
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5910
  %7 = load i32, i32* %r, align 4, !dbg !5910
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.dev_pm_opp_find_level_exact, i64 0, i64 0), i32 %7) #9, !dbg !5910
  %8 = load i32, i32* %r, align 4, !dbg !5911
  %conv4 = sext i32 %8 to i64, !dbg !5911
  %call5 = call i8* @ERR_PTR(i64 %conv4) #8, !dbg !5912
  %9 = bitcast i8* %call5 to %struct.dev_pm_opp*, !dbg !5912
  store %struct.dev_pm_opp* %9, %struct.dev_pm_opp** %retval, align 8, !dbg !5913
  br label %return, !dbg !5913

if.end:                                           ; preds = %entry
  %10 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5914
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %10, i32 0, i32 5, !dbg !5915
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !5916
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5917, metadata !DIExpression()), !dbg !5920
  %11 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5920
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %11, i32 0, i32 3, !dbg !5920
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %opp_list, i32 0, i32 0, !dbg !5920
  %12 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5920
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !5920
  store i8* %13, i8** %__mptr, align 8, !dbg !5920
  br label %do.body, !dbg !5920

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !5921

do.end:                                           ; preds = %do.body
  %14 = load i8*, i8** %__mptr, align 8, !dbg !5920
  %add.ptr = getelementptr i8, i8* %14, i64 0, !dbg !5920
  %15 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !5920
  store %struct.dev_pm_opp* %15, %struct.dev_pm_opp** %tmp, align 8, !dbg !5921
  %16 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !5920
  store %struct.dev_pm_opp* %16, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !5923
  br label %for.cond, !dbg !5923

for.cond:                                         ; preds = %do.end17, %do.end
  %17 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !5924
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %17, i32 0, i32 0, !dbg !5924
  %18 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5924
  %opp_list6 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %18, i32 0, i32 3, !dbg !5924
  %cmp = icmp eq %struct.list_head* %node, %opp_list6, !dbg !5924
  %lnot = xor i1 %cmp, true, !dbg !5924
  br i1 %lnot, label %for.body, label %for.end, !dbg !5923

for.body:                                         ; preds = %for.cond
  %19 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !5926
  %level8 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %19, i32 0, i32 8, !dbg !5929
  %20 = load i32, i32* %level8, align 8, !dbg !5929
  %21 = load i32, i32* %level.addr, align 4, !dbg !5930
  %cmp9 = icmp eq i32 %20, %21, !dbg !5931
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !5932

if.then11:                                        ; preds = %for.body
  %22 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !5933
  store %struct.dev_pm_opp* %22, %struct.dev_pm_opp** %opp, align 8, !dbg !5935
  %23 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5936
  call void @dev_pm_opp_get(%struct.dev_pm_opp* %23) #8, !dbg !5937
  br label %for.end, !dbg !5938

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !5939

for.inc:                                          ; preds = %if.end12
  call void @llvm.dbg.declare(metadata i8** %__mptr13, metadata !5940, metadata !DIExpression()), !dbg !5942
  %24 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !5942
  %node14 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %24, i32 0, i32 0, !dbg !5942
  %next15 = getelementptr inbounds %struct.list_head, %struct.list_head* %node14, i32 0, i32 0, !dbg !5942
  %25 = load %struct.list_head*, %struct.list_head** %next15, align 8, !dbg !5942
  %26 = bitcast %struct.list_head* %25 to i8*, !dbg !5942
  store i8* %26, i8** %__mptr13, align 8, !dbg !5942
  br label %do.body16, !dbg !5942

do.body16:                                        ; preds = %for.inc
  br label %do.end17, !dbg !5943

do.end17:                                         ; preds = %do.body16
  %27 = load i8*, i8** %__mptr13, align 8, !dbg !5942
  %add.ptr19 = getelementptr i8, i8* %27, i64 0, !dbg !5942
  %28 = bitcast i8* %add.ptr19 to %struct.dev_pm_opp*, !dbg !5942
  store %struct.dev_pm_opp* %28, %struct.dev_pm_opp** %tmp18, align 8, !dbg !5943
  %29 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp18, align 8, !dbg !5942
  store %struct.dev_pm_opp* %29, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !5924
  br label %for.cond, !dbg !5924, !llvm.loop !5945

for.end:                                          ; preds = %if.then11, %for.cond
  %30 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5947
  %lock20 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %30, i32 0, i32 5, !dbg !5948
  call void @mutex_unlock(%struct.mutex* %lock20) #8, !dbg !5949
  %31 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5950
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %31) #8, !dbg !5951
  %32 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5952
  store %struct.dev_pm_opp* %32, %struct.dev_pm_opp** %retval, align 8, !dbg !5953
  br label %return, !dbg !5953

return:                                           ; preds = %for.end, %if.then
  %33 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %retval, align 8, !dbg !5954
  ret %struct.dev_pm_opp* %33, !dbg !5954
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dev_pm_opp* @dev_pm_opp_find_freq_ceil(%struct.device* %dev, i64* %freq) #0 !dbg !5955 {
entry:
  %retval = alloca %struct.dev_pm_opp*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %freq.addr = alloca i64*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5959, metadata !DIExpression()), !dbg !5960
  store i64* %freq, i64** %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %freq.addr, metadata !5961, metadata !DIExpression()), !dbg !5962
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !5963, metadata !DIExpression()), !dbg !5964
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !5965, metadata !DIExpression()), !dbg !5966
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5967
  %tobool = icmp ne %struct.device* %0, null, !dbg !5967
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5969

lor.lhs.false:                                    ; preds = %entry
  %1 = load i64*, i64** %freq.addr, align 8, !dbg !5970
  %tobool1 = icmp ne i64* %1, null, !dbg !5970
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5971

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5972
  %3 = load i64*, i64** %freq.addr, align 8, !dbg !5972
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.dev_pm_opp_find_freq_ceil, i64 0, i64 0), i64* %3) #9, !dbg !5972
  %call = call i8* @ERR_PTR(i64 -22) #8, !dbg !5974
  %4 = bitcast i8* %call to %struct.dev_pm_opp*, !dbg !5974
  store %struct.dev_pm_opp* %4, %struct.dev_pm_opp** %retval, align 8, !dbg !5975
  br label %return, !dbg !5975

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5976
  %call2 = call %struct.opp_table* @_find_opp_table(%struct.device* %5) #8, !dbg !5977
  store %struct.opp_table* %call2, %struct.opp_table** %opp_table, align 8, !dbg !5978
  %6 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5979
  %7 = bitcast %struct.opp_table* %6 to i8*, !dbg !5979
  %call3 = call zeroext i1 @IS_ERR(i8* %7) #8, !dbg !5981
  br i1 %call3, label %if.then4, label %if.end6, !dbg !5982

if.then4:                                         ; preds = %if.end
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5983
  %9 = bitcast %struct.opp_table* %8 to i8*, !dbg !5983
  %call5 = call i8* @ERR_CAST(i8* %9) #8, !dbg !5984
  %10 = bitcast i8* %call5 to %struct.dev_pm_opp*, !dbg !5984
  store %struct.dev_pm_opp* %10, %struct.dev_pm_opp** %retval, align 8, !dbg !5985
  br label %return, !dbg !5985

if.end6:                                          ; preds = %if.end
  %11 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5986
  %12 = load i64*, i64** %freq.addr, align 8, !dbg !5987
  %call7 = call %struct.dev_pm_opp* @_find_freq_ceil(%struct.opp_table* %11, i64* %12) #8, !dbg !5988
  store %struct.dev_pm_opp* %call7, %struct.dev_pm_opp** %opp, align 8, !dbg !5989
  %13 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !5990
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %13) #8, !dbg !5991
  %14 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !5992
  store %struct.dev_pm_opp* %14, %struct.dev_pm_opp** %retval, align 8, !dbg !5993
  br label %return, !dbg !5993

return:                                           ; preds = %if.end6, %if.then4, %if.then
  %15 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %retval, align 8, !dbg !5994
  ret %struct.dev_pm_opp* %15, !dbg !5994
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_CAST(i8* %ptr) #0 !dbg !5995 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5998, metadata !DIExpression()), !dbg !5999
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6000
  ret i8* %0, !dbg !6001
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dev_pm_opp* @_find_freq_ceil(%struct.opp_table* %opp_table, i64* %freq) #0 !dbg !6002 {
entry:
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %freq.addr = alloca i64*, align 8
  %temp_opp = alloca %struct.dev_pm_opp*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp9 = alloca %struct.dev_pm_opp*, align 8
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !6005, metadata !DIExpression()), !dbg !6006
  store i64* %freq, i64** %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %freq.addr, metadata !6007, metadata !DIExpression()), !dbg !6008
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %temp_opp, metadata !6009, metadata !DIExpression()), !dbg !6010
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !6011, metadata !DIExpression()), !dbg !6012
  %call = call i8* @ERR_PTR(i64 -34) #8, !dbg !6013
  %0 = bitcast i8* %call to %struct.dev_pm_opp*, !dbg !6013
  store %struct.dev_pm_opp* %0, %struct.dev_pm_opp** %opp, align 8, !dbg !6012
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6014
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %1, i32 0, i32 5, !dbg !6015
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !6016
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6017, metadata !DIExpression()), !dbg !6020
  %2 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6020
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %2, i32 0, i32 3, !dbg !6020
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %opp_list, i32 0, i32 0, !dbg !6020
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6020
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !6020
  store i8* %4, i8** %__mptr, align 8, !dbg !6020
  br label %do.body, !dbg !6020

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6021

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !6020
  %add.ptr = getelementptr i8, i8* %5, i64 0, !dbg !6020
  %6 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !6020
  store %struct.dev_pm_opp* %6, %struct.dev_pm_opp** %tmp, align 8, !dbg !6021
  %7 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !6020
  store %struct.dev_pm_opp* %7, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6023
  br label %for.cond, !dbg !6023

for.cond:                                         ; preds = %do.end8, %do.end
  %8 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6024
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %8, i32 0, i32 0, !dbg !6024
  %9 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6024
  %opp_list1 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %9, i32 0, i32 3, !dbg !6024
  %cmp = icmp eq %struct.list_head* %node, %opp_list1, !dbg !6024
  %lnot = xor i1 %cmp, true, !dbg !6024
  br i1 %lnot, label %for.body, label %for.end, !dbg !6023

for.body:                                         ; preds = %for.cond
  %10 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6026
  %available = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %10, i32 0, i32 2, !dbg !6029
  %11 = load i8, i8* %available, align 4, !dbg !6029
  %tobool = trunc i8 %11 to i1, !dbg !6029
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6030

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6031
  %rate = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %12, i32 0, i32 7, !dbg !6032
  %13 = load i64, i64* %rate, align 8, !dbg !6032
  %14 = load i64*, i64** %freq.addr, align 8, !dbg !6033
  %15 = load i64, i64* %14, align 8, !dbg !6034
  %cmp2 = icmp uge i64 %13, %15, !dbg !6035
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6036

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6037
  store %struct.dev_pm_opp* %16, %struct.dev_pm_opp** %opp, align 8, !dbg !6039
  %17 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6040
  %rate3 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %17, i32 0, i32 7, !dbg !6041
  %18 = load i64, i64* %rate3, align 8, !dbg !6041
  %19 = load i64*, i64** %freq.addr, align 8, !dbg !6042
  store i64 %18, i64* %19, align 8, !dbg !6043
  %20 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6044
  call void @dev_pm_opp_get(%struct.dev_pm_opp* %20) #8, !dbg !6045
  br label %for.end, !dbg !6046

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !6047

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !6048, metadata !DIExpression()), !dbg !6050
  %21 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6050
  %node5 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %21, i32 0, i32 0, !dbg !6050
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %node5, i32 0, i32 0, !dbg !6050
  %22 = load %struct.list_head*, %struct.list_head** %next6, align 8, !dbg !6050
  %23 = bitcast %struct.list_head* %22 to i8*, !dbg !6050
  store i8* %23, i8** %__mptr4, align 8, !dbg !6050
  br label %do.body7, !dbg !6050

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !6051

do.end8:                                          ; preds = %do.body7
  %24 = load i8*, i8** %__mptr4, align 8, !dbg !6050
  %add.ptr10 = getelementptr i8, i8* %24, i64 0, !dbg !6050
  %25 = bitcast i8* %add.ptr10 to %struct.dev_pm_opp*, !dbg !6050
  store %struct.dev_pm_opp* %25, %struct.dev_pm_opp** %tmp9, align 8, !dbg !6051
  %26 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp9, align 8, !dbg !6050
  store %struct.dev_pm_opp* %26, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6024
  br label %for.cond, !dbg !6024, !llvm.loop !6053

for.end:                                          ; preds = %if.then, %for.cond
  %27 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6055
  %lock11 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %27, i32 0, i32 5, !dbg !6056
  call void @mutex_unlock(%struct.mutex* %lock11) #8, !dbg !6057
  %28 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6058
  ret %struct.dev_pm_opp* %28, !dbg !6059
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dev_pm_opp* @dev_pm_opp_find_freq_floor(%struct.device* %dev, i64* %freq) #0 !dbg !6060 {
entry:
  %retval = alloca %struct.dev_pm_opp*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %freq.addr = alloca i64*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %temp_opp = alloca %struct.dev_pm_opp*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %__mptr15 = alloca i8*, align 8
  %tmp20 = alloca %struct.dev_pm_opp*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6061, metadata !DIExpression()), !dbg !6062
  store i64* %freq, i64** %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %freq.addr, metadata !6063, metadata !DIExpression()), !dbg !6064
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !6065, metadata !DIExpression()), !dbg !6066
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %temp_opp, metadata !6067, metadata !DIExpression()), !dbg !6068
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !6069, metadata !DIExpression()), !dbg !6070
  %call = call i8* @ERR_PTR(i64 -34) #8, !dbg !6071
  %0 = bitcast i8* %call to %struct.dev_pm_opp*, !dbg !6071
  store %struct.dev_pm_opp* %0, %struct.dev_pm_opp** %opp, align 8, !dbg !6070
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6072
  %tobool = icmp ne %struct.device* %1, null, !dbg !6072
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6074

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64*, i64** %freq.addr, align 8, !dbg !6075
  %tobool1 = icmp ne i64* %2, null, !dbg !6075
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6076

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6077
  %4 = load i64*, i64** %freq.addr, align 8, !dbg !6077
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.dev_pm_opp_find_freq_floor, i64 0, i64 0), i64* %4) #9, !dbg !6077
  %call2 = call i8* @ERR_PTR(i64 -22) #8, !dbg !6079
  %5 = bitcast i8* %call2 to %struct.dev_pm_opp*, !dbg !6079
  store %struct.dev_pm_opp* %5, %struct.dev_pm_opp** %retval, align 8, !dbg !6080
  br label %return, !dbg !6080

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6081
  %call3 = call %struct.opp_table* @_find_opp_table(%struct.device* %6) #8, !dbg !6082
  store %struct.opp_table* %call3, %struct.opp_table** %opp_table, align 8, !dbg !6083
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6084
  %8 = bitcast %struct.opp_table* %7 to i8*, !dbg !6084
  %call4 = call zeroext i1 @IS_ERR(i8* %8) #8, !dbg !6086
  br i1 %call4, label %if.then5, label %if.end7, !dbg !6087

if.then5:                                         ; preds = %if.end
  %9 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6088
  %10 = bitcast %struct.opp_table* %9 to i8*, !dbg !6088
  %call6 = call i8* @ERR_CAST(i8* %10) #8, !dbg !6089
  %11 = bitcast i8* %call6 to %struct.dev_pm_opp*, !dbg !6089
  store %struct.dev_pm_opp* %11, %struct.dev_pm_opp** %retval, align 8, !dbg !6090
  br label %return, !dbg !6090

if.end7:                                          ; preds = %if.end
  %12 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6091
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %12, i32 0, i32 5, !dbg !6092
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !6093
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6094, metadata !DIExpression()), !dbg !6097
  %13 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6097
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %13, i32 0, i32 3, !dbg !6097
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %opp_list, i32 0, i32 0, !dbg !6097
  %14 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6097
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !6097
  store i8* %15, i8** %__mptr, align 8, !dbg !6097
  br label %do.body, !dbg !6097

do.body:                                          ; preds = %if.end7
  br label %do.end, !dbg !6098

do.end:                                           ; preds = %do.body
  %16 = load i8*, i8** %__mptr, align 8, !dbg !6097
  %add.ptr = getelementptr i8, i8* %16, i64 0, !dbg !6097
  %17 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !6097
  store %struct.dev_pm_opp* %17, %struct.dev_pm_opp** %tmp, align 8, !dbg !6098
  %18 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !6097
  store %struct.dev_pm_opp* %18, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6100
  br label %for.cond, !dbg !6100

for.cond:                                         ; preds = %do.end19, %do.end
  %19 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6101
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %19, i32 0, i32 0, !dbg !6101
  %20 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6101
  %opp_list8 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %20, i32 0, i32 3, !dbg !6101
  %cmp = icmp eq %struct.list_head* %node, %opp_list8, !dbg !6101
  %lnot = xor i1 %cmp, true, !dbg !6101
  br i1 %lnot, label %for.body, label %for.end, !dbg !6100

for.body:                                         ; preds = %for.cond
  %21 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6103
  %available = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %21, i32 0, i32 2, !dbg !6106
  %22 = load i8, i8* %available, align 4, !dbg !6106
  %tobool9 = trunc i8 %22 to i1, !dbg !6106
  br i1 %tobool9, label %if.then10, label %if.end14, !dbg !6107

if.then10:                                        ; preds = %for.body
  %23 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6108
  %rate = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %23, i32 0, i32 7, !dbg !6111
  %24 = load i64, i64* %rate, align 8, !dbg !6111
  %25 = load i64*, i64** %freq.addr, align 8, !dbg !6112
  %26 = load i64, i64* %25, align 8, !dbg !6113
  %cmp11 = icmp ugt i64 %24, %26, !dbg !6114
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !6115

if.then12:                                        ; preds = %if.then10
  br label %for.end, !dbg !6116

if.else:                                          ; preds = %if.then10
  %27 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6117
  store %struct.dev_pm_opp* %27, %struct.dev_pm_opp** %opp, align 8, !dbg !6118
  br label %if.end13

if.end13:                                         ; preds = %if.else
  br label %if.end14, !dbg !6119

if.end14:                                         ; preds = %if.end13, %for.body
  br label %for.inc, !dbg !6120

for.inc:                                          ; preds = %if.end14
  call void @llvm.dbg.declare(metadata i8** %__mptr15, metadata !6121, metadata !DIExpression()), !dbg !6123
  %28 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6123
  %node16 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %28, i32 0, i32 0, !dbg !6123
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %node16, i32 0, i32 0, !dbg !6123
  %29 = load %struct.list_head*, %struct.list_head** %next17, align 8, !dbg !6123
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !6123
  store i8* %30, i8** %__mptr15, align 8, !dbg !6123
  br label %do.body18, !dbg !6123

do.body18:                                        ; preds = %for.inc
  br label %do.end19, !dbg !6124

do.end19:                                         ; preds = %do.body18
  %31 = load i8*, i8** %__mptr15, align 8, !dbg !6123
  %add.ptr21 = getelementptr i8, i8* %31, i64 0, !dbg !6123
  %32 = bitcast i8* %add.ptr21 to %struct.dev_pm_opp*, !dbg !6123
  store %struct.dev_pm_opp* %32, %struct.dev_pm_opp** %tmp20, align 8, !dbg !6124
  %33 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp20, align 8, !dbg !6123
  store %struct.dev_pm_opp* %33, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6101
  br label %for.cond, !dbg !6101, !llvm.loop !6126

for.end:                                          ; preds = %if.then12, %for.cond
  %34 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6128
  %35 = bitcast %struct.dev_pm_opp* %34 to i8*, !dbg !6128
  %call22 = call zeroext i1 @IS_ERR(i8* %35) #8, !dbg !6130
  br i1 %call22, label %if.end24, label %if.then23, !dbg !6131

if.then23:                                        ; preds = %for.end
  %36 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6132
  call void @dev_pm_opp_get(%struct.dev_pm_opp* %36) #8, !dbg !6133
  br label %if.end24, !dbg !6133

if.end24:                                         ; preds = %if.then23, %for.end
  %37 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6134
  %lock25 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %37, i32 0, i32 5, !dbg !6135
  call void @mutex_unlock(%struct.mutex* %lock25) #8, !dbg !6136
  %38 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6137
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %38) #8, !dbg !6138
  %39 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6139
  %40 = bitcast %struct.dev_pm_opp* %39 to i8*, !dbg !6139
  %call26 = call zeroext i1 @IS_ERR(i8* %40) #8, !dbg !6141
  br i1 %call26, label %if.end29, label %if.then27, !dbg !6142

if.then27:                                        ; preds = %if.end24
  %41 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6143
  %rate28 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %41, i32 0, i32 7, !dbg !6144
  %42 = load i64, i64* %rate28, align 8, !dbg !6144
  %43 = load i64*, i64** %freq.addr, align 8, !dbg !6145
  store i64 %42, i64* %43, align 8, !dbg !6146
  br label %if.end29, !dbg !6147

if.end29:                                         ; preds = %if.then27, %if.end24
  %44 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6148
  store %struct.dev_pm_opp* %44, %struct.dev_pm_opp** %retval, align 8, !dbg !6149
  br label %return, !dbg !6149

return:                                           ; preds = %if.end29, %if.then5, %if.then
  %45 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %retval, align 8, !dbg !6150
  ret %struct.dev_pm_opp* %45, !dbg !6150
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dev_pm_opp* @dev_pm_opp_find_freq_ceil_by_volt(%struct.device* %dev, i64 %u_volt) #0 !dbg !6151 {
entry:
  %retval = alloca %struct.dev_pm_opp*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %u_volt.addr = alloca i64, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %temp_opp = alloca %struct.dev_pm_opp*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp21 = alloca %struct.dev_pm_opp*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6154, metadata !DIExpression()), !dbg !6155
  store i64 %u_volt, i64* %u_volt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %u_volt.addr, metadata !6156, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !6158, metadata !DIExpression()), !dbg !6159
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %temp_opp, metadata !6160, metadata !DIExpression()), !dbg !6161
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !6162, metadata !DIExpression()), !dbg !6163
  %call = call i8* @ERR_PTR(i64 -34) #8, !dbg !6164
  %0 = bitcast i8* %call to %struct.dev_pm_opp*, !dbg !6164
  store %struct.dev_pm_opp* %0, %struct.dev_pm_opp** %opp, align 8, !dbg !6163
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6165
  %tobool = icmp ne %struct.device* %1, null, !dbg !6165
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6167

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %u_volt.addr, align 8, !dbg !6168
  %tobool1 = icmp ne i64 %2, 0, !dbg !6168
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6169

if.then:                                          ; preds = %lor.lhs.false, %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6170
  %4 = load i64, i64* %u_volt.addr, align 8, !dbg !6170
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.dev_pm_opp_find_freq_ceil_by_volt, i64 0, i64 0), i64 %4) #9, !dbg !6170
  %call2 = call i8* @ERR_PTR(i64 -22) #8, !dbg !6172
  %5 = bitcast i8* %call2 to %struct.dev_pm_opp*, !dbg !6172
  store %struct.dev_pm_opp* %5, %struct.dev_pm_opp** %retval, align 8, !dbg !6173
  br label %return, !dbg !6173

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6174
  %call3 = call %struct.opp_table* @_find_opp_table(%struct.device* %6) #8, !dbg !6175
  store %struct.opp_table* %call3, %struct.opp_table** %opp_table, align 8, !dbg !6176
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6177
  %8 = bitcast %struct.opp_table* %7 to i8*, !dbg !6177
  %call4 = call zeroext i1 @IS_ERR(i8* %8) #8, !dbg !6179
  br i1 %call4, label %if.then5, label %if.end7, !dbg !6180

if.then5:                                         ; preds = %if.end
  %9 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6181
  %10 = bitcast %struct.opp_table* %9 to i8*, !dbg !6181
  %call6 = call i8* @ERR_CAST(i8* %10) #8, !dbg !6182
  %11 = bitcast i8* %call6 to %struct.dev_pm_opp*, !dbg !6182
  store %struct.dev_pm_opp* %11, %struct.dev_pm_opp** %retval, align 8, !dbg !6183
  br label %return, !dbg !6183

if.end7:                                          ; preds = %if.end
  %12 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6184
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %12, i32 0, i32 5, !dbg !6185
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !6186
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6187, metadata !DIExpression()), !dbg !6190
  %13 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6190
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %13, i32 0, i32 3, !dbg !6190
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %opp_list, i32 0, i32 0, !dbg !6190
  %14 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6190
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !6190
  store i8* %15, i8** %__mptr, align 8, !dbg !6190
  br label %do.body, !dbg !6190

do.body:                                          ; preds = %if.end7
  br label %do.end, !dbg !6191

do.end:                                           ; preds = %do.body
  %16 = load i8*, i8** %__mptr, align 8, !dbg !6190
  %add.ptr = getelementptr i8, i8* %16, i64 0, !dbg !6190
  %17 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !6190
  store %struct.dev_pm_opp* %17, %struct.dev_pm_opp** %tmp, align 8, !dbg !6191
  %18 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !6190
  store %struct.dev_pm_opp* %18, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6193
  br label %for.cond, !dbg !6193

for.cond:                                         ; preds = %do.end20, %do.end
  %19 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6194
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %19, i32 0, i32 0, !dbg !6194
  %20 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6194
  %opp_list8 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %20, i32 0, i32 3, !dbg !6194
  %cmp = icmp eq %struct.list_head* %node, %opp_list8, !dbg !6194
  %lnot = xor i1 %cmp, true, !dbg !6194
  br i1 %lnot, label %for.body, label %for.end, !dbg !6193

for.body:                                         ; preds = %for.cond
  %21 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6196
  %available = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %21, i32 0, i32 2, !dbg !6199
  %22 = load i8, i8* %available, align 4, !dbg !6199
  %tobool9 = trunc i8 %22 to i1, !dbg !6199
  br i1 %tobool9, label %if.then10, label %if.end15, !dbg !6200

if.then10:                                        ; preds = %for.body
  %23 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6201
  %supplies = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %23, i32 0, i32 9, !dbg !6204
  %24 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies, align 8, !dbg !6204
  %arrayidx = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %24, i64 0, !dbg !6201
  %u_volt11 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx, i32 0, i32 0, !dbg !6205
  %25 = load i64, i64* %u_volt11, align 8, !dbg !6205
  %26 = load i64, i64* %u_volt.addr, align 8, !dbg !6206
  %cmp12 = icmp ugt i64 %25, %26, !dbg !6207
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !6208

if.then13:                                        ; preds = %if.then10
  br label %for.end, !dbg !6209

if.end14:                                         ; preds = %if.then10
  %27 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6210
  store %struct.dev_pm_opp* %27, %struct.dev_pm_opp** %opp, align 8, !dbg !6211
  br label %if.end15, !dbg !6212

if.end15:                                         ; preds = %if.end14, %for.body
  br label %for.inc, !dbg !6213

for.inc:                                          ; preds = %if.end15
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !6214, metadata !DIExpression()), !dbg !6216
  %28 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6216
  %node17 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %28, i32 0, i32 0, !dbg !6216
  %next18 = getelementptr inbounds %struct.list_head, %struct.list_head* %node17, i32 0, i32 0, !dbg !6216
  %29 = load %struct.list_head*, %struct.list_head** %next18, align 8, !dbg !6216
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !6216
  store i8* %30, i8** %__mptr16, align 8, !dbg !6216
  br label %do.body19, !dbg !6216

do.body19:                                        ; preds = %for.inc
  br label %do.end20, !dbg !6217

do.end20:                                         ; preds = %do.body19
  %31 = load i8*, i8** %__mptr16, align 8, !dbg !6216
  %add.ptr22 = getelementptr i8, i8* %31, i64 0, !dbg !6216
  %32 = bitcast i8* %add.ptr22 to %struct.dev_pm_opp*, !dbg !6216
  store %struct.dev_pm_opp* %32, %struct.dev_pm_opp** %tmp21, align 8, !dbg !6217
  %33 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp21, align 8, !dbg !6216
  store %struct.dev_pm_opp* %33, %struct.dev_pm_opp** %temp_opp, align 8, !dbg !6194
  br label %for.cond, !dbg !6194, !llvm.loop !6219

for.end:                                          ; preds = %if.then13, %for.cond
  %34 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6221
  %35 = bitcast %struct.dev_pm_opp* %34 to i8*, !dbg !6221
  %call23 = call zeroext i1 @IS_ERR(i8* %35) #8, !dbg !6223
  br i1 %call23, label %if.end25, label %if.then24, !dbg !6224

if.then24:                                        ; preds = %for.end
  %36 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6225
  call void @dev_pm_opp_get(%struct.dev_pm_opp* %36) #8, !dbg !6226
  br label %if.end25, !dbg !6226

if.end25:                                         ; preds = %if.then24, %for.end
  %37 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6227
  %lock26 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %37, i32 0, i32 5, !dbg !6228
  call void @mutex_unlock(%struct.mutex* %lock26) #8, !dbg !6229
  %38 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6230
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %38) #8, !dbg !6231
  %39 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6232
  store %struct.dev_pm_opp* %39, %struct.dev_pm_opp** %retval, align 8, !dbg !6233
  br label %return, !dbg !6233

return:                                           ; preds = %if.end25, %if.then5, %if.then
  %40 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %retval, align 8, !dbg !6234
  ret %struct.dev_pm_opp* %40, !dbg !6234
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_pm_opp_set_bw(%struct.device* %dev, %struct.dev_pm_opp* %opp) #0 !dbg !6235 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6238, metadata !DIExpression()), !dbg !6239
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !6240, metadata !DIExpression()), !dbg !6241
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !6242, metadata !DIExpression()), !dbg !6243
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6244, metadata !DIExpression()), !dbg !6245
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6246
  %call = call %struct.opp_table* @_find_opp_table(%struct.device* %0) #8, !dbg !6247
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !6248
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6249
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !6249
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !6251
  br i1 %call1, label %if.then, label %if.end, !dbg !6252

if.then:                                          ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6253
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.dev_pm_opp_set_bw, i64 0, i64 0)) #9, !dbg !6253
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6255
  %5 = bitcast %struct.opp_table* %4 to i8*, !dbg !6255
  %call2 = call i64 @PTR_ERR(i8* %5) #8, !dbg !6256
  %conv = trunc i64 %call2 to i32, !dbg !6256
  store i32 %conv, i32* %retval, align 4, !dbg !6257
  br label %return, !dbg !6257

if.end:                                           ; preds = %entry
  %6 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !6258
  %tobool = icmp ne %struct.dev_pm_opp* %6, null, !dbg !6258
  br i1 %tobool, label %if.then3, label %if.else, !dbg !6260

if.then3:                                         ; preds = %if.end
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6261
  %8 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !6262
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6263
  %call4 = call i32 @_set_opp_bw(%struct.opp_table* %7, %struct.dev_pm_opp* %8, %struct.device* %9, i1 zeroext false) #8, !dbg !6264
  store i32 %call4, i32* %ret, align 4, !dbg !6265
  br label %if.end6, !dbg !6266

if.else:                                          ; preds = %if.end
  %10 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6267
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6268
  %call5 = call i32 @_set_opp_bw(%struct.opp_table* %10, %struct.dev_pm_opp* null, %struct.device* %11, i1 zeroext true) #8, !dbg !6269
  store i32 %call5, i32* %ret, align 4, !dbg !6270
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  %12 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6271
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %12) #8, !dbg !6272
  %13 = load i32, i32* %ret, align 4, !dbg !6273
  store i32 %13, i32* %retval, align 4, !dbg !6274
  br label %return, !dbg !6274

return:                                           ; preds = %if.end6, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !6275
  ret i32 %14, !dbg !6275
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_set_opp_bw(%struct.opp_table* %opp_table, %struct.dev_pm_opp* %opp, %struct.device* %dev, i1 zeroext %remove) #0 !dbg !6276 {
entry:
  %retval = alloca i32, align 4
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %remove.addr = alloca i8, align 1
  %avg = alloca i32, align 4
  %peak = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !6281, metadata !DIExpression()), !dbg !6282
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !6283, metadata !DIExpression()), !dbg !6284
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6285, metadata !DIExpression()), !dbg !6286
  %frombool = zext i1 %remove to i8
  store i8 %frombool, i8* %remove.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %remove.addr, metadata !6287, metadata !DIExpression()), !dbg !6288
  call void @llvm.dbg.declare(metadata i32* %avg, metadata !6289, metadata !DIExpression()), !dbg !6290
  call void @llvm.dbg.declare(metadata i32* %peak, metadata !6291, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6293, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6295, metadata !DIExpression()), !dbg !6296
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6297
  %paths = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 22, !dbg !6299
  %1 = load %struct.icc_path**, %struct.icc_path*** %paths, align 8, !dbg !6299
  %tobool = icmp ne %struct.icc_path** %1, null, !dbg !6297
  br i1 %tobool, label %if.end, label %if.then, !dbg !6300

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6301
  br label %return, !dbg !6301

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !6302
  br label %for.cond, !dbg !6304

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !6305
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6307
  %path_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %3, i32 0, i32 23, !dbg !6308
  %4 = load i32, i32* %path_count, align 8, !dbg !6308
  %cmp = icmp ult i32 %2, %4, !dbg !6309
  br i1 %cmp, label %for.body, label %for.end, !dbg !6310

for.body:                                         ; preds = %for.cond
  %5 = load i8, i8* %remove.addr, align 1, !dbg !6311
  %tobool1 = trunc i8 %5 to i1, !dbg !6311
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !6314

if.then2:                                         ; preds = %for.body
  store i32 0, i32* %avg, align 4, !dbg !6315
  store i32 0, i32* %peak, align 4, !dbg !6317
  br label %if.end8, !dbg !6318

if.else:                                          ; preds = %for.body
  %6 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !6319
  %bandwidth = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %6, i32 0, i32 10, !dbg !6321
  %7 = load %struct.dev_pm_opp_icc_bw*, %struct.dev_pm_opp_icc_bw** %bandwidth, align 8, !dbg !6321
  %8 = load i32, i32* %i, align 4, !dbg !6322
  %idxprom = sext i32 %8 to i64, !dbg !6319
  %arrayidx = getelementptr %struct.dev_pm_opp_icc_bw, %struct.dev_pm_opp_icc_bw* %7, i64 %idxprom, !dbg !6319
  %avg3 = getelementptr inbounds %struct.dev_pm_opp_icc_bw, %struct.dev_pm_opp_icc_bw* %arrayidx, i32 0, i32 0, !dbg !6323
  %9 = load i32, i32* %avg3, align 4, !dbg !6323
  store i32 %9, i32* %avg, align 4, !dbg !6324
  %10 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !6325
  %bandwidth4 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %10, i32 0, i32 10, !dbg !6326
  %11 = load %struct.dev_pm_opp_icc_bw*, %struct.dev_pm_opp_icc_bw** %bandwidth4, align 8, !dbg !6326
  %12 = load i32, i32* %i, align 4, !dbg !6327
  %idxprom5 = sext i32 %12 to i64, !dbg !6325
  %arrayidx6 = getelementptr %struct.dev_pm_opp_icc_bw, %struct.dev_pm_opp_icc_bw* %11, i64 %idxprom5, !dbg !6325
  %peak7 = getelementptr inbounds %struct.dev_pm_opp_icc_bw, %struct.dev_pm_opp_icc_bw* %arrayidx6, i32 0, i32 1, !dbg !6328
  %13 = load i32, i32* %peak7, align 4, !dbg !6328
  store i32 %13, i32* %peak, align 4, !dbg !6329
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then2
  %14 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6330
  %paths9 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %14, i32 0, i32 22, !dbg !6331
  %15 = load %struct.icc_path**, %struct.icc_path*** %paths9, align 8, !dbg !6331
  %16 = load i32, i32* %i, align 4, !dbg !6332
  %idxprom10 = sext i32 %16 to i64, !dbg !6330
  %arrayidx11 = getelementptr %struct.icc_path*, %struct.icc_path** %15, i64 %idxprom10, !dbg !6330
  %17 = load %struct.icc_path*, %struct.icc_path** %arrayidx11, align 8, !dbg !6330
  %18 = load i32, i32* %avg, align 4, !dbg !6333
  %19 = load i32, i32* %peak, align 4, !dbg !6334
  %call = call i32 @icc_set_bw(%struct.icc_path* %17, i32 %18, i32 %19) #8, !dbg !6335
  store i32 %call, i32* %ret, align 4, !dbg !6336
  %20 = load i32, i32* %ret, align 4, !dbg !6337
  %tobool12 = icmp ne i32 %20, 0, !dbg !6337
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !6339

if.then13:                                        ; preds = %if.end8
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6340
  %22 = load i8, i8* %remove.addr, align 1, !dbg !6340
  %tobool14 = trunc i8 %22 to i1, !dbg !6340
  %23 = zext i1 %tobool14 to i64, !dbg !6340
  %cond = select i1 %tobool14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i64 0, i64 0), !dbg !6340
  %24 = load i32, i32* %i, align 4, !dbg !6340
  %25 = load i32, i32* %ret, align 4, !dbg !6340
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %21, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i8* %cond, i32 %24, i32 %25) #9, !dbg !6340
  %26 = load i32, i32* %ret, align 4, !dbg !6342
  store i32 %26, i32* %retval, align 4, !dbg !6343
  br label %return, !dbg !6343

if.end15:                                         ; preds = %if.end8
  br label %for.inc, !dbg !6344

for.inc:                                          ; preds = %if.end15
  %27 = load i32, i32* %i, align 4, !dbg !6345
  %inc = add i32 %27, 1, !dbg !6345
  store i32 %inc, i32* %i, align 4, !dbg !6345
  br label %for.cond, !dbg !6346, !llvm.loop !6347

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6349
  br label %return, !dbg !6349

return:                                           ; preds = %for.end, %if.then13, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !6350
  ret i32 %28, !dbg !6350
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_pm_opp_set_rate(%struct.device* %dev, i64 %target_freq) #0 !dbg !6351 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %target_freq.addr = alloca i64, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %freq = alloca i64, align 8
  %old_freq = alloca i64, align 8
  %temp_freq = alloca i64, align 8
  %old_opp = alloca %struct.dev_pm_opp*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %clk = alloca %struct.clk*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6354, metadata !DIExpression()), !dbg !6355
  store i64 %target_freq, i64* %target_freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %target_freq.addr, metadata !6356, metadata !DIExpression()), !dbg !6357
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !6358, metadata !DIExpression()), !dbg !6359
  call void @llvm.dbg.declare(metadata i64* %freq, metadata !6360, metadata !DIExpression()), !dbg !6361
  call void @llvm.dbg.declare(metadata i64* %old_freq, metadata !6362, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.declare(metadata i64* %temp_freq, metadata !6364, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %old_opp, metadata !6366, metadata !DIExpression()), !dbg !6367
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !6368, metadata !DIExpression()), !dbg !6369
  call void @llvm.dbg.declare(metadata %struct.clk** %clk, metadata !6370, metadata !DIExpression()), !dbg !6371
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6372, metadata !DIExpression()), !dbg !6373
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6374
  %call = call %struct.opp_table* @_find_opp_table(%struct.device* %0) #8, !dbg !6375
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !6376
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6377
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !6377
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !6379
  br i1 %call1, label %if.then, label %if.end, !dbg !6380

if.then:                                          ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6381
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dev_pm_opp_set_rate, i64 0, i64 0)) #9, !dbg !6381
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6383
  %5 = bitcast %struct.opp_table* %4 to i8*, !dbg !6383
  %call2 = call i64 @PTR_ERR(i8* %5) #8, !dbg !6384
  %conv = trunc i64 %call2 to i32, !dbg !6384
  store i32 %conv, i32* %retval, align 4, !dbg !6385
  br label %return, !dbg !6385

if.end:                                           ; preds = %entry
  %6 = load i64, i64* %target_freq.addr, align 8, !dbg !6386
  %tobool = icmp ne i64 %6, 0, !dbg !6386
  %lnot = xor i1 %tobool, true, !dbg !6386
  %lnot3 = xor i1 %lnot, true, !dbg !6386
  %lnot4 = xor i1 %lnot3, true, !dbg !6386
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !6386
  %conv5 = sext i32 %lnot.ext to i64, !dbg !6386
  %tobool6 = icmp ne i64 %conv5, 0, !dbg !6386
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !6388

if.then7:                                         ; preds = %if.end
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6389
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6391
  %call8 = call i32 @_opp_set_rate_zero(%struct.device* %7, %struct.opp_table* %8) #8, !dbg !6392
  store i32 %call8, i32* %ret, align 4, !dbg !6393
  br label %put_opp_table, !dbg !6394

if.end9:                                          ; preds = %if.end
  %9 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6395
  %clk10 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %9, i32 0, i32 19, !dbg !6396
  %10 = load %struct.clk*, %struct.clk** %clk10, align 8, !dbg !6396
  store %struct.clk* %10, %struct.clk** %clk, align 8, !dbg !6397
  %11 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !6398
  %12 = bitcast %struct.clk* %11 to i8*, !dbg !6398
  %call11 = call zeroext i1 @IS_ERR(i8* %12) #8, !dbg !6400
  br i1 %call11, label %if.then12, label %if.end15, !dbg !6401

if.then12:                                        ; preds = %if.end9
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6402
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %13, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dev_pm_opp_set_rate, i64 0, i64 0)) #9, !dbg !6402
  %14 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !6404
  %15 = bitcast %struct.clk* %14 to i8*, !dbg !6404
  %call13 = call i64 @PTR_ERR(i8* %15) #8, !dbg !6405
  %conv14 = trunc i64 %call13 to i32, !dbg !6405
  store i32 %conv14, i32* %ret, align 4, !dbg !6406
  br label %put_opp_table, !dbg !6407

if.end15:                                         ; preds = %if.end9
  %16 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !6408
  %17 = load i64, i64* %target_freq.addr, align 8, !dbg !6409
  %call16 = call i64 @clk_round_rate(%struct.clk* %16, i64 %17) #8, !dbg !6410
  store i64 %call16, i64* %freq, align 8, !dbg !6411
  %18 = load i64, i64* %freq, align 8, !dbg !6412
  %cmp = icmp sle i64 %18, 0, !dbg !6414
  br i1 %cmp, label %if.then18, label %if.end19, !dbg !6415

if.then18:                                        ; preds = %if.end15
  %19 = load i64, i64* %target_freq.addr, align 8, !dbg !6416
  store i64 %19, i64* %freq, align 8, !dbg !6417
  br label %if.end19, !dbg !6418

if.end19:                                         ; preds = %if.then18, %if.end15
  %20 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !6419
  %call20 = call i64 @clk_get_rate(%struct.clk* %20) #8, !dbg !6420
  store i64 %call20, i64* %old_freq, align 8, !dbg !6421
  %21 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6422
  %enabled = getelementptr inbounds %struct.opp_table, %struct.opp_table* %21, i32 0, i32 24, !dbg !6424
  %22 = load i8, i8* %enabled, align 4, !dbg !6424
  %tobool21 = trunc i8 %22 to i1, !dbg !6424
  br i1 %tobool21, label %land.lhs.true, label %if.end26, !dbg !6425

land.lhs.true:                                    ; preds = %if.end19
  %23 = load i64, i64* %old_freq, align 8, !dbg !6426
  %24 = load i64, i64* %freq, align 8, !dbg !6427
  %cmp23 = icmp eq i64 %23, %24, !dbg !6428
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !6429

if.then25:                                        ; preds = %land.lhs.true
  store i32 0, i32* %ret, align 4, !dbg !6430
  br label %put_opp_table, !dbg !6432

if.end26:                                         ; preds = %land.lhs.true, %if.end19
  %25 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6433
  %call27 = call i32 @_get_opp_count(%struct.opp_table* %25) #8, !dbg !6435
  %tobool28 = icmp ne i32 %call27, 0, !dbg !6435
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !6436

if.then29:                                        ; preds = %if.end26
  %26 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6437
  %27 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !6439
  %28 = load i64, i64* %freq, align 8, !dbg !6440
  %call30 = call i32 @_generic_set_opp_clk_only(%struct.device* %26, %struct.clk* %27, i64 %28) #8, !dbg !6441
  store i32 %call30, i32* %ret, align 4, !dbg !6442
  br label %put_opp_table, !dbg !6443

if.end31:                                         ; preds = %if.end26
  %29 = load i64, i64* %old_freq, align 8, !dbg !6444
  store i64 %29, i64* %temp_freq, align 8, !dbg !6445
  %30 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6446
  %call32 = call %struct.dev_pm_opp* @_find_freq_ceil(%struct.opp_table* %30, i64* %temp_freq) #8, !dbg !6447
  store %struct.dev_pm_opp* %call32, %struct.dev_pm_opp** %old_opp, align 8, !dbg !6448
  %31 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %old_opp, align 8, !dbg !6449
  %32 = bitcast %struct.dev_pm_opp* %31 to i8*, !dbg !6449
  %call33 = call zeroext i1 @IS_ERR(i8* %32) #8, !dbg !6451
  br i1 %call33, label %if.then34, label %if.end36, !dbg !6452

if.then34:                                        ; preds = %if.end31
  %33 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6453
  %34 = load i64, i64* %old_freq, align 8, !dbg !6453
  %35 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %old_opp, align 8, !dbg !6453
  %36 = bitcast %struct.dev_pm_opp* %35 to i8*, !dbg !6453
  %call35 = call i64 @PTR_ERR(i8* %36) #8, !dbg !6453
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %33, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dev_pm_opp_set_rate, i64 0, i64 0), i64 %34, i64 %call35) #9, !dbg !6453
  br label %if.end36, !dbg !6455

if.end36:                                         ; preds = %if.then34, %if.end31
  %37 = load i64, i64* %freq, align 8, !dbg !6456
  store i64 %37, i64* %temp_freq, align 8, !dbg !6457
  %38 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6458
  %call37 = call %struct.dev_pm_opp* @_find_freq_ceil(%struct.opp_table* %38, i64* %temp_freq) #8, !dbg !6459
  store %struct.dev_pm_opp* %call37, %struct.dev_pm_opp** %opp, align 8, !dbg !6460
  %39 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6461
  %40 = bitcast %struct.dev_pm_opp* %39 to i8*, !dbg !6461
  %call38 = call zeroext i1 @IS_ERR(i8* %40) #8, !dbg !6463
  br i1 %call38, label %if.then39, label %if.end42, !dbg !6464

if.then39:                                        ; preds = %if.end36
  %41 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6465
  %42 = bitcast %struct.dev_pm_opp* %41 to i8*, !dbg !6465
  %call40 = call i64 @PTR_ERR(i8* %42) #8, !dbg !6467
  %conv41 = trunc i64 %call40 to i32, !dbg !6467
  store i32 %conv41, i32* %ret, align 4, !dbg !6468
  %43 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6469
  %44 = load i64, i64* %freq, align 8, !dbg !6469
  %45 = load i32, i32* %ret, align 4, !dbg !6469
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %43, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dev_pm_opp_set_rate, i64 0, i64 0), i64 %44, i32 %45) #9, !dbg !6469
  br label %put_old_opp, !dbg !6470

if.end42:                                         ; preds = %if.end36
  %46 = load i64, i64* %freq, align 8, !dbg !6471
  %47 = load i64, i64* %old_freq, align 8, !dbg !6473
  %cmp43 = icmp uge i64 %46, %47, !dbg !6474
  br i1 %cmp43, label %if.then45, label %if.end50, !dbg !6475

if.then45:                                        ; preds = %if.end42
  %48 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6476
  %49 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6478
  %50 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6479
  %call46 = call i32 @_set_required_opps(%struct.device* %48, %struct.opp_table* %49, %struct.dev_pm_opp* %50, i1 zeroext true) #8, !dbg !6480
  store i32 %call46, i32* %ret, align 4, !dbg !6481
  %51 = load i32, i32* %ret, align 4, !dbg !6482
  %tobool47 = icmp ne i32 %51, 0, !dbg !6482
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !6484

if.then48:                                        ; preds = %if.then45
  br label %put_opp, !dbg !6485

if.end49:                                         ; preds = %if.then45
  br label %if.end50, !dbg !6486

if.end50:                                         ; preds = %if.end49, %if.end42
  %52 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6487
  %set_opp = getelementptr inbounds %struct.opp_table, %struct.opp_table* %52, i32 0, i32 27, !dbg !6489
  %53 = load i32 (%struct.dev_pm_set_opp_data*)*, i32 (%struct.dev_pm_set_opp_data*)** %set_opp, align 8, !dbg !6489
  %tobool51 = icmp ne i32 (%struct.dev_pm_set_opp_data*)* %53, null, !dbg !6487
  br i1 %tobool51, label %if.then52, label %if.else, !dbg !6490

if.then52:                                        ; preds = %if.end50
  %54 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6491
  %55 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6493
  %56 = load i64, i64* %old_freq, align 8, !dbg !6494
  %57 = load i64, i64* %freq, align 8, !dbg !6495
  %58 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %old_opp, align 8, !dbg !6496
  %59 = bitcast %struct.dev_pm_opp* %58 to i8*, !dbg !6496
  %call53 = call zeroext i1 @IS_ERR(i8* %59) #8, !dbg !6497
  br i1 %call53, label %cond.true, label %cond.false, !dbg !6497

cond.true:                                        ; preds = %if.then52
  br label %cond.end, !dbg !6497

cond.false:                                       ; preds = %if.then52
  %60 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %old_opp, align 8, !dbg !6498
  %supplies = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %60, i32 0, i32 9, !dbg !6499
  %61 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies, align 8, !dbg !6499
  br label %cond.end, !dbg !6497

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.dev_pm_opp_supply* [ null, %cond.true ], [ %61, %cond.false ], !dbg !6497
  %62 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6500
  %supplies55 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %62, i32 0, i32 9, !dbg !6501
  %63 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies55, align 8, !dbg !6501
  %call56 = call i32 @_set_opp_custom(%struct.opp_table* %54, %struct.device* %55, i64 %56, i64 %57, %struct.dev_pm_opp_supply* %cond, %struct.dev_pm_opp_supply* %63) #8, !dbg !6502
  store i32 %call56, i32* %ret, align 4, !dbg !6503
  br label %if.end71, !dbg !6504

if.else:                                          ; preds = %if.end50
  %64 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6505
  %regulators = getelementptr inbounds %struct.opp_table, %struct.opp_table* %64, i32 0, i32 20, !dbg !6507
  %65 = load %struct.regulator**, %struct.regulator*** %regulators, align 8, !dbg !6507
  %tobool57 = icmp ne %struct.regulator** %65, null, !dbg !6505
  br i1 %tobool57, label %if.then58, label %if.else68, !dbg !6508

if.then58:                                        ; preds = %if.else
  %66 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6509
  %67 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6511
  %68 = load i64, i64* %old_freq, align 8, !dbg !6512
  %69 = load i64, i64* %freq, align 8, !dbg !6513
  %70 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %old_opp, align 8, !dbg !6514
  %71 = bitcast %struct.dev_pm_opp* %70 to i8*, !dbg !6514
  %call59 = call zeroext i1 @IS_ERR(i8* %71) #8, !dbg !6515
  br i1 %call59, label %cond.true61, label %cond.false62, !dbg !6515

cond.true61:                                      ; preds = %if.then58
  br label %cond.end64, !dbg !6515

cond.false62:                                     ; preds = %if.then58
  %72 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %old_opp, align 8, !dbg !6516
  %supplies63 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %72, i32 0, i32 9, !dbg !6517
  %73 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies63, align 8, !dbg !6517
  br label %cond.end64, !dbg !6515

cond.end64:                                       ; preds = %cond.false62, %cond.true61
  %cond65 = phi %struct.dev_pm_opp_supply* [ null, %cond.true61 ], [ %73, %cond.false62 ], !dbg !6515
  %74 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6518
  %supplies66 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %74, i32 0, i32 9, !dbg !6519
  %75 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies66, align 8, !dbg !6519
  %call67 = call i32 @_generic_set_opp_regulator(%struct.opp_table* %66, %struct.device* %67, i64 %68, i64 %69, %struct.dev_pm_opp_supply* %cond65, %struct.dev_pm_opp_supply* %75) #8, !dbg !6520
  store i32 %call67, i32* %ret, align 4, !dbg !6521
  br label %if.end70, !dbg !6522

if.else68:                                        ; preds = %if.else
  %76 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6523
  %77 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !6525
  %78 = load i64, i64* %freq, align 8, !dbg !6526
  %call69 = call i32 @_generic_set_opp_clk_only(%struct.device* %76, %struct.clk* %77, i64 %78) #8, !dbg !6527
  store i32 %call69, i32* %ret, align 4, !dbg !6528
  br label %if.end70

if.end70:                                         ; preds = %if.else68, %cond.end64
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %cond.end
  %79 = load i32, i32* %ret, align 4, !dbg !6529
  %tobool72 = icmp ne i32 %79, 0, !dbg !6529
  br i1 %tobool72, label %if.end81, label %land.lhs.true73, !dbg !6531

land.lhs.true73:                                  ; preds = %if.end71
  %80 = load i64, i64* %freq, align 8, !dbg !6532
  %81 = load i64, i64* %old_freq, align 8, !dbg !6533
  %cmp74 = icmp ult i64 %80, %81, !dbg !6534
  br i1 %cmp74, label %if.then76, label %if.end81, !dbg !6535

if.then76:                                        ; preds = %land.lhs.true73
  %82 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6536
  %83 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6538
  %84 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6539
  %call77 = call i32 @_set_required_opps(%struct.device* %82, %struct.opp_table* %83, %struct.dev_pm_opp* %84, i1 zeroext false) #8, !dbg !6540
  store i32 %call77, i32* %ret, align 4, !dbg !6541
  %85 = load i32, i32* %ret, align 4, !dbg !6542
  %tobool78 = icmp ne i32 %85, 0, !dbg !6542
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !6544

if.then79:                                        ; preds = %if.then76
  %86 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6545
  %87 = load i32, i32* %ret, align 4, !dbg !6545
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %86, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i32 %87) #9, !dbg !6545
  br label %if.end80, !dbg !6545

if.end80:                                         ; preds = %if.then79, %if.then76
  br label %if.end81, !dbg !6546

if.end81:                                         ; preds = %if.end80, %land.lhs.true73, %if.end71
  %88 = load i32, i32* %ret, align 4, !dbg !6547
  %tobool82 = icmp ne i32 %88, 0, !dbg !6547
  br i1 %tobool82, label %if.end89, label %if.then83, !dbg !6549

if.then83:                                        ; preds = %if.end81
  %89 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6550
  %90 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6552
  %91 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6553
  %call84 = call i32 @_set_opp_bw(%struct.opp_table* %89, %struct.dev_pm_opp* %90, %struct.device* %91, i1 zeroext false) #8, !dbg !6554
  store i32 %call84, i32* %ret, align 4, !dbg !6555
  %92 = load i32, i32* %ret, align 4, !dbg !6556
  %tobool85 = icmp ne i32 %92, 0, !dbg !6556
  br i1 %tobool85, label %if.end88, label %if.then86, !dbg !6558

if.then86:                                        ; preds = %if.then83
  %93 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6559
  %enabled87 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %93, i32 0, i32 24, !dbg !6560
  store i8 1, i8* %enabled87, align 4, !dbg !6561
  br label %if.end88, !dbg !6559

if.end88:                                         ; preds = %if.then86, %if.then83
  br label %if.end89, !dbg !6562

if.end89:                                         ; preds = %if.end88, %if.end81
  br label %put_opp, !dbg !6547

put_opp:                                          ; preds = %if.end89, %if.then48
  call void @llvm.dbg.label(metadata !6563), !dbg !6564
  %94 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !6565
  call void @dev_pm_opp_put(%struct.dev_pm_opp* %94) #8, !dbg !6566
  br label %put_old_opp, !dbg !6566

put_old_opp:                                      ; preds = %put_opp, %if.then39
  call void @llvm.dbg.label(metadata !6567), !dbg !6568
  %95 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %old_opp, align 8, !dbg !6569
  %96 = bitcast %struct.dev_pm_opp* %95 to i8*, !dbg !6569
  %call90 = call zeroext i1 @IS_ERR(i8* %96) #8, !dbg !6571
  br i1 %call90, label %if.end92, label %if.then91, !dbg !6572

if.then91:                                        ; preds = %put_old_opp
  %97 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %old_opp, align 8, !dbg !6573
  call void @dev_pm_opp_put(%struct.dev_pm_opp* %97) #8, !dbg !6574
  br label %if.end92, !dbg !6574

if.end92:                                         ; preds = %if.then91, %put_old_opp
  br label %put_opp_table, !dbg !6575

put_opp_table:                                    ; preds = %if.end92, %if.then29, %if.then25, %if.then12, %if.then7
  call void @llvm.dbg.label(metadata !6576), !dbg !6577
  %98 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6578
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %98) #8, !dbg !6579
  %99 = load i32, i32* %ret, align 4, !dbg !6580
  store i32 %99, i32* %retval, align 4, !dbg !6581
  br label %return, !dbg !6581

return:                                           ; preds = %put_opp_table, %if.then
  %100 = load i32, i32* %retval, align 4, !dbg !6582
  ret i32 %100, !dbg !6582
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_opp_set_rate_zero(%struct.device* %dev, %struct.opp_table* %opp_table) #0 !dbg !6583 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6586, metadata !DIExpression()), !dbg !6587
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !6588, metadata !DIExpression()), !dbg !6589
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6590, metadata !DIExpression()), !dbg !6591
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6592
  %enabled = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 24, !dbg !6594
  %1 = load i8, i8* %enabled, align 4, !dbg !6594
  %tobool = trunc i8 %1 to i1, !dbg !6594
  br i1 %tobool, label %if.end, label %if.then, !dbg !6595

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6596
  br label %return, !dbg !6596

if.end:                                           ; preds = %entry
  %2 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6597
  %call = call i32 @_get_opp_count(%struct.opp_table* %2) #8, !dbg !6599
  %tobool1 = icmp ne i32 %call, 0, !dbg !6599
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6600

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6601
  br label %return, !dbg !6601

if.end3:                                          ; preds = %if.end
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6602
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6603
  %call4 = call i32 @_set_opp_bw(%struct.opp_table* %3, %struct.dev_pm_opp* null, %struct.device* %4, i1 zeroext true) #8, !dbg !6604
  store i32 %call4, i32* %ret, align 4, !dbg !6605
  %5 = load i32, i32* %ret, align 4, !dbg !6606
  %tobool5 = icmp ne i32 %5, 0, !dbg !6606
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !6608

if.then6:                                         ; preds = %if.end3
  %6 = load i32, i32* %ret, align 4, !dbg !6609
  store i32 %6, i32* %retval, align 4, !dbg !6610
  br label %return, !dbg !6610

if.end7:                                          ; preds = %if.end3
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6611
  %regulators = getelementptr inbounds %struct.opp_table, %struct.opp_table* %7, i32 0, i32 20, !dbg !6613
  %8 = load %struct.regulator**, %struct.regulator*** %regulators, align 8, !dbg !6613
  %tobool8 = icmp ne %struct.regulator** %8, null, !dbg !6611
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !6614

if.then9:                                         ; preds = %if.end7
  %9 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6615
  %regulators10 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %9, i32 0, i32 20, !dbg !6616
  %10 = load %struct.regulator**, %struct.regulator*** %regulators10, align 8, !dbg !6616
  %arrayidx = getelementptr %struct.regulator*, %struct.regulator** %10, i64 0, !dbg !6615
  %11 = load %struct.regulator*, %struct.regulator** %arrayidx, align 8, !dbg !6615
  %call11 = call i32 @regulator_disable(%struct.regulator* %11) #8, !dbg !6617
  br label %if.end12, !dbg !6617

if.end12:                                         ; preds = %if.then9, %if.end7
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6618
  %13 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6619
  %call13 = call i32 @_set_required_opps(%struct.device* %12, %struct.opp_table* %13, %struct.dev_pm_opp* null, i1 zeroext false) #8, !dbg !6620
  store i32 %call13, i32* %ret, align 4, !dbg !6621
  %14 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6622
  %enabled14 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %14, i32 0, i32 24, !dbg !6623
  store i8 0, i8* %enabled14, align 4, !dbg !6624
  %15 = load i32, i32* %ret, align 4, !dbg !6625
  store i32 %15, i32* %retval, align 4, !dbg !6626
  br label %return, !dbg !6626

return:                                           ; preds = %if.end12, %if.then6, %if.then2, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !6627
  ret i32 %16, !dbg !6627
}

; Function Attrs: noredzone
declare dso_local i64 @clk_round_rate(%struct.clk*, i64) #3

; Function Attrs: noredzone
declare dso_local i64 @clk_get_rate(%struct.clk*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_generic_set_opp_clk_only(%struct.device* %dev, %struct.clk* %clk, i64 %freq) #0 !dbg !6628 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %clk.addr = alloca %struct.clk*, align 8
  %freq.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6631, metadata !DIExpression()), !dbg !6632
  store %struct.clk* %clk, %struct.clk** %clk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.clk** %clk.addr, metadata !6633, metadata !DIExpression()), !dbg !6634
  store i64 %freq, i64* %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %freq.addr, metadata !6635, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6637, metadata !DIExpression()), !dbg !6638
  %0 = load %struct.clk*, %struct.clk** %clk.addr, align 8, !dbg !6639
  %1 = load i64, i64* %freq.addr, align 8, !dbg !6640
  %call = call i32 @clk_set_rate(%struct.clk* %0, i64 %1) #8, !dbg !6641
  store i32 %call, i32* %ret, align 4, !dbg !6642
  %2 = load i32, i32* %ret, align 4, !dbg !6643
  %tobool = icmp ne i32 %2, 0, !dbg !6643
  br i1 %tobool, label %if.then, label %if.end, !dbg !6645

if.then:                                          ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6646
  %4 = load i32, i32* %ret, align 4, !dbg !6646
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__._generic_set_opp_clk_only, i64 0, i64 0), i32 %4) #9, !dbg !6646
  br label %if.end, !dbg !6648

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %ret, align 4, !dbg !6649
  ret i32 %5, !dbg !6650
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_set_required_opps(%struct.device* %dev, %struct.opp_table* %opp_table, %struct.dev_pm_opp* %opp, i1 zeroext %up) #0 !dbg !6651 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  %up.addr = alloca i8, align 1
  %required_opp_tables = alloca %struct.opp_table**, align 8
  %genpd_virt_devs = alloca %struct.device**, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6654, metadata !DIExpression()), !dbg !6655
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !6656, metadata !DIExpression()), !dbg !6657
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !6658, metadata !DIExpression()), !dbg !6659
  %frombool = zext i1 %up to i8
  store i8 %frombool, i8* %up.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up.addr, metadata !6660, metadata !DIExpression()), !dbg !6661
  call void @llvm.dbg.declare(metadata %struct.opp_table*** %required_opp_tables, metadata !6662, metadata !DIExpression()), !dbg !6663
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6664
  %required_opp_tables1 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 14, !dbg !6665
  %1 = load %struct.opp_table**, %struct.opp_table*** %required_opp_tables1, align 8, !dbg !6665
  store %struct.opp_table** %1, %struct.opp_table*** %required_opp_tables, align 8, !dbg !6663
  call void @llvm.dbg.declare(metadata %struct.device*** %genpd_virt_devs, metadata !6666, metadata !DIExpression()), !dbg !6667
  %2 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6668
  %genpd_virt_devs2 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %2, i32 0, i32 13, !dbg !6669
  %3 = load %struct.device**, %struct.device*** %genpd_virt_devs2, align 8, !dbg !6669
  store %struct.device** %3, %struct.device*** %genpd_virt_devs, align 8, !dbg !6667
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6670, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6672, metadata !DIExpression()), !dbg !6673
  store i32 0, i32* %ret, align 4, !dbg !6673
  %4 = load %struct.opp_table**, %struct.opp_table*** %required_opp_tables, align 8, !dbg !6674
  %tobool = icmp ne %struct.opp_table** %4, null, !dbg !6674
  br i1 %tobool, label %if.end, label %if.then, !dbg !6676

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6677
  br label %return, !dbg !6677

if.end:                                           ; preds = %entry
  %5 = load %struct.device**, %struct.device*** %genpd_virt_devs, align 8, !dbg !6678
  %tobool3 = icmp ne %struct.device** %5, null, !dbg !6678
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !6680

if.then4:                                         ; preds = %if.end
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6681
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6682
  %8 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !6683
  %call = call i32 @_set_required_opp(%struct.device* %6, %struct.device* %7, %struct.dev_pm_opp* %8, i32 0) #8, !dbg !6684
  store i32 %call, i32* %retval, align 4, !dbg !6685
  br label %return, !dbg !6685

if.end5:                                          ; preds = %if.end
  %9 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6686
  %genpd_virt_dev_lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %9, i32 0, i32 12, !dbg !6687
  call void @mutex_lock(%struct.mutex* %genpd_virt_dev_lock) #8, !dbg !6688
  %10 = load i8, i8* %up.addr, align 1, !dbg !6689
  %tobool6 = trunc i8 %10 to i1, !dbg !6689
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !6691

if.then7:                                         ; preds = %if.end5
  store i32 0, i32* %i, align 4, !dbg !6692
  br label %for.cond, !dbg !6695

for.cond:                                         ; preds = %for.inc, %if.then7
  %11 = load i32, i32* %i, align 4, !dbg !6696
  %12 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6698
  %required_opp_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %12, i32 0, i32 15, !dbg !6699
  %13 = load i32, i32* %required_opp_count, align 8, !dbg !6699
  %cmp = icmp ult i32 %11, %13, !dbg !6700
  br i1 %cmp, label %for.body, label %for.end, !dbg !6701

for.body:                                         ; preds = %for.cond
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6702
  %15 = load %struct.device**, %struct.device*** %genpd_virt_devs, align 8, !dbg !6704
  %16 = load i32, i32* %i, align 4, !dbg !6705
  %idxprom = sext i32 %16 to i64, !dbg !6704
  %arrayidx = getelementptr %struct.device*, %struct.device** %15, i64 %idxprom, !dbg !6704
  %17 = load %struct.device*, %struct.device** %arrayidx, align 8, !dbg !6704
  %18 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !6706
  %19 = load i32, i32* %i, align 4, !dbg !6707
  %call8 = call i32 @_set_required_opp(%struct.device* %14, %struct.device* %17, %struct.dev_pm_opp* %18, i32 %19) #8, !dbg !6708
  store i32 %call8, i32* %ret, align 4, !dbg !6709
  %20 = load i32, i32* %ret, align 4, !dbg !6710
  %tobool9 = icmp ne i32 %20, 0, !dbg !6710
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !6712

if.then10:                                        ; preds = %for.body
  br label %for.end, !dbg !6713

if.end11:                                         ; preds = %for.body
  br label %for.inc, !dbg !6714

for.inc:                                          ; preds = %if.end11
  %21 = load i32, i32* %i, align 4, !dbg !6715
  %inc = add i32 %21, 1, !dbg !6715
  store i32 %inc, i32* %i, align 4, !dbg !6715
  br label %for.cond, !dbg !6716, !llvm.loop !6717

for.end:                                          ; preds = %if.then10, %for.cond
  br label %if.end24, !dbg !6719

if.else:                                          ; preds = %if.end5
  %22 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6720
  %required_opp_count12 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %22, i32 0, i32 15, !dbg !6723
  %23 = load i32, i32* %required_opp_count12, align 8, !dbg !6723
  %sub = sub i32 %23, 1, !dbg !6724
  store i32 %sub, i32* %i, align 4, !dbg !6725
  br label %for.cond13, !dbg !6726

for.cond13:                                       ; preds = %for.inc22, %if.else
  %24 = load i32, i32* %i, align 4, !dbg !6727
  %cmp14 = icmp sge i32 %24, 0, !dbg !6729
  br i1 %cmp14, label %for.body15, label %for.end23, !dbg !6730

for.body15:                                       ; preds = %for.cond13
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6731
  %26 = load %struct.device**, %struct.device*** %genpd_virt_devs, align 8, !dbg !6733
  %27 = load i32, i32* %i, align 4, !dbg !6734
  %idxprom16 = sext i32 %27 to i64, !dbg !6733
  %arrayidx17 = getelementptr %struct.device*, %struct.device** %26, i64 %idxprom16, !dbg !6733
  %28 = load %struct.device*, %struct.device** %arrayidx17, align 8, !dbg !6733
  %29 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !6735
  %30 = load i32, i32* %i, align 4, !dbg !6736
  %call18 = call i32 @_set_required_opp(%struct.device* %25, %struct.device* %28, %struct.dev_pm_opp* %29, i32 %30) #8, !dbg !6737
  store i32 %call18, i32* %ret, align 4, !dbg !6738
  %31 = load i32, i32* %ret, align 4, !dbg !6739
  %tobool19 = icmp ne i32 %31, 0, !dbg !6739
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !6741

if.then20:                                        ; preds = %for.body15
  br label %for.end23, !dbg !6742

if.end21:                                         ; preds = %for.body15
  br label %for.inc22, !dbg !6743

for.inc22:                                        ; preds = %if.end21
  %32 = load i32, i32* %i, align 4, !dbg !6744
  %dec = add i32 %32, -1, !dbg !6744
  store i32 %dec, i32* %i, align 4, !dbg !6744
  br label %for.cond13, !dbg !6745, !llvm.loop !6746

for.end23:                                        ; preds = %if.then20, %for.cond13
  br label %if.end24

if.end24:                                         ; preds = %for.end23, %for.end
  %33 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6748
  %genpd_virt_dev_lock25 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %33, i32 0, i32 12, !dbg !6749
  call void @mutex_unlock(%struct.mutex* %genpd_virt_dev_lock25) #8, !dbg !6750
  %34 = load i32, i32* %ret, align 4, !dbg !6751
  store i32 %34, i32* %retval, align 4, !dbg !6752
  br label %return, !dbg !6752

return:                                           ; preds = %if.end24, %if.then4, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !6753
  ret i32 %35, !dbg !6753
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_set_opp_custom(%struct.opp_table* %opp_table, %struct.device* %dev, i64 %old_freq, i64 %freq, %struct.dev_pm_opp_supply* %old_supply, %struct.dev_pm_opp_supply* %new_supply) #0 !dbg !6754 {
entry:
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %old_freq.addr = alloca i64, align 8
  %freq.addr = alloca i64, align 8
  %old_supply.addr = alloca %struct.dev_pm_opp_supply*, align 8
  %new_supply.addr = alloca %struct.dev_pm_opp_supply*, align 8
  %data = alloca %struct.dev_pm_set_opp_data*, align 8
  %size = alloca i32, align 4
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !6757, metadata !DIExpression()), !dbg !6758
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6759, metadata !DIExpression()), !dbg !6760
  store i64 %old_freq, i64* %old_freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %old_freq.addr, metadata !6761, metadata !DIExpression()), !dbg !6762
  store i64 %freq, i64* %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %freq.addr, metadata !6763, metadata !DIExpression()), !dbg !6764
  store %struct.dev_pm_opp_supply* %old_supply, %struct.dev_pm_opp_supply** %old_supply.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp_supply** %old_supply.addr, metadata !6765, metadata !DIExpression()), !dbg !6766
  store %struct.dev_pm_opp_supply* %new_supply, %struct.dev_pm_opp_supply** %new_supply.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp_supply** %new_supply.addr, metadata !6767, metadata !DIExpression()), !dbg !6768
  call void @llvm.dbg.declare(metadata %struct.dev_pm_set_opp_data** %data, metadata !6769, metadata !DIExpression()), !dbg !6770
  call void @llvm.dbg.declare(metadata i32* %size, metadata !6771, metadata !DIExpression()), !dbg !6772
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6773
  %set_opp_data = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 28, !dbg !6774
  %1 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %set_opp_data, align 8, !dbg !6774
  store %struct.dev_pm_set_opp_data* %1, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !6775
  %2 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6776
  %regulators = getelementptr inbounds %struct.opp_table, %struct.opp_table* %2, i32 0, i32 20, !dbg !6777
  %3 = load %struct.regulator**, %struct.regulator*** %regulators, align 8, !dbg !6777
  %4 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !6778
  %regulators1 = getelementptr inbounds %struct.dev_pm_set_opp_data, %struct.dev_pm_set_opp_data* %4, i32 0, i32 2, !dbg !6779
  store %struct.regulator** %3, %struct.regulator*** %regulators1, align 8, !dbg !6780
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6781
  %regulator_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 21, !dbg !6782
  %6 = load i32, i32* %regulator_count, align 8, !dbg !6782
  %7 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !6783
  %regulator_count2 = getelementptr inbounds %struct.dev_pm_set_opp_data, %struct.dev_pm_set_opp_data* %7, i32 0, i32 3, !dbg !6784
  store i32 %6, i32* %regulator_count2, align 8, !dbg !6785
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6786
  %clk = getelementptr inbounds %struct.opp_table, %struct.opp_table* %8, i32 0, i32 19, !dbg !6787
  %9 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !6787
  %10 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !6788
  %clk3 = getelementptr inbounds %struct.dev_pm_set_opp_data, %struct.dev_pm_set_opp_data* %10, i32 0, i32 4, !dbg !6789
  store %struct.clk* %9, %struct.clk** %clk3, align 8, !dbg !6790
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6791
  %12 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !6792
  %dev4 = getelementptr inbounds %struct.dev_pm_set_opp_data, %struct.dev_pm_set_opp_data* %12, i32 0, i32 5, !dbg !6793
  store %struct.device* %11, %struct.device** %dev4, align 8, !dbg !6794
  %13 = load i64, i64* %old_freq.addr, align 8, !dbg !6795
  %14 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !6796
  %old_opp = getelementptr inbounds %struct.dev_pm_set_opp_data, %struct.dev_pm_set_opp_data* %14, i32 0, i32 0, !dbg !6797
  %rate = getelementptr inbounds %struct.dev_pm_opp_info, %struct.dev_pm_opp_info* %old_opp, i32 0, i32 0, !dbg !6798
  store i64 %13, i64* %rate, align 8, !dbg !6799
  %15 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6800
  %regulator_count5 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %15, i32 0, i32 21, !dbg !6801
  %16 = load i32, i32* %regulator_count5, align 8, !dbg !6801
  %conv = sext i32 %16 to i64, !dbg !6800
  %mul = mul i64 32, %conv, !dbg !6802
  %conv6 = trunc i64 %mul to i32, !dbg !6803
  store i32 %conv6, i32* %size, align 4, !dbg !6804
  %17 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %old_supply.addr, align 8, !dbg !6805
  %tobool = icmp ne %struct.dev_pm_opp_supply* %17, null, !dbg !6805
  br i1 %tobool, label %if.else, label %if.then, !dbg !6807

if.then:                                          ; preds = %entry
  %18 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !6808
  %old_opp7 = getelementptr inbounds %struct.dev_pm_set_opp_data, %struct.dev_pm_set_opp_data* %18, i32 0, i32 0, !dbg !6809
  %supplies = getelementptr inbounds %struct.dev_pm_opp_info, %struct.dev_pm_opp_info* %old_opp7, i32 0, i32 1, !dbg !6810
  %19 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies, align 8, !dbg !6810
  %20 = bitcast %struct.dev_pm_opp_supply* %19 to i8*, !dbg !6811
  %21 = load i32, i32* %size, align 4, !dbg !6812
  %conv8 = sext i32 %21 to i64, !dbg !6812
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 %conv8, i1 false), !dbg !6811
  br label %if.end, !dbg !6811

if.else:                                          ; preds = %entry
  %22 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !6813
  %old_opp9 = getelementptr inbounds %struct.dev_pm_set_opp_data, %struct.dev_pm_set_opp_data* %22, i32 0, i32 0, !dbg !6814
  %supplies10 = getelementptr inbounds %struct.dev_pm_opp_info, %struct.dev_pm_opp_info* %old_opp9, i32 0, i32 1, !dbg !6815
  %23 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies10, align 8, !dbg !6815
  %24 = bitcast %struct.dev_pm_opp_supply* %23 to i8*, !dbg !6816
  %25 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %old_supply.addr, align 8, !dbg !6817
  %26 = bitcast %struct.dev_pm_opp_supply* %25 to i8*, !dbg !6816
  %27 = load i32, i32* %size, align 4, !dbg !6818
  %conv11 = sext i32 %27 to i64, !dbg !6818
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %26, i64 %conv11, i1 false), !dbg !6816
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %28 = load i64, i64* %freq.addr, align 8, !dbg !6819
  %29 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !6820
  %new_opp = getelementptr inbounds %struct.dev_pm_set_opp_data, %struct.dev_pm_set_opp_data* %29, i32 0, i32 1, !dbg !6821
  %rate12 = getelementptr inbounds %struct.dev_pm_opp_info, %struct.dev_pm_opp_info* %new_opp, i32 0, i32 0, !dbg !6822
  store i64 %28, i64* %rate12, align 8, !dbg !6823
  %30 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !6824
  %new_opp13 = getelementptr inbounds %struct.dev_pm_set_opp_data, %struct.dev_pm_set_opp_data* %30, i32 0, i32 1, !dbg !6825
  %supplies14 = getelementptr inbounds %struct.dev_pm_opp_info, %struct.dev_pm_opp_info* %new_opp13, i32 0, i32 1, !dbg !6826
  %31 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies14, align 8, !dbg !6826
  %32 = bitcast %struct.dev_pm_opp_supply* %31 to i8*, !dbg !6827
  %33 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %new_supply.addr, align 8, !dbg !6828
  %34 = bitcast %struct.dev_pm_opp_supply* %33 to i8*, !dbg !6827
  %35 = load i32, i32* %size, align 4, !dbg !6829
  %conv15 = sext i32 %35 to i64, !dbg !6829
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %34, i64 %conv15, i1 false), !dbg !6827
  %36 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6830
  %set_opp = getelementptr inbounds %struct.opp_table, %struct.opp_table* %36, i32 0, i32 27, !dbg !6831
  %37 = load i32 (%struct.dev_pm_set_opp_data*)*, i32 (%struct.dev_pm_set_opp_data*)** %set_opp, align 8, !dbg !6831
  %38 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !6832
  %call = call i32 %37(%struct.dev_pm_set_opp_data* %38) #8, !dbg !6830
  ret i32 %call, !dbg !6833
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_generic_set_opp_regulator(%struct.opp_table* %opp_table, %struct.device* %dev, i64 %old_freq, i64 %freq, %struct.dev_pm_opp_supply* %old_supply, %struct.dev_pm_opp_supply* %new_supply) #0 !dbg !6834 {
entry:
  %retval = alloca i32, align 4
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %old_freq.addr = alloca i64, align 8
  %freq.addr = alloca i64, align 8
  %old_supply.addr = alloca %struct.dev_pm_opp_supply*, align 8
  %new_supply.addr = alloca %struct.dev_pm_opp_supply*, align 8
  %reg = alloca %struct.regulator*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !6837, metadata !DIExpression()), !dbg !6838
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6839, metadata !DIExpression()), !dbg !6840
  store i64 %old_freq, i64* %old_freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %old_freq.addr, metadata !6841, metadata !DIExpression()), !dbg !6842
  store i64 %freq, i64* %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %freq.addr, metadata !6843, metadata !DIExpression()), !dbg !6844
  store %struct.dev_pm_opp_supply* %old_supply, %struct.dev_pm_opp_supply** %old_supply.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp_supply** %old_supply.addr, metadata !6845, metadata !DIExpression()), !dbg !6846
  store %struct.dev_pm_opp_supply* %new_supply, %struct.dev_pm_opp_supply** %new_supply.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp_supply** %new_supply.addr, metadata !6847, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.declare(metadata %struct.regulator** %reg, metadata !6849, metadata !DIExpression()), !dbg !6850
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6851
  %regulators = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 20, !dbg !6852
  %1 = load %struct.regulator**, %struct.regulator*** %regulators, align 8, !dbg !6852
  %arrayidx = getelementptr %struct.regulator*, %struct.regulator** %1, i64 0, !dbg !6851
  %2 = load %struct.regulator*, %struct.regulator** %arrayidx, align 8, !dbg !6851
  store %struct.regulator* %2, %struct.regulator** %reg, align 8, !dbg !6850
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6853, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6855, metadata !DIExpression()), !dbg !6858
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6858
  %regulator_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %3, i32 0, i32 21, !dbg !6858
  %4 = load i32, i32* %regulator_count, align 8, !dbg !6858
  %cmp = icmp sgt i32 %4, 1, !dbg !6858
  %lnot = xor i1 %cmp, true, !dbg !6858
  %lnot1 = xor i1 %lnot, true, !dbg !6858
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6858
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6858
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !6859
  %tobool = icmp ne i32 %5, 0, !dbg !6859
  %lnot2 = xor i1 %tobool, true, !dbg !6859
  %lnot4 = xor i1 %lnot2, true, !dbg !6859
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !6859
  %conv = sext i32 %lnot.ext5 to i64, !dbg !6859
  %tobool6 = icmp ne i64 %conv, 0, !dbg !6859
  br i1 %tobool6, label %if.then, label %if.end, !dbg !6858

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6859

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !6861

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !6863

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !6861

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 678, i32 2305, i64 12) #10, !dbg !6865, !srcloc !6867
  br label %do.end9, !dbg !6865

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 307) #10, !dbg !6868, !srcloc !6870
  br label %do.body10, !dbg !6861

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !6871

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !6861

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !6861

if.end:                                           ; preds = %do.end12, %entry
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !6858
  %tobool13 = icmp ne i32 %6, 0, !dbg !6858
  %lnot14 = xor i1 %tobool13, true, !dbg !6858
  %lnot16 = xor i1 %lnot14, true, !dbg !6858
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !6858
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !6858
  store i64 %conv18, i64* %tmp, align 8, !dbg !6859
  %7 = load i64, i64* %tmp, align 8, !dbg !6858
  %tobool19 = icmp ne i64 %7, 0, !dbg !6873
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !6874

if.then20:                                        ; preds = %if.end
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6875
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %8, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.28, i64 0, i64 0)) #9, !dbg !6875
  store i32 -22, i32* %retval, align 4, !dbg !6877
  br label %return, !dbg !6877

if.end21:                                         ; preds = %if.end
  %9 = load i64, i64* %freq.addr, align 8, !dbg !6878
  %10 = load i64, i64* %old_freq.addr, align 8, !dbg !6880
  %cmp22 = icmp uge i64 %9, %10, !dbg !6881
  br i1 %cmp22, label %if.then24, label %if.end28, !dbg !6882

if.then24:                                        ; preds = %if.end21
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6883
  %12 = load %struct.regulator*, %struct.regulator** %reg, align 8, !dbg !6885
  %13 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %new_supply.addr, align 8, !dbg !6886
  %call = call i32 @_set_opp_voltage(%struct.device* %11, %struct.regulator* %12, %struct.dev_pm_opp_supply* %13) #8, !dbg !6887
  store i32 %call, i32* %ret, align 4, !dbg !6888
  %14 = load i32, i32* %ret, align 4, !dbg !6889
  %tobool25 = icmp ne i32 %14, 0, !dbg !6889
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !6891

if.then26:                                        ; preds = %if.then24
  br label %restore_voltage, !dbg !6892

if.end27:                                         ; preds = %if.then24
  br label %if.end28, !dbg !6893

if.end28:                                         ; preds = %if.end27, %if.end21
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6894
  %16 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6895
  %clk = getelementptr inbounds %struct.opp_table, %struct.opp_table* %16, i32 0, i32 19, !dbg !6896
  %17 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !6896
  %18 = load i64, i64* %freq.addr, align 8, !dbg !6897
  %call29 = call i32 @_generic_set_opp_clk_only(%struct.device* %15, %struct.clk* %17, i64 %18) #8, !dbg !6898
  store i32 %call29, i32* %ret, align 4, !dbg !6899
  %19 = load i32, i32* %ret, align 4, !dbg !6900
  %tobool30 = icmp ne i32 %19, 0, !dbg !6900
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !6902

if.then31:                                        ; preds = %if.end28
  br label %restore_voltage, !dbg !6903

if.end32:                                         ; preds = %if.end28
  %20 = load i64, i64* %freq.addr, align 8, !dbg !6904
  %21 = load i64, i64* %old_freq.addr, align 8, !dbg !6906
  %cmp33 = icmp ult i64 %20, %21, !dbg !6907
  br i1 %cmp33, label %if.then35, label %if.end40, !dbg !6908

if.then35:                                        ; preds = %if.end32
  %22 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6909
  %23 = load %struct.regulator*, %struct.regulator** %reg, align 8, !dbg !6911
  %24 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %new_supply.addr, align 8, !dbg !6912
  %call36 = call i32 @_set_opp_voltage(%struct.device* %22, %struct.regulator* %23, %struct.dev_pm_opp_supply* %24) #8, !dbg !6913
  store i32 %call36, i32* %ret, align 4, !dbg !6914
  %25 = load i32, i32* %ret, align 4, !dbg !6915
  %tobool37 = icmp ne i32 %25, 0, !dbg !6915
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !6917

if.then38:                                        ; preds = %if.then35
  br label %restore_freq, !dbg !6918

if.end39:                                         ; preds = %if.then35
  br label %if.end40, !dbg !6919

if.end40:                                         ; preds = %if.end39, %if.end32
  %26 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6920
  %enabled = getelementptr inbounds %struct.opp_table, %struct.opp_table* %26, i32 0, i32 24, !dbg !6920
  %27 = load i8, i8* %enabled, align 4, !dbg !6920
  %tobool41 = trunc i8 %27 to i1, !dbg !6920
  %lnot42 = xor i1 %tobool41, true, !dbg !6920
  %lnot44 = xor i1 %lnot42, true, !dbg !6920
  %lnot46 = xor i1 %lnot44, true, !dbg !6920
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !6920
  %conv48 = sext i32 %lnot.ext47 to i64, !dbg !6920
  %tobool49 = icmp ne i64 %conv48, 0, !dbg !6920
  br i1 %tobool49, label %if.then50, label %if.end56, !dbg !6922

if.then50:                                        ; preds = %if.end40
  %28 = load %struct.regulator*, %struct.regulator** %reg, align 8, !dbg !6923
  %call51 = call i32 @regulator_enable(%struct.regulator* %28) #8, !dbg !6925
  store i32 %call51, i32* %ret, align 4, !dbg !6926
  %29 = load i32, i32* %ret, align 4, !dbg !6927
  %cmp52 = icmp slt i32 %29, 0, !dbg !6929
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !6930

if.then54:                                        ; preds = %if.then50
  %30 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6931
  %31 = load i32, i32* %ret, align 4, !dbg !6931
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %30, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.29, i64 0, i64 0), i32 %31) #9, !dbg !6931
  br label %if.end55, !dbg !6931

if.end55:                                         ; preds = %if.then54, %if.then50
  br label %if.end56, !dbg !6932

if.end56:                                         ; preds = %if.end55, %if.end40
  store i32 0, i32* %retval, align 4, !dbg !6933
  br label %return, !dbg !6933

restore_freq:                                     ; preds = %if.then38
  call void @llvm.dbg.label(metadata !6934), !dbg !6935
  %32 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6936
  %33 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6938
  %clk57 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %33, i32 0, i32 19, !dbg !6939
  %34 = load %struct.clk*, %struct.clk** %clk57, align 8, !dbg !6939
  %35 = load i64, i64* %old_freq.addr, align 8, !dbg !6940
  %call58 = call i32 @_generic_set_opp_clk_only(%struct.device* %32, %struct.clk* %34, i64 %35) #8, !dbg !6941
  %tobool59 = icmp ne i32 %call58, 0, !dbg !6941
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !6942

if.then60:                                        ; preds = %restore_freq
  %36 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6943
  %37 = load i64, i64* %old_freq.addr, align 8, !dbg !6943
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %36, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__._generic_set_opp_regulator, i64 0, i64 0), i64 %37) #9, !dbg !6943
  br label %if.end61, !dbg !6943

if.end61:                                         ; preds = %if.then60, %restore_freq
  br label %restore_voltage, !dbg !6944

restore_voltage:                                  ; preds = %if.end61, %if.then31, %if.then26
  call void @llvm.dbg.label(metadata !6945), !dbg !6946
  %38 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %old_supply.addr, align 8, !dbg !6947
  %tobool62 = icmp ne %struct.dev_pm_opp_supply* %38, null, !dbg !6947
  br i1 %tobool62, label %if.then63, label %if.end65, !dbg !6949

if.then63:                                        ; preds = %restore_voltage
  %39 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6950
  %40 = load %struct.regulator*, %struct.regulator** %reg, align 8, !dbg !6951
  %41 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %old_supply.addr, align 8, !dbg !6952
  %call64 = call i32 @_set_opp_voltage(%struct.device* %39, %struct.regulator* %40, %struct.dev_pm_opp_supply* %41) #8, !dbg !6953
  br label %if.end65, !dbg !6953

if.end65:                                         ; preds = %if.then63, %restore_voltage
  %42 = load i32, i32* %ret, align 4, !dbg !6954
  store i32 %42, i32* %retval, align 4, !dbg !6955
  br label %return, !dbg !6955

return:                                           ; preds = %if.end65, %if.end56, %if.then20
  %43 = load i32, i32* %retval, align 4, !dbg !6956
  ret i32 %43, !dbg !6956
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dev_pm_opp_put(%struct.dev_pm_opp* %opp) #0 !dbg !6957 {
entry:
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !6958, metadata !DIExpression()), !dbg !6959
  %0 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !6960
  %kref = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %0, i32 0, i32 1, !dbg !6961
  %1 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !6962
  %opp_table = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %1, i32 0, i32 13, !dbg !6963
  %2 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !6963
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %2, i32 0, i32 5, !dbg !6964
  %call = call i32 @kref_put_mutex(%struct.kref* %kref, void (%struct.kref*)* @_opp_kref_release_locked, %struct.mutex* %lock) #8, !dbg !6965
  ret void, !dbg !6966
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.opp_device* @_add_opp_dev(%struct.device* %dev, %struct.opp_table* %opp_table) #0 !dbg !6967 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %opp_dev = alloca %struct.opp_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6970, metadata !DIExpression()), !dbg !6971
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !6972, metadata !DIExpression()), !dbg !6973
  call void @llvm.dbg.declare(metadata %struct.opp_device** %opp_dev, metadata !6974, metadata !DIExpression()), !dbg !6975
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6976
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 5, !dbg !6977
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !6978
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6979
  %2 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6980
  %call = call %struct.opp_device* @_add_opp_dev_unlocked(%struct.device* %1, %struct.opp_table* %2) #8, !dbg !6981
  store %struct.opp_device* %call, %struct.opp_device** %opp_dev, align 8, !dbg !6982
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !6983
  %lock1 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %3, i32 0, i32 5, !dbg !6984
  call void @mutex_unlock(%struct.mutex* %lock1) #8, !dbg !6985
  %4 = load %struct.opp_device*, %struct.opp_device** %opp_dev, align 8, !dbg !6986
  ret %struct.opp_device* %4, !dbg !6987
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.opp_device* @_add_opp_dev_unlocked(%struct.device* %dev, %struct.opp_table* %opp_table) #0 !dbg !6988 {
entry:
  %retval = alloca %struct.opp_device*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %opp_dev = alloca %struct.opp_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6989, metadata !DIExpression()), !dbg !6990
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !6991, metadata !DIExpression()), !dbg !6992
  call void @llvm.dbg.declare(metadata %struct.opp_device** %opp_dev, metadata !6993, metadata !DIExpression()), !dbg !6994
  %call = call i8* @kzalloc(i64 24, i32 3264) #8, !dbg !6995
  %0 = bitcast i8* %call to %struct.opp_device*, !dbg !6995
  store %struct.opp_device* %0, %struct.opp_device** %opp_dev, align 8, !dbg !6996
  %1 = load %struct.opp_device*, %struct.opp_device** %opp_dev, align 8, !dbg !6997
  %tobool = icmp ne %struct.opp_device* %1, null, !dbg !6997
  br i1 %tobool, label %if.end, label %if.then, !dbg !6999

if.then:                                          ; preds = %entry
  store %struct.opp_device* null, %struct.opp_device** %retval, align 8, !dbg !7000
  br label %return, !dbg !7000

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7001
  %3 = load %struct.opp_device*, %struct.opp_device** %opp_dev, align 8, !dbg !7002
  %dev1 = getelementptr inbounds %struct.opp_device, %struct.opp_device* %3, i32 0, i32 1, !dbg !7003
  store %struct.device* %2, %struct.device** %dev1, align 8, !dbg !7004
  %4 = load %struct.opp_device*, %struct.opp_device** %opp_dev, align 8, !dbg !7005
  %node = getelementptr inbounds %struct.opp_device, %struct.opp_device* %4, i32 0, i32 0, !dbg !7006
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7007
  %dev_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 2, !dbg !7008
  call void @list_add(%struct.list_head* %node, %struct.list_head* %dev_list) #8, !dbg !7009
  %6 = load %struct.opp_device*, %struct.opp_device** %opp_dev, align 8, !dbg !7010
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7011
  call void @opp_debug_register(%struct.opp_device* %6, %struct.opp_table* %7) #8, !dbg !7012
  %8 = load %struct.opp_device*, %struct.opp_device** %opp_dev, align 8, !dbg !7013
  store %struct.opp_device* %8, %struct.opp_device** %retval, align 8, !dbg !7014
  br label %return, !dbg !7014

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct.opp_device*, %struct.opp_device** %retval, align 8, !dbg !7015
  ret %struct.opp_device* %9, !dbg !7015
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @_get_opp_table_kref(%struct.opp_table* %opp_table) #0 !dbg !7016 {
entry:
  %opp_table.addr = alloca %struct.opp_table*, align 8
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !7017, metadata !DIExpression()), !dbg !7018
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7019
  %kref = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 4, !dbg !7020
  call void @kref_get(%struct.kref* %kref) #8, !dbg !7021
  ret void, !dbg !7022
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_get(%struct.kref* %kref) #0 !dbg !7023 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !7027, metadata !DIExpression()), !dbg !7028
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7029
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !7030
  call void @refcount_inc(%struct.refcount_struct* %refcount) #8, !dbg !7031
  ret void, !dbg !7032
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.opp_table* @dev_pm_opp_get_opp_table(%struct.device* %dev) #0 !dbg !7033 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7034, metadata !DIExpression()), !dbg !7035
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7036
  %call = call %struct.opp_table* @_opp_get_opp_table(%struct.device* %0, i32 0) #8, !dbg !7037
  ret %struct.opp_table* %call, !dbg !7038
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.opp_table* @_opp_get_opp_table(%struct.device* %dev, i32 %index) #0 !dbg !7039 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %index.addr = alloca i32, align 4
  %opp_table = alloca %struct.opp_table*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7040, metadata !DIExpression()), !dbg !7041
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7042, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !7044, metadata !DIExpression()), !dbg !7045
  call void @mutex_lock(%struct.mutex* @opp_table_lock) #8, !dbg !7046
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7047
  %call = call %struct.opp_table* @_find_opp_table_unlocked(%struct.device* %0) #8, !dbg !7048
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !7049
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7050
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !7050
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !7052
  br i1 %call1, label %if.end, label %if.then, !dbg !7053

if.then:                                          ; preds = %entry
  br label %unlock, !dbg !7054

if.end:                                           ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7055
  %4 = load i32, i32* %index.addr, align 4, !dbg !7056
  %call2 = call %struct.opp_table* @_managed_opp(%struct.device* %3, i32 %4) #8, !dbg !7057
  store %struct.opp_table* %call2, %struct.opp_table** %opp_table, align 8, !dbg !7058
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7059
  %tobool = icmp ne %struct.opp_table* %5, null, !dbg !7059
  br i1 %tobool, label %if.then3, label %if.end9, !dbg !7061

if.then3:                                         ; preds = %if.end
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7062
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7065
  %call4 = call %struct.opp_device* @_add_opp_dev_unlocked(%struct.device* %6, %struct.opp_table* %7) #8, !dbg !7066
  %tobool5 = icmp ne %struct.opp_device* %call4, null, !dbg !7066
  br i1 %tobool5, label %if.end8, label %if.then6, !dbg !7067

if.then6:                                         ; preds = %if.then3
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7068
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %8) #8, !dbg !7070
  %call7 = call i8* @ERR_PTR(i64 -12) #8, !dbg !7071
  %9 = bitcast i8* %call7 to %struct.opp_table*, !dbg !7071
  store %struct.opp_table* %9, %struct.opp_table** %opp_table, align 8, !dbg !7072
  br label %if.end8, !dbg !7073

if.end8:                                          ; preds = %if.then6, %if.then3
  br label %unlock, !dbg !7074

if.end9:                                          ; preds = %if.end
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7075
  %11 = load i32, i32* %index.addr, align 4, !dbg !7076
  %call10 = call %struct.opp_table* @_allocate_opp_table(%struct.device* %10, i32 %11) #8, !dbg !7077
  store %struct.opp_table* %call10, %struct.opp_table** %opp_table, align 8, !dbg !7078
  br label %unlock, !dbg !7079

unlock:                                           ; preds = %if.end9, %if.end8, %if.then
  call void @llvm.dbg.label(metadata !7080), !dbg !7081
  call void @mutex_unlock(%struct.mutex* @opp_table_lock) #8, !dbg !7082
  %12 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7083
  ret %struct.opp_table* %12, !dbg !7084
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.opp_table* @dev_pm_opp_get_opp_table_indexed(%struct.device* %dev, i32 %index) #0 !dbg !7085 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7086, metadata !DIExpression()), !dbg !7087
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7088, metadata !DIExpression()), !dbg !7089
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7090
  %1 = load i32, i32* %index.addr, align 4, !dbg !7091
  %call = call %struct.opp_table* @_opp_get_opp_table(%struct.device* %0, i32 %1) #8, !dbg !7092
  ret %struct.opp_table* %call, !dbg !7093
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_put_mutex(%struct.kref* %kref, void (%struct.kref*)* %release, %struct.mutex* %lock) #0 !dbg !7094 {
entry:
  %retval = alloca i32, align 4
  %kref.addr = alloca %struct.kref*, align 8
  %release.addr = alloca void (%struct.kref*)*, align 8
  %lock.addr = alloca %struct.mutex*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !7099, metadata !DIExpression()), !dbg !7100
  store void (%struct.kref*)* %release, void (%struct.kref*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.kref*)** %release.addr, metadata !7101, metadata !DIExpression()), !dbg !7102
  store %struct.mutex* %lock, %struct.mutex** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mutex** %lock.addr, metadata !7103, metadata !DIExpression()), !dbg !7104
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7105
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !7107
  %1 = load %struct.mutex*, %struct.mutex** %lock.addr, align 8, !dbg !7108
  %call = call zeroext i1 @refcount_dec_and_mutex_lock(%struct.refcount_struct* %refcount, %struct.mutex* %1) #8, !dbg !7109
  br i1 %call, label %if.then, label %if.end, !dbg !7110

if.then:                                          ; preds = %entry
  %2 = load void (%struct.kref*)*, void (%struct.kref*)** %release.addr, align 8, !dbg !7111
  %3 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7113
  call void %2(%struct.kref* %3) #8, !dbg !7111
  store i32 1, i32* %retval, align 4, !dbg !7114
  br label %return, !dbg !7114

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7115
  br label %return, !dbg !7115

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !7116
  ret i32 %4, !dbg !7116
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_opp_table_kref_release(%struct.kref* %kref) #0 !dbg !7117 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.opp_table*, align 8
  %opp_dev = alloca %struct.opp_device*, align 8
  %temp = alloca %struct.opp_device*, align 8
  %i = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp26 = alloca i64, align 8
  %__mptr33 = alloca i8*, align 8
  %tmp36 = alloca %struct.opp_device*, align 8
  %__mptr38 = alloca i8*, align 8
  %tmp43 = alloca %struct.opp_device*, align 8
  %__mptr58 = alloca i8*, align 8
  %tmp63 = alloca %struct.opp_device*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !7118, metadata !DIExpression()), !dbg !7119
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !7120, metadata !DIExpression()), !dbg !7121
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7122, metadata !DIExpression()), !dbg !7124
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7124
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !7124
  store i8* %1, i8** %__mptr, align 8, !dbg !7124
  br label %do.body, !dbg !7124

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7125

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7124
  %add.ptr = getelementptr i8, i8* %2, i64 -88, !dbg !7124
  %3 = bitcast i8* %add.ptr to %struct.opp_table*, !dbg !7124
  store %struct.opp_table* %3, %struct.opp_table** %tmp, align 8, !dbg !7125
  %4 = load %struct.opp_table*, %struct.opp_table** %tmp, align 8, !dbg !7124
  store %struct.opp_table* %4, %struct.opp_table** %opp_table, align 8, !dbg !7121
  call void @llvm.dbg.declare(metadata %struct.opp_device** %opp_dev, metadata !7127, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.declare(metadata %struct.opp_device** %temp, metadata !7129, metadata !DIExpression()), !dbg !7130
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7131, metadata !DIExpression()), !dbg !7132
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7133
  %node = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 0, !dbg !7134
  call void @list_del(%struct.list_head* %node) #8, !dbg !7135
  call void @mutex_unlock(%struct.mutex* @opp_table_lock) #8, !dbg !7136
  %6 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7137
  call void @_of_clear_opp_table(%struct.opp_table* %6) #8, !dbg !7138
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7139
  %clk = getelementptr inbounds %struct.opp_table, %struct.opp_table* %7, i32 0, i32 19, !dbg !7141
  %8 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !7141
  %9 = bitcast %struct.clk* %8 to i8*, !dbg !7139
  %call = call zeroext i1 @IS_ERR(i8* %9) #8, !dbg !7142
  br i1 %call, label %if.end, label %if.then, !dbg !7143

if.then:                                          ; preds = %do.end
  %10 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7144
  %clk1 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %10, i32 0, i32 19, !dbg !7145
  %11 = load %struct.clk*, %struct.clk** %clk1, align 8, !dbg !7145
  call void @clk_put(%struct.clk* %11) #8, !dbg !7146
  br label %if.end, !dbg !7146

if.end:                                           ; preds = %if.then, %do.end
  %12 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7147
  %paths = getelementptr inbounds %struct.opp_table, %struct.opp_table* %12, i32 0, i32 22, !dbg !7149
  %13 = load %struct.icc_path**, %struct.icc_path*** %paths, align 8, !dbg !7149
  %tobool = icmp ne %struct.icc_path** %13, null, !dbg !7147
  br i1 %tobool, label %if.then2, label %if.end5, !dbg !7150

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !7151
  br label %for.cond, !dbg !7154

for.cond:                                         ; preds = %for.inc, %if.then2
  %14 = load i32, i32* %i, align 4, !dbg !7155
  %15 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7157
  %path_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %15, i32 0, i32 23, !dbg !7158
  %16 = load i32, i32* %path_count, align 8, !dbg !7158
  %cmp = icmp ult i32 %14, %16, !dbg !7159
  br i1 %cmp, label %for.body, label %for.end, !dbg !7160

for.body:                                         ; preds = %for.cond
  %17 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7161
  %paths3 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %17, i32 0, i32 22, !dbg !7162
  %18 = load %struct.icc_path**, %struct.icc_path*** %paths3, align 8, !dbg !7162
  %19 = load i32, i32* %i, align 4, !dbg !7163
  %idxprom = sext i32 %19 to i64, !dbg !7161
  %arrayidx = getelementptr %struct.icc_path*, %struct.icc_path** %18, i64 %idxprom, !dbg !7161
  %20 = load %struct.icc_path*, %struct.icc_path** %arrayidx, align 8, !dbg !7161
  call void @icc_put(%struct.icc_path* %20) #8, !dbg !7164
  br label %for.inc, !dbg !7164

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !7165
  %inc = add i32 %21, 1, !dbg !7165
  store i32 %inc, i32* %i, align 4, !dbg !7165
  br label %for.cond, !dbg !7166, !llvm.loop !7167

for.end:                                          ; preds = %for.cond
  %22 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7169
  %paths4 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %22, i32 0, i32 22, !dbg !7170
  %23 = load %struct.icc_path**, %struct.icc_path*** %paths4, align 8, !dbg !7170
  %24 = bitcast %struct.icc_path** %23 to i8*, !dbg !7169
  call void @kfree(i8* %24) #8, !dbg !7171
  br label %if.end5, !dbg !7172

if.end5:                                          ; preds = %for.end, %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7173, metadata !DIExpression()), !dbg !7175
  %25 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7175
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %25, i32 0, i32 3, !dbg !7175
  %call6 = call i32 @list_empty(%struct.list_head* %opp_list) #8, !dbg !7175
  %tobool7 = icmp ne i32 %call6, 0, !dbg !7175
  %lnot = xor i1 %tobool7, true, !dbg !7175
  %lnot8 = xor i1 %lnot, true, !dbg !7175
  %lnot9 = xor i1 %lnot8, true, !dbg !7175
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !7175
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7175
  %26 = load i32, i32* %__ret_warn_on, align 4, !dbg !7176
  %tobool10 = icmp ne i32 %26, 0, !dbg !7176
  %lnot11 = xor i1 %tobool10, true, !dbg !7176
  %lnot13 = xor i1 %lnot11, true, !dbg !7176
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !7176
  %conv = sext i32 %lnot.ext14 to i64, !dbg !7176
  %tobool15 = icmp ne i64 %conv, 0, !dbg !7176
  br i1 %tobool15, label %if.then16, label %if.end25, !dbg !7175

if.then16:                                        ; preds = %if.end5
  br label %do.body17, !dbg !7176

do.body17:                                        ; preds = %if.then16
  br label %do.body18, !dbg !7178

do.body18:                                        ; preds = %do.body17
  br label %do.end19, !dbg !7180

do.end19:                                         ; preds = %do.body18
  br label %do.body20, !dbg !7178

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 1200, i32 2305, i64 12) #10, !dbg !7182, !srcloc !7184
  br label %do.end21, !dbg !7182

do.end21:                                         ; preds = %do.body20
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 309) #10, !dbg !7185, !srcloc !7187
  br label %do.body22, !dbg !7178

do.body22:                                        ; preds = %do.end21
  br label %do.end23, !dbg !7188

do.end23:                                         ; preds = %do.body22
  br label %do.end24, !dbg !7178

do.end24:                                         ; preds = %do.end23
  br label %if.end25, !dbg !7178

if.end25:                                         ; preds = %do.end24, %if.end5
  %27 = load i32, i32* %__ret_warn_on, align 4, !dbg !7175
  %tobool27 = icmp ne i32 %27, 0, !dbg !7175
  %lnot28 = xor i1 %tobool27, true, !dbg !7175
  %lnot30 = xor i1 %lnot28, true, !dbg !7175
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !7175
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !7175
  store i64 %conv32, i64* %tmp26, align 8, !dbg !7176
  %28 = load i64, i64* %tmp26, align 8, !dbg !7175
  call void @llvm.dbg.declare(metadata i8** %__mptr33, metadata !7190, metadata !DIExpression()), !dbg !7193
  %29 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7193
  %dev_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %29, i32 0, i32 2, !dbg !7193
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %dev_list, i32 0, i32 0, !dbg !7193
  %30 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7193
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !7193
  store i8* %31, i8** %__mptr33, align 8, !dbg !7193
  br label %do.body34, !dbg !7193

do.body34:                                        ; preds = %if.end25
  br label %do.end35, !dbg !7194

do.end35:                                         ; preds = %do.body34
  %32 = load i8*, i8** %__mptr33, align 8, !dbg !7193
  %add.ptr37 = getelementptr i8, i8* %32, i64 0, !dbg !7193
  %33 = bitcast i8* %add.ptr37 to %struct.opp_device*, !dbg !7193
  store %struct.opp_device* %33, %struct.opp_device** %tmp36, align 8, !dbg !7194
  %34 = load %struct.opp_device*, %struct.opp_device** %tmp36, align 8, !dbg !7193
  store %struct.opp_device* %34, %struct.opp_device** %opp_dev, align 8, !dbg !7196
  call void @llvm.dbg.declare(metadata i8** %__mptr38, metadata !7197, metadata !DIExpression()), !dbg !7199
  %35 = load %struct.opp_device*, %struct.opp_device** %opp_dev, align 8, !dbg !7199
  %node39 = getelementptr inbounds %struct.opp_device, %struct.opp_device* %35, i32 0, i32 0, !dbg !7199
  %next40 = getelementptr inbounds %struct.list_head, %struct.list_head* %node39, i32 0, i32 0, !dbg !7199
  %36 = load %struct.list_head*, %struct.list_head** %next40, align 8, !dbg !7199
  %37 = bitcast %struct.list_head* %36 to i8*, !dbg !7199
  store i8* %37, i8** %__mptr38, align 8, !dbg !7199
  br label %do.body41, !dbg !7199

do.body41:                                        ; preds = %do.end35
  br label %do.end42, !dbg !7200

do.end42:                                         ; preds = %do.body41
  %38 = load i8*, i8** %__mptr38, align 8, !dbg !7199
  %add.ptr44 = getelementptr i8, i8* %38, i64 0, !dbg !7199
  %39 = bitcast i8* %add.ptr44 to %struct.opp_device*, !dbg !7199
  store %struct.opp_device* %39, %struct.opp_device** %tmp43, align 8, !dbg !7200
  %40 = load %struct.opp_device*, %struct.opp_device** %tmp43, align 8, !dbg !7199
  store %struct.opp_device* %40, %struct.opp_device** %temp, align 8, !dbg !7196
  br label %for.cond45, !dbg !7196

for.cond45:                                       ; preds = %do.end62, %do.end42
  %41 = load %struct.opp_device*, %struct.opp_device** %opp_dev, align 8, !dbg !7202
  %node46 = getelementptr inbounds %struct.opp_device, %struct.opp_device* %41, i32 0, i32 0, !dbg !7202
  %42 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7202
  %dev_list47 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %42, i32 0, i32 2, !dbg !7202
  %cmp48 = icmp eq %struct.list_head* %node46, %dev_list47, !dbg !7202
  %lnot50 = xor i1 %cmp48, true, !dbg !7202
  br i1 %lnot50, label %for.body52, label %for.end65, !dbg !7196

for.body52:                                       ; preds = %for.cond45
  %43 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7204
  %genpd_performance_state = getelementptr inbounds %struct.opp_table, %struct.opp_table* %43, i32 0, i32 25, !dbg !7207
  %44 = load i8, i8* %genpd_performance_state, align 1, !dbg !7207
  %tobool53 = trunc i8 %44 to i1, !dbg !7207
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !7208

if.then54:                                        ; preds = %for.body52
  %45 = load %struct.opp_device*, %struct.opp_device** %opp_dev, align 8, !dbg !7209
  %dev = getelementptr inbounds %struct.opp_device, %struct.opp_device* %45, i32 0, i32 1, !dbg !7210
  %46 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7210
  %call55 = call i32 @dev_pm_genpd_set_performance_state(%struct.device* %46, i32 0) #8, !dbg !7211
  br label %if.end56, !dbg !7211

if.end56:                                         ; preds = %if.then54, %for.body52
  %47 = load %struct.opp_device*, %struct.opp_device** %opp_dev, align 8, !dbg !7212
  %48 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7213
  call void @_remove_opp_dev(%struct.opp_device* %47, %struct.opp_table* %48) #8, !dbg !7214
  br label %for.inc57, !dbg !7215

for.inc57:                                        ; preds = %if.end56
  %49 = load %struct.opp_device*, %struct.opp_device** %temp, align 8, !dbg !7202
  store %struct.opp_device* %49, %struct.opp_device** %opp_dev, align 8, !dbg !7202
  call void @llvm.dbg.declare(metadata i8** %__mptr58, metadata !7216, metadata !DIExpression()), !dbg !7218
  %50 = load %struct.opp_device*, %struct.opp_device** %temp, align 8, !dbg !7218
  %node59 = getelementptr inbounds %struct.opp_device, %struct.opp_device* %50, i32 0, i32 0, !dbg !7218
  %next60 = getelementptr inbounds %struct.list_head, %struct.list_head* %node59, i32 0, i32 0, !dbg !7218
  %51 = load %struct.list_head*, %struct.list_head** %next60, align 8, !dbg !7218
  %52 = bitcast %struct.list_head* %51 to i8*, !dbg !7218
  store i8* %52, i8** %__mptr58, align 8, !dbg !7218
  br label %do.body61, !dbg !7218

do.body61:                                        ; preds = %for.inc57
  br label %do.end62, !dbg !7219

do.end62:                                         ; preds = %do.body61
  %53 = load i8*, i8** %__mptr58, align 8, !dbg !7218
  %add.ptr64 = getelementptr i8, i8* %53, i64 0, !dbg !7218
  %54 = bitcast i8* %add.ptr64 to %struct.opp_device*, !dbg !7218
  store %struct.opp_device* %54, %struct.opp_device** %tmp63, align 8, !dbg !7219
  %55 = load %struct.opp_device*, %struct.opp_device** %tmp63, align 8, !dbg !7218
  store %struct.opp_device* %55, %struct.opp_device** %temp, align 8, !dbg !7202
  br label %for.cond45, !dbg !7202, !llvm.loop !7221

for.end65:                                        ; preds = %for.cond45
  %56 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7223
  %genpd_virt_dev_lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %56, i32 0, i32 12, !dbg !7224
  call void @mutex_destroy(%struct.mutex* %genpd_virt_dev_lock) #8, !dbg !7225
  %57 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7226
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %57, i32 0, i32 5, !dbg !7227
  call void @mutex_destroy(%struct.mutex* %lock) #8, !dbg !7228
  %58 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7229
  %59 = bitcast %struct.opp_table* %58 to i8*, !dbg !7229
  call void @kfree(i8* %59) #8, !dbg !7230
  ret void, !dbg !7231
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @_opp_free(%struct.dev_pm_opp* %opp) #0 !dbg !7232 {
entry:
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !7233, metadata !DIExpression()), !dbg !7234
  %0 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !7235
  %1 = bitcast %struct.dev_pm_opp* %0 to i8*, !dbg !7235
  call void @kfree(i8* %1) #8, !dbg !7236
  ret void, !dbg !7237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_opp_kref_release_locked(%struct.kref* %kref) #0 !dbg !7238 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !7239, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !7241, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7243, metadata !DIExpression()), !dbg !7245
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7245
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !7245
  store i8* %1, i8** %__mptr, align 8, !dbg !7245
  br label %do.body, !dbg !7245

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7246

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7245
  %add.ptr = getelementptr i8, i8* %2, i64 -16, !dbg !7245
  %3 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !7245
  store %struct.dev_pm_opp* %3, %struct.dev_pm_opp** %tmp, align 8, !dbg !7246
  %4 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !7245
  store %struct.dev_pm_opp* %4, %struct.dev_pm_opp** %opp, align 8, !dbg !7242
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !7248, metadata !DIExpression()), !dbg !7249
  %5 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7250
  %opp_table1 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %5, i32 0, i32 13, !dbg !7251
  %6 = load %struct.opp_table*, %struct.opp_table** %opp_table1, align 8, !dbg !7251
  store %struct.opp_table* %6, %struct.opp_table** %opp_table, align 8, !dbg !7249
  %7 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7252
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7253
  call void @_opp_kref_release(%struct.dev_pm_opp* %7, %struct.opp_table* %8) #8, !dbg !7254
  %9 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7255
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %9, i32 0, i32 5, !dbg !7256
  call void @mutex_unlock(%struct.mutex* %lock) #8, !dbg !7257
  ret void, !dbg !7258
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dev_pm_opp_remove(%struct.device* %dev, i64 %freq) #0 !dbg !7259 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %freq.addr = alloca i64, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %found = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp11 = alloca %struct.dev_pm_opp*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7262, metadata !DIExpression()), !dbg !7263
  store i64 %freq, i64* %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %freq.addr, metadata !7264, metadata !DIExpression()), !dbg !7265
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !7266, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !7268, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.declare(metadata i8* %found, metadata !7270, metadata !DIExpression()), !dbg !7271
  store i8 0, i8* %found, align 1, !dbg !7271
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7272
  %call = call %struct.opp_table* @_find_opp_table(%struct.device* %0) #8, !dbg !7273
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !7274
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7275
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !7275
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !7277
  br i1 %call1, label %if.then, label %if.end, !dbg !7278

if.then:                                          ; preds = %entry
  br label %return, !dbg !7279

if.end:                                           ; preds = %entry
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7280
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %3, i32 0, i32 5, !dbg !7281
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !7282
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7283, metadata !DIExpression()), !dbg !7286
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7286
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %4, i32 0, i32 3, !dbg !7286
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %opp_list, i32 0, i32 0, !dbg !7286
  %5 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7286
  %6 = bitcast %struct.list_head* %5 to i8*, !dbg !7286
  store i8* %6, i8** %__mptr, align 8, !dbg !7286
  br label %do.body, !dbg !7286

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !7287

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !7286
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !7286
  %8 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !7286
  store %struct.dev_pm_opp* %8, %struct.dev_pm_opp** %tmp, align 8, !dbg !7287
  %9 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !7286
  store %struct.dev_pm_opp* %9, %struct.dev_pm_opp** %opp, align 8, !dbg !7289
  br label %for.cond, !dbg !7289

for.cond:                                         ; preds = %do.end10, %do.end
  %10 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7290
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %10, i32 0, i32 0, !dbg !7290
  %11 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7290
  %opp_list2 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %11, i32 0, i32 3, !dbg !7290
  %cmp = icmp eq %struct.list_head* %node, %opp_list2, !dbg !7290
  %lnot = xor i1 %cmp, true, !dbg !7290
  br i1 %lnot, label %for.body, label %for.end, !dbg !7289

for.body:                                         ; preds = %for.cond
  %12 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7292
  %rate = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %12, i32 0, i32 7, !dbg !7295
  %13 = load i64, i64* %rate, align 8, !dbg !7295
  %14 = load i64, i64* %freq.addr, align 8, !dbg !7296
  %cmp3 = icmp eq i64 %13, %14, !dbg !7297
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7298

if.then4:                                         ; preds = %for.body
  store i8 1, i8* %found, align 1, !dbg !7299
  br label %for.end, !dbg !7301

if.end5:                                          ; preds = %for.body
  br label %for.inc, !dbg !7302

for.inc:                                          ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !7303, metadata !DIExpression()), !dbg !7305
  %15 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7305
  %node7 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %15, i32 0, i32 0, !dbg !7305
  %next8 = getelementptr inbounds %struct.list_head, %struct.list_head* %node7, i32 0, i32 0, !dbg !7305
  %16 = load %struct.list_head*, %struct.list_head** %next8, align 8, !dbg !7305
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !7305
  store i8* %17, i8** %__mptr6, align 8, !dbg !7305
  br label %do.body9, !dbg !7305

do.body9:                                         ; preds = %for.inc
  br label %do.end10, !dbg !7306

do.end10:                                         ; preds = %do.body9
  %18 = load i8*, i8** %__mptr6, align 8, !dbg !7305
  %add.ptr12 = getelementptr i8, i8* %18, i64 0, !dbg !7305
  %19 = bitcast i8* %add.ptr12 to %struct.dev_pm_opp*, !dbg !7305
  store %struct.dev_pm_opp* %19, %struct.dev_pm_opp** %tmp11, align 8, !dbg !7306
  %20 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp11, align 8, !dbg !7305
  store %struct.dev_pm_opp* %20, %struct.dev_pm_opp** %opp, align 8, !dbg !7290
  br label %for.cond, !dbg !7290, !llvm.loop !7308

for.end:                                          ; preds = %if.then4, %for.cond
  %21 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7310
  %lock13 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %21, i32 0, i32 5, !dbg !7311
  call void @mutex_unlock(%struct.mutex* %lock13) #8, !dbg !7312
  %22 = load i8, i8* %found, align 1, !dbg !7313
  %tobool = trunc i8 %22 to i1, !dbg !7313
  br i1 %tobool, label %if.then14, label %if.else, !dbg !7315

if.then14:                                        ; preds = %for.end
  %23 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7316
  call void @dev_pm_opp_put(%struct.dev_pm_opp* %23) #8, !dbg !7318
  %24 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7319
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %24) #8, !dbg !7320
  br label %if.end15, !dbg !7321

if.else:                                          ; preds = %for.end
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7322
  %26 = load i64, i64* %freq.addr, align 8, !dbg !7322
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %25, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.dev_pm_opp_remove, i64 0, i64 0), i64 %26) #9, !dbg !7322
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then14
  %27 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7324
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %27) #8, !dbg !7325
  br label %return, !dbg !7326

return:                                           ; preds = %if.end15, %if.then
  ret void, !dbg !7326
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @_opp_remove_all_static(%struct.opp_table* %opp_table) #0 !dbg !7327 {
entry:
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %ret = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp5 = alloca %struct.dev_pm_opp*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp10 = alloca %struct.dev_pm_opp*, align 8
  %__mptr17 = alloca i8*, align 8
  %tmp22 = alloca %struct.dev_pm_opp*, align 8
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !7330, metadata !DIExpression()), !dbg !7331
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !7332, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %tmp, metadata !7334, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !7336, metadata !DIExpression()), !dbg !7337
  store i8 1, i8* %ret, align 1, !dbg !7337
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7338
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 5, !dbg !7339
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !7340
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7341
  %parsed_static_opps = getelementptr inbounds %struct.opp_table, %struct.opp_table* %1, i32 0, i32 9, !dbg !7343
  %2 = load i32, i32* %parsed_static_opps, align 4, !dbg !7343
  %tobool = icmp ne i32 %2, 0, !dbg !7341
  br i1 %tobool, label %if.end, label %if.then, !dbg !7344

if.then:                                          ; preds = %entry
  store i8 0, i8* %ret, align 1, !dbg !7345
  br label %unlock, !dbg !7347

if.end:                                           ; preds = %entry
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7348
  %parsed_static_opps1 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %3, i32 0, i32 9, !dbg !7350
  %4 = load i32, i32* %parsed_static_opps1, align 4, !dbg !7351
  %dec = add i32 %4, -1, !dbg !7351
  store i32 %dec, i32* %parsed_static_opps1, align 4, !dbg !7351
  %tobool2 = icmp ne i32 %dec, 0, !dbg !7351
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7352

if.then3:                                         ; preds = %if.end
  br label %unlock, !dbg !7353

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7354, metadata !DIExpression()), !dbg !7357
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7357
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 3, !dbg !7357
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %opp_list, i32 0, i32 0, !dbg !7357
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7357
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !7357
  store i8* %7, i8** %__mptr, align 8, !dbg !7357
  br label %do.body, !dbg !7357

do.body:                                          ; preds = %if.end4
  br label %do.end, !dbg !7358

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !7357
  %add.ptr = getelementptr i8, i8* %8, i64 0, !dbg !7357
  %9 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !7357
  store %struct.dev_pm_opp* %9, %struct.dev_pm_opp** %tmp5, align 8, !dbg !7358
  %10 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp5, align 8, !dbg !7357
  store %struct.dev_pm_opp* %10, %struct.dev_pm_opp** %opp, align 8, !dbg !7360
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !7361, metadata !DIExpression()), !dbg !7363
  %11 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7363
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %11, i32 0, i32 0, !dbg !7363
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %node, i32 0, i32 0, !dbg !7363
  %12 = load %struct.list_head*, %struct.list_head** %next7, align 8, !dbg !7363
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !7363
  store i8* %13, i8** %__mptr6, align 8, !dbg !7363
  br label %do.body8, !dbg !7363

do.body8:                                         ; preds = %do.end
  br label %do.end9, !dbg !7364

do.end9:                                          ; preds = %do.body8
  %14 = load i8*, i8** %__mptr6, align 8, !dbg !7363
  %add.ptr11 = getelementptr i8, i8* %14, i64 0, !dbg !7363
  %15 = bitcast i8* %add.ptr11 to %struct.dev_pm_opp*, !dbg !7363
  store %struct.dev_pm_opp* %15, %struct.dev_pm_opp** %tmp10, align 8, !dbg !7364
  %16 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp10, align 8, !dbg !7363
  store %struct.dev_pm_opp* %16, %struct.dev_pm_opp** %tmp, align 8, !dbg !7360
  br label %for.cond, !dbg !7360

for.cond:                                         ; preds = %do.end21, %do.end9
  %17 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7366
  %node12 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %17, i32 0, i32 0, !dbg !7366
  %18 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7366
  %opp_list13 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %18, i32 0, i32 3, !dbg !7366
  %cmp = icmp eq %struct.list_head* %node12, %opp_list13, !dbg !7366
  %lnot = xor i1 %cmp, true, !dbg !7366
  br i1 %lnot, label %for.body, label %for.end, !dbg !7360

for.body:                                         ; preds = %for.cond
  %19 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7368
  %dynamic = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %19, i32 0, i32 3, !dbg !7371
  %20 = load i8, i8* %dynamic, align 1, !dbg !7371
  %tobool14 = trunc i8 %20 to i1, !dbg !7371
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !7372

if.then15:                                        ; preds = %for.body
  %21 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7373
  call void @dev_pm_opp_put_unlocked(%struct.dev_pm_opp* %21) #8, !dbg !7374
  br label %if.end16, !dbg !7374

if.end16:                                         ; preds = %if.then15, %for.body
  br label %for.inc, !dbg !7375

for.inc:                                          ; preds = %if.end16
  %22 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !7366
  store %struct.dev_pm_opp* %22, %struct.dev_pm_opp** %opp, align 8, !dbg !7366
  call void @llvm.dbg.declare(metadata i8** %__mptr17, metadata !7376, metadata !DIExpression()), !dbg !7378
  %23 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !7378
  %node18 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %23, i32 0, i32 0, !dbg !7378
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %node18, i32 0, i32 0, !dbg !7378
  %24 = load %struct.list_head*, %struct.list_head** %next19, align 8, !dbg !7378
  %25 = bitcast %struct.list_head* %24 to i8*, !dbg !7378
  store i8* %25, i8** %__mptr17, align 8, !dbg !7378
  br label %do.body20, !dbg !7378

do.body20:                                        ; preds = %for.inc
  br label %do.end21, !dbg !7379

do.end21:                                         ; preds = %do.body20
  %26 = load i8*, i8** %__mptr17, align 8, !dbg !7378
  %add.ptr23 = getelementptr i8, i8* %26, i64 0, !dbg !7378
  %27 = bitcast i8* %add.ptr23 to %struct.dev_pm_opp*, !dbg !7378
  store %struct.dev_pm_opp* %27, %struct.dev_pm_opp** %tmp22, align 8, !dbg !7379
  %28 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp22, align 8, !dbg !7378
  store %struct.dev_pm_opp* %28, %struct.dev_pm_opp** %tmp, align 8, !dbg !7366
  br label %for.cond, !dbg !7366, !llvm.loop !7381

for.end:                                          ; preds = %for.cond
  br label %unlock, !dbg !7382

unlock:                                           ; preds = %for.end, %if.then3, %if.then
  call void @llvm.dbg.label(metadata !7383), !dbg !7384
  %29 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7385
  %lock24 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %29, i32 0, i32 5, !dbg !7386
  call void @mutex_unlock(%struct.mutex* %lock24) #8, !dbg !7387
  %30 = load i8, i8* %ret, align 1, !dbg !7388
  %tobool25 = trunc i8 %30 to i1, !dbg !7388
  ret i1 %tobool25, !dbg !7389
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_pm_opp_put_unlocked(%struct.dev_pm_opp* %opp) #0 !dbg !7390 {
entry:
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !7391, metadata !DIExpression()), !dbg !7392
  %0 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !7393
  %kref = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %0, i32 0, i32 1, !dbg !7394
  %call = call i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* @_opp_kref_release_unlocked) #8, !dbg !7395
  ret void, !dbg !7396
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dev_pm_opp_remove_all_dynamic(%struct.device* %dev) #0 !dbg !7397 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %temp = alloca %struct.dev_pm_opp*, align 8
  %count = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.dev_pm_opp*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp17 = alloca %struct.dev_pm_opp*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7398, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !7400, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !7402, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %temp, metadata !7404, metadata !DIExpression()), !dbg !7405
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7406, metadata !DIExpression()), !dbg !7407
  store i32 0, i32* %count, align 4, !dbg !7407
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7408
  %call = call %struct.opp_table* @_find_opp_table(%struct.device* %0) #8, !dbg !7409
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !7410
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7411
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !7411
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !7413
  br i1 %call1, label %if.then, label %if.end, !dbg !7414

if.then:                                          ; preds = %entry
  br label %return, !dbg !7415

if.end:                                           ; preds = %entry
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7416
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %3, i32 0, i32 5, !dbg !7417
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !7418
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7419, metadata !DIExpression()), !dbg !7422
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7422
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %4, i32 0, i32 3, !dbg !7422
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %opp_list, i32 0, i32 0, !dbg !7422
  %5 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7422
  %6 = bitcast %struct.list_head* %5 to i8*, !dbg !7422
  store i8* %6, i8** %__mptr, align 8, !dbg !7422
  br label %do.body, !dbg !7422

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !7423

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !7422
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !7422
  %8 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !7422
  store %struct.dev_pm_opp* %8, %struct.dev_pm_opp** %tmp, align 8, !dbg !7423
  %9 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !7422
  store %struct.dev_pm_opp* %9, %struct.dev_pm_opp** %opp, align 8, !dbg !7425
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !7426, metadata !DIExpression()), !dbg !7428
  %10 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7428
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %10, i32 0, i32 0, !dbg !7428
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %node, i32 0, i32 0, !dbg !7428
  %11 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !7428
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !7428
  store i8* %12, i8** %__mptr2, align 8, !dbg !7428
  br label %do.body4, !dbg !7428

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !7429

do.end5:                                          ; preds = %do.body4
  %13 = load i8*, i8** %__mptr2, align 8, !dbg !7428
  %add.ptr7 = getelementptr i8, i8* %13, i64 0, !dbg !7428
  %14 = bitcast i8* %add.ptr7 to %struct.dev_pm_opp*, !dbg !7428
  store %struct.dev_pm_opp* %14, %struct.dev_pm_opp** %tmp6, align 8, !dbg !7429
  %15 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp6, align 8, !dbg !7428
  store %struct.dev_pm_opp* %15, %struct.dev_pm_opp** %temp, align 8, !dbg !7425
  br label %for.cond, !dbg !7425

for.cond:                                         ; preds = %do.end16, %do.end5
  %16 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7431
  %node8 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %16, i32 0, i32 0, !dbg !7431
  %17 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7431
  %opp_list9 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %17, i32 0, i32 3, !dbg !7431
  %cmp = icmp eq %struct.list_head* %node8, %opp_list9, !dbg !7431
  %lnot = xor i1 %cmp, true, !dbg !7431
  br i1 %lnot, label %for.body, label %for.end, !dbg !7425

for.body:                                         ; preds = %for.cond
  %18 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7433
  %dynamic = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %18, i32 0, i32 3, !dbg !7436
  %19 = load i8, i8* %dynamic, align 1, !dbg !7436
  %tobool = trunc i8 %19 to i1, !dbg !7436
  br i1 %tobool, label %if.then10, label %if.end11, !dbg !7437

if.then10:                                        ; preds = %for.body
  %20 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7438
  call void @dev_pm_opp_put_unlocked(%struct.dev_pm_opp* %20) #8, !dbg !7440
  %21 = load i32, i32* %count, align 4, !dbg !7441
  %inc = add i32 %21, 1, !dbg !7441
  store i32 %inc, i32* %count, align 4, !dbg !7441
  br label %if.end11, !dbg !7442

if.end11:                                         ; preds = %if.then10, %for.body
  br label %for.inc, !dbg !7443

for.inc:                                          ; preds = %if.end11
  %22 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp, align 8, !dbg !7431
  store %struct.dev_pm_opp* %22, %struct.dev_pm_opp** %opp, align 8, !dbg !7431
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !7444, metadata !DIExpression()), !dbg !7446
  %23 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %temp, align 8, !dbg !7446
  %node13 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %23, i32 0, i32 0, !dbg !7446
  %next14 = getelementptr inbounds %struct.list_head, %struct.list_head* %node13, i32 0, i32 0, !dbg !7446
  %24 = load %struct.list_head*, %struct.list_head** %next14, align 8, !dbg !7446
  %25 = bitcast %struct.list_head* %24 to i8*, !dbg !7446
  store i8* %25, i8** %__mptr12, align 8, !dbg !7446
  br label %do.body15, !dbg !7446

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !7447

do.end16:                                         ; preds = %do.body15
  %26 = load i8*, i8** %__mptr12, align 8, !dbg !7446
  %add.ptr18 = getelementptr i8, i8* %26, i64 0, !dbg !7446
  %27 = bitcast i8* %add.ptr18 to %struct.dev_pm_opp*, !dbg !7446
  store %struct.dev_pm_opp* %27, %struct.dev_pm_opp** %tmp17, align 8, !dbg !7447
  %28 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp17, align 8, !dbg !7446
  store %struct.dev_pm_opp* %28, %struct.dev_pm_opp** %temp, align 8, !dbg !7431
  br label %for.cond, !dbg !7431, !llvm.loop !7449

for.end:                                          ; preds = %for.cond
  %29 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7451
  %lock19 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %29, i32 0, i32 5, !dbg !7452
  call void @mutex_unlock(%struct.mutex* %lock19) #8, !dbg !7453
  br label %while.cond, !dbg !7454

while.cond:                                       ; preds = %while.body, %for.end
  %30 = load i32, i32* %count, align 4, !dbg !7455
  %dec = add i32 %30, -1, !dbg !7455
  store i32 %dec, i32* %count, align 4, !dbg !7455
  %tobool20 = icmp ne i32 %30, 0, !dbg !7454
  br i1 %tobool20, label %while.body, label %while.end, !dbg !7454

while.body:                                       ; preds = %while.cond
  %31 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7456
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %31) #8, !dbg !7457
  br label %while.cond, !dbg !7454, !llvm.loop !7458

while.end:                                        ; preds = %while.cond
  %32 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !7460
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %32) #8, !dbg !7461
  br label %return, !dbg !7462

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !7462
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dev_pm_opp* @_opp_allocate(%struct.opp_table* %table) #0 !dbg !7463 {
entry:
  %retval = alloca %struct.dev_pm_opp*, align 8
  %table.addr = alloca %struct.opp_table*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %supply_count = alloca i32, align 4
  %supply_size = alloca i32, align 4
  %icc_size = alloca i32, align 4
  store %struct.opp_table* %table, %struct.opp_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %table.addr, metadata !7466, metadata !DIExpression()), !dbg !7467
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !7468, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.declare(metadata i32* %supply_count, metadata !7470, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.declare(metadata i32* %supply_size, metadata !7472, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.declare(metadata i32* %icc_size, metadata !7474, metadata !DIExpression()), !dbg !7475
  %0 = load %struct.opp_table*, %struct.opp_table** %table.addr, align 8, !dbg !7476
  %regulator_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 21, !dbg !7477
  %1 = load i32, i32* %regulator_count, align 8, !dbg !7477
  %cmp = icmp sgt i32 %1, 0, !dbg !7478
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7476

cond.true:                                        ; preds = %entry
  %2 = load %struct.opp_table*, %struct.opp_table** %table.addr, align 8, !dbg !7479
  %regulator_count1 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %2, i32 0, i32 21, !dbg !7480
  %3 = load i32, i32* %regulator_count1, align 8, !dbg !7480
  br label %cond.end, !dbg !7476

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7476

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 1, %cond.false ], !dbg !7476
  store i32 %cond, i32* %supply_count, align 4, !dbg !7481
  %4 = load i32, i32* %supply_count, align 4, !dbg !7482
  %conv = sext i32 %4 to i64, !dbg !7482
  %mul = mul i64 32, %conv, !dbg !7483
  %conv2 = trunc i64 %mul to i32, !dbg !7484
  store i32 %conv2, i32* %supply_size, align 4, !dbg !7485
  %5 = load %struct.opp_table*, %struct.opp_table** %table.addr, align 8, !dbg !7486
  %path_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 23, !dbg !7487
  %6 = load i32, i32* %path_count, align 8, !dbg !7487
  %conv3 = zext i32 %6 to i64, !dbg !7486
  %mul4 = mul i64 8, %conv3, !dbg !7488
  %conv5 = trunc i64 %mul4 to i32, !dbg !7489
  store i32 %conv5, i32* %icc_size, align 4, !dbg !7490
  %7 = load i32, i32* %supply_size, align 4, !dbg !7491
  %conv6 = sext i32 %7 to i64, !dbg !7491
  %add = add i64 96, %conv6, !dbg !7492
  %8 = load i32, i32* %icc_size, align 4, !dbg !7493
  %conv7 = sext i32 %8 to i64, !dbg !7493
  %add8 = add i64 %add, %conv7, !dbg !7494
  %call = call i8* @kzalloc(i64 %add8, i32 3264) #8, !dbg !7495
  %9 = bitcast i8* %call to %struct.dev_pm_opp*, !dbg !7495
  store %struct.dev_pm_opp* %9, %struct.dev_pm_opp** %opp, align 8, !dbg !7496
  %10 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7497
  %tobool = icmp ne %struct.dev_pm_opp* %10, null, !dbg !7497
  br i1 %tobool, label %if.end, label %if.then, !dbg !7499

if.then:                                          ; preds = %cond.end
  store %struct.dev_pm_opp* null, %struct.dev_pm_opp** %retval, align 8, !dbg !7500
  br label %return, !dbg !7500

if.end:                                           ; preds = %cond.end
  %11 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7501
  %add.ptr = getelementptr %struct.dev_pm_opp, %struct.dev_pm_opp* %11, i64 1, !dbg !7502
  %12 = bitcast %struct.dev_pm_opp* %add.ptr to %struct.dev_pm_opp_supply*, !dbg !7503
  %13 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7504
  %supplies = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %13, i32 0, i32 9, !dbg !7505
  store %struct.dev_pm_opp_supply* %12, %struct.dev_pm_opp_supply** %supplies, align 8, !dbg !7506
  %14 = load i32, i32* %icc_size, align 4, !dbg !7507
  %tobool9 = icmp ne i32 %14, 0, !dbg !7507
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !7509

if.then10:                                        ; preds = %if.end
  %15 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7510
  %supplies11 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %15, i32 0, i32 9, !dbg !7511
  %16 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies11, align 8, !dbg !7511
  %17 = load i32, i32* %supply_count, align 4, !dbg !7512
  %idx.ext = sext i32 %17 to i64, !dbg !7513
  %add.ptr12 = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %16, i64 %idx.ext, !dbg !7513
  %18 = bitcast %struct.dev_pm_opp_supply* %add.ptr12 to %struct.dev_pm_opp_icc_bw*, !dbg !7514
  %19 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7515
  %bandwidth = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %19, i32 0, i32 10, !dbg !7516
  store %struct.dev_pm_opp_icc_bw* %18, %struct.dev_pm_opp_icc_bw** %bandwidth, align 8, !dbg !7517
  br label %if.end13, !dbg !7515

if.end13:                                         ; preds = %if.then10, %if.end
  %20 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7518
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %20, i32 0, i32 0, !dbg !7519
  call void @INIT_LIST_HEAD(%struct.list_head* %node) #8, !dbg !7520
  %21 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7521
  store %struct.dev_pm_opp* %21, %struct.dev_pm_opp** %retval, align 8, !dbg !7522
  br label %return, !dbg !7522

return:                                           ; preds = %if.end13, %if.then
  %22 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %retval, align 8, !dbg !7523
  ret %struct.dev_pm_opp* %22, !dbg !7523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !7524 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5373, metadata !DIExpression()), !dbg !7525
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5386, metadata !DIExpression()), !dbg !7528
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5388, metadata !DIExpression()), !dbg !7529
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5390, metadata !DIExpression()), !dbg !7530
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5392, metadata !DIExpression()), !dbg !7531
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5398, metadata !DIExpression()), !dbg !7533
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5404, metadata !DIExpression()), !dbg !7535
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5413, metadata !DIExpression()), !dbg !7538
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5415, metadata !DIExpression()), !dbg !7539
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5417, metadata !DIExpression()), !dbg !7540
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5419, metadata !DIExpression()), !dbg !7541
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5421, metadata !DIExpression()), !dbg !7542
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5423, metadata !DIExpression()), !dbg !7543
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5425, metadata !DIExpression()), !dbg !7544
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5427, metadata !DIExpression()), !dbg !7545
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7546, metadata !DIExpression()), !dbg !7547
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7548, metadata !DIExpression()), !dbg !7549
  %0 = load i64, i64* %size.addr, align 8, !dbg !7550
  %1 = load i32, i32* %flags.addr, align 4, !dbg !7551
  %or = or i32 %1, 256, !dbg !7552
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !7553
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !7554
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !7555

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7556
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !7557
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7558

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !7559
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !7560
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7561
  %call.i.i = call i32 @get_order(i64 %7) #11, !dbg !7562
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7542
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !7563
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7564
  %10 = load i32, i32* %order.i.i, align 4, !dbg !7565
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7566
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7567
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7568
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !7569
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7569
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7569
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7569
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !7569
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7570
  br label %kmalloc.exit, !dbg !7570

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !7571
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7572
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !7572
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7573

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7574
  br label %kmalloc_index.exit.i, !dbg !7574

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7575
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !7576
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7577

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7578
  br label %kmalloc_index.exit.i, !dbg !7578

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7579
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !7580
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7581

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7582
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !7583
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7584

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7585
  br label %kmalloc_index.exit.i, !dbg !7585

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7586
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !7587
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7588

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7589
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !7590
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7591

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7592
  br label %kmalloc_index.exit.i, !dbg !7592

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7593
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !7594
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7595

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7596
  br label %kmalloc_index.exit.i, !dbg !7596

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7597
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !7598
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7599

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7600
  br label %kmalloc_index.exit.i, !dbg !7600

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7601
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !7602
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7603

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7604
  br label %kmalloc_index.exit.i, !dbg !7604

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7605
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !7606
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7607

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7608
  br label %kmalloc_index.exit.i, !dbg !7608

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7609
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !7610
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7611

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7612
  br label %kmalloc_index.exit.i, !dbg !7612

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7613
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !7614
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7615

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7616
  br label %kmalloc_index.exit.i, !dbg !7616

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7617
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !7618
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7619

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7620
  br label %kmalloc_index.exit.i, !dbg !7620

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7621
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !7622
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7623

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7624
  br label %kmalloc_index.exit.i, !dbg !7624

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7625
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !7626
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7627

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7628
  br label %kmalloc_index.exit.i, !dbg !7628

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7629
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !7630
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7631

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7632
  br label %kmalloc_index.exit.i, !dbg !7632

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7633
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !7634
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7635

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7636
  br label %kmalloc_index.exit.i, !dbg !7636

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7637
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !7638
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7639

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7640
  br label %kmalloc_index.exit.i, !dbg !7640

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7641
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !7642
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7643

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7644
  br label %kmalloc_index.exit.i, !dbg !7644

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7645
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !7646
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7647

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7648
  br label %kmalloc_index.exit.i, !dbg !7648

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7649
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !7650
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7651

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7652
  br label %kmalloc_index.exit.i, !dbg !7652

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7653
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !7654
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7655

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7656
  br label %kmalloc_index.exit.i, !dbg !7656

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7657
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !7658
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7659

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7660
  br label %kmalloc_index.exit.i, !dbg !7660

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7661
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !7662
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7663

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7664
  br label %kmalloc_index.exit.i, !dbg !7664

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7665
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !7666
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7667

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7668
  br label %kmalloc_index.exit.i, !dbg !7668

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7669
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !7670
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7671

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7672
  br label %kmalloc_index.exit.i, !dbg !7672

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7673
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !7674
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7675

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7676
  br label %kmalloc_index.exit.i, !dbg !7676

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7677
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !7678
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7679

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7680
  br label %kmalloc_index.exit.i, !dbg !7680

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7681
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !7682
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7683

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7684
  br label %kmalloc_index.exit.i, !dbg !7684

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7685
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !7686
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7687

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7688
  br label %kmalloc_index.exit.i, !dbg !7688

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !7689, !srcloc !5621
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #10, !dbg !7690, !srcloc !5625
  unreachable, !dbg !7691

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !7692
  store i32 %45, i32* %index.i, align 4, !dbg !7693
  %46 = load i32, i32* %index.i, align 4, !dbg !7694
  %tobool.i = icmp ne i32 %46, 0, !dbg !7694
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7695

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7696
  br label %kmalloc.exit, !dbg !7696

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !7697
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7698
  %and.i.i = and i32 %48, 17, !dbg !7698
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7698
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7698
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7698
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7698
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7699

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7700
  br label %kmalloc_type.exit.i, !dbg !7700

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7701
  %and2.i.i = and i32 %49, 1, !dbg !7702
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7701
  %50 = zext i1 %tobool3.i.i to i64, !dbg !7701
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7701
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7703
  br label %kmalloc_type.exit.i, !dbg !7703

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !7704
  %idxprom.i = zext i32 %51 to i64, !dbg !7705
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7705
  %52 = load i32, i32* %index.i, align 4, !dbg !7706
  %idxprom6.i = zext i32 %52 to i64, !dbg !7705
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7705
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7705
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !7707
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !7708
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7709
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7710
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !7711
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7711
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7711
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7711
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !7711
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7530
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7712
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !7713
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7714
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7715
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !7716
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7717
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !7718
  store i8* %62, i8** %retval.i, align 8, !dbg !7719
  br label %kmalloc.exit, !dbg !7719

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !7720
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !7721
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !7722
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7722
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7722
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7722
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !7722
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7723
  br label %kmalloc.exit, !dbg !7723

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !7724
  ret i8* %65, !dbg !7725
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !7726 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !7730, metadata !DIExpression()), !dbg !7731
  br label %do.body, !dbg !7732

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7733

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !7735

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !7733

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7737
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7737
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !7737
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !7737
  br label %do.end3, !dbg !7737

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !7733

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7739
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !7740
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !7741
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !7742
  ret void, !dbg !7743
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @_opp_compare_key(%struct.dev_pm_opp* %opp1, %struct.dev_pm_opp* %opp2) #0 !dbg !7744 {
entry:
  %retval = alloca i32, align 4
  %opp1.addr = alloca %struct.dev_pm_opp*, align 8
  %opp2.addr = alloca %struct.dev_pm_opp*, align 8
  store %struct.dev_pm_opp* %opp1, %struct.dev_pm_opp** %opp1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp1.addr, metadata !7747, metadata !DIExpression()), !dbg !7748
  store %struct.dev_pm_opp* %opp2, %struct.dev_pm_opp** %opp2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp2.addr, metadata !7749, metadata !DIExpression()), !dbg !7750
  %0 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp1.addr, align 8, !dbg !7751
  %rate = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %0, i32 0, i32 7, !dbg !7753
  %1 = load i64, i64* %rate, align 8, !dbg !7753
  %2 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp2.addr, align 8, !dbg !7754
  %rate1 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %2, i32 0, i32 7, !dbg !7755
  %3 = load i64, i64* %rate1, align 8, !dbg !7755
  %cmp = icmp ne i64 %1, %3, !dbg !7756
  br i1 %cmp, label %if.then, label %if.end, !dbg !7757

if.then:                                          ; preds = %entry
  %4 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp1.addr, align 8, !dbg !7758
  %rate2 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %4, i32 0, i32 7, !dbg !7759
  %5 = load i64, i64* %rate2, align 8, !dbg !7759
  %6 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp2.addr, align 8, !dbg !7760
  %rate3 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %6, i32 0, i32 7, !dbg !7761
  %7 = load i64, i64* %rate3, align 8, !dbg !7761
  %cmp4 = icmp ult i64 %5, %7, !dbg !7762
  %8 = zext i1 %cmp4 to i64, !dbg !7758
  %cond = select i1 %cmp4, i32 -1, i32 1, !dbg !7758
  store i32 %cond, i32* %retval, align 4, !dbg !7763
  br label %return, !dbg !7763

if.end:                                           ; preds = %entry
  %9 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp1.addr, align 8, !dbg !7764
  %bandwidth = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %9, i32 0, i32 10, !dbg !7766
  %10 = load %struct.dev_pm_opp_icc_bw*, %struct.dev_pm_opp_icc_bw** %bandwidth, align 8, !dbg !7766
  %tobool = icmp ne %struct.dev_pm_opp_icc_bw* %10, null, !dbg !7764
  br i1 %tobool, label %land.lhs.true, label %if.end22, !dbg !7767

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp2.addr, align 8, !dbg !7768
  %bandwidth5 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %11, i32 0, i32 10, !dbg !7769
  %12 = load %struct.dev_pm_opp_icc_bw*, %struct.dev_pm_opp_icc_bw** %bandwidth5, align 8, !dbg !7769
  %tobool6 = icmp ne %struct.dev_pm_opp_icc_bw* %12, null, !dbg !7768
  br i1 %tobool6, label %land.lhs.true7, label %if.end22, !dbg !7770

land.lhs.true7:                                   ; preds = %land.lhs.true
  %13 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp1.addr, align 8, !dbg !7771
  %bandwidth8 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %13, i32 0, i32 10, !dbg !7772
  %14 = load %struct.dev_pm_opp_icc_bw*, %struct.dev_pm_opp_icc_bw** %bandwidth8, align 8, !dbg !7772
  %arrayidx = getelementptr %struct.dev_pm_opp_icc_bw, %struct.dev_pm_opp_icc_bw* %14, i64 0, !dbg !7771
  %peak = getelementptr inbounds %struct.dev_pm_opp_icc_bw, %struct.dev_pm_opp_icc_bw* %arrayidx, i32 0, i32 1, !dbg !7773
  %15 = load i32, i32* %peak, align 4, !dbg !7773
  %16 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp2.addr, align 8, !dbg !7774
  %bandwidth9 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %16, i32 0, i32 10, !dbg !7775
  %17 = load %struct.dev_pm_opp_icc_bw*, %struct.dev_pm_opp_icc_bw** %bandwidth9, align 8, !dbg !7775
  %arrayidx10 = getelementptr %struct.dev_pm_opp_icc_bw, %struct.dev_pm_opp_icc_bw* %17, i64 0, !dbg !7774
  %peak11 = getelementptr inbounds %struct.dev_pm_opp_icc_bw, %struct.dev_pm_opp_icc_bw* %arrayidx10, i32 0, i32 1, !dbg !7776
  %18 = load i32, i32* %peak11, align 4, !dbg !7776
  %cmp12 = icmp ne i32 %15, %18, !dbg !7777
  br i1 %cmp12, label %if.then13, label %if.end22, !dbg !7778

if.then13:                                        ; preds = %land.lhs.true7
  %19 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp1.addr, align 8, !dbg !7779
  %bandwidth14 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %19, i32 0, i32 10, !dbg !7780
  %20 = load %struct.dev_pm_opp_icc_bw*, %struct.dev_pm_opp_icc_bw** %bandwidth14, align 8, !dbg !7780
  %arrayidx15 = getelementptr %struct.dev_pm_opp_icc_bw, %struct.dev_pm_opp_icc_bw* %20, i64 0, !dbg !7779
  %peak16 = getelementptr inbounds %struct.dev_pm_opp_icc_bw, %struct.dev_pm_opp_icc_bw* %arrayidx15, i32 0, i32 1, !dbg !7781
  %21 = load i32, i32* %peak16, align 4, !dbg !7781
  %22 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp2.addr, align 8, !dbg !7782
  %bandwidth17 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %22, i32 0, i32 10, !dbg !7783
  %23 = load %struct.dev_pm_opp_icc_bw*, %struct.dev_pm_opp_icc_bw** %bandwidth17, align 8, !dbg !7783
  %arrayidx18 = getelementptr %struct.dev_pm_opp_icc_bw, %struct.dev_pm_opp_icc_bw* %23, i64 0, !dbg !7782
  %peak19 = getelementptr inbounds %struct.dev_pm_opp_icc_bw, %struct.dev_pm_opp_icc_bw* %arrayidx18, i32 0, i32 1, !dbg !7784
  %24 = load i32, i32* %peak19, align 4, !dbg !7784
  %cmp20 = icmp ult i32 %21, %24, !dbg !7785
  %25 = zext i1 %cmp20 to i64, !dbg !7779
  %cond21 = select i1 %cmp20, i32 -1, i32 1, !dbg !7779
  store i32 %cond21, i32* %retval, align 4, !dbg !7786
  br label %return, !dbg !7786

if.end22:                                         ; preds = %land.lhs.true7, %land.lhs.true, %if.end
  %26 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp1.addr, align 8, !dbg !7787
  %level = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %26, i32 0, i32 8, !dbg !7789
  %27 = load i32, i32* %level, align 8, !dbg !7789
  %28 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp2.addr, align 8, !dbg !7790
  %level23 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %28, i32 0, i32 8, !dbg !7791
  %29 = load i32, i32* %level23, align 8, !dbg !7791
  %cmp24 = icmp ne i32 %27, %29, !dbg !7792
  br i1 %cmp24, label %if.then25, label %if.end30, !dbg !7793

if.then25:                                        ; preds = %if.end22
  %30 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp1.addr, align 8, !dbg !7794
  %level26 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %30, i32 0, i32 8, !dbg !7795
  %31 = load i32, i32* %level26, align 8, !dbg !7795
  %32 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp2.addr, align 8, !dbg !7796
  %level27 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %32, i32 0, i32 8, !dbg !7797
  %33 = load i32, i32* %level27, align 8, !dbg !7797
  %cmp28 = icmp ult i32 %31, %33, !dbg !7798
  %34 = zext i1 %cmp28 to i64, !dbg !7794
  %cond29 = select i1 %cmp28, i32 -1, i32 1, !dbg !7794
  store i32 %cond29, i32* %retval, align 4, !dbg !7799
  br label %return, !dbg !7799

if.end30:                                         ; preds = %if.end22
  store i32 0, i32* %retval, align 4, !dbg !7800
  br label %return, !dbg !7800

return:                                           ; preds = %if.end30, %if.then25, %if.then13, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !7801
  ret i32 %35, !dbg !7801
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @_opp_add(%struct.device* %dev, %struct.dev_pm_opp* %new_opp, %struct.opp_table* %opp_table, i1 zeroext %rate_not_available) #0 !dbg !7802 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %new_opp.addr = alloca %struct.dev_pm_opp*, align 8
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %rate_not_available.addr = alloca i8, align 1
  %head = alloca %struct.list_head*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7805, metadata !DIExpression()), !dbg !7806
  store %struct.dev_pm_opp* %new_opp, %struct.dev_pm_opp** %new_opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %new_opp.addr, metadata !7807, metadata !DIExpression()), !dbg !7808
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !7809, metadata !DIExpression()), !dbg !7810
  %frombool = zext i1 %rate_not_available to i8
  store i8 %frombool, i8* %rate_not_available.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rate_not_available.addr, metadata !7811, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.declare(metadata %struct.list_head** %head, metadata !7813, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7815, metadata !DIExpression()), !dbg !7816
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7817
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 5, !dbg !7818
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !7819
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7820
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %1, i32 0, i32 3, !dbg !7821
  store %struct.list_head* %opp_list, %struct.list_head** %head, align 8, !dbg !7822
  %2 = load i8, i8* %rate_not_available.addr, align 1, !dbg !7823
  %tobool = trunc i8 %2 to i1, !dbg !7823
  %lnot = xor i1 %tobool, true, !dbg !7823
  %lnot1 = xor i1 %lnot, true, !dbg !7823
  %lnot2 = xor i1 %lnot1, true, !dbg !7823
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7823
  %conv = sext i32 %lnot.ext to i64, !dbg !7823
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7823
  br i1 %tobool3, label %if.then, label %if.end7, !dbg !7825

if.then:                                          ; preds = %entry
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7826
  %4 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp.addr, align 8, !dbg !7828
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7829
  %call = call i32 @_opp_is_duplicate(%struct.device* %3, %struct.dev_pm_opp* %4, %struct.opp_table* %5, %struct.list_head** %head) #8, !dbg !7830
  store i32 %call, i32* %ret, align 4, !dbg !7831
  %6 = load i32, i32* %ret, align 4, !dbg !7832
  %tobool4 = icmp ne i32 %6, 0, !dbg !7832
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !7834

if.then5:                                         ; preds = %if.then
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7835
  %lock6 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %7, i32 0, i32 5, !dbg !7837
  call void @mutex_unlock(%struct.mutex* %lock6) #8, !dbg !7838
  %8 = load i32, i32* %ret, align 4, !dbg !7839
  store i32 %8, i32* %retval, align 4, !dbg !7840
  br label %return, !dbg !7840

if.end:                                           ; preds = %if.then
  br label %if.end7, !dbg !7841

if.end7:                                          ; preds = %if.end, %entry
  %9 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp.addr, align 8, !dbg !7842
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %9, i32 0, i32 0, !dbg !7843
  %10 = load %struct.list_head*, %struct.list_head** %head, align 8, !dbg !7844
  call void @list_add(%struct.list_head* %node, %struct.list_head* %10) #8, !dbg !7845
  %11 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7846
  %lock8 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %11, i32 0, i32 5, !dbg !7847
  call void @mutex_unlock(%struct.mutex* %lock8) #8, !dbg !7848
  %12 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7849
  %13 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp.addr, align 8, !dbg !7850
  %opp_table9 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %13, i32 0, i32 13, !dbg !7851
  store %struct.opp_table* %12, %struct.opp_table** %opp_table9, align 8, !dbg !7852
  %14 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp.addr, align 8, !dbg !7853
  %kref = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %14, i32 0, i32 1, !dbg !7854
  call void @kref_init(%struct.kref* %kref) #8, !dbg !7855
  %15 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp.addr, align 8, !dbg !7856
  %16 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7857
  call void @opp_debug_create_one(%struct.dev_pm_opp* %15, %struct.opp_table* %16) #8, !dbg !7858
  %17 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp.addr, align 8, !dbg !7859
  %18 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7861
  %call10 = call zeroext i1 @_opp_supported_by_regulators(%struct.dev_pm_opp* %17, %struct.opp_table* %18) #8, !dbg !7862
  br i1 %call10, label %if.end12, label %if.then11, !dbg !7863

if.then11:                                        ; preds = %if.end7
  %19 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp.addr, align 8, !dbg !7864
  %available = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %19, i32 0, i32 2, !dbg !7866
  store i8 0, i8* %available, align 4, !dbg !7867
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7868
  %21 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp.addr, align 8, !dbg !7868
  %rate = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %21, i32 0, i32 7, !dbg !7868
  %22 = load i64, i64* %rate, align 8, !dbg !7868
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %20, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__._opp_add, i64 0, i64 0), i64 %22) #9, !dbg !7868
  br label %if.end12, !dbg !7869

if.end12:                                         ; preds = %if.then11, %if.end7
  store i32 0, i32* %retval, align 4, !dbg !7870
  br label %return, !dbg !7870

return:                                           ; preds = %if.end12, %if.then5
  %23 = load i32, i32* %retval, align 4, !dbg !7871
  ret i32 %23, !dbg !7871
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_opp_is_duplicate(%struct.device* %dev, %struct.dev_pm_opp* %new_opp, %struct.opp_table* %opp_table, %struct.list_head** %head) #0 !dbg !7872 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %new_opp.addr = alloca %struct.dev_pm_opp*, align 8
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %head.addr = alloca %struct.list_head**, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %opp_cmp = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %__mptr25 = alloca i8*, align 8
  %tmp30 = alloca %struct.dev_pm_opp*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7876, metadata !DIExpression()), !dbg !7877
  store %struct.dev_pm_opp* %new_opp, %struct.dev_pm_opp** %new_opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %new_opp.addr, metadata !7878, metadata !DIExpression()), !dbg !7879
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !7880, metadata !DIExpression()), !dbg !7881
  store %struct.list_head** %head, %struct.list_head*** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head*** %head.addr, metadata !7882, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !7884, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.declare(metadata i32* %opp_cmp, metadata !7886, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7888, metadata !DIExpression()), !dbg !7891
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7891
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 3, !dbg !7891
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %opp_list, i32 0, i32 0, !dbg !7891
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7891
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !7891
  store i8* %2, i8** %__mptr, align 8, !dbg !7891
  br label %do.body, !dbg !7891

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7892

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !7891
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !7891
  %4 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !7891
  store %struct.dev_pm_opp* %4, %struct.dev_pm_opp** %tmp, align 8, !dbg !7892
  %5 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !7891
  store %struct.dev_pm_opp* %5, %struct.dev_pm_opp** %opp, align 8, !dbg !7894
  br label %for.cond, !dbg !7894

for.cond:                                         ; preds = %do.end29, %do.end
  %6 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7895
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %6, i32 0, i32 0, !dbg !7895
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7895
  %opp_list1 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %7, i32 0, i32 3, !dbg !7895
  %cmp = icmp eq %struct.list_head* %node, %opp_list1, !dbg !7895
  %lnot = xor i1 %cmp, true, !dbg !7895
  br i1 %lnot, label %for.body, label %for.end, !dbg !7894

for.body:                                         ; preds = %for.cond
  %8 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp.addr, align 8, !dbg !7897
  %9 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7899
  %call = call i32 @_opp_compare_key(%struct.dev_pm_opp* %8, %struct.dev_pm_opp* %9) #8, !dbg !7900
  store i32 %call, i32* %opp_cmp, align 4, !dbg !7901
  %10 = load i32, i32* %opp_cmp, align 4, !dbg !7902
  %cmp2 = icmp sgt i32 %10, 0, !dbg !7904
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7905

if.then:                                          ; preds = %for.body
  %11 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7906
  %node3 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %11, i32 0, i32 0, !dbg !7908
  %12 = load %struct.list_head**, %struct.list_head*** %head.addr, align 8, !dbg !7909
  store %struct.list_head* %node3, %struct.list_head** %12, align 8, !dbg !7910
  br label %for.inc, !dbg !7911

if.end:                                           ; preds = %for.body
  %13 = load i32, i32* %opp_cmp, align 4, !dbg !7912
  %cmp4 = icmp slt i32 %13, 0, !dbg !7914
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !7915

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7916
  br label %return, !dbg !7916

if.end6:                                          ; preds = %if.end
  %14 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7917
  %15 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7917
  %rate = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %15, i32 0, i32 7, !dbg !7917
  %16 = load i64, i64* %rate, align 8, !dbg !7917
  %17 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7917
  %supplies = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %17, i32 0, i32 9, !dbg !7917
  %18 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies, align 8, !dbg !7917
  %arrayidx = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %18, i64 0, !dbg !7917
  %u_volt = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx, i32 0, i32 0, !dbg !7917
  %19 = load i64, i64* %u_volt, align 8, !dbg !7917
  %20 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7917
  %available = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %20, i32 0, i32 2, !dbg !7917
  %21 = load i8, i8* %available, align 4, !dbg !7917
  %tobool = trunc i8 %21 to i1, !dbg !7917
  %conv = zext i1 %tobool to i32, !dbg !7917
  %22 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp.addr, align 8, !dbg !7917
  %rate7 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %22, i32 0, i32 7, !dbg !7917
  %23 = load i64, i64* %rate7, align 8, !dbg !7917
  %24 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp.addr, align 8, !dbg !7917
  %supplies8 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %24, i32 0, i32 9, !dbg !7917
  %25 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies8, align 8, !dbg !7917
  %arrayidx9 = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %25, i64 0, !dbg !7917
  %u_volt10 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx9, i32 0, i32 0, !dbg !7917
  %26 = load i64, i64* %u_volt10, align 8, !dbg !7917
  %27 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp.addr, align 8, !dbg !7917
  %available11 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %27, i32 0, i32 2, !dbg !7917
  %28 = load i8, i8* %available11, align 4, !dbg !7917
  %tobool12 = trunc i8 %28 to i1, !dbg !7917
  %conv13 = zext i1 %tobool12 to i32, !dbg !7917
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %14, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._opp_is_duplicate, i64 0, i64 0), i64 %16, i64 %19, i32 %conv, i64 %23, i64 %26, i32 %conv13) #9, !dbg !7917
  %29 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7918
  %available14 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %29, i32 0, i32 2, !dbg !7919
  %30 = load i8, i8* %available14, align 4, !dbg !7919
  %tobool15 = trunc i8 %30 to i1, !dbg !7919
  br i1 %tobool15, label %land.rhs, label %land.end, !dbg !7920

land.rhs:                                         ; preds = %if.end6
  %31 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp.addr, align 8, !dbg !7921
  %supplies17 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %31, i32 0, i32 9, !dbg !7922
  %32 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies17, align 8, !dbg !7922
  %arrayidx18 = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %32, i64 0, !dbg !7921
  %u_volt19 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx18, i32 0, i32 0, !dbg !7923
  %33 = load i64, i64* %u_volt19, align 8, !dbg !7923
  %34 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7924
  %supplies20 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %34, i32 0, i32 9, !dbg !7925
  %35 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies20, align 8, !dbg !7925
  %arrayidx21 = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %35, i64 0, !dbg !7924
  %u_volt22 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx21, i32 0, i32 0, !dbg !7926
  %36 = load i64, i64* %u_volt22, align 8, !dbg !7926
  %cmp23 = icmp eq i64 %33, %36, !dbg !7927
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end6
  %37 = phi i1 [ false, %if.end6 ], [ %cmp23, %land.rhs ], !dbg !7928
  %38 = zext i1 %37 to i64, !dbg !7918
  %cond = select i1 %37, i32 -16, i32 -17, !dbg !7918
  store i32 %cond, i32* %retval, align 4, !dbg !7929
  br label %return, !dbg !7929

for.inc:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !7930, metadata !DIExpression()), !dbg !7932
  %39 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !7932
  %node26 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %39, i32 0, i32 0, !dbg !7932
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %node26, i32 0, i32 0, !dbg !7932
  %40 = load %struct.list_head*, %struct.list_head** %next27, align 8, !dbg !7932
  %41 = bitcast %struct.list_head* %40 to i8*, !dbg !7932
  store i8* %41, i8** %__mptr25, align 8, !dbg !7932
  br label %do.body28, !dbg !7932

do.body28:                                        ; preds = %for.inc
  br label %do.end29, !dbg !7933

do.end29:                                         ; preds = %do.body28
  %42 = load i8*, i8** %__mptr25, align 8, !dbg !7932
  %add.ptr31 = getelementptr i8, i8* %42, i64 0, !dbg !7932
  %43 = bitcast i8* %add.ptr31 to %struct.dev_pm_opp*, !dbg !7932
  store %struct.dev_pm_opp* %43, %struct.dev_pm_opp** %tmp30, align 8, !dbg !7933
  %44 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp30, align 8, !dbg !7932
  store %struct.dev_pm_opp* %44, %struct.dev_pm_opp** %opp, align 8, !dbg !7895
  br label %for.cond, !dbg !7895, !llvm.loop !7935

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7937
  br label %return, !dbg !7937

return:                                           ; preds = %for.end, %land.end, %if.then5
  %45 = load i32, i32* %retval, align 4, !dbg !7938
  ret i32 %45, !dbg !7938
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !7939 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7942, metadata !DIExpression()), !dbg !7943
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7944, metadata !DIExpression()), !dbg !7945
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7946
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7947
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7948
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !7949
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7949
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #8, !dbg !7950
  ret void, !dbg !7951
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_init(%struct.kref* %kref) #0 !dbg !7952 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !7953, metadata !DIExpression()), !dbg !7954
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7955
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !7956
  call void @refcount_set(%struct.refcount_struct* %refcount, i32 1) #8, !dbg !7957
  ret void, !dbg !7958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @opp_debug_create_one(%struct.dev_pm_opp* %opp, %struct.opp_table* %opp_table) #0 !dbg !7959 {
entry:
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  %opp_table.addr = alloca %struct.opp_table*, align 8
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !7962, metadata !DIExpression()), !dbg !7963
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !7964, metadata !DIExpression()), !dbg !7965
  ret void, !dbg !7966
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @_opp_supported_by_regulators(%struct.dev_pm_opp* %opp, %struct.opp_table* %opp_table) #0 !dbg !7967 {
entry:
  %retval = alloca i1, align 1
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %reg = alloca %struct.regulator*, align 8
  %i = alloca i32, align 4
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !7970, metadata !DIExpression()), !dbg !7971
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !7972, metadata !DIExpression()), !dbg !7973
  call void @llvm.dbg.declare(metadata %struct.regulator** %reg, metadata !7974, metadata !DIExpression()), !dbg !7975
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7976, metadata !DIExpression()), !dbg !7977
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7978
  %regulators = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 20, !dbg !7980
  %1 = load %struct.regulator**, %struct.regulator*** %regulators, align 8, !dbg !7980
  %tobool = icmp ne %struct.regulator** %1, null, !dbg !7978
  br i1 %tobool, label %if.end, label %if.then, !dbg !7981

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !7982
  br label %return, !dbg !7982

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !7983
  br label %for.cond, !dbg !7985

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !7986
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7988
  %regulator_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %3, i32 0, i32 21, !dbg !7989
  %4 = load i32, i32* %regulator_count, align 8, !dbg !7989
  %cmp = icmp slt i32 %2, %4, !dbg !7990
  br i1 %cmp, label %for.body, label %for.end, !dbg !7991

for.body:                                         ; preds = %for.cond
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !7992
  %regulators1 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 20, !dbg !7994
  %6 = load %struct.regulator**, %struct.regulator*** %regulators1, align 8, !dbg !7994
  %7 = load i32, i32* %i, align 4, !dbg !7995
  %idxprom = sext i32 %7 to i64, !dbg !7992
  %arrayidx = getelementptr %struct.regulator*, %struct.regulator** %6, i64 %idxprom, !dbg !7992
  %8 = load %struct.regulator*, %struct.regulator** %arrayidx, align 8, !dbg !7992
  store %struct.regulator* %8, %struct.regulator** %reg, align 8, !dbg !7996
  %9 = load %struct.regulator*, %struct.regulator** %reg, align 8, !dbg !7997
  %10 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !7999
  %supplies = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %10, i32 0, i32 9, !dbg !8000
  %11 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies, align 8, !dbg !8000
  %12 = load i32, i32* %i, align 4, !dbg !8001
  %idxprom2 = sext i32 %12 to i64, !dbg !7999
  %arrayidx3 = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %11, i64 %idxprom2, !dbg !7999
  %u_volt_min = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx3, i32 0, i32 1, !dbg !8002
  %13 = load i64, i64* %u_volt_min, align 8, !dbg !8002
  %conv = trunc i64 %13 to i32, !dbg !7999
  %14 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !8003
  %supplies4 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %14, i32 0, i32 9, !dbg !8004
  %15 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies4, align 8, !dbg !8004
  %16 = load i32, i32* %i, align 4, !dbg !8005
  %idxprom5 = sext i32 %16 to i64, !dbg !8003
  %arrayidx6 = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %15, i64 %idxprom5, !dbg !8003
  %u_volt_max = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx6, i32 0, i32 2, !dbg !8006
  %17 = load i64, i64* %u_volt_max, align 8, !dbg !8006
  %conv7 = trunc i64 %17 to i32, !dbg !8003
  %call = call i32 @regulator_is_supported_voltage(%struct.regulator* %9, i32 %conv, i32 %conv7) #8, !dbg !8007
  %tobool8 = icmp ne i32 %call, 0, !dbg !8007
  br i1 %tobool8, label %if.end19, label %if.then9, !dbg !8008

if.then9:                                         ; preds = %for.body
  %18 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !8009
  %supplies10 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %18, i32 0, i32 9, !dbg !8009
  %19 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies10, align 8, !dbg !8009
  %20 = load i32, i32* %i, align 4, !dbg !8009
  %idxprom11 = sext i32 %20 to i64, !dbg !8009
  %arrayidx12 = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %19, i64 %idxprom11, !dbg !8009
  %u_volt_min13 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx12, i32 0, i32 1, !dbg !8009
  %21 = load i64, i64* %u_volt_min13, align 8, !dbg !8009
  %22 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !8009
  %supplies14 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %22, i32 0, i32 9, !dbg !8009
  %23 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies14, align 8, !dbg !8009
  %24 = load i32, i32* %i, align 4, !dbg !8009
  %idxprom15 = sext i32 %24 to i64, !dbg !8009
  %arrayidx16 = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %23, i64 %idxprom15, !dbg !8009
  %u_volt_max17 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx16, i32 0, i32 2, !dbg !8009
  %25 = load i64, i64* %u_volt_max17, align 8, !dbg !8009
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__._opp_supported_by_regulators, i64 0, i64 0), i64 %21, i64 %25) #9, !dbg !8009
  store i1 false, i1* %retval, align 1, !dbg !8011
  br label %return, !dbg !8011

if.end19:                                         ; preds = %for.body
  br label %for.inc, !dbg !8012

for.inc:                                          ; preds = %if.end19
  %26 = load i32, i32* %i, align 4, !dbg !8013
  %inc = add i32 %26, 1, !dbg !8013
  store i32 %inc, i32* %i, align 4, !dbg !8013
  br label %for.cond, !dbg !8014, !llvm.loop !8015

for.end:                                          ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !8017
  br label %return, !dbg !8017

return:                                           ; preds = %for.end, %if.then9, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !8018
  ret i1 %27, !dbg !8018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @_opp_add_v1(%struct.opp_table* %opp_table, %struct.device* %dev, i64 %freq, i64 %u_volt, i1 zeroext %dynamic) #0 !dbg !8019 {
entry:
  %retval = alloca i32, align 4
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %freq.addr = alloca i64, align 8
  %u_volt.addr = alloca i64, align 8
  %dynamic.addr = alloca i8, align 1
  %new_opp = alloca %struct.dev_pm_opp*, align 8
  %tol = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !8022, metadata !DIExpression()), !dbg !8023
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8024, metadata !DIExpression()), !dbg !8025
  store i64 %freq, i64* %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %freq.addr, metadata !8026, metadata !DIExpression()), !dbg !8027
  store i64 %u_volt, i64* %u_volt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %u_volt.addr, metadata !8028, metadata !DIExpression()), !dbg !8029
  %frombool = zext i1 %dynamic to i8
  store i8 %frombool, i8* %dynamic.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dynamic.addr, metadata !8030, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %new_opp, metadata !8032, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.declare(metadata i64* %tol, metadata !8034, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8036, metadata !DIExpression()), !dbg !8037
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8038
  %call = call %struct.dev_pm_opp* @_opp_allocate(%struct.opp_table* %0) #8, !dbg !8039
  store %struct.dev_pm_opp* %call, %struct.dev_pm_opp** %new_opp, align 8, !dbg !8040
  %1 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp, align 8, !dbg !8041
  %tobool = icmp ne %struct.dev_pm_opp* %1, null, !dbg !8041
  br i1 %tobool, label %if.end, label %if.then, !dbg !8043

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8044
  br label %return, !dbg !8044

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %freq.addr, align 8, !dbg !8045
  %3 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp, align 8, !dbg !8046
  %rate = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %3, i32 0, i32 7, !dbg !8047
  store i64 %2, i64* %rate, align 8, !dbg !8048
  %4 = load i64, i64* %u_volt.addr, align 8, !dbg !8049
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8050
  %voltage_tolerance_v1 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 8, !dbg !8051
  %6 = load i32, i32* %voltage_tolerance_v1, align 8, !dbg !8051
  %conv = zext i32 %6 to i64, !dbg !8050
  %mul = mul i64 %4, %conv, !dbg !8052
  %div = sdiv i64 %mul, 100, !dbg !8053
  store i64 %div, i64* %tol, align 8, !dbg !8054
  %7 = load i64, i64* %u_volt.addr, align 8, !dbg !8055
  %8 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp, align 8, !dbg !8056
  %supplies = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %8, i32 0, i32 9, !dbg !8057
  %9 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies, align 8, !dbg !8057
  %arrayidx = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %9, i64 0, !dbg !8056
  %u_volt1 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx, i32 0, i32 0, !dbg !8058
  store i64 %7, i64* %u_volt1, align 8, !dbg !8059
  %10 = load i64, i64* %u_volt.addr, align 8, !dbg !8060
  %11 = load i64, i64* %tol, align 8, !dbg !8061
  %sub = sub i64 %10, %11, !dbg !8062
  %12 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp, align 8, !dbg !8063
  %supplies2 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %12, i32 0, i32 9, !dbg !8064
  %13 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies2, align 8, !dbg !8064
  %arrayidx3 = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %13, i64 0, !dbg !8063
  %u_volt_min = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx3, i32 0, i32 1, !dbg !8065
  store i64 %sub, i64* %u_volt_min, align 8, !dbg !8066
  %14 = load i64, i64* %u_volt.addr, align 8, !dbg !8067
  %15 = load i64, i64* %tol, align 8, !dbg !8068
  %add = add i64 %14, %15, !dbg !8069
  %16 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp, align 8, !dbg !8070
  %supplies4 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %16, i32 0, i32 9, !dbg !8071
  %17 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies4, align 8, !dbg !8071
  %arrayidx5 = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %17, i64 0, !dbg !8070
  %u_volt_max = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %arrayidx5, i32 0, i32 2, !dbg !8072
  store i64 %add, i64* %u_volt_max, align 8, !dbg !8073
  %18 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp, align 8, !dbg !8074
  %available = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %18, i32 0, i32 2, !dbg !8075
  store i8 1, i8* %available, align 4, !dbg !8076
  %19 = load i8, i8* %dynamic.addr, align 1, !dbg !8077
  %tobool6 = trunc i8 %19 to i1, !dbg !8077
  %20 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp, align 8, !dbg !8078
  %dynamic7 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %20, i32 0, i32 3, !dbg !8079
  %frombool8 = zext i1 %tobool6 to i8, !dbg !8080
  store i8 %frombool8, i8* %dynamic7, align 1, !dbg !8080
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8081
  %22 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp, align 8, !dbg !8082
  %23 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8083
  %call9 = call i32 @_opp_add(%struct.device* %21, %struct.dev_pm_opp* %22, %struct.opp_table* %23, i1 zeroext false) #8, !dbg !8084
  store i32 %call9, i32* %ret, align 4, !dbg !8085
  %24 = load i32, i32* %ret, align 4, !dbg !8086
  %tobool10 = icmp ne i32 %24, 0, !dbg !8086
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !8088

if.then11:                                        ; preds = %if.end
  %25 = load i32, i32* %ret, align 4, !dbg !8089
  %cmp = icmp eq i32 %25, -16, !dbg !8092
  br i1 %cmp, label %if.then13, label %if.end14, !dbg !8093

if.then13:                                        ; preds = %if.then11
  store i32 0, i32* %ret, align 4, !dbg !8094
  br label %if.end14, !dbg !8095

if.end14:                                         ; preds = %if.then13, %if.then11
  br label %free_opp, !dbg !8096

if.end15:                                         ; preds = %if.end
  %26 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8097
  %head = getelementptr inbounds %struct.opp_table, %struct.opp_table* %26, i32 0, i32 1, !dbg !8098
  %27 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp, align 8, !dbg !8099
  %28 = bitcast %struct.dev_pm_opp* %27 to i8*, !dbg !8099
  %call16 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %head, i64 0, i8* %28) #8, !dbg !8100
  store i32 0, i32* %retval, align 4, !dbg !8101
  br label %return, !dbg !8101

free_opp:                                         ; preds = %if.end14
  call void @llvm.dbg.label(metadata !8102), !dbg !8103
  %29 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %new_opp, align 8, !dbg !8104
  call void @_opp_free(%struct.dev_pm_opp* %29) #8, !dbg !8105
  %30 = load i32, i32* %ret, align 4, !dbg !8106
  store i32 %30, i32* %retval, align 4, !dbg !8107
  br label %return, !dbg !8107

return:                                           ; preds = %free_opp, %if.end15, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !8108
  ret i32 %31, !dbg !8108
}

; Function Attrs: noredzone
declare dso_local i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head*, i64, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.opp_table* @dev_pm_opp_set_supported_hw(%struct.device* %dev, i32* %versions, i32 %count) #0 !dbg !8109 {
entry:
  %retval = alloca %struct.opp_table*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %versions.addr = alloca i32*, align 8
  %count.addr = alloca i32, align 4
  %opp_table = alloca %struct.opp_table*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8114, metadata !DIExpression()), !dbg !8115
  store i32* %versions, i32** %versions.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %versions.addr, metadata !8116, metadata !DIExpression()), !dbg !8117
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !8118, metadata !DIExpression()), !dbg !8119
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !8120, metadata !DIExpression()), !dbg !8121
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8122
  %call = call %struct.opp_table* @dev_pm_opp_get_opp_table(%struct.device* %0) #8, !dbg !8123
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !8124
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8125
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !8125
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !8127
  br i1 %call1, label %if.then, label %if.end, !dbg !8128

if.then:                                          ; preds = %entry
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8129
  store %struct.opp_table* %3, %struct.opp_table** %retval, align 8, !dbg !8130
  br label %return, !dbg !8130

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8131, metadata !DIExpression()), !dbg !8133
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8133
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %4, i32 0, i32 3, !dbg !8133
  %call2 = call i32 @list_empty(%struct.list_head* %opp_list) #8, !dbg !8133
  %tobool = icmp ne i32 %call2, 0, !dbg !8133
  %lnot = xor i1 %tobool, true, !dbg !8133
  %lnot3 = xor i1 %lnot, true, !dbg !8133
  %lnot4 = xor i1 %lnot3, true, !dbg !8133
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !8133
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8133
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !8134
  %tobool5 = icmp ne i32 %5, 0, !dbg !8134
  %lnot6 = xor i1 %tobool5, true, !dbg !8134
  %lnot8 = xor i1 %lnot6, true, !dbg !8134
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !8134
  %conv = sext i32 %lnot.ext9 to i64, !dbg !8134
  %tobool10 = icmp ne i64 %conv, 0, !dbg !8134
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !8133

if.then11:                                        ; preds = %if.end
  br label %do.body, !dbg !8134

do.body:                                          ; preds = %if.then11
  br label %do.body12, !dbg !8136

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !8138

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !8136

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 1610, i32 2305, i64 12) #10, !dbg !8140, !srcloc !8142
  br label %do.end14, !dbg !8140

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 325) #10, !dbg !8143, !srcloc !8145
  br label %do.body15, !dbg !8136

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !8146

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !8136

do.end17:                                         ; preds = %do.end16
  br label %if.end18, !dbg !8136

if.end18:                                         ; preds = %do.end17, %if.end
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !8133
  %tobool19 = icmp ne i32 %6, 0, !dbg !8133
  %lnot20 = xor i1 %tobool19, true, !dbg !8133
  %lnot22 = xor i1 %lnot20, true, !dbg !8133
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !8133
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !8133
  store i64 %conv24, i64* %tmp, align 8, !dbg !8134
  %7 = load i64, i64* %tmp, align 8, !dbg !8133
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8148
  %supported_hw = getelementptr inbounds %struct.opp_table, %struct.opp_table* %8, i32 0, i32 16, !dbg !8150
  %9 = load i32*, i32** %supported_hw, align 8, !dbg !8150
  %tobool25 = icmp ne i32* %9, null, !dbg !8148
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !8151

if.then26:                                        ; preds = %if.end18
  %10 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8152
  store %struct.opp_table* %10, %struct.opp_table** %retval, align 8, !dbg !8153
  br label %return, !dbg !8153

if.end27:                                         ; preds = %if.end18
  %11 = load i32*, i32** %versions.addr, align 8, !dbg !8154
  %12 = bitcast i32* %11 to i8*, !dbg !8154
  %13 = load i32, i32* %count.addr, align 4, !dbg !8155
  %conv28 = zext i32 %13 to i64, !dbg !8155
  %mul = mul i64 %conv28, 4, !dbg !8156
  %call29 = call i8* @kmemdup(i8* %12, i64 %mul, i32 3264) #8, !dbg !8157
  %14 = bitcast i8* %call29 to i32*, !dbg !8157
  %15 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8158
  %supported_hw30 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %15, i32 0, i32 16, !dbg !8159
  store i32* %14, i32** %supported_hw30, align 8, !dbg !8160
  %16 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8161
  %supported_hw31 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %16, i32 0, i32 16, !dbg !8163
  %17 = load i32*, i32** %supported_hw31, align 8, !dbg !8163
  %tobool32 = icmp ne i32* %17, null, !dbg !8161
  br i1 %tobool32, label %if.end35, label %if.then33, !dbg !8164

if.then33:                                        ; preds = %if.end27
  %18 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8165
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %18) #8, !dbg !8167
  %call34 = call i8* @ERR_PTR(i64 -12) #8, !dbg !8168
  %19 = bitcast i8* %call34 to %struct.opp_table*, !dbg !8168
  store %struct.opp_table* %19, %struct.opp_table** %retval, align 8, !dbg !8169
  br label %return, !dbg !8169

if.end35:                                         ; preds = %if.end27
  %20 = load i32, i32* %count.addr, align 4, !dbg !8170
  %21 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8171
  %supported_hw_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %21, i32 0, i32 17, !dbg !8172
  store i32 %20, i32* %supported_hw_count, align 8, !dbg !8173
  %22 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8174
  store %struct.opp_table* %22, %struct.opp_table** %retval, align 8, !dbg !8175
  br label %return, !dbg !8175

return:                                           ; preds = %if.end35, %if.then33, %if.then26, %if.then
  %23 = load %struct.opp_table*, %struct.opp_table** %retval, align 8, !dbg !8176
  ret %struct.opp_table* %23, !dbg !8176
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !8177 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8182, metadata !DIExpression()), !dbg !8183
  br label %do.body, !dbg !8184

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8186

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8184
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !8184
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8184
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !8186
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !8184
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8188
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !8189
  %conv = zext i1 %cmp to i32, !dbg !8189
  ret i32 %conv, !dbg !8190
}

; Function Attrs: noredzone
declare dso_local i8* @kmemdup(i8*, i64, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dev_pm_opp_put_supported_hw(%struct.opp_table* %opp_table) #0 !dbg !8191 {
entry:
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !8192, metadata !DIExpression()), !dbg !8193
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8194, metadata !DIExpression()), !dbg !8196
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8196
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 3, !dbg !8196
  %call = call i32 @list_empty(%struct.list_head* %opp_list) #8, !dbg !8196
  %tobool = icmp ne i32 %call, 0, !dbg !8196
  %lnot = xor i1 %tobool, true, !dbg !8196
  %lnot1 = xor i1 %lnot, true, !dbg !8196
  %lnot2 = xor i1 %lnot1, true, !dbg !8196
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8196
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8196
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !8197
  %tobool3 = icmp ne i32 %1, 0, !dbg !8197
  %lnot4 = xor i1 %tobool3, true, !dbg !8197
  %lnot6 = xor i1 %lnot4, true, !dbg !8197
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !8197
  %conv = sext i32 %lnot.ext7 to i64, !dbg !8197
  %tobool8 = icmp ne i64 %conv, 0, !dbg !8197
  br i1 %tobool8, label %if.then, label %if.end, !dbg !8196

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8197

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !8199

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !8201

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !8199

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 1640, i32 2305, i64 12) #10, !dbg !8203, !srcloc !8205
  br label %do.end11, !dbg !8203

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 326) #10, !dbg !8206, !srcloc !8208
  br label %do.body12, !dbg !8199

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !8209

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !8199

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !8199

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !8196
  %tobool15 = icmp ne i32 %2, 0, !dbg !8196
  %lnot16 = xor i1 %tobool15, true, !dbg !8196
  %lnot18 = xor i1 %lnot16, true, !dbg !8196
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8196
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8196
  store i64 %conv20, i64* %tmp, align 8, !dbg !8197
  %3 = load i64, i64* %tmp, align 8, !dbg !8196
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8211
  %supported_hw = getelementptr inbounds %struct.opp_table, %struct.opp_table* %4, i32 0, i32 16, !dbg !8212
  %5 = load i32*, i32** %supported_hw, align 8, !dbg !8212
  %6 = bitcast i32* %5 to i8*, !dbg !8211
  call void @kfree(i8* %6) #8, !dbg !8213
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8214
  %supported_hw21 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %7, i32 0, i32 16, !dbg !8215
  store i32* null, i32** %supported_hw21, align 8, !dbg !8216
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8217
  %supported_hw_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %8, i32 0, i32 17, !dbg !8218
  store i32 0, i32* %supported_hw_count, align 8, !dbg !8219
  %9 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8220
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %9) #8, !dbg !8221
  ret void, !dbg !8222
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.opp_table* @dev_pm_opp_set_prop_name(%struct.device* %dev, i8* %name) #0 !dbg !8223 {
entry:
  %retval = alloca %struct.opp_table*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %name.addr = alloca i8*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8226, metadata !DIExpression()), !dbg !8227
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8228, metadata !DIExpression()), !dbg !8229
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !8230, metadata !DIExpression()), !dbg !8231
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8232
  %call = call %struct.opp_table* @dev_pm_opp_get_opp_table(%struct.device* %0) #8, !dbg !8233
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !8234
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8235
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !8235
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !8237
  br i1 %call1, label %if.then, label %if.end, !dbg !8238

if.then:                                          ; preds = %entry
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8239
  store %struct.opp_table* %3, %struct.opp_table** %retval, align 8, !dbg !8240
  br label %return, !dbg !8240

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8241, metadata !DIExpression()), !dbg !8243
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8243
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %4, i32 0, i32 3, !dbg !8243
  %call2 = call i32 @list_empty(%struct.list_head* %opp_list) #8, !dbg !8243
  %tobool = icmp ne i32 %call2, 0, !dbg !8243
  %lnot = xor i1 %tobool, true, !dbg !8243
  %lnot3 = xor i1 %lnot, true, !dbg !8243
  %lnot4 = xor i1 %lnot3, true, !dbg !8243
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !8243
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8243
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !8244
  %tobool5 = icmp ne i32 %5, 0, !dbg !8244
  %lnot6 = xor i1 %tobool5, true, !dbg !8244
  %lnot8 = xor i1 %lnot6, true, !dbg !8244
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !8244
  %conv = sext i32 %lnot.ext9 to i64, !dbg !8244
  %tobool10 = icmp ne i64 %conv, 0, !dbg !8244
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !8243

if.then11:                                        ; preds = %if.end
  br label %do.body, !dbg !8244

do.body:                                          ; preds = %if.then11
  br label %do.body12, !dbg !8246

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !8248

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !8246

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 1669, i32 2305, i64 12) #10, !dbg !8250, !srcloc !8252
  br label %do.end14, !dbg !8250

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 327) #10, !dbg !8253, !srcloc !8255
  br label %do.body15, !dbg !8246

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !8256

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !8246

do.end17:                                         ; preds = %do.end16
  br label %if.end18, !dbg !8246

if.end18:                                         ; preds = %do.end17, %if.end
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !8243
  %tobool19 = icmp ne i32 %6, 0, !dbg !8243
  %lnot20 = xor i1 %tobool19, true, !dbg !8243
  %lnot22 = xor i1 %lnot20, true, !dbg !8243
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !8243
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !8243
  store i64 %conv24, i64* %tmp, align 8, !dbg !8244
  %7 = load i64, i64* %tmp, align 8, !dbg !8243
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8258
  %prop_name = getelementptr inbounds %struct.opp_table, %struct.opp_table* %8, i32 0, i32 18, !dbg !8260
  %9 = load i8*, i8** %prop_name, align 8, !dbg !8260
  %tobool25 = icmp ne i8* %9, null, !dbg !8258
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !8261

if.then26:                                        ; preds = %if.end18
  %10 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8262
  store %struct.opp_table* %10, %struct.opp_table** %retval, align 8, !dbg !8263
  br label %return, !dbg !8263

if.end27:                                         ; preds = %if.end18
  %11 = load i8*, i8** %name.addr, align 8, !dbg !8264
  %call28 = call noalias i8* @kstrdup(i8* %11, i32 3264) #8, !dbg !8265
  %12 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8266
  %prop_name29 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %12, i32 0, i32 18, !dbg !8267
  store i8* %call28, i8** %prop_name29, align 8, !dbg !8268
  %13 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8269
  %prop_name30 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %13, i32 0, i32 18, !dbg !8271
  %14 = load i8*, i8** %prop_name30, align 8, !dbg !8271
  %tobool31 = icmp ne i8* %14, null, !dbg !8269
  br i1 %tobool31, label %if.end34, label %if.then32, !dbg !8272

if.then32:                                        ; preds = %if.end27
  %15 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8273
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %15) #8, !dbg !8275
  %call33 = call i8* @ERR_PTR(i64 -12) #8, !dbg !8276
  %16 = bitcast i8* %call33 to %struct.opp_table*, !dbg !8276
  store %struct.opp_table* %16, %struct.opp_table** %retval, align 8, !dbg !8277
  br label %return, !dbg !8277

if.end34:                                         ; preds = %if.end27
  %17 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8278
  store %struct.opp_table* %17, %struct.opp_table** %retval, align 8, !dbg !8279
  br label %return, !dbg !8279

return:                                           ; preds = %if.end34, %if.then32, %if.then26, %if.then
  %18 = load %struct.opp_table*, %struct.opp_table** %retval, align 8, !dbg !8280
  ret %struct.opp_table* %18, !dbg !8280
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kstrdup(i8*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dev_pm_opp_put_prop_name(%struct.opp_table* %opp_table) #0 !dbg !8281 {
entry:
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !8282, metadata !DIExpression()), !dbg !8283
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8284, metadata !DIExpression()), !dbg !8286
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8286
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 3, !dbg !8286
  %call = call i32 @list_empty(%struct.list_head* %opp_list) #8, !dbg !8286
  %tobool = icmp ne i32 %call, 0, !dbg !8286
  %lnot = xor i1 %tobool, true, !dbg !8286
  %lnot1 = xor i1 %lnot, true, !dbg !8286
  %lnot2 = xor i1 %lnot1, true, !dbg !8286
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8286
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8286
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !8287
  %tobool3 = icmp ne i32 %1, 0, !dbg !8287
  %lnot4 = xor i1 %tobool3, true, !dbg !8287
  %lnot6 = xor i1 %lnot4, true, !dbg !8287
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !8287
  %conv = sext i32 %lnot.ext7 to i64, !dbg !8287
  %tobool8 = icmp ne i64 %conv, 0, !dbg !8287
  br i1 %tobool8, label %if.then, label %if.end, !dbg !8286

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8287

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !8289

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !8291

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !8289

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 1696, i32 2305, i64 12) #10, !dbg !8293, !srcloc !8295
  br label %do.end11, !dbg !8293

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 328) #10, !dbg !8296, !srcloc !8298
  br label %do.body12, !dbg !8289

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !8299

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !8289

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !8289

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !8286
  %tobool15 = icmp ne i32 %2, 0, !dbg !8286
  %lnot16 = xor i1 %tobool15, true, !dbg !8286
  %lnot18 = xor i1 %lnot16, true, !dbg !8286
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8286
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8286
  store i64 %conv20, i64* %tmp, align 8, !dbg !8287
  %3 = load i64, i64* %tmp, align 8, !dbg !8286
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8301
  %prop_name = getelementptr inbounds %struct.opp_table, %struct.opp_table* %4, i32 0, i32 18, !dbg !8302
  %5 = load i8*, i8** %prop_name, align 8, !dbg !8302
  call void @kfree(i8* %5) #8, !dbg !8303
  %6 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8304
  %prop_name21 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %6, i32 0, i32 18, !dbg !8305
  store i8* null, i8** %prop_name21, align 8, !dbg !8306
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8307
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %7) #8, !dbg !8308
  ret void, !dbg !8309
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.opp_table* @dev_pm_opp_set_regulators(%struct.device* %dev, i8** %names, i32 %count) #0 !dbg !8310 {
entry:
  %retval = alloca %struct.opp_table*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %names.addr = alloca i8**, align 8
  %count.addr = alloca i32, align 4
  %opp_table = alloca %struct.opp_table*, align 8
  %reg = alloca %struct.regulator*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8315, metadata !DIExpression()), !dbg !8316
  store i8** %names, i8*** %names.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %names.addr, metadata !8317, metadata !DIExpression()), !dbg !8318
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !8319, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !8321, metadata !DIExpression()), !dbg !8322
  call void @llvm.dbg.declare(metadata %struct.regulator** %reg, metadata !8323, metadata !DIExpression()), !dbg !8324
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8325, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8327, metadata !DIExpression()), !dbg !8328
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8329
  %call = call %struct.opp_table* @dev_pm_opp_get_opp_table(%struct.device* %0) #8, !dbg !8330
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !8331
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8332
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !8332
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !8334
  br i1 %call1, label %if.then, label %if.end, !dbg !8335

if.then:                                          ; preds = %entry
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8336
  store %struct.opp_table* %3, %struct.opp_table** %retval, align 8, !dbg !8337
  br label %return, !dbg !8337

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8338, metadata !DIExpression()), !dbg !8341
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8341
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %4, i32 0, i32 3, !dbg !8341
  %call2 = call i32 @list_empty(%struct.list_head* %opp_list) #8, !dbg !8341
  %tobool = icmp ne i32 %call2, 0, !dbg !8341
  %lnot = xor i1 %tobool, true, !dbg !8341
  %lnot3 = xor i1 %lnot, true, !dbg !8341
  %lnot4 = xor i1 %lnot3, true, !dbg !8341
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !8341
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8341
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !8342
  %tobool5 = icmp ne i32 %5, 0, !dbg !8342
  %lnot6 = xor i1 %tobool5, true, !dbg !8342
  %lnot8 = xor i1 %lnot6, true, !dbg !8342
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !8342
  %conv = sext i32 %lnot.ext9 to i64, !dbg !8342
  %tobool10 = icmp ne i64 %conv, 0, !dbg !8342
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !8341

if.then11:                                        ; preds = %if.end
  br label %do.body, !dbg !8342

do.body:                                          ; preds = %if.then11
  br label %do.body12, !dbg !8344

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !8346

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !8344

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 1762, i32 2305, i64 12) #10, !dbg !8348, !srcloc !8350
  br label %do.end14, !dbg !8348

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 330) #10, !dbg !8351, !srcloc !8353
  br label %do.body15, !dbg !8344

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !8354

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !8344

do.end17:                                         ; preds = %do.end16
  br label %if.end18, !dbg !8344

if.end18:                                         ; preds = %do.end17, %if.end
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !8341
  %tobool19 = icmp ne i32 %6, 0, !dbg !8341
  %lnot20 = xor i1 %tobool19, true, !dbg !8341
  %lnot22 = xor i1 %lnot20, true, !dbg !8341
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !8341
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !8341
  store i64 %conv24, i64* %tmp, align 8, !dbg !8342
  %7 = load i64, i64* %tmp, align 8, !dbg !8341
  %tobool25 = icmp ne i64 %7, 0, !dbg !8356
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !8357

if.then26:                                        ; preds = %if.end18
  store i32 -16, i32* %ret, align 4, !dbg !8358
  br label %err, !dbg !8360

if.end27:                                         ; preds = %if.end18
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8361
  %regulators = getelementptr inbounds %struct.opp_table, %struct.opp_table* %8, i32 0, i32 20, !dbg !8363
  %9 = load %struct.regulator**, %struct.regulator*** %regulators, align 8, !dbg !8363
  %tobool28 = icmp ne %struct.regulator** %9, null, !dbg !8361
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !8364

if.then29:                                        ; preds = %if.end27
  %10 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8365
  store %struct.opp_table* %10, %struct.opp_table** %retval, align 8, !dbg !8366
  br label %return, !dbg !8366

if.end30:                                         ; preds = %if.end27
  %11 = load i32, i32* %count.addr, align 4, !dbg !8367
  %conv31 = zext i32 %11 to i64, !dbg !8367
  %call32 = call i8* @kmalloc_array(i64 %conv31, i64 8, i32 3264) #8, !dbg !8368
  %12 = bitcast i8* %call32 to %struct.regulator**, !dbg !8368
  %13 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8369
  %regulators33 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %13, i32 0, i32 20, !dbg !8370
  store %struct.regulator** %12, %struct.regulator*** %regulators33, align 8, !dbg !8371
  %14 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8372
  %regulators34 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %14, i32 0, i32 20, !dbg !8374
  %15 = load %struct.regulator**, %struct.regulator*** %regulators34, align 8, !dbg !8374
  %tobool35 = icmp ne %struct.regulator** %15, null, !dbg !8372
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !8375

if.then36:                                        ; preds = %if.end30
  store i32 -12, i32* %ret, align 4, !dbg !8376
  br label %err, !dbg !8378

if.end37:                                         ; preds = %if.end30
  store i32 0, i32* %i, align 4, !dbg !8379
  br label %for.cond, !dbg !8381

for.cond:                                         ; preds = %for.inc, %if.end37
  %16 = load i32, i32* %i, align 4, !dbg !8382
  %17 = load i32, i32* %count.addr, align 4, !dbg !8384
  %cmp = icmp ult i32 %16, %17, !dbg !8385
  br i1 %cmp, label %for.body, label %for.end, !dbg !8386

for.body:                                         ; preds = %for.cond
  %18 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8387
  %19 = load i8**, i8*** %names.addr, align 8, !dbg !8389
  %20 = load i32, i32* %i, align 4, !dbg !8390
  %idxprom = sext i32 %20 to i64, !dbg !8389
  %arrayidx = getelementptr i8*, i8** %19, i64 %idxprom, !dbg !8389
  %21 = load i8*, i8** %arrayidx, align 8, !dbg !8389
  %call39 = call %struct.regulator* @regulator_get_optional(%struct.device* %18, i8* %21) #8, !dbg !8391
  store %struct.regulator* %call39, %struct.regulator** %reg, align 8, !dbg !8392
  %22 = load %struct.regulator*, %struct.regulator** %reg, align 8, !dbg !8393
  %23 = bitcast %struct.regulator* %22 to i8*, !dbg !8393
  %call40 = call zeroext i1 @IS_ERR(i8* %23) #8, !dbg !8395
  br i1 %call40, label %if.then41, label %if.end50, !dbg !8396

if.then41:                                        ; preds = %for.body
  %24 = load %struct.regulator*, %struct.regulator** %reg, align 8, !dbg !8397
  %25 = bitcast %struct.regulator* %24 to i8*, !dbg !8397
  %call42 = call i64 @PTR_ERR(i8* %25) #8, !dbg !8399
  %conv43 = trunc i64 %call42 to i32, !dbg !8399
  store i32 %conv43, i32* %ret, align 4, !dbg !8400
  %26 = load i32, i32* %ret, align 4, !dbg !8401
  %cmp44 = icmp ne i32 %26, -517, !dbg !8403
  br i1 %cmp44, label %if.then46, label %if.end49, !dbg !8404

if.then46:                                        ; preds = %if.then41
  %27 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8405
  %28 = load i8**, i8*** %names.addr, align 8, !dbg !8405
  %29 = load i32, i32* %i, align 4, !dbg !8405
  %idxprom47 = sext i32 %29 to i64, !dbg !8405
  %arrayidx48 = getelementptr i8*, i8** %28, i64 %idxprom47, !dbg !8405
  %30 = load i8*, i8** %arrayidx48, align 8, !dbg !8405
  %31 = load i32, i32* %ret, align 4, !dbg !8405
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %27, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.dev_pm_opp_set_regulators, i64 0, i64 0), i8* %30, i32 %31) #9, !dbg !8405
  br label %if.end49, !dbg !8405

if.end49:                                         ; preds = %if.then46, %if.then41
  br label %free_regulators, !dbg !8406

if.end50:                                         ; preds = %for.body
  %32 = load %struct.regulator*, %struct.regulator** %reg, align 8, !dbg !8407
  %33 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8408
  %regulators51 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %33, i32 0, i32 20, !dbg !8409
  %34 = load %struct.regulator**, %struct.regulator*** %regulators51, align 8, !dbg !8409
  %35 = load i32, i32* %i, align 4, !dbg !8410
  %idxprom52 = sext i32 %35 to i64, !dbg !8408
  %arrayidx53 = getelementptr %struct.regulator*, %struct.regulator** %34, i64 %idxprom52, !dbg !8408
  store %struct.regulator* %32, %struct.regulator** %arrayidx53, align 8, !dbg !8411
  br label %for.inc, !dbg !8412

for.inc:                                          ; preds = %if.end50
  %36 = load i32, i32* %i, align 4, !dbg !8413
  %inc = add i32 %36, 1, !dbg !8413
  store i32 %inc, i32* %i, align 4, !dbg !8413
  br label %for.cond, !dbg !8414, !llvm.loop !8415

for.end:                                          ; preds = %for.cond
  %37 = load i32, i32* %count.addr, align 4, !dbg !8417
  %38 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8418
  %regulator_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %38, i32 0, i32 21, !dbg !8419
  store i32 %37, i32* %regulator_count, align 8, !dbg !8420
  %39 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8421
  %call54 = call i32 @_allocate_set_opp_data(%struct.opp_table* %39) #8, !dbg !8422
  store i32 %call54, i32* %ret, align 4, !dbg !8423
  %40 = load i32, i32* %ret, align 4, !dbg !8424
  %tobool55 = icmp ne i32 %40, 0, !dbg !8424
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !8426

if.then56:                                        ; preds = %for.end
  br label %free_regulators, !dbg !8427

if.end57:                                         ; preds = %for.end
  %41 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8428
  store %struct.opp_table* %41, %struct.opp_table** %retval, align 8, !dbg !8429
  br label %return, !dbg !8429

free_regulators:                                  ; preds = %if.then56, %if.end49
  call void @llvm.dbg.label(metadata !8430), !dbg !8431
  br label %while.cond, !dbg !8432

while.cond:                                       ; preds = %while.body, %free_regulators
  %42 = load i32, i32* %i, align 4, !dbg !8433
  %cmp58 = icmp ne i32 %42, 0, !dbg !8434
  br i1 %cmp58, label %while.body, label %while.end, !dbg !8432

while.body:                                       ; preds = %while.cond
  %43 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8435
  %regulators60 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %43, i32 0, i32 20, !dbg !8436
  %44 = load %struct.regulator**, %struct.regulator*** %regulators60, align 8, !dbg !8436
  %45 = load i32, i32* %i, align 4, !dbg !8437
  %dec = add i32 %45, -1, !dbg !8437
  store i32 %dec, i32* %i, align 4, !dbg !8437
  %idxprom61 = sext i32 %dec to i64, !dbg !8435
  %arrayidx62 = getelementptr %struct.regulator*, %struct.regulator** %44, i64 %idxprom61, !dbg !8435
  %46 = load %struct.regulator*, %struct.regulator** %arrayidx62, align 8, !dbg !8435
  call void @regulator_put(%struct.regulator* %46) #8, !dbg !8438
  br label %while.cond, !dbg !8432, !llvm.loop !8439

while.end:                                        ; preds = %while.cond
  %47 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8441
  %regulators63 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %47, i32 0, i32 20, !dbg !8442
  %48 = load %struct.regulator**, %struct.regulator*** %regulators63, align 8, !dbg !8442
  %49 = bitcast %struct.regulator** %48 to i8*, !dbg !8441
  call void @kfree(i8* %49) #8, !dbg !8443
  %50 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8444
  %regulators64 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %50, i32 0, i32 20, !dbg !8445
  store %struct.regulator** null, %struct.regulator*** %regulators64, align 8, !dbg !8446
  %51 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8447
  %regulator_count65 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %51, i32 0, i32 21, !dbg !8448
  store i32 -1, i32* %regulator_count65, align 8, !dbg !8449
  br label %err, !dbg !8447

err:                                              ; preds = %while.end, %if.then36, %if.then26
  call void @llvm.dbg.label(metadata !8450), !dbg !8451
  %52 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8452
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %52) #8, !dbg !8453
  %53 = load i32, i32* %ret, align 4, !dbg !8454
  %conv66 = sext i32 %53 to i64, !dbg !8454
  %call67 = call i8* @ERR_PTR(i64 %conv66) #8, !dbg !8455
  %54 = bitcast i8* %call67 to %struct.opp_table*, !dbg !8455
  store %struct.opp_table* %54, %struct.opp_table** %retval, align 8, !dbg !8456
  br label %return, !dbg !8456

return:                                           ; preds = %err, %if.end57, %if.then29, %if.then
  %55 = load %struct.opp_table*, %struct.opp_table** %retval, align 8, !dbg !8457
  ret %struct.opp_table* %55, !dbg !8457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.regulator* @regulator_get_optional(%struct.device* %dev, i8* %id) #0 !dbg !8458 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %id.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8461, metadata !DIExpression()), !dbg !8462
  store i8* %id, i8** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %id.addr, metadata !8463, metadata !DIExpression()), !dbg !8464
  %call = call i8* @ERR_PTR(i64 -19) #8, !dbg !8465
  %0 = bitcast i8* %call to %struct.regulator*, !dbg !8465
  ret %struct.regulator* %0, !dbg !8466
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_allocate_set_opp_data(%struct.opp_table* %opp_table) #0 !dbg !8467 {
entry:
  %retval = alloca i32, align 4
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %data = alloca %struct.dev_pm_set_opp_data*, align 8
  %len = alloca i32, align 4
  %count = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !8468, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.declare(metadata %struct.dev_pm_set_opp_data** %data, metadata !8470, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8472, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.declare(metadata i32* %count, metadata !8474, metadata !DIExpression()), !dbg !8475
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8476
  %regulator_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 21, !dbg !8477
  %1 = load i32, i32* %regulator_count, align 8, !dbg !8477
  store i32 %1, i32* %count, align 4, !dbg !8475
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8478, metadata !DIExpression()), !dbg !8481
  %2 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8481
  %regulators = getelementptr inbounds %struct.opp_table, %struct.opp_table* %2, i32 0, i32 20, !dbg !8481
  %3 = load %struct.regulator**, %struct.regulator*** %regulators, align 8, !dbg !8481
  %tobool = icmp ne %struct.regulator** %3, null, !dbg !8481
  %lnot = xor i1 %tobool, true, !dbg !8481
  %lnot1 = xor i1 %lnot, true, !dbg !8481
  %lnot2 = xor i1 %lnot1, true, !dbg !8481
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8481
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8481
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !8482
  %tobool3 = icmp ne i32 %4, 0, !dbg !8482
  %lnot4 = xor i1 %tobool3, true, !dbg !8482
  %lnot6 = xor i1 %lnot4, true, !dbg !8482
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !8482
  %conv = sext i32 %lnot.ext7 to i64, !dbg !8482
  %tobool8 = icmp ne i64 %conv, 0, !dbg !8482
  br i1 %tobool8, label %if.then, label %if.end, !dbg !8481

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8482

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !8484

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !8486

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !8484

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 1710, i32 2305, i64 12) #10, !dbg !8488, !srcloc !8490
  br label %do.end11, !dbg !8488

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 329) #10, !dbg !8491, !srcloc !8493
  br label %do.body12, !dbg !8484

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !8494

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !8484

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !8484

if.end:                                           ; preds = %do.end14, %entry
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !8481
  %tobool15 = icmp ne i32 %5, 0, !dbg !8481
  %lnot16 = xor i1 %tobool15, true, !dbg !8481
  %lnot18 = xor i1 %lnot16, true, !dbg !8481
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8481
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8481
  store i64 %conv20, i64* %tmp, align 8, !dbg !8482
  %6 = load i64, i64* %tmp, align 8, !dbg !8481
  %tobool21 = icmp ne i64 %6, 0, !dbg !8496
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !8497

if.then22:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !8498
  br label %return, !dbg !8498

if.end23:                                         ; preds = %if.end
  store i32 64, i32* %len, align 4, !dbg !8499
  %7 = load i32, i32* %count, align 4, !dbg !8500
  %conv24 = sext i32 %7 to i64, !dbg !8500
  %mul = mul i64 64, %conv24, !dbg !8501
  %8 = load i32, i32* %len, align 4, !dbg !8502
  %conv25 = sext i32 %8 to i64, !dbg !8502
  %add = add i64 %conv25, %mul, !dbg !8502
  %conv26 = trunc i64 %add to i32, !dbg !8502
  store i32 %conv26, i32* %len, align 4, !dbg !8502
  %9 = load i32, i32* %len, align 4, !dbg !8503
  %conv27 = sext i32 %9 to i64, !dbg !8503
  %call = call i8* @kzalloc(i64 %conv27, i32 3264) #8, !dbg !8504
  %10 = bitcast i8* %call to %struct.dev_pm_set_opp_data*, !dbg !8504
  store %struct.dev_pm_set_opp_data* %10, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !8505
  %11 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !8506
  %tobool28 = icmp ne %struct.dev_pm_set_opp_data* %11, null, !dbg !8506
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !8508

if.then29:                                        ; preds = %if.end23
  store i32 -12, i32* %retval, align 4, !dbg !8509
  br label %return, !dbg !8509

if.end30:                                         ; preds = %if.end23
  %12 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !8510
  %add.ptr = getelementptr %struct.dev_pm_set_opp_data, %struct.dev_pm_set_opp_data* %12, i64 1, !dbg !8511
  %13 = bitcast %struct.dev_pm_set_opp_data* %add.ptr to i8*, !dbg !8512
  %14 = bitcast i8* %13 to %struct.dev_pm_opp_supply*, !dbg !8512
  %15 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !8513
  %old_opp = getelementptr inbounds %struct.dev_pm_set_opp_data, %struct.dev_pm_set_opp_data* %15, i32 0, i32 0, !dbg !8514
  %supplies = getelementptr inbounds %struct.dev_pm_opp_info, %struct.dev_pm_opp_info* %old_opp, i32 0, i32 1, !dbg !8515
  store %struct.dev_pm_opp_supply* %14, %struct.dev_pm_opp_supply** %supplies, align 8, !dbg !8516
  %16 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !8517
  %old_opp31 = getelementptr inbounds %struct.dev_pm_set_opp_data, %struct.dev_pm_set_opp_data* %16, i32 0, i32 0, !dbg !8518
  %supplies32 = getelementptr inbounds %struct.dev_pm_opp_info, %struct.dev_pm_opp_info* %old_opp31, i32 0, i32 1, !dbg !8519
  %17 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies32, align 8, !dbg !8519
  %18 = load i32, i32* %count, align 4, !dbg !8520
  %idx.ext = sext i32 %18 to i64, !dbg !8521
  %add.ptr33 = getelementptr %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %17, i64 %idx.ext, !dbg !8521
  %19 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !8522
  %new_opp = getelementptr inbounds %struct.dev_pm_set_opp_data, %struct.dev_pm_set_opp_data* %19, i32 0, i32 1, !dbg !8523
  %supplies34 = getelementptr inbounds %struct.dev_pm_opp_info, %struct.dev_pm_opp_info* %new_opp, i32 0, i32 1, !dbg !8524
  store %struct.dev_pm_opp_supply* %add.ptr33, %struct.dev_pm_opp_supply** %supplies34, align 8, !dbg !8525
  %20 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %data, align 8, !dbg !8526
  %21 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8527
  %set_opp_data = getelementptr inbounds %struct.opp_table, %struct.opp_table* %21, i32 0, i32 28, !dbg !8528
  store %struct.dev_pm_set_opp_data* %20, %struct.dev_pm_set_opp_data** %set_opp_data, align 8, !dbg !8529
  store i32 0, i32* %retval, align 4, !dbg !8530
  br label %return, !dbg !8530

return:                                           ; preds = %if.end30, %if.then29, %if.then22
  %22 = load i32, i32* %retval, align 4, !dbg !8531
  ret i32 %22, !dbg !8531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @regulator_put(%struct.regulator* %regulator) #0 !dbg !8532 {
entry:
  %regulator.addr = alloca %struct.regulator*, align 8
  store %struct.regulator* %regulator, %struct.regulator** %regulator.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.regulator** %regulator.addr, metadata !8535, metadata !DIExpression()), !dbg !8536
  ret void, !dbg !8537
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dev_pm_opp_put_regulators(%struct.opp_table* %opp_table) #0 !dbg !8538 {
entry:
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %i = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !8539, metadata !DIExpression()), !dbg !8540
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8541, metadata !DIExpression()), !dbg !8542
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8543
  %regulators = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 20, !dbg !8545
  %1 = load %struct.regulator**, %struct.regulator*** %regulators, align 8, !dbg !8545
  %tobool = icmp ne %struct.regulator** %1, null, !dbg !8543
  br i1 %tobool, label %if.end, label %if.then, !dbg !8546

if.then:                                          ; preds = %entry
  br label %put_opp_table, !dbg !8547

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8548, metadata !DIExpression()), !dbg !8550
  %2 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8550
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %2, i32 0, i32 3, !dbg !8550
  %call = call i32 @list_empty(%struct.list_head* %opp_list) #8, !dbg !8550
  %tobool1 = icmp ne i32 %call, 0, !dbg !8550
  %lnot = xor i1 %tobool1, true, !dbg !8550
  %lnot2 = xor i1 %lnot, true, !dbg !8550
  %lnot3 = xor i1 %lnot2, true, !dbg !8550
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !8550
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8550
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !8551
  %tobool4 = icmp ne i32 %3, 0, !dbg !8551
  %lnot5 = xor i1 %tobool4, true, !dbg !8551
  %lnot7 = xor i1 %lnot5, true, !dbg !8551
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !8551
  %conv = sext i32 %lnot.ext8 to i64, !dbg !8551
  %tobool9 = icmp ne i64 %conv, 0, !dbg !8551
  br i1 %tobool9, label %if.then10, label %if.end17, !dbg !8550

if.then10:                                        ; preds = %if.end
  br label %do.body, !dbg !8551

do.body:                                          ; preds = %if.then10
  br label %do.body11, !dbg !8553

do.body11:                                        ; preds = %do.body
  br label %do.end, !dbg !8555

do.end:                                           ; preds = %do.body11
  br label %do.body12, !dbg !8553

do.body12:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 1827, i32 2305, i64 12) #10, !dbg !8557, !srcloc !8559
  br label %do.end13, !dbg !8557

do.end13:                                         ; preds = %do.body12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 331) #10, !dbg !8560, !srcloc !8562
  br label %do.body14, !dbg !8553

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !8563

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !8553

do.end16:                                         ; preds = %do.end15
  br label %if.end17, !dbg !8553

if.end17:                                         ; preds = %do.end16, %if.end
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !8550
  %tobool18 = icmp ne i32 %4, 0, !dbg !8550
  %lnot19 = xor i1 %tobool18, true, !dbg !8550
  %lnot21 = xor i1 %lnot19, true, !dbg !8550
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !8550
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !8550
  store i64 %conv23, i64* %tmp, align 8, !dbg !8551
  %5 = load i64, i64* %tmp, align 8, !dbg !8550
  %6 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8565
  %enabled = getelementptr inbounds %struct.opp_table, %struct.opp_table* %6, i32 0, i32 24, !dbg !8567
  %7 = load i8, i8* %enabled, align 4, !dbg !8567
  %tobool24 = trunc i8 %7 to i1, !dbg !8567
  br i1 %tobool24, label %if.then25, label %if.end29, !dbg !8568

if.then25:                                        ; preds = %if.end17
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8569
  %regulator_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %8, i32 0, i32 21, !dbg !8572
  %9 = load i32, i32* %regulator_count, align 8, !dbg !8572
  %sub = sub i32 %9, 1, !dbg !8573
  store i32 %sub, i32* %i, align 4, !dbg !8574
  br label %for.cond, !dbg !8575

for.cond:                                         ; preds = %for.inc, %if.then25
  %10 = load i32, i32* %i, align 4, !dbg !8576
  %cmp = icmp sge i32 %10, 0, !dbg !8578
  br i1 %cmp, label %for.body, label %for.end, !dbg !8579

for.body:                                         ; preds = %for.cond
  %11 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8580
  %regulators27 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %11, i32 0, i32 20, !dbg !8581
  %12 = load %struct.regulator**, %struct.regulator*** %regulators27, align 8, !dbg !8581
  %13 = load i32, i32* %i, align 4, !dbg !8582
  %idxprom = sext i32 %13 to i64, !dbg !8580
  %arrayidx = getelementptr %struct.regulator*, %struct.regulator** %12, i64 %idxprom, !dbg !8580
  %14 = load %struct.regulator*, %struct.regulator** %arrayidx, align 8, !dbg !8580
  %call28 = call i32 @regulator_disable(%struct.regulator* %14) #8, !dbg !8583
  br label %for.inc, !dbg !8583

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !8584
  %dec = add i32 %15, -1, !dbg !8584
  store i32 %dec, i32* %i, align 4, !dbg !8584
  br label %for.cond, !dbg !8585, !llvm.loop !8586

for.end:                                          ; preds = %for.cond
  br label %if.end29, !dbg !8588

if.end29:                                         ; preds = %for.end, %if.end17
  %16 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8589
  %regulator_count30 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %16, i32 0, i32 21, !dbg !8591
  %17 = load i32, i32* %regulator_count30, align 8, !dbg !8591
  %sub31 = sub i32 %17, 1, !dbg !8592
  store i32 %sub31, i32* %i, align 4, !dbg !8593
  br label %for.cond32, !dbg !8594

for.cond32:                                       ; preds = %for.inc39, %if.end29
  %18 = load i32, i32* %i, align 4, !dbg !8595
  %cmp33 = icmp sge i32 %18, 0, !dbg !8597
  br i1 %cmp33, label %for.body35, label %for.end41, !dbg !8598

for.body35:                                       ; preds = %for.cond32
  %19 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8599
  %regulators36 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %19, i32 0, i32 20, !dbg !8600
  %20 = load %struct.regulator**, %struct.regulator*** %regulators36, align 8, !dbg !8600
  %21 = load i32, i32* %i, align 4, !dbg !8601
  %idxprom37 = sext i32 %21 to i64, !dbg !8599
  %arrayidx38 = getelementptr %struct.regulator*, %struct.regulator** %20, i64 %idxprom37, !dbg !8599
  %22 = load %struct.regulator*, %struct.regulator** %arrayidx38, align 8, !dbg !8599
  call void @regulator_put(%struct.regulator* %22) #8, !dbg !8602
  br label %for.inc39, !dbg !8602

for.inc39:                                        ; preds = %for.body35
  %23 = load i32, i32* %i, align 4, !dbg !8603
  %dec40 = add i32 %23, -1, !dbg !8603
  store i32 %dec40, i32* %i, align 4, !dbg !8603
  br label %for.cond32, !dbg !8604, !llvm.loop !8605

for.end41:                                        ; preds = %for.cond32
  %24 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8607
  call void @_free_set_opp_data(%struct.opp_table* %24) #8, !dbg !8608
  %25 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8609
  %regulators42 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %25, i32 0, i32 20, !dbg !8610
  %26 = load %struct.regulator**, %struct.regulator*** %regulators42, align 8, !dbg !8610
  %27 = bitcast %struct.regulator** %26 to i8*, !dbg !8609
  call void @kfree(i8* %27) #8, !dbg !8611
  %28 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8612
  %regulators43 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %28, i32 0, i32 20, !dbg !8613
  store %struct.regulator** null, %struct.regulator*** %regulators43, align 8, !dbg !8614
  %29 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8615
  %regulator_count44 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %29, i32 0, i32 21, !dbg !8616
  store i32 -1, i32* %regulator_count44, align 8, !dbg !8617
  br label %put_opp_table, !dbg !8615

put_opp_table:                                    ; preds = %for.end41, %if.then
  call void @llvm.dbg.label(metadata !8618), !dbg !8619
  %30 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8620
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %30) #8, !dbg !8621
  ret void, !dbg !8622
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @regulator_disable(%struct.regulator* %regulator) #0 !dbg !8623 {
entry:
  %regulator.addr = alloca %struct.regulator*, align 8
  store %struct.regulator* %regulator, %struct.regulator** %regulator.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.regulator** %regulator.addr, metadata !8626, metadata !DIExpression()), !dbg !8627
  ret i32 0, !dbg !8628
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_free_set_opp_data(%struct.opp_table* %opp_table) #0 !dbg !8629 {
entry:
  %opp_table.addr = alloca %struct.opp_table*, align 8
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !8630, metadata !DIExpression()), !dbg !8631
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8632
  %set_opp_data = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 28, !dbg !8633
  %1 = load %struct.dev_pm_set_opp_data*, %struct.dev_pm_set_opp_data** %set_opp_data, align 8, !dbg !8633
  %2 = bitcast %struct.dev_pm_set_opp_data* %1 to i8*, !dbg !8632
  call void @kfree(i8* %2) #8, !dbg !8634
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8635
  %set_opp_data1 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %3, i32 0, i32 28, !dbg !8636
  store %struct.dev_pm_set_opp_data* null, %struct.dev_pm_set_opp_data** %set_opp_data1, align 8, !dbg !8637
  ret void, !dbg !8638
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.opp_table* @dev_pm_opp_set_clkname(%struct.device* %dev, i8* %name) #0 !dbg !8639 {
entry:
  %retval = alloca %struct.opp_table*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %name.addr = alloca i8*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8640, metadata !DIExpression()), !dbg !8641
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8642, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !8644, metadata !DIExpression()), !dbg !8645
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8646, metadata !DIExpression()), !dbg !8647
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8648
  %call = call %struct.opp_table* @dev_pm_opp_get_opp_table(%struct.device* %0) #8, !dbg !8649
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !8650
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8651
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !8651
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !8653
  br i1 %call1, label %if.then, label %if.end, !dbg !8654

if.then:                                          ; preds = %entry
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8655
  store %struct.opp_table* %3, %struct.opp_table** %retval, align 8, !dbg !8656
  br label %return, !dbg !8656

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8657, metadata !DIExpression()), !dbg !8660
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8660
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %4, i32 0, i32 3, !dbg !8660
  %call2 = call i32 @list_empty(%struct.list_head* %opp_list) #8, !dbg !8660
  %tobool = icmp ne i32 %call2, 0, !dbg !8660
  %lnot = xor i1 %tobool, true, !dbg !8660
  %lnot3 = xor i1 %lnot, true, !dbg !8660
  %lnot4 = xor i1 %lnot3, true, !dbg !8660
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !8660
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8660
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !8661
  %tobool5 = icmp ne i32 %5, 0, !dbg !8661
  %lnot6 = xor i1 %tobool5, true, !dbg !8661
  %lnot8 = xor i1 %lnot6, true, !dbg !8661
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !8661
  %conv = sext i32 %lnot.ext9 to i64, !dbg !8661
  %tobool10 = icmp ne i64 %conv, 0, !dbg !8661
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !8660

if.then11:                                        ; preds = %if.end
  br label %do.body, !dbg !8661

do.body:                                          ; preds = %if.then11
  br label %do.body12, !dbg !8663

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !8665

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !8663

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 1870, i32 2305, i64 12) #10, !dbg !8667, !srcloc !8669
  br label %do.end14, !dbg !8667

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 332) #10, !dbg !8670, !srcloc !8672
  br label %do.body15, !dbg !8663

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !8673

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !8663

do.end17:                                         ; preds = %do.end16
  br label %if.end18, !dbg !8663

if.end18:                                         ; preds = %do.end17, %if.end
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !8660
  %tobool19 = icmp ne i32 %6, 0, !dbg !8660
  %lnot20 = xor i1 %tobool19, true, !dbg !8660
  %lnot22 = xor i1 %lnot20, true, !dbg !8660
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !8660
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !8660
  store i64 %conv24, i64* %tmp, align 8, !dbg !8661
  %7 = load i64, i64* %tmp, align 8, !dbg !8660
  %tobool25 = icmp ne i64 %7, 0, !dbg !8675
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !8676

if.then26:                                        ; preds = %if.end18
  store i32 -16, i32* %ret, align 4, !dbg !8677
  br label %err, !dbg !8679

if.end27:                                         ; preds = %if.end18
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8680
  %clk = getelementptr inbounds %struct.opp_table, %struct.opp_table* %8, i32 0, i32 19, !dbg !8682
  %9 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !8682
  %10 = bitcast %struct.clk* %9 to i8*, !dbg !8680
  %call28 = call zeroext i1 @IS_ERR(i8* %10) #8, !dbg !8683
  br i1 %call28, label %if.end31, label %if.then29, !dbg !8684

if.then29:                                        ; preds = %if.end27
  %11 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8685
  %clk30 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %11, i32 0, i32 19, !dbg !8686
  %12 = load %struct.clk*, %struct.clk** %clk30, align 8, !dbg !8686
  call void @clk_put(%struct.clk* %12) #8, !dbg !8687
  br label %if.end31, !dbg !8687

if.end31:                                         ; preds = %if.then29, %if.end27
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8688
  %14 = load i8*, i8** %name.addr, align 8, !dbg !8689
  %call32 = call %struct.clk* @clk_get(%struct.device* %13, i8* %14) #8, !dbg !8690
  %15 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8691
  %clk33 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %15, i32 0, i32 19, !dbg !8692
  store %struct.clk* %call32, %struct.clk** %clk33, align 8, !dbg !8693
  %16 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8694
  %clk34 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %16, i32 0, i32 19, !dbg !8696
  %17 = load %struct.clk*, %struct.clk** %clk34, align 8, !dbg !8696
  %18 = bitcast %struct.clk* %17 to i8*, !dbg !8694
  %call35 = call zeroext i1 @IS_ERR(i8* %18) #8, !dbg !8697
  br i1 %call35, label %if.then36, label %if.end43, !dbg !8698

if.then36:                                        ; preds = %if.end31
  %19 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8699
  %clk37 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %19, i32 0, i32 19, !dbg !8701
  %20 = load %struct.clk*, %struct.clk** %clk37, align 8, !dbg !8701
  %21 = bitcast %struct.clk* %20 to i8*, !dbg !8699
  %call38 = call i64 @PTR_ERR(i8* %21) #8, !dbg !8702
  %conv39 = trunc i64 %call38 to i32, !dbg !8702
  store i32 %conv39, i32* %ret, align 4, !dbg !8703
  %22 = load i32, i32* %ret, align 4, !dbg !8704
  %cmp = icmp ne i32 %22, -517, !dbg !8706
  br i1 %cmp, label %if.then41, label %if.end42, !dbg !8707

if.then41:                                        ; preds = %if.then36
  %23 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8708
  %24 = load i32, i32* %ret, align 4, !dbg !8708
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %23, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.dev_pm_opp_set_clkname, i64 0, i64 0), i32 %24) #9, !dbg !8708
  br label %if.end42, !dbg !8710

if.end42:                                         ; preds = %if.then41, %if.then36
  br label %err, !dbg !8711

if.end43:                                         ; preds = %if.end31
  %25 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8712
  store %struct.opp_table* %25, %struct.opp_table** %retval, align 8, !dbg !8713
  br label %return, !dbg !8713

err:                                              ; preds = %if.end42, %if.then26
  call void @llvm.dbg.label(metadata !8714), !dbg !8715
  %26 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8716
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %26) #8, !dbg !8717
  %27 = load i32, i32* %ret, align 4, !dbg !8718
  %conv44 = sext i32 %27 to i64, !dbg !8718
  %call45 = call i8* @ERR_PTR(i64 %conv44) #8, !dbg !8719
  %28 = bitcast i8* %call45 to %struct.opp_table*, !dbg !8719
  store %struct.opp_table* %28, %struct.opp_table** %retval, align 8, !dbg !8720
  br label %return, !dbg !8720

return:                                           ; preds = %err, %if.end43, %if.then
  %29 = load %struct.opp_table*, %struct.opp_table** %retval, align 8, !dbg !8721
  ret %struct.opp_table* %29, !dbg !8721
}

; Function Attrs: noredzone
declare dso_local void @clk_put(%struct.clk*) #3

; Function Attrs: noredzone
declare dso_local %struct.clk* @clk_get(%struct.device*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dev_pm_opp_put_clkname(%struct.opp_table* %opp_table) #0 !dbg !8722 {
entry:
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !8723, metadata !DIExpression()), !dbg !8724
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8725, metadata !DIExpression()), !dbg !8727
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8727
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 3, !dbg !8727
  %call = call i32 @list_empty(%struct.list_head* %opp_list) #8, !dbg !8727
  %tobool = icmp ne i32 %call, 0, !dbg !8727
  %lnot = xor i1 %tobool, true, !dbg !8727
  %lnot1 = xor i1 %lnot, true, !dbg !8727
  %lnot2 = xor i1 %lnot1, true, !dbg !8727
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8727
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8727
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !8728
  %tobool3 = icmp ne i32 %1, 0, !dbg !8728
  %lnot4 = xor i1 %tobool3, true, !dbg !8728
  %lnot6 = xor i1 %lnot4, true, !dbg !8728
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !8728
  %conv = sext i32 %lnot.ext7 to i64, !dbg !8728
  %tobool8 = icmp ne i64 %conv, 0, !dbg !8728
  br i1 %tobool8, label %if.then, label %if.end, !dbg !8727

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8728

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !8730

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !8732

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !8730

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 1906, i32 2305, i64 12) #10, !dbg !8734, !srcloc !8736
  br label %do.end11, !dbg !8734

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 333) #10, !dbg !8737, !srcloc !8739
  br label %do.body12, !dbg !8730

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !8740

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !8730

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !8730

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !8727
  %tobool15 = icmp ne i32 %2, 0, !dbg !8727
  %lnot16 = xor i1 %tobool15, true, !dbg !8727
  %lnot18 = xor i1 %lnot16, true, !dbg !8727
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8727
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8727
  store i64 %conv20, i64* %tmp, align 8, !dbg !8728
  %3 = load i64, i64* %tmp, align 8, !dbg !8727
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8742
  %clk = getelementptr inbounds %struct.opp_table, %struct.opp_table* %4, i32 0, i32 19, !dbg !8743
  %5 = load %struct.clk*, %struct.clk** %clk, align 8, !dbg !8743
  call void @clk_put(%struct.clk* %5) #8, !dbg !8744
  %call21 = call i8* @ERR_PTR(i64 -22) #8, !dbg !8745
  %6 = bitcast i8* %call21 to %struct.clk*, !dbg !8745
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8746
  %clk22 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %7, i32 0, i32 19, !dbg !8747
  store %struct.clk* %6, %struct.clk** %clk22, align 8, !dbg !8748
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8749
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %8) #8, !dbg !8750
  ret void, !dbg !8751
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.opp_table* @dev_pm_opp_register_set_opp_helper(%struct.device* %dev, i32 (%struct.dev_pm_set_opp_data*)* %set_opp) #0 !dbg !8752 {
entry:
  %retval = alloca %struct.opp_table*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %set_opp.addr = alloca i32 (%struct.dev_pm_set_opp_data*)*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8755, metadata !DIExpression()), !dbg !8756
  store i32 (%struct.dev_pm_set_opp_data*)* %set_opp, i32 (%struct.dev_pm_set_opp_data*)** %set_opp.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.dev_pm_set_opp_data*)** %set_opp.addr, metadata !8757, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !8759, metadata !DIExpression()), !dbg !8760
  %0 = load i32 (%struct.dev_pm_set_opp_data*)*, i32 (%struct.dev_pm_set_opp_data*)** %set_opp.addr, align 8, !dbg !8761
  %tobool = icmp ne i32 (%struct.dev_pm_set_opp_data*)* %0, null, !dbg !8761
  br i1 %tobool, label %if.end, label %if.then, !dbg !8763

if.then:                                          ; preds = %entry
  %call = call i8* @ERR_PTR(i64 -22) #8, !dbg !8764
  %1 = bitcast i8* %call to %struct.opp_table*, !dbg !8764
  store %struct.opp_table* %1, %struct.opp_table** %retval, align 8, !dbg !8765
  br label %return, !dbg !8765

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8766
  %call1 = call %struct.opp_table* @dev_pm_opp_get_opp_table(%struct.device* %2) #8, !dbg !8767
  store %struct.opp_table* %call1, %struct.opp_table** %opp_table, align 8, !dbg !8768
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8769
  %4 = bitcast %struct.opp_table* %3 to i8*, !dbg !8769
  %call2 = call zeroext i1 @IS_ERR(i8* %4) #8, !dbg !8771
  br i1 %call2, label %if.then3, label %if.end4, !dbg !8772

if.then3:                                         ; preds = %if.end
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8773
  store %struct.opp_table* %5, %struct.opp_table** %retval, align 8, !dbg !8774
  br label %return, !dbg !8774

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8775, metadata !DIExpression()), !dbg !8778
  %6 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8778
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %6, i32 0, i32 3, !dbg !8778
  %call5 = call i32 @list_empty(%struct.list_head* %opp_list) #8, !dbg !8778
  %tobool6 = icmp ne i32 %call5, 0, !dbg !8778
  %lnot = xor i1 %tobool6, true, !dbg !8778
  %lnot7 = xor i1 %lnot, true, !dbg !8778
  %lnot8 = xor i1 %lnot7, true, !dbg !8778
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !8778
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8778
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !8779
  %tobool9 = icmp ne i32 %7, 0, !dbg !8779
  %lnot10 = xor i1 %tobool9, true, !dbg !8779
  %lnot12 = xor i1 %lnot10, true, !dbg !8779
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !8779
  %conv = sext i32 %lnot.ext13 to i64, !dbg !8779
  %tobool14 = icmp ne i64 %conv, 0, !dbg !8779
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !8778

if.then15:                                        ; preds = %if.end4
  br label %do.body, !dbg !8779

do.body:                                          ; preds = %if.then15
  br label %do.body16, !dbg !8781

do.body16:                                        ; preds = %do.body
  br label %do.end, !dbg !8783

do.end:                                           ; preds = %do.body16
  br label %do.body17, !dbg !8781

do.body17:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 1938, i32 2305, i64 12) #10, !dbg !8785, !srcloc !8787
  br label %do.end18, !dbg !8785

do.end18:                                         ; preds = %do.body17
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 334) #10, !dbg !8788, !srcloc !8790
  br label %do.body19, !dbg !8781

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !8791

do.end20:                                         ; preds = %do.body19
  br label %do.end21, !dbg !8781

do.end21:                                         ; preds = %do.end20
  br label %if.end22, !dbg !8781

if.end22:                                         ; preds = %do.end21, %if.end4
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !8778
  %tobool23 = icmp ne i32 %8, 0, !dbg !8778
  %lnot24 = xor i1 %tobool23, true, !dbg !8778
  %lnot26 = xor i1 %lnot24, true, !dbg !8778
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !8778
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !8778
  store i64 %conv28, i64* %tmp, align 8, !dbg !8779
  %9 = load i64, i64* %tmp, align 8, !dbg !8778
  %tobool29 = icmp ne i64 %9, 0, !dbg !8793
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !8794

if.then30:                                        ; preds = %if.end22
  %10 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8795
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %10) #8, !dbg !8797
  %call31 = call i8* @ERR_PTR(i64 -16) #8, !dbg !8798
  %11 = bitcast i8* %call31 to %struct.opp_table*, !dbg !8798
  store %struct.opp_table* %11, %struct.opp_table** %retval, align 8, !dbg !8799
  br label %return, !dbg !8799

if.end32:                                         ; preds = %if.end22
  %12 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8800
  %set_opp33 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %12, i32 0, i32 27, !dbg !8802
  %13 = load i32 (%struct.dev_pm_set_opp_data*)*, i32 (%struct.dev_pm_set_opp_data*)** %set_opp33, align 8, !dbg !8802
  %tobool34 = icmp ne i32 (%struct.dev_pm_set_opp_data*)* %13, null, !dbg !8800
  br i1 %tobool34, label %if.end37, label %if.then35, !dbg !8803

if.then35:                                        ; preds = %if.end32
  %14 = load i32 (%struct.dev_pm_set_opp_data*)*, i32 (%struct.dev_pm_set_opp_data*)** %set_opp.addr, align 8, !dbg !8804
  %15 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8805
  %set_opp36 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %15, i32 0, i32 27, !dbg !8806
  store i32 (%struct.dev_pm_set_opp_data*)* %14, i32 (%struct.dev_pm_set_opp_data*)** %set_opp36, align 8, !dbg !8807
  br label %if.end37, !dbg !8805

if.end37:                                         ; preds = %if.then35, %if.end32
  %16 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8808
  store %struct.opp_table* %16, %struct.opp_table** %retval, align 8, !dbg !8809
  br label %return, !dbg !8809

return:                                           ; preds = %if.end37, %if.then30, %if.then3, %if.then
  %17 = load %struct.opp_table*, %struct.opp_table** %retval, align 8, !dbg !8810
  ret %struct.opp_table* %17, !dbg !8810
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dev_pm_opp_unregister_set_opp_helper(%struct.opp_table* %opp_table) #0 !dbg !8811 {
entry:
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !8812, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8814, metadata !DIExpression()), !dbg !8816
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8816
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 3, !dbg !8816
  %call = call i32 @list_empty(%struct.list_head* %opp_list) #8, !dbg !8816
  %tobool = icmp ne i32 %call, 0, !dbg !8816
  %lnot = xor i1 %tobool, true, !dbg !8816
  %lnot1 = xor i1 %lnot, true, !dbg !8816
  %lnot2 = xor i1 %lnot1, true, !dbg !8816
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8816
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8816
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !8817
  %tobool3 = icmp ne i32 %1, 0, !dbg !8817
  %lnot4 = xor i1 %tobool3, true, !dbg !8817
  %lnot6 = xor i1 %lnot4, true, !dbg !8817
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !8817
  %conv = sext i32 %lnot.ext7 to i64, !dbg !8817
  %tobool8 = icmp ne i64 %conv, 0, !dbg !8817
  br i1 %tobool8, label %if.then, label %if.end, !dbg !8816

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8817

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !8819

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !8821

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !8819

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 1961, i32 2305, i64 12) #10, !dbg !8823, !srcloc !8825
  br label %do.end11, !dbg !8823

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 335) #10, !dbg !8826, !srcloc !8828
  br label %do.body12, !dbg !8819

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !8829

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !8819

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !8819

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !8816
  %tobool15 = icmp ne i32 %2, 0, !dbg !8816
  %lnot16 = xor i1 %tobool15, true, !dbg !8816
  %lnot18 = xor i1 %lnot16, true, !dbg !8816
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8816
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8816
  store i64 %conv20, i64* %tmp, align 8, !dbg !8817
  %3 = load i64, i64* %tmp, align 8, !dbg !8816
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8831
  %set_opp = getelementptr inbounds %struct.opp_table, %struct.opp_table* %4, i32 0, i32 27, !dbg !8832
  store i32 (%struct.dev_pm_set_opp_data*)* null, i32 (%struct.dev_pm_set_opp_data*)** %set_opp, align 8, !dbg !8833
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8834
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %5) #8, !dbg !8835
  ret void, !dbg !8836
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.opp_table* @dev_pm_opp_attach_genpd(%struct.device* %dev, i8** %names, %struct.device*** %virt_devs) #0 !dbg !8837 {
entry:
  %retval = alloca %struct.opp_table*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %names.addr = alloca i8**, align 8
  %virt_devs.addr = alloca %struct.device***, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %virt_dev = alloca %struct.device*, align 8
  %index = alloca i32, align 4
  %ret = alloca i32, align 4
  %name = alloca i8**, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8841, metadata !DIExpression()), !dbg !8842
  store i8** %names, i8*** %names.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %names.addr, metadata !8843, metadata !DIExpression()), !dbg !8844
  store %struct.device*** %virt_devs, %struct.device**** %virt_devs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device**** %virt_devs.addr, metadata !8845, metadata !DIExpression()), !dbg !8846
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !8847, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.declare(metadata %struct.device** %virt_dev, metadata !8849, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8851, metadata !DIExpression()), !dbg !8852
  store i32 0, i32* %index, align 4, !dbg !8852
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8853, metadata !DIExpression()), !dbg !8854
  store i32 -22, i32* %ret, align 4, !dbg !8854
  call void @llvm.dbg.declare(metadata i8*** %name, metadata !8855, metadata !DIExpression()), !dbg !8856
  %0 = load i8**, i8*** %names.addr, align 8, !dbg !8857
  store i8** %0, i8*** %name, align 8, !dbg !8856
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8858
  %call = call %struct.opp_table* @dev_pm_opp_get_opp_table(%struct.device* %1) #8, !dbg !8859
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !8860
  %2 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8861
  %3 = bitcast %struct.opp_table* %2 to i8*, !dbg !8861
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #8, !dbg !8863
  br i1 %call1, label %if.then, label %if.end, !dbg !8864

if.then:                                          ; preds = %entry
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8865
  store %struct.opp_table* %4, %struct.opp_table** %retval, align 8, !dbg !8866
  br label %return, !dbg !8866

if.end:                                           ; preds = %entry
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8867
  %genpd_virt_devs = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 13, !dbg !8869
  %6 = load %struct.device**, %struct.device*** %genpd_virt_devs, align 8, !dbg !8869
  %tobool = icmp ne %struct.device** %6, null, !dbg !8867
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !8870

if.then2:                                         ; preds = %if.end
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8871
  store %struct.opp_table* %7, %struct.opp_table** %retval, align 8, !dbg !8872
  br label %return, !dbg !8872

if.end3:                                          ; preds = %if.end
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8873
  %required_opp_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %8, i32 0, i32 15, !dbg !8875
  %9 = load i32, i32* %required_opp_count, align 8, !dbg !8875
  %tobool4 = icmp ne i32 %9, 0, !dbg !8873
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !8876

if.then5:                                         ; preds = %if.end3
  store i32 -517, i32* %ret, align 4, !dbg !8877
  br label %put_table, !dbg !8879

if.end6:                                          ; preds = %if.end3
  %10 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8880
  %genpd_virt_dev_lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %10, i32 0, i32 12, !dbg !8881
  call void @mutex_lock(%struct.mutex* %genpd_virt_dev_lock) #8, !dbg !8882
  %11 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8883
  %required_opp_count7 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %11, i32 0, i32 15, !dbg !8884
  %12 = load i32, i32* %required_opp_count7, align 8, !dbg !8884
  %conv = zext i32 %12 to i64, !dbg !8883
  %call8 = call i8* @kcalloc(i64 %conv, i64 8, i32 3264) #8, !dbg !8885
  %13 = bitcast i8* %call8 to %struct.device**, !dbg !8885
  %14 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8886
  %genpd_virt_devs9 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %14, i32 0, i32 13, !dbg !8887
  store %struct.device** %13, %struct.device*** %genpd_virt_devs9, align 8, !dbg !8888
  %15 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8889
  %genpd_virt_devs10 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %15, i32 0, i32 13, !dbg !8891
  %16 = load %struct.device**, %struct.device*** %genpd_virt_devs10, align 8, !dbg !8891
  %tobool11 = icmp ne %struct.device** %16, null, !dbg !8889
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !8892

if.then12:                                        ; preds = %if.end6
  br label %unlock, !dbg !8893

if.end13:                                         ; preds = %if.end6
  br label %while.cond, !dbg !8894

while.cond:                                       ; preds = %if.end25, %if.end13
  %17 = load i8**, i8*** %name, align 8, !dbg !8895
  %18 = load i8*, i8** %17, align 8, !dbg !8896
  %tobool14 = icmp ne i8* %18, null, !dbg !8894
  br i1 %tobool14, label %while.body, label %while.end, !dbg !8894

while.body:                                       ; preds = %while.cond
  %19 = load i32, i32* %index, align 4, !dbg !8897
  %20 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8900
  %required_opp_count15 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %20, i32 0, i32 15, !dbg !8901
  %21 = load i32, i32* %required_opp_count15, align 8, !dbg !8901
  %cmp = icmp uge i32 %19, %21, !dbg !8902
  br i1 %cmp, label %if.then17, label %if.end19, !dbg !8903

if.then17:                                        ; preds = %while.body
  %22 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8904
  %23 = load i8**, i8*** %name, align 8, !dbg !8904
  %24 = load i8*, i8** %23, align 8, !dbg !8904
  %25 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8904
  %required_opp_count18 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %25, i32 0, i32 15, !dbg !8904
  %26 = load i32, i32* %required_opp_count18, align 8, !dbg !8904
  %27 = load i32, i32* %index, align 4, !dbg !8904
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %22, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.15, i64 0, i64 0), i8* %24, i32 %26, i32 %27) #9, !dbg !8904
  br label %err, !dbg !8906

if.end19:                                         ; preds = %while.body
  %28 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8907
  %29 = load i8**, i8*** %name, align 8, !dbg !8908
  %30 = load i8*, i8** %29, align 8, !dbg !8909
  %call20 = call %struct.device* @dev_pm_domain_attach_by_name(%struct.device* %28, i8* %30) #8, !dbg !8910
  store %struct.device* %call20, %struct.device** %virt_dev, align 8, !dbg !8911
  %31 = load %struct.device*, %struct.device** %virt_dev, align 8, !dbg !8912
  %32 = bitcast %struct.device* %31 to i8*, !dbg !8912
  %call21 = call zeroext i1 @IS_ERR(i8* %32) #8, !dbg !8914
  br i1 %call21, label %if.then22, label %if.end25, !dbg !8915

if.then22:                                        ; preds = %if.end19
  %33 = load %struct.device*, %struct.device** %virt_dev, align 8, !dbg !8916
  %34 = bitcast %struct.device* %33 to i8*, !dbg !8916
  %call23 = call i64 @PTR_ERR(i8* %34) #8, !dbg !8918
  %conv24 = trunc i64 %call23 to i32, !dbg !8918
  store i32 %conv24, i32* %ret, align 4, !dbg !8919
  %35 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8920
  %36 = load i32, i32* %ret, align 4, !dbg !8920
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %35, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i64 0, i64 0), i32 %36) #9, !dbg !8920
  br label %err, !dbg !8921

if.end25:                                         ; preds = %if.end19
  %37 = load %struct.device*, %struct.device** %virt_dev, align 8, !dbg !8922
  %38 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8923
  %genpd_virt_devs26 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %38, i32 0, i32 13, !dbg !8924
  %39 = load %struct.device**, %struct.device*** %genpd_virt_devs26, align 8, !dbg !8924
  %40 = load i32, i32* %index, align 4, !dbg !8925
  %idxprom = sext i32 %40 to i64, !dbg !8923
  %arrayidx = getelementptr %struct.device*, %struct.device** %39, i64 %idxprom, !dbg !8923
  store %struct.device* %37, %struct.device** %arrayidx, align 8, !dbg !8926
  %41 = load i32, i32* %index, align 4, !dbg !8927
  %inc = add i32 %41, 1, !dbg !8927
  store i32 %inc, i32* %index, align 4, !dbg !8927
  %42 = load i8**, i8*** %name, align 8, !dbg !8928
  %incdec.ptr = getelementptr i8*, i8** %42, i32 1, !dbg !8928
  store i8** %incdec.ptr, i8*** %name, align 8, !dbg !8928
  br label %while.cond, !dbg !8894, !llvm.loop !8929

while.end:                                        ; preds = %while.cond
  %43 = load %struct.device***, %struct.device**** %virt_devs.addr, align 8, !dbg !8931
  %tobool27 = icmp ne %struct.device*** %43, null, !dbg !8931
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !8933

if.then28:                                        ; preds = %while.end
  %44 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8934
  %genpd_virt_devs29 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %44, i32 0, i32 13, !dbg !8935
  %45 = load %struct.device**, %struct.device*** %genpd_virt_devs29, align 8, !dbg !8935
  %46 = load %struct.device***, %struct.device**** %virt_devs.addr, align 8, !dbg !8936
  store %struct.device** %45, %struct.device*** %46, align 8, !dbg !8937
  br label %if.end30, !dbg !8938

if.end30:                                         ; preds = %if.then28, %while.end
  %47 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8939
  %genpd_virt_dev_lock31 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %47, i32 0, i32 12, !dbg !8940
  call void @mutex_unlock(%struct.mutex* %genpd_virt_dev_lock31) #8, !dbg !8941
  %48 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8942
  store %struct.opp_table* %48, %struct.opp_table** %retval, align 8, !dbg !8943
  br label %return, !dbg !8943

err:                                              ; preds = %if.then22, %if.then17
  call void @llvm.dbg.label(metadata !8944), !dbg !8945
  %49 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8946
  call void @_opp_detach_genpd(%struct.opp_table* %49) #8, !dbg !8947
  br label %unlock, !dbg !8947

unlock:                                           ; preds = %err, %if.then12
  call void @llvm.dbg.label(metadata !8948), !dbg !8949
  %50 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8950
  %genpd_virt_dev_lock32 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %50, i32 0, i32 12, !dbg !8951
  call void @mutex_unlock(%struct.mutex* %genpd_virt_dev_lock32) #8, !dbg !8952
  br label %put_table, !dbg !8952

put_table:                                        ; preds = %unlock, %if.then5
  call void @llvm.dbg.label(metadata !8953), !dbg !8954
  %51 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !8955
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %51) #8, !dbg !8956
  %52 = load i32, i32* %ret, align 4, !dbg !8957
  %conv33 = sext i32 %52 to i64, !dbg !8957
  %call34 = call i8* @ERR_PTR(i64 %conv33) #8, !dbg !8958
  %53 = bitcast i8* %call34 to %struct.opp_table*, !dbg !8958
  store %struct.opp_table* %53, %struct.opp_table** %retval, align 8, !dbg !8959
  br label %return, !dbg !8959

return:                                           ; preds = %put_table, %if.end30, %if.then2, %if.then
  %54 = load %struct.opp_table*, %struct.opp_table** %retval, align 8, !dbg !8960
  ret %struct.opp_table* %54, !dbg !8960
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !8961 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8962, metadata !DIExpression()), !dbg !8963
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8964, metadata !DIExpression()), !dbg !8965
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8966, metadata !DIExpression()), !dbg !8967
  %0 = load i64, i64* %n.addr, align 8, !dbg !8968
  %1 = load i64, i64* %size.addr, align 8, !dbg !8969
  %2 = load i32, i32* %flags.addr, align 4, !dbg !8970
  %or = or i32 %2, 256, !dbg !8971
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #8, !dbg !8972
  ret i8* %call, !dbg !8973
}

; Function Attrs: noredzone
declare dso_local %struct.device* @dev_pm_domain_attach_by_name(%struct.device*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_opp_detach_genpd(%struct.opp_table* %opp_table) #0 !dbg !8974 {
entry:
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %index = alloca i32, align 4
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !8975, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8977, metadata !DIExpression()), !dbg !8978
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8979
  %genpd_virt_devs = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 13, !dbg !8981
  %1 = load %struct.device**, %struct.device*** %genpd_virt_devs, align 8, !dbg !8981
  %tobool = icmp ne %struct.device** %1, null, !dbg !8979
  br i1 %tobool, label %if.end, label %if.then, !dbg !8982

if.then:                                          ; preds = %entry
  br label %return, !dbg !8983

if.end:                                           ; preds = %entry
  store i32 0, i32* %index, align 4, !dbg !8984
  br label %for.cond, !dbg !8986

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %index, align 4, !dbg !8987
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8989
  %required_opp_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %3, i32 0, i32 15, !dbg !8990
  %4 = load i32, i32* %required_opp_count, align 8, !dbg !8990
  %cmp = icmp ult i32 %2, %4, !dbg !8991
  br i1 %cmp, label %for.body, label %for.end, !dbg !8992

for.body:                                         ; preds = %for.cond
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !8993
  %genpd_virt_devs1 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 13, !dbg !8996
  %6 = load %struct.device**, %struct.device*** %genpd_virt_devs1, align 8, !dbg !8996
  %7 = load i32, i32* %index, align 4, !dbg !8997
  %idxprom = sext i32 %7 to i64, !dbg !8993
  %arrayidx = getelementptr %struct.device*, %struct.device** %6, i64 %idxprom, !dbg !8993
  %8 = load %struct.device*, %struct.device** %arrayidx, align 8, !dbg !8993
  %tobool2 = icmp ne %struct.device* %8, null, !dbg !8993
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !8998

if.then3:                                         ; preds = %for.body
  br label %for.inc, !dbg !8999

if.end4:                                          ; preds = %for.body
  %9 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !9000
  %genpd_virt_devs5 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %9, i32 0, i32 13, !dbg !9001
  %10 = load %struct.device**, %struct.device*** %genpd_virt_devs5, align 8, !dbg !9001
  %11 = load i32, i32* %index, align 4, !dbg !9002
  %idxprom6 = sext i32 %11 to i64, !dbg !9000
  %arrayidx7 = getelementptr %struct.device*, %struct.device** %10, i64 %idxprom6, !dbg !9000
  %12 = load %struct.device*, %struct.device** %arrayidx7, align 8, !dbg !9000
  call void @dev_pm_domain_detach(%struct.device* %12, i1 zeroext false) #8, !dbg !9003
  %13 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !9004
  %genpd_virt_devs8 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %13, i32 0, i32 13, !dbg !9005
  %14 = load %struct.device**, %struct.device*** %genpd_virt_devs8, align 8, !dbg !9005
  %15 = load i32, i32* %index, align 4, !dbg !9006
  %idxprom9 = sext i32 %15 to i64, !dbg !9004
  %arrayidx10 = getelementptr %struct.device*, %struct.device** %14, i64 %idxprom9, !dbg !9004
  store %struct.device* null, %struct.device** %arrayidx10, align 8, !dbg !9007
  br label %for.inc, !dbg !9008

for.inc:                                          ; preds = %if.end4, %if.then3
  %16 = load i32, i32* %index, align 4, !dbg !9009
  %inc = add i32 %16, 1, !dbg !9009
  store i32 %inc, i32* %index, align 4, !dbg !9009
  br label %for.cond, !dbg !9010, !llvm.loop !9011

for.end:                                          ; preds = %for.cond
  %17 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !9013
  %genpd_virt_devs11 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %17, i32 0, i32 13, !dbg !9014
  %18 = load %struct.device**, %struct.device*** %genpd_virt_devs11, align 8, !dbg !9014
  %19 = bitcast %struct.device** %18 to i8*, !dbg !9013
  call void @kfree(i8* %19) #8, !dbg !9015
  %20 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !9016
  %genpd_virt_devs12 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %20, i32 0, i32 13, !dbg !9017
  store %struct.device** null, %struct.device*** %genpd_virt_devs12, align 8, !dbg !9018
  br label %return, !dbg !9019

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !9019
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dev_pm_opp_detach_genpd(%struct.opp_table* %opp_table) #0 !dbg !9020 {
entry:
  %opp_table.addr = alloca %struct.opp_table*, align 8
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !9021, metadata !DIExpression()), !dbg !9022
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !9023
  %genpd_virt_dev_lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 12, !dbg !9024
  call void @mutex_lock(%struct.mutex* %genpd_virt_dev_lock) #8, !dbg !9025
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !9026
  call void @_opp_detach_genpd(%struct.opp_table* %1) #8, !dbg !9027
  %2 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !9028
  %genpd_virt_dev_lock1 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %2, i32 0, i32 12, !dbg !9029
  call void @mutex_unlock(%struct.mutex* %genpd_virt_dev_lock1) #8, !dbg !9030
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !9031
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %3) #8, !dbg !9032
  ret void, !dbg !9033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_pm_opp_xlate_performance_state(%struct.opp_table* %src_table, %struct.opp_table* %dst_table, i32 %pstate) #0 !dbg !9034 {
entry:
  %retval = alloca i32, align 4
  %src_table.addr = alloca %struct.opp_table*, align 8
  %dst_table.addr = alloca %struct.opp_table*, align 8
  %pstate.addr = alloca i32, align 4
  %opp = alloca %struct.dev_pm_opp*, align 8
  %dest_pstate = alloca i32, align 4
  %i = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %__mptr28 = alloca i8*, align 8
  %tmp33 = alloca %struct.dev_pm_opp*, align 8
  store %struct.opp_table* %src_table, %struct.opp_table** %src_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %src_table.addr, metadata !9037, metadata !DIExpression()), !dbg !9038
  store %struct.opp_table* %dst_table, %struct.opp_table** %dst_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %dst_table.addr, metadata !9039, metadata !DIExpression()), !dbg !9040
  store i32 %pstate, i32* %pstate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pstate.addr, metadata !9041, metadata !DIExpression()), !dbg !9042
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !9043, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.declare(metadata i32* %dest_pstate, metadata !9045, metadata !DIExpression()), !dbg !9046
  store i32 -22, i32* %dest_pstate, align 4, !dbg !9046
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9047, metadata !DIExpression()), !dbg !9048
  %0 = load %struct.opp_table*, %struct.opp_table** %src_table.addr, align 8, !dbg !9049
  %required_opp_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 15, !dbg !9051
  %1 = load i32, i32* %required_opp_count, align 8, !dbg !9051
  %tobool = icmp ne i32 %1, 0, !dbg !9049
  br i1 %tobool, label %if.end, label %if.then, !dbg !9052

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %pstate.addr, align 4, !dbg !9053
  store i32 %2, i32* %retval, align 4, !dbg !9054
  br label %return, !dbg !9054

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !9055
  br label %for.cond, !dbg !9057

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !9058
  %4 = load %struct.opp_table*, %struct.opp_table** %src_table.addr, align 8, !dbg !9060
  %required_opp_count1 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %4, i32 0, i32 15, !dbg !9061
  %5 = load i32, i32* %required_opp_count1, align 8, !dbg !9061
  %cmp = icmp ult i32 %3, %5, !dbg !9062
  br i1 %cmp, label %for.body, label %for.end, !dbg !9063

for.body:                                         ; preds = %for.cond
  %6 = load %struct.opp_table*, %struct.opp_table** %src_table.addr, align 8, !dbg !9064
  %required_opp_tables = getelementptr inbounds %struct.opp_table, %struct.opp_table* %6, i32 0, i32 14, !dbg !9067
  %7 = load %struct.opp_table**, %struct.opp_table*** %required_opp_tables, align 8, !dbg !9067
  %8 = load i32, i32* %i, align 4, !dbg !9068
  %idxprom = sext i32 %8 to i64, !dbg !9064
  %arrayidx = getelementptr %struct.opp_table*, %struct.opp_table** %7, i64 %idxprom, !dbg !9064
  %9 = load %struct.opp_table*, %struct.opp_table** %arrayidx, align 8, !dbg !9064
  %np = getelementptr inbounds %struct.opp_table, %struct.opp_table* %9, i32 0, i32 6, !dbg !9069
  %10 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !9069
  %11 = load %struct.opp_table*, %struct.opp_table** %dst_table.addr, align 8, !dbg !9070
  %np2 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %11, i32 0, i32 6, !dbg !9071
  %12 = load %struct.device_node*, %struct.device_node** %np2, align 8, !dbg !9071
  %cmp3 = icmp eq %struct.device_node* %10, %12, !dbg !9072
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9073

if.then4:                                         ; preds = %for.body
  br label %for.end, !dbg !9074

if.end5:                                          ; preds = %for.body
  br label %for.inc, !dbg !9075

for.inc:                                          ; preds = %if.end5
  %13 = load i32, i32* %i, align 4, !dbg !9076
  %inc = add i32 %13, 1, !dbg !9076
  store i32 %inc, i32* %i, align 4, !dbg !9076
  br label %for.cond, !dbg !9077, !llvm.loop !9078

for.end:                                          ; preds = %if.then4, %for.cond
  %14 = load i32, i32* %i, align 4, !dbg !9080
  %15 = load %struct.opp_table*, %struct.opp_table** %src_table.addr, align 8, !dbg !9080
  %required_opp_count6 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %15, i32 0, i32 15, !dbg !9080
  %16 = load i32, i32* %required_opp_count6, align 8, !dbg !9080
  %cmp7 = icmp eq i32 %14, %16, !dbg !9080
  %lnot = xor i1 %cmp7, true, !dbg !9080
  %lnot8 = xor i1 %lnot, true, !dbg !9080
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !9080
  %conv = sext i32 %lnot.ext to i64, !dbg !9080
  %tobool9 = icmp ne i64 %conv, 0, !dbg !9080
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !9082

if.then10:                                        ; preds = %for.end
  %17 = load %struct.opp_table*, %struct.opp_table** %src_table.addr, align 8, !dbg !9083
  %18 = load %struct.opp_table*, %struct.opp_table** %dst_table.addr, align 8, !dbg !9083
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__func__.dev_pm_opp_xlate_performance_state, i64 0, i64 0), %struct.opp_table* %17, %struct.opp_table* %18) #9, !dbg !9083
  store i32 -22, i32* %retval, align 4, !dbg !9085
  br label %return, !dbg !9085

if.end11:                                         ; preds = %for.end
  %19 = load %struct.opp_table*, %struct.opp_table** %src_table.addr, align 8, !dbg !9086
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %19, i32 0, i32 5, !dbg !9087
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !9088
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9089, metadata !DIExpression()), !dbg !9092
  %20 = load %struct.opp_table*, %struct.opp_table** %src_table.addr, align 8, !dbg !9092
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %20, i32 0, i32 3, !dbg !9092
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %opp_list, i32 0, i32 0, !dbg !9092
  %21 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9092
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !9092
  store i8* %22, i8** %__mptr, align 8, !dbg !9092
  br label %do.body, !dbg !9092

do.body:                                          ; preds = %if.end11
  br label %do.end, !dbg !9093

do.end:                                           ; preds = %do.body
  %23 = load i8*, i8** %__mptr, align 8, !dbg !9092
  %add.ptr = getelementptr i8, i8* %23, i64 0, !dbg !9092
  %24 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !9092
  store %struct.dev_pm_opp* %24, %struct.dev_pm_opp** %tmp, align 8, !dbg !9093
  %25 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !9092
  store %struct.dev_pm_opp* %25, %struct.dev_pm_opp** %opp, align 8, !dbg !9095
  br label %for.cond12, !dbg !9095

for.cond12:                                       ; preds = %do.end32, %do.end
  %26 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9096
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %26, i32 0, i32 0, !dbg !9096
  %27 = load %struct.opp_table*, %struct.opp_table** %src_table.addr, align 8, !dbg !9096
  %opp_list13 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %27, i32 0, i32 3, !dbg !9096
  %cmp14 = icmp eq %struct.list_head* %node, %opp_list13, !dbg !9096
  %lnot16 = xor i1 %cmp14, true, !dbg !9096
  br i1 %lnot16, label %for.body18, label %for.end35, !dbg !9095

for.body18:                                       ; preds = %for.cond12
  %28 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9098
  %pstate19 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %28, i32 0, i32 6, !dbg !9101
  %29 = load i32, i32* %pstate19, align 8, !dbg !9101
  %30 = load i32, i32* %pstate.addr, align 4, !dbg !9102
  %cmp20 = icmp eq i32 %29, %30, !dbg !9103
  br i1 %cmp20, label %if.then22, label %if.end26, !dbg !9104

if.then22:                                        ; preds = %for.body18
  %31 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9105
  %required_opps = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %31, i32 0, i32 12, !dbg !9107
  %32 = load %struct.dev_pm_opp**, %struct.dev_pm_opp*** %required_opps, align 8, !dbg !9107
  %33 = load i32, i32* %i, align 4, !dbg !9108
  %idxprom23 = sext i32 %33 to i64, !dbg !9105
  %arrayidx24 = getelementptr %struct.dev_pm_opp*, %struct.dev_pm_opp** %32, i64 %idxprom23, !dbg !9105
  %34 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %arrayidx24, align 8, !dbg !9105
  %pstate25 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %34, i32 0, i32 6, !dbg !9109
  %35 = load i32, i32* %pstate25, align 8, !dbg !9109
  store i32 %35, i32* %dest_pstate, align 4, !dbg !9110
  br label %unlock, !dbg !9111

if.end26:                                         ; preds = %for.body18
  br label %for.inc27, !dbg !9112

for.inc27:                                        ; preds = %if.end26
  call void @llvm.dbg.declare(metadata i8** %__mptr28, metadata !9113, metadata !DIExpression()), !dbg !9115
  %36 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9115
  %node29 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %36, i32 0, i32 0, !dbg !9115
  %next30 = getelementptr inbounds %struct.list_head, %struct.list_head* %node29, i32 0, i32 0, !dbg !9115
  %37 = load %struct.list_head*, %struct.list_head** %next30, align 8, !dbg !9115
  %38 = bitcast %struct.list_head* %37 to i8*, !dbg !9115
  store i8* %38, i8** %__mptr28, align 8, !dbg !9115
  br label %do.body31, !dbg !9115

do.body31:                                        ; preds = %for.inc27
  br label %do.end32, !dbg !9116

do.end32:                                         ; preds = %do.body31
  %39 = load i8*, i8** %__mptr28, align 8, !dbg !9115
  %add.ptr34 = getelementptr i8, i8* %39, i64 0, !dbg !9115
  %40 = bitcast i8* %add.ptr34 to %struct.dev_pm_opp*, !dbg !9115
  store %struct.dev_pm_opp* %40, %struct.dev_pm_opp** %tmp33, align 8, !dbg !9116
  %41 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp33, align 8, !dbg !9115
  store %struct.dev_pm_opp* %41, %struct.dev_pm_opp** %opp, align 8, !dbg !9096
  br label %for.cond12, !dbg !9096, !llvm.loop !9118

for.end35:                                        ; preds = %for.cond12
  %42 = load %struct.opp_table*, %struct.opp_table** %src_table.addr, align 8, !dbg !9120
  %43 = load %struct.opp_table*, %struct.opp_table** %dst_table.addr, align 8, !dbg !9120
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__func__.dev_pm_opp_xlate_performance_state, i64 0, i64 0), %struct.opp_table* %42, %struct.opp_table* %43) #9, !dbg !9120
  br label %unlock, !dbg !9120

unlock:                                           ; preds = %for.end35, %if.then22
  call void @llvm.dbg.label(metadata !9121), !dbg !9122
  %44 = load %struct.opp_table*, %struct.opp_table** %src_table.addr, align 8, !dbg !9123
  %lock37 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %44, i32 0, i32 5, !dbg !9124
  call void @mutex_unlock(%struct.mutex* %lock37) #8, !dbg !9125
  %45 = load i32, i32* %dest_pstate, align 4, !dbg !9126
  store i32 %45, i32* %retval, align 4, !dbg !9127
  br label %return, !dbg !9127

return:                                           ; preds = %unlock, %if.then10, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !9128
  ret i32 %46, !dbg !9128
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_pm_opp_add(%struct.device* %dev, i64 %freq, i64 %u_volt) #0 !dbg !9129 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %freq.addr = alloca i64, align 8
  %u_volt.addr = alloca i64, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9132, metadata !DIExpression()), !dbg !9133
  store i64 %freq, i64* %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %freq.addr, metadata !9134, metadata !DIExpression()), !dbg !9135
  store i64 %u_volt, i64* %u_volt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %u_volt.addr, metadata !9136, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !9138, metadata !DIExpression()), !dbg !9139
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9140, metadata !DIExpression()), !dbg !9141
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9142
  %call = call %struct.opp_table* @dev_pm_opp_get_opp_table(%struct.device* %0) #8, !dbg !9143
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !9144
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9145
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !9145
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !9147
  br i1 %call1, label %if.then, label %if.end, !dbg !9148

if.then:                                          ; preds = %entry
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9149
  %4 = bitcast %struct.opp_table* %3 to i8*, !dbg !9149
  %call2 = call i64 @PTR_ERR(i8* %4) #8, !dbg !9150
  %conv = trunc i64 %call2 to i32, !dbg !9150
  store i32 %conv, i32* %retval, align 4, !dbg !9151
  br label %return, !dbg !9151

if.end:                                           ; preds = %entry
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9152
  %regulator_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 21, !dbg !9153
  store i32 1, i32* %regulator_count, align 8, !dbg !9154
  %6 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9155
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9156
  %8 = load i64, i64* %freq.addr, align 8, !dbg !9157
  %9 = load i64, i64* %u_volt.addr, align 8, !dbg !9158
  %call3 = call i32 @_opp_add_v1(%struct.opp_table* %6, %struct.device* %7, i64 %8, i64 %9, i1 zeroext true) #8, !dbg !9159
  store i32 %call3, i32* %ret, align 4, !dbg !9160
  %10 = load i32, i32* %ret, align 4, !dbg !9161
  %tobool = icmp ne i32 %10, 0, !dbg !9161
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !9163

if.then4:                                         ; preds = %if.end
  %11 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9164
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %11) #8, !dbg !9165
  br label %if.end5, !dbg !9165

if.end5:                                          ; preds = %if.then4, %if.end
  %12 = load i32, i32* %ret, align 4, !dbg !9166
  store i32 %12, i32* %retval, align 4, !dbg !9167
  br label %return, !dbg !9167

return:                                           ; preds = %if.end5, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !9168
  ret i32 %13, !dbg !9168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_pm_opp_adjust_voltage(%struct.device* %dev, i64 %freq, i64 %u_volt, i64 %u_volt_min, i64 %u_volt_max) #0 !dbg !9169 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %freq.addr = alloca i64, align 8
  %u_volt.addr = alloca i64, align 8
  %u_volt_min.addr = alloca i64, align 8
  %u_volt_max.addr = alloca i64, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %tmp_opp = alloca %struct.dev_pm_opp*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %r = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp15 = alloca %struct.dev_pm_opp*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9172, metadata !DIExpression()), !dbg !9173
  store i64 %freq, i64* %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %freq.addr, metadata !9174, metadata !DIExpression()), !dbg !9175
  store i64 %u_volt, i64* %u_volt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %u_volt.addr, metadata !9176, metadata !DIExpression()), !dbg !9177
  store i64 %u_volt_min, i64* %u_volt_min.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %u_volt_min.addr, metadata !9178, metadata !DIExpression()), !dbg !9179
  store i64 %u_volt_max, i64* %u_volt_max.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %u_volt_max.addr, metadata !9180, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !9182, metadata !DIExpression()), !dbg !9183
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %tmp_opp, metadata !9184, metadata !DIExpression()), !dbg !9185
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !9186, metadata !DIExpression()), !dbg !9187
  %call = call i8* @ERR_PTR(i64 -19) #8, !dbg !9188
  %0 = bitcast i8* %call to %struct.dev_pm_opp*, !dbg !9188
  store %struct.dev_pm_opp* %0, %struct.dev_pm_opp** %opp, align 8, !dbg !9187
  call void @llvm.dbg.declare(metadata i32* %r, metadata !9189, metadata !DIExpression()), !dbg !9190
  store i32 0, i32* %r, align 4, !dbg !9190
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9191
  %call1 = call %struct.opp_table* @_find_opp_table(%struct.device* %1) #8, !dbg !9192
  store %struct.opp_table* %call1, %struct.opp_table** %opp_table, align 8, !dbg !9193
  %2 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9194
  %3 = bitcast %struct.opp_table* %2 to i8*, !dbg !9194
  %call2 = call zeroext i1 @IS_ERR(i8* %3) #8, !dbg !9196
  br i1 %call2, label %if.then, label %if.end, !dbg !9197

if.then:                                          ; preds = %entry
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9198
  %5 = bitcast %struct.opp_table* %4 to i8*, !dbg !9198
  %call3 = call i64 @PTR_ERR(i8* %5) #8, !dbg !9200
  %conv = trunc i64 %call3 to i32, !dbg !9200
  store i32 %conv, i32* %r, align 4, !dbg !9201
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9202
  %7 = load i32, i32* %r, align 4, !dbg !9202
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.dev_pm_opp_adjust_voltage, i64 0, i64 0), i32 %7) #9, !dbg !9202
  %8 = load i32, i32* %r, align 4, !dbg !9203
  store i32 %8, i32* %retval, align 4, !dbg !9204
  br label %return, !dbg !9204

if.end:                                           ; preds = %entry
  %9 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9205
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %9, i32 0, i32 5, !dbg !9206
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !9207
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9208, metadata !DIExpression()), !dbg !9211
  %10 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9211
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %10, i32 0, i32 3, !dbg !9211
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %opp_list, i32 0, i32 0, !dbg !9211
  %11 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9211
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !9211
  store i8* %12, i8** %__mptr, align 8, !dbg !9211
  br label %do.body, !dbg !9211

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9212

do.end:                                           ; preds = %do.body
  %13 = load i8*, i8** %__mptr, align 8, !dbg !9211
  %add.ptr = getelementptr i8, i8* %13, i64 0, !dbg !9211
  %14 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !9211
  store %struct.dev_pm_opp* %14, %struct.dev_pm_opp** %tmp, align 8, !dbg !9212
  %15 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !9211
  store %struct.dev_pm_opp* %15, %struct.dev_pm_opp** %tmp_opp, align 8, !dbg !9214
  br label %for.cond, !dbg !9214

for.cond:                                         ; preds = %do.end14, %do.end
  %16 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp_opp, align 8, !dbg !9215
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %16, i32 0, i32 0, !dbg !9215
  %17 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9215
  %opp_list4 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %17, i32 0, i32 3, !dbg !9215
  %cmp = icmp eq %struct.list_head* %node, %opp_list4, !dbg !9215
  %lnot = xor i1 %cmp, true, !dbg !9215
  br i1 %lnot, label %for.body, label %for.end, !dbg !9214

for.body:                                         ; preds = %for.cond
  %18 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp_opp, align 8, !dbg !9217
  %rate = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %18, i32 0, i32 7, !dbg !9220
  %19 = load i64, i64* %rate, align 8, !dbg !9220
  %20 = load i64, i64* %freq.addr, align 8, !dbg !9221
  %cmp6 = icmp eq i64 %19, %20, !dbg !9222
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !9223

if.then8:                                         ; preds = %for.body
  %21 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp_opp, align 8, !dbg !9224
  store %struct.dev_pm_opp* %21, %struct.dev_pm_opp** %opp, align 8, !dbg !9226
  br label %for.end, !dbg !9227

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !9228

for.inc:                                          ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !9229, metadata !DIExpression()), !dbg !9231
  %22 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp_opp, align 8, !dbg !9231
  %node11 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %22, i32 0, i32 0, !dbg !9231
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %node11, i32 0, i32 0, !dbg !9231
  %23 = load %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !9231
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !9231
  store i8* %24, i8** %__mptr10, align 8, !dbg !9231
  br label %do.body13, !dbg !9231

do.body13:                                        ; preds = %for.inc
  br label %do.end14, !dbg !9232

do.end14:                                         ; preds = %do.body13
  %25 = load i8*, i8** %__mptr10, align 8, !dbg !9231
  %add.ptr16 = getelementptr i8, i8* %25, i64 0, !dbg !9231
  %26 = bitcast i8* %add.ptr16 to %struct.dev_pm_opp*, !dbg !9231
  store %struct.dev_pm_opp* %26, %struct.dev_pm_opp** %tmp15, align 8, !dbg !9232
  %27 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp15, align 8, !dbg !9231
  store %struct.dev_pm_opp* %27, %struct.dev_pm_opp** %tmp_opp, align 8, !dbg !9215
  br label %for.cond, !dbg !9215, !llvm.loop !9234

for.end:                                          ; preds = %if.then8, %for.cond
  %28 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9236
  %29 = bitcast %struct.dev_pm_opp* %28 to i8*, !dbg !9236
  %call17 = call zeroext i1 @IS_ERR(i8* %29) #8, !dbg !9238
  br i1 %call17, label %if.then18, label %if.end21, !dbg !9239

if.then18:                                        ; preds = %for.end
  %30 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9240
  %31 = bitcast %struct.dev_pm_opp* %30 to i8*, !dbg !9240
  %call19 = call i64 @PTR_ERR(i8* %31) #8, !dbg !9242
  %conv20 = trunc i64 %call19 to i32, !dbg !9242
  store i32 %conv20, i32* %r, align 4, !dbg !9243
  br label %adjust_unlock, !dbg !9244

if.end21:                                         ; preds = %for.end
  %32 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9245
  %supplies = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %32, i32 0, i32 9, !dbg !9247
  %33 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies, align 8, !dbg !9247
  %u_volt22 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %33, i32 0, i32 0, !dbg !9248
  %34 = load i64, i64* %u_volt22, align 8, !dbg !9248
  %35 = load i64, i64* %u_volt.addr, align 8, !dbg !9249
  %cmp23 = icmp eq i64 %34, %35, !dbg !9250
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !9251

if.then25:                                        ; preds = %if.end21
  br label %adjust_unlock, !dbg !9252

if.end26:                                         ; preds = %if.end21
  %36 = load i64, i64* %u_volt.addr, align 8, !dbg !9253
  %37 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9254
  %supplies27 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %37, i32 0, i32 9, !dbg !9255
  %38 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies27, align 8, !dbg !9255
  %u_volt28 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %38, i32 0, i32 0, !dbg !9256
  store i64 %36, i64* %u_volt28, align 8, !dbg !9257
  %39 = load i64, i64* %u_volt_min.addr, align 8, !dbg !9258
  %40 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9259
  %supplies29 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %40, i32 0, i32 9, !dbg !9260
  %41 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies29, align 8, !dbg !9260
  %u_volt_min30 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %41, i32 0, i32 1, !dbg !9261
  store i64 %39, i64* %u_volt_min30, align 8, !dbg !9262
  %42 = load i64, i64* %u_volt_max.addr, align 8, !dbg !9263
  %43 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9264
  %supplies31 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %43, i32 0, i32 9, !dbg !9265
  %44 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supplies31, align 8, !dbg !9265
  %u_volt_max32 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %44, i32 0, i32 2, !dbg !9266
  store i64 %42, i64* %u_volt_max32, align 8, !dbg !9267
  %45 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9268
  call void @dev_pm_opp_get(%struct.dev_pm_opp* %45) #8, !dbg !9269
  %46 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9270
  %lock33 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %46, i32 0, i32 5, !dbg !9271
  call void @mutex_unlock(%struct.mutex* %lock33) #8, !dbg !9272
  %47 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9273
  %head = getelementptr inbounds %struct.opp_table, %struct.opp_table* %47, i32 0, i32 1, !dbg !9274
  %48 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9275
  %49 = bitcast %struct.dev_pm_opp* %48 to i8*, !dbg !9275
  %call34 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %head, i64 4, i8* %49) #8, !dbg !9276
  %50 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9277
  call void @dev_pm_opp_put(%struct.dev_pm_opp* %50) #8, !dbg !9278
  br label %adjust_put_table, !dbg !9279

adjust_unlock:                                    ; preds = %if.then25, %if.then18
  call void @llvm.dbg.label(metadata !9280), !dbg !9281
  %51 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9282
  %lock35 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %51, i32 0, i32 5, !dbg !9283
  call void @mutex_unlock(%struct.mutex* %lock35) #8, !dbg !9284
  br label %adjust_put_table, !dbg !9284

adjust_put_table:                                 ; preds = %adjust_unlock, %if.end26
  call void @llvm.dbg.label(metadata !9285), !dbg !9286
  %52 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9287
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %52) #8, !dbg !9288
  %53 = load i32, i32* %r, align 4, !dbg !9289
  store i32 %53, i32* %retval, align 4, !dbg !9290
  br label %return, !dbg !9290

return:                                           ; preds = %adjust_put_table, %if.then
  %54 = load i32, i32* %retval, align 4, !dbg !9291
  ret i32 %54, !dbg !9291
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_pm_opp_enable(%struct.device* %dev, i64 %freq) #0 !dbg !9292 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %freq.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9293, metadata !DIExpression()), !dbg !9294
  store i64 %freq, i64* %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %freq.addr, metadata !9295, metadata !DIExpression()), !dbg !9296
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9297
  %1 = load i64, i64* %freq.addr, align 8, !dbg !9298
  %call = call i32 @_opp_set_availability(%struct.device* %0, i64 %1, i1 zeroext true) #8, !dbg !9299
  ret i32 %call, !dbg !9300
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_opp_set_availability(%struct.device* %dev, i64 %freq, i1 zeroext %availability_req) #0 !dbg !9301 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %freq.addr = alloca i64, align 8
  %availability_req.addr = alloca i8, align 1
  %opp_table = alloca %struct.opp_table*, align 8
  %tmp_opp = alloca %struct.dev_pm_opp*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %r = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp15 = alloca %struct.dev_pm_opp*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9304, metadata !DIExpression()), !dbg !9305
  store i64 %freq, i64* %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %freq.addr, metadata !9306, metadata !DIExpression()), !dbg !9307
  %frombool = zext i1 %availability_req to i8
  store i8 %frombool, i8* %availability_req.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %availability_req.addr, metadata !9308, metadata !DIExpression()), !dbg !9309
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !9310, metadata !DIExpression()), !dbg !9311
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %tmp_opp, metadata !9312, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !9314, metadata !DIExpression()), !dbg !9315
  %call = call i8* @ERR_PTR(i64 -19) #8, !dbg !9316
  %0 = bitcast i8* %call to %struct.dev_pm_opp*, !dbg !9316
  store %struct.dev_pm_opp* %0, %struct.dev_pm_opp** %opp, align 8, !dbg !9315
  call void @llvm.dbg.declare(metadata i32* %r, metadata !9317, metadata !DIExpression()), !dbg !9318
  store i32 0, i32* %r, align 4, !dbg !9318
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9319
  %call1 = call %struct.opp_table* @_find_opp_table(%struct.device* %1) #8, !dbg !9320
  store %struct.opp_table* %call1, %struct.opp_table** %opp_table, align 8, !dbg !9321
  %2 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9322
  %3 = bitcast %struct.opp_table* %2 to i8*, !dbg !9322
  %call2 = call zeroext i1 @IS_ERR(i8* %3) #8, !dbg !9324
  br i1 %call2, label %if.then, label %if.end, !dbg !9325

if.then:                                          ; preds = %entry
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9326
  %5 = bitcast %struct.opp_table* %4 to i8*, !dbg !9326
  %call3 = call i64 @PTR_ERR(i8* %5) #8, !dbg !9328
  %conv = trunc i64 %call3 to i32, !dbg !9328
  store i32 %conv, i32* %r, align 4, !dbg !9329
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9330
  %7 = load i32, i32* %r, align 4, !dbg !9330
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__._opp_set_availability, i64 0, i64 0), i32 %7) #9, !dbg !9330
  %8 = load i32, i32* %r, align 4, !dbg !9331
  store i32 %8, i32* %retval, align 4, !dbg !9332
  br label %return, !dbg !9332

if.end:                                           ; preds = %entry
  %9 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9333
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %9, i32 0, i32 5, !dbg !9334
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !9335
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9336, metadata !DIExpression()), !dbg !9339
  %10 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9339
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %10, i32 0, i32 3, !dbg !9339
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %opp_list, i32 0, i32 0, !dbg !9339
  %11 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9339
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !9339
  store i8* %12, i8** %__mptr, align 8, !dbg !9339
  br label %do.body, !dbg !9339

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9340

do.end:                                           ; preds = %do.body
  %13 = load i8*, i8** %__mptr, align 8, !dbg !9339
  %add.ptr = getelementptr i8, i8* %13, i64 0, !dbg !9339
  %14 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !9339
  store %struct.dev_pm_opp* %14, %struct.dev_pm_opp** %tmp, align 8, !dbg !9340
  %15 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !9339
  store %struct.dev_pm_opp* %15, %struct.dev_pm_opp** %tmp_opp, align 8, !dbg !9342
  br label %for.cond, !dbg !9342

for.cond:                                         ; preds = %do.end14, %do.end
  %16 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp_opp, align 8, !dbg !9343
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %16, i32 0, i32 0, !dbg !9343
  %17 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9343
  %opp_list4 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %17, i32 0, i32 3, !dbg !9343
  %cmp = icmp eq %struct.list_head* %node, %opp_list4, !dbg !9343
  %lnot = xor i1 %cmp, true, !dbg !9343
  br i1 %lnot, label %for.body, label %for.end, !dbg !9342

for.body:                                         ; preds = %for.cond
  %18 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp_opp, align 8, !dbg !9345
  %rate = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %18, i32 0, i32 7, !dbg !9348
  %19 = load i64, i64* %rate, align 8, !dbg !9348
  %20 = load i64, i64* %freq.addr, align 8, !dbg !9349
  %cmp6 = icmp eq i64 %19, %20, !dbg !9350
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !9351

if.then8:                                         ; preds = %for.body
  %21 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp_opp, align 8, !dbg !9352
  store %struct.dev_pm_opp* %21, %struct.dev_pm_opp** %opp, align 8, !dbg !9354
  br label %for.end, !dbg !9355

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !9356

for.inc:                                          ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !9357, metadata !DIExpression()), !dbg !9359
  %22 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp_opp, align 8, !dbg !9359
  %node11 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %22, i32 0, i32 0, !dbg !9359
  %next12 = getelementptr inbounds %struct.list_head, %struct.list_head* %node11, i32 0, i32 0, !dbg !9359
  %23 = load %struct.list_head*, %struct.list_head** %next12, align 8, !dbg !9359
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !9359
  store i8* %24, i8** %__mptr10, align 8, !dbg !9359
  br label %do.body13, !dbg !9359

do.body13:                                        ; preds = %for.inc
  br label %do.end14, !dbg !9360

do.end14:                                         ; preds = %do.body13
  %25 = load i8*, i8** %__mptr10, align 8, !dbg !9359
  %add.ptr16 = getelementptr i8, i8* %25, i64 0, !dbg !9359
  %26 = bitcast i8* %add.ptr16 to %struct.dev_pm_opp*, !dbg !9359
  store %struct.dev_pm_opp* %26, %struct.dev_pm_opp** %tmp15, align 8, !dbg !9360
  %27 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp15, align 8, !dbg !9359
  store %struct.dev_pm_opp* %27, %struct.dev_pm_opp** %tmp_opp, align 8, !dbg !9343
  br label %for.cond, !dbg !9343, !llvm.loop !9362

for.end:                                          ; preds = %if.then8, %for.cond
  %28 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9364
  %29 = bitcast %struct.dev_pm_opp* %28 to i8*, !dbg !9364
  %call17 = call zeroext i1 @IS_ERR(i8* %29) #8, !dbg !9366
  br i1 %call17, label %if.then18, label %if.end21, !dbg !9367

if.then18:                                        ; preds = %for.end
  %30 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9368
  %31 = bitcast %struct.dev_pm_opp* %30 to i8*, !dbg !9368
  %call19 = call i64 @PTR_ERR(i8* %31) #8, !dbg !9370
  %conv20 = trunc i64 %call19 to i32, !dbg !9370
  store i32 %conv20, i32* %r, align 4, !dbg !9371
  br label %unlock, !dbg !9372

if.end21:                                         ; preds = %for.end
  %32 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9373
  %available = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %32, i32 0, i32 2, !dbg !9375
  %33 = load i8, i8* %available, align 4, !dbg !9375
  %tobool = trunc i8 %33 to i1, !dbg !9375
  %conv22 = zext i1 %tobool to i32, !dbg !9373
  %34 = load i8, i8* %availability_req.addr, align 1, !dbg !9376
  %tobool23 = trunc i8 %34 to i1, !dbg !9376
  %conv24 = zext i1 %tobool23 to i32, !dbg !9376
  %cmp25 = icmp eq i32 %conv22, %conv24, !dbg !9377
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !9378

if.then27:                                        ; preds = %if.end21
  br label %unlock, !dbg !9379

if.end28:                                         ; preds = %if.end21
  %35 = load i8, i8* %availability_req.addr, align 1, !dbg !9380
  %tobool29 = trunc i8 %35 to i1, !dbg !9380
  %36 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9381
  %available30 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %36, i32 0, i32 2, !dbg !9382
  %frombool31 = zext i1 %tobool29 to i8, !dbg !9383
  store i8 %frombool31, i8* %available30, align 4, !dbg !9383
  %37 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9384
  call void @dev_pm_opp_get(%struct.dev_pm_opp* %37) #8, !dbg !9385
  %38 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9386
  %lock32 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %38, i32 0, i32 5, !dbg !9387
  call void @mutex_unlock(%struct.mutex* %lock32) #8, !dbg !9388
  %39 = load i8, i8* %availability_req.addr, align 1, !dbg !9389
  %tobool33 = trunc i8 %39 to i1, !dbg !9389
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !9391

if.then34:                                        ; preds = %if.end28
  %40 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9392
  %head = getelementptr inbounds %struct.opp_table, %struct.opp_table* %40, i32 0, i32 1, !dbg !9393
  %41 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9394
  %42 = bitcast %struct.dev_pm_opp* %41 to i8*, !dbg !9394
  %call35 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %head, i64 2, i8* %42) #8, !dbg !9395
  br label %if.end38, !dbg !9395

if.else:                                          ; preds = %if.end28
  %43 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9396
  %head36 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %43, i32 0, i32 1, !dbg !9397
  %44 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9398
  %45 = bitcast %struct.dev_pm_opp* %44 to i8*, !dbg !9398
  %call37 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %head36, i64 3, i8* %45) #8, !dbg !9399
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then34
  %46 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !9400
  call void @dev_pm_opp_put(%struct.dev_pm_opp* %46) #8, !dbg !9401
  br label %put_table, !dbg !9402

unlock:                                           ; preds = %if.then27, %if.then18
  call void @llvm.dbg.label(metadata !9403), !dbg !9404
  %47 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9405
  %lock39 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %47, i32 0, i32 5, !dbg !9406
  call void @mutex_unlock(%struct.mutex* %lock39) #8, !dbg !9407
  br label %put_table, !dbg !9407

put_table:                                        ; preds = %unlock, %if.end38
  call void @llvm.dbg.label(metadata !9408), !dbg !9409
  %48 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9410
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %48) #8, !dbg !9411
  %49 = load i32, i32* %r, align 4, !dbg !9412
  store i32 %49, i32* %retval, align 4, !dbg !9413
  br label %return, !dbg !9413

return:                                           ; preds = %put_table, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !9414
  ret i32 %50, !dbg !9414
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_pm_opp_disable(%struct.device* %dev, i64 %freq) #0 !dbg !9415 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %freq.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9416, metadata !DIExpression()), !dbg !9417
  store i64 %freq, i64* %freq.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %freq.addr, metadata !9418, metadata !DIExpression()), !dbg !9419
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9420
  %1 = load i64, i64* %freq.addr, align 8, !dbg !9421
  %call = call i32 @_opp_set_availability(%struct.device* %0, i64 %1, i1 zeroext false) #8, !dbg !9422
  ret i32 %call, !dbg !9423
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_pm_opp_register_notifier(%struct.device* %dev, %struct.notifier_block* %nb) #0 !dbg !9424 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %nb.addr = alloca %struct.notifier_block*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9427, metadata !DIExpression()), !dbg !9428
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !9429, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !9431, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9433, metadata !DIExpression()), !dbg !9434
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9435
  %call = call %struct.opp_table* @_find_opp_table(%struct.device* %0) #8, !dbg !9436
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !9437
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9438
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !9438
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !9440
  br i1 %call1, label %if.then, label %if.end, !dbg !9441

if.then:                                          ; preds = %entry
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9442
  %4 = bitcast %struct.opp_table* %3 to i8*, !dbg !9442
  %call2 = call i64 @PTR_ERR(i8* %4) #8, !dbg !9443
  %conv = trunc i64 %call2 to i32, !dbg !9443
  store i32 %conv, i32* %retval, align 4, !dbg !9444
  br label %return, !dbg !9444

if.end:                                           ; preds = %entry
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9445
  %head = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 1, !dbg !9446
  %6 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !9447
  %call3 = call i32 @blocking_notifier_chain_register(%struct.blocking_notifier_head* %head, %struct.notifier_block* %6) #8, !dbg !9448
  store i32 %call3, i32* %ret, align 4, !dbg !9449
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9450
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %7) #8, !dbg !9451
  %8 = load i32, i32* %ret, align 4, !dbg !9452
  store i32 %8, i32* %retval, align 4, !dbg !9453
  br label %return, !dbg !9453

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !9454
  ret i32 %9, !dbg !9454
}

; Function Attrs: noredzone
declare dso_local i32 @blocking_notifier_chain_register(%struct.blocking_notifier_head*, %struct.notifier_block*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @dev_pm_opp_unregister_notifier(%struct.device* %dev, %struct.notifier_block* %nb) #0 !dbg !9455 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %nb.addr = alloca %struct.notifier_block*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9456, metadata !DIExpression()), !dbg !9457
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !9458, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !9460, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9462, metadata !DIExpression()), !dbg !9463
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9464
  %call = call %struct.opp_table* @_find_opp_table(%struct.device* %0) #8, !dbg !9465
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !9466
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9467
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !9467
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !9469
  br i1 %call1, label %if.then, label %if.end, !dbg !9470

if.then:                                          ; preds = %entry
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9471
  %4 = bitcast %struct.opp_table* %3 to i8*, !dbg !9471
  %call2 = call i64 @PTR_ERR(i8* %4) #8, !dbg !9472
  %conv = trunc i64 %call2 to i32, !dbg !9472
  store i32 %conv, i32* %retval, align 4, !dbg !9473
  br label %return, !dbg !9473

if.end:                                           ; preds = %entry
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9474
  %head = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 1, !dbg !9475
  %6 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !9476
  %call3 = call i32 @blocking_notifier_chain_unregister(%struct.blocking_notifier_head* %head, %struct.notifier_block* %6) #8, !dbg !9477
  store i32 %call3, i32* %ret, align 4, !dbg !9478
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9479
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %7) #8, !dbg !9480
  %8 = load i32, i32* %ret, align 4, !dbg !9481
  store i32 %8, i32* %retval, align 4, !dbg !9482
  br label %return, !dbg !9482

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !9483
  ret i32 %9, !dbg !9483
}

; Function Attrs: noredzone
declare dso_local i32 @blocking_notifier_chain_unregister(%struct.blocking_notifier_head*, %struct.notifier_block*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @dev_pm_opp_remove_table(%struct.device* %dev) #0 !dbg !9484 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  %error = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9485, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !9487, metadata !DIExpression()), !dbg !9488
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9489
  %call = call %struct.opp_table* @_find_opp_table(%struct.device* %0) #8, !dbg !9490
  store %struct.opp_table* %call, %struct.opp_table** %opp_table, align 8, !dbg !9491
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9492
  %2 = bitcast %struct.opp_table* %1 to i8*, !dbg !9492
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !9494
  br i1 %call1, label %if.then, label %if.end31, !dbg !9495

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %error, metadata !9496, metadata !DIExpression()), !dbg !9498
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9499
  %4 = bitcast %struct.opp_table* %3 to i8*, !dbg !9499
  %call2 = call i64 @PTR_ERR(i8* %4) #8, !dbg !9500
  %conv = trunc i64 %call2 to i32, !dbg !9500
  store i32 %conv, i32* %error, align 4, !dbg !9498
  %5 = load i32, i32* %error, align 4, !dbg !9501
  %cmp = icmp ne i32 %5, -19, !dbg !9503
  br i1 %cmp, label %if.then4, label %if.end30, !dbg !9504

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9505, metadata !DIExpression()), !dbg !9507
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !9507
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !9508
  %tobool = icmp ne i32 %6, 0, !dbg !9508
  %lnot = xor i1 %tobool, true, !dbg !9508
  %lnot5 = xor i1 %lnot, true, !dbg !9508
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !9508
  %conv6 = sext i32 %lnot.ext to i64, !dbg !9508
  %tobool7 = icmp ne i64 %conv6, 0, !dbg !9508
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !9507

if.then8:                                         ; preds = %if.then4
  br label %do.body, !dbg !9508

do.body:                                          ; preds = %if.then8
  br label %do.body9, !dbg !9510

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !9512

do.end:                                           ; preds = %do.body9
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9510
  %8 = bitcast %struct.device* %7 to i8*, !dbg !9510
  %call10 = call zeroext i1 @IS_ERR_OR_NULL(i8* %8) #8, !dbg !9510
  br i1 %call10, label %cond.true, label %cond.false, !dbg !9510

cond.true:                                        ; preds = %do.end
  br label %cond.end, !dbg !9510

cond.false:                                       ; preds = %do.end
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9510
  %call12 = call i8* @dev_name(%struct.device* %9) #8, !dbg !9510
  br label %cond.end, !dbg !9510

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0), %cond.true ], [ %call12, %cond.false ], !dbg !9510
  %10 = load i32, i32* %error, align 4, !dbg !9510
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0), i8* %cond, i32 %10) #8, !dbg !9510
  br label %do.body13, !dbg !9510

do.body13:                                        ; preds = %cond.end
  br label %do.body14, !dbg !9514

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !9516

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !9514

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 2445, i32 2313, i64 12) #10, !dbg !9518, !srcloc !9520
  br label %do.end17, !dbg !9518

do.end17:                                         ; preds = %do.body16
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 342) #10, !dbg !9521, !srcloc !9523
  br label %do.body18, !dbg !9514

do.body18:                                        ; preds = %do.end17
  br label %do.end19, !dbg !9524

do.end19:                                         ; preds = %do.body18
  br label %do.end20, !dbg !9514

do.end20:                                         ; preds = %do.end19
  br label %do.body21, !dbg !9510

do.body21:                                        ; preds = %do.end20
  br label %do.end22, !dbg !9526

do.end22:                                         ; preds = %do.body21
  br label %do.end23, !dbg !9510

do.end23:                                         ; preds = %do.end22
  br label %if.end, !dbg !9510

if.end:                                           ; preds = %do.end23, %if.then4
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !9507
  %tobool24 = icmp ne i32 %11, 0, !dbg !9507
  %lnot25 = xor i1 %tobool24, true, !dbg !9507
  %lnot27 = xor i1 %lnot25, true, !dbg !9507
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !9507
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !9507
  store i64 %conv29, i64* %tmp, align 8, !dbg !9508
  %12 = load i64, i64* %tmp, align 8, !dbg !9507
  br label %if.end30, !dbg !9528

if.end30:                                         ; preds = %if.end, %if.then
  br label %return, !dbg !9529

if.end31:                                         ; preds = %entry
  %13 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9530
  %call32 = call zeroext i1 @_opp_remove_all_static(%struct.opp_table* %13) #8, !dbg !9532
  br i1 %call32, label %if.then33, label %if.end34, !dbg !9533

if.then33:                                        ; preds = %if.end31
  %14 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9534
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %14) #8, !dbg !9535
  br label %if.end34, !dbg !9535

if.end34:                                         ; preds = %if.then33, %if.end31
  %15 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9536
  call void @dev_pm_opp_put_opp_table(%struct.opp_table* %15) #8, !dbg !9537
  br label %return, !dbg !9538

return:                                           ; preds = %if.end34, %if.end30
  ret void, !dbg !9538
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !9539 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9542, metadata !DIExpression()), !dbg !9543
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9544
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !9546
  %1 = load i8*, i8** %init_name, align 8, !dbg !9546
  %tobool = icmp ne i8* %1, null, !dbg !9544
  br i1 %tobool, label %if.then, label %if.end, !dbg !9547

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9548
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !9549
  %3 = load i8*, i8** %init_name1, align 8, !dbg !9549
  store i8* %3, i8** %retval, align 8, !dbg !9550
  br label %return, !dbg !9550

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9551
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !9552
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #8, !dbg !9553
  store i8* %call, i8** %retval, align 8, !dbg !9554
  br label %return, !dbg !9554

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !9555
  ret i8* %5, !dbg !9555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.opp_device* @_find_opp_dev(%struct.device* %dev, %struct.opp_table* %opp_table) #0 !dbg !9556 {
entry:
  %retval = alloca %struct.opp_device*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %opp_table.addr = alloca %struct.opp_table*, align 8
  %opp_dev = alloca %struct.opp_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.opp_device*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp9 = alloca %struct.opp_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9557, metadata !DIExpression()), !dbg !9558
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !9559, metadata !DIExpression()), !dbg !9560
  call void @llvm.dbg.declare(metadata %struct.opp_device** %opp_dev, metadata !9561, metadata !DIExpression()), !dbg !9562
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9563, metadata !DIExpression()), !dbg !9566
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !9566
  %dev_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 2, !dbg !9566
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %dev_list, i32 0, i32 0, !dbg !9566
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9566
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !9566
  store i8* %2, i8** %__mptr, align 8, !dbg !9566
  br label %do.body, !dbg !9566

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9567

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9566
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !9566
  %4 = bitcast i8* %add.ptr to %struct.opp_device*, !dbg !9566
  store %struct.opp_device* %4, %struct.opp_device** %tmp, align 8, !dbg !9567
  %5 = load %struct.opp_device*, %struct.opp_device** %tmp, align 8, !dbg !9566
  store %struct.opp_device* %5, %struct.opp_device** %opp_dev, align 8, !dbg !9569
  br label %for.cond, !dbg !9569

for.cond:                                         ; preds = %do.end8, %do.end
  %6 = load %struct.opp_device*, %struct.opp_device** %opp_dev, align 8, !dbg !9570
  %node = getelementptr inbounds %struct.opp_device, %struct.opp_device* %6, i32 0, i32 0, !dbg !9570
  %7 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !9570
  %dev_list1 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %7, i32 0, i32 2, !dbg !9570
  %cmp = icmp eq %struct.list_head* %node, %dev_list1, !dbg !9570
  %lnot = xor i1 %cmp, true, !dbg !9570
  br i1 %lnot, label %for.body, label %for.end, !dbg !9569

for.body:                                         ; preds = %for.cond
  %8 = load %struct.opp_device*, %struct.opp_device** %opp_dev, align 8, !dbg !9572
  %dev2 = getelementptr inbounds %struct.opp_device, %struct.opp_device* %8, i32 0, i32 1, !dbg !9574
  %9 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !9574
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9575
  %cmp3 = icmp eq %struct.device* %9, %10, !dbg !9576
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9577

if.then:                                          ; preds = %for.body
  %11 = load %struct.opp_device*, %struct.opp_device** %opp_dev, align 8, !dbg !9578
  store %struct.opp_device* %11, %struct.opp_device** %retval, align 8, !dbg !9579
  br label %return, !dbg !9579

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !9575

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !9580, metadata !DIExpression()), !dbg !9582
  %12 = load %struct.opp_device*, %struct.opp_device** %opp_dev, align 8, !dbg !9582
  %node5 = getelementptr inbounds %struct.opp_device, %struct.opp_device* %12, i32 0, i32 0, !dbg !9582
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %node5, i32 0, i32 0, !dbg !9582
  %13 = load %struct.list_head*, %struct.list_head** %next6, align 8, !dbg !9582
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !9582
  store i8* %14, i8** %__mptr4, align 8, !dbg !9582
  br label %do.body7, !dbg !9582

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !9583

do.end8:                                          ; preds = %do.body7
  %15 = load i8*, i8** %__mptr4, align 8, !dbg !9582
  %add.ptr10 = getelementptr i8, i8* %15, i64 0, !dbg !9582
  %16 = bitcast i8* %add.ptr10 to %struct.opp_device*, !dbg !9582
  store %struct.opp_device* %16, %struct.opp_device** %tmp9, align 8, !dbg !9583
  %17 = load %struct.opp_device*, %struct.opp_device** %tmp9, align 8, !dbg !9582
  store %struct.opp_device* %17, %struct.opp_device** %opp_dev, align 8, !dbg !9570
  br label %for.cond, !dbg !9570, !llvm.loop !9585

for.end:                                          ; preds = %for.cond
  store %struct.opp_device* null, %struct.opp_device** %retval, align 8, !dbg !9587
  br label %return, !dbg !9587

return:                                           ; preds = %for.end, %if.then
  %18 = load %struct.opp_device*, %struct.opp_device** %retval, align 8, !dbg !9588
  ret %struct.opp_device* %18, !dbg !9588
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !9589 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !9593, metadata !DIExpression()), !dbg !9594
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !9595
  %tobool = trunc i8 %0 to i1, !dbg !9595
  %lnot = xor i1 %tobool, true, !dbg !9595
  %lnot1 = xor i1 %lnot, true, !dbg !9595
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9595
  %conv = sext i32 %lnot.ext to i64, !dbg !9595
  %tobool2 = icmp ne i64 %conv, 0, !dbg !9595
  ret i1 %tobool2, !dbg !9596
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #4

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #5

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #6 !dbg !9597 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9601, metadata !DIExpression()), !dbg !9606
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9608, metadata !DIExpression()), !dbg !9609
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9610, metadata !DIExpression()), !dbg !9611
  %0 = load i64, i64* %size.addr, align 8, !dbg !9612
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !9614
  br i1 %1, label %if.then, label %if.end447, !dbg !9615

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !9616
  %tobool = icmp ne i64 %2, 0, !dbg !9616
  br i1 %tobool, label %if.end, label %if.then1, !dbg !9619

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !9620
  br label %return, !dbg !9620

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !9621
  %cmp = icmp ult i64 %3, 4096, !dbg !9623
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9624

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9625
  br label %return, !dbg !9625

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub = sub i64 %4, 1, !dbg !9626
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !9626
  br i1 %5, label %cond.true, label %cond.false442, !dbg !9626

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub4 = sub i64 %6, 1, !dbg !9626
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !9626
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !9626

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub6 = sub i64 %8, 1, !dbg !9626
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !9626
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !9626

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !9626

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub9 = sub i64 %9, 1, !dbg !9626
  %and = and i64 %sub9, -9223372036854775808, !dbg !9626
  %tobool10 = icmp ne i64 %and, 0, !dbg !9626
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !9626

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !9626

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub13 = sub i64 %10, 1, !dbg !9626
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !9626
  %tobool15 = icmp ne i64 %and14, 0, !dbg !9626
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !9626

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !9626

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub18 = sub i64 %11, 1, !dbg !9626
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !9626
  %tobool20 = icmp ne i64 %and19, 0, !dbg !9626
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !9626

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !9626

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub23 = sub i64 %12, 1, !dbg !9626
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !9626
  %tobool25 = icmp ne i64 %and24, 0, !dbg !9626
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !9626

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !9626

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub28 = sub i64 %13, 1, !dbg !9626
  %and29 = and i64 %sub28, 576460752303423488, !dbg !9626
  %tobool30 = icmp ne i64 %and29, 0, !dbg !9626
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !9626

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !9626

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub33 = sub i64 %14, 1, !dbg !9626
  %and34 = and i64 %sub33, 288230376151711744, !dbg !9626
  %tobool35 = icmp ne i64 %and34, 0, !dbg !9626
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !9626

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !9626

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub38 = sub i64 %15, 1, !dbg !9626
  %and39 = and i64 %sub38, 144115188075855872, !dbg !9626
  %tobool40 = icmp ne i64 %and39, 0, !dbg !9626
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !9626

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !9626

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub43 = sub i64 %16, 1, !dbg !9626
  %and44 = and i64 %sub43, 72057594037927936, !dbg !9626
  %tobool45 = icmp ne i64 %and44, 0, !dbg !9626
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !9626

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !9626

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub48 = sub i64 %17, 1, !dbg !9626
  %and49 = and i64 %sub48, 36028797018963968, !dbg !9626
  %tobool50 = icmp ne i64 %and49, 0, !dbg !9626
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !9626

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !9626

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub53 = sub i64 %18, 1, !dbg !9626
  %and54 = and i64 %sub53, 18014398509481984, !dbg !9626
  %tobool55 = icmp ne i64 %and54, 0, !dbg !9626
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !9626

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !9626

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub58 = sub i64 %19, 1, !dbg !9626
  %and59 = and i64 %sub58, 9007199254740992, !dbg !9626
  %tobool60 = icmp ne i64 %and59, 0, !dbg !9626
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !9626

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !9626

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub63 = sub i64 %20, 1, !dbg !9626
  %and64 = and i64 %sub63, 4503599627370496, !dbg !9626
  %tobool65 = icmp ne i64 %and64, 0, !dbg !9626
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !9626

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !9626

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub68 = sub i64 %21, 1, !dbg !9626
  %and69 = and i64 %sub68, 2251799813685248, !dbg !9626
  %tobool70 = icmp ne i64 %and69, 0, !dbg !9626
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !9626

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !9626

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub73 = sub i64 %22, 1, !dbg !9626
  %and74 = and i64 %sub73, 1125899906842624, !dbg !9626
  %tobool75 = icmp ne i64 %and74, 0, !dbg !9626
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !9626

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !9626

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub78 = sub i64 %23, 1, !dbg !9626
  %and79 = and i64 %sub78, 562949953421312, !dbg !9626
  %tobool80 = icmp ne i64 %and79, 0, !dbg !9626
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !9626

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !9626

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub83 = sub i64 %24, 1, !dbg !9626
  %and84 = and i64 %sub83, 281474976710656, !dbg !9626
  %tobool85 = icmp ne i64 %and84, 0, !dbg !9626
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !9626

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !9626

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub88 = sub i64 %25, 1, !dbg !9626
  %and89 = and i64 %sub88, 140737488355328, !dbg !9626
  %tobool90 = icmp ne i64 %and89, 0, !dbg !9626
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !9626

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !9626

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub93 = sub i64 %26, 1, !dbg !9626
  %and94 = and i64 %sub93, 70368744177664, !dbg !9626
  %tobool95 = icmp ne i64 %and94, 0, !dbg !9626
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !9626

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !9626

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub98 = sub i64 %27, 1, !dbg !9626
  %and99 = and i64 %sub98, 35184372088832, !dbg !9626
  %tobool100 = icmp ne i64 %and99, 0, !dbg !9626
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !9626

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !9626

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub103 = sub i64 %28, 1, !dbg !9626
  %and104 = and i64 %sub103, 17592186044416, !dbg !9626
  %tobool105 = icmp ne i64 %and104, 0, !dbg !9626
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !9626

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !9626

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub108 = sub i64 %29, 1, !dbg !9626
  %and109 = and i64 %sub108, 8796093022208, !dbg !9626
  %tobool110 = icmp ne i64 %and109, 0, !dbg !9626
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !9626

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !9626

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub113 = sub i64 %30, 1, !dbg !9626
  %and114 = and i64 %sub113, 4398046511104, !dbg !9626
  %tobool115 = icmp ne i64 %and114, 0, !dbg !9626
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !9626

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !9626

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub118 = sub i64 %31, 1, !dbg !9626
  %and119 = and i64 %sub118, 2199023255552, !dbg !9626
  %tobool120 = icmp ne i64 %and119, 0, !dbg !9626
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !9626

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !9626

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub123 = sub i64 %32, 1, !dbg !9626
  %and124 = and i64 %sub123, 1099511627776, !dbg !9626
  %tobool125 = icmp ne i64 %and124, 0, !dbg !9626
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !9626

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !9626

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub128 = sub i64 %33, 1, !dbg !9626
  %and129 = and i64 %sub128, 549755813888, !dbg !9626
  %tobool130 = icmp ne i64 %and129, 0, !dbg !9626
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !9626

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !9626

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub133 = sub i64 %34, 1, !dbg !9626
  %and134 = and i64 %sub133, 274877906944, !dbg !9626
  %tobool135 = icmp ne i64 %and134, 0, !dbg !9626
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !9626

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !9626

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub138 = sub i64 %35, 1, !dbg !9626
  %and139 = and i64 %sub138, 137438953472, !dbg !9626
  %tobool140 = icmp ne i64 %and139, 0, !dbg !9626
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !9626

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !9626

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub143 = sub i64 %36, 1, !dbg !9626
  %and144 = and i64 %sub143, 68719476736, !dbg !9626
  %tobool145 = icmp ne i64 %and144, 0, !dbg !9626
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !9626

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !9626

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub148 = sub i64 %37, 1, !dbg !9626
  %and149 = and i64 %sub148, 34359738368, !dbg !9626
  %tobool150 = icmp ne i64 %and149, 0, !dbg !9626
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !9626

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !9626

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub153 = sub i64 %38, 1, !dbg !9626
  %and154 = and i64 %sub153, 17179869184, !dbg !9626
  %tobool155 = icmp ne i64 %and154, 0, !dbg !9626
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !9626

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !9626

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub158 = sub i64 %39, 1, !dbg !9626
  %and159 = and i64 %sub158, 8589934592, !dbg !9626
  %tobool160 = icmp ne i64 %and159, 0, !dbg !9626
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !9626

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !9626

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub163 = sub i64 %40, 1, !dbg !9626
  %and164 = and i64 %sub163, 4294967296, !dbg !9626
  %tobool165 = icmp ne i64 %and164, 0, !dbg !9626
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !9626

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !9626

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub168 = sub i64 %41, 1, !dbg !9626
  %and169 = and i64 %sub168, 2147483648, !dbg !9626
  %tobool170 = icmp ne i64 %and169, 0, !dbg !9626
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !9626

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !9626

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub173 = sub i64 %42, 1, !dbg !9626
  %and174 = and i64 %sub173, 1073741824, !dbg !9626
  %tobool175 = icmp ne i64 %and174, 0, !dbg !9626
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !9626

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !9626

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub178 = sub i64 %43, 1, !dbg !9626
  %and179 = and i64 %sub178, 536870912, !dbg !9626
  %tobool180 = icmp ne i64 %and179, 0, !dbg !9626
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !9626

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !9626

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub183 = sub i64 %44, 1, !dbg !9626
  %and184 = and i64 %sub183, 268435456, !dbg !9626
  %tobool185 = icmp ne i64 %and184, 0, !dbg !9626
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !9626

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !9626

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub188 = sub i64 %45, 1, !dbg !9626
  %and189 = and i64 %sub188, 134217728, !dbg !9626
  %tobool190 = icmp ne i64 %and189, 0, !dbg !9626
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !9626

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !9626

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub193 = sub i64 %46, 1, !dbg !9626
  %and194 = and i64 %sub193, 67108864, !dbg !9626
  %tobool195 = icmp ne i64 %and194, 0, !dbg !9626
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !9626

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !9626

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub198 = sub i64 %47, 1, !dbg !9626
  %and199 = and i64 %sub198, 33554432, !dbg !9626
  %tobool200 = icmp ne i64 %and199, 0, !dbg !9626
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !9626

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !9626

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub203 = sub i64 %48, 1, !dbg !9626
  %and204 = and i64 %sub203, 16777216, !dbg !9626
  %tobool205 = icmp ne i64 %and204, 0, !dbg !9626
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !9626

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !9626

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub208 = sub i64 %49, 1, !dbg !9626
  %and209 = and i64 %sub208, 8388608, !dbg !9626
  %tobool210 = icmp ne i64 %and209, 0, !dbg !9626
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !9626

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !9626

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub213 = sub i64 %50, 1, !dbg !9626
  %and214 = and i64 %sub213, 4194304, !dbg !9626
  %tobool215 = icmp ne i64 %and214, 0, !dbg !9626
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !9626

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !9626

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub218 = sub i64 %51, 1, !dbg !9626
  %and219 = and i64 %sub218, 2097152, !dbg !9626
  %tobool220 = icmp ne i64 %and219, 0, !dbg !9626
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !9626

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !9626

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub223 = sub i64 %52, 1, !dbg !9626
  %and224 = and i64 %sub223, 1048576, !dbg !9626
  %tobool225 = icmp ne i64 %and224, 0, !dbg !9626
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !9626

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !9626

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub228 = sub i64 %53, 1, !dbg !9626
  %and229 = and i64 %sub228, 524288, !dbg !9626
  %tobool230 = icmp ne i64 %and229, 0, !dbg !9626
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !9626

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !9626

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub233 = sub i64 %54, 1, !dbg !9626
  %and234 = and i64 %sub233, 262144, !dbg !9626
  %tobool235 = icmp ne i64 %and234, 0, !dbg !9626
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !9626

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !9626

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub238 = sub i64 %55, 1, !dbg !9626
  %and239 = and i64 %sub238, 131072, !dbg !9626
  %tobool240 = icmp ne i64 %and239, 0, !dbg !9626
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !9626

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !9626

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub243 = sub i64 %56, 1, !dbg !9626
  %and244 = and i64 %sub243, 65536, !dbg !9626
  %tobool245 = icmp ne i64 %and244, 0, !dbg !9626
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !9626

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !9626

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub248 = sub i64 %57, 1, !dbg !9626
  %and249 = and i64 %sub248, 32768, !dbg !9626
  %tobool250 = icmp ne i64 %and249, 0, !dbg !9626
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !9626

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !9626

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub253 = sub i64 %58, 1, !dbg !9626
  %and254 = and i64 %sub253, 16384, !dbg !9626
  %tobool255 = icmp ne i64 %and254, 0, !dbg !9626
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !9626

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !9626

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub258 = sub i64 %59, 1, !dbg !9626
  %and259 = and i64 %sub258, 8192, !dbg !9626
  %tobool260 = icmp ne i64 %and259, 0, !dbg !9626
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !9626

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !9626

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub263 = sub i64 %60, 1, !dbg !9626
  %and264 = and i64 %sub263, 4096, !dbg !9626
  %tobool265 = icmp ne i64 %and264, 0, !dbg !9626
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !9626

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !9626

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub268 = sub i64 %61, 1, !dbg !9626
  %and269 = and i64 %sub268, 2048, !dbg !9626
  %tobool270 = icmp ne i64 %and269, 0, !dbg !9626
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !9626

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !9626

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub273 = sub i64 %62, 1, !dbg !9626
  %and274 = and i64 %sub273, 1024, !dbg !9626
  %tobool275 = icmp ne i64 %and274, 0, !dbg !9626
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !9626

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !9626

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub278 = sub i64 %63, 1, !dbg !9626
  %and279 = and i64 %sub278, 512, !dbg !9626
  %tobool280 = icmp ne i64 %and279, 0, !dbg !9626
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !9626

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !9626

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub283 = sub i64 %64, 1, !dbg !9626
  %and284 = and i64 %sub283, 256, !dbg !9626
  %tobool285 = icmp ne i64 %and284, 0, !dbg !9626
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !9626

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !9626

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub288 = sub i64 %65, 1, !dbg !9626
  %and289 = and i64 %sub288, 128, !dbg !9626
  %tobool290 = icmp ne i64 %and289, 0, !dbg !9626
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !9626

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !9626

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub293 = sub i64 %66, 1, !dbg !9626
  %and294 = and i64 %sub293, 64, !dbg !9626
  %tobool295 = icmp ne i64 %and294, 0, !dbg !9626
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !9626

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !9626

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub298 = sub i64 %67, 1, !dbg !9626
  %and299 = and i64 %sub298, 32, !dbg !9626
  %tobool300 = icmp ne i64 %and299, 0, !dbg !9626
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !9626

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !9626

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub303 = sub i64 %68, 1, !dbg !9626
  %and304 = and i64 %sub303, 16, !dbg !9626
  %tobool305 = icmp ne i64 %and304, 0, !dbg !9626
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !9626

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !9626

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub308 = sub i64 %69, 1, !dbg !9626
  %and309 = and i64 %sub308, 8, !dbg !9626
  %tobool310 = icmp ne i64 %and309, 0, !dbg !9626
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !9626

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !9626

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub313 = sub i64 %70, 1, !dbg !9626
  %and314 = and i64 %sub313, 4, !dbg !9626
  %tobool315 = icmp ne i64 %and314, 0, !dbg !9626
  %71 = zext i1 %tobool315 to i64, !dbg !9626
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !9626
  br label %cond.end, !dbg !9626

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !9626
  br label %cond.end317, !dbg !9626

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !9626
  br label %cond.end319, !dbg !9626

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !9626
  br label %cond.end321, !dbg !9626

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !9626
  br label %cond.end323, !dbg !9626

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !9626
  br label %cond.end325, !dbg !9626

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !9626
  br label %cond.end327, !dbg !9626

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !9626
  br label %cond.end329, !dbg !9626

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !9626
  br label %cond.end331, !dbg !9626

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !9626
  br label %cond.end333, !dbg !9626

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !9626
  br label %cond.end335, !dbg !9626

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !9626
  br label %cond.end337, !dbg !9626

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !9626
  br label %cond.end339, !dbg !9626

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !9626
  br label %cond.end341, !dbg !9626

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !9626
  br label %cond.end343, !dbg !9626

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !9626
  br label %cond.end345, !dbg !9626

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !9626
  br label %cond.end347, !dbg !9626

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !9626
  br label %cond.end349, !dbg !9626

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !9626
  br label %cond.end351, !dbg !9626

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !9626
  br label %cond.end353, !dbg !9626

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !9626
  br label %cond.end355, !dbg !9626

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !9626
  br label %cond.end357, !dbg !9626

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !9626
  br label %cond.end359, !dbg !9626

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !9626
  br label %cond.end361, !dbg !9626

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !9626
  br label %cond.end363, !dbg !9626

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !9626
  br label %cond.end365, !dbg !9626

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !9626
  br label %cond.end367, !dbg !9626

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !9626
  br label %cond.end369, !dbg !9626

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !9626
  br label %cond.end371, !dbg !9626

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !9626
  br label %cond.end373, !dbg !9626

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !9626
  br label %cond.end375, !dbg !9626

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !9626
  br label %cond.end377, !dbg !9626

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !9626
  br label %cond.end379, !dbg !9626

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !9626
  br label %cond.end381, !dbg !9626

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !9626
  br label %cond.end383, !dbg !9626

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !9626
  br label %cond.end385, !dbg !9626

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !9626
  br label %cond.end387, !dbg !9626

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !9626
  br label %cond.end389, !dbg !9626

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !9626
  br label %cond.end391, !dbg !9626

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !9626
  br label %cond.end393, !dbg !9626

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !9626
  br label %cond.end395, !dbg !9626

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !9626
  br label %cond.end397, !dbg !9626

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !9626
  br label %cond.end399, !dbg !9626

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !9626
  br label %cond.end401, !dbg !9626

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !9626
  br label %cond.end403, !dbg !9626

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !9626
  br label %cond.end405, !dbg !9626

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !9626
  br label %cond.end407, !dbg !9626

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !9626
  br label %cond.end409, !dbg !9626

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !9626
  br label %cond.end411, !dbg !9626

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !9626
  br label %cond.end413, !dbg !9626

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !9626
  br label %cond.end415, !dbg !9626

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !9626
  br label %cond.end417, !dbg !9626

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !9626
  br label %cond.end419, !dbg !9626

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !9626
  br label %cond.end421, !dbg !9626

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !9626
  br label %cond.end423, !dbg !9626

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !9626
  br label %cond.end425, !dbg !9626

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !9626
  br label %cond.end427, !dbg !9626

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !9626
  br label %cond.end429, !dbg !9626

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !9626
  br label %cond.end431, !dbg !9626

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !9626
  br label %cond.end433, !dbg !9626

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !9626
  br label %cond.end435, !dbg !9626

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !9626
  br label %cond.end437, !dbg !9626

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !9626
  br label %cond.end440, !dbg !9626

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !9626

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !9626
  br label %cond.end444, !dbg !9626

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !9626
  %sub443 = sub i64 %72, 1, !dbg !9626
  %call = call i32 @__ilog2_u64(i64 %sub443) #11, !dbg !9626
  br label %cond.end444, !dbg !9626

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !9626
  %sub446 = sub i32 %cond445, 12, !dbg !9627
  %add = add i32 %sub446, 1, !dbg !9628
  store i32 %add, i32* %retval, align 4, !dbg !9629
  br label %return, !dbg !9629

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !9630
  %dec = add i64 %73, -1, !dbg !9630
  store i64 %dec, i64* %size.addr, align 8, !dbg !9630
  %74 = load i64, i64* %size.addr, align 8, !dbg !9631
  %shr = lshr i64 %74, 12, !dbg !9631
  store i64 %shr, i64* %size.addr, align 8, !dbg !9631
  %75 = load i64, i64* %size.addr, align 8, !dbg !9632
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9609
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !9633
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !9634
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #13, !dbg !9633, !srcloc !9635
  store i32 %78, i32* %bitpos.i, align 4, !dbg !9633
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !9636
  %add.i = add i32 %79, 1, !dbg !9637
  store i32 %add.i, i32* %retval, align 4, !dbg !9638
  br label %return, !dbg !9638

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !9639
  ret i32 %80, !dbg !9639
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #6 !dbg !9640 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9601, metadata !DIExpression()), !dbg !9644
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9608, metadata !DIExpression()), !dbg !9646
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9647, metadata !DIExpression()), !dbg !9648
  %0 = load i64, i64* %n.addr, align 8, !dbg !9649
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9646
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !9650
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !9651
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #13, !dbg !9650, !srcloc !9635
  store i32 %3, i32* %bitpos.i, align 4, !dbg !9650
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !9652
  %add.i = add i32 %4, 1, !dbg !9653
  %sub = sub i32 %add.i, 1, !dbg !9654
  ret i32 %sub, !dbg !9655
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !9656 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !9660, metadata !DIExpression()), !dbg !9661
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !9662, metadata !DIExpression()), !dbg !9663
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9664, metadata !DIExpression()), !dbg !9665
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9666, metadata !DIExpression()), !dbg !9667
  %0 = load i8*, i8** %object.addr, align 8, !dbg !9668
  ret i8* %0, !dbg !9669
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @icc_set_bw(%struct.icc_path* %path, i32 %avg_bw, i32 %peak_bw) #0 !dbg !9670 {
entry:
  %path.addr = alloca %struct.icc_path*, align 8
  %avg_bw.addr = alloca i32, align 4
  %peak_bw.addr = alloca i32, align 4
  store %struct.icc_path* %path, %struct.icc_path** %path.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.icc_path** %path.addr, metadata !9673, metadata !DIExpression()), !dbg !9674
  store i32 %avg_bw, i32* %avg_bw.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %avg_bw.addr, metadata !9675, metadata !DIExpression()), !dbg !9676
  store i32 %peak_bw, i32* %peak_bw.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %peak_bw.addr, metadata !9677, metadata !DIExpression()), !dbg !9678
  ret i32 0, !dbg !9679
}

; Function Attrs: noredzone
declare dso_local i32 @clk_set_rate(%struct.clk*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_set_required_opp(%struct.device* %dev, %struct.device* %pd_dev, %struct.dev_pm_opp* %opp, i32 %i) #0 !dbg !9680 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %pd_dev.addr = alloca %struct.device*, align 8
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  %i.addr = alloca i32, align 4
  %pstate = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9683, metadata !DIExpression()), !dbg !9684
  store %struct.device* %pd_dev, %struct.device** %pd_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %pd_dev.addr, metadata !9685, metadata !DIExpression()), !dbg !9686
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !9687, metadata !DIExpression()), !dbg !9688
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !9689, metadata !DIExpression()), !dbg !9690
  call void @llvm.dbg.declare(metadata i32* %pstate, metadata !9691, metadata !DIExpression()), !dbg !9692
  %0 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !9693
  %tobool = icmp ne %struct.dev_pm_opp* %0, null, !dbg !9693
  %lnot = xor i1 %tobool, true, !dbg !9693
  %lnot1 = xor i1 %lnot, true, !dbg !9693
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9693
  %conv = sext i32 %lnot.ext to i64, !dbg !9693
  %tobool2 = icmp ne i64 %conv, 0, !dbg !9693
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !9693

cond.true:                                        ; preds = %entry
  %1 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !9694
  %required_opps = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %1, i32 0, i32 12, !dbg !9695
  %2 = load %struct.dev_pm_opp**, %struct.dev_pm_opp*** %required_opps, align 8, !dbg !9695
  %3 = load i32, i32* %i.addr, align 4, !dbg !9696
  %idxprom = sext i32 %3 to i64, !dbg !9694
  %arrayidx = getelementptr %struct.dev_pm_opp*, %struct.dev_pm_opp** %2, i64 %idxprom, !dbg !9694
  %4 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %arrayidx, align 8, !dbg !9694
  %pstate3 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %4, i32 0, i32 6, !dbg !9697
  %5 = load i32, i32* %pstate3, align 8, !dbg !9697
  br label %cond.end, !dbg !9693

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9693

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ 0, %cond.false ], !dbg !9693
  store i32 %cond, i32* %pstate, align 4, !dbg !9692
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9698, metadata !DIExpression()), !dbg !9699
  %6 = load %struct.device*, %struct.device** %pd_dev.addr, align 8, !dbg !9700
  %tobool4 = icmp ne %struct.device* %6, null, !dbg !9700
  br i1 %tobool4, label %if.end, label %if.then, !dbg !9702

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !9703
  br label %return, !dbg !9703

if.end:                                           ; preds = %cond.end
  %7 = load %struct.device*, %struct.device** %pd_dev.addr, align 8, !dbg !9704
  %8 = load i32, i32* %pstate, align 4, !dbg !9705
  %call = call i32 @dev_pm_genpd_set_performance_state(%struct.device* %7, i32 %8) #8, !dbg !9706
  store i32 %call, i32* %ret, align 4, !dbg !9707
  %9 = load i32, i32* %ret, align 4, !dbg !9708
  %tobool5 = icmp ne i32 %9, 0, !dbg !9708
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !9710

if.then6:                                         ; preds = %if.end
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9711
  %11 = load %struct.device*, %struct.device** %pd_dev.addr, align 8, !dbg !9711
  %call7 = call i8* @dev_name(%struct.device* %11) #8, !dbg !9711
  %12 = load i32, i32* %pstate, align 4, !dbg !9711
  %13 = load i32, i32* %ret, align 4, !dbg !9711
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %10, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.27, i64 0, i64 0), i8* %call7, i32 %12, i32 %13) #9, !dbg !9711
  br label %if.end8, !dbg !9713

if.end8:                                          ; preds = %if.then6, %if.end
  %14 = load i32, i32* %ret, align 4, !dbg !9714
  store i32 %14, i32* %retval, align 4, !dbg !9715
  br label %return, !dbg !9715

return:                                           ; preds = %if.end8, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !9716
  ret i32 %15, !dbg !9716
}

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_genpd_set_performance_state(%struct.device*, i32) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_set_opp_voltage(%struct.device* %dev, %struct.regulator* %reg, %struct.dev_pm_opp_supply* %supply) #0 !dbg !9717 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %reg.addr = alloca %struct.regulator*, align 8
  %supply.addr = alloca %struct.dev_pm_opp_supply*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9720, metadata !DIExpression()), !dbg !9721
  store %struct.regulator* %reg, %struct.regulator** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.regulator** %reg.addr, metadata !9722, metadata !DIExpression()), !dbg !9723
  store %struct.dev_pm_opp_supply* %supply, %struct.dev_pm_opp_supply** %supply.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp_supply** %supply.addr, metadata !9724, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9726, metadata !DIExpression()), !dbg !9727
  %0 = load %struct.regulator*, %struct.regulator** %reg.addr, align 8, !dbg !9728
  %1 = bitcast %struct.regulator* %0 to i8*, !dbg !9728
  %call = call zeroext i1 @IS_ERR(i8* %1) #8, !dbg !9730
  br i1 %call, label %if.then, label %if.end, !dbg !9731

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9732
  br label %return, !dbg !9732

if.end:                                           ; preds = %entry
  %2 = load %struct.regulator*, %struct.regulator** %reg.addr, align 8, !dbg !9734
  %3 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supply.addr, align 8, !dbg !9735
  %u_volt_min = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %3, i32 0, i32 1, !dbg !9736
  %4 = load i64, i64* %u_volt_min, align 8, !dbg !9736
  %conv = trunc i64 %4 to i32, !dbg !9735
  %5 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supply.addr, align 8, !dbg !9737
  %u_volt = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %5, i32 0, i32 0, !dbg !9738
  %6 = load i64, i64* %u_volt, align 8, !dbg !9738
  %conv1 = trunc i64 %6 to i32, !dbg !9737
  %7 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supply.addr, align 8, !dbg !9739
  %u_volt_max = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %7, i32 0, i32 2, !dbg !9740
  %8 = load i64, i64* %u_volt_max, align 8, !dbg !9740
  %conv2 = trunc i64 %8 to i32, !dbg !9739
  %call3 = call i32 @regulator_set_voltage_triplet(%struct.regulator* %2, i32 %conv, i32 %conv1, i32 %conv2) #8, !dbg !9741
  store i32 %call3, i32* %ret, align 4, !dbg !9742
  %9 = load i32, i32* %ret, align 4, !dbg !9743
  %tobool = icmp ne i32 %9, 0, !dbg !9743
  br i1 %tobool, label %if.then4, label %if.end8, !dbg !9745

if.then4:                                         ; preds = %if.end
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9746
  %11 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supply.addr, align 8, !dbg !9746
  %u_volt_min5 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %11, i32 0, i32 1, !dbg !9746
  %12 = load i64, i64* %u_volt_min5, align 8, !dbg !9746
  %13 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supply.addr, align 8, !dbg !9746
  %u_volt6 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %13, i32 0, i32 0, !dbg !9746
  %14 = load i64, i64* %u_volt6, align 8, !dbg !9746
  %15 = load %struct.dev_pm_opp_supply*, %struct.dev_pm_opp_supply** %supply.addr, align 8, !dbg !9746
  %u_volt_max7 = getelementptr inbounds %struct.dev_pm_opp_supply, %struct.dev_pm_opp_supply* %15, i32 0, i32 2, !dbg !9746
  %16 = load i64, i64* %u_volt_max7, align 8, !dbg !9746
  %17 = load i32, i32* %ret, align 4, !dbg !9746
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %10, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__._set_opp_voltage, i64 0, i64 0), i64 %12, i64 %14, i64 %16, i32 %17) #9, !dbg !9746
  br label %if.end8, !dbg !9746

if.end8:                                          ; preds = %if.then4, %if.end
  %18 = load i32, i32* %ret, align 4, !dbg !9747
  store i32 %18, i32* %retval, align 4, !dbg !9748
  br label %return, !dbg !9748

return:                                           ; preds = %if.end8, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !9749
  ret i32 %19, !dbg !9749
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @regulator_enable(%struct.regulator* %regulator) #0 !dbg !9750 {
entry:
  %regulator.addr = alloca %struct.regulator*, align 8
  store %struct.regulator* %regulator, %struct.regulator** %regulator.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.regulator** %regulator.addr, metadata !9751, metadata !DIExpression()), !dbg !9752
  ret i32 0, !dbg !9753
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @regulator_set_voltage_triplet(%struct.regulator* %regulator, i32 %min_uV, i32 %target_uV, i32 %max_uV) #0 !dbg !9754 {
entry:
  %retval = alloca i32, align 4
  %regulator.addr = alloca %struct.regulator*, align 8
  %min_uV.addr = alloca i32, align 4
  %target_uV.addr = alloca i32, align 4
  %max_uV.addr = alloca i32, align 4
  store %struct.regulator* %regulator, %struct.regulator** %regulator.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.regulator** %regulator.addr, metadata !9757, metadata !DIExpression()), !dbg !9758
  store i32 %min_uV, i32* %min_uV.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min_uV.addr, metadata !9759, metadata !DIExpression()), !dbg !9760
  store i32 %target_uV, i32* %target_uV.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target_uV.addr, metadata !9761, metadata !DIExpression()), !dbg !9762
  store i32 %max_uV, i32* %max_uV.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_uV.addr, metadata !9763, metadata !DIExpression()), !dbg !9764
  %0 = load %struct.regulator*, %struct.regulator** %regulator.addr, align 8, !dbg !9765
  %1 = load i32, i32* %target_uV.addr, align 4, !dbg !9767
  %2 = load i32, i32* %max_uV.addr, align 4, !dbg !9768
  %call = call i32 @regulator_set_voltage(%struct.regulator* %0, i32 %1, i32 %2) #8, !dbg !9769
  %cmp = icmp eq i32 %call, 0, !dbg !9770
  br i1 %cmp, label %if.then, label %if.end, !dbg !9771

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9772
  br label %return, !dbg !9772

if.end:                                           ; preds = %entry
  %3 = load %struct.regulator*, %struct.regulator** %regulator.addr, align 8, !dbg !9773
  %4 = load i32, i32* %min_uV.addr, align 4, !dbg !9774
  %5 = load i32, i32* %max_uV.addr, align 4, !dbg !9775
  %call1 = call i32 @regulator_set_voltage(%struct.regulator* %3, i32 %4, i32 %5) #8, !dbg !9776
  store i32 %call1, i32* %retval, align 4, !dbg !9777
  br label %return, !dbg !9777

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !9778
  ret i32 %6, !dbg !9778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @regulator_set_voltage(%struct.regulator* %regulator, i32 %min_uV, i32 %max_uV) #0 !dbg !9779 {
entry:
  %regulator.addr = alloca %struct.regulator*, align 8
  %min_uV.addr = alloca i32, align 4
  %max_uV.addr = alloca i32, align 4
  store %struct.regulator* %regulator, %struct.regulator** %regulator.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.regulator** %regulator.addr, metadata !9780, metadata !DIExpression()), !dbg !9781
  store i32 %min_uV, i32* %min_uV.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min_uV.addr, metadata !9782, metadata !DIExpression()), !dbg !9783
  store i32 %max_uV, i32* %max_uV.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_uV.addr, metadata !9784, metadata !DIExpression()), !dbg !9785
  ret i32 0, !dbg !9786
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @opp_debug_register(%struct.opp_device* %opp_dev, %struct.opp_table* %opp_table) #0 !dbg !9787 {
entry:
  %opp_dev.addr = alloca %struct.opp_device*, align 8
  %opp_table.addr = alloca %struct.opp_table*, align 8
  store %struct.opp_device* %opp_dev, %struct.opp_device** %opp_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_device** %opp_dev.addr, metadata !9790, metadata !DIExpression()), !dbg !9791
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !9792, metadata !DIExpression()), !dbg !9793
  ret void, !dbg !9794
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_inc(%struct.refcount_struct* %r) #0 !dbg !9795 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !9799, metadata !DIExpression()), !dbg !9800
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !9801
  call void @__refcount_inc(%struct.refcount_struct* %0, i32* null) #8, !dbg !9802
  ret void, !dbg !9803
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_inc(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !9804 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !9807, metadata !DIExpression()), !dbg !9808
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !9809, metadata !DIExpression()), !dbg !9810
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !9811
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !9812
  call void @__refcount_add(i32 1, %struct.refcount_struct* %0, i32* %1) #8, !dbg !9813
  ret void, !dbg !9814
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_add(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !9815 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !9818, metadata !DIExpression()), !dbg !9824
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9829, metadata !DIExpression()), !dbg !9830
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !9831, metadata !DIExpression()), !dbg !9833
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !9834, metadata !DIExpression()), !dbg !9842
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9844, metadata !DIExpression()), !dbg !9845
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !9846, metadata !DIExpression()), !dbg !9847
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !9848, metadata !DIExpression()), !dbg !9849
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !9850, metadata !DIExpression()), !dbg !9851
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !9852, metadata !DIExpression()), !dbg !9853
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !9854, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.declare(metadata i32* %old, metadata !9856, metadata !DIExpression()), !dbg !9857
  %0 = load i32, i32* %i.addr, align 4, !dbg !9858
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !9859
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !9860
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9861
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !9861
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9862
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !9863
  %conv.i.i = trunc i64 %5 to i32, !dbg !9863
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !9864
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9865
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !9865
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #12, !dbg !9865
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !9866
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9867
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !9833
  store i32 %10, i32* %__ret.i.i, align 4, !dbg !9833
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !9833
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9833
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !9833
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #10, !dbg !9833, !srcloc !9868
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !9833
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !9833
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !9833
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !9833
  store i32 %15, i32* %old, align 4, !dbg !9857
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !9869
  %tobool = icmp ne i32* %16, null, !dbg !9869
  br i1 %tobool, label %if.then, label %if.end, !dbg !9871

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !9872
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !9873
  store i32 %17, i32* %18, align 4, !dbg !9874
  br label %if.end, !dbg !9875

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !9876
  %tobool1 = icmp ne i32 %19, 0, !dbg !9876
  %lnot = xor i1 %tobool1, true, !dbg !9876
  %lnot2 = xor i1 %lnot, true, !dbg !9876
  %lnot3 = xor i1 %lnot2, true, !dbg !9876
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !9876
  %conv = sext i32 %lnot.ext to i64, !dbg !9876
  %tobool4 = icmp ne i64 %conv, 0, !dbg !9876
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !9878

if.then5:                                         ; preds = %if.end
  %20 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !9879
  call void @refcount_warn_saturate(%struct.refcount_struct* %20, i32 2) #8, !dbg !9880
  br label %if.end17, !dbg !9880

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !9881
  %cmp = icmp slt i32 %21, 0, !dbg !9881
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9881

lor.rhs:                                          ; preds = %if.else
  %22 = load i32, i32* %old, align 4, !dbg !9881
  %23 = load i32, i32* %i.addr, align 4, !dbg !9881
  %add = add i32 %22, %23, !dbg !9881
  %cmp7 = icmp slt i32 %add, 0, !dbg !9881
  br label %lor.end, !dbg !9881

lor.end:                                          ; preds = %lor.rhs, %if.else
  %24 = phi i1 [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %24, true, !dbg !9881
  %lnot11 = xor i1 %lnot9, true, !dbg !9881
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !9881
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !9881
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !9881
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !9883

if.then15:                                        ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !9884
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 1) #8, !dbg !9885
  br label %if.end16, !dbg !9885

if.end16:                                         ; preds = %if.then15, %lor.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  ret void, !dbg !9886
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !9887 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !9891, metadata !DIExpression()), !dbg !9892
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9893, metadata !DIExpression()), !dbg !9894
  ret i1 true, !dbg !9895
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !9896 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9900, metadata !DIExpression()), !dbg !9901
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9902, metadata !DIExpression()), !dbg !9903
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !9904, metadata !DIExpression()), !dbg !9905
  ret void, !dbg !9906
}

; Function Attrs: noredzone
declare dso_local %struct.opp_table* @_managed_opp(%struct.device*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.opp_table* @_allocate_opp_table(%struct.device* %dev, i32 %index) #0 !dbg !4983 {
entry:
  %retval = alloca %struct.opp_table*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %index.addr = alloca i32, align 4
  %opp_table = alloca %struct.opp_table*, align 8
  %opp_dev = alloca %struct.opp_device*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9907, metadata !DIExpression()), !dbg !9908
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9909, metadata !DIExpression()), !dbg !9910
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !9911, metadata !DIExpression()), !dbg !9912
  call void @llvm.dbg.declare(metadata %struct.opp_device** %opp_dev, metadata !9913, metadata !DIExpression()), !dbg !9914
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9915, metadata !DIExpression()), !dbg !9916
  %call = call i8* @kzalloc(i64 288, i32 3264) #8, !dbg !9917
  %0 = bitcast i8* %call to %struct.opp_table*, !dbg !9917
  store %struct.opp_table* %0, %struct.opp_table** %opp_table, align 8, !dbg !9918
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9919
  %tobool = icmp ne %struct.opp_table* %1, null, !dbg !9919
  br i1 %tobool, label %if.end, label %if.then, !dbg !9921

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -12) #8, !dbg !9922
  %2 = bitcast i8* %call1 to %struct.opp_table*, !dbg !9922
  store %struct.opp_table* %2, %struct.opp_table** %retval, align 8, !dbg !9923
  br label %return, !dbg !9923

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !9924

do.body:                                          ; preds = %if.end
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9925
  %lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %3, i32 0, i32 5, !dbg !9925
  call void @__mutex_init(%struct.mutex* %lock, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i64 0, i64 0), %struct.lock_class_key* @_allocate_opp_table.__key) #8, !dbg !9925
  br label %do.end, !dbg !9925

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !9927

do.body2:                                         ; preds = %do.end
  %4 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9928
  %genpd_virt_dev_lock = getelementptr inbounds %struct.opp_table, %struct.opp_table* %4, i32 0, i32 12, !dbg !9928
  call void @__mutex_init(%struct.mutex* %genpd_virt_dev_lock, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34, i64 0, i64 0), %struct.lock_class_key* @_allocate_opp_table.__key.33) #8, !dbg !9928
  br label %do.end3, !dbg !9928

do.end3:                                          ; preds = %do.body2
  %5 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9930
  %dev_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %5, i32 0, i32 2, !dbg !9931
  call void @INIT_LIST_HEAD(%struct.list_head* %dev_list) #8, !dbg !9932
  %6 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9933
  %regulator_count = getelementptr inbounds %struct.opp_table, %struct.opp_table* %6, i32 0, i32 21, !dbg !9934
  store i32 -1, i32* %regulator_count, align 8, !dbg !9935
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9936
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9937
  %call4 = call %struct.opp_device* @_add_opp_dev(%struct.device* %7, %struct.opp_table* %8) #8, !dbg !9938
  store %struct.opp_device* %call4, %struct.opp_device** %opp_dev, align 8, !dbg !9939
  %9 = load %struct.opp_device*, %struct.opp_device** %opp_dev, align 8, !dbg !9940
  %tobool5 = icmp ne %struct.opp_device* %9, null, !dbg !9940
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9942

if.then6:                                         ; preds = %do.end3
  store i32 -12, i32* %ret, align 4, !dbg !9943
  br label %err, !dbg !9945

if.end7:                                          ; preds = %do.end3
  %10 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9946
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9947
  %12 = load i32, i32* %index.addr, align 4, !dbg !9948
  call void @_of_init_opp_table(%struct.opp_table* %10, %struct.device* %11, i32 %12) #8, !dbg !9949
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9950
  %call8 = call %struct.clk* @clk_get(%struct.device* %13, i8* null) #8, !dbg !9951
  %14 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9952
  %clk = getelementptr inbounds %struct.opp_table, %struct.opp_table* %14, i32 0, i32 19, !dbg !9953
  store %struct.clk* %call8, %struct.clk** %clk, align 8, !dbg !9954
  %15 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9955
  %clk9 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %15, i32 0, i32 19, !dbg !9957
  %16 = load %struct.clk*, %struct.clk** %clk9, align 8, !dbg !9957
  %17 = bitcast %struct.clk* %16 to i8*, !dbg !9955
  %call10 = call zeroext i1 @IS_ERR(i8* %17) #8, !dbg !9958
  br i1 %call10, label %if.then11, label %if.end17, !dbg !9959

if.then11:                                        ; preds = %if.end7
  %18 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9960
  %clk12 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %18, i32 0, i32 19, !dbg !9962
  %19 = load %struct.clk*, %struct.clk** %clk12, align 8, !dbg !9962
  %20 = bitcast %struct.clk* %19 to i8*, !dbg !9960
  %call13 = call i64 @PTR_ERR(i8* %20) #8, !dbg !9963
  %conv = trunc i64 %call13 to i32, !dbg !9963
  store i32 %conv, i32* %ret, align 4, !dbg !9964
  %21 = load i32, i32* %ret, align 4, !dbg !9965
  %cmp = icmp eq i32 %21, -517, !dbg !9967
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !9968

if.then15:                                        ; preds = %if.then11
  br label %err, !dbg !9969

if.end16:                                         ; preds = %if.then11
  br label %if.end17, !dbg !9970

if.end17:                                         ; preds = %if.end16, %if.end7
  %22 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9971
  %23 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9972
  %call18 = call i32 @dev_pm_opp_of_find_icc_paths(%struct.device* %22, %struct.opp_table* %23) #8, !dbg !9973
  store i32 %call18, i32* %ret, align 4, !dbg !9974
  %24 = load i32, i32* %ret, align 4, !dbg !9975
  %tobool19 = icmp ne i32 %24, 0, !dbg !9975
  br i1 %tobool19, label %if.then20, label %if.end25, !dbg !9977

if.then20:                                        ; preds = %if.end17
  %25 = load i32, i32* %ret, align 4, !dbg !9978
  %cmp21 = icmp eq i32 %25, -517, !dbg !9981
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !9982

if.then23:                                        ; preds = %if.then20
  br label %err, !dbg !9983

if.end24:                                         ; preds = %if.then20
  %26 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9984
  %27 = load i32, i32* %ret, align 4, !dbg !9984
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %26, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._allocate_opp_table, i64 0, i64 0), i32 %27) #9, !dbg !9984
  br label %if.end25, !dbg !9985

if.end25:                                         ; preds = %if.end24, %if.end17
  br label %do.body26, !dbg !9986

do.body26:                                        ; preds = %if.end25
  br label %do.body27, !dbg !9987

do.body27:                                        ; preds = %do.body26
  %28 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9989
  %head = getelementptr inbounds %struct.opp_table, %struct.opp_table* %28, i32 0, i32 1, !dbg !9989
  %rwsem = getelementptr inbounds %struct.blocking_notifier_head, %struct.blocking_notifier_head* %head, i32 0, i32 0, !dbg !9989
  call void @__init_rwsem(%struct.rw_semaphore* %rwsem, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37, i64 0, i64 0), %struct.lock_class_key* @_allocate_opp_table.__key.36) #8, !dbg !9989
  br label %do.end28, !dbg !9989

do.end28:                                         ; preds = %do.body27
  %29 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9987
  %head29 = getelementptr inbounds %struct.opp_table, %struct.opp_table* %29, i32 0, i32 1, !dbg !9987
  %head30 = getelementptr inbounds %struct.blocking_notifier_head, %struct.blocking_notifier_head* %head29, i32 0, i32 1, !dbg !9987
  store %struct.notifier_block* null, %struct.notifier_block** %head30, align 8, !dbg !9987
  br label %do.end31, !dbg !9987

do.end31:                                         ; preds = %do.end28
  %30 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9991
  %opp_list = getelementptr inbounds %struct.opp_table, %struct.opp_table* %30, i32 0, i32 3, !dbg !9992
  call void @INIT_LIST_HEAD(%struct.list_head* %opp_list) #8, !dbg !9993
  %31 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9994
  %kref = getelementptr inbounds %struct.opp_table, %struct.opp_table* %31, i32 0, i32 4, !dbg !9995
  call void @kref_init(%struct.kref* %kref) #8, !dbg !9996
  %32 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !9997
  %node = getelementptr inbounds %struct.opp_table, %struct.opp_table* %32, i32 0, i32 0, !dbg !9998
  call void @list_add(%struct.list_head* %node, %struct.list_head* @opp_tables) #8, !dbg !9999
  %33 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !10000
  store %struct.opp_table* %33, %struct.opp_table** %retval, align 8, !dbg !10001
  br label %return, !dbg !10001

err:                                              ; preds = %if.then23, %if.then15, %if.then6
  call void @llvm.dbg.label(metadata !10002), !dbg !10003
  %34 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !10004
  %35 = bitcast %struct.opp_table* %34 to i8*, !dbg !10004
  call void @kfree(i8* %35) #8, !dbg !10005
  %36 = load i32, i32* %ret, align 4, !dbg !10006
  %conv32 = sext i32 %36 to i64, !dbg !10006
  %call33 = call i8* @ERR_PTR(i64 %conv32) #8, !dbg !10007
  %37 = bitcast i8* %call33 to %struct.opp_table*, !dbg !10007
  store %struct.opp_table* %37, %struct.opp_table** %retval, align 8, !dbg !10008
  br label %return, !dbg !10008

return:                                           ; preds = %err, %do.end31, %if.then
  %38 = load %struct.opp_table*, %struct.opp_table** %retval, align 8, !dbg !10009
  ret %struct.opp_table* %38, !dbg !10009
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noredzone
declare dso_local void @_of_init_opp_table(%struct.opp_table*, %struct.device*, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_opp_of_find_icc_paths(%struct.device*, %struct.opp_table*) #3

; Function Attrs: noredzone
declare dso_local void @__init_rwsem(%struct.rw_semaphore*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noredzone
declare dso_local zeroext i1 @refcount_dec_and_mutex_lock(%struct.refcount_struct*, %struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !10010 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10011, metadata !DIExpression()), !dbg !10012
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10013
  call void @__list_del_entry(%struct.list_head* %0) #8, !dbg !10014
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10015
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !10016
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !10017
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10018
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !10019
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !10020
  ret void, !dbg !10021
}

; Function Attrs: noredzone
declare dso_local void @_of_clear_opp_table(%struct.opp_table*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @icc_put(%struct.icc_path* %path) #0 !dbg !10022 {
entry:
  %path.addr = alloca %struct.icc_path*, align 8
  store %struct.icc_path* %path, %struct.icc_path** %path.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.icc_path** %path.addr, metadata !10025, metadata !DIExpression()), !dbg !10026
  ret void, !dbg !10027
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_remove_opp_dev(%struct.opp_device* %opp_dev, %struct.opp_table* %opp_table) #0 !dbg !10028 {
entry:
  %opp_dev.addr = alloca %struct.opp_device*, align 8
  %opp_table.addr = alloca %struct.opp_table*, align 8
  store %struct.opp_device* %opp_dev, %struct.opp_device** %opp_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_device** %opp_dev.addr, metadata !10029, metadata !DIExpression()), !dbg !10030
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !10031, metadata !DIExpression()), !dbg !10032
  %0 = load %struct.opp_device*, %struct.opp_device** %opp_dev.addr, align 8, !dbg !10033
  %1 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !10034
  call void @opp_debug_unregister(%struct.opp_device* %0, %struct.opp_table* %1) #8, !dbg !10035
  %2 = load %struct.opp_device*, %struct.opp_device** %opp_dev.addr, align 8, !dbg !10036
  %node = getelementptr inbounds %struct.opp_device, %struct.opp_device* %2, i32 0, i32 0, !dbg !10037
  call void @list_del(%struct.list_head* %node) #8, !dbg !10038
  %3 = load %struct.opp_device*, %struct.opp_device** %opp_dev.addr, align 8, !dbg !10039
  %4 = bitcast %struct.opp_device* %3 to i8*, !dbg !10039
  call void @kfree(i8* %4) #8, !dbg !10040
  ret void, !dbg !10041
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mutex_destroy(%struct.mutex* %lock) #0 !dbg !10042 {
entry:
  %lock.addr = alloca %struct.mutex*, align 8
  store %struct.mutex* %lock, %struct.mutex** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mutex** %lock.addr, metadata !10045, metadata !DIExpression()), !dbg !10046
  ret void, !dbg !10047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !10048 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10049, metadata !DIExpression()), !dbg !10050
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10051
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #8, !dbg !10053
  br i1 %call, label %if.end, label %if.then, !dbg !10054

if.then:                                          ; preds = %entry
  br label %return, !dbg !10055

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10056
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !10057
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !10057
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10058
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !10059
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10059
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #8, !dbg !10060
  br label %return, !dbg !10061

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !10062 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10065, metadata !DIExpression()), !dbg !10066
  ret i1 true, !dbg !10067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10068 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10069, metadata !DIExpression()), !dbg !10070
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10071, metadata !DIExpression()), !dbg !10072
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10073
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10074
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !10075
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !10076
  br label %do.body, !dbg !10077

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !10078

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !10080

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !10078

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10082
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10082
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !10082
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !10082
  br label %do.end5, !dbg !10082

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !10078

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !10084
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @opp_debug_unregister(%struct.opp_device* %opp_dev, %struct.opp_table* %opp_table) #0 !dbg !10085 {
entry:
  %opp_dev.addr = alloca %struct.opp_device*, align 8
  %opp_table.addr = alloca %struct.opp_table*, align 8
  store %struct.opp_device* %opp_dev, %struct.opp_device** %opp_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_device** %opp_dev.addr, metadata !10086, metadata !DIExpression()), !dbg !10087
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !10088, metadata !DIExpression()), !dbg !10089
  ret void, !dbg !10090
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_opp_kref_release(%struct.dev_pm_opp* %opp, %struct.opp_table* %opp_table) #0 !dbg !10091 {
entry:
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  %opp_table.addr = alloca %struct.opp_table*, align 8
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !10092, metadata !DIExpression()), !dbg !10093
  store %struct.opp_table* %opp_table, %struct.opp_table** %opp_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table.addr, metadata !10094, metadata !DIExpression()), !dbg !10095
  %0 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !10096
  %head = getelementptr inbounds %struct.opp_table, %struct.opp_table* %0, i32 0, i32 1, !dbg !10097
  %1 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !10098
  %2 = bitcast %struct.dev_pm_opp* %1 to i8*, !dbg !10098
  %call = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %head, i64 1, i8* %2) #8, !dbg !10099
  %3 = load %struct.opp_table*, %struct.opp_table** %opp_table.addr, align 8, !dbg !10100
  %4 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !10101
  call void @_of_opp_free_required_opps(%struct.opp_table* %3, %struct.dev_pm_opp* %4) #8, !dbg !10102
  %5 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !10103
  call void @opp_debug_remove_one(%struct.dev_pm_opp* %5) #8, !dbg !10104
  %6 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !10105
  %node = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %6, i32 0, i32 0, !dbg !10106
  call void @list_del(%struct.list_head* %node) #8, !dbg !10107
  %7 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp.addr, align 8, !dbg !10108
  %8 = bitcast %struct.dev_pm_opp* %7 to i8*, !dbg !10108
  call void @kfree(i8* %8) #8, !dbg !10109
  ret void, !dbg !10110
}

; Function Attrs: noredzone
declare dso_local void @_of_opp_free_required_opps(%struct.opp_table*, %struct.dev_pm_opp*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @opp_debug_remove_one(%struct.dev_pm_opp* %opp) #0 !dbg !10111 {
entry:
  %opp.addr = alloca %struct.dev_pm_opp*, align 8
  store %struct.dev_pm_opp* %opp, %struct.dev_pm_opp** %opp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp.addr, metadata !10112, metadata !DIExpression()), !dbg !10113
  ret void, !dbg !10114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* %release) #0 !dbg !10115 {
entry:
  %retval = alloca i32, align 4
  %kref.addr = alloca %struct.kref*, align 8
  %release.addr = alloca void (%struct.kref*)*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !10118, metadata !DIExpression()), !dbg !10119
  store void (%struct.kref*)* %release, void (%struct.kref*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.kref*)** %release.addr, metadata !10120, metadata !DIExpression()), !dbg !10121
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !10122
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !10124
  %call = call zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %refcount) #8, !dbg !10125
  br i1 %call, label %if.then, label %if.end, !dbg !10126

if.then:                                          ; preds = %entry
  %1 = load void (%struct.kref*)*, void (%struct.kref*)** %release.addr, align 8, !dbg !10127
  %2 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !10129
  call void %1(%struct.kref* %2) #8, !dbg !10127
  store i32 1, i32* %retval, align 4, !dbg !10130
  br label %return, !dbg !10130

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10131
  br label %return, !dbg !10131

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !10132
  ret i32 %3, !dbg !10132
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_opp_kref_release_unlocked(%struct.kref* %kref) #0 !dbg !10133 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  %opp = alloca %struct.dev_pm_opp*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.dev_pm_opp*, align 8
  %opp_table = alloca %struct.opp_table*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !10134, metadata !DIExpression()), !dbg !10135
  call void @llvm.dbg.declare(metadata %struct.dev_pm_opp** %opp, metadata !10136, metadata !DIExpression()), !dbg !10137
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10138, metadata !DIExpression()), !dbg !10140
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !10140
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !10140
  store i8* %1, i8** %__mptr, align 8, !dbg !10140
  br label %do.body, !dbg !10140

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10141

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10140
  %add.ptr = getelementptr i8, i8* %2, i64 -16, !dbg !10140
  %3 = bitcast i8* %add.ptr to %struct.dev_pm_opp*, !dbg !10140
  store %struct.dev_pm_opp* %3, %struct.dev_pm_opp** %tmp, align 8, !dbg !10141
  %4 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %tmp, align 8, !dbg !10140
  store %struct.dev_pm_opp* %4, %struct.dev_pm_opp** %opp, align 8, !dbg !10137
  call void @llvm.dbg.declare(metadata %struct.opp_table** %opp_table, metadata !10143, metadata !DIExpression()), !dbg !10144
  %5 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !10145
  %opp_table1 = getelementptr inbounds %struct.dev_pm_opp, %struct.dev_pm_opp* %5, i32 0, i32 13, !dbg !10146
  %6 = load %struct.opp_table*, %struct.opp_table** %opp_table1, align 8, !dbg !10146
  store %struct.opp_table* %6, %struct.opp_table** %opp_table, align 8, !dbg !10144
  %7 = load %struct.dev_pm_opp*, %struct.dev_pm_opp** %opp, align 8, !dbg !10147
  %8 = load %struct.opp_table*, %struct.opp_table** %opp_table, align 8, !dbg !10148
  call void @_opp_kref_release(%struct.dev_pm_opp* %7, %struct.opp_table* %8) #8, !dbg !10149
  ret void, !dbg !10150
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %r) #0 !dbg !10151 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !10154, metadata !DIExpression()), !dbg !10155
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !10156
  %call = call zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %0, i32* null) #8, !dbg !10157
  ret i1 %call, !dbg !10158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !10159 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !10162, metadata !DIExpression()), !dbg !10163
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !10164, metadata !DIExpression()), !dbg !10165
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !10166
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !10167
  %call = call zeroext i1 @__refcount_sub_and_test(i32 1, %struct.refcount_struct* %0, i32* %1) #8, !dbg !10168
  ret i1 %call, !dbg !10169
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_sub_and_test(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !10170 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !10173, metadata !DIExpression()), !dbg !10175
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !10179, metadata !DIExpression()), !dbg !10180
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !10181, metadata !DIExpression()), !dbg !10183
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !9834, metadata !DIExpression()), !dbg !10184
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9844, metadata !DIExpression()), !dbg !10186
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !10187, metadata !DIExpression()), !dbg !10188
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10189, metadata !DIExpression()), !dbg !10190
  %retval = alloca i1, align 1
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !10191, metadata !DIExpression()), !dbg !10192
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !10193, metadata !DIExpression()), !dbg !10194
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !10195, metadata !DIExpression()), !dbg !10196
  call void @llvm.dbg.declare(metadata i32* %old, metadata !10197, metadata !DIExpression()), !dbg !10198
  %0 = load i32, i32* %i.addr, align 4, !dbg !10199
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !10200
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !10201
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10202
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !10202
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10203
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !10204
  %conv.i.i = trunc i64 %5 to i32, !dbg !10204
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !10205
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10206
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !10206
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #12, !dbg !10206
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !10207
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10208
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !10183
  %sub.i.i = sub i32 0, %10, !dbg !10183
  store i32 %sub.i.i, i32* %__ret.i.i, align 4, !dbg !10183
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !10183
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10183
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !10183
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #10, !dbg !10183, !srcloc !10209
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !10183
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !10183
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !10183
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !10183
  store i32 %15, i32* %old, align 4, !dbg !10198
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !10210
  %tobool = icmp ne i32* %16, null, !dbg !10210
  br i1 %tobool, label %if.then, label %if.end, !dbg !10212

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !10213
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !10214
  store i32 %17, i32* %18, align 4, !dbg !10215
  br label %if.end, !dbg !10216

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !10217
  %20 = load i32, i32* %i.addr, align 4, !dbg !10219
  %cmp = icmp eq i32 %19, %20, !dbg !10220
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !10221

if.then1:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #10, !dbg !10222, !srcloc !10224
  store i1 true, i1* %retval, align 1, !dbg !10225
  br label %return, !dbg !10225

if.end2:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !10226
  %cmp3 = icmp slt i32 %21, 0, !dbg !10226
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !10226

lor.rhs:                                          ; preds = %if.end2
  %22 = load i32, i32* %old, align 4, !dbg !10226
  %23 = load i32, i32* %i.addr, align 4, !dbg !10226
  %sub = sub i32 %22, %23, !dbg !10226
  %cmp4 = icmp slt i32 %sub, 0, !dbg !10226
  br label %lor.end, !dbg !10226

lor.end:                                          ; preds = %lor.rhs, %if.end2
  %24 = phi i1 [ true, %if.end2 ], [ %cmp4, %lor.rhs ]
  %lnot = xor i1 %24, true, !dbg !10226
  %lnot5 = xor i1 %lnot, true, !dbg !10226
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !10226
  %conv = sext i32 %lnot.ext to i64, !dbg !10226
  %tobool6 = icmp ne i64 %conv, 0, !dbg !10226
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !10228

if.then7:                                         ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !10229
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 3) #8, !dbg !10230
  br label %if.end8, !dbg !10230

if.end8:                                          ; preds = %if.then7, %lor.end
  store i1 false, i1* %retval, align 1, !dbg !10231
  br label %return, !dbg !10231

return:                                           ; preds = %if.end8, %if.then1
  %26 = load i1, i1* %retval, align 1, !dbg !10232
  ret i1 %26, !dbg !10232
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10233 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10236, metadata !DIExpression()), !dbg !10237
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10238, metadata !DIExpression()), !dbg !10239
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10240, metadata !DIExpression()), !dbg !10241
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10242
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10244
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10245
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #8, !dbg !10246
  br i1 %call, label %if.end, label %if.then, !dbg !10247

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !10248

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10249
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10250
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !10251
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !10252
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10253
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10254
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !10255
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !10256
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10257
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10258
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !10259
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !10260
  br label %do.body, !dbg !10261

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !10262

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !10264

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !10262

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10266
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10266
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !10266
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !10266
  br label %do.end7, !dbg !10266

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !10262

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !10268
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10269 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10272, metadata !DIExpression()), !dbg !10273
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10274, metadata !DIExpression()), !dbg !10275
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10276, metadata !DIExpression()), !dbg !10277
  ret i1 true, !dbg !10278
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_set(%struct.refcount_struct* %r, i32 %n) #0 !dbg !10279 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !10282, metadata !DIExpression()), !dbg !10286
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !10290, metadata !DIExpression()), !dbg !10291
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !10292, metadata !DIExpression()), !dbg !10294
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10296, metadata !DIExpression()), !dbg !10297
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10298, metadata !DIExpression()), !dbg !10299
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !10300, metadata !DIExpression()), !dbg !10301
  %r.addr = alloca %struct.refcount_struct*, align 8
  %n.addr = alloca i32, align 4
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !10302, metadata !DIExpression()), !dbg !10303
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !10304, metadata !DIExpression()), !dbg !10305
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !10306
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !10307
  %1 = load i32, i32* %n.addr, align 4, !dbg !10308
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32 %1, i32* %i.addr.i, align 4
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10309
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !10309
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10310
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !10311
  %conv.i.i = trunc i64 %5 to i32, !dbg !10311
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !10312
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10313
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !10313
  call void @kcsan_check_access(i8* %6, i64 %7, i32 5) #12, !dbg !10313
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10314
  %9 = load i32, i32* %i.addr.i, align 4, !dbg !10315
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %9, i32* %i.addr.i.i, align 4
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !10316
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10316
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !10316
  store volatile i32 %10, i32* %counter.i.i, align 4, !dbg !10316
  ret void, !dbg !10318
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @regulator_is_supported_voltage(%struct.regulator* %regulator, i32 %min_uV, i32 %max_uV) #0 !dbg !10319 {
entry:
  %regulator.addr = alloca %struct.regulator*, align 8
  %min_uV.addr = alloca i32, align 4
  %max_uV.addr = alloca i32, align 4
  store %struct.regulator* %regulator, %struct.regulator** %regulator.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.regulator** %regulator.addr, metadata !10320, metadata !DIExpression()), !dbg !10321
  store i32 %min_uV, i32* %min_uV.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min_uV.addr, metadata !10322, metadata !DIExpression()), !dbg !10323
  store i32 %max_uV, i32* %max_uV.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_uV.addr, metadata !10324, metadata !DIExpression()), !dbg !10325
  ret i32 0, !dbg !10326
}

; Function Attrs: noredzone
declare dso_local void @dev_pm_domain_detach(%struct.device*, i1 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !10327 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !10332, metadata !DIExpression()), !dbg !10333
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !10334
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !10335
  %1 = load i8*, i8** %name, align 8, !dbg !10335
  ret i8* %1, !dbg !10336
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone willreturn }
attributes #5 = { nounwind willreturn }
attributes #6 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind willreturn }
attributes #8 = { noredzone }
attributes #9 = { cold noredzone }
attributes #10 = { nounwind }
attributes #11 = { noredzone nounwind readnone }
attributes #12 = { noredzone nounwind }
attributes #13 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4990, !4991, !4992, !4993}
!llvm.ident = !{!4994}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "opp_tables", scope: !2, file: !3, line: 29, type: !170, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !162, globals: !4978, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/opp/core.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !24, !31, !43, !50, !55, !61, !66, !72, !79, !85, !94, !102, !108, !114, !121, !128, !134, !139, !147, !154}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !6, line: 41, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !12, line: 15, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !19, line: 118, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !25, line: 19, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29, !30}
!27 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!30 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !32, line: 49, baseType: !7, size: 32, elements: !33)
!32 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42}
!34 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!35 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!36 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!37 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!38 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!39 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!40 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!41 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!42 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !44, line: 502, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49}
!46 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !19, line: 315, baseType: !7, size: 32, elements: !51)
!51 = !{!52, !53, !54}
!52 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!53 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!54 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !56, line: 546, baseType: !7, size: 32, elements: !57)
!56 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!57 = !{!58, !59, !60}
!58 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!59 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!60 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !62, line: 65, baseType: !7, size: 32, elements: !63)
!62 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!63 = !{!64, !65}
!64 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!65 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !67, line: 16, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !73, line: 59, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!76 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!77 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!78 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !80, line: 54, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84}
!82 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !86, line: 296, baseType: !7, size: 32, elements: !87)
!86 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!87 = !{!88, !89, !90, !91, !92, !93}
!88 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!91 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!92 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!93 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !95, line: 9, baseType: !7, size: 32, elements: !96)
!95 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!96 = !{!97, !98, !99, !100, !101}
!97 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!101 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!102 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !103, line: 26, baseType: !7, size: 32, elements: !104)
!103 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!104 = !{!105, !106, !107}
!105 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!107 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !109, line: 44, baseType: !7, size: 32, elements: !110)
!109 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!110 = !{!111, !112, !113}
!111 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!113 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !115, line: 343, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119, !120}
!117 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!119 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!120 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !44, line: 524, baseType: !7, size: 32, elements: !122)
!122 = !{!123, !124, !125, !126, !127}
!123 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!125 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!126 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!127 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!128 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opp_table_access", file: !129, line: 118, baseType: !7, size: 32, elements: !130)
!129 = !DIFile(filename: "drivers/opp/opp.h", directory: "/home/lizy2001/genbc/linux")
!130 = !{!131, !132, !133}
!131 = !DIEnumerator(name: "OPP_TABLE_ACCESS_UNKNOWN", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "OPP_TABLE_ACCESS_EXCLUSIVE", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "OPP_TABLE_ACCESS_SHARED", value: 2, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !135, line: 10, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!136 = !{!137, !138}
!137 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dev_pm_opp_event", file: !140, line: 24, baseType: !7, size: 32, elements: !141)
!140 = !DIFile(filename: "./include/linux/pm_opp.h", directory: "/home/lizy2001/genbc/linux")
!141 = !{!142, !143, !144, !145, !146}
!142 = !DIEnumerator(name: "OPP_EVENT_ADD", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "OPP_EVENT_REMOVE", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "OPP_EVENT_ENABLE", value: 2, isUnsigned: true)
!145 = !DIEnumerator(name: "OPP_EVENT_DISABLE", value: 3, isUnsigned: true)
!146 = !DIEnumerator(name: "OPP_EVENT_ADJUST_VOLTAGE", value: 4, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !148, line: 305, baseType: !7, size: 32, elements: !149)
!148 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!149 = !{!150, !151, !152, !153}
!150 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!151 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!152 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!153 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !155, line: 119, baseType: !7, size: 32, elements: !156)
!155 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!156 = !{!157, !158, !159, !160, !161}
!157 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!158 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!159 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!160 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!161 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!162 = !{!163, !165, !166, !405, !200, !208, !197, !221, !4967, !1739, !4972, !4974, !4976}
!163 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !164, line: 148, baseType: !7)
!164 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_opp", file: !129, line: 73, size: 768, elements: !168)
!168 = !{!169, !175, !189, !192, !193, !194, !195, !196, !198, !199, !207, !217, !218, !220, !4966}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !167, file: !129, line: 74, baseType: !170, size: 128)
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !164, line: 178, size: 128, elements: !171)
!171 = !{!172, !174}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !170, file: !164, line: 179, baseType: !173, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !170, file: !164, line: 179, baseType: !173, size: 64, offset: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !167, file: !129, line: 75, baseType: !176, size: 32, offset: 128)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !177, line: 19, size: 32, elements: !178)
!177 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!178 = !{!179}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !176, file: !177, line: 20, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !155, line: 113, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !155, line: 111, size: 32, elements: !182)
!182 = !{!183}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !181, file: !155, line: 112, baseType: !184, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !164, line: 168, baseType: !185)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !164, line: 166, size: 32, elements: !186)
!186 = !{!187}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !185, file: !164, line: 167, baseType: !188, size: 32)
!188 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "available", scope: !167, file: !129, line: 77, baseType: !190, size: 8, offset: 160)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !164, line: 30, baseType: !191)
!191 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic", scope: !167, file: !129, line: 78, baseType: !190, size: 8, offset: 168)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "turbo", scope: !167, file: !129, line: 79, baseType: !190, size: 8, offset: 176)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !167, file: !129, line: 80, baseType: !190, size: 8, offset: 184)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "pstate", scope: !167, file: !129, line: 81, baseType: !7, size: 32, offset: 192)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !167, file: !129, line: 82, baseType: !197, size: 64, offset: 256)
!197 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !167, file: !129, line: 83, baseType: !7, size: 32, offset: 320)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "supplies", scope: !167, file: !129, line: 85, baseType: !200, size: 64, offset: 384)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_opp_supply", file: !140, line: 38, size: 256, elements: !202)
!202 = !{!203, !204, !205, !206}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "u_volt", scope: !201, file: !140, line: 39, baseType: !197, size: 64)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "u_volt_min", scope: !201, file: !140, line: 40, baseType: !197, size: 64, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "u_volt_max", scope: !201, file: !140, line: 41, baseType: !197, size: 64, offset: 128)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "u_amp", scope: !201, file: !140, line: 42, baseType: !197, size: 64, offset: 192)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth", scope: !167, file: !129, line: 86, baseType: !208, size: 64, offset: 448)
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !209, size: 64)
!209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_opp_icc_bw", file: !140, line: 52, size: 64, elements: !210)
!210 = !{!211, !216}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "avg", scope: !209, file: !140, line: 53, baseType: !212, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !213, line: 21, baseType: !214)
!213 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !215, line: 27, baseType: !7)
!215 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!216 = !DIDerivedType(tag: DW_TAG_member, name: "peak", scope: !209, file: !140, line: 54, baseType: !212, size: 32, offset: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "clock_latency_ns", scope: !167, file: !129, line: 88, baseType: !197, size: 64, offset: 512)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "required_opps", scope: !167, file: !129, line: 90, baseType: !219, size: 64, offset: 576)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "opp_table", scope: !167, file: !129, line: 91, baseType: !221, size: 64, offset: 640)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opp_table", file: !129, line: 168, size: 2304, elements: !223)
!223 = !{!224, !225, !266, !267, !268, !269, !283, !4915, !4916, !4917, !4918, !4919, !4920, !4921, !4923, !4925, !4926, !4927, !4928, !4929, !4933, !4938, !4939, !4944, !4945, !4946, !4947, !4948, !4965}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !222, file: !129, line: 169, baseType: !170, size: 128)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !222, file: !129, line: 171, baseType: !226, size: 320, offset: 128)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !227, line: 65, size: 320, elements: !228)
!227 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!228 = !{!229, !255}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !226, file: !227, line: 66, baseType: !230, size: 256)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !231, line: 35, size: 256, elements: !232)
!231 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!232 = !{!233, !243, !244, !254}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !230, file: !231, line: 36, baseType: !234, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !235, line: 13, baseType: !236)
!235 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !164, line: 175, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !164, line: 173, size: 64, elements: !238)
!238 = !{!239}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !237, file: !164, line: 174, baseType: !240, size: 64)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !213, line: 22, baseType: !241)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !215, line: 30, baseType: !242)
!242 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !230, file: !231, line: 42, baseType: !234, size: 64, offset: 64)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !230, file: !231, line: 46, baseType: !245, offset: 128)
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !246, line: 29, baseType: !247)
!246 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !246, line: 20, elements: !248)
!248 = !{!249}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !247, file: !246, line: 21, baseType: !250)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !251, line: 25, baseType: !252)
!251 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !251, line: 25, elements: !253)
!253 = !{}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !230, file: !231, line: 47, baseType: !170, size: 128, offset: 128)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !226, file: !227, line: 67, baseType: !256, size: 64, offset: 256)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !227, line: 54, size: 192, elements: !258)
!258 = !{!259, !264, !265}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !257, file: !227, line: 55, baseType: !260, size: 64)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !227, line: 51, baseType: !261)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = !DISubroutineType(types: !263)
!263 = !{!188, !256, !197, !165}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !257, file: !227, line: 56, baseType: !256, size: 64, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !257, file: !227, line: 57, baseType: !188, size: 32, offset: 128)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !222, file: !129, line: 172, baseType: !170, size: 128, offset: 448)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "opp_list", scope: !222, file: !129, line: 173, baseType: !170, size: 128, offset: 576)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !222, file: !129, line: 174, baseType: !176, size: 32, offset: 704)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !222, file: !129, line: 175, baseType: !270, size: 192, offset: 768)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !271, line: 53, size: 192, elements: !272)
!271 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!272 = !{!273, !274, !282}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !270, file: !271, line: 54, baseType: !234, size: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !270, file: !271, line: 55, baseType: !275, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !246, line: 83, baseType: !276)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !246, line: 71, elements: !277)
!277 = !{!278}
!278 = !DIDerivedType(tag: DW_TAG_member, scope: !276, file: !246, line: 72, baseType: !279)
!279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !276, file: !246, line: 72, elements: !280)
!280 = !{!281}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !279, file: !246, line: 73, baseType: !247)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !270, file: !271, line: 59, baseType: !170, size: 128, offset: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "np", scope: !222, file: !129, line: 177, baseType: !284, size: 64, offset: 960)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !286, line: 51, size: 1344, elements: !287)
!286 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!287 = !{!288, !292, !294, !295, !4899, !4908, !4909, !4910, !4911, !4912, !4913, !4914}
!288 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !285, file: !286, line: 52, baseType: !289, size: 64)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !291)
!291 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !285, file: !286, line: 53, baseType: !293, size: 32, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !286, line: 28, baseType: !212)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !285, file: !286, line: 54, baseType: !289, size: 64, offset: 128)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !285, file: !286, line: 55, baseType: !296, size: 192, offset: 192)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !297, line: 17, size: 192, elements: !298)
!297 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!298 = !{!299, !301, !4898}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !296, file: !297, line: 18, baseType: !300, size: 64)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !296, file: !297, line: 19, baseType: !302, size: 64, offset: 64)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !304)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !297, line: 110, size: 1152, elements: !305)
!305 = !{!306, !310, !314, !320, !4840, !4844, !4848, !4853, !4857, !4858, !4862, !4866, !4870, !4881, !4882, !4883, !4884, !4894}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !304, file: !297, line: 111, baseType: !307, size: 64)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!308 = !DISubroutineType(types: !309)
!309 = !{!300, !300}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !304, file: !297, line: 112, baseType: !311, size: 64, offset: 64)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!312 = !DISubroutineType(types: !313)
!313 = !{null, !300}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !304, file: !297, line: 113, baseType: !315, size: 64, offset: 128)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DISubroutineType(types: !317)
!317 = !{!190, !318}
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !296)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !304, file: !297, line: 114, baseType: !321, size: 64, offset: 192)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!322 = !DISubroutineType(types: !323)
!323 = !{!324, !318, !326}
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !328)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !115, line: 461, size: 5568, elements: !329)
!329 = !{!330, !4494, !4495, !4498, !4499, !4549, !4640, !4641, !4642, !4643, !4644, !4653, !4751, !4764, !4767, !4768, !4772, !4774, !4775, !4776, !4780, !4786, !4787, !4790, !4791, !4792, !4793, !4794, !4795, !4796, !4828, !4829, !4830, !4833, !4836, !4837, !4838, !4839}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !328, file: !115, line: 462, baseType: !331, size: 512)
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !332, line: 64, size: 512, elements: !333)
!332 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!333 = !{!334, !335, !336, !338, !383, !4361, !4488, !4489, !4490, !4491, !4492, !4493}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !331, file: !332, line: 65, baseType: !289, size: 64)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !331, file: !332, line: 66, baseType: !170, size: 128, offset: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !331, file: !332, line: 67, baseType: !337, size: 64, offset: 192)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !331, file: !332, line: 68, baseType: !339, size: 64, offset: 256)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !332, line: 192, size: 704, elements: !341)
!341 = !{!342, !343, !344, !345}
!342 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !340, file: !332, line: 193, baseType: !170, size: 128)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !340, file: !332, line: 194, baseType: !275, offset: 128)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !340, file: !332, line: 195, baseType: !331, size: 512, offset: 128)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !340, file: !332, line: 196, baseType: !346, size: 64, offset: 640)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !348)
!348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !332, line: 156, size: 192, elements: !349)
!349 = !{!350, !355, !360}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !348, file: !332, line: 157, baseType: !351, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!353 = !DISubroutineType(types: !354)
!354 = !{!188, !339, !337}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !348, file: !332, line: 158, baseType: !356, size: 64, offset: 64)
!356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !357)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = !DISubroutineType(types: !359)
!359 = !{!289, !339, !337}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !348, file: !332, line: 159, baseType: !361, size: 64, offset: 128)
!361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !362)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!363 = !DISubroutineType(types: !364)
!364 = !{!188, !339, !337, !365}
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !332, line: 148, size: 20736, elements: !367)
!367 = !{!368, !373, !377, !378, !382}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !366, file: !332, line: 149, baseType: !369, size: 192)
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !370, size: 192, elements: !371)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!371 = !{!372}
!372 = !DISubrange(count: 3)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !366, file: !332, line: 150, baseType: !374, size: 4096, offset: 192)
!374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !370, size: 4096, elements: !375)
!375 = !{!376}
!376 = !DISubrange(count: 64)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !366, file: !332, line: 151, baseType: !188, size: 32, offset: 4288)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !366, file: !332, line: 152, baseType: !379, size: 16384, offset: 4320)
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 16384, elements: !380)
!380 = !{!381}
!381 = !DISubrange(count: 2048)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !366, file: !332, line: 153, baseType: !188, size: 32, offset: 20704)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !331, file: !332, line: 69, baseType: !384, size: 64, offset: 320)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !332, line: 138, size: 448, elements: !386)
!386 = !{!387, !391, !420, !422, !4325, !4353, !4357}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !385, file: !332, line: 139, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = !DISubroutineType(types: !390)
!390 = !{null, !337}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !385, file: !332, line: 140, baseType: !392, size: 64, offset: 64)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !394)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !395, line: 230, size: 128, elements: !396)
!395 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!396 = !{!397, !413}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !394, file: !395, line: 231, baseType: !398, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DISubroutineType(types: !400)
!400 = !{!401, !337, !406, !370}
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !164, line: 60, baseType: !402)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !403, line: 73, baseType: !404)
!403 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !403, line: 15, baseType: !405)
!405 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !395, line: 30, size: 128, elements: !408)
!408 = !{!409, !410}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !407, file: !395, line: 31, baseType: !289, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !407, file: !395, line: 32, baseType: !411, size: 16, offset: 64)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !164, line: 19, baseType: !412)
!412 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !394, file: !395, line: 232, baseType: !414, size: 64, offset: 64)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = !DISubroutineType(types: !416)
!416 = !{!401, !337, !406, !289, !417}
!417 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !164, line: 55, baseType: !418)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !403, line: 72, baseType: !419)
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !403, line: 16, baseType: !197)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !385, file: !332, line: 141, baseType: !421, size: 64, offset: 128)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !385, file: !332, line: 142, baseType: !423, size: 64, offset: 192)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !426)
!426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !395, line: 84, size: 320, elements: !427)
!427 = !{!428, !429, !433, !4322, !4323}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !426, file: !395, line: 85, baseType: !289, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !426, file: !395, line: 86, baseType: !430, size: 64, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = !DISubroutineType(types: !432)
!432 = !{!411, !337, !406, !188}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !426, file: !395, line: 88, baseType: !434, size: 64, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DISubroutineType(types: !436)
!436 = !{!411, !337, !437, !188}
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !395, line: 168, size: 448, elements: !439)
!439 = !{!440, !441, !442, !443, !4317, !4318}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !438, file: !395, line: 169, baseType: !407, size: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !438, file: !395, line: 170, baseType: !417, size: 64, offset: 128)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !438, file: !395, line: 171, baseType: !165, size: 64, offset: 192)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !438, file: !395, line: 172, baseType: !444, size: 64, offset: 256)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = !DISubroutineType(types: !446)
!446 = !{!401, !447, !337, !437, !370, !620, !417}
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !86, line: 916, size: 1856, align: 32, elements: !449)
!449 = !{!450, !468, !4282, !4283, !4284, !4285, !4286, !4287, !4288, !4289, !4290, !4291, !4300, !4301, !4310, !4311, !4312, !4313, !4314, !4315, !4316}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !448, file: !86, line: 920, baseType: !451, size: 128)
!451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !448, file: !86, line: 917, size: 128, elements: !452)
!452 = !{!453, !459}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !451, file: !86, line: 918, baseType: !454, size: 64)
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !455, line: 58, size: 64, elements: !456)
!455 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!456 = !{!457}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !454, file: !455, line: 59, baseType: !458, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !451, file: !86, line: 919, baseType: !460, size: 128, align: 64)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !164, line: 216, size: 128, align: 64, elements: !461)
!461 = !{!462, !464}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !460, file: !164, line: 217, baseType: !463, size: 64)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !460, file: !164, line: 218, baseType: !465, size: 64, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DISubroutineType(types: !467)
!467 = !{null, !463}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !448, file: !86, line: 921, baseType: !469, size: 128, offset: 128)
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !470, line: 8, size: 128, elements: !471)
!470 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!471 = !{!472, !476}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !469, file: !470, line: 9, baseType: !473, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!474 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !475, line: 18, flags: DIFlagFwdDecl)
!475 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!476 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !469, file: !470, line: 10, baseType: !477, size: 64, offset: 64)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !475, line: 89, size: 1536, elements: !479)
!479 = !{!480, !481, !491, !499, !500, !519, !4250, !4252, !4264, !4265, !4266, !4267, !4268, !4274, !4275, !4276}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !478, file: !475, line: 91, baseType: !7, size: 32)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !478, file: !475, line: 92, baseType: !482, size: 32, offset: 32)
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !483, line: 277, baseType: !484)
!483 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !483, line: 277, size: 32, elements: !485)
!485 = !{!486}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !484, file: !483, line: 277, baseType: !487, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !483, line: 70, baseType: !488)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !483, line: 65, size: 32, elements: !489)
!489 = !{!490}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !488, file: !483, line: 66, baseType: !7, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !478, file: !475, line: 93, baseType: !492, size: 128, offset: 64)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !493, line: 38, size: 128, elements: !494)
!493 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!494 = !{!495, !497}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !492, file: !493, line: 39, baseType: !496, size: 64)
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !492, file: !493, line: 39, baseType: !498, size: 64, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !478, file: !475, line: 94, baseType: !477, size: 64, offset: 192)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !478, file: !475, line: 95, baseType: !501, size: 128, offset: 256)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !475, line: 47, size: 128, elements: !502)
!502 = !{!503, !515}
!503 = !DIDerivedType(tag: DW_TAG_member, scope: !501, file: !475, line: 48, baseType: !504, size: 64)
!504 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !501, file: !475, line: 48, size: 64, elements: !505)
!505 = !{!506, !511}
!506 = !DIDerivedType(tag: DW_TAG_member, scope: !504, file: !475, line: 49, baseType: !507, size: 64)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !504, file: !475, line: 49, size: 64, elements: !508)
!508 = !{!509, !510}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !507, file: !475, line: 50, baseType: !212, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !507, file: !475, line: 50, baseType: !212, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !504, file: !475, line: 52, baseType: !512, size: 64)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !213, line: 23, baseType: !513)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !215, line: 31, baseType: !514)
!514 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !501, file: !475, line: 54, baseType: !516, size: 64, offset: 64)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !518)
!518 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !478, file: !475, line: 96, baseType: !520, size: 64, offset: 384)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !86, line: 610, size: 4224, elements: !522)
!522 = !{!523, !524, !525, !533, !540, !541, !685, !3963, !3964, !3965, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4226, !4234, !4235, !4236, !4246, !4247, !4248, !4249}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !521, file: !86, line: 611, baseType: !411, size: 16)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !521, file: !86, line: 612, baseType: !412, size: 16, offset: 16)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !521, file: !86, line: 613, baseType: !526, size: 32, offset: 32)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !527, line: 23, baseType: !528)
!527 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !527, line: 21, size: 32, elements: !529)
!529 = !{!530}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !528, file: !527, line: 22, baseType: !531, size: 32)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !164, line: 32, baseType: !532)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !403, line: 49, baseType: !7)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !521, file: !86, line: 614, baseType: !534, size: 32, offset: 64)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !527, line: 28, baseType: !535)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !527, line: 26, size: 32, elements: !536)
!536 = !{!537}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !535, file: !527, line: 27, baseType: !538, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !164, line: 33, baseType: !539)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !403, line: 50, baseType: !7)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !521, file: !86, line: 615, baseType: !7, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !521, file: !86, line: 622, baseType: !542, size: 64, offset: 128)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !544)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !86, line: 1864, size: 1536, align: 512, elements: !545)
!545 = !{!546, !550, !563, !567, !573, !577, !581, !585, !589, !593, !597, !598, !604, !608, !632, !661, !665, !671, !676, !680, !681}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !544, file: !86, line: 1865, baseType: !547, size: 64)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DISubroutineType(types: !549)
!549 = !{!477, !520, !477, !7}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !544, file: !86, line: 1866, baseType: !551, size: 64, offset: 64)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DISubroutineType(types: !553)
!553 = !{!289, !477, !520, !554}
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !556, line: 10, size: 128, elements: !557)
!556 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!557 = !{!558, !562}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !555, file: !556, line: 11, baseType: !559, size: 64)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DISubroutineType(types: !561)
!561 = !{null, !165}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !555, file: !556, line: 12, baseType: !165, size: 64, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !544, file: !86, line: 1867, baseType: !564, size: 64, offset: 128)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DISubroutineType(types: !566)
!566 = !{!188, !520, !188}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !544, file: !86, line: 1868, baseType: !568, size: 64, offset: 192)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = !DISubroutineType(types: !570)
!570 = !{!571, !520, !188}
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !86, line: 581, flags: DIFlagFwdDecl)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !544, file: !86, line: 1870, baseType: !574, size: 64, offset: 256)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!188, !477, !370, !188}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !544, file: !86, line: 1872, baseType: !578, size: 64, offset: 320)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DISubroutineType(types: !580)
!580 = !{!188, !520, !477, !411, !190}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !544, file: !86, line: 1873, baseType: !582, size: 64, offset: 384)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = !DISubroutineType(types: !584)
!584 = !{!188, !477, !520, !477}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !544, file: !86, line: 1874, baseType: !586, size: 64, offset: 448)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = !DISubroutineType(types: !588)
!588 = !{!188, !520, !477}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !544, file: !86, line: 1875, baseType: !590, size: 64, offset: 512)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DISubroutineType(types: !592)
!592 = !{!188, !520, !477, !289}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !544, file: !86, line: 1876, baseType: !594, size: 64, offset: 576)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{!188, !520, !477, !411}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !544, file: !86, line: 1877, baseType: !586, size: 64, offset: 640)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !544, file: !86, line: 1878, baseType: !599, size: 64, offset: 704)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DISubroutineType(types: !601)
!601 = !{!188, !520, !477, !411, !602}
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !164, line: 16, baseType: !603)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !164, line: 13, baseType: !212)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !544, file: !86, line: 1879, baseType: !605, size: 64, offset: 768)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = !DISubroutineType(types: !607)
!607 = !{!188, !520, !477, !520, !477, !7}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !544, file: !86, line: 1881, baseType: !609, size: 64, offset: 832)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DISubroutineType(types: !611)
!611 = !{!188, !477, !612}
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !86, line: 219, size: 640, elements: !614)
!614 = !{!615, !616, !617, !618, !619, !622, !629, !630, !631}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !613, file: !86, line: 220, baseType: !7, size: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !613, file: !86, line: 221, baseType: !411, size: 16, offset: 32)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !613, file: !86, line: 222, baseType: !526, size: 32, offset: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !613, file: !86, line: 223, baseType: !534, size: 32, offset: 96)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !613, file: !86, line: 224, baseType: !620, size: 64, offset: 128)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !164, line: 46, baseType: !621)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !403, line: 88, baseType: !242)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !613, file: !86, line: 225, baseType: !623, size: 128, offset: 192)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !624, line: 13, size: 128, elements: !625)
!624 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!625 = !{!626, !628}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !623, file: !624, line: 14, baseType: !627, size: 64)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !624, line: 8, baseType: !241)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !623, file: !624, line: 15, baseType: !405, size: 64, offset: 64)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !613, file: !86, line: 226, baseType: !623, size: 128, offset: 320)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !613, file: !86, line: 227, baseType: !623, size: 128, offset: 448)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !613, file: !86, line: 234, baseType: !447, size: 64, offset: 576)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !544, file: !86, line: 1882, baseType: !633, size: 64, offset: 896)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DISubroutineType(types: !635)
!635 = !{!188, !636, !638, !212, !7}
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !469)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !640, line: 22, size: 1152, elements: !641)
!640 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!641 = !{!642, !643, !644, !645, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !639, file: !640, line: 23, baseType: !212, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !639, file: !640, line: 24, baseType: !411, size: 16, offset: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !639, file: !640, line: 25, baseType: !7, size: 32, offset: 64)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !639, file: !640, line: 26, baseType: !646, size: 32, offset: 96)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !164, line: 104, baseType: !212)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !639, file: !640, line: 27, baseType: !512, size: 64, offset: 128)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !639, file: !640, line: 28, baseType: !512, size: 64, offset: 192)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !639, file: !640, line: 37, baseType: !512, size: 64, offset: 256)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !639, file: !640, line: 38, baseType: !602, size: 32, offset: 320)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !639, file: !640, line: 39, baseType: !602, size: 32, offset: 352)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !639, file: !640, line: 40, baseType: !526, size: 32, offset: 384)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !639, file: !640, line: 41, baseType: !534, size: 32, offset: 416)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !639, file: !640, line: 42, baseType: !620, size: 64, offset: 448)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !639, file: !640, line: 43, baseType: !623, size: 128, offset: 512)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !639, file: !640, line: 44, baseType: !623, size: 128, offset: 640)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !639, file: !640, line: 45, baseType: !623, size: 128, offset: 768)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !639, file: !640, line: 46, baseType: !623, size: 128, offset: 896)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !639, file: !640, line: 47, baseType: !512, size: 64, offset: 1024)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !639, file: !640, line: 48, baseType: !512, size: 64, offset: 1088)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !544, file: !86, line: 1883, baseType: !662, size: 64, offset: 960)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DISubroutineType(types: !664)
!664 = !{!401, !477, !370, !417}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !544, file: !86, line: 1884, baseType: !666, size: 64, offset: 1024)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{!188, !520, !669, !512, !512}
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !86, line: 50, flags: DIFlagFwdDecl)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !544, file: !86, line: 1886, baseType: !672, size: 64, offset: 1088)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DISubroutineType(types: !674)
!674 = !{!188, !520, !675, !188}
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !544, file: !86, line: 1887, baseType: !677, size: 64, offset: 1152)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DISubroutineType(types: !679)
!679 = !{!188, !520, !477, !447, !7, !411}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !544, file: !86, line: 1890, baseType: !594, size: 64, offset: 1216)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !544, file: !86, line: 1891, baseType: !682, size: 64, offset: 1280)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DISubroutineType(types: !684)
!684 = !{!188, !520, !571, !188}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !521, file: !86, line: 623, baseType: !686, size: 64, offset: 192)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !86, line: 1416, size: 9472, elements: !688)
!688 = !{!689, !690, !691, !692, !693, !694, !744, !3577, !3659, !3742, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3758, !3762, !3763, !3764, !3765, !3768, !3769, !3770, !3811, !3837, !3838, !3839, !3840, !3841, !3842, !3845, !3846, !3853, !3854, !3855, !3856, !3857, !3916, !3917, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !687, file: !86, line: 1417, baseType: !170, size: 128)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !687, file: !86, line: 1418, baseType: !602, size: 32, offset: 128)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !687, file: !86, line: 1419, baseType: !518, size: 8, offset: 160)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !687, file: !86, line: 1420, baseType: !197, size: 64, offset: 192)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !687, file: !86, line: 1421, baseType: !620, size: 64, offset: 256)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !687, file: !86, line: 1422, baseType: !695, size: 64, offset: 320)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !86, line: 2228, size: 576, elements: !697)
!697 = !{!698, !699, !700, !707, !711, !715, !719, !723, !724, !734, !737, !738, !739, !741, !742, !743}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !696, file: !86, line: 2229, baseType: !289, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !696, file: !86, line: 2230, baseType: !188, size: 32, offset: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !696, file: !86, line: 2238, baseType: !701, size: 64, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DISubroutineType(types: !703)
!703 = !{!188, !704}
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !706, line: 28, flags: DIFlagFwdDecl)
!706 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!707 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !696, file: !86, line: 2239, baseType: !708, size: 64, offset: 192)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !710)
!710 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !86, line: 70, flags: DIFlagFwdDecl)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !696, file: !86, line: 2240, baseType: !712, size: 64, offset: 256)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DISubroutineType(types: !714)
!714 = !{!477, !695, !188, !289, !165}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !696, file: !86, line: 2242, baseType: !716, size: 64, offset: 320)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DISubroutineType(types: !718)
!718 = !{null, !686}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !696, file: !86, line: 2243, baseType: !720, size: 64, offset: 384)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !722, line: 76, flags: DIFlagFwdDecl)
!722 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!723 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !696, file: !86, line: 2244, baseType: !695, size: 64, offset: 448)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !696, file: !86, line: 2245, baseType: !725, size: 64, offset: 512)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !164, line: 182, size: 64, elements: !726)
!726 = !{!727}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !725, file: !164, line: 183, baseType: !728, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !164, line: 186, size: 128, elements: !730)
!730 = !{!731, !732}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !729, file: !164, line: 187, baseType: !728, size: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !729, file: !164, line: 187, baseType: !733, size: 64, offset: 64)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !696, file: !86, line: 2247, baseType: !735, offset: 576)
!735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !736, line: 187, elements: !253)
!736 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!737 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !696, file: !86, line: 2248, baseType: !735, offset: 576)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !696, file: !86, line: 2249, baseType: !735, offset: 576)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !696, file: !86, line: 2250, baseType: !740, offset: 576)
!740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !735, elements: !371)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !696, file: !86, line: 2252, baseType: !735, offset: 576)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !696, file: !86, line: 2253, baseType: !735, offset: 576)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !696, file: !86, line: 2254, baseType: !735, offset: 576)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !687, file: !86, line: 1423, baseType: !745, size: 64, offset: 384)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !747)
!747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !86, line: 1935, size: 1472, elements: !748)
!748 = !{!749, !753, !757, !758, !762, !782, !786, !787, !788, !792, !796, !797, !798, !799, !805, !810, !811, !854, !855, !856, !857, !3561, !3576}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !747, file: !86, line: 1936, baseType: !750, size: 64)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DISubroutineType(types: !752)
!752 = !{!520, !686}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !747, file: !86, line: 1937, baseType: !754, size: 64, offset: 64)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DISubroutineType(types: !756)
!756 = !{null, !520}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !747, file: !86, line: 1938, baseType: !754, size: 64, offset: 128)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !747, file: !86, line: 1940, baseType: !759, size: 64, offset: 192)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DISubroutineType(types: !761)
!761 = !{null, !520, !188}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !747, file: !86, line: 1941, baseType: !763, size: 64, offset: 256)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DISubroutineType(types: !765)
!765 = !{!188, !520, !766}
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !6, line: 51, size: 320, elements: !768)
!768 = !{!769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !767, file: !6, line: 52, baseType: !405, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !767, file: !6, line: 54, baseType: !405, size: 64, offset: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !767, file: !6, line: 61, baseType: !620, size: 64, offset: 128)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !767, file: !6, line: 62, baseType: !620, size: 64, offset: 192)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !767, file: !6, line: 64, baseType: !5, size: 32, offset: 256)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !767, file: !6, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !767, file: !6, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !767, file: !6, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !767, file: !6, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !767, file: !6, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !767, file: !6, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !767, file: !6, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !767, file: !6, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !747, file: !86, line: 1942, baseType: !783, size: 64, offset: 320)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DISubroutineType(types: !785)
!785 = !{!188, !520}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !747, file: !86, line: 1943, baseType: !754, size: 64, offset: 384)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !747, file: !86, line: 1944, baseType: !716, size: 64, offset: 448)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !747, file: !86, line: 1945, baseType: !789, size: 64, offset: 512)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = !DISubroutineType(types: !791)
!791 = !{!188, !686, !188}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !747, file: !86, line: 1946, baseType: !793, size: 64, offset: 576)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DISubroutineType(types: !795)
!795 = !{!188, !686}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !747, file: !86, line: 1947, baseType: !793, size: 64, offset: 640)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !747, file: !86, line: 1948, baseType: !793, size: 64, offset: 704)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !747, file: !86, line: 1949, baseType: !793, size: 64, offset: 768)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !747, file: !86, line: 1950, baseType: !800, size: 64, offset: 832)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{!188, !477, !803}
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !86, line: 57, flags: DIFlagFwdDecl)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !747, file: !86, line: 1951, baseType: !806, size: 64, offset: 896)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{!188, !686, !809, !370}
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !188, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !747, file: !86, line: 1952, baseType: !716, size: 64, offset: 960)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !747, file: !86, line: 1954, baseType: !812, size: 64, offset: 1024)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = !DISubroutineType(types: !814)
!814 = !{!188, !815, !477}
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !817, line: 16, size: 896, elements: !818)
!817 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!818 = !{!819, !820, !821, !822, !823, !824, !825, !826, !827, !849, !850, !853}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !816, file: !817, line: 17, baseType: !370, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !816, file: !817, line: 18, baseType: !417, size: 64, offset: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !816, file: !817, line: 19, baseType: !417, size: 64, offset: 128)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !816, file: !817, line: 20, baseType: !417, size: 64, offset: 192)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !816, file: !817, line: 21, baseType: !417, size: 64, offset: 256)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !816, file: !817, line: 22, baseType: !620, size: 64, offset: 320)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !816, file: !817, line: 23, baseType: !620, size: 64, offset: 384)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !816, file: !817, line: 24, baseType: !270, size: 192, offset: 448)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !816, file: !817, line: 25, baseType: !828, size: 64, offset: 640)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !817, line: 31, size: 256, elements: !831)
!831 = !{!832, !837, !841, !845}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !830, file: !817, line: 32, baseType: !833, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DISubroutineType(types: !835)
!835 = !{!165, !815, !836}
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !830, file: !817, line: 33, baseType: !838, size: 64, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DISubroutineType(types: !840)
!840 = !{null, !815, !165}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !830, file: !817, line: 34, baseType: !842, size: 64, offset: 128)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DISubroutineType(types: !844)
!844 = !{!165, !815, !165, !836}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !830, file: !817, line: 35, baseType: !846, size: 64, offset: 192)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DISubroutineType(types: !848)
!848 = !{!188, !815, !165}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !816, file: !817, line: 26, baseType: !188, size: 32, offset: 704)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !816, file: !817, line: 27, baseType: !851, size: 64, offset: 768)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !448)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !816, file: !817, line: 28, baseType: !165, size: 64, offset: 832)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !747, file: !86, line: 1955, baseType: !812, size: 64, offset: 1088)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !747, file: !86, line: 1956, baseType: !812, size: 64, offset: 1152)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !747, file: !86, line: 1957, baseType: !812, size: 64, offset: 1216)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !747, file: !86, line: 1963, baseType: !858, size: 64, offset: 1280)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DISubroutineType(types: !860)
!860 = !{!188, !686, !861, !163}
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !863, line: 68, size: 512, align: 128, elements: !864)
!863 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!864 = !{!865, !866, !3553, !3560}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !862, file: !863, line: 69, baseType: !197, size: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, scope: !862, file: !863, line: 77, baseType: !867, size: 320, offset: 64)
!867 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !862, file: !863, line: 77, size: 320, elements: !868)
!868 = !{!869, !1982, !1987, !2013, !2021, !2027, !3504, !3552}
!869 = !DIDerivedType(tag: DW_TAG_member, scope: !867, file: !863, line: 78, baseType: !870, size: 320)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !867, file: !863, line: 78, size: 320, elements: !871)
!871 = !{!872, !873, !1980, !1981}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !870, file: !863, line: 84, baseType: !170, size: 128)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !870, file: !863, line: 86, baseType: !874, size: 64, offset: 128)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !86, line: 451, size: 1216, align: 64, elements: !876)
!876 = !{!877, !878, !885, !886, !887, !902, !903, !904, !905, !906, !1973, !1974, !1977, !1978, !1979}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !875, file: !86, line: 452, baseType: !520, size: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !875, file: !86, line: 453, baseType: !879, size: 128, offset: 64)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !880, line: 292, size: 128, elements: !881)
!880 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!881 = !{!882, !883, !884}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !879, file: !880, line: 293, baseType: !275)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !879, file: !880, line: 295, baseType: !163, size: 32)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !879, file: !880, line: 296, baseType: !165, size: 64, offset: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !875, file: !86, line: 454, baseType: !163, size: 32, offset: 192)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !875, file: !86, line: 455, baseType: !184, size: 32, offset: 224)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !875, file: !86, line: 460, baseType: !888, size: 128, offset: 256)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !889, line: 125, size: 128, elements: !890)
!889 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!890 = !{!891, !901}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !888, file: !889, line: 126, baseType: !892, size: 64)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !889, line: 31, size: 64, elements: !893)
!893 = !{!894}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !892, file: !889, line: 32, baseType: !895, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !889, line: 24, size: 192, align: 64, elements: !897)
!897 = !{!898, !899, !900}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !896, file: !889, line: 25, baseType: !197, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !896, file: !889, line: 26, baseType: !895, size: 64, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !896, file: !889, line: 27, baseType: !895, size: 64, offset: 128)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !888, file: !889, line: 127, baseType: !895, size: 64, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !875, file: !86, line: 461, baseType: !230, size: 256, offset: 384)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !875, file: !86, line: 462, baseType: !197, size: 64, offset: 640)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !875, file: !86, line: 463, baseType: !197, size: 64, offset: 704)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !875, file: !86, line: 464, baseType: !197, size: 64, offset: 768)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !875, file: !86, line: 465, baseType: !907, size: 64, offset: 832)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !909)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !86, line: 367, size: 1408, elements: !910)
!910 = !{!911, !915, !919, !923, !927, !931, !944, !950, !954, !959, !963, !967, !971, !1016, !1020, !1026, !1027, !1028, !1032, !1037, !1041, !1969}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !909, file: !86, line: 368, baseType: !912, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!188, !861, !766}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !909, file: !86, line: 369, baseType: !916, size: 64, offset: 64)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!188, !447, !861}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !909, file: !86, line: 372, baseType: !920, size: 64, offset: 128)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!188, !874, !766}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !909, file: !86, line: 375, baseType: !924, size: 64, offset: 192)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DISubroutineType(types: !926)
!926 = !{!188, !861}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !909, file: !86, line: 381, baseType: !928, size: 64, offset: 256)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{!188, !447, !874, !173, !7}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !909, file: !86, line: 383, baseType: !932, size: 64, offset: 320)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{null, !935}
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !937, line: 795, size: 256, elements: !938)
!937 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!938 = !{!939, !940, !941, !942, !943}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !936, file: !937, line: 796, baseType: !447, size: 64)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !936, file: !937, line: 797, baseType: !874, size: 64, offset: 64)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !936, file: !937, line: 799, baseType: !197, size: 64, offset: 128)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !936, file: !937, line: 800, baseType: !7, size: 32, offset: 192)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !936, file: !937, line: 801, baseType: !7, size: 32, offset: 224)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !909, file: !86, line: 385, baseType: !945, size: 64, offset: 384)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DISubroutineType(types: !947)
!947 = !{!188, !447, !874, !620, !7, !7, !948, !949}
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !909, file: !86, line: 388, baseType: !951, size: 64, offset: 448)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DISubroutineType(types: !953)
!953 = !{!188, !447, !874, !620, !7, !7, !861, !165}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !909, file: !86, line: 393, baseType: !955, size: 64, offset: 512)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DISubroutineType(types: !957)
!957 = !{!958, !874, !958}
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !164, line: 125, baseType: !512)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !909, file: !86, line: 394, baseType: !960, size: 64, offset: 576)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DISubroutineType(types: !962)
!962 = !{null, !861, !7, !7}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !909, file: !86, line: 395, baseType: !964, size: 64, offset: 640)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = !DISubroutineType(types: !966)
!966 = !{!188, !861, !163}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !909, file: !86, line: 396, baseType: !968, size: 64, offset: 704)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DISubroutineType(types: !970)
!970 = !{null, !861}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !909, file: !86, line: 397, baseType: !972, size: 64, offset: 768)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!973 = !DISubroutineType(types: !974)
!974 = !{!401, !975, !1014}
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !86, line: 320, size: 384, elements: !977)
!977 = !{!978, !979, !980, !984, !985, !986, !989, !990}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !976, file: !86, line: 321, baseType: !447, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !976, file: !86, line: 326, baseType: !620, size: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !976, file: !86, line: 327, baseType: !981, size: 64, offset: 128)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = !DISubroutineType(types: !983)
!983 = !{null, !975, !405, !405}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !976, file: !86, line: 328, baseType: !165, size: 64, offset: 192)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !976, file: !86, line: 329, baseType: !188, size: 32, offset: 256)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !976, file: !86, line: 330, baseType: !987, size: 16, offset: 288)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !213, line: 19, baseType: !988)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !215, line: 24, baseType: !412)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !976, file: !86, line: 331, baseType: !987, size: 16, offset: 304)
!990 = !DIDerivedType(tag: DW_TAG_member, scope: !976, file: !86, line: 332, baseType: !991, size: 64, offset: 320)
!991 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !976, file: !86, line: 332, size: 64, elements: !992)
!992 = !{!993, !994}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !991, file: !86, line: 333, baseType: !7, size: 32)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !991, file: !86, line: 334, baseType: !995, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !937, line: 569, size: 448, elements: !997)
!997 = !{!998, !999, !1000}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !996, file: !937, line: 570, baseType: !861, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !996, file: !937, line: 571, baseType: !188, size: 32, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !996, file: !937, line: 572, baseType: !1001, size: 320, offset: 128)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1002, line: 14, baseType: !1003)
!1002 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1002, line: 29, size: 320, elements: !1004)
!1004 = !{!1005, !1006, !1007, !1013}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1003, file: !1002, line: 30, baseType: !7, size: 32)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1003, file: !1002, line: 31, baseType: !165, size: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1003, file: !1002, line: 32, baseType: !1008, size: 64, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1002, line: 16, baseType: !1009)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!188, !1012, !7, !188, !165}
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1003, file: !1002, line: 33, baseType: !170, size: 128, offset: 192)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !86, line: 64, flags: DIFlagFwdDecl)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !909, file: !86, line: 402, baseType: !1017, size: 64, offset: 832)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!188, !874, !861, !861, !11}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !909, file: !86, line: 404, baseType: !1021, size: 64, offset: 896)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!190, !861, !1024}
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1025, line: 305, baseType: !7)
!1025 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !909, file: !86, line: 405, baseType: !968, size: 64, offset: 960)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !909, file: !86, line: 406, baseType: !924, size: 64, offset: 1024)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !909, file: !86, line: 407, baseType: !1029, size: 64, offset: 1088)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = !DISubroutineType(types: !1031)
!1031 = !{!188, !861, !197, !197}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !909, file: !86, line: 409, baseType: !1033, size: 64, offset: 1152)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{null, !861, !1036, !1036}
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !909, file: !86, line: 410, baseType: !1038, size: 64, offset: 1216)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{!188, !874, !861}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !909, file: !86, line: 413, baseType: !1042, size: 64, offset: 1280)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1043 = !DISubroutineType(types: !1044)
!1044 = !{!188, !1045, !447, !1968}
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !1047, line: 240, size: 1600, elements: !1048)
!1047 = !DIFile(filename: "./include/linux/swap.h", directory: "/home/lizy2001/genbc/linux")
!1048 = !{!1049, !1050, !1052, !1059, !1061, !1062, !1064, !1071, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1084, !1090, !1091, !1960, !1961, !1962, !1963, !1964, !1965, !1966}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1046, file: !1047, line: 241, baseType: !197, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1046, file: !1047, line: 242, baseType: !1051, size: 16, offset: 64)
!1051 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1046, file: !1047, line: 243, baseType: !1053, size: 320, offset: 128)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_node", file: !1054, line: 83, size: 320, elements: !1055)
!1054 = !DIFile(filename: "./include/linux/plist.h", directory: "/home/lizy2001/genbc/linux")
!1055 = !{!1056, !1057, !1058}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1053, file: !1054, line: 84, baseType: !188, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "prio_list", scope: !1053, file: !1054, line: 85, baseType: !170, size: 128, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !1053, file: !1054, line: 86, baseType: !170, size: 128, offset: 192)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1046, file: !1047, line: 244, baseType: !1060, size: 8, offset: 448)
!1060 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1046, file: !1047, line: 245, baseType: !7, size: 32, offset: 480)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "swap_map", scope: !1046, file: !1047, line: 246, baseType: !1063, size: 64, offset: 512)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_info", scope: !1046, file: !1047, line: 247, baseType: !1065, size: 64, offset: 576)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_info", file: !1047, line: 208, size: 32, elements: !1067)
!1067 = !{!1068, !1069, !1070}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1066, file: !1047, line: 209, baseType: !275)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1066, file: !1047, line: 215, baseType: !7, size: 24, flags: DIFlagBitField, extraData: i64 0)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1066, file: !1047, line: 216, baseType: !7, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "free_clusters", scope: !1046, file: !1047, line: 248, baseType: !1072, size: 64, offset: 640)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_list", file: !1047, line: 232, size: 64, elements: !1073)
!1073 = !{!1074, !1075}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1072, file: !1047, line: 233, baseType: !1066, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1072, file: !1047, line: 234, baseType: !1066, size: 32, offset: 32)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_bit", scope: !1046, file: !1047, line: 249, baseType: !7, size: 32, offset: 704)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "highest_bit", scope: !1046, file: !1047, line: 250, baseType: !7, size: 32, offset: 736)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1046, file: !1047, line: 251, baseType: !7, size: 32, offset: 768)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_pages", scope: !1046, file: !1047, line: 252, baseType: !7, size: 32, offset: 800)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next", scope: !1046, file: !1047, line: 253, baseType: !7, size: 32, offset: 832)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_nr", scope: !1046, file: !1047, line: 254, baseType: !7, size: 32, offset: 864)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next_cpu", scope: !1046, file: !1047, line: 255, baseType: !1083, size: 64, offset: 896)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_cluster", scope: !1046, file: !1047, line: 256, baseType: !1085, size: 64, offset: 960)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_cluster", file: !1047, line: 227, size: 64, elements: !1087)
!1087 = !{!1088, !1089}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1086, file: !1047, line: 228, baseType: !1066, size: 32)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1086, file: !1047, line: 229, baseType: !7, size: 32, offset: 32)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "swap_extent_root", scope: !1046, file: !1047, line: 257, baseType: !892, size: 64, offset: 1024)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "bdev", scope: !1046, file: !1047, line: 258, baseType: !1092, size: 64, offset: 1088)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1094, line: 22, size: 1344, elements: !1095)
!1094 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!1095 = !{!1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1110, !1175, !1176, !1177, !1957, !1958, !1959}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !1093, file: !1094, line: 23, baseType: !602, size: 32)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !1093, file: !1094, line: 24, baseType: !188, size: 32, offset: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !1093, file: !1094, line: 25, baseType: !520, size: 64, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !1093, file: !1094, line: 26, baseType: !686, size: 64, offset: 128)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !1093, file: !1094, line: 27, baseType: !270, size: 192, offset: 192)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !1093, file: !1094, line: 28, baseType: !165, size: 64, offset: 384)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !1093, file: !1094, line: 29, baseType: !165, size: 64, offset: 448)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !1093, file: !1094, line: 30, baseType: !188, size: 32, offset: 512)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !1093, file: !1094, line: 31, baseType: !190, size: 8, offset: 544)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !1093, file: !1094, line: 33, baseType: !170, size: 128, offset: 576)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !1093, file: !1094, line: 35, baseType: !1092, size: 64, offset: 704)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !1093, file: !1094, line: 36, baseType: !1108, size: 8, offset: 768)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !213, line: 17, baseType: !1109)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !215, line: 21, baseType: !518)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !1093, file: !1094, line: 37, baseType: !1111, size: 64, offset: 832)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !1113, line: 53, size: 6592, elements: !1114)
!1113 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!1114 = !{!1115, !1116, !1117, !1118, !1121, !1142, !1143, !1144, !1145, !1146, !1156}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !1112, file: !1113, line: 54, baseType: !958, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !1112, file: !1113, line: 60, baseType: !958, size: 64, offset: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1112, file: !1113, line: 64, baseType: !197, size: 64, offset: 128)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !1112, file: !1113, line: 65, baseType: !1119, size: 64, offset: 192)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !1113, line: 65, flags: DIFlagFwdDecl)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1112, file: !1113, line: 66, baseType: !1122, size: 128, offset: 256)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !1123, line: 105, size: 128, elements: !1124)
!1123 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!1124 = !{!1125, !1126}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !1122, file: !1123, line: 110, baseType: !197, size: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1122, file: !1123, line: 118, baseType: !1127, size: 64, offset: 64)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !1123, line: 95, size: 448, elements: !1129)
!1129 = !{!1130, !1131, !1137, !1138, !1139, !1140, !1141}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1128, file: !1123, line: 96, baseType: !234, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1128, file: !1123, line: 97, baseType: !1132, size: 64, offset: 64)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !1123, line: 60, baseType: !1134)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{null, !1136}
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !1128, file: !1123, line: 98, baseType: !1132, size: 64, offset: 128)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !1128, file: !1123, line: 99, baseType: !190, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !1128, file: !1123, line: 100, baseType: !190, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1128, file: !1123, line: 101, baseType: !460, size: 128, align: 64, offset: 256)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1128, file: !1123, line: 102, baseType: !1136, size: 64, offset: 384)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !1112, file: !1113, line: 68, baseType: !328, size: 5568, offset: 384)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !1112, file: !1113, line: 69, baseType: !337, size: 64, offset: 5952)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1112, file: !1113, line: 70, baseType: !188, size: 32, offset: 6016)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !1112, file: !1113, line: 70, baseType: !188, size: 32, offset: 6048)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1112, file: !1113, line: 71, baseType: !1147, size: 64, offset: 6080)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !1113, line: 48, size: 808, elements: !1149)
!1149 = !{!1150, !1154}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !1148, file: !1113, line: 49, baseType: !1151, size: 296)
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 296, elements: !1152)
!1152 = !{!1153}
!1153 = !DISubrange(count: 37)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !1148, file: !1113, line: 50, baseType: !1155, size: 512, offset: 296)
!1155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1108, size: 512, elements: !375)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !1112, file: !1113, line: 75, baseType: !1157, size: 448, offset: 6144)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1158, line: 124, size: 448, elements: !1159)
!1158 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1159 = !{!1160, !1171, !1172}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1157, file: !1158, line: 125, baseType: !1161, size: 256)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1158, line: 102, size: 256, elements: !1162)
!1162 = !{!1163, !1164, !1165}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1161, file: !1158, line: 103, baseType: !234, size: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1161, file: !1158, line: 104, baseType: !170, size: 128, offset: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1161, file: !1158, line: 105, baseType: !1166, size: 64, offset: 192)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1158, line: 21, baseType: !1167)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{null, !1170}
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1157, file: !1158, line: 126, baseType: !460, size: 128, align: 64, offset: 256)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !1157, file: !1158, line: 129, baseType: !1173, size: 64, offset: 384)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1158, line: 18, flags: DIFlagFwdDecl)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !1093, file: !1094, line: 39, baseType: !7, size: 32, offset: 896)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !1093, file: !1094, line: 41, baseType: !275, offset: 928)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !1093, file: !1094, line: 42, baseType: !1178, size: 64, offset: 960)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !1113, line: 167, size: 8512, elements: !1180)
!1180 = !{!1181, !1182, !1183, !1184, !1188, !1189, !1190, !1201, !1202, !1392, !1938, !1939, !1940, !1941, !1942, !1943, !1946, !1947, !1950, !1951, !1952, !1955}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !1179, file: !1113, line: 171, baseType: !188, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !1179, file: !1113, line: 172, baseType: !188, size: 32, offset: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !1179, file: !1113, line: 173, baseType: !188, size: 32, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !1179, file: !1113, line: 176, baseType: !1185, size: 256, offset: 96)
!1185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 256, elements: !1186)
!1186 = !{!1187}
!1187 = !DISubrange(count: 32)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1179, file: !1113, line: 178, baseType: !412, size: 16, offset: 352)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1179, file: !1113, line: 179, baseType: !412, size: 16, offset: 368)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !1179, file: !1113, line: 186, baseType: !1191, size: 64, offset: 384)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !1113, line: 149, size: 256, elements: !1193)
!1193 = !{!1194, !1195, !1196, !1197}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1192, file: !1113, line: 150, baseType: !460, size: 128, align: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1192, file: !1113, line: 151, baseType: !188, size: 32, offset: 128)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !1192, file: !1113, line: 152, baseType: !1111, size: 64, offset: 192)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !1192, file: !1113, line: 153, baseType: !1198, offset: 256)
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1111, elements: !1199)
!1199 = !{!1200}
!1200 = !DISubrange(count: -1)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !1179, file: !1113, line: 187, baseType: !1112, size: 6592, offset: 448)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !1179, file: !1113, line: 189, baseType: !1203, size: 64, offset: 7040)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1205)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !19, line: 1844, size: 960, elements: !1206)
!1206 = !{!1207, !1314, !1319, !1323, !1327, !1331, !1332, !1336, !1340, !1344, !1350, !1354, !1382, !1387, !1388}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !1205, file: !19, line: 1845, baseType: !1208, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!1211, !1212}
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !1094, line: 515, baseType: !7)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !1094, line: 203, size: 832, elements: !1214)
!1214 = !{!1215, !1216, !1217, !1218, !1219, !1220, !1221, !1223, !1224, !1225, !1233, !1238, !1239, !1264, !1265, !1266, !1267, !1268, !1313}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !1213, file: !1094, line: 204, baseType: !1212, size: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !1213, file: !1094, line: 205, baseType: !1178, size: 64, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !1213, file: !1094, line: 206, baseType: !7, size: 32, offset: 128)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !1213, file: !1094, line: 210, baseType: !412, size: 16, offset: 160)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !1213, file: !1094, line: 211, baseType: !412, size: 16, offset: 176)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !1213, file: !1094, line: 212, baseType: !412, size: 16, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !1213, file: !1094, line: 213, baseType: !1222, size: 8, offset: 208)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !1094, line: 58, baseType: !1108)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !1213, file: !1094, line: 214, baseType: !1108, size: 8, offset: 216)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !1213, file: !1094, line: 215, baseType: !184, size: 32, offset: 224)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !1213, file: !1094, line: 217, baseType: !1226, size: 192, offset: 256)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !1227, line: 37, size: 192, elements: !1228)
!1227 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1228 = !{!1229, !1230, !1231, !1232}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !1226, file: !1227, line: 38, baseType: !958, size: 64)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !1226, file: !1227, line: 40, baseType: !7, size: 32, offset: 64)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !1226, file: !1227, line: 42, baseType: !7, size: 32, offset: 96)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !1226, file: !1227, line: 44, baseType: !7, size: 32, offset: 128)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !1213, file: !1094, line: 219, baseType: !1234, size: 64, offset: 448)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !1094, line: 19, baseType: !1236)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{null, !1212}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !1213, file: !1094, line: 221, baseType: !165, size: 64, offset: 512)
!1239 = !DIDerivedType(tag: DW_TAG_member, scope: !1213, file: !1094, line: 240, baseType: !1240, size: 64, offset: 576)
!1240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1213, file: !1094, line: 240, size: 64, elements: !1241)
!1241 = !{!1242}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !1240, file: !1094, line: 242, baseType: !1243, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !1245, line: 313, size: 832, elements: !1246)
!1245 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!1246 = !{!1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1262}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !1244, file: !1245, line: 314, baseType: !1212, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !1244, file: !1245, line: 316, baseType: !1226, size: 192, offset: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !1244, file: !1245, line: 318, baseType: !412, size: 16, offset: 256)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !1244, file: !1245, line: 319, baseType: !412, size: 16, offset: 272)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !1244, file: !1245, line: 320, baseType: !412, size: 16, offset: 288)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !1244, file: !1245, line: 321, baseType: !412, size: 16, offset: 304)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !1244, file: !1245, line: 323, baseType: !1226, size: 192, offset: 320)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !1244, file: !1245, line: 325, baseType: !1161, size: 256, offset: 512)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !1244, file: !1245, line: 327, baseType: !1256, size: 64, offset: 768)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1227, line: 31, size: 128, elements: !1258)
!1258 = !{!1259, !1260, !1261}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1257, file: !1227, line: 32, baseType: !861, size: 64)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1257, file: !1227, line: 33, baseType: !7, size: 32, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1257, file: !1227, line: 34, baseType: !7, size: 32, offset: 96)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !1244, file: !1245, line: 328, baseType: !1263, offset: 832)
!1263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1257, elements: !1199)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !1213, file: !1094, line: 246, baseType: !412, size: 16, offset: 640)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !1213, file: !1094, line: 252, baseType: !412, size: 16, offset: 656)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !1213, file: !1094, line: 254, baseType: !184, size: 32, offset: 672)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !1213, file: !1094, line: 256, baseType: !1256, size: 64, offset: 704)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !1213, file: !1094, line: 258, baseType: !1269, size: 64, offset: 768)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !1245, line: 682, size: 2368, elements: !1271)
!1271 = !{!1272, !1275, !1276, !1302, !1303, !1304, !1305, !1306, !1311, !1312}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !1270, file: !1245, line: 683, baseType: !1273, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !863, line: 117, flags: DIFlagFwdDecl)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !1270, file: !1245, line: 684, baseType: !7, size: 32, offset: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !1270, file: !1245, line: 686, baseType: !1277, size: 448, offset: 128)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !1278, line: 26, baseType: !1279)
!1278 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !1278, line: 16, size: 448, elements: !1280)
!1280 = !{!1281, !1282, !1283, !1284, !1285, !1286, !1291, !1296}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1279, file: !1278, line: 17, baseType: !275)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !1279, file: !1278, line: 18, baseType: !188, size: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !1279, file: !1278, line: 19, baseType: !188, size: 32, offset: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1279, file: !1278, line: 20, baseType: !949, size: 64, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !1279, file: !1278, line: 22, baseType: !165, size: 64, offset: 128)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1279, file: !1278, line: 23, baseType: !1287, size: 64, offset: 192)
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1288, size: 64)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !1278, line: 13, baseType: !1289)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!165, !163, !165}
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1279, file: !1278, line: 24, baseType: !1292, size: 64, offset: 256)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !1278, line: 14, baseType: !1294)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{null, !165, !165}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1279, file: !1278, line: 25, baseType: !1297, size: 128, offset: 320)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1002, line: 40, baseType: !1298)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1002, line: 36, size: 128, elements: !1299)
!1299 = !{!1300, !1301}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1298, file: !1002, line: 37, baseType: !275)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1298, file: !1002, line: 38, baseType: !170, size: 128)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !1270, file: !1245, line: 687, baseType: !1277, size: 448, offset: 576)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !1270, file: !1245, line: 689, baseType: !1277, size: 448, offset: 1024)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !1270, file: !1245, line: 690, baseType: !1277, size: 448, offset: 1472)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !1270, file: !1245, line: 697, baseType: !275, offset: 1920)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !1270, file: !1245, line: 698, baseType: !1307, size: 128, offset: 1920)
!1307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1245, line: 554, size: 128, elements: !1308)
!1308 = !{!1309, !1310}
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1307, file: !1245, line: 555, baseType: !1212, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1307, file: !1245, line: 556, baseType: !1212, size: 64, offset: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !1270, file: !1245, line: 699, baseType: !1161, size: 256, offset: 2048)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !1270, file: !1245, line: 700, baseType: !1173, size: 64, offset: 2304)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !1213, file: !1094, line: 265, baseType: !1263, offset: 832)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1205, file: !19, line: 1846, baseType: !1315, size: 64, offset: 64)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{!188, !1092, !1318}
!1318 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !164, line: 150, baseType: !7)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1205, file: !19, line: 1847, baseType: !1320, size: 64, offset: 128)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1321, size: 64)
!1321 = !DISubroutineType(types: !1322)
!1322 = !{null, !1178, !1318}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !1205, file: !19, line: 1848, baseType: !1324, size: 64, offset: 192)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!188, !1092, !958, !861, !7}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !1205, file: !19, line: 1849, baseType: !1328, size: 64, offset: 256)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!188, !1092, !1318, !7, !197}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1205, file: !19, line: 1850, baseType: !1328, size: 64, offset: 320)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !1205, file: !19, line: 1851, baseType: !1333, size: 64, offset: 384)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{!7, !1178, !7}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !1205, file: !19, line: 1853, baseType: !1337, size: 64, offset: 448)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{null, !1178}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !1205, file: !19, line: 1854, baseType: !1341, size: 64, offset: 512)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!188, !1178}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !1205, file: !19, line: 1855, baseType: !1345, size: 64, offset: 576)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DISubroutineType(types: !1347)
!1347 = !{!188, !1092, !1348}
!1348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!1349 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !86, line: 51, flags: DIFlagFwdDecl)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !1205, file: !19, line: 1857, baseType: !1351, size: 64, offset: 640)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{null, !1092, !197}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !1205, file: !19, line: 1858, baseType: !1355, size: 64, offset: 704)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{!188, !1178, !958, !7, !1358, !165}
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !19, line: 354, baseType: !1359)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{!188, !1362, !7, !165}
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !1364, line: 106, size: 512, elements: !1365)
!1364 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!1365 = !{!1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1377, !1378}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1363, file: !1364, line: 107, baseType: !513, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1363, file: !1364, line: 108, baseType: !513, size: 64, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !1363, file: !1364, line: 109, baseType: !513, size: 64, offset: 128)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1363, file: !1364, line: 110, baseType: !1109, size: 8, offset: 192)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1363, file: !1364, line: 111, baseType: !1109, size: 8, offset: 200)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !1363, file: !1364, line: 112, baseType: !1109, size: 8, offset: 208)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !1363, file: !1364, line: 113, baseType: !1109, size: 8, offset: 216)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !1363, file: !1364, line: 114, baseType: !1374, size: 32, offset: 224)
!1374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1109, size: 32, elements: !1375)
!1375 = !{!1376}
!1376 = !DISubrange(count: 4)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1363, file: !1364, line: 115, baseType: !513, size: 64, offset: 256)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1363, file: !1364, line: 116, baseType: !1379, size: 192, offset: 320)
!1379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1109, size: 192, elements: !1380)
!1380 = !{!1381}
!1381 = !DISubrange(count: 24)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !1205, file: !19, line: 1860, baseType: !1383, size: 64, offset: 768)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64)
!1384 = !DISubroutineType(types: !1385)
!1385 = !{!370, !1178, !1386}
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1205, file: !19, line: 1861, baseType: !720, size: 64, offset: 832)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !1205, file: !19, line: 1862, baseType: !1389, size: 64, offset: 896)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1391)
!1391 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !19, line: 41, flags: DIFlagFwdDecl)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1179, file: !1113, line: 190, baseType: !1393, size: 64, offset: 7104)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !19, line: 399, size: 14464, elements: !1395)
!1395 = !{!1396, !1527, !1649, !1650, !1653, !1656, !1660, !1661, !1662, !1664, !1665, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1799, !1810, !1811, !1812, !1813, !1814, !1844, !1845, !1846, !1847, !1848, !1849, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1923, !1924, !1925, !1926, !1929, !1930, !1931, !1932, !1933, !1934}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !1394, file: !19, line: 400, baseType: !1397, size: 64)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !19, line: 130, size: 2176, elements: !1399)
!1399 = !{!1400, !1401, !1404, !1407, !1408, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1422, !1429, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1525, !1526}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1398, file: !19, line: 131, baseType: !1393, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !1398, file: !19, line: 132, baseType: !1402, size: 64, offset: 64)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !19, line: 132, flags: DIFlagFwdDecl)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !1398, file: !19, line: 133, baseType: !1405, size: 64, offset: 128)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !19, line: 133, flags: DIFlagFwdDecl)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !1398, file: !19, line: 135, baseType: !7, size: 32, offset: 192)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !1398, file: !19, line: 136, baseType: !1409, size: 32, offset: 224)
!1409 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !19, line: 66, baseType: !214)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1398, file: !19, line: 138, baseType: !188, size: 32, offset: 256)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !1398, file: !19, line: 139, baseType: !188, size: 32, offset: 288)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !1398, file: !19, line: 142, baseType: !7, size: 32, offset: 320)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !1398, file: !19, line: 143, baseType: !958, size: 64, offset: 384)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !1398, file: !19, line: 145, baseType: !1212, size: 64, offset: 448)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !1398, file: !19, line: 146, baseType: !1212, size: 64, offset: 512)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !1398, file: !19, line: 148, baseType: !170, size: 128, offset: 576)
!1417 = !DIDerivedType(tag: DW_TAG_member, scope: !1398, file: !19, line: 157, baseType: !1418, size: 128, offset: 704)
!1418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1398, file: !19, line: 157, size: 128, elements: !1419)
!1419 = !{!1420, !1421}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1418, file: !19, line: 158, baseType: !729, size: 128)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !1418, file: !19, line: 159, baseType: !170, size: 128)
!1422 = !DIDerivedType(tag: DW_TAG_member, scope: !1398, file: !19, line: 167, baseType: !1423, size: 192, offset: 832)
!1423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1398, file: !19, line: 167, size: 192, elements: !1424)
!1424 = !{!1425, !1426, !1427, !1428}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1423, file: !19, line: 168, baseType: !896, size: 192, align: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !1423, file: !19, line: 169, baseType: !1257, size: 128)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !1423, file: !19, line: 170, baseType: !165, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !1423, file: !19, line: 171, baseType: !188, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, scope: !1398, file: !19, line: 180, baseType: !1430, size: 256, offset: 1024)
!1430 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1398, file: !19, line: 180, size: 256, elements: !1431)
!1431 = !{!1432, !1469}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !1430, file: !19, line: 184, baseType: !1433, size: 192)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1430, file: !19, line: 181, size: 192, elements: !1434)
!1434 = !{!1435, !1465}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !1433, file: !19, line: 182, baseType: !1436, size: 64)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1438, line: 73, size: 448, elements: !1439)
!1438 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1439 = !{!1440, !1441, !1454, !1459, !1464}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1437, file: !1438, line: 74, baseType: !1393, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1437, file: !1438, line: 75, baseType: !1442, size: 64, offset: 64)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1438, line: 99, size: 704, elements: !1444)
!1444 = !{!1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1443, file: !1438, line: 100, baseType: !234, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1443, file: !1438, line: 101, baseType: !184, size: 32, offset: 64)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1443, file: !1438, line: 102, baseType: !184, size: 32, offset: 96)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1443, file: !1438, line: 105, baseType: !275, offset: 128)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1443, file: !1438, line: 107, baseType: !412, size: 16, offset: 128)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1443, file: !1438, line: 109, baseType: !879, size: 128, offset: 192)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1443, file: !1438, line: 110, baseType: !1436, size: 64, offset: 320)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1443, file: !1438, line: 111, baseType: !725, size: 64, offset: 384)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1443, file: !1438, line: 113, baseType: !1161, size: 256, offset: 448)
!1454 = !DIDerivedType(tag: DW_TAG_member, scope: !1437, file: !1438, line: 83, baseType: !1455, size: 128, offset: 128)
!1455 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1437, file: !1438, line: 83, size: 128, elements: !1456)
!1456 = !{!1457, !1458}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1455, file: !1438, line: 84, baseType: !170, size: 128)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1455, file: !1438, line: 85, baseType: !1273, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, scope: !1437, file: !1438, line: 87, baseType: !1460, size: 128, offset: 256)
!1460 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1437, file: !1438, line: 87, size: 128, elements: !1461)
!1461 = !{!1462, !1463}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1460, file: !1438, line: 88, baseType: !729, size: 128)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1460, file: !1438, line: 89, baseType: !460, size: 128, align: 64)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1437, file: !1438, line: 92, baseType: !7, size: 32, offset: 384)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1433, file: !19, line: 183, baseType: !1466, size: 128, offset: 64)
!1466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 128, elements: !1467)
!1467 = !{!1468}
!1468 = !DISubrange(count: 2)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1430, file: !19, line: 190, baseType: !1470, size: 256)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1430, file: !19, line: 186, size: 256, elements: !1471)
!1471 = !{!1472, !1473, !1474}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1470, file: !19, line: 187, baseType: !7, size: 32)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1470, file: !19, line: 188, baseType: !170, size: 128, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !1470, file: !19, line: 189, baseType: !1475, size: 64, offset: 192)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !19, line: 62, baseType: !1477)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{null, !1397, !1222}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !1398, file: !19, line: 193, baseType: !1178, size: 64, offset: 1280)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !1398, file: !19, line: 194, baseType: !1111, size: 64, offset: 1344)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !1398, file: !19, line: 200, baseType: !512, size: 64, offset: 1408)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !1398, file: !19, line: 202, baseType: !512, size: 64, offset: 1472)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !1398, file: !19, line: 212, baseType: !412, size: 16, offset: 1536)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !1398, file: !19, line: 218, baseType: !412, size: 16, offset: 1552)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !1398, file: !19, line: 221, baseType: !412, size: 16, offset: 1568)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !1398, file: !19, line: 229, baseType: !412, size: 16, offset: 1584)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1398, file: !19, line: 230, baseType: !412, size: 16, offset: 1600)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1398, file: !19, line: 232, baseType: !18, size: 32, offset: 1632)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1398, file: !19, line: 233, baseType: !180, size: 32, offset: 1664)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1398, file: !19, line: 235, baseType: !7, size: 32, offset: 1696)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1398, file: !19, line: 236, baseType: !197, size: 64, offset: 1728)
!1492 = !DIDerivedType(tag: DW_TAG_member, scope: !1398, file: !19, line: 238, baseType: !1493, size: 256, offset: 1792)
!1493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1398, file: !19, line: 238, size: 256, elements: !1494)
!1494 = !{!1495, !1524}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !1493, file: !19, line: 239, baseType: !1496, size: 256)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !1497, line: 23, size: 256, elements: !1498)
!1497 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!1498 = !{!1499, !1521, !1523}
!1499 = !DIDerivedType(tag: DW_TAG_member, scope: !1496, file: !1497, line: 24, baseType: !1500, size: 128)
!1500 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1496, file: !1497, line: 24, size: 128, elements: !1501)
!1501 = !{!1502, !1514}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1500, file: !1497, line: 25, baseType: !1503, size: 128)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !1504, line: 58, size: 128, elements: !1505)
!1504 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!1505 = !{!1506, !1507, !1512, !1513}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !1503, file: !1504, line: 59, baseType: !454, size: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, scope: !1503, file: !1504, line: 60, baseType: !1508, size: 32, offset: 64)
!1508 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1503, file: !1504, line: 60, size: 32, elements: !1509)
!1509 = !{!1510, !1511}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !1508, file: !1504, line: 61, baseType: !7, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !1508, file: !1504, line: 62, baseType: !184, size: 32)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1503, file: !1504, line: 65, baseType: !987, size: 16, offset: 96)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !1503, file: !1504, line: 65, baseType: !987, size: 16, offset: 112)
!1514 = !DIDerivedType(tag: DW_TAG_member, scope: !1500, file: !1497, line: 26, baseType: !1515, size: 128)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1500, file: !1497, line: 26, size: 128, elements: !1516)
!1516 = !{!1517, !1518, !1519, !1520}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !1515, file: !1497, line: 27, baseType: !454, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1515, file: !1497, line: 28, baseType: !7, size: 32, offset: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1515, file: !1497, line: 30, baseType: !987, size: 16, offset: 96)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !1515, file: !1497, line: 30, baseType: !987, size: 16, offset: 112)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1496, file: !1497, line: 34, baseType: !1522, size: 64, offset: 128)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !1497, line: 17, baseType: !559)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1496, file: !1497, line: 35, baseType: !165, size: 64, offset: 192)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !1493, file: !19, line: 240, baseType: !512, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !1398, file: !19, line: 246, baseType: !1475, size: 64, offset: 2048)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !1398, file: !19, line: 247, baseType: !165, size: 64, offset: 2112)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !1394, file: !19, line: 401, baseType: !1528, size: 64, offset: 64)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !25, line: 101, size: 4992, elements: !1530)
!1530 = !{!1531, !1643, !1644, !1645, !1646, !1647}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1529, file: !25, line: 103, baseType: !1532, size: 64)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !25, line: 66, size: 2240, elements: !1534)
!1534 = !{!1535, !1536, !1618, !1619, !1620, !1633, !1634, !1635, !1637, !1638, !1642}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !1533, file: !25, line: 69, baseType: !1273, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1533, file: !25, line: 72, baseType: !1537, size: 1408, offset: 64)
!1537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !25, line: 29, size: 1408, elements: !1538)
!1538 = !{!1539, !1543, !1547, !1551, !1555, !1559, !1563, !1567, !1572, !1576, !1580, !1586, !1590, !1591, !1595, !1599, !1603, !1607, !1608, !1612, !1613, !1617}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !1537, file: !25, line: 30, baseType: !1540, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!188, !1393, !1532}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !1537, file: !25, line: 31, baseType: !1544, size: 64, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{null, !1528}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !1537, file: !25, line: 32, baseType: !1548, size: 64, offset: 128)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = !DISubroutineType(types: !1550)
!1550 = !{!188, !1405, !7}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !1537, file: !25, line: 33, baseType: !1552, size: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = !DISubroutineType(types: !1554)
!1554 = !{null, !1405, !7}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !1537, file: !25, line: 34, baseType: !1556, size: 64, offset: 256)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 64)
!1557 = !DISubroutineType(types: !1558)
!1558 = !{null, !1405}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !1537, file: !25, line: 36, baseType: !1560, size: 64, offset: 320)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!190, !1393, !1397, !1212}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !1537, file: !25, line: 37, baseType: !1564, size: 64, offset: 384)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!190, !1405, !1212, !7}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !1537, file: !25, line: 38, baseType: !1568, size: 64, offset: 448)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64)
!1569 = !DISubroutineType(types: !1570)
!1570 = !{!188, !1393, !1571, !1212}
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !1537, file: !25, line: 39, baseType: !1573, size: 64, offset: 512)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 64)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{null, !1393, !1397, !24}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !1537, file: !25, line: 40, baseType: !1577, size: 64, offset: 576)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{null, !1393, !1397, !1397}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !1537, file: !25, line: 41, baseType: !1581, size: 64, offset: 640)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = !DISubroutineType(types: !1583)
!1583 = !{null, !7, !1584}
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!1585 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !25, line: 26, flags: DIFlagFwdDecl)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !1537, file: !25, line: 42, baseType: !1587, size: 64, offset: 704)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{null, !1397}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !1537, file: !25, line: 43, baseType: !1587, size: 64, offset: 768)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !1537, file: !25, line: 44, baseType: !1592, size: 64, offset: 832)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 64)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{null, !1405, !173, !190}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !1537, file: !25, line: 45, baseType: !1596, size: 64, offset: 896)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64)
!1597 = !DISubroutineType(types: !1598)
!1598 = !{!1397, !1405}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !1537, file: !25, line: 46, baseType: !1600, size: 64, offset: 960)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 64)
!1601 = !DISubroutineType(types: !1602)
!1602 = !{!190, !1405}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !1537, file: !25, line: 47, baseType: !1604, size: 64, offset: 1024)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 64)
!1605 = !DISubroutineType(types: !1606)
!1606 = !{null, !1397, !512}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !1537, file: !25, line: 48, baseType: !1587, size: 64, offset: 1088)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !1537, file: !25, line: 49, baseType: !1609, size: 64, offset: 1152)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!1397, !1393, !1397}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !1537, file: !25, line: 50, baseType: !1609, size: 64, offset: 1216)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !1537, file: !25, line: 51, baseType: !1614, size: 64, offset: 1280)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = !DISubroutineType(types: !1616)
!1616 = !{null, !1436}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !1537, file: !25, line: 52, baseType: !1614, size: 64, offset: 1344)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !1533, file: !25, line: 74, baseType: !417, size: 64, offset: 1472)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !1533, file: !25, line: 75, baseType: !417, size: 64, offset: 1536)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !1533, file: !25, line: 76, baseType: !1621, size: 64, offset: 1600)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !25, line: 57, size: 256, elements: !1623)
!1623 = !{!1624, !1625, !1629}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1622, file: !25, line: 58, baseType: !407, size: 128)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1622, file: !25, line: 59, baseType: !1626, size: 64, offset: 128)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DISubroutineType(types: !1628)
!1628 = !{!401, !1528, !370}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1622, file: !25, line: 60, baseType: !1630, size: 64, offset: 192)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = !DISubroutineType(types: !1632)
!1632 = !{!401, !1528, !289, !417}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !1533, file: !25, line: 77, baseType: !289, size: 64, offset: 1664)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !1533, file: !25, line: 78, baseType: !289, size: 64, offset: 1728)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !1533, file: !25, line: 79, baseType: !1636, size: 32, offset: 1792)
!1636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !1533, file: !25, line: 80, baseType: !720, size: 64, offset: 1856)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !1533, file: !25, line: 87, baseType: !1639, size: 176, offset: 1920)
!1639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 176, elements: !1640)
!1640 = !{!1641}
!1641 = !DISubrange(count: 22)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1533, file: !25, line: 88, baseType: !170, size: 128, offset: 2112)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !1529, file: !25, line: 104, baseType: !165, size: 64, offset: 64)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1529, file: !25, line: 105, baseType: !331, size: 512, offset: 128)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !1529, file: !25, line: 106, baseType: !270, size: 192, offset: 640)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !1529, file: !25, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1529, file: !25, line: 108, baseType: !1648, size: 4096, offset: 896)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !725, size: 4096, elements: !375)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !1394, file: !19, line: 403, baseType: !1122, size: 128, offset: 128)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1394, file: !19, line: 405, baseType: !1651, size: 64, offset: 256)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !19, line: 43, flags: DIFlagFwdDecl)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !1394, file: !19, line: 406, baseType: !1654, size: 64, offset: 320)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 64)
!1655 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !19, line: 42, flags: DIFlagFwdDecl)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !1394, file: !19, line: 408, baseType: !1657, size: 64, offset: 384)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1659)
!1659 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !19, line: 408, flags: DIFlagFwdDecl)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !1394, file: !19, line: 411, baseType: !1402, size: 64, offset: 448)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !1394, file: !19, line: 413, baseType: !7, size: 32, offset: 512)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !1394, file: !19, line: 416, baseType: !1663, size: 64, offset: 576)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !1394, file: !19, line: 417, baseType: !7, size: 32, offset: 640)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1394, file: !19, line: 419, baseType: !1666, size: 64, offset: 704)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !32, line: 165, size: 4672, elements: !1668)
!1668 = !{!1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1736, !1737, !1738, !1740, !1742, !1743}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1667, file: !32, line: 166, baseType: !512, size: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1667, file: !32, line: 167, baseType: !896, size: 192, align: 64, offset: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !1667, file: !32, line: 168, baseType: !170, size: 128, offset: 256)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1667, file: !32, line: 169, baseType: !197, size: 64, offset: 384)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !1667, file: !32, line: 170, baseType: !197, size: 64, offset: 448)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1667, file: !32, line: 172, baseType: !176, size: 32, offset: 512)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1667, file: !32, line: 173, baseType: !7, size: 32, offset: 544)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !1667, file: !32, line: 174, baseType: !7, size: 32, offset: 576)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !1667, file: !32, line: 175, baseType: !7, size: 32, offset: 608)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !1667, file: !32, line: 175, baseType: !7, size: 32, offset: 640)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !1667, file: !32, line: 181, baseType: !234, size: 64, offset: 704)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !1667, file: !32, line: 183, baseType: !1681, size: 2688, offset: 768)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !32, line: 107, size: 2688, elements: !1682)
!1682 = !{!1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1712, !1713, !1714, !1715, !1716, !1734, !1735}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !1681, file: !32, line: 108, baseType: !1666, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1681, file: !32, line: 110, baseType: !197, size: 64, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !1681, file: !32, line: 111, baseType: !197, size: 64, offset: 128)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !1681, file: !32, line: 113, baseType: !170, size: 128, offset: 192)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !1681, file: !32, line: 114, baseType: !170, size: 128, offset: 320)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !1681, file: !32, line: 115, baseType: !170, size: 128, offset: 448)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !1681, file: !32, line: 116, baseType: !170, size: 128, offset: 576)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1681, file: !32, line: 117, baseType: !275, offset: 704)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !1681, file: !32, line: 119, baseType: !1692, size: 256, offset: 704)
!1692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1693, size: 256, elements: !1375)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !1694, line: 97, size: 64, elements: !1695)
!1694 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!1695 = !{!1696}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1693, file: !1694, line: 98, baseType: !240, size: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !1681, file: !32, line: 121, baseType: !197, size: 64, offset: 960)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !1681, file: !32, line: 123, baseType: !197, size: 64, offset: 1024)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !1681, file: !32, line: 124, baseType: !197, size: 64, offset: 1088)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !1681, file: !32, line: 125, baseType: !197, size: 64, offset: 1152)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !1681, file: !32, line: 126, baseType: !197, size: 64, offset: 1216)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !1681, file: !32, line: 127, baseType: !197, size: 64, offset: 1280)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !1681, file: !32, line: 135, baseType: !197, size: 64, offset: 1344)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !1681, file: !32, line: 136, baseType: !197, size: 64, offset: 1408)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !1681, file: !32, line: 138, baseType: !1706, size: 128, offset: 1472)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !1707, line: 76, size: 128, elements: !1708)
!1707 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!1708 = !{!1709, !1710, !1711}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1706, file: !1707, line: 78, baseType: !1693, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1706, file: !1707, line: 80, baseType: !7, size: 32, offset: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1706, file: !1707, line: 81, baseType: !245, offset: 96)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !1681, file: !32, line: 139, baseType: !188, size: 32, offset: 1600)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !1681, file: !32, line: 140, baseType: !31, size: 32, offset: 1632)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !1681, file: !32, line: 142, baseType: !275, offset: 1664)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !1681, file: !32, line: 143, baseType: !170, size: 128, offset: 1664)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !1681, file: !32, line: 144, baseType: !1717, size: 704, offset: 1792)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1158, line: 115, size: 704, elements: !1718)
!1718 = !{!1719, !1720, !1732, !1733}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1717, file: !1158, line: 116, baseType: !1161, size: 256)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !1717, file: !1158, line: 117, baseType: !1721, size: 320, offset: 256)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !1722, line: 11, size: 320, elements: !1723)
!1722 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!1723 = !{!1724, !1725, !1726, !1731}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1721, file: !1722, line: 16, baseType: !729, size: 128)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1721, file: !1722, line: 17, baseType: !197, size: 64, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1721, file: !1722, line: 18, baseType: !1727, size: 64, offset: 192)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = !DISubroutineType(types: !1729)
!1729 = !{null, !1730}
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1721, file: !1722, line: 19, baseType: !212, size: 32, offset: 256)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !1717, file: !1158, line: 120, baseType: !1173, size: 64, offset: 576)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1717, file: !1158, line: 121, baseType: !188, size: 32, offset: 640)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !1681, file: !32, line: 146, baseType: !197, size: 64, offset: 2496)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !1681, file: !32, line: 148, baseType: !170, size: 128, offset: 2560)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !1667, file: !32, line: 184, baseType: !170, size: 128, offset: 3456)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !1667, file: !32, line: 190, baseType: !1297, size: 128, offset: 3584)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1667, file: !32, line: 192, baseType: !1739, size: 64, offset: 3712)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !1667, file: !32, line: 193, baseType: !1741, size: 512, offset: 3776)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 512, elements: !375)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1667, file: !32, line: 194, baseType: !1739, size: 64, offset: 4288)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !1667, file: !32, line: 196, baseType: !1721, size: 320, offset: 4352)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !1394, file: !19, line: 425, baseType: !165, size: 64, offset: 768)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !1394, file: !19, line: 430, baseType: !197, size: 64, offset: 832)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !1394, file: !19, line: 436, baseType: !184, size: 32, offset: 896)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1394, file: !19, line: 442, baseType: !188, size: 32, offset: 928)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !1394, file: !19, line: 447, baseType: !163, size: 32, offset: 960)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !1394, file: !19, line: 449, baseType: !275, offset: 992)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1394, file: !19, line: 454, baseType: !331, size: 512, offset: 1024)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !1394, file: !19, line: 459, baseType: !337, size: 64, offset: 1536)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !1394, file: !19, line: 462, baseType: !1753, size: 128, offset: 1600)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !1113, line: 159, size: 128, elements: !1754)
!1754 = !{!1755, !1784, !1785, !1786, !1787}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1753, file: !1113, line: 160, baseType: !1756, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1758)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !19, line: 1664, size: 320, elements: !1759)
!1759 = !{!1760, !1774, !1775, !1778, !1783}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !1758, file: !19, line: 1665, baseType: !1761, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !19, line: 1660, baseType: !1763)
!1763 = !DISubroutineType(types: !1764)
!1764 = !{!1222, !1765}
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !19, line: 1651, size: 320, elements: !1767)
!1767 = !{!1768, !1769, !1770, !1771, !1772, !1773}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !1766, file: !19, line: 1652, baseType: !165, size: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !1766, file: !19, line: 1653, baseType: !165, size: 64, offset: 64)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !1766, file: !19, line: 1654, baseType: !958, size: 64, offset: 128)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !1766, file: !19, line: 1655, baseType: !7, size: 32, offset: 192)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1766, file: !19, line: 1656, baseType: !412, size: 16, offset: 224)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !1766, file: !19, line: 1657, baseType: !289, size: 64, offset: 256)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !1758, file: !19, line: 1666, baseType: !1761, size: 64, offset: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !1758, file: !19, line: 1667, baseType: !1776, size: 64, offset: 128)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !19, line: 1661, baseType: !1588)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !1758, file: !19, line: 1668, baseType: !1779, size: 64, offset: 192)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !19, line: 1662, baseType: !1781)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{null, !1397, !7}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1758, file: !19, line: 1669, baseType: !289, size: 64, offset: 256)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1753, file: !1113, line: 161, baseType: !518, size: 8, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !1753, file: !1113, line: 162, baseType: !518, size: 8, offset: 72)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !1753, file: !1113, line: 163, baseType: !518, size: 8, offset: 80)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !1753, file: !1113, line: 164, baseType: !518, size: 8, offset: 88)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1394, file: !19, line: 466, baseType: !1739, size: 64, offset: 1728)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !1394, file: !19, line: 467, baseType: !43, size: 32, offset: 1792)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !1394, file: !19, line: 468, baseType: !7, size: 32, offset: 1824)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !1394, file: !19, line: 474, baseType: !197, size: 64, offset: 1856)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !1394, file: !19, line: 476, baseType: !7, size: 32, offset: 1920)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !1394, file: !19, line: 477, baseType: !7, size: 32, offset: 1952)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !1394, file: !19, line: 484, baseType: !7, size: 32, offset: 1984)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !1394, file: !19, line: 485, baseType: !188, size: 32, offset: 2016)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !1394, file: !19, line: 487, baseType: !1797, size: 64, offset: 2048)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !19, line: 44, flags: DIFlagFwdDecl)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !1394, file: !19, line: 488, baseType: !1800, size: 5120, offset: 2112)
!1800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1801, size: 5120, elements: !1808)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !1094, line: 540, size: 320, elements: !1802)
!1802 = !{!1803, !1804, !1805, !1806, !1807}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !1801, file: !1094, line: 541, baseType: !512, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1801, file: !1094, line: 542, baseType: !512, size: 64, offset: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1801, file: !1094, line: 543, baseType: !512, size: 64, offset: 128)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !1801, file: !1094, line: 544, baseType: !212, size: 32, offset: 192)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1801, file: !1094, line: 545, baseType: !512, size: 64, offset: 256)
!1808 = !{!1809}
!1809 = !DISubrange(count: 16)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1394, file: !19, line: 490, baseType: !1721, size: 320, offset: 7232)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !1394, file: !19, line: 491, baseType: !1161, size: 256, offset: 7552)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !1394, file: !19, line: 493, baseType: !184, size: 32, offset: 7808)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1394, file: !19, line: 495, baseType: !170, size: 128, offset: 7872)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !1394, file: !19, line: 502, baseType: !1815, size: 896, offset: 8000)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !19, line: 321, size: 896, elements: !1816)
!1816 = !{!1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !1815, file: !19, line: 322, baseType: !197, size: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !1815, file: !19, line: 323, baseType: !197, size: 64, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !1815, file: !19, line: 324, baseType: !197, size: 64, offset: 128)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !1815, file: !19, line: 326, baseType: !7, size: 32, offset: 192)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !1815, file: !19, line: 327, baseType: !7, size: 32, offset: 224)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !1815, file: !19, line: 328, baseType: !7, size: 32, offset: 256)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !1815, file: !19, line: 329, baseType: !7, size: 32, offset: 288)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !1815, file: !19, line: 330, baseType: !7, size: 32, offset: 320)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !1815, file: !19, line: 331, baseType: !7, size: 32, offset: 352)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !1815, file: !19, line: 332, baseType: !7, size: 32, offset: 384)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !1815, file: !19, line: 333, baseType: !7, size: 32, offset: 416)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !1815, file: !19, line: 334, baseType: !7, size: 32, offset: 448)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !1815, file: !19, line: 335, baseType: !7, size: 32, offset: 480)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !1815, file: !19, line: 336, baseType: !7, size: 32, offset: 512)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !1815, file: !19, line: 337, baseType: !7, size: 32, offset: 544)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !1815, file: !19, line: 338, baseType: !7, size: 32, offset: 576)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !1815, file: !19, line: 339, baseType: !7, size: 32, offset: 608)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !1815, file: !19, line: 340, baseType: !7, size: 32, offset: 640)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !1815, file: !19, line: 341, baseType: !7, size: 32, offset: 672)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !1815, file: !19, line: 342, baseType: !7, size: 32, offset: 704)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !1815, file: !19, line: 344, baseType: !412, size: 16, offset: 736)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !1815, file: !19, line: 345, baseType: !412, size: 16, offset: 752)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !1815, file: !19, line: 346, baseType: !412, size: 16, offset: 768)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !1815, file: !19, line: 348, baseType: !518, size: 8, offset: 784)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !1815, file: !19, line: 349, baseType: !518, size: 8, offset: 792)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !1815, file: !19, line: 350, baseType: !518, size: 8, offset: 800)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !1815, file: !19, line: 351, baseType: !50, size: 32, offset: 832)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !1394, file: !19, line: 504, baseType: !7, size: 32, offset: 8896)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !1394, file: !19, line: 534, baseType: !7, size: 32, offset: 8928)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !1394, file: !19, line: 535, baseType: !7, size: 32, offset: 8960)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1394, file: !19, line: 536, baseType: !188, size: 32, offset: 8992)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !1394, file: !19, line: 537, baseType: !270, size: 192, offset: 9024)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !1394, file: !19, line: 544, baseType: !1850, size: 64, offset: 9216)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!1851 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !19, line: 40, flags: DIFlagFwdDecl)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !1394, file: !19, line: 546, baseType: !170, size: 128, offset: 9280)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !1394, file: !19, line: 547, baseType: !275, offset: 9408)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !1394, file: !19, line: 548, baseType: !1717, size: 704, offset: 9408)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !1394, file: !19, line: 550, baseType: !270, size: 192, offset: 10112)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !1394, file: !19, line: 551, baseType: !270, size: 192, offset: 10304)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !1394, file: !19, line: 557, baseType: !170, size: 128, offset: 10496)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !1394, file: !19, line: 558, baseType: !275, offset: 10624)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !1394, file: !19, line: 560, baseType: !188, size: 32, offset: 10624)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !1394, file: !19, line: 563, baseType: !1861, size: 256, offset: 10688)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !1862, line: 18, size: 256, elements: !1863)
!1862 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!1863 = !{!1864, !1865, !1866, !1867}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !1861, file: !1862, line: 19, baseType: !1739, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !1861, file: !1862, line: 20, baseType: !188, size: 32, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1861, file: !1862, line: 21, baseType: !1393, size: 64, offset: 128)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1861, file: !1862, line: 22, baseType: !1868, size: 64, offset: 192)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1870)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !1862, line: 10, size: 256, elements: !1871)
!1871 = !{!1872, !1914, !1918, !1922}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !1870, file: !1862, line: 11, baseType: !1873, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = !DISubroutineType(types: !1875)
!1875 = !{!188, !1876}
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !1878, line: 22, size: 1280, elements: !1879)
!1878 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!1879 = !{!1880, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !1877, file: !1878, line: 23, baseType: !1881, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !215, line: 26, baseType: !188)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !1877, file: !1878, line: 24, baseType: !214, size: 32, offset: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !1877, file: !1878, line: 25, baseType: !214, size: 32, offset: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !1877, file: !1878, line: 28, baseType: !214, size: 32, offset: 96)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !1877, file: !1878, line: 29, baseType: !513, size: 64, offset: 128)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !1877, file: !1878, line: 30, baseType: !513, size: 64, offset: 192)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !1877, file: !1878, line: 31, baseType: !214, size: 32, offset: 256)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !1877, file: !1878, line: 32, baseType: !214, size: 32, offset: 288)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !1877, file: !1878, line: 33, baseType: !214, size: 32, offset: 320)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !1877, file: !1878, line: 34, baseType: !214, size: 32, offset: 352)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !1877, file: !1878, line: 35, baseType: !513, size: 64, offset: 384)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !1877, file: !1878, line: 38, baseType: !214, size: 32, offset: 448)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !1877, file: !1878, line: 40, baseType: !214, size: 32, offset: 480)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !1877, file: !1878, line: 41, baseType: !214, size: 32, offset: 512)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !1877, file: !1878, line: 42, baseType: !214, size: 32, offset: 544)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !1877, file: !1878, line: 43, baseType: !513, size: 64, offset: 576)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !1877, file: !1878, line: 44, baseType: !513, size: 64, offset: 640)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1877, file: !1878, line: 46, baseType: !214, size: 32, offset: 704)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1877, file: !1878, line: 47, baseType: !214, size: 32, offset: 736)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !1877, file: !1878, line: 48, baseType: !513, size: 64, offset: 768)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !1877, file: !1878, line: 49, baseType: !214, size: 32, offset: 832)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !1877, file: !1878, line: 51, baseType: !214, size: 32, offset: 864)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !1877, file: !1878, line: 52, baseType: !214, size: 32, offset: 896)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !1877, file: !1878, line: 53, baseType: !214, size: 32, offset: 928)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !1877, file: !1878, line: 54, baseType: !214, size: 32, offset: 960)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1877, file: !1878, line: 55, baseType: !214, size: 32, offset: 992)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1877, file: !1878, line: 56, baseType: !214, size: 32, offset: 1024)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !1877, file: !1878, line: 57, baseType: !214, size: 32, offset: 1056)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !1877, file: !1878, line: 58, baseType: !1881, size: 32, offset: 1088)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !1877, file: !1878, line: 59, baseType: !1881, size: 32, offset: 1120)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !1877, file: !1878, line: 60, baseType: !513, size: 64, offset: 1152)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !1877, file: !1878, line: 61, baseType: !214, size: 32, offset: 1216)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !1877, file: !1878, line: 63, baseType: !214, size: 32, offset: 1248)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !1870, file: !1862, line: 12, baseType: !1915, size: 64, offset: 64)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!188, !1397, !1876, !1318}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !1870, file: !1862, line: 14, baseType: !1919, size: 64, offset: 128)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = !DISubroutineType(types: !1921)
!1921 = !{!188, !1397, !1876}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !1870, file: !1862, line: 15, baseType: !1587, size: 64, offset: 192)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1394, file: !19, line: 570, baseType: !460, size: 128, align: 64, offset: 10944)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !1394, file: !19, line: 571, baseType: !1297, size: 128, offset: 11072)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !1394, file: !19, line: 576, baseType: !270, size: 192, offset: 11200)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !1394, file: !19, line: 578, baseType: !1927, size: 64, offset: 11392)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!1928 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !19, line: 578, flags: DIFlagFwdDecl)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !1394, file: !19, line: 579, baseType: !170, size: 128, offset: 11456)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !1394, file: !19, line: 580, baseType: !1270, size: 2368, offset: 11584)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !1394, file: !19, line: 582, baseType: !477, size: 64, offset: 13952)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !1394, file: !19, line: 589, baseType: !190, size: 8, offset: 14016)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !1394, file: !19, line: 591, baseType: !417, size: 64, offset: 14080)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !1394, file: !19, line: 594, baseType: !1935, size: 320, offset: 14144)
!1935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 320, elements: !1936)
!1936 = !{!1937}
!1937 = !DISubrange(count: 5)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1179, file: !1113, line: 191, baseType: !165, size: 64, offset: 7168)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1179, file: !1113, line: 193, baseType: !188, size: 32, offset: 7232)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1179, file: !1113, line: 194, baseType: !197, size: 64, offset: 7296)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !1179, file: !1113, line: 196, baseType: !230, size: 256, offset: 7360)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !1179, file: !1113, line: 197, baseType: !337, size: 64, offset: 7616)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !1179, file: !1113, line: 199, baseType: !1944, size: 64, offset: 7680)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !1113, line: 199, flags: DIFlagFwdDecl)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !1179, file: !1113, line: 200, baseType: !184, size: 32, offset: 7744)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !1179, file: !1113, line: 201, baseType: !1948, size: 64, offset: 7808)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64)
!1949 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !1113, line: 156, flags: DIFlagFwdDecl)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !1179, file: !1113, line: 203, baseType: !331, size: 512, offset: 7872)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !1179, file: !1113, line: 208, baseType: !188, size: 32, offset: 8384)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1179, file: !1113, line: 209, baseType: !1953, size: 64, offset: 8448)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !1113, line: 157, flags: DIFlagFwdDecl)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !1179, file: !1113, line: 210, baseType: !1956, offset: 8512)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !736, line: 192, elements: !253)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !1093, file: !1094, line: 43, baseType: !1666, size: 64, offset: 1024)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !1093, file: !1094, line: 46, baseType: !188, size: 32, offset: 1088)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !1093, file: !1094, line: 48, baseType: !270, size: 192, offset: 1152)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "swap_file", scope: !1046, file: !1047, line: 259, baseType: !447, size: 64, offset: 1152)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "old_block_size", scope: !1046, file: !1047, line: 260, baseType: !7, size: 32, offset: 1216)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1046, file: !1047, line: 265, baseType: !275, offset: 1248)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "cont_lock", scope: !1046, file: !1047, line: 278, baseType: !275, offset: 1248)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "discard_work", scope: !1046, file: !1047, line: 282, baseType: !1161, size: 256, offset: 1280)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "discard_clusters", scope: !1046, file: !1047, line: 283, baseType: !1072, size: 64, offset: 1536)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "avail_lists", scope: !1046, file: !1047, line: 284, baseType: !1967, offset: 1600)
!1967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1053, elements: !1199)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !909, file: !86, line: 415, baseType: !1970, size: 64, offset: 1344)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DISubroutineType(types: !1972)
!1972 = !{null, !447}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !875, file: !86, line: 466, baseType: !197, size: 64, offset: 896)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !875, file: !86, line: 467, baseType: !1975, size: 32, offset: 960)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1976, line: 8, baseType: !212)
!1976 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !875, file: !86, line: 468, baseType: !275, offset: 992)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !875, file: !86, line: 469, baseType: !170, size: 128, offset: 1024)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !875, file: !86, line: 470, baseType: !165, size: 64, offset: 1152)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !870, file: !863, line: 87, baseType: !197, size: 64, offset: 192)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !870, file: !863, line: 94, baseType: !197, size: 64, offset: 256)
!1982 = !DIDerivedType(tag: DW_TAG_member, scope: !867, file: !863, line: 96, baseType: !1983, size: 64)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !867, file: !863, line: 96, size: 64, elements: !1984)
!1984 = !{!1985}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1983, file: !863, line: 101, baseType: !1986, size: 64)
!1986 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !164, line: 143, baseType: !512)
!1987 = !DIDerivedType(tag: DW_TAG_member, scope: !867, file: !863, line: 103, baseType: !1988, size: 320)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !867, file: !863, line: 103, size: 320, elements: !1989)
!1989 = !{!1990, !2000, !2001, !2002}
!1990 = !DIDerivedType(tag: DW_TAG_member, scope: !1988, file: !863, line: 104, baseType: !1991, size: 128)
!1991 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1988, file: !863, line: 104, size: 128, elements: !1992)
!1992 = !{!1993, !1994}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1991, file: !863, line: 105, baseType: !170, size: 128)
!1994 = !DIDerivedType(tag: DW_TAG_member, scope: !1991, file: !863, line: 106, baseType: !1995, size: 128)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1991, file: !863, line: 106, size: 128, elements: !1996)
!1996 = !{!1997, !1998, !1999}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1995, file: !863, line: 107, baseType: !861, size: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1995, file: !863, line: 109, baseType: !188, size: 32, offset: 64)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1995, file: !863, line: 110, baseType: !188, size: 32, offset: 96)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1988, file: !863, line: 117, baseType: !1273, size: 64, offset: 128)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1988, file: !863, line: 119, baseType: !165, size: 64, offset: 192)
!2002 = !DIDerivedType(tag: DW_TAG_member, scope: !1988, file: !863, line: 120, baseType: !2003, size: 64, offset: 256)
!2003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1988, file: !863, line: 120, size: 64, elements: !2004)
!2004 = !{!2005, !2006, !2007}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2003, file: !863, line: 121, baseType: !165, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2003, file: !863, line: 122, baseType: !197, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, scope: !2003, file: !863, line: 123, baseType: !2008, size: 32)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2003, file: !863, line: 123, size: 32, elements: !2009)
!2009 = !{!2010, !2011, !2012}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2008, file: !863, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2008, file: !863, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2008, file: !863, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2013 = !DIDerivedType(tag: DW_TAG_member, scope: !867, file: !863, line: 130, baseType: !2014, size: 192)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !867, file: !863, line: 130, size: 192, elements: !2015)
!2015 = !{!2016, !2017, !2018, !2019, !2020}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2014, file: !863, line: 131, baseType: !197, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2014, file: !863, line: 134, baseType: !518, size: 8, offset: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2014, file: !863, line: 135, baseType: !518, size: 8, offset: 72)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2014, file: !863, line: 136, baseType: !184, size: 32, offset: 96)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2014, file: !863, line: 137, baseType: !7, size: 32, offset: 128)
!2021 = !DIDerivedType(tag: DW_TAG_member, scope: !867, file: !863, line: 139, baseType: !2022, size: 256)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !867, file: !863, line: 139, size: 256, elements: !2023)
!2023 = !{!2024, !2025, !2026}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2022, file: !863, line: 140, baseType: !197, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2022, file: !863, line: 141, baseType: !184, size: 32, offset: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2022, file: !863, line: 143, baseType: !170, size: 128, offset: 128)
!2027 = !DIDerivedType(tag: DW_TAG_member, scope: !867, file: !863, line: 145, baseType: !2028, size: 256)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !867, file: !863, line: 145, size: 256, elements: !2029)
!2029 = !{!2030, !2031, !2034, !2035, !3503}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2028, file: !863, line: 146, baseType: !197, size: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2028, file: !863, line: 147, baseType: !2032, size: 64, offset: 64)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2033, line: 509, baseType: !861)
!2033 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2028, file: !863, line: 148, baseType: !197, size: 64, offset: 128)
!2035 = !DIDerivedType(tag: DW_TAG_member, scope: !2028, file: !863, line: 149, baseType: !2036, size: 64, offset: 192)
!2036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2028, file: !863, line: 149, size: 64, elements: !2037)
!2037 = !{!2038, !3502}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2036, file: !863, line: 150, baseType: !2039, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !863, line: 388, size: 7296, elements: !2041)
!2041 = !{!2042, !3500}
!2042 = !DIDerivedType(tag: DW_TAG_member, scope: !2040, file: !863, line: 389, baseType: !2043, size: 7296)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2040, file: !863, line: 389, size: 7296, elements: !2044)
!2044 = !{!2045, !2163, !2164, !2165, !2169, !2170, !2171, !2172, !2173, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2214, !2220, !2223, !2262, !2263, !3484, !3485, !3488, !3489, !3490, !3493, !3494, !3495, !3498, !3499}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2043, file: !863, line: 390, baseType: !2046, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !863, line: 305, size: 1472, elements: !2048)
!2048 = !{!2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2063, !2064, !2069, !2070, !2073, !2157, !2158, !2159, !2160, !2161}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2047, file: !863, line: 308, baseType: !197, size: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2047, file: !863, line: 309, baseType: !197, size: 64, offset: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2047, file: !863, line: 313, baseType: !2046, size: 64, offset: 128)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2047, file: !863, line: 313, baseType: !2046, size: 64, offset: 192)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2047, file: !863, line: 315, baseType: !896, size: 192, align: 64, offset: 256)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2047, file: !863, line: 323, baseType: !197, size: 64, offset: 448)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2047, file: !863, line: 327, baseType: !2039, size: 64, offset: 512)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2047, file: !863, line: 333, baseType: !2057, size: 64, offset: 576)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2033, line: 284, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2033, line: 284, size: 64, elements: !2059)
!2059 = !{!2060}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2058, file: !2033, line: 284, baseType: !2061, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2062, line: 19, baseType: !197)
!2062 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2047, file: !863, line: 334, baseType: !197, size: 64, offset: 640)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2047, file: !863, line: 343, baseType: !2065, size: 256, offset: 704)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2047, file: !863, line: 340, size: 256, elements: !2066)
!2066 = !{!2067, !2068}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2065, file: !863, line: 341, baseType: !896, size: 192, align: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2065, file: !863, line: 342, baseType: !197, size: 64, offset: 192)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2047, file: !863, line: 351, baseType: !170, size: 128, offset: 960)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2047, file: !863, line: 353, baseType: !2071, size: 64, offset: 1088)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !863, line: 353, flags: DIFlagFwdDecl)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2047, file: !863, line: 356, baseType: !2074, size: 64, offset: 1152)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 64)
!2075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2076)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !56, line: 557, size: 832, elements: !2077)
!2077 = !{!2078, !2082, !2083, !2087, !2091, !2131, !2135, !2139, !2143, !2144, !2145, !2149, !2153}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2076, file: !56, line: 558, baseType: !2079, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{null, !2046}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2076, file: !56, line: 559, baseType: !2079, size: 64, offset: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2076, file: !56, line: 560, baseType: !2084, size: 64, offset: 128)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64)
!2085 = !DISubroutineType(types: !2086)
!2086 = !{!188, !2046, !197}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2076, file: !56, line: 561, baseType: !2088, size: 64, offset: 192)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{!188, !2046}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2076, file: !56, line: 562, baseType: !2092, size: 64, offset: 256)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = !DISubroutineType(types: !2094)
!2094 = !{!2095, !2096}
!2095 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !863, line: 682, baseType: !7)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !56, line: 508, size: 768, elements: !2098)
!2098 = !{!2099, !2100, !2101, !2102, !2103, !2104, !2111, !2118, !2124, !2125, !2126, !2128, !2130}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2097, file: !56, line: 509, baseType: !2046, size: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2097, file: !56, line: 510, baseType: !7, size: 32, offset: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2097, file: !56, line: 511, baseType: !163, size: 32, offset: 96)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2097, file: !56, line: 512, baseType: !197, size: 64, offset: 128)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2097, file: !56, line: 513, baseType: !197, size: 64, offset: 192)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2097, file: !56, line: 514, baseType: !2105, size: 64, offset: 256)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2033, line: 385, baseType: !2107)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2033, line: 385, size: 64, elements: !2108)
!2108 = !{!2109}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2107, file: !2033, line: 385, baseType: !2110, size: 64)
!2110 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2062, line: 15, baseType: !197)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2097, file: !56, line: 516, baseType: !2112, size: 64, offset: 320)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2033, line: 359, baseType: !2114)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2033, line: 359, size: 64, elements: !2115)
!2115 = !{!2116}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2114, file: !2033, line: 359, baseType: !2117, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2062, line: 16, baseType: !197)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2097, file: !56, line: 519, baseType: !2119, size: 64, offset: 384)
!2119 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2062, line: 21, baseType: !2120)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2062, line: 21, size: 64, elements: !2121)
!2121 = !{!2122}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2120, file: !2062, line: 21, baseType: !2123, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2062, line: 14, baseType: !197)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2097, file: !56, line: 521, baseType: !861, size: 64, offset: 448)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2097, file: !56, line: 522, baseType: !861, size: 64, offset: 512)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2097, file: !56, line: 528, baseType: !2127, size: 64, offset: 576)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2097, file: !56, line: 532, baseType: !2129, size: 64, offset: 640)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2097, file: !56, line: 536, baseType: !2032, size: 64, offset: 704)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2076, file: !56, line: 563, baseType: !2132, size: 64, offset: 320)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2133 = !DISubroutineType(types: !2134)
!2134 = !{!2095, !2096, !55}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2076, file: !56, line: 565, baseType: !2136, size: 64, offset: 384)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{null, !2096, !197, !197}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2076, file: !56, line: 567, baseType: !2140, size: 64, offset: 448)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!197, !2046}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2076, file: !56, line: 571, baseType: !2092, size: 64, offset: 512)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2076, file: !56, line: 574, baseType: !2092, size: 64, offset: 576)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2076, file: !56, line: 579, baseType: !2146, size: 64, offset: 640)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DISubroutineType(types: !2148)
!2148 = !{!188, !2046, !197, !165, !188, !188}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2076, file: !56, line: 585, baseType: !2150, size: 64, offset: 704)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{!289, !2046}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2076, file: !56, line: 615, baseType: !2154, size: 64, offset: 768)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2155 = !DISubroutineType(types: !2156)
!2156 = !{!861, !2046, !197}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2047, file: !863, line: 359, baseType: !197, size: 64, offset: 1216)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2047, file: !863, line: 361, baseType: !447, size: 64, offset: 1280)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2047, file: !863, line: 362, baseType: !165, size: 64, offset: 1344)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2047, file: !863, line: 365, baseType: !234, size: 64, offset: 1408)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2047, file: !863, line: 373, baseType: !2162, offset: 1472)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !863, line: 296, elements: !253)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2043, file: !863, line: 391, baseType: !892, size: 64, offset: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2043, file: !863, line: 392, baseType: !512, size: 64, offset: 128)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2043, file: !863, line: 394, baseType: !2166, size: 64, offset: 192)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{!197, !447, !197, !197, !197, !197}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2043, file: !863, line: 398, baseType: !197, size: 64, offset: 256)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2043, file: !863, line: 399, baseType: !197, size: 64, offset: 320)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2043, file: !863, line: 405, baseType: !197, size: 64, offset: 384)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2043, file: !863, line: 406, baseType: !197, size: 64, offset: 448)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2043, file: !863, line: 407, baseType: !2174, size: 64, offset: 512)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2033, line: 286, baseType: !2176)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2033, line: 286, size: 64, elements: !2177)
!2177 = !{!2178}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2176, file: !2033, line: 286, baseType: !2179, size: 64)
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2062, line: 18, baseType: !197)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2043, file: !863, line: 416, baseType: !184, size: 32, offset: 576)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2043, file: !863, line: 428, baseType: !184, size: 32, offset: 608)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2043, file: !863, line: 437, baseType: !184, size: 32, offset: 640)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2043, file: !863, line: 447, baseType: !184, size: 32, offset: 672)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2043, file: !863, line: 450, baseType: !234, size: 64, offset: 704)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2043, file: !863, line: 452, baseType: !188, size: 32, offset: 768)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2043, file: !863, line: 454, baseType: !275, offset: 800)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2043, file: !863, line: 457, baseType: !230, size: 256, offset: 832)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2043, file: !863, line: 459, baseType: !170, size: 128, offset: 1088)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2043, file: !863, line: 466, baseType: !197, size: 64, offset: 1216)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2043, file: !863, line: 467, baseType: !197, size: 64, offset: 1280)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2043, file: !863, line: 469, baseType: !197, size: 64, offset: 1344)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2043, file: !863, line: 470, baseType: !197, size: 64, offset: 1408)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2043, file: !863, line: 471, baseType: !236, size: 64, offset: 1472)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2043, file: !863, line: 472, baseType: !197, size: 64, offset: 1536)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2043, file: !863, line: 473, baseType: !197, size: 64, offset: 1600)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2043, file: !863, line: 474, baseType: !197, size: 64, offset: 1664)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2043, file: !863, line: 475, baseType: !197, size: 64, offset: 1728)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2043, file: !863, line: 477, baseType: !275, offset: 1792)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2043, file: !863, line: 478, baseType: !197, size: 64, offset: 1792)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2043, file: !863, line: 478, baseType: !197, size: 64, offset: 1856)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2043, file: !863, line: 478, baseType: !197, size: 64, offset: 1920)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2043, file: !863, line: 478, baseType: !197, size: 64, offset: 1984)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2043, file: !863, line: 479, baseType: !197, size: 64, offset: 2048)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2043, file: !863, line: 479, baseType: !197, size: 64, offset: 2112)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2043, file: !863, line: 479, baseType: !197, size: 64, offset: 2176)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2043, file: !863, line: 480, baseType: !197, size: 64, offset: 2240)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2043, file: !863, line: 480, baseType: !197, size: 64, offset: 2304)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2043, file: !863, line: 480, baseType: !197, size: 64, offset: 2368)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2043, file: !863, line: 480, baseType: !197, size: 64, offset: 2432)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2043, file: !863, line: 482, baseType: !2211, size: 2816, offset: 2496)
!2211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 2816, elements: !2212)
!2212 = !{!2213}
!2213 = !DISubrange(count: 44)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2043, file: !863, line: 488, baseType: !2215, size: 256, offset: 5312)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2216, line: 60, size: 256, elements: !2217)
!2216 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2217 = !{!2218}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2215, file: !2216, line: 61, baseType: !2219, size: 256)
!2219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !234, size: 256, elements: !1375)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2043, file: !863, line: 490, baseType: !2221, size: 64, offset: 5568)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!2222 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !863, line: 490, flags: DIFlagFwdDecl)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2043, file: !863, line: 493, baseType: !2224, size: 896, offset: 5632)
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2225, line: 53, baseType: !2226)
!2225 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2225, line: 13, size: 896, elements: !2227)
!2227 = !{!2228, !2229, !2230, !2231, !2234, !2235, !2236, !2237, !2257, !2258, !2259}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2226, file: !2225, line: 18, baseType: !512, size: 64)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2226, file: !2225, line: 28, baseType: !236, size: 64, offset: 64)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2226, file: !2225, line: 31, baseType: !230, size: 256, offset: 128)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2226, file: !2225, line: 32, baseType: !2232, size: 64, offset: 384)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2225, line: 32, flags: DIFlagFwdDecl)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2226, file: !2225, line: 37, baseType: !412, size: 16, offset: 448)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2226, file: !2225, line: 40, baseType: !270, size: 192, offset: 512)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2226, file: !2225, line: 41, baseType: !165, size: 64, offset: 704)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2226, file: !2225, line: 42, baseType: !2238, size: 64, offset: 768)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2239, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2240)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2241, line: 13, size: 896, elements: !2242)
!2241 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2242 = !{!2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2240, file: !2241, line: 14, baseType: !165, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2240, file: !2241, line: 15, baseType: !197, size: 64, offset: 64)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2240, file: !2241, line: 17, baseType: !197, size: 64, offset: 128)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2240, file: !2241, line: 17, baseType: !197, size: 64, offset: 192)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2240, file: !2241, line: 19, baseType: !405, size: 64, offset: 256)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2240, file: !2241, line: 21, baseType: !405, size: 64, offset: 320)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2240, file: !2241, line: 22, baseType: !405, size: 64, offset: 384)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2240, file: !2241, line: 23, baseType: !405, size: 64, offset: 448)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2240, file: !2241, line: 24, baseType: !405, size: 64, offset: 512)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2240, file: !2241, line: 25, baseType: !405, size: 64, offset: 576)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2240, file: !2241, line: 26, baseType: !405, size: 64, offset: 640)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2240, file: !2241, line: 27, baseType: !405, size: 64, offset: 704)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2240, file: !2241, line: 28, baseType: !405, size: 64, offset: 768)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2240, file: !2241, line: 29, baseType: !405, size: 64, offset: 832)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2226, file: !2225, line: 44, baseType: !184, size: 32, offset: 832)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2226, file: !2225, line: 50, baseType: !987, size: 16, offset: 864)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2226, file: !2225, line: 51, baseType: !2260, size: 16, offset: 880)
!2260 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !213, line: 18, baseType: !2261)
!2261 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !215, line: 23, baseType: !1051)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2043, file: !863, line: 495, baseType: !197, size: 64, offset: 6528)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2043, file: !863, line: 497, baseType: !2264, size: 64, offset: 6592)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !863, line: 381, size: 384, elements: !2266)
!2266 = !{!2267, !2268, !3483}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2265, file: !863, line: 382, baseType: !184, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2265, file: !863, line: 383, baseType: !2269, size: 128, offset: 64)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !863, line: 376, size: 128, elements: !2270)
!2270 = !{!2271, !3481}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2269, file: !863, line: 377, baseType: !2272, size: 64)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2274, line: 640, size: 48640, elements: !2275)
!2274 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2275 = !{!2276, !2282, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2297, !2315, !2326, !2409, !2410, !2411, !2422, !2423, !2425, !2426, !2427, !2428, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2506, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2538, !2540, !2541, !2542, !2554, !2555, !2556, !2557, !2558, !2559, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2583, !2588, !2910, !2911, !2912, !2913, !2915, !2918, !2921, !2924, !2927, !2963, !3064, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3110, !3111, !3112, !3113, !3114, !3119, !3120, !3121, !3124, !3125, !3127, !3136, !3141, !3142, !3143, !3146, !3147, !3226, !3227, !3230, !3231, !3234, !3235, !3236, !3240, !3241, !3242, !3255, !3256, !3257, !3267, !3272, !3275, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2273, file: !2274, line: 646, baseType: !2277, size: 128)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2278, line: 56, size: 128, elements: !2279)
!2278 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2279 = !{!2280, !2281}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2277, file: !2278, line: 57, baseType: !197, size: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2277, file: !2278, line: 58, baseType: !212, size: 32, offset: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2273, file: !2274, line: 649, baseType: !2283, size: 64, offset: 128)
!2283 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !405)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2273, file: !2274, line: 657, baseType: !165, size: 64, offset: 192)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2273, file: !2274, line: 658, baseType: !180, size: 32, offset: 256)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2273, file: !2274, line: 660, baseType: !7, size: 32, offset: 288)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2273, file: !2274, line: 661, baseType: !7, size: 32, offset: 320)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2273, file: !2274, line: 684, baseType: !188, size: 32, offset: 352)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2273, file: !2274, line: 686, baseType: !188, size: 32, offset: 384)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2273, file: !2274, line: 687, baseType: !188, size: 32, offset: 416)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2273, file: !2274, line: 688, baseType: !188, size: 32, offset: 448)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2273, file: !2274, line: 689, baseType: !7, size: 32, offset: 480)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2273, file: !2274, line: 691, baseType: !2294, size: 64, offset: 512)
!2294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2296)
!2296 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2274, line: 691, flags: DIFlagFwdDecl)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2273, file: !2274, line: 692, baseType: !2298, size: 832, offset: 576)
!2298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2274, line: 451, size: 832, elements: !2299)
!2299 = !{!2300, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2298, file: !2274, line: 453, baseType: !2301, size: 128)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2274, line: 325, size: 128, elements: !2302)
!2302 = !{!2303, !2304}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2301, file: !2274, line: 326, baseType: !197, size: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2301, file: !2274, line: 327, baseType: !212, size: 32, offset: 64)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2298, file: !2274, line: 454, baseType: !896, size: 192, align: 64, offset: 128)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2298, file: !2274, line: 455, baseType: !170, size: 128, offset: 320)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2298, file: !2274, line: 456, baseType: !7, size: 32, offset: 448)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2298, file: !2274, line: 458, baseType: !512, size: 64, offset: 512)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2298, file: !2274, line: 459, baseType: !512, size: 64, offset: 576)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2298, file: !2274, line: 460, baseType: !512, size: 64, offset: 640)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2298, file: !2274, line: 461, baseType: !512, size: 64, offset: 704)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2298, file: !2274, line: 463, baseType: !512, size: 64, offset: 768)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2298, file: !2274, line: 465, baseType: !2314, offset: 832)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2274, line: 415, elements: !253)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2273, file: !2274, line: 693, baseType: !2316, size: 384, offset: 1408)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2274, line: 489, size: 384, elements: !2317)
!2317 = !{!2318, !2319, !2320, !2321, !2322, !2323, !2324}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2316, file: !2274, line: 490, baseType: !170, size: 128)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2316, file: !2274, line: 491, baseType: !197, size: 64, offset: 128)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2316, file: !2274, line: 492, baseType: !197, size: 64, offset: 192)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2316, file: !2274, line: 493, baseType: !7, size: 32, offset: 256)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2316, file: !2274, line: 494, baseType: !412, size: 16, offset: 288)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2316, file: !2274, line: 495, baseType: !412, size: 16, offset: 304)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2316, file: !2274, line: 497, baseType: !2325, size: 64, offset: 320)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2273, file: !2274, line: 697, baseType: !2327, size: 1792, offset: 1792)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2274, line: 507, size: 1792, elements: !2328)
!2328 = !{!2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2406, !2407}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2327, file: !2274, line: 508, baseType: !896, size: 192, align: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2327, file: !2274, line: 515, baseType: !512, size: 64, offset: 192)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2327, file: !2274, line: 516, baseType: !512, size: 64, offset: 256)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2327, file: !2274, line: 517, baseType: !512, size: 64, offset: 320)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2327, file: !2274, line: 518, baseType: !512, size: 64, offset: 384)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2327, file: !2274, line: 519, baseType: !512, size: 64, offset: 448)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2327, file: !2274, line: 526, baseType: !240, size: 64, offset: 512)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2327, file: !2274, line: 527, baseType: !512, size: 64, offset: 576)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2327, file: !2274, line: 528, baseType: !7, size: 32, offset: 640)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2327, file: !2274, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2327, file: !2274, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2327, file: !2274, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2327, file: !2274, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2327, file: !2274, line: 563, baseType: !2343, size: 512, offset: 704)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !62, line: 118, size: 512, elements: !2344)
!2344 = !{!2345, !2353, !2354, !2359, !2402, !2403, !2404, !2405}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2343, file: !62, line: 119, baseType: !2346, size: 256)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2347, line: 9, size: 256, elements: !2348)
!2347 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2348 = !{!2349, !2350}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2346, file: !2347, line: 10, baseType: !896, size: 192, align: 64)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2346, file: !2347, line: 11, baseType: !2351, size: 64, offset: 192)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !2352, line: 29, baseType: !240)
!2352 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2343, file: !62, line: 120, baseType: !2351, size: 64, offset: 256)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2343, file: !62, line: 121, baseType: !2355, size: 64, offset: 320)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2356 = !DISubroutineType(types: !2357)
!2357 = !{!61, !2358}
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2343, file: !62, line: 122, baseType: !2360, size: 64, offset: 384)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 64)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !62, line: 159, size: 512, align: 512, elements: !2362)
!2362 = !{!2363, !2383, !2384, !2387, !2392, !2393, !2397, !2401}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2361, file: !62, line: 160, baseType: !2364, size: 64)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !62, line: 214, size: 4608, align: 512, elements: !2366)
!2366 = !{!2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2365, file: !62, line: 215, baseType: !245)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2365, file: !62, line: 216, baseType: !7, size: 32)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2365, file: !62, line: 217, baseType: !7, size: 32, offset: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2365, file: !62, line: 218, baseType: !7, size: 32, offset: 64)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2365, file: !62, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2365, file: !62, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2365, file: !62, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2365, file: !62, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2365, file: !62, line: 233, baseType: !2351, size: 64, offset: 128)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2365, file: !62, line: 234, baseType: !2358, size: 64, offset: 192)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2365, file: !62, line: 235, baseType: !2351, size: 64, offset: 256)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2365, file: !62, line: 236, baseType: !2358, size: 64, offset: 320)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2365, file: !62, line: 237, baseType: !2380, size: 4096, offset: 512)
!2380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2361, size: 4096, elements: !2381)
!2381 = !{!2382}
!2382 = !DISubrange(count: 8)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2361, file: !62, line: 161, baseType: !7, size: 32, offset: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2361, file: !62, line: 162, baseType: !2385, size: 32, offset: 96)
!2385 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !164, line: 27, baseType: !2386)
!2386 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !403, line: 96, baseType: !188)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2361, file: !62, line: 163, baseType: !2388, size: 32, offset: 128)
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !483, line: 276, baseType: !2389)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !483, line: 276, size: 32, elements: !2390)
!2390 = !{!2391}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2389, file: !483, line: 276, baseType: !487, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2361, file: !62, line: 164, baseType: !2358, size: 64, offset: 192)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2361, file: !62, line: 165, baseType: !2394, size: 128, offset: 256)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2347, line: 14, size: 128, elements: !2395)
!2395 = !{!2396}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2394, file: !2347, line: 15, baseType: !888, size: 128)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2361, file: !62, line: 166, baseType: !2398, size: 64, offset: 384)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!2399 = !DISubroutineType(types: !2400)
!2400 = !{!2351}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2361, file: !62, line: 167, baseType: !2351, size: 64, offset: 448)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2343, file: !62, line: 123, baseType: !1108, size: 8, offset: 448)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2343, file: !62, line: 124, baseType: !1108, size: 8, offset: 456)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2343, file: !62, line: 125, baseType: !1108, size: 8, offset: 464)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2343, file: !62, line: 126, baseType: !1108, size: 8, offset: 472)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2327, file: !2274, line: 572, baseType: !2343, size: 512, offset: 1216)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2327, file: !2274, line: 580, baseType: !2408, size: 64, offset: 1728)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2273, file: !2274, line: 721, baseType: !7, size: 32, offset: 3584)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2273, file: !2274, line: 722, baseType: !188, size: 32, offset: 3616)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2273, file: !2274, line: 723, baseType: !2412, size: 64, offset: 3648)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2414)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2415, line: 17, baseType: !2416)
!2415 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2415, line: 17, size: 64, elements: !2417)
!2417 = !{!2418}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2416, file: !2415, line: 17, baseType: !2419, size: 64)
!2419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 64, elements: !2420)
!2420 = !{!2421}
!2421 = !DISubrange(count: 1)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2273, file: !2274, line: 724, baseType: !2414, size: 64, offset: 3712)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2273, file: !2274, line: 749, baseType: !2424, offset: 3776)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2274, line: 290, elements: !253)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2273, file: !2274, line: 751, baseType: !170, size: 128, offset: 3776)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2273, file: !2274, line: 757, baseType: !2039, size: 64, offset: 3904)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2273, file: !2274, line: 758, baseType: !2039, size: 64, offset: 3968)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2273, file: !2274, line: 761, baseType: !2429, size: 320, offset: 4032)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2216, line: 34, size: 320, elements: !2430)
!2430 = !{!2431, !2432}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2429, file: !2216, line: 35, baseType: !512, size: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2429, file: !2216, line: 36, baseType: !2433, size: 256, offset: 64)
!2433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2046, size: 256, elements: !1375)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2273, file: !2274, line: 766, baseType: !188, size: 32, offset: 4352)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2273, file: !2274, line: 767, baseType: !188, size: 32, offset: 4384)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2273, file: !2274, line: 768, baseType: !188, size: 32, offset: 4416)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2273, file: !2274, line: 770, baseType: !188, size: 32, offset: 4448)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2273, file: !2274, line: 772, baseType: !197, size: 64, offset: 4480)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2273, file: !2274, line: 775, baseType: !7, size: 32, offset: 4544)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2273, file: !2274, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2273, file: !2274, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2273, file: !2274, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2273, file: !2274, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2273, file: !2274, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2273, file: !2274, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2273, file: !2274, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2273, file: !2274, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2273, file: !2274, line: 831, baseType: !197, size: 64, offset: 4672)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2273, file: !2274, line: 833, baseType: !2450, size: 384, offset: 4736)
!2450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !67, line: 25, size: 384, elements: !2451)
!2451 = !{!2452, !2457}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2450, file: !67, line: 26, baseType: !2453, size: 64)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64)
!2454 = !DISubroutineType(types: !2455)
!2455 = !{!405, !2456}
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, scope: !2450, file: !67, line: 27, baseType: !2458, size: 320, offset: 64)
!2458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2450, file: !67, line: 27, size: 320, elements: !2459)
!2459 = !{!2460, !2470, !2496}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2458, file: !67, line: 36, baseType: !2461, size: 320)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2458, file: !67, line: 29, size: 320, elements: !2462)
!2462 = !{!2463, !2465, !2466, !2467, !2468, !2469}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2461, file: !67, line: 30, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2461, file: !67, line: 31, baseType: !212, size: 32, offset: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2461, file: !67, line: 32, baseType: !212, size: 32, offset: 96)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2461, file: !67, line: 33, baseType: !212, size: 32, offset: 128)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2461, file: !67, line: 34, baseType: !512, size: 64, offset: 192)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2461, file: !67, line: 35, baseType: !2464, size: 64, offset: 256)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2458, file: !67, line: 46, baseType: !2471, size: 192)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2458, file: !67, line: 38, size: 192, elements: !2472)
!2472 = !{!2473, !2474, !2475, !2495}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2471, file: !67, line: 39, baseType: !2385, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2471, file: !67, line: 40, baseType: !66, size: 32, offset: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, scope: !2471, file: !67, line: 41, baseType: !2476, size: 64, offset: 64)
!2476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2471, file: !67, line: 41, size: 64, elements: !2477)
!2477 = !{!2478, !2486}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2476, file: !67, line: 42, baseType: !2479, size: 64)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2481, line: 7, size: 128, elements: !2482)
!2481 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2482 = !{!2483, !2485}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2480, file: !2481, line: 8, baseType: !2484, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !403, line: 93, baseType: !242)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2480, file: !2481, line: 9, baseType: !242, size: 64, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2476, file: !67, line: 43, baseType: !2487, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 64)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2489, line: 7, size: 64, elements: !2490)
!2489 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2490 = !{!2491, !2494}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2488, file: !2489, line: 8, baseType: !2492, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2489, line: 5, baseType: !2493)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !213, line: 20, baseType: !1881)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2488, file: !2489, line: 9, baseType: !2493, size: 32, offset: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2471, file: !67, line: 45, baseType: !512, size: 64, offset: 128)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2458, file: !67, line: 54, baseType: !2497, size: 256)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2458, file: !67, line: 48, size: 256, elements: !2498)
!2498 = !{!2499, !2502, !2503, !2504, !2505}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2497, file: !67, line: 49, baseType: !2500, size: 64)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !67, line: 14, flags: DIFlagFwdDecl)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2497, file: !67, line: 50, baseType: !188, size: 32, offset: 64)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2497, file: !67, line: 51, baseType: !188, size: 32, offset: 96)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2497, file: !67, line: 52, baseType: !197, size: 64, offset: 128)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2497, file: !67, line: 53, baseType: !197, size: 64, offset: 192)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2273, file: !2274, line: 835, baseType: !2507, size: 32, offset: 5120)
!2507 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !164, line: 22, baseType: !2508)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !403, line: 28, baseType: !188)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2273, file: !2274, line: 836, baseType: !2507, size: 32, offset: 5152)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2273, file: !2274, line: 840, baseType: !197, size: 64, offset: 5184)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2273, file: !2274, line: 849, baseType: !2272, size: 64, offset: 5248)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2273, file: !2274, line: 852, baseType: !2272, size: 64, offset: 5312)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2273, file: !2274, line: 857, baseType: !170, size: 128, offset: 5376)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2273, file: !2274, line: 858, baseType: !170, size: 128, offset: 5504)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2273, file: !2274, line: 859, baseType: !2272, size: 64, offset: 5632)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2273, file: !2274, line: 867, baseType: !170, size: 128, offset: 5696)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2273, file: !2274, line: 868, baseType: !170, size: 128, offset: 5824)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2273, file: !2274, line: 871, baseType: !2519, size: 64, offset: 5952)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !95, line: 59, size: 768, elements: !2521)
!2521 = !{!2522, !2523, !2524, !2525, !2527, !2528, !2529, !2530}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2520, file: !95, line: 61, baseType: !180, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2520, file: !95, line: 62, baseType: !7, size: 32, offset: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2520, file: !95, line: 63, baseType: !275, offset: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2520, file: !95, line: 65, baseType: !2526, size: 256, offset: 64)
!2526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !725, size: 256, elements: !1375)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2520, file: !95, line: 66, baseType: !725, size: 64, offset: 320)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2520, file: !95, line: 68, baseType: !1297, size: 128, offset: 384)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2520, file: !95, line: 69, baseType: !460, size: 128, align: 64, offset: 512)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2520, file: !95, line: 70, baseType: !2531, size: 128, offset: 640)
!2531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2532, size: 128, elements: !2420)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !95, line: 54, size: 128, elements: !2533)
!2533 = !{!2534, !2535}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2532, file: !95, line: 55, baseType: !188, size: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2532, file: !95, line: 56, baseType: !2536, size: 64, offset: 64)
!2536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2537, size: 64)
!2537 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !95, line: 56, flags: DIFlagFwdDecl)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2273, file: !2274, line: 872, baseType: !2539, size: 512, offset: 6016)
!2539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 512, elements: !1375)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2273, file: !2274, line: 873, baseType: !170, size: 128, offset: 6528)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2273, file: !2274, line: 874, baseType: !170, size: 128, offset: 6656)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2273, file: !2274, line: 876, baseType: !2543, size: 64, offset: 6784)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2545, line: 26, size: 192, elements: !2546)
!2545 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2546 = !{!2547, !2548}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2544, file: !2545, line: 27, baseType: !7, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2544, file: !2545, line: 28, baseType: !2549, size: 128, offset: 64)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2550, line: 43, size: 128, elements: !2551)
!2550 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2551 = !{!2552, !2553}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2549, file: !2550, line: 44, baseType: !245)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2549, file: !2550, line: 45, baseType: !170, size: 128)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2273, file: !2274, line: 879, baseType: !809, size: 64, offset: 6848)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2273, file: !2274, line: 882, baseType: !809, size: 64, offset: 6912)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2273, file: !2274, line: 884, baseType: !512, size: 64, offset: 6976)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2273, file: !2274, line: 885, baseType: !512, size: 64, offset: 7040)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2273, file: !2274, line: 890, baseType: !512, size: 64, offset: 7104)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2273, file: !2274, line: 891, baseType: !2560, size: 128, offset: 7168)
!2560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2274, line: 242, size: 128, elements: !2561)
!2561 = !{!2562, !2563, !2564}
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2560, file: !2274, line: 244, baseType: !512, size: 64)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2560, file: !2274, line: 245, baseType: !512, size: 64, offset: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2560, file: !2274, line: 246, baseType: !245, offset: 128)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2273, file: !2274, line: 900, baseType: !197, size: 64, offset: 7296)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2273, file: !2274, line: 901, baseType: !197, size: 64, offset: 7360)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2273, file: !2274, line: 904, baseType: !512, size: 64, offset: 7424)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2273, file: !2274, line: 907, baseType: !512, size: 64, offset: 7488)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2273, file: !2274, line: 910, baseType: !197, size: 64, offset: 7552)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2273, file: !2274, line: 911, baseType: !197, size: 64, offset: 7616)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2273, file: !2274, line: 914, baseType: !2572, size: 640, offset: 7680)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2573, line: 123, size: 640, elements: !2574)
!2573 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2574 = !{!2575, !2581, !2582}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2572, file: !2573, line: 124, baseType: !2576, size: 576)
!2576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2577, size: 576, elements: !371)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2573, line: 108, size: 192, elements: !2578)
!2578 = !{!2579, !2580}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2577, file: !2573, line: 109, baseType: !512, size: 64)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2577, file: !2573, line: 110, baseType: !2394, size: 128, offset: 64)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2572, file: !2573, line: 125, baseType: !7, size: 32, offset: 576)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2572, file: !2573, line: 126, baseType: !7, size: 32, offset: 608)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2273, file: !2274, line: 917, baseType: !2584, size: 192, offset: 8320)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2573, line: 134, size: 192, elements: !2585)
!2585 = !{!2586, !2587}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2584, file: !2573, line: 135, baseType: !460, size: 128, align: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2584, file: !2573, line: 136, baseType: !7, size: 32, offset: 128)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2273, file: !2274, line: 923, baseType: !2589, size: 64, offset: 8512)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2591)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2592, line: 111, size: 1280, elements: !2593)
!2592 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2593 = !{!2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2611, !2612, !2613, !2614, !2615, !2616, !2723, !2724, !2725, !2726, !2752, !2895, !2905}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2591, file: !2592, line: 112, baseType: !184, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2591, file: !2592, line: 120, baseType: !526, size: 32, offset: 32)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2591, file: !2592, line: 121, baseType: !534, size: 32, offset: 64)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2591, file: !2592, line: 122, baseType: !526, size: 32, offset: 96)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2591, file: !2592, line: 123, baseType: !534, size: 32, offset: 128)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2591, file: !2592, line: 124, baseType: !526, size: 32, offset: 160)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2591, file: !2592, line: 125, baseType: !534, size: 32, offset: 192)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2591, file: !2592, line: 126, baseType: !526, size: 32, offset: 224)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2591, file: !2592, line: 127, baseType: !534, size: 32, offset: 256)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2591, file: !2592, line: 128, baseType: !7, size: 32, offset: 288)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2591, file: !2592, line: 129, baseType: !2605, size: 64, offset: 320)
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2606, line: 26, baseType: !2607)
!2606 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2606, line: 24, size: 64, elements: !2608)
!2608 = !{!2609}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2607, file: !2606, line: 25, baseType: !2610, size: 64)
!2610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 64, elements: !1467)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2591, file: !2592, line: 130, baseType: !2605, size: 64, offset: 384)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2591, file: !2592, line: 131, baseType: !2605, size: 64, offset: 448)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2591, file: !2592, line: 132, baseType: !2605, size: 64, offset: 512)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2591, file: !2592, line: 133, baseType: !2605, size: 64, offset: 576)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2591, file: !2592, line: 135, baseType: !518, size: 8, offset: 640)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2591, file: !2592, line: 137, baseType: !2617, size: 64, offset: 704)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 64)
!2618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2619, line: 189, size: 1664, elements: !2620)
!2619 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2620 = !{!2621, !2622, !2625, !2630, !2631, !2634, !2635, !2640, !2641, !2642, !2643, !2645, !2646, !2647, !2648, !2649, !2687, !2708}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2618, file: !2619, line: 190, baseType: !180, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2618, file: !2619, line: 191, baseType: !2623, size: 32, offset: 32)
!2623 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2619, line: 28, baseType: !2624)
!2624 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !164, line: 98, baseType: !2493)
!2625 = !DIDerivedType(tag: DW_TAG_member, scope: !2618, file: !2619, line: 192, baseType: !2626, size: 192, offset: 64)
!2626 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2618, file: !2619, line: 192, size: 192, elements: !2627)
!2627 = !{!2628, !2629}
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2626, file: !2619, line: 193, baseType: !170, size: 128)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2626, file: !2619, line: 194, baseType: !896, size: 192, align: 64)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2618, file: !2619, line: 199, baseType: !230, size: 256, offset: 256)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2618, file: !2619, line: 200, baseType: !2632, size: 64, offset: 512)
!2632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2633, size: 64)
!2633 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2619, line: 200, flags: DIFlagFwdDecl)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2618, file: !2619, line: 201, baseType: !165, size: 64, offset: 576)
!2635 = !DIDerivedType(tag: DW_TAG_member, scope: !2618, file: !2619, line: 202, baseType: !2636, size: 64, offset: 640)
!2636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2618, file: !2619, line: 202, size: 64, elements: !2637)
!2637 = !{!2638, !2639}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2636, file: !2619, line: 203, baseType: !627, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2636, file: !2619, line: 204, baseType: !627, size: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2618, file: !2619, line: 206, baseType: !627, size: 64, offset: 704)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2618, file: !2619, line: 207, baseType: !526, size: 32, offset: 768)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2618, file: !2619, line: 208, baseType: !534, size: 32, offset: 800)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2618, file: !2619, line: 209, baseType: !2644, size: 32, offset: 832)
!2644 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2619, line: 31, baseType: !646)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2618, file: !2619, line: 210, baseType: !412, size: 16, offset: 864)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2618, file: !2619, line: 211, baseType: !412, size: 16, offset: 880)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2618, file: !2619, line: 215, baseType: !1051, size: 16, offset: 896)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2618, file: !2619, line: 222, baseType: !197, size: 64, offset: 960)
!2649 = !DIDerivedType(tag: DW_TAG_member, scope: !2618, file: !2619, line: 239, baseType: !2650, size: 320, offset: 1024)
!2650 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2618, file: !2619, line: 239, size: 320, elements: !2651)
!2651 = !{!2652, !2679}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2650, file: !2619, line: 240, baseType: !2653, size: 320)
!2653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2619, line: 108, size: 320, elements: !2654)
!2654 = !{!2655, !2656, !2668, !2671, !2678}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2653, file: !2619, line: 110, baseType: !197, size: 64)
!2656 = !DIDerivedType(tag: DW_TAG_member, scope: !2653, file: !2619, line: 111, baseType: !2657, size: 64, offset: 64)
!2657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2653, file: !2619, line: 111, size: 64, elements: !2658)
!2658 = !{!2659, !2667}
!2659 = !DIDerivedType(tag: DW_TAG_member, scope: !2657, file: !2619, line: 112, baseType: !2660, size: 64)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2657, file: !2619, line: 112, size: 64, elements: !2661)
!2661 = !{!2662, !2663}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2660, file: !2619, line: 114, baseType: !987, size: 16)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2660, file: !2619, line: 115, baseType: !2664, size: 48, offset: 16)
!2664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 48, elements: !2665)
!2665 = !{!2666}
!2666 = !DISubrange(count: 6)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2657, file: !2619, line: 121, baseType: !197, size: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2653, file: !2619, line: 123, baseType: !2669, size: 64, offset: 128)
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 64)
!2670 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2619, line: 96, flags: DIFlagFwdDecl)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2653, file: !2619, line: 124, baseType: !2672, size: 64, offset: 192)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2619, line: 102, size: 192, elements: !2674)
!2674 = !{!2675, !2676, !2677}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2673, file: !2619, line: 103, baseType: !460, size: 128, align: 64)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2673, file: !2619, line: 104, baseType: !180, size: 32, offset: 128)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2673, file: !2619, line: 105, baseType: !190, size: 8, offset: 160)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2653, file: !2619, line: 125, baseType: !289, size: 64, offset: 256)
!2679 = !DIDerivedType(tag: DW_TAG_member, scope: !2650, file: !2619, line: 241, baseType: !2680, size: 320)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2650, file: !2619, line: 241, size: 320, elements: !2681)
!2681 = !{!2682, !2683, !2684, !2685, !2686}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2680, file: !2619, line: 242, baseType: !197, size: 64)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2680, file: !2619, line: 243, baseType: !197, size: 64, offset: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2680, file: !2619, line: 244, baseType: !2669, size: 64, offset: 128)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2680, file: !2619, line: 245, baseType: !2672, size: 64, offset: 192)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2680, file: !2619, line: 246, baseType: !370, size: 64, offset: 256)
!2687 = !DIDerivedType(tag: DW_TAG_member, scope: !2618, file: !2619, line: 254, baseType: !2688, size: 256, offset: 1344)
!2688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2618, file: !2619, line: 254, size: 256, elements: !2689)
!2689 = !{!2690, !2696}
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2688, file: !2619, line: 255, baseType: !2691, size: 256)
!2691 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2619, line: 128, size: 256, elements: !2692)
!2692 = !{!2693, !2694}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2691, file: !2619, line: 129, baseType: !165, size: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2691, file: !2619, line: 130, baseType: !2695, size: 256)
!2695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 256, elements: !1375)
!2696 = !DIDerivedType(tag: DW_TAG_member, scope: !2688, file: !2619, line: 256, baseType: !2697, size: 256)
!2697 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2688, file: !2619, line: 256, size: 256, elements: !2698)
!2698 = !{!2699, !2700}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2697, file: !2619, line: 258, baseType: !170, size: 128)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2697, file: !2619, line: 259, baseType: !2701, size: 128, offset: 128)
!2701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2702, line: 22, size: 128, elements: !2703)
!2702 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2703 = !{!2704, !2707}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2701, file: !2702, line: 23, baseType: !2705, size: 64)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 64)
!2706 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2702, line: 23, flags: DIFlagFwdDecl)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2701, file: !2702, line: 24, baseType: !197, size: 64, offset: 64)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2618, file: !2619, line: 274, baseType: !2709, size: 64, offset: 1600)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 64)
!2710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2619, line: 170, size: 192, elements: !2711)
!2711 = !{!2712, !2721, !2722}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2710, file: !2619, line: 171, baseType: !2713, size: 64)
!2713 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2619, line: 165, baseType: !2714)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{!188, !2617, !2717, !2719, !2617}
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2718, size: 64)
!2718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2670)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2691)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2710, file: !2619, line: 172, baseType: !2617, size: 64, offset: 64)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2710, file: !2619, line: 173, baseType: !2669, size: 64, offset: 128)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2591, file: !2592, line: 138, baseType: !2617, size: 64, offset: 768)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2591, file: !2592, line: 139, baseType: !2617, size: 64, offset: 832)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2591, file: !2592, line: 140, baseType: !2617, size: 64, offset: 896)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2591, file: !2592, line: 145, baseType: !2727, size: 64, offset: 960)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2729, line: 13, size: 896, elements: !2730)
!2729 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2730 = !{!2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2728, file: !2729, line: 14, baseType: !180, size: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2728, file: !2729, line: 15, baseType: !184, size: 32, offset: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2728, file: !2729, line: 16, baseType: !184, size: 32, offset: 64)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2728, file: !2729, line: 21, baseType: !234, size: 64, offset: 128)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2728, file: !2729, line: 27, baseType: !197, size: 64, offset: 192)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2728, file: !2729, line: 28, baseType: !197, size: 64, offset: 256)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2728, file: !2729, line: 29, baseType: !234, size: 64, offset: 320)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2728, file: !2729, line: 32, baseType: !729, size: 128, offset: 384)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2728, file: !2729, line: 33, baseType: !526, size: 32, offset: 512)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2728, file: !2729, line: 37, baseType: !234, size: 64, offset: 576)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2728, file: !2729, line: 44, baseType: !2742, size: 256, offset: 640)
!2742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2743, line: 15, size: 256, elements: !2744)
!2743 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2744 = !{!2745, !2746, !2747, !2748, !2749, !2750, !2751}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2742, file: !2743, line: 16, baseType: !245)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2742, file: !2743, line: 18, baseType: !188, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2742, file: !2743, line: 19, baseType: !188, size: 32, offset: 32)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2742, file: !2743, line: 20, baseType: !188, size: 32, offset: 64)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2742, file: !2743, line: 21, baseType: !188, size: 32, offset: 96)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2742, file: !2743, line: 22, baseType: !197, size: 64, offset: 128)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2742, file: !2743, line: 23, baseType: !197, size: 64, offset: 192)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2591, file: !2592, line: 146, baseType: !2753, size: 64, offset: 1024)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2755, line: 56, size: 4160, elements: !2756)
!2755 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2756 = !{!2757, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2794, !2795, !2796, !2797, !2798, !2799, !2880, !2881, !2893}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2754, file: !2755, line: 57, baseType: !2758, size: 576)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2755, line: 23, size: 576, elements: !2759)
!2759 = !{!2760, !2761}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2758, file: !2755, line: 24, baseType: !212, size: 32)
!2761 = !DIDerivedType(tag: DW_TAG_member, scope: !2758, file: !2755, line: 25, baseType: !2762, size: 512, offset: 64)
!2762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2758, file: !2755, line: 25, size: 512, elements: !2763)
!2763 = !{!2764, !2771}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2762, file: !2755, line: 26, baseType: !2765, size: 480)
!2765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2766, size: 480, elements: !1936)
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2755, line: 17, size: 96, elements: !2767)
!2767 = !{!2768, !2769, !2770}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2766, file: !2755, line: 18, baseType: !212, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2766, file: !2755, line: 19, baseType: !212, size: 32, offset: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2766, file: !2755, line: 20, baseType: !212, size: 32, offset: 64)
!2771 = !DIDerivedType(tag: DW_TAG_member, scope: !2762, file: !2755, line: 27, baseType: !2772, size: 128)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2762, file: !2755, line: 27, size: 128, elements: !2773)
!2773 = !{!2774, !2776}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2772, file: !2755, line: 28, baseType: !2775, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2772, file: !2755, line: 29, baseType: !2775, size: 64, offset: 64)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2754, file: !2755, line: 58, baseType: !2758, size: 576, offset: 576)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2754, file: !2755, line: 59, baseType: !2758, size: 576, offset: 1152)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2754, file: !2755, line: 60, baseType: !184, size: 32, offset: 1728)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2754, file: !2755, line: 61, baseType: !2753, size: 64, offset: 1792)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2754, file: !2755, line: 62, baseType: !188, size: 32, offset: 1856)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2754, file: !2755, line: 63, baseType: !526, size: 32, offset: 1888)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2754, file: !2755, line: 64, baseType: !534, size: 32, offset: 1920)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2754, file: !2755, line: 65, baseType: !2785, size: 192, offset: 1984)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2786, line: 7, size: 192, elements: !2787)
!2786 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2787 = !{!2788, !2789, !2793}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2785, file: !2786, line: 8, baseType: !234, size: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2785, file: !2786, line: 9, baseType: !2790, size: 64, offset: 64)
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 64)
!2791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2792)
!2792 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2786, line: 5, flags: DIFlagFwdDecl)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2785, file: !2786, line: 10, baseType: !7, size: 32, offset: 128)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2754, file: !2755, line: 66, baseType: !197, size: 64, offset: 2176)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2754, file: !2755, line: 74, baseType: !170, size: 128, offset: 2240)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2754, file: !2755, line: 75, baseType: !2617, size: 64, offset: 2368)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2754, file: !2755, line: 76, baseType: !230, size: 256, offset: 2432)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2754, file: !2755, line: 83, baseType: !1161, size: 256, offset: 2688)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2754, file: !2755, line: 85, baseType: !2800, size: 768, offset: 2944)
!2800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2801, line: 156, size: 768, elements: !2802)
!2801 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2802 = !{!2803, !2808}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2800, file: !2801, line: 157, baseType: !2804, size: 64)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = !DISubroutineType(types: !2806)
!2806 = !{!188, !2807}
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2800, file: !2801, line: 158, baseType: !2809, size: 704, offset: 64)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2801, line: 150, size: 704, elements: !2810)
!2810 = !{!2811, !2879}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2809, file: !2801, line: 152, baseType: !2812, size: 640)
!2812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2801, line: 131, size: 640, elements: !2813)
!2813 = !{!2814, !2847, !2848, !2849, !2869, !2870, !2872, !2878}
!2814 = !DIDerivedType(tag: DW_TAG_member, scope: !2812, file: !2801, line: 132, baseType: !2815, size: 192)
!2815 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2812, file: !2801, line: 132, size: 192, elements: !2816)
!2816 = !{!2817, !2846}
!2817 = !DIDerivedType(tag: DW_TAG_member, scope: !2815, file: !2801, line: 133, baseType: !2818, size: 192)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2815, file: !2801, line: 133, size: 192, elements: !2819)
!2819 = !{!2820, !2843, !2844, !2845}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2818, file: !2801, line: 134, baseType: !2821, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 64)
!2822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2801, line: 112, size: 512, elements: !2823)
!2823 = !{!2824, !2825, !2826, !2827, !2828, !2829, !2835, !2841, !2842}
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2822, file: !2801, line: 113, baseType: !289, size: 64)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2822, file: !2801, line: 114, baseType: !165, size: 64, offset: 64)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2822, file: !2801, line: 115, baseType: !188, size: 32, offset: 128)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2822, file: !2801, line: 116, baseType: !411, size: 16, offset: 160)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2822, file: !2801, line: 117, baseType: !2821, size: 64, offset: 192)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2822, file: !2801, line: 118, baseType: !2830, size: 64, offset: 256)
!2830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2831, size: 64)
!2831 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2801, line: 47, baseType: !2832)
!2832 = !DISubroutineType(types: !2833)
!2833 = !{!188, !2821, !188, !165, !2834, !836}
!2834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2822, file: !2801, line: 119, baseType: !2836, size: 64, offset: 320)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2801, line: 94, size: 192, elements: !2838)
!2838 = !{!2839, !2840}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2837, file: !2801, line: 95, baseType: !184, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2837, file: !2801, line: 96, baseType: !1297, size: 128, offset: 64)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2822, file: !2801, line: 120, baseType: !165, size: 64, offset: 384)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2822, file: !2801, line: 121, baseType: !165, size: 64, offset: 448)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2818, file: !2801, line: 135, baseType: !188, size: 32, offset: 64)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2818, file: !2801, line: 136, baseType: !188, size: 32, offset: 96)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2818, file: !2801, line: 137, baseType: !188, size: 32, offset: 128)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2815, file: !2801, line: 139, baseType: !460, size: 128, align: 64)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2812, file: !2801, line: 141, baseType: !2543, size: 64, offset: 192)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2812, file: !2801, line: 142, baseType: !2821, size: 64, offset: 256)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2812, file: !2801, line: 143, baseType: !2850, size: 64, offset: 320)
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64)
!2851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2801, line: 161, size: 960, elements: !2852)
!2852 = !{!2853, !2854, !2858, !2865}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2851, file: !2801, line: 162, baseType: !2800, size: 768)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2851, file: !2801, line: 163, baseType: !2855, size: 64, offset: 768)
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 64)
!2856 = !DISubroutineType(types: !2857)
!2857 = !{!2807, !2850}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2851, file: !2801, line: 164, baseType: !2859, size: 64, offset: 832)
!2859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2860, size: 64)
!2860 = !DISubroutineType(types: !2861)
!2861 = !{null, !2862, !2821, !2863, !2864}
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2851, file: !2801, line: 167, baseType: !2866, size: 64, offset: 896)
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 64)
!2867 = !DISubroutineType(types: !2868)
!2868 = !{!188, !2862, !2821}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2812, file: !2801, line: 144, baseType: !2807, size: 64, offset: 384)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2812, file: !2801, line: 145, baseType: !2871, size: 64, offset: 448)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2812, file: !2801, line: 146, baseType: !2873, size: 64, offset: 512)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2801, line: 124, size: 256, elements: !2875)
!2875 = !{!2876, !2877}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2874, file: !2801, line: 125, baseType: !896, size: 192, align: 64)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2874, file: !2801, line: 126, baseType: !2862, size: 64, offset: 192)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2812, file: !2801, line: 147, baseType: !725, size: 64, offset: 576)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2809, file: !2801, line: 153, baseType: !892, size: 64, offset: 640)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2754, file: !2755, line: 86, baseType: !2862, size: 64, offset: 3712)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2754, file: !2755, line: 88, baseType: !2882, size: 64, offset: 3776)
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2755, line: 92, size: 576, elements: !2884)
!2884 = !{!2885, !2886, !2887, !2888, !2889}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2883, file: !2755, line: 93, baseType: !729, size: 128)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2883, file: !2755, line: 94, baseType: !2753, size: 64, offset: 128)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2883, file: !2755, line: 95, baseType: !526, size: 32, offset: 192)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2883, file: !2755, line: 96, baseType: !188, size: 32, offset: 224)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2883, file: !2755, line: 97, baseType: !2890, size: 320, offset: 256)
!2890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 320, elements: !2891)
!2891 = !{!2892}
!2892 = !DISubrange(count: 10)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2754, file: !2755, line: 89, baseType: !2894, size: 320, offset: 3840)
!2894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !188, size: 320, elements: !2891)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2591, file: !2592, line: 147, baseType: !2896, size: 64, offset: 1088)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2592, line: 25, size: 64, elements: !2898)
!2898 = !{!2899, !2900, !2901}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2897, file: !2592, line: 26, baseType: !184, size: 32)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2897, file: !2592, line: 27, baseType: !188, size: 32, offset: 32)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2897, file: !2592, line: 28, baseType: !2902, offset: 64)
!2902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !534, elements: !2903)
!2903 = !{!2904}
!2904 = !DISubrange(count: 0)
!2905 = !DIDerivedType(tag: DW_TAG_member, scope: !2591, file: !2592, line: 149, baseType: !2906, size: 128, offset: 1152)
!2906 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2591, file: !2592, line: 149, size: 128, elements: !2907)
!2907 = !{!2908, !2909}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2906, file: !2592, line: 150, baseType: !188, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2906, file: !2592, line: 151, baseType: !460, size: 128, align: 64)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2273, file: !2274, line: 926, baseType: !2589, size: 64, offset: 8576)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2273, file: !2274, line: 929, baseType: !2589, size: 64, offset: 8640)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2273, file: !2274, line: 933, baseType: !2617, size: 64, offset: 8704)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2273, file: !2274, line: 943, baseType: !2914, size: 128, offset: 8768)
!2914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 128, elements: !1808)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2273, file: !2274, line: 945, baseType: !2916, size: 64, offset: 8896)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 64)
!2917 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2274, line: 49, flags: DIFlagFwdDecl)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2273, file: !2274, line: 956, baseType: !2919, size: 64, offset: 8960)
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 64)
!2920 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2274, line: 45, flags: DIFlagFwdDecl)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2273, file: !2274, line: 959, baseType: !2922, size: 64, offset: 9024)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 64)
!2923 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2274, line: 959, flags: DIFlagFwdDecl)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2273, file: !2274, line: 962, baseType: !2925, size: 64, offset: 9088)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64)
!2926 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2274, line: 66, flags: DIFlagFwdDecl)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2273, file: !2274, line: 966, baseType: !2928, size: 64, offset: 9152)
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 64)
!2929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2930, line: 31, size: 576, elements: !2931)
!2930 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2931 = !{!2932, !2933, !2936, !2939, !2942, !2943, !2946, !2949, !2950}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2929, file: !2930, line: 32, baseType: !184, size: 32)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2929, file: !2930, line: 33, baseType: !2934, size: 64, offset: 64)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2930, line: 9, flags: DIFlagFwdDecl)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2929, file: !2930, line: 34, baseType: !2937, size: 64, offset: 128)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2930, line: 10, flags: DIFlagFwdDecl)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2929, file: !2930, line: 35, baseType: !2940, size: 64, offset: 192)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2930, line: 8, flags: DIFlagFwdDecl)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2929, file: !2930, line: 36, baseType: !2536, size: 64, offset: 256)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2929, file: !2930, line: 37, baseType: !2944, size: 64, offset: 320)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2619, line: 34, flags: DIFlagFwdDecl)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2929, file: !2930, line: 38, baseType: !2947, size: 64, offset: 384)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 64)
!2948 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2930, line: 38, flags: DIFlagFwdDecl)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2929, file: !2930, line: 39, baseType: !2947, size: 64, offset: 448)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2929, file: !2930, line: 40, baseType: !2951, size: 64, offset: 512)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2952, size: 64)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !2953, line: 856, size: 448, elements: !2954)
!2953 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!2954 = !{!2955, !2956, !2957, !2958, !2959}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2952, file: !2953, line: 857, baseType: !180, size: 32)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2952, file: !2953, line: 858, baseType: !2785, size: 192, offset: 64)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2952, file: !2953, line: 859, baseType: !2753, size: 64, offset: 256)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2952, file: !2953, line: 860, baseType: !2882, size: 64, offset: 320)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !2952, file: !2953, line: 861, baseType: !2960, size: 64, offset: 384)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !2962, line: 16, flags: DIFlagFwdDecl)
!2962 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2273, file: !2274, line: 969, baseType: !2964, size: 64, offset: 9216)
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2965, size: 64)
!2965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2966, line: 82, size: 7296, elements: !2967)
!2966 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2967 = !{!2968, !2969, !2970, !2971, !2972, !2973, !2974, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !3003, !3012, !3013, !3015, !3016, !3017, !3020, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3050, !3051, !3058, !3059, !3060, !3061, !3062, !3063}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2965, file: !2966, line: 83, baseType: !180, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2965, file: !2966, line: 84, baseType: !184, size: 32, offset: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2965, file: !2966, line: 85, baseType: !188, size: 32, offset: 64)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2965, file: !2966, line: 86, baseType: !170, size: 128, offset: 128)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2965, file: !2966, line: 88, baseType: !1297, size: 128, offset: 256)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2965, file: !2966, line: 91, baseType: !2272, size: 64, offset: 384)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2965, file: !2966, line: 94, baseType: !2975, size: 192, offset: 448)
!2975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2976, line: 30, size: 192, elements: !2977)
!2976 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2977 = !{!2978, !2979}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2975, file: !2976, line: 31, baseType: !170, size: 128)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2975, file: !2976, line: 32, baseType: !2980, size: 64, offset: 128)
!2980 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2981, line: 25, baseType: !2982)
!2981 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2981, line: 23, size: 64, elements: !2983)
!2983 = !{!2984}
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2982, file: !2981, line: 24, baseType: !2419, size: 64)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2965, file: !2966, line: 97, baseType: !725, size: 64, offset: 640)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2965, file: !2966, line: 100, baseType: !188, size: 32, offset: 704)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2965, file: !2966, line: 106, baseType: !188, size: 32, offset: 736)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2965, file: !2966, line: 107, baseType: !2272, size: 64, offset: 768)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2965, file: !2966, line: 110, baseType: !188, size: 32, offset: 832)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2965, file: !2966, line: 111, baseType: !7, size: 32, offset: 864)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2965, file: !2966, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2965, file: !2966, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2965, file: !2966, line: 128, baseType: !188, size: 32, offset: 928)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2965, file: !2966, line: 129, baseType: !170, size: 128, offset: 960)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2965, file: !2966, line: 132, baseType: !2343, size: 512, offset: 1088)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2965, file: !2966, line: 133, baseType: !2351, size: 64, offset: 1600)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2965, file: !2966, line: 140, baseType: !2998, size: 256, offset: 1664)
!2998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2999, size: 256, elements: !1467)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2966, line: 38, size: 128, elements: !3000)
!3000 = !{!3001, !3002}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2999, file: !2966, line: 39, baseType: !512, size: 64)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2999, file: !2966, line: 40, baseType: !512, size: 64, offset: 64)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2965, file: !2966, line: 146, baseType: !3004, size: 192, offset: 1920)
!3004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2966, line: 66, size: 192, elements: !3005)
!3005 = !{!3006}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3004, file: !2966, line: 67, baseType: !3007, size: 192)
!3007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2966, line: 47, size: 192, elements: !3008)
!3008 = !{!3009, !3010, !3011}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3007, file: !2966, line: 48, baseType: !236, size: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3007, file: !2966, line: 49, baseType: !236, size: 64, offset: 64)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3007, file: !2966, line: 50, baseType: !236, size: 64, offset: 128)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2965, file: !2966, line: 150, baseType: !2572, size: 640, offset: 2112)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2965, file: !2966, line: 153, baseType: !3014, size: 256, offset: 2752)
!3014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2519, size: 256, elements: !1375)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2965, file: !2966, line: 159, baseType: !2519, size: 64, offset: 3008)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2965, file: !2966, line: 162, baseType: !188, size: 32, offset: 3072)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2965, file: !2966, line: 164, baseType: !3018, size: 64, offset: 3136)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2966, line: 164, flags: DIFlagFwdDecl)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2965, file: !2966, line: 175, baseType: !3021, size: 32, offset: 3200)
!3021 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !483, line: 805, baseType: !3022)
!3022 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !483, line: 798, size: 32, elements: !3023)
!3023 = !{!3024, !3025}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3022, file: !483, line: 803, baseType: !482, size: 32)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3022, file: !483, line: 804, baseType: !275, offset: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2965, file: !2966, line: 176, baseType: !512, size: 64, offset: 3264)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2965, file: !2966, line: 176, baseType: !512, size: 64, offset: 3328)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2965, file: !2966, line: 176, baseType: !512, size: 64, offset: 3392)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2965, file: !2966, line: 176, baseType: !512, size: 64, offset: 3456)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2965, file: !2966, line: 177, baseType: !512, size: 64, offset: 3520)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2965, file: !2966, line: 178, baseType: !512, size: 64, offset: 3584)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2965, file: !2966, line: 179, baseType: !2560, size: 128, offset: 3648)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2965, file: !2966, line: 180, baseType: !197, size: 64, offset: 3776)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2965, file: !2966, line: 180, baseType: !197, size: 64, offset: 3840)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2965, file: !2966, line: 180, baseType: !197, size: 64, offset: 3904)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2965, file: !2966, line: 180, baseType: !197, size: 64, offset: 3968)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2965, file: !2966, line: 181, baseType: !197, size: 64, offset: 4032)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2965, file: !2966, line: 181, baseType: !197, size: 64, offset: 4096)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2965, file: !2966, line: 181, baseType: !197, size: 64, offset: 4160)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2965, file: !2966, line: 181, baseType: !197, size: 64, offset: 4224)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2965, file: !2966, line: 182, baseType: !197, size: 64, offset: 4288)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2965, file: !2966, line: 182, baseType: !197, size: 64, offset: 4352)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2965, file: !2966, line: 182, baseType: !197, size: 64, offset: 4416)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2965, file: !2966, line: 182, baseType: !197, size: 64, offset: 4480)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2965, file: !2966, line: 183, baseType: !197, size: 64, offset: 4544)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2965, file: !2966, line: 183, baseType: !197, size: 64, offset: 4608)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2965, file: !2966, line: 184, baseType: !3048, offset: 4672)
!3048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3049, line: 12, elements: !253)
!3049 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2965, file: !2966, line: 192, baseType: !514, size: 64, offset: 4672)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2965, file: !2966, line: 203, baseType: !3052, size: 2048, offset: 4736)
!3052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3053, size: 2048, elements: !1808)
!3053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3054, line: 43, size: 128, elements: !3055)
!3054 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3055 = !{!3056, !3057}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3053, file: !3054, line: 44, baseType: !419, size: 64)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3053, file: !3054, line: 45, baseType: !419, size: 64, offset: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2965, file: !2966, line: 220, baseType: !190, size: 8, offset: 6784)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2965, file: !2966, line: 221, baseType: !1051, size: 16, offset: 6800)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2965, file: !2966, line: 222, baseType: !1051, size: 16, offset: 6816)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2965, file: !2966, line: 224, baseType: !2039, size: 64, offset: 6848)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2965, file: !2966, line: 227, baseType: !270, size: 192, offset: 6912)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2965, file: !2966, line: 233, baseType: !270, size: 192, offset: 7104)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2273, file: !2274, line: 970, baseType: !3065, size: 64, offset: 9280)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 64)
!3066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2966, line: 20, size: 16576, elements: !3067)
!3067 = !{!3068, !3069, !3070, !3071}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3066, file: !2966, line: 21, baseType: !275)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3066, file: !2966, line: 22, baseType: !180, size: 32)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3066, file: !2966, line: 23, baseType: !1297, size: 128, offset: 64)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3066, file: !2966, line: 24, baseType: !3072, size: 16384, offset: 192)
!3072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3073, size: 16384, elements: !375)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2976, line: 49, size: 256, elements: !3074)
!3074 = !{!3075}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3073, file: !2976, line: 50, baseType: !3076, size: 256)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2976, line: 35, size: 256, elements: !3077)
!3077 = !{!3078, !3085, !3086, !3092}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3076, file: !2976, line: 37, baseType: !3079, size: 64)
!3079 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3080, line: 19, baseType: !3081)
!3080 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3080, line: 18, baseType: !3083)
!3083 = !DISubroutineType(types: !3084)
!3084 = !{null, !188}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3076, file: !2976, line: 38, baseType: !197, size: 64, offset: 64)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3076, file: !2976, line: 44, baseType: !3087, size: 64, offset: 128)
!3087 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3080, line: 22, baseType: !3088)
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 64)
!3089 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3080, line: 21, baseType: !3090)
!3090 = !DISubroutineType(types: !3091)
!3091 = !{null}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3076, file: !2976, line: 46, baseType: !2980, size: 64, offset: 192)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2273, file: !2274, line: 971, baseType: !2980, size: 64, offset: 9344)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2273, file: !2274, line: 972, baseType: !2980, size: 64, offset: 9408)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2273, file: !2274, line: 974, baseType: !2980, size: 64, offset: 9472)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2273, file: !2274, line: 975, baseType: !2975, size: 192, offset: 9536)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2273, file: !2274, line: 976, baseType: !197, size: 64, offset: 9728)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2273, file: !2274, line: 977, baseType: !417, size: 64, offset: 9792)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2273, file: !2274, line: 978, baseType: !7, size: 32, offset: 9856)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2273, file: !2274, line: 980, baseType: !463, size: 64, offset: 9920)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2273, file: !2274, line: 989, baseType: !3102, size: 128, offset: 9984)
!3102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3103, line: 35, size: 128, elements: !3104)
!3103 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3104 = !{!3105, !3106, !3107}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3102, file: !3103, line: 36, baseType: !188, size: 32)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3102, file: !3103, line: 37, baseType: !184, size: 32, offset: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3102, file: !3103, line: 38, baseType: !3108, size: 64, offset: 64)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 64)
!3109 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3103, line: 23, flags: DIFlagFwdDecl)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2273, file: !2274, line: 992, baseType: !512, size: 64, offset: 10112)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2273, file: !2274, line: 993, baseType: !512, size: 64, offset: 10176)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2273, file: !2274, line: 996, baseType: !275, offset: 10240)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2273, file: !2274, line: 999, baseType: !245, offset: 10240)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2273, file: !2274, line: 1001, baseType: !3115, size: 64, offset: 10240)
!3115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2274, line: 636, size: 64, elements: !3116)
!3116 = !{!3117}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3115, file: !2274, line: 637, baseType: !3118, size: 64)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2273, file: !2274, line: 1005, baseType: !888, size: 128, offset: 10304)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2273, file: !2274, line: 1007, baseType: !2272, size: 64, offset: 10432)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2273, file: !2274, line: 1009, baseType: !3122, size: 64, offset: 10496)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 64)
!3123 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2274, line: 1009, flags: DIFlagFwdDecl)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2273, file: !2274, line: 1043, baseType: !165, size: 64, offset: 10560)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2273, file: !2274, line: 1046, baseType: !3126, size: 64, offset: 10624)
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2273, file: !2274, line: 1050, baseType: !3128, size: 64, offset: 10688)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 64)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !19, line: 1236, size: 320, elements: !3130)
!3130 = !{!3131, !3132, !3133, !3134, !3135}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !3129, file: !19, line: 1237, baseType: !170, size: 128)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !3129, file: !19, line: 1238, baseType: !170, size: 128, offset: 128)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !3129, file: !19, line: 1239, baseType: !412, size: 16, offset: 256)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !3129, file: !19, line: 1240, baseType: !190, size: 8, offset: 272)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !3129, file: !19, line: 1241, baseType: !190, size: 8, offset: 280)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2273, file: !2274, line: 1054, baseType: !3137, size: 64, offset: 10752)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1047, line: 131, size: 64, elements: !3139)
!3139 = !{!3140}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "reclaimed_slab", scope: !3138, file: !1047, line: 132, baseType: !197, size: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2273, file: !2274, line: 1056, baseType: !1666, size: 64, offset: 10816)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2273, file: !2274, line: 1058, baseType: !1442, size: 64, offset: 10880)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2273, file: !2274, line: 1061, baseType: !3144, size: 64, offset: 10944)
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 64)
!3145 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2274, line: 43, flags: DIFlagFwdDecl)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2273, file: !2274, line: 1064, baseType: !197, size: 64, offset: 11008)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2273, file: !2274, line: 1065, baseType: !3148, size: 64, offset: 11072)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2976, line: 14, baseType: !3150)
!3150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2976, line: 12, size: 384, elements: !3151)
!3151 = !{!3152}
!3152 = !DIDerivedType(tag: DW_TAG_member, scope: !3150, file: !2976, line: 13, baseType: !3153, size: 384)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3150, file: !2976, line: 13, size: 384, elements: !3154)
!3154 = !{!3155, !3156, !3157, !3158}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3153, file: !2976, line: 13, baseType: !188, size: 32)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3153, file: !2976, line: 13, baseType: !188, size: 32, offset: 32)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3153, file: !2976, line: 13, baseType: !188, size: 32, offset: 64)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3153, file: !2976, line: 13, baseType: !3159, size: 256, offset: 128)
!3159 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3160, line: 32, size: 256, elements: !3161)
!3160 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3161 = !{!3162, !3167, !3180, !3186, !3195, !3215, !3220}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3159, file: !3160, line: 37, baseType: !3163, size: 64)
!3163 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3159, file: !3160, line: 34, size: 64, elements: !3164)
!3164 = !{!3165, !3166}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3163, file: !3160, line: 35, baseType: !2508, size: 32)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3163, file: !3160, line: 36, baseType: !532, size: 32, offset: 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3159, file: !3160, line: 45, baseType: !3168, size: 192)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3159, file: !3160, line: 40, size: 192, elements: !3169)
!3169 = !{!3170, !3172, !3173, !3179}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3168, file: !3160, line: 41, baseType: !3171, size: 32)
!3171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !403, line: 95, baseType: !188)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3168, file: !3160, line: 42, baseType: !188, size: 32, offset: 32)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3168, file: !3160, line: 43, baseType: !3174, size: 64, offset: 64)
!3174 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3160, line: 11, baseType: !3175)
!3175 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3160, line: 8, size: 64, elements: !3176)
!3176 = !{!3177, !3178}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3175, file: !3160, line: 9, baseType: !188, size: 32)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3175, file: !3160, line: 10, baseType: !165, size: 64)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3168, file: !3160, line: 44, baseType: !188, size: 32, offset: 128)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3159, file: !3160, line: 52, baseType: !3181, size: 128)
!3181 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3159, file: !3160, line: 48, size: 128, elements: !3182)
!3182 = !{!3183, !3184, !3185}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3181, file: !3160, line: 49, baseType: !2508, size: 32)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3181, file: !3160, line: 50, baseType: !532, size: 32, offset: 32)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3181, file: !3160, line: 51, baseType: !3174, size: 64, offset: 64)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3159, file: !3160, line: 61, baseType: !3187, size: 256)
!3187 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3159, file: !3160, line: 55, size: 256, elements: !3188)
!3188 = !{!3189, !3190, !3191, !3192, !3194}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3187, file: !3160, line: 56, baseType: !2508, size: 32)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3187, file: !3160, line: 57, baseType: !532, size: 32, offset: 32)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3187, file: !3160, line: 58, baseType: !188, size: 32, offset: 64)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3187, file: !3160, line: 59, baseType: !3193, size: 64, offset: 128)
!3193 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !403, line: 94, baseType: !404)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3187, file: !3160, line: 60, baseType: !3193, size: 64, offset: 192)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3159, file: !3160, line: 95, baseType: !3196, size: 256)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3159, file: !3160, line: 64, size: 256, elements: !3197)
!3197 = !{!3198, !3199}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3196, file: !3160, line: 65, baseType: !165, size: 64)
!3199 = !DIDerivedType(tag: DW_TAG_member, scope: !3196, file: !3160, line: 77, baseType: !3200, size: 192, offset: 64)
!3200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3196, file: !3160, line: 77, size: 192, elements: !3201)
!3201 = !{!3202, !3203, !3210}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3200, file: !3160, line: 82, baseType: !1051, size: 16)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3200, file: !3160, line: 88, baseType: !3204, size: 192)
!3204 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3200, file: !3160, line: 84, size: 192, elements: !3205)
!3205 = !{!3206, !3208, !3209}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3204, file: !3160, line: 85, baseType: !3207, size: 64)
!3207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 64, elements: !2381)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3204, file: !3160, line: 86, baseType: !165, size: 64, offset: 64)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3204, file: !3160, line: 87, baseType: !165, size: 64, offset: 128)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3200, file: !3160, line: 93, baseType: !3211, size: 96)
!3211 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3200, file: !3160, line: 90, size: 96, elements: !3212)
!3212 = !{!3213, !3214}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3211, file: !3160, line: 91, baseType: !3207, size: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3211, file: !3160, line: 92, baseType: !214, size: 32, offset: 64)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3159, file: !3160, line: 101, baseType: !3216, size: 128)
!3216 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3159, file: !3160, line: 98, size: 128, elements: !3217)
!3217 = !{!3218, !3219}
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3216, file: !3160, line: 99, baseType: !405, size: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3216, file: !3160, line: 100, baseType: !188, size: 32, offset: 64)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3159, file: !3160, line: 108, baseType: !3221, size: 128)
!3221 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3159, file: !3160, line: 104, size: 128, elements: !3222)
!3222 = !{!3223, !3224, !3225}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3221, file: !3160, line: 105, baseType: !165, size: 64)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3221, file: !3160, line: 106, baseType: !188, size: 32, offset: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3221, file: !3160, line: 107, baseType: !7, size: 32, offset: 96)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2273, file: !2274, line: 1067, baseType: !3048, offset: 11136)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2273, file: !2274, line: 1099, baseType: !3228, size: 64, offset: 11136)
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 64)
!3229 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2274, line: 56, flags: DIFlagFwdDecl)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2273, file: !2274, line: 1103, baseType: !170, size: 128, offset: 11200)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2273, file: !2274, line: 1104, baseType: !3232, size: 64, offset: 11328)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 64)
!3233 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2274, line: 46, flags: DIFlagFwdDecl)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2273, file: !2274, line: 1105, baseType: !270, size: 192, offset: 11392)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2273, file: !2274, line: 1106, baseType: !7, size: 32, offset: 11584)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2273, file: !2274, line: 1109, baseType: !3237, size: 128, offset: 11648)
!3237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3238, size: 128, elements: !1467)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 64)
!3239 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2274, line: 51, flags: DIFlagFwdDecl)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2273, file: !2274, line: 1110, baseType: !270, size: 192, offset: 11776)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2273, file: !2274, line: 1111, baseType: !170, size: 128, offset: 11968)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2273, file: !2274, line: 1173, baseType: !3243, size: 64, offset: 12096)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3245, line: 62, size: 256, align: 256, elements: !3246)
!3245 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3246 = !{!3247, !3248, !3249, !3254}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3244, file: !3245, line: 75, baseType: !214, size: 32)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3244, file: !3245, line: 90, baseType: !214, size: 32, offset: 32)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3244, file: !3245, line: 124, baseType: !3250, size: 64, offset: 64)
!3250 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3244, file: !3245, line: 109, size: 64, elements: !3251)
!3251 = !{!3252, !3253}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3250, file: !3245, line: 110, baseType: !513, size: 64)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3250, file: !3245, line: 112, baseType: !513, size: 64)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3244, file: !3245, line: 144, baseType: !214, size: 32, offset: 128)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2273, file: !2274, line: 1174, baseType: !212, size: 32, offset: 12160)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2273, file: !2274, line: 1179, baseType: !197, size: 64, offset: 12224)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2273, file: !2274, line: 1182, baseType: !3258, size: 128, offset: 12288)
!3258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2216, line: 76, size: 128, elements: !3259)
!3259 = !{!3260, !3265, !3266}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3258, file: !2216, line: 85, baseType: !3261, size: 64)
!3261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3262, line: 7, size: 64, elements: !3263)
!3262 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3263 = !{!3264}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3261, file: !3262, line: 12, baseType: !2416, size: 64)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3258, file: !2216, line: 88, baseType: !190, size: 8, offset: 64)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3258, file: !2216, line: 95, baseType: !190, size: 8, offset: 72)
!3267 = !DIDerivedType(tag: DW_TAG_member, scope: !2273, file: !2274, line: 1184, baseType: !3268, size: 128, offset: 12416)
!3268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2273, file: !2274, line: 1184, size: 128, elements: !3269)
!3269 = !{!3270, !3271}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3268, file: !2274, line: 1185, baseType: !180, size: 32)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3268, file: !2274, line: 1186, baseType: !460, size: 128, align: 64)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2273, file: !2274, line: 1190, baseType: !3273, size: 64, offset: 12544)
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3274, size: 64)
!3274 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !2274, line: 53, flags: DIFlagFwdDecl)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2273, file: !2274, line: 1192, baseType: !3276, size: 128, offset: 12608)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2216, line: 64, size: 128, elements: !3277)
!3277 = !{!3278, !3279, !3280}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3276, file: !2216, line: 65, baseType: !861, size: 64)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3276, file: !2216, line: 67, baseType: !214, size: 32, offset: 64)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3276, file: !2216, line: 68, baseType: !214, size: 32, offset: 96)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2273, file: !2274, line: 1206, baseType: !188, size: 32, offset: 12736)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2273, file: !2274, line: 1207, baseType: !188, size: 32, offset: 12768)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2273, file: !2274, line: 1209, baseType: !197, size: 64, offset: 12800)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2273, file: !2274, line: 1219, baseType: !512, size: 64, offset: 12864)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2273, file: !2274, line: 1220, baseType: !512, size: 64, offset: 12928)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2273, file: !2274, line: 1317, baseType: !188, size: 32, offset: 12992)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2273, file: !2274, line: 1319, baseType: !2272, size: 64, offset: 13056)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2273, file: !2274, line: 1322, baseType: !3289, size: 64, offset: 13120)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 64)
!3290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3291, line: 56, size: 512, elements: !3292)
!3291 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3292 = !{!3293, !3294, !3295, !3296, !3297, !3298, !3299, !3301}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3290, file: !3291, line: 57, baseType: !3289, size: 64)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3290, file: !3291, line: 58, baseType: !165, size: 64, offset: 64)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3290, file: !3291, line: 59, baseType: !197, size: 64, offset: 128)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3290, file: !3291, line: 60, baseType: !197, size: 64, offset: 192)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3290, file: !3291, line: 61, baseType: !948, size: 64, offset: 256)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3290, file: !3291, line: 62, baseType: !7, size: 32, offset: 320)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3290, file: !3291, line: 63, baseType: !3300, size: 64, offset: 384)
!3300 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !164, line: 153, baseType: !512)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3290, file: !3291, line: 64, baseType: !324, size: 64, offset: 448)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2273, file: !2274, line: 1326, baseType: !180, size: 32, offset: 13184)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2273, file: !2274, line: 1342, baseType: !165, size: 64, offset: 13248)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2273, file: !2274, line: 1343, baseType: !513, size: 64, offset: 13312)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2273, file: !2274, line: 1344, baseType: !512, size: 64, offset: 13376)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2273, file: !2274, line: 1345, baseType: !513, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2273, file: !2274, line: 1346, baseType: !513, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2273, file: !2274, line: 1347, baseType: !513, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2273, file: !2274, line: 1348, baseType: !460, size: 128, align: 64, offset: 13504)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2273, file: !2274, line: 1358, baseType: !3311, size: 34816, offset: 13824)
!3311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3312, line: 485, size: 34816, elements: !3313)
!3312 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3313 = !{!3314, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3343, !3344, !3345, !3346, !3347, !3348, !3351, !3352, !3353}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3311, file: !3312, line: 487, baseType: !3315, size: 192)
!3315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3316, size: 192, elements: !371)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3317, line: 16, size: 64, elements: !3318)
!3317 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3318 = !{!3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331}
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3316, file: !3317, line: 17, baseType: !987, size: 16)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3316, file: !3317, line: 18, baseType: !987, size: 16, offset: 16)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3316, file: !3317, line: 19, baseType: !987, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3316, file: !3317, line: 19, baseType: !987, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3316, file: !3317, line: 19, baseType: !987, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3316, file: !3317, line: 19, baseType: !987, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3316, file: !3317, line: 19, baseType: !987, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3316, file: !3317, line: 20, baseType: !987, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3316, file: !3317, line: 20, baseType: !987, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3316, file: !3317, line: 20, baseType: !987, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3316, file: !3317, line: 20, baseType: !987, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3316, file: !3317, line: 20, baseType: !987, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3316, file: !3317, line: 20, baseType: !987, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3311, file: !3312, line: 491, baseType: !197, size: 64, offset: 192)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3311, file: !3312, line: 495, baseType: !412, size: 16, offset: 256)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3311, file: !3312, line: 496, baseType: !412, size: 16, offset: 272)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3311, file: !3312, line: 497, baseType: !412, size: 16, offset: 288)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3311, file: !3312, line: 498, baseType: !412, size: 16, offset: 304)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3311, file: !3312, line: 502, baseType: !197, size: 64, offset: 320)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3311, file: !3312, line: 503, baseType: !197, size: 64, offset: 384)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3311, file: !3312, line: 514, baseType: !3340, size: 256, offset: 448)
!3340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3341, size: 256, elements: !1375)
!3341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3342, size: 64)
!3342 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3312, line: 483, flags: DIFlagFwdDecl)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3311, file: !3312, line: 516, baseType: !197, size: 64, offset: 704)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3311, file: !3312, line: 518, baseType: !197, size: 64, offset: 768)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3311, file: !3312, line: 520, baseType: !197, size: 64, offset: 832)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3311, file: !3312, line: 521, baseType: !197, size: 64, offset: 896)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3311, file: !3312, line: 522, baseType: !197, size: 64, offset: 960)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3311, file: !3312, line: 528, baseType: !3349, size: 64, offset: 1024)
!3349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3350, size: 64)
!3350 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3312, line: 10, flags: DIFlagFwdDecl)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3311, file: !3312, line: 535, baseType: !197, size: 64, offset: 1088)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3311, file: !3312, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3311, file: !3312, line: 540, baseType: !3354, size: 33280, offset: 1536)
!3354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3355, line: 317, size: 33280, elements: !3356)
!3355 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3356 = !{!3357, !3358, !3359}
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3354, file: !3355, line: 330, baseType: !7, size: 32)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3354, file: !3355, line: 337, baseType: !197, size: 64, offset: 64)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3354, file: !3355, line: 348, baseType: !3360, size: 32768, offset: 512)
!3360 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3355, line: 304, size: 32768, elements: !3361)
!3361 = !{!3362, !3377, !3414, !3464, !3477}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3360, file: !3355, line: 305, baseType: !3363, size: 896)
!3363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3355, line: 12, size: 896, elements: !3364)
!3364 = !{!3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3376}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3363, file: !3355, line: 13, baseType: !212, size: 32)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3363, file: !3355, line: 14, baseType: !212, size: 32, offset: 32)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3363, file: !3355, line: 15, baseType: !212, size: 32, offset: 64)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3363, file: !3355, line: 16, baseType: !212, size: 32, offset: 96)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3363, file: !3355, line: 17, baseType: !212, size: 32, offset: 128)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3363, file: !3355, line: 18, baseType: !212, size: 32, offset: 160)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3363, file: !3355, line: 19, baseType: !212, size: 32, offset: 192)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3363, file: !3355, line: 22, baseType: !3373, size: 640, offset: 224)
!3373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, size: 640, elements: !3374)
!3374 = !{!3375}
!3375 = !DISubrange(count: 20)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3363, file: !3355, line: 25, baseType: !212, size: 32, offset: 864)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3360, file: !3355, line: 306, baseType: !3378, size: 4096, align: 128)
!3378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3355, line: 34, size: 4096, align: 128, elements: !3379)
!3379 = !{!3380, !3381, !3382, !3383, !3384, !3399, !3400, !3401, !3403, !3405, !3409}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3378, file: !3355, line: 35, baseType: !987, size: 16)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3378, file: !3355, line: 36, baseType: !987, size: 16, offset: 16)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3378, file: !3355, line: 37, baseType: !987, size: 16, offset: 32)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3378, file: !3355, line: 38, baseType: !987, size: 16, offset: 48)
!3384 = !DIDerivedType(tag: DW_TAG_member, scope: !3378, file: !3355, line: 39, baseType: !3385, size: 128, offset: 64)
!3385 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3378, file: !3355, line: 39, size: 128, elements: !3386)
!3386 = !{!3387, !3392}
!3387 = !DIDerivedType(tag: DW_TAG_member, scope: !3385, file: !3355, line: 40, baseType: !3388, size: 128)
!3388 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3385, file: !3355, line: 40, size: 128, elements: !3389)
!3389 = !{!3390, !3391}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3388, file: !3355, line: 41, baseType: !512, size: 64)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3388, file: !3355, line: 42, baseType: !512, size: 64, offset: 64)
!3392 = !DIDerivedType(tag: DW_TAG_member, scope: !3385, file: !3355, line: 44, baseType: !3393, size: 128)
!3393 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3385, file: !3355, line: 44, size: 128, elements: !3394)
!3394 = !{!3395, !3396, !3397, !3398}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3393, file: !3355, line: 45, baseType: !212, size: 32)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3393, file: !3355, line: 46, baseType: !212, size: 32, offset: 32)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3393, file: !3355, line: 47, baseType: !212, size: 32, offset: 64)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3393, file: !3355, line: 48, baseType: !212, size: 32, offset: 96)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3378, file: !3355, line: 51, baseType: !212, size: 32, offset: 192)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3378, file: !3355, line: 52, baseType: !212, size: 32, offset: 224)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3378, file: !3355, line: 55, baseType: !3402, size: 1024, offset: 256)
!3402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, size: 1024, elements: !1186)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3378, file: !3355, line: 58, baseType: !3404, size: 2048, offset: 1280)
!3404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, size: 2048, elements: !375)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3378, file: !3355, line: 60, baseType: !3406, size: 384, offset: 3328)
!3406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, size: 384, elements: !3407)
!3407 = !{!3408}
!3408 = !DISubrange(count: 12)
!3409 = !DIDerivedType(tag: DW_TAG_member, scope: !3378, file: !3355, line: 62, baseType: !3410, size: 384, offset: 3712)
!3410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3378, file: !3355, line: 62, size: 384, elements: !3411)
!3411 = !{!3412, !3413}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3410, file: !3355, line: 63, baseType: !3406, size: 384)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3410, file: !3355, line: 64, baseType: !3406, size: 384)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3360, file: !3355, line: 307, baseType: !3415, size: 1088)
!3415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3355, line: 79, size: 1088, elements: !3416)
!3416 = !{!3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3463}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3415, file: !3355, line: 80, baseType: !212, size: 32)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3415, file: !3355, line: 81, baseType: !212, size: 32, offset: 32)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3415, file: !3355, line: 82, baseType: !212, size: 32, offset: 64)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3415, file: !3355, line: 83, baseType: !212, size: 32, offset: 96)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3415, file: !3355, line: 84, baseType: !212, size: 32, offset: 128)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3415, file: !3355, line: 85, baseType: !212, size: 32, offset: 160)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3415, file: !3355, line: 86, baseType: !212, size: 32, offset: 192)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3415, file: !3355, line: 88, baseType: !3373, size: 640, offset: 224)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3415, file: !3355, line: 89, baseType: !1108, size: 8, offset: 864)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3415, file: !3355, line: 90, baseType: !1108, size: 8, offset: 872)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3415, file: !3355, line: 91, baseType: !1108, size: 8, offset: 880)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3415, file: !3355, line: 92, baseType: !1108, size: 8, offset: 888)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3415, file: !3355, line: 93, baseType: !1108, size: 8, offset: 896)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3415, file: !3355, line: 94, baseType: !1108, size: 8, offset: 904)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3415, file: !3355, line: 95, baseType: !3432, size: 64, offset: 960)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 64)
!3433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3434, line: 11, size: 128, elements: !3435)
!3434 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3435 = !{!3436, !3437}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3433, file: !3434, line: 12, baseType: !405, size: 64)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3433, file: !3434, line: 13, baseType: !3438, size: 64, offset: 64)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 64)
!3439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !3440, line: 56, size: 1344, elements: !3441)
!3440 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!3441 = !{!3442, !3443, !3444, !3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461, !3462}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3439, file: !3440, line: 61, baseType: !197, size: 64)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3439, file: !3440, line: 62, baseType: !197, size: 64, offset: 64)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !3439, file: !3440, line: 63, baseType: !197, size: 64, offset: 128)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3439, file: !3440, line: 64, baseType: !197, size: 64, offset: 192)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3439, file: !3440, line: 65, baseType: !197, size: 64, offset: 256)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !3439, file: !3440, line: 66, baseType: !197, size: 64, offset: 320)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !3439, file: !3440, line: 68, baseType: !197, size: 64, offset: 384)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !3439, file: !3440, line: 69, baseType: !197, size: 64, offset: 448)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !3439, file: !3440, line: 70, baseType: !197, size: 64, offset: 512)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !3439, file: !3440, line: 71, baseType: !197, size: 64, offset: 576)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !3439, file: !3440, line: 72, baseType: !197, size: 64, offset: 640)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !3439, file: !3440, line: 73, baseType: !197, size: 64, offset: 704)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !3439, file: !3440, line: 74, baseType: !197, size: 64, offset: 768)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !3439, file: !3440, line: 75, baseType: !197, size: 64, offset: 832)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !3439, file: !3440, line: 76, baseType: !197, size: 64, offset: 896)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !3439, file: !3440, line: 81, baseType: !197, size: 64, offset: 960)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3439, file: !3440, line: 83, baseType: !197, size: 64, offset: 1024)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3439, file: !3440, line: 84, baseType: !197, size: 64, offset: 1088)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3439, file: !3440, line: 85, baseType: !197, size: 64, offset: 1152)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3439, file: !3440, line: 86, baseType: !197, size: 64, offset: 1216)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !3439, file: !3440, line: 87, baseType: !197, size: 64, offset: 1280)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3415, file: !3355, line: 96, baseType: !212, size: 32, offset: 1024)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3360, file: !3355, line: 308, baseType: !3465, size: 4608, align: 512)
!3465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3355, line: 289, size: 4608, align: 512, elements: !3466)
!3466 = !{!3467, !3468, !3475}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3465, file: !3355, line: 290, baseType: !3378, size: 4096, align: 128)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3465, file: !3355, line: 291, baseType: !3469, size: 512, offset: 4096)
!3469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3355, line: 268, size: 512, elements: !3470)
!3470 = !{!3471, !3472, !3473}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3469, file: !3355, line: 269, baseType: !512, size: 64)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3469, file: !3355, line: 270, baseType: !512, size: 64, offset: 64)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3469, file: !3355, line: 271, baseType: !3474, size: 384, offset: 128)
!3474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 384, elements: !2665)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3465, file: !3355, line: 292, baseType: !3476, offset: 4608)
!3476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1108, elements: !2903)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3360, file: !3355, line: 309, baseType: !3478, size: 32768)
!3478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1108, size: 32768, elements: !3479)
!3479 = !{!3480}
!3480 = !DISubrange(count: 4096)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2269, file: !863, line: 378, baseType: !3482, size: 64, offset: 64)
!3482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2265, file: !863, line: 384, baseType: !2544, size: 192, offset: 192)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2043, file: !863, line: 500, baseType: !275, offset: 6656)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2043, file: !863, line: 501, baseType: !3486, size: 64, offset: 6656)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !863, line: 387, flags: DIFlagFwdDecl)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2043, file: !863, line: 516, baseType: !2753, size: 64, offset: 6720)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2043, file: !863, line: 519, baseType: !447, size: 64, offset: 6784)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2043, file: !863, line: 521, baseType: !3491, size: 64, offset: 6848)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !863, line: 521, flags: DIFlagFwdDecl)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2043, file: !863, line: 545, baseType: !184, size: 32, offset: 6912)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2043, file: !863, line: 548, baseType: !190, size: 8, offset: 6944)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2043, file: !863, line: 550, baseType: !3496, offset: 6952)
!3496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !3497, line: 142, elements: !253)
!3497 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2043, file: !863, line: 554, baseType: !1161, size: 256, offset: 6976)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2043, file: !863, line: 557, baseType: !212, size: 32, offset: 7232)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2040, file: !863, line: 565, baseType: !3501, offset: 7296)
!3501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, elements: !1199)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2036, file: !863, line: 151, baseType: !184, size: 32)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2028, file: !863, line: 156, baseType: !275, offset: 256)
!3504 = !DIDerivedType(tag: DW_TAG_member, scope: !867, file: !863, line: 159, baseType: !3505, size: 128)
!3505 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !867, file: !863, line: 159, size: 128, elements: !3506)
!3506 = !{!3507, !3551}
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3505, file: !863, line: 161, baseType: !3508, size: 64)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !73, line: 110, size: 1152, elements: !3510)
!3510 = !{!3511, !3521, !3522, !3523, !3524, !3525, !3526, !3538, !3539, !3540}
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3509, file: !73, line: 111, baseType: !3512, size: 384)
!3512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !73, line: 19, size: 384, elements: !3513)
!3513 = !{!3514, !3516, !3517, !3518, !3519, !3520}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3512, file: !73, line: 20, baseType: !3515, size: 64)
!3515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !197)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3512, file: !73, line: 21, baseType: !3515, size: 64, offset: 64)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3512, file: !73, line: 22, baseType: !3515, size: 64, offset: 128)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3512, file: !73, line: 23, baseType: !197, size: 64, offset: 192)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3512, file: !73, line: 24, baseType: !197, size: 64, offset: 256)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3512, file: !73, line: 25, baseType: !197, size: 64, offset: 320)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3509, file: !73, line: 112, baseType: !1136, size: 64, offset: 384)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3509, file: !73, line: 113, baseType: !1122, size: 128, offset: 448)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3509, file: !73, line: 114, baseType: !2544, size: 192, offset: 576)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3509, file: !73, line: 115, baseType: !72, size: 32, offset: 768)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3509, file: !73, line: 116, baseType: !7, size: 32, offset: 800)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3509, file: !73, line: 117, baseType: !3527, size: 64, offset: 832)
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3529)
!3529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !73, line: 67, size: 256, elements: !3530)
!3530 = !{!3531, !3532, !3536, !3537}
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3529, file: !73, line: 73, baseType: !968, size: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3529, file: !73, line: 78, baseType: !3533, size: 64, offset: 64)
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 64)
!3534 = !DISubroutineType(types: !3535)
!3535 = !{null, !3508}
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3529, file: !73, line: 83, baseType: !3533, size: 64, offset: 128)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3529, file: !73, line: 89, baseType: !2092, size: 64, offset: 192)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3509, file: !73, line: 118, baseType: !165, size: 64, offset: 896)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3509, file: !73, line: 119, baseType: !188, size: 32, offset: 960)
!3540 = !DIDerivedType(tag: DW_TAG_member, scope: !3509, file: !73, line: 120, baseType: !3541, size: 128, offset: 1024)
!3541 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3509, file: !73, line: 120, size: 128, elements: !3542)
!3542 = !{!3543, !3549}
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3541, file: !73, line: 121, baseType: !3544, size: 128)
!3544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3545, line: 6, size: 128, elements: !3546)
!3545 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3546 = !{!3547, !3548}
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3544, file: !3545, line: 7, baseType: !512, size: 64)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3544, file: !3545, line: 8, baseType: !512, size: 64, offset: 64)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3541, file: !73, line: 122, baseType: !3550)
!3550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3544, elements: !2903)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3505, file: !863, line: 162, baseType: !165, size: 64, offset: 64)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !867, file: !863, line: 176, baseType: !460, size: 128, align: 64)
!3553 = !DIDerivedType(tag: DW_TAG_member, scope: !862, file: !863, line: 179, baseType: !3554, size: 32, offset: 384)
!3554 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !862, file: !863, line: 179, size: 32, elements: !3555)
!3555 = !{!3556, !3557, !3558, !3559}
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3554, file: !863, line: 184, baseType: !184, size: 32)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3554, file: !863, line: 192, baseType: !7, size: 32)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3554, file: !863, line: 194, baseType: !7, size: 32)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3554, file: !863, line: 195, baseType: !188, size: 32)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !862, file: !863, line: 199, baseType: !184, size: 32, offset: 416)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !747, file: !86, line: 1964, baseType: !3562, size: 64, offset: 1344)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3563, size: 64)
!3563 = !DISubroutineType(types: !3564)
!3564 = !{!405, !686, !3565}
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3566, size: 64)
!3566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !3567, line: 12, size: 256, elements: !3568)
!3567 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!3568 = !{!3569, !3570, !3571, !3572, !3573}
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !3566, file: !3567, line: 13, baseType: !163, size: 32)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !3566, file: !3567, line: 16, baseType: !188, size: 32, offset: 32)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !3566, file: !3567, line: 23, baseType: !197, size: 64, offset: 64)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !3566, file: !3567, line: 30, baseType: !197, size: 64, offset: 128)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !3566, file: !3567, line: 33, baseType: !3574, size: 64, offset: 192)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 64)
!3575 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !863, line: 27, flags: DIFlagFwdDecl)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !747, file: !86, line: 1966, baseType: !3562, size: 64, offset: 1408)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !687, file: !86, line: 1424, baseType: !3578, size: 64, offset: 448)
!3578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3579, size: 64)
!3579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3580)
!3580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !80, line: 322, size: 704, elements: !3581)
!3581 = !{!3582, !3628, !3632, !3636, !3637, !3638, !3639, !3640, !3645, !3650, !3654}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !3580, file: !80, line: 323, baseType: !3583, size: 64)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 64)
!3584 = !DISubroutineType(types: !3585)
!3585 = !{!188, !3586}
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3587, size: 64)
!3587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !80, line: 294, size: 1600, elements: !3588)
!3588 = !{!3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3613, !3614, !3615}
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !3587, file: !80, line: 295, baseType: !729, size: 128)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !3587, file: !80, line: 296, baseType: !170, size: 128, offset: 128)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !3587, file: !80, line: 297, baseType: !170, size: 128, offset: 256)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !3587, file: !80, line: 298, baseType: !170, size: 128, offset: 384)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !3587, file: !80, line: 299, baseType: !270, size: 192, offset: 512)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !3587, file: !80, line: 300, baseType: !275, offset: 704)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !3587, file: !80, line: 301, baseType: !184, size: 32, offset: 704)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !3587, file: !80, line: 302, baseType: !686, size: 64, offset: 768)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !3587, file: !80, line: 303, baseType: !3598, size: 64, offset: 832)
!3598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !80, line: 68, size: 64, elements: !3599)
!3599 = !{!3600, !3612}
!3600 = !DIDerivedType(tag: DW_TAG_member, scope: !3598, file: !80, line: 69, baseType: !3601, size: 32)
!3601 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3598, file: !80, line: 69, size: 32, elements: !3602)
!3602 = !{!3603, !3604, !3605}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3601, file: !80, line: 70, baseType: !526, size: 32)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3601, file: !80, line: 71, baseType: !534, size: 32)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !3601, file: !80, line: 72, baseType: !3606, size: 32)
!3606 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !3607, line: 24, baseType: !3608)
!3607 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!3608 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3607, line: 22, size: 32, elements: !3609)
!3609 = !{!3610}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3608, file: !3607, line: 23, baseType: !3611, size: 32)
!3611 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !3607, line: 20, baseType: !532)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3598, file: !80, line: 74, baseType: !79, size: 32, offset: 32)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !3587, file: !80, line: 304, baseType: !620, size: 64, offset: 896)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !3587, file: !80, line: 305, baseType: !197, size: 64, offset: 960)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !3587, file: !80, line: 306, baseType: !3616, size: 576, offset: 1024)
!3616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !80, line: 205, size: 576, elements: !3617)
!3617 = !{!3618, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !3616, file: !80, line: 206, baseType: !3619, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !80, line: 66, baseType: !242)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !3616, file: !80, line: 207, baseType: !3619, size: 64, offset: 64)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !3616, file: !80, line: 208, baseType: !3619, size: 64, offset: 128)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !3616, file: !80, line: 209, baseType: !3619, size: 64, offset: 192)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !3616, file: !80, line: 210, baseType: !3619, size: 64, offset: 256)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !3616, file: !80, line: 211, baseType: !3619, size: 64, offset: 320)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !3616, file: !80, line: 212, baseType: !3619, size: 64, offset: 384)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !3616, file: !80, line: 213, baseType: !627, size: 64, offset: 448)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !3616, file: !80, line: 214, baseType: !627, size: 64, offset: 512)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !3580, file: !80, line: 324, baseType: !3629, size: 64, offset: 64)
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 64)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{!3586, !686, !188}
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !3580, file: !80, line: 325, baseType: !3633, size: 64, offset: 128)
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3634, size: 64)
!3634 = !DISubroutineType(types: !3635)
!3635 = !{null, !3586}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !3580, file: !80, line: 326, baseType: !3583, size: 64, offset: 192)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !3580, file: !80, line: 327, baseType: !3583, size: 64, offset: 256)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !3580, file: !80, line: 328, baseType: !3583, size: 64, offset: 320)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !3580, file: !80, line: 329, baseType: !789, size: 64, offset: 384)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !3580, file: !80, line: 332, baseType: !3641, size: 64, offset: 448)
!3641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3642, size: 64)
!3642 = !DISubroutineType(types: !3643)
!3643 = !{!3644, !520}
!3644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !3580, file: !80, line: 333, baseType: !3646, size: 64, offset: 512)
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3647, size: 64)
!3647 = !DISubroutineType(types: !3648)
!3648 = !{!188, !520, !3649}
!3649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !3580, file: !80, line: 335, baseType: !3651, size: 64, offset: 576)
!3651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3652, size: 64)
!3652 = !DISubroutineType(types: !3653)
!3653 = !{!188, !520, !3644}
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3580, file: !80, line: 337, baseType: !3655, size: 64, offset: 640)
!3655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3656, size: 64)
!3656 = !DISubroutineType(types: !3657)
!3657 = !{!188, !686, !3658}
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !687, file: !86, line: 1425, baseType: !3660, size: 64, offset: 512)
!3660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3661, size: 64)
!3661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3662)
!3662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !80, line: 428, size: 704, elements: !3663)
!3663 = !{!3664, !3668, !3669, !3673, !3674, !3675, !3690, !3713, !3717, !3718, !3741}
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !3662, file: !80, line: 429, baseType: !3665, size: 64)
!3665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3666, size: 64)
!3666 = !DISubroutineType(types: !3667)
!3667 = !{!188, !686, !188, !188, !636}
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !3662, file: !80, line: 430, baseType: !789, size: 64, offset: 64)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !3662, file: !80, line: 431, baseType: !3670, size: 64, offset: 128)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = !DISubroutineType(types: !3672)
!3672 = !{!188, !686, !7}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !3662, file: !80, line: 432, baseType: !3670, size: 64, offset: 192)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !3662, file: !80, line: 433, baseType: !789, size: 64, offset: 256)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !3662, file: !80, line: 434, baseType: !3676, size: 64, offset: 320)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{!188, !686, !188, !3679}
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 64)
!3680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !80, line: 415, size: 256, elements: !3681)
!3681 = !{!3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689}
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !3680, file: !80, line: 416, baseType: !188, size: 32)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !3680, file: !80, line: 417, baseType: !7, size: 32, offset: 32)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !3680, file: !80, line: 418, baseType: !7, size: 32, offset: 64)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !3680, file: !80, line: 420, baseType: !7, size: 32, offset: 96)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !3680, file: !80, line: 421, baseType: !7, size: 32, offset: 128)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !3680, file: !80, line: 422, baseType: !7, size: 32, offset: 160)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !3680, file: !80, line: 423, baseType: !7, size: 32, offset: 192)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !3680, file: !80, line: 424, baseType: !7, size: 32, offset: 224)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !3662, file: !80, line: 435, baseType: !3691, size: 64, offset: 384)
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{!188, !686, !3598, !3694}
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3695, size: 64)
!3695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !80, line: 343, size: 960, elements: !3696)
!3696 = !{!3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712}
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !3695, file: !80, line: 344, baseType: !188, size: 32)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !3695, file: !80, line: 345, baseType: !512, size: 64, offset: 64)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !3695, file: !80, line: 346, baseType: !512, size: 64, offset: 128)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !3695, file: !80, line: 347, baseType: !512, size: 64, offset: 192)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !3695, file: !80, line: 348, baseType: !512, size: 64, offset: 256)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !3695, file: !80, line: 349, baseType: !512, size: 64, offset: 320)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !3695, file: !80, line: 350, baseType: !512, size: 64, offset: 384)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !3695, file: !80, line: 351, baseType: !240, size: 64, offset: 448)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !3695, file: !80, line: 353, baseType: !240, size: 64, offset: 512)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !3695, file: !80, line: 354, baseType: !188, size: 32, offset: 576)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !3695, file: !80, line: 355, baseType: !188, size: 32, offset: 608)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !3695, file: !80, line: 356, baseType: !512, size: 64, offset: 640)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !3695, file: !80, line: 357, baseType: !512, size: 64, offset: 704)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !3695, file: !80, line: 358, baseType: !512, size: 64, offset: 768)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !3695, file: !80, line: 359, baseType: !240, size: 64, offset: 832)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !3695, file: !80, line: 360, baseType: !188, size: 32, offset: 896)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !3662, file: !80, line: 436, baseType: !3714, size: 64, offset: 448)
!3714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3715, size: 64)
!3715 = !DISubroutineType(types: !3716)
!3716 = !{!188, !686, !3658, !3694}
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !3662, file: !80, line: 438, baseType: !3691, size: 64, offset: 512)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !3662, file: !80, line: 439, baseType: !3719, size: 64, offset: 576)
!3719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3720, size: 64)
!3720 = !DISubroutineType(types: !3721)
!3721 = !{!188, !686, !3722}
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !80, line: 409, size: 1408, elements: !3724)
!3724 = !{!3725, !3726}
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !3723, file: !80, line: 410, baseType: !7, size: 32)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !3723, file: !80, line: 411, baseType: !3727, size: 1344, offset: 64)
!3727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3728, size: 1344, elements: !371)
!3728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !80, line: 395, size: 448, elements: !3729)
!3729 = !{!3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3740}
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3728, file: !80, line: 396, baseType: !7, size: 32)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !3728, file: !80, line: 397, baseType: !7, size: 32, offset: 32)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !3728, file: !80, line: 399, baseType: !7, size: 32, offset: 64)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !3728, file: !80, line: 400, baseType: !7, size: 32, offset: 96)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !3728, file: !80, line: 401, baseType: !7, size: 32, offset: 128)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !3728, file: !80, line: 402, baseType: !7, size: 32, offset: 160)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !3728, file: !80, line: 403, baseType: !7, size: 32, offset: 192)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3728, file: !80, line: 404, baseType: !514, size: 64, offset: 256)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3728, file: !80, line: 405, baseType: !3739, size: 64, offset: 320)
!3739 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !164, line: 126, baseType: !512)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !3728, file: !80, line: 406, baseType: !3739, size: 64, offset: 384)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !3662, file: !80, line: 440, baseType: !3670, size: 64, offset: 640)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !687, file: !86, line: 1426, baseType: !3743, size: 64, offset: 576)
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3745)
!3745 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !86, line: 49, flags: DIFlagFwdDecl)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !687, file: !86, line: 1427, baseType: !197, size: 64, offset: 640)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !687, file: !86, line: 1428, baseType: !197, size: 64, offset: 704)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !687, file: !86, line: 1429, baseType: !197, size: 64, offset: 768)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !687, file: !86, line: 1430, baseType: !477, size: 64, offset: 832)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !687, file: !86, line: 1431, baseType: !230, size: 256, offset: 896)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !687, file: !86, line: 1432, baseType: !188, size: 32, offset: 1152)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !687, file: !86, line: 1433, baseType: !184, size: 32, offset: 1184)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !687, file: !86, line: 1437, baseType: !3754, size: 64, offset: 1216)
!3754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3755, size: 64)
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 64)
!3756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3757)
!3757 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !86, line: 1437, flags: DIFlagFwdDecl)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !687, file: !86, line: 1449, baseType: !3759, size: 64, offset: 1280)
!3759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !493, line: 34, size: 64, elements: !3760)
!3760 = !{!3761}
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3759, file: !493, line: 35, baseType: !496, size: 64)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !687, file: !86, line: 1450, baseType: !170, size: 128, offset: 1344)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !687, file: !86, line: 1451, baseType: !1092, size: 64, offset: 1472)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !687, file: !86, line: 1452, baseType: !1666, size: 64, offset: 1536)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !687, file: !86, line: 1453, baseType: !3766, size: 64, offset: 1600)
!3766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3767, size: 64)
!3767 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !86, line: 1453, flags: DIFlagFwdDecl)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !687, file: !86, line: 1454, baseType: !729, size: 128, offset: 1664)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !687, file: !86, line: 1455, baseType: !7, size: 32, offset: 1792)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !687, file: !86, line: 1456, baseType: !3771, size: 2432, offset: 1856)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !80, line: 518, size: 2432, elements: !3772)
!3772 = !{!3773, !3774, !3775, !3777, !3809}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3771, file: !80, line: 519, baseType: !7, size: 32)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3771, file: !80, line: 520, baseType: !230, size: 256, offset: 64)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3771, file: !80, line: 521, baseType: !3776, size: 192, offset: 320)
!3776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !520, size: 192, elements: !371)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3771, file: !80, line: 522, baseType: !3778, size: 1728, offset: 512)
!3778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3779, size: 1728, elements: !371)
!3779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !80, line: 222, size: 576, elements: !3780)
!3780 = !{!3781, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3779, file: !80, line: 223, baseType: !3782, size: 64)
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3783, size: 64)
!3783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !80, line: 443, size: 256, elements: !3784)
!3784 = !{!3785, !3786, !3799, !3800}
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3783, file: !80, line: 444, baseType: !188, size: 32)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3783, file: !80, line: 445, baseType: !3787, size: 64, offset: 64)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 64)
!3788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3789)
!3789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !80, line: 310, size: 512, elements: !3790)
!3790 = !{!3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798}
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3789, file: !80, line: 311, baseType: !789, size: 64)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3789, file: !80, line: 312, baseType: !789, size: 64, offset: 64)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3789, file: !80, line: 313, baseType: !789, size: 64, offset: 128)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3789, file: !80, line: 314, baseType: !789, size: 64, offset: 192)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3789, file: !80, line: 315, baseType: !3583, size: 64, offset: 256)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3789, file: !80, line: 316, baseType: !3583, size: 64, offset: 320)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3789, file: !80, line: 317, baseType: !3583, size: 64, offset: 384)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3789, file: !80, line: 318, baseType: !3655, size: 64, offset: 448)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3783, file: !80, line: 446, baseType: !720, size: 64, offset: 128)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3783, file: !80, line: 447, baseType: !3782, size: 64, offset: 192)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3779, file: !80, line: 224, baseType: !188, size: 32, offset: 64)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3779, file: !80, line: 226, baseType: !170, size: 128, offset: 128)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3779, file: !80, line: 227, baseType: !197, size: 64, offset: 256)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3779, file: !80, line: 228, baseType: !7, size: 32, offset: 320)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3779, file: !80, line: 229, baseType: !7, size: 32, offset: 352)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3779, file: !80, line: 230, baseType: !3619, size: 64, offset: 384)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3779, file: !80, line: 231, baseType: !3619, size: 64, offset: 448)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3779, file: !80, line: 232, baseType: !165, size: 64, offset: 512)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3771, file: !80, line: 523, baseType: !3810, size: 192, offset: 2240)
!3810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3787, size: 192, elements: !371)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !687, file: !86, line: 1458, baseType: !3812, size: 2112, offset: 4288)
!3812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !86, line: 1410, size: 2112, elements: !3813)
!3813 = !{!3814, !3815, !3816}
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3812, file: !86, line: 1411, baseType: !188, size: 32)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3812, file: !86, line: 1412, baseType: !1297, size: 128, offset: 64)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3812, file: !86, line: 1413, baseType: !3817, size: 1920, offset: 192)
!3817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3818, size: 1920, elements: !371)
!3818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3819, line: 12, size: 640, elements: !3820)
!3819 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3820 = !{!3821, !3829, !3830, !3835, !3836}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3818, file: !3819, line: 13, baseType: !3822, size: 320)
!3822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3823, line: 17, size: 320, elements: !3824)
!3823 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3824 = !{!3825, !3826, !3827, !3828}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3822, file: !3823, line: 18, baseType: !188, size: 32)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3822, file: !3823, line: 19, baseType: !188, size: 32, offset: 32)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3822, file: !3823, line: 20, baseType: !1297, size: 128, offset: 64)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3822, file: !3823, line: 22, baseType: !460, size: 128, align: 64, offset: 192)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3818, file: !3819, line: 14, baseType: !1083, size: 64, offset: 320)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3818, file: !3819, line: 15, baseType: !3831, size: 64, offset: 384)
!3831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3832, line: 16, size: 64, elements: !3833)
!3832 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3833 = !{!3834}
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3831, file: !3832, line: 17, baseType: !2272, size: 64)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3818, file: !3819, line: 16, baseType: !1297, size: 128, offset: 448)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3818, file: !3819, line: 17, baseType: !184, size: 32, offset: 576)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !687, file: !86, line: 1465, baseType: !165, size: 64, offset: 6400)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !687, file: !86, line: 1468, baseType: !212, size: 32, offset: 6464)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !687, file: !86, line: 1470, baseType: !627, size: 64, offset: 6528)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !687, file: !86, line: 1471, baseType: !627, size: 64, offset: 6592)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !687, file: !86, line: 1473, baseType: !214, size: 32, offset: 6656)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !687, file: !86, line: 1474, baseType: !3843, size: 64, offset: 6720)
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !86, line: 603, flags: DIFlagFwdDecl)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !687, file: !86, line: 1477, baseType: !1185, size: 256, offset: 6784)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !687, file: !86, line: 1478, baseType: !3847, size: 128, offset: 7040)
!3847 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3848, line: 18, baseType: !3849)
!3848 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3849 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3848, line: 16, size: 128, elements: !3850)
!3850 = !{!3851}
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3849, file: !3848, line: 17, baseType: !3852, size: 128)
!3852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1109, size: 128, elements: !1808)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !687, file: !86, line: 1480, baseType: !7, size: 32, offset: 7168)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !687, file: !86, line: 1481, baseType: !1318, size: 32, offset: 7200)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !687, file: !86, line: 1487, baseType: !270, size: 192, offset: 7232)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !687, file: !86, line: 1493, baseType: !289, size: 64, offset: 7424)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !687, file: !86, line: 1495, baseType: !3858, size: 64, offset: 7488)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3860)
!3860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !475, line: 135, size: 1024, align: 512, elements: !3861)
!3861 = !{!3862, !3866, !3867, !3874, !3880, !3884, !3888, !3892, !3893, !3897, !3901, !3906, !3910}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !3860, file: !475, line: 136, baseType: !3863, size: 64)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{!188, !477, !7}
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !3860, file: !475, line: 137, baseType: !3863, size: 64, offset: 64)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !3860, file: !475, line: 138, baseType: !3868, size: 64, offset: 128)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = !DISubroutineType(types: !3870)
!3870 = !{!188, !3871, !3873}
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !478)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !3860, file: !475, line: 139, baseType: !3875, size: 64, offset: 192)
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 64)
!3876 = !DISubroutineType(types: !3877)
!3877 = !{!188, !3871, !7, !289, !3878}
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3879, size: 64)
!3879 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !501)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !3860, file: !475, line: 141, baseType: !3881, size: 64, offset: 256)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 64)
!3882 = !DISubroutineType(types: !3883)
!3883 = !{!188, !3871}
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !3860, file: !475, line: 142, baseType: !3885, size: 64, offset: 320)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3886, size: 64)
!3886 = !DISubroutineType(types: !3887)
!3887 = !{!188, !477}
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !3860, file: !475, line: 143, baseType: !3889, size: 64, offset: 384)
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3890, size: 64)
!3890 = !DISubroutineType(types: !3891)
!3891 = !{null, !477}
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !3860, file: !475, line: 144, baseType: !3889, size: 64, offset: 448)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !3860, file: !475, line: 145, baseType: !3894, size: 64, offset: 512)
!3894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3895, size: 64)
!3895 = !DISubroutineType(types: !3896)
!3896 = !{null, !477, !520}
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !3860, file: !475, line: 146, baseType: !3898, size: 64, offset: 576)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = !DISubroutineType(types: !3900)
!3900 = !{!370, !477, !370, !188}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !3860, file: !475, line: 147, baseType: !3902, size: 64, offset: 640)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3903, size: 64)
!3903 = !DISubroutineType(types: !3904)
!3904 = !{!473, !3905}
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !3860, file: !475, line: 148, baseType: !3907, size: 64, offset: 704)
!3907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3908, size: 64)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{!188, !636, !190}
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !3860, file: !475, line: 149, baseType: !3911, size: 64, offset: 768)
!3911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3912, size: 64)
!3912 = !DISubroutineType(types: !3913)
!3913 = !{!477, !477, !3914}
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !521)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !687, file: !86, line: 1500, baseType: !188, size: 32, offset: 7552)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !687, file: !86, line: 1502, baseType: !3918, size: 448, offset: 7616)
!3918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !3567, line: 60, size: 448, elements: !3919)
!3919 = !{!3920, !3925, !3926, !3927, !3928, !3929, !3930}
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3918, file: !3567, line: 61, baseType: !3921, size: 64)
!3921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3922, size: 64)
!3922 = !DISubroutineType(types: !3923)
!3923 = !{!197, !3924, !3565}
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 64)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3918, file: !3567, line: 63, baseType: !3921, size: 64, offset: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3918, file: !3567, line: 66, baseType: !405, size: 64, offset: 128)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3918, file: !3567, line: 67, baseType: !188, size: 32, offset: 192)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3918, file: !3567, line: 68, baseType: !7, size: 32, offset: 224)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3918, file: !3567, line: 71, baseType: !170, size: 128, offset: 256)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3918, file: !3567, line: 77, baseType: !3931, size: 64, offset: 384)
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !687, file: !86, line: 1505, baseType: !234, size: 64, offset: 8064)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !687, file: !86, line: 1508, baseType: !234, size: 64, offset: 8128)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !687, file: !86, line: 1511, baseType: !188, size: 32, offset: 8192)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !687, file: !86, line: 1514, baseType: !1975, size: 32, offset: 8224)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !687, file: !86, line: 1517, baseType: !1173, size: 64, offset: 8256)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !687, file: !86, line: 1518, baseType: !725, size: 64, offset: 8320)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !687, file: !86, line: 1525, baseType: !2753, size: 64, offset: 8384)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !687, file: !86, line: 1532, baseType: !3940, size: 64, offset: 8448)
!3940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3941, line: 52, size: 64, elements: !3942)
!3941 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3942 = !{!3943}
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3940, file: !3941, line: 53, baseType: !3944, size: 64)
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3945, size: 64)
!3945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3941, line: 40, size: 256, elements: !3946)
!3946 = !{!3947, !3948, !3953}
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3945, file: !3941, line: 42, baseType: !275)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3945, file: !3941, line: 44, baseType: !3949, size: 192)
!3949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3941, line: 28, size: 192, elements: !3950)
!3950 = !{!3951, !3952}
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3949, file: !3941, line: 29, baseType: !170, size: 128)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3949, file: !3941, line: 31, baseType: !405, size: 64, offset: 128)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3945, file: !3941, line: 49, baseType: !405, size: 64, offset: 192)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !687, file: !86, line: 1533, baseType: !3940, size: 64, offset: 8512)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !687, file: !86, line: 1534, baseType: !460, size: 128, align: 64, offset: 8576)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !687, file: !86, line: 1535, baseType: !1161, size: 256, offset: 8704)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !687, file: !86, line: 1537, baseType: !270, size: 192, offset: 8960)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !687, file: !86, line: 1542, baseType: !188, size: 32, offset: 9152)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !687, file: !86, line: 1545, baseType: !275, offset: 9184)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !687, file: !86, line: 1546, baseType: !170, size: 128, offset: 9216)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !687, file: !86, line: 1548, baseType: !275, offset: 9344)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !687, file: !86, line: 1549, baseType: !170, size: 128, offset: 9344)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !521, file: !86, line: 624, baseType: !874, size: 64, offset: 256)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !521, file: !86, line: 631, baseType: !197, size: 64, offset: 320)
!3965 = !DIDerivedType(tag: DW_TAG_member, scope: !521, file: !86, line: 639, baseType: !3966, size: 32, offset: 384)
!3966 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !521, file: !86, line: 639, size: 32, elements: !3967)
!3967 = !{!3968, !3969}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3966, file: !86, line: 640, baseType: !1636, size: 32)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3966, file: !86, line: 641, baseType: !7, size: 32)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !521, file: !86, line: 643, baseType: !602, size: 32, offset: 416)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !521, file: !86, line: 644, baseType: !620, size: 64, offset: 448)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !521, file: !86, line: 645, baseType: !623, size: 128, offset: 512)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !521, file: !86, line: 646, baseType: !623, size: 128, offset: 640)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !521, file: !86, line: 647, baseType: !623, size: 128, offset: 768)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !521, file: !86, line: 648, baseType: !275, offset: 896)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !521, file: !86, line: 649, baseType: !412, size: 16, offset: 896)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !521, file: !86, line: 650, baseType: !1108, size: 8, offset: 912)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !521, file: !86, line: 651, baseType: !1108, size: 8, offset: 920)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !521, file: !86, line: 652, baseType: !3739, size: 64, offset: 960)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !521, file: !86, line: 659, baseType: !197, size: 64, offset: 1024)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !521, file: !86, line: 660, baseType: !230, size: 256, offset: 1088)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !521, file: !86, line: 662, baseType: !197, size: 64, offset: 1344)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !521, file: !86, line: 663, baseType: !197, size: 64, offset: 1408)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !521, file: !86, line: 665, baseType: !729, size: 128, offset: 1472)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !521, file: !86, line: 666, baseType: !170, size: 128, offset: 1600)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !521, file: !86, line: 675, baseType: !170, size: 128, offset: 1728)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !521, file: !86, line: 676, baseType: !170, size: 128, offset: 1856)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !521, file: !86, line: 677, baseType: !170, size: 128, offset: 1984)
!3989 = !DIDerivedType(tag: DW_TAG_member, scope: !521, file: !86, line: 678, baseType: !3990, size: 128, offset: 2112)
!3990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !521, file: !86, line: 678, size: 128, elements: !3991)
!3991 = !{!3992, !3993}
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3990, file: !86, line: 679, baseType: !725, size: 64)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3990, file: !86, line: 680, baseType: !460, size: 128, align: 64)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !521, file: !86, line: 682, baseType: !236, size: 64, offset: 2240)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !521, file: !86, line: 683, baseType: !236, size: 64, offset: 2304)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !521, file: !86, line: 684, baseType: !184, size: 32, offset: 2368)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !521, file: !86, line: 685, baseType: !184, size: 32, offset: 2400)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !521, file: !86, line: 686, baseType: !184, size: 32, offset: 2432)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !521, file: !86, line: 688, baseType: !184, size: 32, offset: 2464)
!4000 = !DIDerivedType(tag: DW_TAG_member, scope: !521, file: !86, line: 690, baseType: !4001, size: 64, offset: 2496)
!4001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !521, file: !86, line: 690, size: 64, elements: !4002)
!4002 = !{!4003, !4225}
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4001, file: !86, line: 691, baseType: !4004, size: 64)
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4005, size: 64)
!4005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4006)
!4006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !86, line: 1822, size: 2048, elements: !4007)
!4007 = !{!4008, !4009, !4013, !4017, !4021, !4022, !4023, !4027, !4040, !4041, !4049, !4053, !4054, !4058, !4059, !4063, !4068, !4069, !4073, !4077, !4185, !4189, !4190, !4194, !4195, !4199, !4203, !4208, !4212, !4216, !4220, !4224}
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4006, file: !86, line: 1823, baseType: !720, size: 64)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4006, file: !86, line: 1824, baseType: !4010, size: 64, offset: 64)
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = !DISubroutineType(types: !4012)
!4012 = !{!620, !447, !620, !188}
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4006, file: !86, line: 1825, baseType: !4014, size: 64, offset: 128)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{!401, !447, !370, !417, !836}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4006, file: !86, line: 1826, baseType: !4018, size: 64, offset: 192)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{!401, !447, !289, !417, !836}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4006, file: !86, line: 1827, baseType: !972, size: 64, offset: 256)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4006, file: !86, line: 1828, baseType: !972, size: 64, offset: 320)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4006, file: !86, line: 1829, baseType: !4024, size: 64, offset: 384)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{!188, !975, !190}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4006, file: !86, line: 1830, baseType: !4028, size: 64, offset: 448)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 64)
!4029 = !DISubroutineType(types: !4030)
!4030 = !{!188, !447, !4031}
!4031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4032, size: 64)
!4032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !86, line: 1776, size: 128, elements: !4033)
!4033 = !{!4034, !4039}
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4032, file: !86, line: 1777, baseType: !4035, size: 64)
!4035 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !86, line: 1773, baseType: !4036)
!4036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4037, size: 64)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{!188, !4031, !289, !188, !620, !512, !7}
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4032, file: !86, line: 1778, baseType: !620, size: 64, offset: 64)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4006, file: !86, line: 1831, baseType: !4028, size: 64, offset: 512)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4006, file: !86, line: 1832, baseType: !4042, size: 64, offset: 576)
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64)
!4043 = !DISubroutineType(types: !4044)
!4044 = !{!4045, !447, !4047}
!4045 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !4046, line: 52, baseType: !7)
!4046 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !706, line: 27, flags: DIFlagFwdDecl)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4006, file: !86, line: 1833, baseType: !4050, size: 64, offset: 640)
!4050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4051, size: 64)
!4051 = !DISubroutineType(types: !4052)
!4052 = !{!405, !447, !7, !197}
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4006, file: !86, line: 1834, baseType: !4050, size: 64, offset: 704)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4006, file: !86, line: 1835, baseType: !4055, size: 64, offset: 768)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{!188, !447, !2046}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4006, file: !86, line: 1836, baseType: !197, size: 64, offset: 832)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4006, file: !86, line: 1837, baseType: !4060, size: 64, offset: 896)
!4060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4061, size: 64)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!188, !520, !447}
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4006, file: !86, line: 1838, baseType: !4064, size: 64, offset: 960)
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 64)
!4065 = !DISubroutineType(types: !4066)
!4066 = !{!188, !447, !4067}
!4067 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !86, line: 1007, baseType: !165)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4006, file: !86, line: 1839, baseType: !4060, size: 64, offset: 1024)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4006, file: !86, line: 1840, baseType: !4070, size: 64, offset: 1088)
!4070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4071, size: 64)
!4071 = !DISubroutineType(types: !4072)
!4072 = !{!188, !447, !620, !620, !188}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4006, file: !86, line: 1841, baseType: !4074, size: 64, offset: 1152)
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 64)
!4075 = !DISubroutineType(types: !4076)
!4076 = !{!188, !188, !447, !188}
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4006, file: !86, line: 1842, baseType: !4078, size: 64, offset: 1216)
!4078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4079, size: 64)
!4079 = !DISubroutineType(types: !4080)
!4080 = !{!188, !447, !188, !4081}
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !86, line: 1062, size: 1664, elements: !4083)
!4083 = !{!4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4115, !4116, !4117, !4130, !4161}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4082, file: !86, line: 1063, baseType: !4081, size: 64)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4082, file: !86, line: 1064, baseType: !170, size: 128, offset: 64)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4082, file: !86, line: 1065, baseType: !729, size: 128, offset: 192)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4082, file: !86, line: 1066, baseType: !170, size: 128, offset: 320)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4082, file: !86, line: 1069, baseType: !170, size: 128, offset: 448)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4082, file: !86, line: 1072, baseType: !4067, size: 64, offset: 576)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4082, file: !86, line: 1073, baseType: !7, size: 32, offset: 640)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4082, file: !86, line: 1074, baseType: !518, size: 8, offset: 672)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4082, file: !86, line: 1075, baseType: !7, size: 32, offset: 704)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4082, file: !86, line: 1076, baseType: !188, size: 32, offset: 736)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4082, file: !86, line: 1077, baseType: !1297, size: 128, offset: 768)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4082, file: !86, line: 1078, baseType: !447, size: 64, offset: 896)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4082, file: !86, line: 1079, baseType: !620, size: 64, offset: 960)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4082, file: !86, line: 1080, baseType: !620, size: 64, offset: 1024)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4082, file: !86, line: 1082, baseType: !4099, size: 64, offset: 1088)
!4099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4100, size: 64)
!4100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !86, line: 1314, size: 320, elements: !4101)
!4101 = !{!4102, !4110, !4111, !4112, !4113, !4114}
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !4100, file: !86, line: 1315, baseType: !4103)
!4103 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !4104, line: 20, baseType: !4105)
!4104 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!4105 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4104, line: 11, elements: !4106)
!4106 = !{!4107}
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !4105, file: !4104, line: 12, baseType: !4108)
!4108 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !251, line: 33, baseType: !4109)
!4109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !251, line: 31, elements: !253)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4100, file: !86, line: 1316, baseType: !188, size: 32)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !4100, file: !86, line: 1317, baseType: !188, size: 32, offset: 32)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !4100, file: !86, line: 1318, baseType: !4099, size: 64, offset: 64)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !4100, file: !86, line: 1319, baseType: !447, size: 64, offset: 128)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !4100, file: !86, line: 1320, baseType: !460, size: 128, align: 64, offset: 192)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4082, file: !86, line: 1084, baseType: !197, size: 64, offset: 1152)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4082, file: !86, line: 1085, baseType: !197, size: 64, offset: 1216)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4082, file: !86, line: 1087, baseType: !4118, size: 64, offset: 1280)
!4118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4119, size: 64)
!4119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4120)
!4120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !86, line: 1011, size: 128, elements: !4121)
!4121 = !{!4122, !4126}
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4120, file: !86, line: 1012, baseType: !4123, size: 64)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{null, !4081, !4081}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4120, file: !86, line: 1013, baseType: !4127, size: 64, offset: 64)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{null, !4081}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4082, file: !86, line: 1088, baseType: !4131, size: 64, offset: 1344)
!4131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4132, size: 64)
!4132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4133)
!4133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !86, line: 1016, size: 512, elements: !4134)
!4134 = !{!4135, !4139, !4143, !4144, !4148, !4152, !4156, !4160}
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4133, file: !86, line: 1017, baseType: !4136, size: 64)
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4137, size: 64)
!4137 = !DISubroutineType(types: !4138)
!4138 = !{!4067, !4067}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4133, file: !86, line: 1018, baseType: !4140, size: 64, offset: 64)
!4140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4141, size: 64)
!4141 = !DISubroutineType(types: !4142)
!4142 = !{null, !4067}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4133, file: !86, line: 1019, baseType: !4127, size: 64, offset: 128)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4133, file: !86, line: 1020, baseType: !4145, size: 64, offset: 192)
!4145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4146, size: 64)
!4146 = !DISubroutineType(types: !4147)
!4147 = !{!188, !4081, !188}
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4133, file: !86, line: 1021, baseType: !4149, size: 64, offset: 256)
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!4150 = !DISubroutineType(types: !4151)
!4151 = !{!190, !4081}
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4133, file: !86, line: 1022, baseType: !4153, size: 64, offset: 320)
!4153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4154, size: 64)
!4154 = !DISubroutineType(types: !4155)
!4155 = !{!188, !4081, !188, !173}
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4133, file: !86, line: 1023, baseType: !4157, size: 64, offset: 384)
!4157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4158, size: 64)
!4158 = !DISubroutineType(types: !4159)
!4159 = !{null, !4081, !949}
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4133, file: !86, line: 1024, baseType: !4149, size: 64, offset: 448)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4082, file: !86, line: 1097, baseType: !4162, size: 256, offset: 1408)
!4162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4082, file: !86, line: 1089, size: 256, elements: !4163)
!4163 = !{!4164, !4173, !4179}
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4162, file: !86, line: 1090, baseType: !4165, size: 256)
!4165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4166, line: 10, size: 256, elements: !4167)
!4166 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4167 = !{!4168, !4169, !4172}
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4165, file: !4166, line: 11, baseType: !212, size: 32)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4165, file: !4166, line: 12, baseType: !4170, size: 64, offset: 64)
!4170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4171, size: 64)
!4171 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4166, line: 5, flags: DIFlagFwdDecl)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4165, file: !4166, line: 13, baseType: !170, size: 128, offset: 128)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4162, file: !86, line: 1091, baseType: !4174, size: 64)
!4174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4166, line: 17, size: 64, elements: !4175)
!4175 = !{!4176}
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4174, file: !4166, line: 18, baseType: !4177, size: 64)
!4177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4178, size: 64)
!4178 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4166, line: 16, flags: DIFlagFwdDecl)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4162, file: !86, line: 1096, baseType: !4180, size: 192)
!4180 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4162, file: !86, line: 1092, size: 192, elements: !4181)
!4181 = !{!4182, !4183, !4184}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4180, file: !86, line: 1093, baseType: !170, size: 128)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4180, file: !86, line: 1094, baseType: !188, size: 32, offset: 128)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4180, file: !86, line: 1095, baseType: !7, size: 32, offset: 160)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4006, file: !86, line: 1843, baseType: !4186, size: 64, offset: 1280)
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{!401, !447, !861, !188, !417, !836, !188}
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4006, file: !86, line: 1844, baseType: !2166, size: 64, offset: 1344)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4006, file: !86, line: 1845, baseType: !4191, size: 64, offset: 1408)
!4191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4192, size: 64)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{!188, !188}
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4006, file: !86, line: 1846, baseType: !4078, size: 64, offset: 1472)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4006, file: !86, line: 1847, baseType: !4196, size: 64, offset: 1536)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 64)
!4197 = !DISubroutineType(types: !4198)
!4198 = !{!401, !3273, !447, !836, !417, !7}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4006, file: !86, line: 1848, baseType: !4200, size: 64, offset: 1600)
!4200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4201, size: 64)
!4201 = !DISubroutineType(types: !4202)
!4202 = !{!401, !447, !836, !3273, !417, !7}
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4006, file: !86, line: 1849, baseType: !4204, size: 64, offset: 1664)
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!188, !447, !405, !4207, !949}
!4207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4006, file: !86, line: 1850, baseType: !4209, size: 64, offset: 1728)
!4209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4210, size: 64)
!4210 = !DISubroutineType(types: !4211)
!4211 = !{!405, !447, !188, !620, !620}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4006, file: !86, line: 1852, baseType: !4213, size: 64, offset: 1792)
!4213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4214, size: 64)
!4214 = !DISubroutineType(types: !4215)
!4215 = !{null, !815, !447}
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4006, file: !86, line: 1856, baseType: !4217, size: 64, offset: 1856)
!4217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4218, size: 64)
!4218 = !DISubroutineType(types: !4219)
!4219 = !{!401, !447, !620, !447, !620, !417, !7}
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4006, file: !86, line: 1858, baseType: !4221, size: 64, offset: 1920)
!4221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4222, size: 64)
!4222 = !DISubroutineType(types: !4223)
!4223 = !{!620, !447, !620, !447, !620, !620, !7}
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4006, file: !86, line: 1861, baseType: !4070, size: 64, offset: 1984)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4001, file: !86, line: 692, baseType: !754, size: 64)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !521, file: !86, line: 694, baseType: !4227, size: 64, offset: 2560)
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4228, size: 64)
!4228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !86, line: 1100, size: 384, elements: !4229)
!4229 = !{!4230, !4231, !4232, !4233}
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4228, file: !86, line: 1101, baseType: !275)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4228, file: !86, line: 1102, baseType: !170, size: 128)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4228, file: !86, line: 1103, baseType: !170, size: 128, offset: 128)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4228, file: !86, line: 1104, baseType: !170, size: 128, offset: 256)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !521, file: !86, line: 695, baseType: !875, size: 1216, align: 64, offset: 2624)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !521, file: !86, line: 696, baseType: !170, size: 128, offset: 3840)
!4236 = !DIDerivedType(tag: DW_TAG_member, scope: !521, file: !86, line: 697, baseType: !4237, size: 64, offset: 3968)
!4237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !521, file: !86, line: 697, size: 64, elements: !4238)
!4238 = !{!4239, !4240, !4241, !4244, !4245}
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4237, file: !86, line: 698, baseType: !3273, size: 64)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4237, file: !86, line: 699, baseType: !1092, size: 64)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4237, file: !86, line: 700, baseType: !4242, size: 64)
!4242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4243, size: 64)
!4243 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !86, line: 700, flags: DIFlagFwdDecl)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4237, file: !86, line: 701, baseType: !370, size: 64)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4237, file: !86, line: 702, baseType: !7, size: 32)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !521, file: !86, line: 705, baseType: !214, size: 32, offset: 4032)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !521, file: !86, line: 708, baseType: !214, size: 32, offset: 4064)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !521, file: !86, line: 709, baseType: !3843, size: 64, offset: 4096)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !521, file: !86, line: 720, baseType: !165, size: 64, offset: 4160)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !478, file: !475, line: 98, baseType: !4251, size: 256, offset: 448)
!4251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !518, size: 256, elements: !1186)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !478, file: !475, line: 101, baseType: !4253, size: 32, offset: 704)
!4253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !4254, line: 25, size: 32, elements: !4255)
!4254 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!4255 = !{!4256}
!4256 = !DIDerivedType(tag: DW_TAG_member, scope: !4253, file: !4254, line: 26, baseType: !4257, size: 32)
!4257 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4253, file: !4254, line: 26, size: 32, elements: !4258)
!4258 = !{!4259}
!4259 = !DIDerivedType(tag: DW_TAG_member, scope: !4257, file: !4254, line: 30, baseType: !4260, size: 32)
!4260 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4257, file: !4254, line: 30, size: 32, elements: !4261)
!4261 = !{!4262, !4263}
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4260, file: !4254, line: 31, baseType: !275)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4260, file: !4254, line: 32, baseType: !188, size: 32)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !478, file: !475, line: 102, baseType: !3858, size: 64, offset: 768)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !478, file: !475, line: 103, baseType: !686, size: 64, offset: 832)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !478, file: !475, line: 104, baseType: !197, size: 64, offset: 896)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !478, file: !475, line: 105, baseType: !165, size: 64, offset: 960)
!4268 = !DIDerivedType(tag: DW_TAG_member, scope: !478, file: !475, line: 107, baseType: !4269, size: 128, offset: 1024)
!4269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !478, file: !475, line: 107, size: 128, elements: !4270)
!4270 = !{!4271, !4272}
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4269, file: !475, line: 108, baseType: !170, size: 128)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4269, file: !475, line: 109, baseType: !4273, size: 64)
!4273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !478, file: !475, line: 111, baseType: !170, size: 128, offset: 1152)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !478, file: !475, line: 112, baseType: !170, size: 128, offset: 1280)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !478, file: !475, line: 120, baseType: !4277, size: 128, offset: 1408)
!4277 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !478, file: !475, line: 116, size: 128, elements: !4278)
!4278 = !{!4279, !4280, !4281}
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4277, file: !475, line: 117, baseType: !729, size: 128)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4277, file: !475, line: 118, baseType: !492, size: 128)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4277, file: !475, line: 119, baseType: !460, size: 128, align: 64)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !448, file: !86, line: 922, baseType: !520, size: 64, offset: 256)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !448, file: !86, line: 923, baseType: !4004, size: 64, offset: 320)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !448, file: !86, line: 929, baseType: !275, offset: 384)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !448, file: !86, line: 930, baseType: !85, size: 32, offset: 384)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !448, file: !86, line: 931, baseType: !234, size: 64, offset: 448)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !448, file: !86, line: 932, baseType: !7, size: 32, offset: 512)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !448, file: !86, line: 933, baseType: !1318, size: 32, offset: 544)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !448, file: !86, line: 934, baseType: !270, size: 192, offset: 576)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !448, file: !86, line: 935, baseType: !620, size: 64, offset: 768)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !448, file: !86, line: 936, baseType: !4292, size: 192, offset: 832)
!4292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !86, line: 885, size: 192, elements: !4293)
!4293 = !{!4294, !4295, !4296, !4297, !4298, !4299}
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4292, file: !86, line: 886, baseType: !4103)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4292, file: !86, line: 887, baseType: !2519, size: 64)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !4292, file: !86, line: 888, baseType: !94, size: 32, offset: 64)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4292, file: !86, line: 889, baseType: !526, size: 32, offset: 96)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !4292, file: !86, line: 889, baseType: !526, size: 32, offset: 128)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !4292, file: !86, line: 890, baseType: !188, size: 32, offset: 160)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !448, file: !86, line: 937, baseType: !2589, size: 64, offset: 1024)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !448, file: !86, line: 938, baseType: !4302, size: 256, offset: 1088)
!4302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !86, line: 896, size: 256, elements: !4303)
!4303 = !{!4304, !4305, !4306, !4307, !4308, !4309}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4302, file: !86, line: 897, baseType: !197, size: 64)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4302, file: !86, line: 898, baseType: !7, size: 32, offset: 64)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !4302, file: !86, line: 899, baseType: !7, size: 32, offset: 96)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4302, file: !86, line: 902, baseType: !7, size: 32, offset: 128)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !4302, file: !86, line: 903, baseType: !7, size: 32, offset: 160)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !4302, file: !86, line: 904, baseType: !620, size: 64, offset: 192)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !448, file: !86, line: 940, baseType: !512, size: 64, offset: 1344)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !448, file: !86, line: 945, baseType: !165, size: 64, offset: 1408)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !448, file: !86, line: 949, baseType: !170, size: 128, offset: 1472)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !448, file: !86, line: 950, baseType: !170, size: 128, offset: 1600)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !448, file: !86, line: 952, baseType: !874, size: 64, offset: 1728)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !448, file: !86, line: 953, baseType: !1975, size: 32, offset: 1792)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !448, file: !86, line: 954, baseType: !1975, size: 32, offset: 1824)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !438, file: !395, line: 174, baseType: !444, size: 64, offset: 320)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !438, file: !395, line: 176, baseType: !4319, size: 64, offset: 384)
!4319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4320, size: 64)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{!188, !447, !337, !437, !2046}
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !426, file: !395, line: 90, baseType: !421, size: 64, offset: 192)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !426, file: !395, line: 91, baseType: !4324, size: 64, offset: 256)
!4324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !385, file: !332, line: 143, baseType: !4326, size: 64, offset: 256)
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4327, size: 64)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{!4329, !337}
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64)
!4330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4331)
!4331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !103, line: 39, size: 384, elements: !4332)
!4332 = !{!4333, !4334, !4338, !4342, !4348, !4352}
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4331, file: !103, line: 40, baseType: !102, size: 32)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4331, file: !103, line: 41, baseType: !4335, size: 64, offset: 64)
!4335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 64)
!4336 = !DISubroutineType(types: !4337)
!4337 = !{!190}
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4331, file: !103, line: 42, baseType: !4339, size: 64, offset: 128)
!4339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4340, size: 64)
!4340 = !DISubroutineType(types: !4341)
!4341 = !{!165}
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4331, file: !103, line: 43, baseType: !4343, size: 64, offset: 192)
!4343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4344, size: 64)
!4344 = !DISubroutineType(types: !4345)
!4345 = !{!324, !4346}
!4346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4347, size: 64)
!4347 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !103, line: 19, flags: DIFlagFwdDecl)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4331, file: !103, line: 44, baseType: !4349, size: 64, offset: 256)
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4350, size: 64)
!4350 = !DISubroutineType(types: !4351)
!4351 = !{!324}
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4331, file: !103, line: 45, baseType: !559, size: 64, offset: 320)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !385, file: !332, line: 144, baseType: !4354, size: 64, offset: 320)
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 64)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!324, !337}
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !385, file: !332, line: 145, baseType: !4358, size: 64, offset: 384)
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4359, size: 64)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{null, !337, !2863, !2864}
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !331, file: !332, line: 70, baseType: !4362, size: 64, offset: 384)
!4362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4363, size: 64)
!4363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !706, line: 123, size: 1024, elements: !4364)
!4364 = !{!4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4481, !4482, !4483, !4484, !4485}
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4363, file: !706, line: 124, baseType: !184, size: 32)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4363, file: !706, line: 125, baseType: !184, size: 32, offset: 32)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4363, file: !706, line: 135, baseType: !4362, size: 64, offset: 64)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4363, file: !706, line: 136, baseType: !289, size: 64, offset: 128)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4363, file: !706, line: 138, baseType: !896, size: 192, align: 64, offset: 192)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4363, file: !706, line: 140, baseType: !324, size: 64, offset: 384)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4363, file: !706, line: 141, baseType: !7, size: 32, offset: 448)
!4372 = !DIDerivedType(tag: DW_TAG_member, scope: !4363, file: !706, line: 142, baseType: !4373, size: 256, offset: 512)
!4373 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4363, file: !706, line: 142, size: 256, elements: !4374)
!4374 = !{!4375, !4421, !4425}
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4373, file: !706, line: 143, baseType: !4376, size: 192)
!4376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !706, line: 91, size: 192, elements: !4377)
!4377 = !{!4378, !4379, !4380}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4376, file: !706, line: 92, baseType: !197, size: 64)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4376, file: !706, line: 94, baseType: !892, size: 64, offset: 64)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4376, file: !706, line: 100, baseType: !4381, size: 64, offset: 128)
!4381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4382, size: 64)
!4382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !706, line: 180, size: 704, elements: !4383)
!4383 = !{!4384, !4385, !4386, !4393, !4394, !4395, !4419, !4420}
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4382, file: !706, line: 182, baseType: !4362, size: 64)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4382, file: !706, line: 183, baseType: !7, size: 32, offset: 64)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4382, file: !706, line: 186, baseType: !4387, size: 192, offset: 128)
!4387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !4388, line: 19, size: 192, elements: !4389)
!4388 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!4389 = !{!4390, !4391, !4392}
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !4387, file: !4388, line: 20, baseType: !879, size: 128)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !4387, file: !4388, line: 21, baseType: !7, size: 32, offset: 128)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !4387, file: !4388, line: 22, baseType: !7, size: 32, offset: 160)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4382, file: !706, line: 187, baseType: !212, size: 32, offset: 320)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4382, file: !706, line: 188, baseType: !212, size: 32, offset: 352)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4382, file: !706, line: 189, baseType: !4396, size: 64, offset: 384)
!4396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4397, size: 64)
!4397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !706, line: 168, size: 320, elements: !4398)
!4398 = !{!4399, !4403, !4407, !4411, !4415}
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4397, file: !706, line: 169, baseType: !4400, size: 64)
!4400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4401, size: 64)
!4401 = !DISubroutineType(types: !4402)
!4402 = !{!188, !815, !4381}
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4397, file: !706, line: 171, baseType: !4404, size: 64, offset: 64)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4405, size: 64)
!4405 = !DISubroutineType(types: !4406)
!4406 = !{!188, !4362, !289, !411}
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4397, file: !706, line: 173, baseType: !4408, size: 64, offset: 128)
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4409, size: 64)
!4409 = !DISubroutineType(types: !4410)
!4410 = !{!188, !4362}
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4397, file: !706, line: 174, baseType: !4412, size: 64, offset: 192)
!4412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4413, size: 64)
!4413 = !DISubroutineType(types: !4414)
!4414 = !{!188, !4362, !4362, !289}
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4397, file: !706, line: 176, baseType: !4416, size: 64, offset: 256)
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 64)
!4417 = !DISubroutineType(types: !4418)
!4418 = !{!188, !815, !4362, !4381}
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4382, file: !706, line: 192, baseType: !170, size: 128, offset: 448)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4382, file: !706, line: 194, baseType: !1297, size: 128, offset: 576)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4373, file: !706, line: 144, baseType: !4422, size: 64)
!4422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !706, line: 103, size: 64, elements: !4423)
!4423 = !{!4424}
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4422, file: !706, line: 104, baseType: !4362, size: 64)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4373, file: !706, line: 145, baseType: !4426, size: 256)
!4426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !706, line: 107, size: 256, elements: !4427)
!4427 = !{!4428, !4476, !4479, !4480}
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4426, file: !706, line: 108, baseType: !4429, size: 64)
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4430, size: 64)
!4430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4431)
!4431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !706, line: 217, size: 768, elements: !4432)
!4432 = !{!4433, !4453, !4457, !4458, !4459, !4460, !4461, !4465, !4466, !4467, !4468, !4472}
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4431, file: !706, line: 222, baseType: !4434, size: 64)
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4435, size: 64)
!4435 = !DISubroutineType(types: !4436)
!4436 = !{!188, !4437}
!4437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4438, size: 64)
!4438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !706, line: 197, size: 1088, elements: !4439)
!4439 = !{!4440, !4441, !4442, !4443, !4444, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452}
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4438, file: !706, line: 199, baseType: !4362, size: 64)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4438, file: !706, line: 200, baseType: !447, size: 64, offset: 64)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4438, file: !706, line: 201, baseType: !815, size: 64, offset: 128)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4438, file: !706, line: 202, baseType: !165, size: 64, offset: 192)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4438, file: !706, line: 205, baseType: !270, size: 192, offset: 256)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4438, file: !706, line: 206, baseType: !270, size: 192, offset: 448)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4438, file: !706, line: 207, baseType: !188, size: 32, offset: 640)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4438, file: !706, line: 208, baseType: !170, size: 128, offset: 704)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4438, file: !706, line: 209, baseType: !370, size: 64, offset: 832)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4438, file: !706, line: 211, baseType: !417, size: 64, offset: 896)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4438, file: !706, line: 212, baseType: !190, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4438, file: !706, line: 213, baseType: !190, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4438, file: !706, line: 214, baseType: !2074, size: 64, offset: 1024)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4431, file: !706, line: 223, baseType: !4454, size: 64, offset: 64)
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 64)
!4455 = !DISubroutineType(types: !4456)
!4456 = !{null, !4437}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4431, file: !706, line: 236, baseType: !846, size: 64, offset: 128)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4431, file: !706, line: 238, baseType: !833, size: 64, offset: 192)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4431, file: !706, line: 239, baseType: !842, size: 64, offset: 256)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4431, file: !706, line: 240, baseType: !838, size: 64, offset: 320)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4431, file: !706, line: 242, baseType: !4462, size: 64, offset: 384)
!4462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4463, size: 64)
!4463 = !DISubroutineType(types: !4464)
!4464 = !{!401, !4437, !370, !417, !620}
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4431, file: !706, line: 252, baseType: !417, size: 64, offset: 448)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4431, file: !706, line: 259, baseType: !190, size: 8, offset: 512)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4431, file: !706, line: 260, baseType: !4462, size: 64, offset: 576)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4431, file: !706, line: 263, baseType: !4469, size: 64, offset: 640)
!4469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 64)
!4470 = !DISubroutineType(types: !4471)
!4471 = !{!4045, !4437, !4047}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4431, file: !706, line: 266, baseType: !4473, size: 64, offset: 704)
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4474, size: 64)
!4474 = !DISubroutineType(types: !4475)
!4475 = !{!188, !4437, !2046}
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4426, file: !706, line: 109, baseType: !4477, size: 64, offset: 64)
!4477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4478, size: 64)
!4478 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !706, line: 31, flags: DIFlagFwdDecl)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4426, file: !706, line: 110, baseType: !620, size: 64, offset: 128)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4426, file: !706, line: 111, baseType: !4362, size: 64, offset: 192)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4363, file: !706, line: 148, baseType: !165, size: 64, offset: 768)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4363, file: !706, line: 154, baseType: !512, size: 64, offset: 832)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4363, file: !706, line: 156, baseType: !412, size: 16, offset: 896)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4363, file: !706, line: 157, baseType: !411, size: 16, offset: 912)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4363, file: !706, line: 158, baseType: !4486, size: 64, offset: 960)
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 64)
!4487 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !706, line: 32, flags: DIFlagFwdDecl)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !331, file: !332, line: 71, baseType: !176, size: 32, offset: 448)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !331, file: !332, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !331, file: !332, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !331, file: !332, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !331, file: !332, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !331, file: !332, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !328, file: !115, line: 463, baseType: !1739, size: 64, offset: 512)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !328, file: !115, line: 465, baseType: !4496, size: 64, offset: 576)
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !115, line: 36, flags: DIFlagFwdDecl)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !328, file: !115, line: 467, baseType: !289, size: 64, offset: 640)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !328, file: !115, line: 468, baseType: !4500, size: 64, offset: 704)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 64)
!4501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4502)
!4502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !115, line: 87, size: 384, elements: !4503)
!4503 = !{!4504, !4505, !4506, !4510, !4514, !4518}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4502, file: !115, line: 88, baseType: !289, size: 64)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4502, file: !115, line: 89, baseType: !423, size: 64, offset: 64)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4502, file: !115, line: 90, baseType: !4507, size: 64, offset: 128)
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4508, size: 64)
!4508 = !DISubroutineType(types: !4509)
!4509 = !{!188, !1739, !365}
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4502, file: !115, line: 91, baseType: !4511, size: 64, offset: 192)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{!370, !1739, !1386, !2863, !2864}
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4502, file: !115, line: 93, baseType: !4515, size: 64, offset: 256)
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4516, size: 64)
!4516 = !DISubroutineType(types: !4517)
!4517 = !{null, !1739}
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4502, file: !115, line: 95, baseType: !4519, size: 64, offset: 320)
!4519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4520, size: 64)
!4520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4521)
!4521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !44, line: 278, size: 1472, elements: !4522)
!4522 = !{!4523, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4521, file: !44, line: 279, baseType: !4524, size: 64)
!4524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4525, size: 64)
!4525 = !DISubroutineType(types: !4526)
!4526 = !{!188, !1739}
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4521, file: !44, line: 280, baseType: !4515, size: 64, offset: 64)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4521, file: !44, line: 281, baseType: !4524, size: 64, offset: 128)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4521, file: !44, line: 282, baseType: !4524, size: 64, offset: 192)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4521, file: !44, line: 283, baseType: !4524, size: 64, offset: 256)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4521, file: !44, line: 284, baseType: !4524, size: 64, offset: 320)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4521, file: !44, line: 285, baseType: !4524, size: 64, offset: 384)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4521, file: !44, line: 286, baseType: !4524, size: 64, offset: 448)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4521, file: !44, line: 287, baseType: !4524, size: 64, offset: 512)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4521, file: !44, line: 288, baseType: !4524, size: 64, offset: 576)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4521, file: !44, line: 289, baseType: !4524, size: 64, offset: 640)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4521, file: !44, line: 290, baseType: !4524, size: 64, offset: 704)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4521, file: !44, line: 291, baseType: !4524, size: 64, offset: 768)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4521, file: !44, line: 292, baseType: !4524, size: 64, offset: 832)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4521, file: !44, line: 293, baseType: !4524, size: 64, offset: 896)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4521, file: !44, line: 294, baseType: !4524, size: 64, offset: 960)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4521, file: !44, line: 295, baseType: !4524, size: 64, offset: 1024)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4521, file: !44, line: 296, baseType: !4524, size: 64, offset: 1088)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4521, file: !44, line: 297, baseType: !4524, size: 64, offset: 1152)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4521, file: !44, line: 298, baseType: !4524, size: 64, offset: 1216)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4521, file: !44, line: 299, baseType: !4524, size: 64, offset: 1280)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4521, file: !44, line: 300, baseType: !4524, size: 64, offset: 1344)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4521, file: !44, line: 301, baseType: !4524, size: 64, offset: 1408)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !328, file: !115, line: 470, baseType: !4550, size: 64, offset: 768)
!4550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4551, size: 64)
!4551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4552, line: 82, size: 1408, elements: !4553)
!4552 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4553 = !{!4554, !4555, !4556, !4557, !4558, !4559, !4560, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4635, !4638, !4639}
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4551, file: !4552, line: 83, baseType: !289, size: 64)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4551, file: !4552, line: 84, baseType: !289, size: 64, offset: 64)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4551, file: !4552, line: 85, baseType: !1739, size: 64, offset: 128)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4551, file: !4552, line: 86, baseType: !423, size: 64, offset: 192)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4551, file: !4552, line: 87, baseType: !423, size: 64, offset: 256)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4551, file: !4552, line: 88, baseType: !423, size: 64, offset: 320)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4551, file: !4552, line: 90, baseType: !4561, size: 64, offset: 384)
!4561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4562, size: 64)
!4562 = !DISubroutineType(types: !4563)
!4563 = !{!188, !1739, !4564}
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !109, line: 95, size: 1152, elements: !4566)
!4566 = !{!4567, !4568, !4569, !4570, !4571, !4572, !4573, !4586, !4599, !4600, !4601, !4602, !4603, !4611, !4612, !4613, !4614, !4615, !4616}
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4565, file: !109, line: 96, baseType: !289, size: 64)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4565, file: !109, line: 97, baseType: !4550, size: 64, offset: 64)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4565, file: !109, line: 99, baseType: !720, size: 64, offset: 128)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4565, file: !109, line: 100, baseType: !289, size: 64, offset: 192)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4565, file: !109, line: 102, baseType: !190, size: 8, offset: 256)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4565, file: !109, line: 103, baseType: !108, size: 32, offset: 288)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4565, file: !109, line: 105, baseType: !4574, size: 64, offset: 320)
!4574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4575, size: 64)
!4575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4576)
!4576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4577, line: 262, size: 1600, elements: !4578)
!4577 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4578 = !{!4579, !4580, !4581, !4585}
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4576, file: !4577, line: 263, baseType: !1185, size: 256)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4576, file: !4577, line: 264, baseType: !1185, size: 256, offset: 256)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4576, file: !4577, line: 265, baseType: !4582, size: 1024, offset: 512)
!4582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !291, size: 1024, elements: !4583)
!4583 = !{!4584}
!4584 = !DISubrange(count: 128)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4576, file: !4577, line: 266, baseType: !324, size: 64, offset: 1536)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4565, file: !109, line: 106, baseType: !4587, size: 64, offset: 384)
!4587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4588, size: 64)
!4588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4589)
!4589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4577, line: 210, size: 256, elements: !4590)
!4590 = !{!4591, !4595, !4597, !4598}
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4589, file: !4577, line: 211, baseType: !4592, size: 72)
!4592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1109, size: 72, elements: !4593)
!4593 = !{!4594}
!4594 = !DISubrange(count: 9)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4589, file: !4577, line: 212, baseType: !4596, size: 64, offset: 128)
!4596 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4577, line: 14, baseType: !197)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4589, file: !4577, line: 213, baseType: !214, size: 32, offset: 192)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4589, file: !4577, line: 214, baseType: !214, size: 32, offset: 224)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4565, file: !109, line: 108, baseType: !4524, size: 64, offset: 448)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4565, file: !109, line: 109, baseType: !4515, size: 64, offset: 512)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4565, file: !109, line: 110, baseType: !4524, size: 64, offset: 576)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4565, file: !109, line: 111, baseType: !4515, size: 64, offset: 640)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4565, file: !109, line: 112, baseType: !4604, size: 64, offset: 704)
!4604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4605, size: 64)
!4605 = !DISubroutineType(types: !4606)
!4606 = !{!188, !1739, !4607}
!4607 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !44, line: 52, baseType: !4608)
!4608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !44, line: 50, size: 32, elements: !4609)
!4609 = !{!4610}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4608, file: !44, line: 51, baseType: !188, size: 32)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4565, file: !109, line: 113, baseType: !4524, size: 64, offset: 768)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4565, file: !109, line: 114, baseType: !423, size: 64, offset: 832)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4565, file: !109, line: 115, baseType: !423, size: 64, offset: 896)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4565, file: !109, line: 117, baseType: !4519, size: 64, offset: 960)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4565, file: !109, line: 118, baseType: !4515, size: 64, offset: 1024)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4565, file: !109, line: 120, baseType: !4617, size: 64, offset: 1088)
!4617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4618, size: 64)
!4618 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !109, line: 120, flags: DIFlagFwdDecl)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4551, file: !4552, line: 91, baseType: !4507, size: 64, offset: 448)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4551, file: !4552, line: 92, baseType: !4524, size: 64, offset: 512)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4551, file: !4552, line: 93, baseType: !4515, size: 64, offset: 576)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4551, file: !4552, line: 94, baseType: !4524, size: 64, offset: 640)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4551, file: !4552, line: 95, baseType: !4515, size: 64, offset: 704)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4551, file: !4552, line: 97, baseType: !4524, size: 64, offset: 768)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4551, file: !4552, line: 98, baseType: !4524, size: 64, offset: 832)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4551, file: !4552, line: 100, baseType: !4604, size: 64, offset: 896)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4551, file: !4552, line: 101, baseType: !4524, size: 64, offset: 960)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4551, file: !4552, line: 103, baseType: !4524, size: 64, offset: 1024)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4551, file: !4552, line: 105, baseType: !4524, size: 64, offset: 1088)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4551, file: !4552, line: 107, baseType: !4519, size: 64, offset: 1152)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4551, file: !4552, line: 109, baseType: !4632, size: 64, offset: 1216)
!4632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4633, size: 64)
!4633 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4634)
!4634 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4552, line: 109, flags: DIFlagFwdDecl)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4551, file: !4552, line: 111, baseType: !4636, size: 64, offset: 1280)
!4636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4637, size: 64)
!4637 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4552, line: 111, flags: DIFlagFwdDecl)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4551, file: !4552, line: 112, baseType: !735, offset: 1344)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4551, file: !4552, line: 114, baseType: !190, size: 8, offset: 1344)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !328, file: !115, line: 471, baseType: !4564, size: 64, offset: 832)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !328, file: !115, line: 473, baseType: !165, size: 64, offset: 896)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !328, file: !115, line: 475, baseType: !165, size: 64, offset: 960)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !328, file: !115, line: 480, baseType: !270, size: 192, offset: 1024)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !328, file: !115, line: 484, baseType: !4645, size: 576, offset: 1216)
!4645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !115, line: 361, size: 576, elements: !4646)
!4646 = !{!4647, !4648, !4649, !4650, !4651, !4652}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4645, file: !115, line: 362, baseType: !170, size: 128)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4645, file: !115, line: 363, baseType: !170, size: 128, offset: 128)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4645, file: !115, line: 364, baseType: !170, size: 128, offset: 256)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4645, file: !115, line: 365, baseType: !170, size: 128, offset: 384)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4645, file: !115, line: 366, baseType: !190, size: 8, offset: 512)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4645, file: !115, line: 367, baseType: !114, size: 32, offset: 544)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !328, file: !115, line: 485, baseType: !4654, size: 2304, offset: 1792)
!4654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !44, line: 565, size: 2304, elements: !4655)
!4655 = !{!4656, !4657, !4658, !4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666, !4667, !4668, !4669, !4670, !4671, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4717, !4718, !4719, !4720, !4721, !4722, !4723, !4724, !4725, !4726, !4727, !4728, !4729, !4730, !4744, !4748}
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4654, file: !44, line: 566, baseType: !4607, size: 32)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4654, file: !44, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4654, file: !44, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4654, file: !44, line: 569, baseType: !190, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4654, file: !44, line: 570, baseType: !190, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4654, file: !44, line: 571, baseType: !190, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4654, file: !44, line: 572, baseType: !190, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4654, file: !44, line: 573, baseType: !190, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4654, file: !44, line: 574, baseType: !190, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4654, file: !44, line: 575, baseType: !190, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4654, file: !44, line: 576, baseType: !190, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4654, file: !44, line: 577, baseType: !212, size: 32, offset: 64)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4654, file: !44, line: 578, baseType: !275, offset: 96)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4654, file: !44, line: 580, baseType: !170, size: 128, offset: 128)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4654, file: !44, line: 581, baseType: !2544, size: 192, offset: 256)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4654, file: !44, line: 582, baseType: !4672, size: 64, offset: 448)
!4672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4673, size: 64)
!4673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4674, line: 43, size: 1472, elements: !4675)
!4674 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4675 = !{!4676, !4677, !4678, !4679, !4680, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697}
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4673, file: !4674, line: 44, baseType: !289, size: 64)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4673, file: !4674, line: 45, baseType: !188, size: 32, offset: 64)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4673, file: !4674, line: 46, baseType: !170, size: 128, offset: 128)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4673, file: !4674, line: 47, baseType: !275, offset: 256)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4673, file: !4674, line: 48, baseType: !4681, size: 64, offset: 256)
!4681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4682, size: 64)
!4682 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !44, line: 533, flags: DIFlagFwdDecl)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4673, file: !4674, line: 49, baseType: !1721, size: 320, offset: 320)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4673, file: !4674, line: 50, baseType: !197, size: 64, offset: 640)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4673, file: !4674, line: 51, baseType: !2351, size: 64, offset: 704)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4673, file: !4674, line: 52, baseType: !2351, size: 64, offset: 768)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4673, file: !4674, line: 53, baseType: !2351, size: 64, offset: 832)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4673, file: !4674, line: 54, baseType: !2351, size: 64, offset: 896)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4673, file: !4674, line: 55, baseType: !2351, size: 64, offset: 960)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4673, file: !4674, line: 56, baseType: !197, size: 64, offset: 1024)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4673, file: !4674, line: 57, baseType: !197, size: 64, offset: 1088)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4673, file: !4674, line: 58, baseType: !197, size: 64, offset: 1152)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4673, file: !4674, line: 59, baseType: !197, size: 64, offset: 1216)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4673, file: !4674, line: 60, baseType: !197, size: 64, offset: 1280)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4673, file: !4674, line: 61, baseType: !1739, size: 64, offset: 1344)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4673, file: !4674, line: 62, baseType: !190, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4673, file: !4674, line: 63, baseType: !190, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4654, file: !44, line: 583, baseType: !190, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4654, file: !44, line: 584, baseType: !190, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4654, file: !44, line: 585, baseType: !190, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4654, file: !44, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4654, file: !44, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4654, file: !44, line: 592, baseType: !2343, size: 512, offset: 576)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4654, file: !44, line: 593, baseType: !512, size: 64, offset: 1088)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4654, file: !44, line: 594, baseType: !1161, size: 256, offset: 1152)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4654, file: !44, line: 595, baseType: !1297, size: 128, offset: 1408)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4654, file: !44, line: 596, baseType: !4681, size: 64, offset: 1536)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4654, file: !44, line: 597, baseType: !184, size: 32, offset: 1600)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4654, file: !44, line: 598, baseType: !184, size: 32, offset: 1632)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4654, file: !44, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4654, file: !44, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4654, file: !44, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4654, file: !44, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4654, file: !44, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4654, file: !44, line: 604, baseType: !190, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4654, file: !44, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4654, file: !44, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4654, file: !44, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4654, file: !44, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4654, file: !44, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4654, file: !44, line: 610, baseType: !7, size: 32, offset: 1696)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4654, file: !44, line: 611, baseType: !121, size: 32, offset: 1728)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4654, file: !44, line: 612, baseType: !43, size: 32, offset: 1760)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4654, file: !44, line: 613, baseType: !188, size: 32, offset: 1792)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4654, file: !44, line: 614, baseType: !188, size: 32, offset: 1824)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4654, file: !44, line: 615, baseType: !512, size: 64, offset: 1856)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4654, file: !44, line: 616, baseType: !512, size: 64, offset: 1920)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4654, file: !44, line: 617, baseType: !512, size: 64, offset: 1984)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4654, file: !44, line: 618, baseType: !512, size: 64, offset: 2048)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4654, file: !44, line: 620, baseType: !4731, size: 64, offset: 2112)
!4731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4732, size: 64)
!4732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !44, line: 536, size: 256, elements: !4733)
!4733 = !{!4734, !4735, !4736, !4737}
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4732, file: !44, line: 537, baseType: !275)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4732, file: !44, line: 538, baseType: !7, size: 32)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4732, file: !44, line: 540, baseType: !170, size: 128, offset: 64)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4732, file: !44, line: 543, baseType: !4738, size: 64, offset: 192)
!4738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4739, size: 64)
!4739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !4740, line: 182, size: 192, elements: !4741)
!4740 = !DIFile(filename: "./include/linux/pm_domain.h", directory: "/home/lizy2001/genbc/linux")
!4741 = !{!4742, !4743}
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !4739, file: !4740, line: 183, baseType: !170, size: 128)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4739, file: !4740, line: 184, baseType: !1739, size: 64, offset: 128)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4654, file: !44, line: 621, baseType: !4745, size: 64, offset: 2176)
!4745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4746, size: 64)
!4746 = !DISubroutineType(types: !4747)
!4747 = !{null, !1739, !2493}
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4654, file: !44, line: 622, baseType: !4749, size: 64, offset: 2240)
!4749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4750, size: 64)
!4750 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !44, line: 622, flags: DIFlagFwdDecl)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !328, file: !115, line: 486, baseType: !4752, size: 64, offset: 4096)
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !44, line: 642, size: 1792, elements: !4754)
!4754 = !{!4755, !4756, !4757, !4761, !4762, !4763}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4753, file: !44, line: 643, baseType: !4521, size: 1472)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4753, file: !44, line: 644, baseType: !4524, size: 64, offset: 1472)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4753, file: !44, line: 645, baseType: !4758, size: 64, offset: 1536)
!4758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4759, size: 64)
!4759 = !DISubroutineType(types: !4760)
!4760 = !{null, !1739, !190}
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4753, file: !44, line: 646, baseType: !4524, size: 64, offset: 1600)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4753, file: !44, line: 647, baseType: !4515, size: 64, offset: 1664)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4753, file: !44, line: 648, baseType: !4515, size: 64, offset: 1728)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !328, file: !115, line: 493, baseType: !4765, size: 64, offset: 4160)
!4765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4766, size: 64)
!4766 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !115, line: 493, flags: DIFlagFwdDecl)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !328, file: !115, line: 499, baseType: !170, size: 128, offset: 4224)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !328, file: !115, line: 502, baseType: !4769, size: 64, offset: 4352)
!4769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4770, size: 64)
!4770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4771)
!4771 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !115, line: 502, flags: DIFlagFwdDecl)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !328, file: !115, line: 504, baseType: !4773, size: 64, offset: 4416)
!4773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !328, file: !115, line: 505, baseType: !512, size: 64, offset: 4480)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !328, file: !115, line: 510, baseType: !512, size: 64, offset: 4544)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !328, file: !115, line: 511, baseType: !4777, size: 64, offset: 4608)
!4777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4778, size: 64)
!4778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4779)
!4779 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !115, line: 511, flags: DIFlagFwdDecl)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !328, file: !115, line: 513, baseType: !4781, size: 64, offset: 4672)
!4781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4782, size: 64)
!4782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !115, line: 288, size: 128, elements: !4783)
!4783 = !{!4784, !4785}
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4782, file: !115, line: 293, baseType: !7, size: 32)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4782, file: !115, line: 294, baseType: !197, size: 64, offset: 64)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !328, file: !115, line: 515, baseType: !170, size: 128, offset: 4736)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !328, file: !115, line: 526, baseType: !4788, offset: 4864)
!4788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4789, line: 5, elements: !253)
!4789 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !328, file: !115, line: 528, baseType: !284, size: 64, offset: 4864)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !328, file: !115, line: 529, baseType: !300, size: 64, offset: 4928)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !328, file: !115, line: 534, baseType: !602, size: 32, offset: 4992)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !328, file: !115, line: 535, baseType: !212, size: 32, offset: 5024)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !328, file: !115, line: 537, baseType: !275, offset: 5056)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !328, file: !115, line: 538, baseType: !170, size: 128, offset: 5056)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !328, file: !115, line: 540, baseType: !4797, size: 64, offset: 5184)
!4797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4798, size: 64)
!4798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4799, line: 54, size: 960, elements: !4800)
!4799 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4800 = !{!4801, !4802, !4803, !4804, !4805, !4806, !4807, !4811, !4815, !4816, !4817, !4818, !4822, !4826, !4827}
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4798, file: !4799, line: 55, baseType: !289, size: 64)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4798, file: !4799, line: 56, baseType: !720, size: 64, offset: 64)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4798, file: !4799, line: 58, baseType: !423, size: 64, offset: 128)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4798, file: !4799, line: 59, baseType: !423, size: 64, offset: 192)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4798, file: !4799, line: 60, baseType: !337, size: 64, offset: 256)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4798, file: !4799, line: 62, baseType: !4507, size: 64, offset: 320)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4798, file: !4799, line: 63, baseType: !4808, size: 64, offset: 384)
!4808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4809, size: 64)
!4809 = !DISubroutineType(types: !4810)
!4810 = !{!370, !1739, !1386}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4798, file: !4799, line: 65, baseType: !4812, size: 64, offset: 448)
!4812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4813, size: 64)
!4813 = !DISubroutineType(types: !4814)
!4814 = !{null, !4797}
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4798, file: !4799, line: 66, baseType: !4515, size: 64, offset: 512)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4798, file: !4799, line: 68, baseType: !4524, size: 64, offset: 576)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4798, file: !4799, line: 70, baseType: !4329, size: 64, offset: 640)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4798, file: !4799, line: 71, baseType: !4819, size: 64, offset: 704)
!4819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4820, size: 64)
!4820 = !DISubroutineType(types: !4821)
!4821 = !{!324, !1739}
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4798, file: !4799, line: 73, baseType: !4823, size: 64, offset: 768)
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4824, size: 64)
!4824 = !DISubroutineType(types: !4825)
!4825 = !{null, !1739, !2863, !2864}
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4798, file: !4799, line: 75, baseType: !4519, size: 64, offset: 832)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4798, file: !4799, line: 77, baseType: !4636, size: 64, offset: 896)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !328, file: !115, line: 541, baseType: !423, size: 64, offset: 5248)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !328, file: !115, line: 543, baseType: !4515, size: 64, offset: 5312)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !328, file: !115, line: 544, baseType: !4831, size: 64, offset: 5376)
!4831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4832, size: 64)
!4832 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !115, line: 45, flags: DIFlagFwdDecl)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !328, file: !115, line: 545, baseType: !4834, size: 64, offset: 5440)
!4834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 64)
!4835 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !115, line: 47, flags: DIFlagFwdDecl)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !328, file: !115, line: 547, baseType: !190, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !328, file: !115, line: 548, baseType: !190, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !328, file: !115, line: 549, baseType: !190, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !328, file: !115, line: 550, baseType: !190, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !304, file: !297, line: 116, baseType: !4841, size: 64, offset: 256)
!4841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4842, size: 64)
!4842 = !DISubroutineType(types: !4843)
!4843 = !{!190, !318, !289}
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !304, file: !297, line: 118, baseType: !4845, size: 64, offset: 320)
!4845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4846, size: 64)
!4846 = !DISubroutineType(types: !4847)
!4847 = !{!188, !318, !289, !7, !165, !417}
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !304, file: !297, line: 123, baseType: !4849, size: 64, offset: 384)
!4849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4850, size: 64)
!4850 = !DISubroutineType(types: !4851)
!4851 = !{!188, !318, !289, !4852, !417}
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !304, file: !297, line: 126, baseType: !4854, size: 64, offset: 448)
!4854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4855, size: 64)
!4855 = !DISubroutineType(types: !4856)
!4856 = !{!289, !318}
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !304, file: !297, line: 127, baseType: !4854, size: 64, offset: 512)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !304, file: !297, line: 128, baseType: !4859, size: 64, offset: 576)
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 64)
!4860 = !DISubroutineType(types: !4861)
!4861 = !{!300, !318}
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !304, file: !297, line: 130, baseType: !4863, size: 64, offset: 640)
!4863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4864, size: 64)
!4864 = !DISubroutineType(types: !4865)
!4865 = !{!300, !318, !300}
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !304, file: !297, line: 133, baseType: !4867, size: 64, offset: 704)
!4867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4868, size: 64)
!4868 = !DISubroutineType(types: !4869)
!4869 = !{!300, !318, !289}
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !304, file: !297, line: 135, baseType: !4871, size: 64, offset: 768)
!4871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4872, size: 64)
!4872 = !DISubroutineType(types: !4873)
!4873 = !{!188, !318, !289, !289, !7, !7, !4874}
!4874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4875, size: 64)
!4875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !297, line: 43, size: 640, elements: !4876)
!4876 = !{!4877, !4878, !4879}
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4875, file: !297, line: 44, baseType: !300, size: 64)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4875, file: !297, line: 45, baseType: !7, size: 32, offset: 64)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4875, file: !297, line: 46, baseType: !4880, size: 512, offset: 128)
!4880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 512, elements: !2381)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !304, file: !297, line: 140, baseType: !4863, size: 64, offset: 832)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !304, file: !297, line: 143, baseType: !4859, size: 64, offset: 896)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !304, file: !297, line: 145, baseType: !307, size: 64, offset: 960)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !304, file: !297, line: 146, baseType: !4885, size: 64, offset: 1024)
!4885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4886, size: 64)
!4886 = !DISubroutineType(types: !4887)
!4887 = !{!188, !318, !4888}
!4888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4889, size: 64)
!4889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !297, line: 29, size: 128, elements: !4890)
!4890 = !{!4891, !4892, !4893}
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4889, file: !297, line: 30, baseType: !7, size: 32)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4889, file: !297, line: 31, baseType: !7, size: 32, offset: 32)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4889, file: !297, line: 32, baseType: !318, size: 64, offset: 64)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !304, file: !297, line: 148, baseType: !4895, size: 64, offset: 1088)
!4895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4896, size: 64)
!4896 = !DISubroutineType(types: !4897)
!4897 = !{!188, !318, !1739}
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !296, file: !297, line: 20, baseType: !1739, size: 64, offset: 128)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !285, file: !286, line: 57, baseType: !4900, size: 64, offset: 384)
!4900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4901, size: 64)
!4901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !286, line: 31, size: 704, elements: !4902)
!4902 = !{!4903, !4904, !4905, !4906, !4907}
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4901, file: !286, line: 32, baseType: !370, size: 64)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4901, file: !286, line: 33, baseType: !188, size: 32, offset: 64)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4901, file: !286, line: 34, baseType: !165, size: 64, offset: 128)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4901, file: !286, line: 35, baseType: !4900, size: 64, offset: 192)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4901, file: !286, line: 43, baseType: !438, size: 448, offset: 256)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !285, file: !286, line: 58, baseType: !4900, size: 64, offset: 448)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !285, file: !286, line: 59, baseType: !284, size: 64, offset: 512)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !285, file: !286, line: 60, baseType: !284, size: 64, offset: 576)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !285, file: !286, line: 61, baseType: !284, size: 64, offset: 640)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !285, file: !286, line: 63, baseType: !331, size: 512, offset: 704)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !285, file: !286, line: 65, baseType: !197, size: 64, offset: 1216)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !285, file: !286, line: 66, baseType: !165, size: 64, offset: 1280)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "clock_latency_ns_max", scope: !222, file: !129, line: 178, baseType: !197, size: 64, offset: 1024)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "voltage_tolerance_v1", scope: !222, file: !129, line: 181, baseType: !7, size: 32, offset: 1088)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "parsed_static_opps", scope: !222, file: !129, line: 183, baseType: !7, size: 32, offset: 1120)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "shared_opp", scope: !222, file: !129, line: 184, baseType: !128, size: 32, offset: 1152)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_opp", scope: !222, file: !129, line: 185, baseType: !166, size: 64, offset: 1216)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "genpd_virt_dev_lock", scope: !222, file: !129, line: 187, baseType: !270, size: 192, offset: 1280)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "genpd_virt_devs", scope: !222, file: !129, line: 188, baseType: !4922, size: 64, offset: 1472)
!4922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 64)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "required_opp_tables", scope: !222, file: !129, line: 189, baseType: !4924, size: 64, offset: 1536)
!4924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "required_opp_count", scope: !222, file: !129, line: 190, baseType: !7, size: 32, offset: 1600)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "supported_hw", scope: !222, file: !129, line: 192, baseType: !1083, size: 64, offset: 1664)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "supported_hw_count", scope: !222, file: !129, line: 193, baseType: !7, size: 32, offset: 1728)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "prop_name", scope: !222, file: !129, line: 194, baseType: !289, size: 64, offset: 1792)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "clk", scope: !222, file: !129, line: 195, baseType: !4930, size: 64, offset: 1856)
!4930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4931, size: 64)
!4931 = !DICompositeType(tag: DW_TAG_structure_type, name: "clk", file: !4932, line: 17, flags: DIFlagFwdDecl)
!4932 = !DIFile(filename: "./include/linux/clk.h", directory: "/home/lizy2001/genbc/linux")
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "regulators", scope: !222, file: !129, line: 196, baseType: !4934, size: 64, offset: 1920)
!4934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4935, size: 64)
!4935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4936, size: 64)
!4936 = !DICompositeType(tag: DW_TAG_structure_type, name: "regulator", file: !4937, line: 155, flags: DIFlagFwdDecl)
!4937 = !DIFile(filename: "./include/linux/regulator/consumer.h", directory: "/home/lizy2001/genbc/linux")
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "regulator_count", scope: !222, file: !129, line: 197, baseType: !188, size: 32, offset: 1984)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "paths", scope: !222, file: !129, line: 198, baseType: !4940, size: 64, offset: 2048)
!4940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4941, size: 64)
!4941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4942, size: 64)
!4942 = !DICompositeType(tag: DW_TAG_structure_type, name: "icc_path", file: !4943, line: 23, flags: DIFlagFwdDecl)
!4943 = !DIFile(filename: "./include/linux/interconnect.h", directory: "/home/lizy2001/genbc/linux")
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "path_count", scope: !222, file: !129, line: 199, baseType: !7, size: 32, offset: 2112)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !222, file: !129, line: 200, baseType: !190, size: 8, offset: 2144)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "genpd_performance_state", scope: !222, file: !129, line: 201, baseType: !190, size: 8, offset: 2152)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "is_genpd", scope: !222, file: !129, line: 202, baseType: !190, size: 8, offset: 2160)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "set_opp", scope: !222, file: !129, line: 204, baseType: !4949, size: 64, offset: 2176)
!4949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4950, size: 64)
!4950 = !DISubroutineType(types: !4951)
!4951 = !{!188, !4952}
!4952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4953, size: 64)
!4953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_set_opp_data", file: !140, line: 80, size: 512, elements: !4954)
!4954 = !{!4955, !4960, !4961, !4962, !4963, !4964}
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "old_opp", scope: !4953, file: !140, line: 81, baseType: !4956, size: 128)
!4956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_opp_info", file: !140, line: 64, size: 128, elements: !4957)
!4957 = !{!4958, !4959}
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !4956, file: !140, line: 65, baseType: !197, size: 64)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "supplies", scope: !4956, file: !140, line: 66, baseType: !200, size: 64, offset: 64)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "new_opp", scope: !4953, file: !140, line: 82, baseType: !4956, size: 128, offset: 128)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "regulators", scope: !4953, file: !140, line: 84, baseType: !4934, size: 64, offset: 256)
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "regulator_count", scope: !4953, file: !140, line: 85, baseType: !7, size: 32, offset: 320)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "clk", scope: !4953, file: !140, line: 86, baseType: !4930, size: 64, offset: 384)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4953, file: !140, line: 87, baseType: !1739, size: 64, offset: 448)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "set_opp_data", scope: !222, file: !129, line: 205, baseType: !4952, size: 64, offset: 2240)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "np", scope: !167, file: !129, line: 93, baseType: !284, size: 64, offset: 704)
!4967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4968, size: 64)
!4968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opp_device", file: !129, line: 109, size: 192, elements: !4969)
!4969 = !{!4970, !4971}
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4968, file: !129, line: 110, baseType: !170, size: 128)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4968, file: !129, line: 111, baseType: !326, size: 64, offset: 128)
!4972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4973, size: 64)
!4973 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !173)
!4974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4975, size: 64)
!4975 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !188)
!4976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4977, size: 64)
!4977 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4973)
!4978 = !{!0, !4979, !4981, !4986, !4988}
!4979 = !DIGlobalVariableExpression(var: !4980, expr: !DIExpression())
!4980 = distinct !DIGlobalVariable(name: "opp_table_lock", scope: !2, file: !3, line: 31, type: !270, isLocal: false, isDefinition: true)
!4981 = !DIGlobalVariableExpression(var: !4982, expr: !DIExpression())
!4982 = distinct !DIGlobalVariable(name: "__key", scope: !4983, file: !3, line: 1085, type: !735, isLocal: true, isDefinition: true)
!4983 = distinct !DISubprogram(name: "_allocate_opp_table", scope: !3, file: !3, line: 1071, type: !4984, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{!221, !1739, !188}
!4986 = !DIGlobalVariableExpression(var: !4987, expr: !DIExpression())
!4987 = distinct !DIGlobalVariable(name: "__key", scope: !4983, file: !3, line: 1086, type: !735, isLocal: true, isDefinition: true)
!4988 = !DIGlobalVariableExpression(var: !4989, expr: !DIExpression())
!4989 = distinct !DIGlobalVariable(name: "__key", scope: !4983, file: !3, line: 1120, type: !735, isLocal: true, isDefinition: true)
!4990 = !{i32 7, !"Dwarf Version", i32 4}
!4991 = !{i32 2, !"Debug Info Version", i32 3}
!4992 = !{i32 1, !"wchar_size", i32 2}
!4993 = !{i32 1, !"Code Model", i32 2}
!4994 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4995 = distinct !DISubprogram(name: "_find_opp_table", scope: !3, file: !3, line: 76, type: !4996, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!4996 = !DISubroutineType(types: !4997)
!4997 = !{!221, !1739}
!4998 = !DILocalVariable(name: "dev", arg: 1, scope: !4995, file: !3, line: 76, type: !1739)
!4999 = !DILocation(line: 76, column: 50, scope: !4995)
!5000 = !DILocalVariable(name: "opp_table", scope: !4995, file: !3, line: 78, type: !221)
!5001 = !DILocation(line: 78, column: 20, scope: !4995)
!5002 = !DILocation(line: 80, column: 21, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4995, file: !3, line: 80, column: 6)
!5004 = !DILocation(line: 80, column: 6, scope: !5003)
!5005 = !DILocation(line: 80, column: 6, scope: !4995)
!5006 = !DILocation(line: 81, column: 3, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 80, column: 27)
!5008 = !DILocation(line: 82, column: 10, scope: !5007)
!5009 = !DILocation(line: 82, column: 3, scope: !5007)
!5010 = !DILocation(line: 85, column: 2, scope: !4995)
!5011 = !DILocation(line: 86, column: 39, scope: !4995)
!5012 = !DILocation(line: 86, column: 14, scope: !4995)
!5013 = !DILocation(line: 86, column: 12, scope: !4995)
!5014 = !DILocation(line: 87, column: 2, scope: !4995)
!5015 = !DILocation(line: 89, column: 9, scope: !4995)
!5016 = !DILocation(line: 89, column: 2, scope: !4995)
!5017 = !DILocation(line: 90, column: 1, scope: !4995)
!5018 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !5019, file: !5019, line: 39, type: !5020, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5019 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!5020 = !DISubroutineType(types: !5021)
!5021 = !{!190, !324}
!5022 = !DILocalVariable(name: "ptr", arg: 1, scope: !5018, file: !5019, line: 39, type: !324)
!5023 = !DILocation(line: 39, column: 68, scope: !5018)
!5024 = !DILocation(line: 41, column: 9, scope: !5018)
!5025 = !DILocation(line: 41, column: 24, scope: !5018)
!5026 = !DILocation(line: 41, column: 27, scope: !5018)
!5027 = !DILocation(line: 41, column: 2, scope: !5018)
!5028 = distinct !DISubprogram(name: "ERR_PTR", scope: !5019, file: !5019, line: 24, type: !5029, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5029 = !DISubroutineType(types: !5030)
!5030 = !{!165, !405}
!5031 = !DILocalVariable(name: "error", arg: 1, scope: !5028, file: !5019, line: 24, type: !405)
!5032 = !DILocation(line: 24, column: 48, scope: !5028)
!5033 = !DILocation(line: 26, column: 18, scope: !5028)
!5034 = !DILocation(line: 26, column: 9, scope: !5028)
!5035 = !DILocation(line: 26, column: 2, scope: !5028)
!5036 = distinct !DISubprogram(name: "_find_opp_table_unlocked", scope: !3, file: !3, line: 45, type: !4996, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5037 = !DILocalVariable(name: "dev", arg: 1, scope: !5036, file: !3, line: 45, type: !1739)
!5038 = !DILocation(line: 45, column: 66, scope: !5036)
!5039 = !DILocalVariable(name: "opp_table", scope: !5036, file: !3, line: 47, type: !221)
!5040 = !DILocation(line: 47, column: 20, scope: !5036)
!5041 = !DILocalVariable(name: "found", scope: !5036, file: !3, line: 48, type: !190)
!5042 = !DILocation(line: 48, column: 7, scope: !5036)
!5043 = !DILocalVariable(name: "__mptr", scope: !5044, file: !3, line: 50, type: !165)
!5044 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 50, column: 2)
!5045 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 50, column: 2)
!5046 = !DILocation(line: 50, column: 2, scope: !5044)
!5047 = !DILocation(line: 50, column: 2, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 50, column: 2)
!5049 = !DILocation(line: 50, column: 2, scope: !5045)
!5050 = !DILocation(line: 50, column: 2, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 50, column: 2)
!5052 = !DILocation(line: 51, column: 15, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 50, column: 52)
!5054 = !DILocation(line: 51, column: 26, scope: !5053)
!5055 = !DILocation(line: 51, column: 3, scope: !5053)
!5056 = !DILocation(line: 52, column: 27, scope: !5053)
!5057 = !DILocation(line: 52, column: 32, scope: !5053)
!5058 = !DILocation(line: 52, column: 13, scope: !5053)
!5059 = !DILocation(line: 52, column: 12, scope: !5053)
!5060 = !DILocation(line: 52, column: 11, scope: !5053)
!5061 = !DILocation(line: 52, column: 9, scope: !5053)
!5062 = !DILocation(line: 53, column: 17, scope: !5053)
!5063 = !DILocation(line: 53, column: 28, scope: !5053)
!5064 = !DILocation(line: 53, column: 3, scope: !5053)
!5065 = !DILocation(line: 55, column: 7, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5053, file: !3, line: 55, column: 7)
!5067 = !DILocation(line: 55, column: 7, scope: !5053)
!5068 = !DILocation(line: 56, column: 24, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 55, column: 14)
!5070 = !DILocation(line: 56, column: 4, scope: !5069)
!5071 = !DILocation(line: 58, column: 11, scope: !5069)
!5072 = !DILocation(line: 58, column: 4, scope: !5069)
!5073 = !DILocation(line: 60, column: 2, scope: !5053)
!5074 = !DILocalVariable(name: "__mptr", scope: !5075, file: !3, line: 50, type: !165)
!5075 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 50, column: 2)
!5076 = !DILocation(line: 50, column: 2, scope: !5075)
!5077 = !DILocation(line: 50, column: 2, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 50, column: 2)
!5079 = distinct !{!5079, !5049, !5080}
!5080 = !DILocation(line: 60, column: 2, scope: !5045)
!5081 = !DILocation(line: 62, column: 9, scope: !5036)
!5082 = !DILocation(line: 62, column: 2, scope: !5036)
!5083 = !DILocation(line: 63, column: 1, scope: !5036)
!5084 = distinct !DISubprogram(name: "dev_pm_opp_get_voltage", scope: !3, file: !3, line: 101, type: !5085, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5085 = !DISubroutineType(types: !5086)
!5086 = !{!197, !166}
!5087 = !DILocalVariable(name: "opp", arg: 1, scope: !5084, file: !3, line: 101, type: !166)
!5088 = !DILocation(line: 101, column: 57, scope: !5084)
!5089 = !DILocation(line: 103, column: 21, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5084, file: !3, line: 103, column: 6)
!5091 = !DILocation(line: 103, column: 6, scope: !5090)
!5092 = !DILocation(line: 103, column: 6, scope: !5084)
!5093 = !DILocation(line: 104, column: 3, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5090, file: !3, line: 103, column: 27)
!5095 = !DILocation(line: 105, column: 3, scope: !5094)
!5096 = !DILocation(line: 108, column: 9, scope: !5084)
!5097 = !DILocation(line: 108, column: 14, scope: !5084)
!5098 = !DILocation(line: 108, column: 26, scope: !5084)
!5099 = !DILocation(line: 108, column: 2, scope: !5084)
!5100 = !DILocation(line: 109, column: 1, scope: !5084)
!5101 = distinct !DISubprogram(name: "dev_pm_opp_get_freq", scope: !3, file: !3, line: 119, type: !5085, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5102 = !DILocalVariable(name: "opp", arg: 1, scope: !5101, file: !3, line: 119, type: !166)
!5103 = !DILocation(line: 119, column: 54, scope: !5101)
!5104 = !DILocation(line: 121, column: 21, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 121, column: 6)
!5106 = !DILocation(line: 121, column: 6, scope: !5105)
!5107 = !DILocation(line: 121, column: 6, scope: !5101)
!5108 = !DILocation(line: 122, column: 3, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 121, column: 27)
!5110 = !DILocation(line: 123, column: 3, scope: !5109)
!5111 = !DILocation(line: 126, column: 9, scope: !5101)
!5112 = !DILocation(line: 126, column: 14, scope: !5101)
!5113 = !DILocation(line: 126, column: 2, scope: !5101)
!5114 = !DILocation(line: 127, column: 1, scope: !5101)
!5115 = distinct !DISubprogram(name: "dev_pm_opp_get_level", scope: !3, file: !3, line: 137, type: !5116, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{!7, !166}
!5118 = !DILocalVariable(name: "opp", arg: 1, scope: !5115, file: !3, line: 137, type: !166)
!5119 = !DILocation(line: 137, column: 54, scope: !5115)
!5120 = !DILocation(line: 139, column: 21, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5115, file: !3, line: 139, column: 6)
!5122 = !DILocation(line: 139, column: 6, scope: !5121)
!5123 = !DILocation(line: 139, column: 26, scope: !5121)
!5124 = !DILocation(line: 139, column: 30, scope: !5121)
!5125 = !DILocation(line: 139, column: 35, scope: !5121)
!5126 = !DILocation(line: 139, column: 6, scope: !5115)
!5127 = !DILocation(line: 140, column: 3, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5121, file: !3, line: 139, column: 46)
!5129 = !DILocation(line: 141, column: 3, scope: !5128)
!5130 = !DILocation(line: 144, column: 9, scope: !5115)
!5131 = !DILocation(line: 144, column: 14, scope: !5115)
!5132 = !DILocation(line: 144, column: 2, scope: !5115)
!5133 = !DILocation(line: 145, column: 1, scope: !5115)
!5134 = distinct !DISubprogram(name: "dev_pm_opp_is_turbo", scope: !3, file: !3, line: 158, type: !5135, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5135 = !DISubroutineType(types: !5136)
!5136 = !{!190, !166}
!5137 = !DILocalVariable(name: "opp", arg: 1, scope: !5134, file: !3, line: 158, type: !166)
!5138 = !DILocation(line: 158, column: 45, scope: !5134)
!5139 = !DILocation(line: 160, column: 21, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5134, file: !3, line: 160, column: 6)
!5141 = !DILocation(line: 160, column: 6, scope: !5140)
!5142 = !DILocation(line: 160, column: 26, scope: !5140)
!5143 = !DILocation(line: 160, column: 30, scope: !5140)
!5144 = !DILocation(line: 160, column: 35, scope: !5140)
!5145 = !DILocation(line: 160, column: 6, scope: !5134)
!5146 = !DILocation(line: 161, column: 3, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 160, column: 46)
!5148 = !DILocation(line: 162, column: 3, scope: !5147)
!5149 = !DILocation(line: 165, column: 9, scope: !5134)
!5150 = !DILocation(line: 165, column: 14, scope: !5134)
!5151 = !DILocation(line: 165, column: 2, scope: !5134)
!5152 = !DILocation(line: 166, column: 1, scope: !5134)
!5153 = distinct !DISubprogram(name: "dev_pm_opp_get_max_clock_latency", scope: !3, file: !3, line: 175, type: !5154, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5154 = !DISubroutineType(types: !5155)
!5155 = !{!197, !1739}
!5156 = !DILocalVariable(name: "dev", arg: 1, scope: !5153, file: !3, line: 175, type: !1739)
!5157 = !DILocation(line: 175, column: 63, scope: !5153)
!5158 = !DILocalVariable(name: "opp_table", scope: !5153, file: !3, line: 177, type: !221)
!5159 = !DILocation(line: 177, column: 20, scope: !5153)
!5160 = !DILocalVariable(name: "clock_latency_ns", scope: !5153, file: !3, line: 178, type: !197)
!5161 = !DILocation(line: 178, column: 16, scope: !5153)
!5162 = !DILocation(line: 180, column: 30, scope: !5153)
!5163 = !DILocation(line: 180, column: 14, scope: !5153)
!5164 = !DILocation(line: 180, column: 12, scope: !5153)
!5165 = !DILocation(line: 181, column: 13, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 181, column: 6)
!5167 = !DILocation(line: 181, column: 6, scope: !5166)
!5168 = !DILocation(line: 181, column: 6, scope: !5153)
!5169 = !DILocation(line: 182, column: 3, scope: !5166)
!5170 = !DILocation(line: 184, column: 21, scope: !5153)
!5171 = !DILocation(line: 184, column: 32, scope: !5153)
!5172 = !DILocation(line: 184, column: 19, scope: !5153)
!5173 = !DILocation(line: 186, column: 27, scope: !5153)
!5174 = !DILocation(line: 186, column: 2, scope: !5153)
!5175 = !DILocation(line: 188, column: 9, scope: !5153)
!5176 = !DILocation(line: 188, column: 2, scope: !5153)
!5177 = !DILocation(line: 189, column: 1, scope: !5153)
!5178 = distinct !DISubprogram(name: "IS_ERR", scope: !5019, file: !5019, line: 34, type: !5020, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5179 = !DILocalVariable(name: "ptr", arg: 1, scope: !5178, file: !5019, line: 34, type: !324)
!5180 = !DILocation(line: 34, column: 60, scope: !5178)
!5181 = !DILocation(line: 36, column: 9, scope: !5178)
!5182 = !DILocation(line: 36, column: 2, scope: !5178)
!5183 = distinct !DISubprogram(name: "dev_pm_opp_put_opp_table", scope: !3, file: !3, line: 1218, type: !5184, scopeLine: 1219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5184 = !DISubroutineType(types: !5185)
!5185 = !{null, !221}
!5186 = !DILocalVariable(name: "opp_table", arg: 1, scope: !5183, file: !3, line: 1218, type: !221)
!5187 = !DILocation(line: 1218, column: 49, scope: !5183)
!5188 = !DILocation(line: 1220, column: 18, scope: !5183)
!5189 = !DILocation(line: 1220, column: 29, scope: !5183)
!5190 = !DILocation(line: 1220, column: 2, scope: !5183)
!5191 = !DILocation(line: 1222, column: 1, scope: !5183)
!5192 = distinct !DISubprogram(name: "dev_pm_opp_get_max_volt_latency", scope: !3, file: !3, line: 198, type: !5154, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5193 = !DILocalVariable(name: "dev", arg: 1, scope: !5192, file: !3, line: 198, type: !1739)
!5194 = !DILocation(line: 198, column: 62, scope: !5192)
!5195 = !DILocalVariable(name: "opp_table", scope: !5192, file: !3, line: 200, type: !221)
!5196 = !DILocation(line: 200, column: 20, scope: !5192)
!5197 = !DILocalVariable(name: "opp", scope: !5192, file: !3, line: 201, type: !166)
!5198 = !DILocation(line: 201, column: 21, scope: !5192)
!5199 = !DILocalVariable(name: "reg", scope: !5192, file: !3, line: 202, type: !4935)
!5200 = !DILocation(line: 202, column: 20, scope: !5192)
!5201 = !DILocalVariable(name: "latency_ns", scope: !5192, file: !3, line: 203, type: !197)
!5202 = !DILocation(line: 203, column: 16, scope: !5192)
!5203 = !DILocalVariable(name: "ret", scope: !5192, file: !3, line: 204, type: !188)
!5204 = !DILocation(line: 204, column: 6, scope: !5192)
!5205 = !DILocalVariable(name: "i", scope: !5192, file: !3, line: 204, type: !188)
!5206 = !DILocation(line: 204, column: 11, scope: !5192)
!5207 = !DILocalVariable(name: "count", scope: !5192, file: !3, line: 204, type: !188)
!5208 = !DILocation(line: 204, column: 14, scope: !5192)
!5209 = !DILocalVariable(name: "uV", scope: !5192, file: !3, line: 208, type: !5210)
!5210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5211, size: 64)
!5211 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5192, file: !3, line: 205, size: 128, elements: !5212)
!5212 = !{!5213, !5214}
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !5211, file: !3, line: 206, baseType: !197, size: 64)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5211, file: !3, line: 207, baseType: !197, size: 64, offset: 64)
!5215 = !DILocation(line: 208, column: 5, scope: !5192)
!5216 = !DILocation(line: 210, column: 30, scope: !5192)
!5217 = !DILocation(line: 210, column: 14, scope: !5192)
!5218 = !DILocation(line: 210, column: 12, scope: !5192)
!5219 = !DILocation(line: 211, column: 13, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 211, column: 6)
!5221 = !DILocation(line: 211, column: 6, scope: !5220)
!5222 = !DILocation(line: 211, column: 6, scope: !5192)
!5223 = !DILocation(line: 212, column: 3, scope: !5220)
!5224 = !DILocation(line: 215, column: 7, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 215, column: 6)
!5226 = !DILocation(line: 215, column: 18, scope: !5225)
!5227 = !DILocation(line: 215, column: 6, scope: !5192)
!5228 = !DILocation(line: 216, column: 3, scope: !5225)
!5229 = !DILocation(line: 218, column: 10, scope: !5192)
!5230 = !DILocation(line: 218, column: 21, scope: !5192)
!5231 = !DILocation(line: 218, column: 8, scope: !5192)
!5232 = !DILocation(line: 220, column: 21, scope: !5192)
!5233 = !DILocation(line: 220, column: 7, scope: !5192)
!5234 = !DILocation(line: 220, column: 5, scope: !5192)
!5235 = !DILocation(line: 221, column: 7, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 221, column: 6)
!5237 = !DILocation(line: 221, column: 6, scope: !5192)
!5238 = !DILocation(line: 222, column: 3, scope: !5236)
!5239 = !DILocation(line: 224, column: 14, scope: !5192)
!5240 = !DILocation(line: 224, column: 25, scope: !5192)
!5241 = !DILocation(line: 224, column: 2, scope: !5192)
!5242 = !DILocation(line: 226, column: 9, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 226, column: 2)
!5244 = !DILocation(line: 226, column: 7, scope: !5243)
!5245 = !DILocation(line: 226, column: 14, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5243, file: !3, line: 226, column: 2)
!5247 = !DILocation(line: 226, column: 18, scope: !5246)
!5248 = !DILocation(line: 226, column: 16, scope: !5246)
!5249 = !DILocation(line: 226, column: 2, scope: !5243)
!5250 = !DILocation(line: 227, column: 3, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 226, column: 30)
!5252 = !DILocation(line: 227, column: 6, scope: !5251)
!5253 = !DILocation(line: 227, column: 9, scope: !5251)
!5254 = !DILocation(line: 227, column: 13, scope: !5251)
!5255 = !DILocation(line: 228, column: 3, scope: !5251)
!5256 = !DILocation(line: 228, column: 6, scope: !5251)
!5257 = !DILocation(line: 228, column: 9, scope: !5251)
!5258 = !DILocation(line: 228, column: 13, scope: !5251)
!5259 = !DILocalVariable(name: "__mptr", scope: !5260, file: !3, line: 230, type: !165)
!5260 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 230, column: 3)
!5261 = distinct !DILexicalBlock(scope: !5251, file: !3, line: 230, column: 3)
!5262 = !DILocation(line: 230, column: 3, scope: !5260)
!5263 = !DILocation(line: 230, column: 3, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 230, column: 3)
!5265 = !DILocation(line: 230, column: 3, scope: !5261)
!5266 = !DILocation(line: 230, column: 3, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 230, column: 3)
!5268 = !DILocation(line: 231, column: 9, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 231, column: 8)
!5270 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 230, column: 56)
!5271 = !DILocation(line: 231, column: 14, scope: !5269)
!5272 = !DILocation(line: 231, column: 8, scope: !5270)
!5273 = !DILocation(line: 232, column: 5, scope: !5269)
!5274 = !DILocation(line: 234, column: 8, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 234, column: 8)
!5276 = !DILocation(line: 234, column: 13, scope: !5275)
!5277 = !DILocation(line: 234, column: 22, scope: !5275)
!5278 = !DILocation(line: 234, column: 25, scope: !5275)
!5279 = !DILocation(line: 234, column: 38, scope: !5275)
!5280 = !DILocation(line: 234, column: 41, scope: !5275)
!5281 = !DILocation(line: 234, column: 44, scope: !5275)
!5282 = !DILocation(line: 234, column: 36, scope: !5275)
!5283 = !DILocation(line: 234, column: 8, scope: !5270)
!5284 = !DILocation(line: 235, column: 17, scope: !5275)
!5285 = !DILocation(line: 235, column: 22, scope: !5275)
!5286 = !DILocation(line: 235, column: 31, scope: !5275)
!5287 = !DILocation(line: 235, column: 34, scope: !5275)
!5288 = !DILocation(line: 235, column: 5, scope: !5275)
!5289 = !DILocation(line: 235, column: 8, scope: !5275)
!5290 = !DILocation(line: 235, column: 11, scope: !5275)
!5291 = !DILocation(line: 235, column: 15, scope: !5275)
!5292 = !DILocation(line: 236, column: 8, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 236, column: 8)
!5294 = !DILocation(line: 236, column: 13, scope: !5293)
!5295 = !DILocation(line: 236, column: 22, scope: !5293)
!5296 = !DILocation(line: 236, column: 25, scope: !5293)
!5297 = !DILocation(line: 236, column: 38, scope: !5293)
!5298 = !DILocation(line: 236, column: 41, scope: !5293)
!5299 = !DILocation(line: 236, column: 44, scope: !5293)
!5300 = !DILocation(line: 236, column: 36, scope: !5293)
!5301 = !DILocation(line: 236, column: 8, scope: !5270)
!5302 = !DILocation(line: 237, column: 17, scope: !5293)
!5303 = !DILocation(line: 237, column: 22, scope: !5293)
!5304 = !DILocation(line: 237, column: 31, scope: !5293)
!5305 = !DILocation(line: 237, column: 34, scope: !5293)
!5306 = !DILocation(line: 237, column: 5, scope: !5293)
!5307 = !DILocation(line: 237, column: 8, scope: !5293)
!5308 = !DILocation(line: 237, column: 11, scope: !5293)
!5309 = !DILocation(line: 237, column: 15, scope: !5293)
!5310 = !DILocation(line: 238, column: 3, scope: !5270)
!5311 = !DILocalVariable(name: "__mptr", scope: !5312, file: !3, line: 230, type: !165)
!5312 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 230, column: 3)
!5313 = !DILocation(line: 230, column: 3, scope: !5312)
!5314 = !DILocation(line: 230, column: 3, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 230, column: 3)
!5316 = distinct !{!5316, !5265, !5317}
!5317 = !DILocation(line: 238, column: 3, scope: !5261)
!5318 = !DILocation(line: 239, column: 2, scope: !5251)
!5319 = !DILocation(line: 226, column: 26, scope: !5246)
!5320 = !DILocation(line: 226, column: 2, scope: !5246)
!5321 = distinct !{!5321, !5249, !5322}
!5322 = !DILocation(line: 239, column: 2, scope: !5243)
!5323 = !DILocation(line: 241, column: 16, scope: !5192)
!5324 = !DILocation(line: 241, column: 27, scope: !5192)
!5325 = !DILocation(line: 241, column: 2, scope: !5192)
!5326 = !DILocation(line: 247, column: 9, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 247, column: 2)
!5328 = !DILocation(line: 247, column: 7, scope: !5327)
!5329 = !DILocation(line: 247, column: 14, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5327, file: !3, line: 247, column: 2)
!5331 = !DILocation(line: 247, column: 18, scope: !5330)
!5332 = !DILocation(line: 247, column: 16, scope: !5330)
!5333 = !DILocation(line: 247, column: 2, scope: !5327)
!5334 = !DILocation(line: 248, column: 9, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 247, column: 30)
!5336 = !DILocation(line: 248, column: 20, scope: !5335)
!5337 = !DILocation(line: 248, column: 31, scope: !5335)
!5338 = !DILocation(line: 248, column: 7, scope: !5335)
!5339 = !DILocation(line: 249, column: 36, scope: !5335)
!5340 = !DILocation(line: 249, column: 41, scope: !5335)
!5341 = !DILocation(line: 249, column: 44, scope: !5335)
!5342 = !DILocation(line: 249, column: 47, scope: !5335)
!5343 = !DILocation(line: 249, column: 52, scope: !5335)
!5344 = !DILocation(line: 249, column: 55, scope: !5335)
!5345 = !DILocation(line: 249, column: 58, scope: !5335)
!5346 = !DILocation(line: 249, column: 9, scope: !5335)
!5347 = !DILocation(line: 249, column: 7, scope: !5335)
!5348 = !DILocation(line: 250, column: 7, scope: !5349)
!5349 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 250, column: 7)
!5350 = !DILocation(line: 250, column: 11, scope: !5349)
!5351 = !DILocation(line: 250, column: 7, scope: !5335)
!5352 = !DILocation(line: 251, column: 18, scope: !5349)
!5353 = !DILocation(line: 251, column: 22, scope: !5349)
!5354 = !DILocation(line: 251, column: 15, scope: !5349)
!5355 = !DILocation(line: 251, column: 4, scope: !5349)
!5356 = !DILocation(line: 252, column: 2, scope: !5335)
!5357 = !DILocation(line: 247, column: 26, scope: !5330)
!5358 = !DILocation(line: 247, column: 2, scope: !5330)
!5359 = distinct !{!5359, !5333, !5360}
!5360 = !DILocation(line: 252, column: 2, scope: !5327)
!5361 = !DILocation(line: 254, column: 8, scope: !5192)
!5362 = !DILocation(line: 254, column: 2, scope: !5192)
!5363 = !DILabel(scope: !5192, name: "put_opp_table", file: !3, line: 255)
!5364 = !DILocation(line: 255, column: 1, scope: !5192)
!5365 = !DILocation(line: 256, column: 27, scope: !5192)
!5366 = !DILocation(line: 256, column: 2, scope: !5192)
!5367 = !DILocation(line: 258, column: 9, scope: !5192)
!5368 = !DILocation(line: 258, column: 2, scope: !5192)
!5369 = !DILocation(line: 259, column: 1, scope: !5192)
!5370 = distinct !DISubprogram(name: "kmalloc_array", scope: !148, file: !148, line: 584, type: !5371, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5371 = !DISubroutineType(types: !5372)
!5372 = !{!165, !417, !417, !163}
!5373 = !DILocalVariable(name: "s", arg: 1, scope: !5374, file: !148, line: 445, type: !1273)
!5374 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !148, file: !148, line: 445, type: !5375, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5375 = !DISubroutineType(types: !5376)
!5376 = !{!165, !1273, !163, !417}
!5377 = !DILocation(line: 445, column: 72, scope: !5374, inlinedAt: !5378)
!5378 = distinct !DILocation(line: 552, column: 10, scope: !5379, inlinedAt: !5384)
!5379 = distinct !DILexicalBlock(scope: !5380, file: !148, line: 540, column: 34)
!5380 = distinct !DILexicalBlock(scope: !5381, file: !148, line: 540, column: 6)
!5381 = distinct !DISubprogram(name: "kmalloc", scope: !148, file: !148, line: 538, type: !5382, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5382 = !DISubroutineType(types: !5383)
!5383 = !{!165, !417, !163}
!5384 = distinct !DILocation(line: 591, column: 10, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5370, file: !148, line: 590, column: 6)
!5386 = !DILocalVariable(name: "flags", arg: 2, scope: !5374, file: !148, line: 446, type: !163)
!5387 = !DILocation(line: 446, column: 9, scope: !5374, inlinedAt: !5378)
!5388 = !DILocalVariable(name: "size", arg: 3, scope: !5374, file: !148, line: 446, type: !417)
!5389 = !DILocation(line: 446, column: 23, scope: !5374, inlinedAt: !5378)
!5390 = !DILocalVariable(name: "ret", scope: !5374, file: !148, line: 448, type: !165)
!5391 = !DILocation(line: 448, column: 8, scope: !5374, inlinedAt: !5378)
!5392 = !DILocalVariable(name: "flags", arg: 1, scope: !5393, file: !148, line: 318, type: !163)
!5393 = distinct !DISubprogram(name: "kmalloc_type", scope: !148, file: !148, line: 318, type: !5394, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5394 = !DISubroutineType(types: !5395)
!5395 = !{!147, !163}
!5396 = !DILocation(line: 318, column: 67, scope: !5393, inlinedAt: !5397)
!5397 = distinct !DILocation(line: 553, column: 20, scope: !5379, inlinedAt: !5384)
!5398 = !DILocalVariable(name: "size", arg: 1, scope: !5399, file: !148, line: 346, type: !417)
!5399 = distinct !DISubprogram(name: "kmalloc_index", scope: !148, file: !148, line: 346, type: !5400, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5400 = !DISubroutineType(types: !5401)
!5401 = !{!7, !417}
!5402 = !DILocation(line: 346, column: 58, scope: !5399, inlinedAt: !5403)
!5403 = distinct !DILocation(line: 547, column: 11, scope: !5379, inlinedAt: !5384)
!5404 = !DILocalVariable(name: "size", arg: 1, scope: !5405, file: !148, line: 472, type: !417)
!5405 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !148, file: !148, line: 472, type: !5406, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5406 = !DISubroutineType(types: !5407)
!5407 = !{!165, !417, !163, !7}
!5408 = !DILocation(line: 472, column: 28, scope: !5405, inlinedAt: !5409)
!5409 = distinct !DILocation(line: 481, column: 9, scope: !5410, inlinedAt: !5411)
!5410 = distinct !DISubprogram(name: "kmalloc_large", scope: !148, file: !148, line: 478, type: !5382, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5411 = distinct !DILocation(line: 545, column: 11, scope: !5412, inlinedAt: !5384)
!5412 = distinct !DILexicalBlock(scope: !5379, file: !148, line: 544, column: 7)
!5413 = !DILocalVariable(name: "flags", arg: 2, scope: !5405, file: !148, line: 472, type: !163)
!5414 = !DILocation(line: 472, column: 40, scope: !5405, inlinedAt: !5409)
!5415 = !DILocalVariable(name: "order", arg: 3, scope: !5405, file: !148, line: 472, type: !7)
!5416 = !DILocation(line: 472, column: 60, scope: !5405, inlinedAt: !5409)
!5417 = !DILocalVariable(name: "size", arg: 1, scope: !5410, file: !148, line: 478, type: !417)
!5418 = !DILocation(line: 478, column: 51, scope: !5410, inlinedAt: !5411)
!5419 = !DILocalVariable(name: "flags", arg: 2, scope: !5410, file: !148, line: 478, type: !163)
!5420 = !DILocation(line: 478, column: 63, scope: !5410, inlinedAt: !5411)
!5421 = !DILocalVariable(name: "order", scope: !5410, file: !148, line: 480, type: !7)
!5422 = !DILocation(line: 480, column: 15, scope: !5410, inlinedAt: !5411)
!5423 = !DILocalVariable(name: "size", arg: 1, scope: !5381, file: !148, line: 538, type: !417)
!5424 = !DILocation(line: 538, column: 45, scope: !5381, inlinedAt: !5384)
!5425 = !DILocalVariable(name: "flags", arg: 2, scope: !5381, file: !148, line: 538, type: !163)
!5426 = !DILocation(line: 538, column: 57, scope: !5381, inlinedAt: !5384)
!5427 = !DILocalVariable(name: "index", scope: !5379, file: !148, line: 542, type: !7)
!5428 = !DILocation(line: 542, column: 16, scope: !5379, inlinedAt: !5384)
!5429 = !DILocalVariable(name: "n", arg: 1, scope: !5370, file: !148, line: 584, type: !417)
!5430 = !DILocation(line: 584, column: 42, scope: !5370)
!5431 = !DILocalVariable(name: "size", arg: 2, scope: !5370, file: !148, line: 584, type: !417)
!5432 = !DILocation(line: 584, column: 52, scope: !5370)
!5433 = !DILocalVariable(name: "flags", arg: 3, scope: !5370, file: !148, line: 584, type: !163)
!5434 = !DILocation(line: 584, column: 64, scope: !5370)
!5435 = !DILocalVariable(name: "bytes", scope: !5370, file: !148, line: 586, type: !417)
!5436 = !DILocation(line: 586, column: 9, scope: !5370)
!5437 = !DILocalVariable(name: "__a", scope: !5438, file: !148, line: 588, type: !417)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !148, line: 588, column: 6)
!5439 = distinct !DILexicalBlock(scope: !5370, file: !148, line: 588, column: 6)
!5440 = !DILocation(line: 588, column: 6, scope: !5438)
!5441 = !DILocalVariable(name: "__b", scope: !5438, file: !148, line: 588, type: !417)
!5442 = !DILocalVariable(name: "__d", scope: !5438, file: !148, line: 588, type: !2834)
!5443 = !DILocation(line: 588, column: 6, scope: !5439)
!5444 = !DILocation(line: 588, column: 6, scope: !5370)
!5445 = !DILocation(line: 589, column: 3, scope: !5439)
!5446 = !DILocation(line: 590, column: 27, scope: !5385)
!5447 = !DILocation(line: 590, column: 6, scope: !5385)
!5448 = !DILocation(line: 590, column: 30, scope: !5385)
!5449 = !DILocation(line: 590, column: 54, scope: !5385)
!5450 = !DILocation(line: 590, column: 33, scope: !5385)
!5451 = !DILocation(line: 590, column: 6, scope: !5370)
!5452 = !DILocation(line: 591, column: 18, scope: !5385)
!5453 = !DILocation(line: 591, column: 25, scope: !5385)
!5454 = !DILocation(line: 540, column: 27, scope: !5380, inlinedAt: !5384)
!5455 = !DILocation(line: 540, column: 6, scope: !5380, inlinedAt: !5384)
!5456 = !DILocation(line: 540, column: 6, scope: !5381, inlinedAt: !5384)
!5457 = !DILocation(line: 544, column: 7, scope: !5412, inlinedAt: !5384)
!5458 = !DILocation(line: 544, column: 12, scope: !5412, inlinedAt: !5384)
!5459 = !DILocation(line: 544, column: 7, scope: !5379, inlinedAt: !5384)
!5460 = !DILocation(line: 545, column: 25, scope: !5412, inlinedAt: !5384)
!5461 = !DILocation(line: 545, column: 31, scope: !5412, inlinedAt: !5384)
!5462 = !DILocation(line: 480, column: 33, scope: !5410, inlinedAt: !5411)
!5463 = !DILocation(line: 480, column: 23, scope: !5410, inlinedAt: !5411)
!5464 = !DILocation(line: 481, column: 29, scope: !5410, inlinedAt: !5411)
!5465 = !DILocation(line: 481, column: 35, scope: !5410, inlinedAt: !5411)
!5466 = !DILocation(line: 481, column: 42, scope: !5410, inlinedAt: !5411)
!5467 = !DILocation(line: 474, column: 23, scope: !5405, inlinedAt: !5409)
!5468 = !DILocation(line: 474, column: 29, scope: !5405, inlinedAt: !5409)
!5469 = !DILocation(line: 474, column: 36, scope: !5405, inlinedAt: !5409)
!5470 = !DILocation(line: 474, column: 9, scope: !5405, inlinedAt: !5409)
!5471 = !DILocation(line: 545, column: 4, scope: !5412, inlinedAt: !5384)
!5472 = !DILocation(line: 547, column: 25, scope: !5379, inlinedAt: !5384)
!5473 = !DILocation(line: 348, column: 7, scope: !5474, inlinedAt: !5403)
!5474 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 348, column: 6)
!5475 = !DILocation(line: 348, column: 6, scope: !5399, inlinedAt: !5403)
!5476 = !DILocation(line: 349, column: 3, scope: !5474, inlinedAt: !5403)
!5477 = !DILocation(line: 351, column: 6, scope: !5478, inlinedAt: !5403)
!5478 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 351, column: 6)
!5479 = !DILocation(line: 351, column: 11, scope: !5478, inlinedAt: !5403)
!5480 = !DILocation(line: 351, column: 6, scope: !5399, inlinedAt: !5403)
!5481 = !DILocation(line: 352, column: 3, scope: !5478, inlinedAt: !5403)
!5482 = !DILocation(line: 354, column: 32, scope: !5483, inlinedAt: !5403)
!5483 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 354, column: 6)
!5484 = !DILocation(line: 354, column: 37, scope: !5483, inlinedAt: !5403)
!5485 = !DILocation(line: 354, column: 42, scope: !5483, inlinedAt: !5403)
!5486 = !DILocation(line: 354, column: 45, scope: !5483, inlinedAt: !5403)
!5487 = !DILocation(line: 354, column: 50, scope: !5483, inlinedAt: !5403)
!5488 = !DILocation(line: 354, column: 6, scope: !5399, inlinedAt: !5403)
!5489 = !DILocation(line: 355, column: 3, scope: !5483, inlinedAt: !5403)
!5490 = !DILocation(line: 356, column: 32, scope: !5491, inlinedAt: !5403)
!5491 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 356, column: 6)
!5492 = !DILocation(line: 356, column: 37, scope: !5491, inlinedAt: !5403)
!5493 = !DILocation(line: 356, column: 43, scope: !5491, inlinedAt: !5403)
!5494 = !DILocation(line: 356, column: 46, scope: !5491, inlinedAt: !5403)
!5495 = !DILocation(line: 356, column: 51, scope: !5491, inlinedAt: !5403)
!5496 = !DILocation(line: 356, column: 6, scope: !5399, inlinedAt: !5403)
!5497 = !DILocation(line: 357, column: 3, scope: !5491, inlinedAt: !5403)
!5498 = !DILocation(line: 358, column: 6, scope: !5499, inlinedAt: !5403)
!5499 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 358, column: 6)
!5500 = !DILocation(line: 358, column: 11, scope: !5499, inlinedAt: !5403)
!5501 = !DILocation(line: 358, column: 6, scope: !5399, inlinedAt: !5403)
!5502 = !DILocation(line: 358, column: 26, scope: !5499, inlinedAt: !5403)
!5503 = !DILocation(line: 359, column: 6, scope: !5504, inlinedAt: !5403)
!5504 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 359, column: 6)
!5505 = !DILocation(line: 359, column: 11, scope: !5504, inlinedAt: !5403)
!5506 = !DILocation(line: 359, column: 6, scope: !5399, inlinedAt: !5403)
!5507 = !DILocation(line: 359, column: 26, scope: !5504, inlinedAt: !5403)
!5508 = !DILocation(line: 360, column: 6, scope: !5509, inlinedAt: !5403)
!5509 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 360, column: 6)
!5510 = !DILocation(line: 360, column: 11, scope: !5509, inlinedAt: !5403)
!5511 = !DILocation(line: 360, column: 6, scope: !5399, inlinedAt: !5403)
!5512 = !DILocation(line: 360, column: 26, scope: !5509, inlinedAt: !5403)
!5513 = !DILocation(line: 361, column: 6, scope: !5514, inlinedAt: !5403)
!5514 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 361, column: 6)
!5515 = !DILocation(line: 361, column: 11, scope: !5514, inlinedAt: !5403)
!5516 = !DILocation(line: 361, column: 6, scope: !5399, inlinedAt: !5403)
!5517 = !DILocation(line: 361, column: 26, scope: !5514, inlinedAt: !5403)
!5518 = !DILocation(line: 362, column: 6, scope: !5519, inlinedAt: !5403)
!5519 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 362, column: 6)
!5520 = !DILocation(line: 362, column: 11, scope: !5519, inlinedAt: !5403)
!5521 = !DILocation(line: 362, column: 6, scope: !5399, inlinedAt: !5403)
!5522 = !DILocation(line: 362, column: 26, scope: !5519, inlinedAt: !5403)
!5523 = !DILocation(line: 363, column: 6, scope: !5524, inlinedAt: !5403)
!5524 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 363, column: 6)
!5525 = !DILocation(line: 363, column: 11, scope: !5524, inlinedAt: !5403)
!5526 = !DILocation(line: 363, column: 6, scope: !5399, inlinedAt: !5403)
!5527 = !DILocation(line: 363, column: 26, scope: !5524, inlinedAt: !5403)
!5528 = !DILocation(line: 364, column: 6, scope: !5529, inlinedAt: !5403)
!5529 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 364, column: 6)
!5530 = !DILocation(line: 364, column: 11, scope: !5529, inlinedAt: !5403)
!5531 = !DILocation(line: 364, column: 6, scope: !5399, inlinedAt: !5403)
!5532 = !DILocation(line: 364, column: 26, scope: !5529, inlinedAt: !5403)
!5533 = !DILocation(line: 365, column: 6, scope: !5534, inlinedAt: !5403)
!5534 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 365, column: 6)
!5535 = !DILocation(line: 365, column: 11, scope: !5534, inlinedAt: !5403)
!5536 = !DILocation(line: 365, column: 6, scope: !5399, inlinedAt: !5403)
!5537 = !DILocation(line: 365, column: 26, scope: !5534, inlinedAt: !5403)
!5538 = !DILocation(line: 366, column: 6, scope: !5539, inlinedAt: !5403)
!5539 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 366, column: 6)
!5540 = !DILocation(line: 366, column: 11, scope: !5539, inlinedAt: !5403)
!5541 = !DILocation(line: 366, column: 6, scope: !5399, inlinedAt: !5403)
!5542 = !DILocation(line: 366, column: 26, scope: !5539, inlinedAt: !5403)
!5543 = !DILocation(line: 367, column: 6, scope: !5544, inlinedAt: !5403)
!5544 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 367, column: 6)
!5545 = !DILocation(line: 367, column: 11, scope: !5544, inlinedAt: !5403)
!5546 = !DILocation(line: 367, column: 6, scope: !5399, inlinedAt: !5403)
!5547 = !DILocation(line: 367, column: 26, scope: !5544, inlinedAt: !5403)
!5548 = !DILocation(line: 368, column: 6, scope: !5549, inlinedAt: !5403)
!5549 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 368, column: 6)
!5550 = !DILocation(line: 368, column: 11, scope: !5549, inlinedAt: !5403)
!5551 = !DILocation(line: 368, column: 6, scope: !5399, inlinedAt: !5403)
!5552 = !DILocation(line: 368, column: 26, scope: !5549, inlinedAt: !5403)
!5553 = !DILocation(line: 369, column: 6, scope: !5554, inlinedAt: !5403)
!5554 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 369, column: 6)
!5555 = !DILocation(line: 369, column: 11, scope: !5554, inlinedAt: !5403)
!5556 = !DILocation(line: 369, column: 6, scope: !5399, inlinedAt: !5403)
!5557 = !DILocation(line: 369, column: 26, scope: !5554, inlinedAt: !5403)
!5558 = !DILocation(line: 370, column: 6, scope: !5559, inlinedAt: !5403)
!5559 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 370, column: 6)
!5560 = !DILocation(line: 370, column: 11, scope: !5559, inlinedAt: !5403)
!5561 = !DILocation(line: 370, column: 6, scope: !5399, inlinedAt: !5403)
!5562 = !DILocation(line: 370, column: 26, scope: !5559, inlinedAt: !5403)
!5563 = !DILocation(line: 371, column: 6, scope: !5564, inlinedAt: !5403)
!5564 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 371, column: 6)
!5565 = !DILocation(line: 371, column: 11, scope: !5564, inlinedAt: !5403)
!5566 = !DILocation(line: 371, column: 6, scope: !5399, inlinedAt: !5403)
!5567 = !DILocation(line: 371, column: 26, scope: !5564, inlinedAt: !5403)
!5568 = !DILocation(line: 372, column: 6, scope: !5569, inlinedAt: !5403)
!5569 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 372, column: 6)
!5570 = !DILocation(line: 372, column: 11, scope: !5569, inlinedAt: !5403)
!5571 = !DILocation(line: 372, column: 6, scope: !5399, inlinedAt: !5403)
!5572 = !DILocation(line: 372, column: 26, scope: !5569, inlinedAt: !5403)
!5573 = !DILocation(line: 373, column: 6, scope: !5574, inlinedAt: !5403)
!5574 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 373, column: 6)
!5575 = !DILocation(line: 373, column: 11, scope: !5574, inlinedAt: !5403)
!5576 = !DILocation(line: 373, column: 6, scope: !5399, inlinedAt: !5403)
!5577 = !DILocation(line: 373, column: 26, scope: !5574, inlinedAt: !5403)
!5578 = !DILocation(line: 374, column: 6, scope: !5579, inlinedAt: !5403)
!5579 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 374, column: 6)
!5580 = !DILocation(line: 374, column: 11, scope: !5579, inlinedAt: !5403)
!5581 = !DILocation(line: 374, column: 6, scope: !5399, inlinedAt: !5403)
!5582 = !DILocation(line: 374, column: 26, scope: !5579, inlinedAt: !5403)
!5583 = !DILocation(line: 375, column: 6, scope: !5584, inlinedAt: !5403)
!5584 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 375, column: 6)
!5585 = !DILocation(line: 375, column: 11, scope: !5584, inlinedAt: !5403)
!5586 = !DILocation(line: 375, column: 6, scope: !5399, inlinedAt: !5403)
!5587 = !DILocation(line: 375, column: 27, scope: !5584, inlinedAt: !5403)
!5588 = !DILocation(line: 376, column: 6, scope: !5589, inlinedAt: !5403)
!5589 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 376, column: 6)
!5590 = !DILocation(line: 376, column: 11, scope: !5589, inlinedAt: !5403)
!5591 = !DILocation(line: 376, column: 6, scope: !5399, inlinedAt: !5403)
!5592 = !DILocation(line: 376, column: 32, scope: !5589, inlinedAt: !5403)
!5593 = !DILocation(line: 377, column: 6, scope: !5594, inlinedAt: !5403)
!5594 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 377, column: 6)
!5595 = !DILocation(line: 377, column: 11, scope: !5594, inlinedAt: !5403)
!5596 = !DILocation(line: 377, column: 6, scope: !5399, inlinedAt: !5403)
!5597 = !DILocation(line: 377, column: 32, scope: !5594, inlinedAt: !5403)
!5598 = !DILocation(line: 378, column: 6, scope: !5599, inlinedAt: !5403)
!5599 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 378, column: 6)
!5600 = !DILocation(line: 378, column: 11, scope: !5599, inlinedAt: !5403)
!5601 = !DILocation(line: 378, column: 6, scope: !5399, inlinedAt: !5403)
!5602 = !DILocation(line: 378, column: 32, scope: !5599, inlinedAt: !5403)
!5603 = !DILocation(line: 379, column: 6, scope: !5604, inlinedAt: !5403)
!5604 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 379, column: 6)
!5605 = !DILocation(line: 379, column: 11, scope: !5604, inlinedAt: !5403)
!5606 = !DILocation(line: 379, column: 6, scope: !5399, inlinedAt: !5403)
!5607 = !DILocation(line: 379, column: 33, scope: !5604, inlinedAt: !5403)
!5608 = !DILocation(line: 380, column: 6, scope: !5609, inlinedAt: !5403)
!5609 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 380, column: 6)
!5610 = !DILocation(line: 380, column: 11, scope: !5609, inlinedAt: !5403)
!5611 = !DILocation(line: 380, column: 6, scope: !5399, inlinedAt: !5403)
!5612 = !DILocation(line: 380, column: 33, scope: !5609, inlinedAt: !5403)
!5613 = !DILocation(line: 381, column: 6, scope: !5614, inlinedAt: !5403)
!5614 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 381, column: 6)
!5615 = !DILocation(line: 381, column: 11, scope: !5614, inlinedAt: !5403)
!5616 = !DILocation(line: 381, column: 6, scope: !5399, inlinedAt: !5403)
!5617 = !DILocation(line: 381, column: 33, scope: !5614, inlinedAt: !5403)
!5618 = !DILocation(line: 382, column: 2, scope: !5619, inlinedAt: !5403)
!5619 = distinct !DILexicalBlock(scope: !5620, file: !148, line: 382, column: 2)
!5620 = distinct !DILexicalBlock(scope: !5399, file: !148, line: 382, column: 2)
!5621 = !{i32 -2144559774, i32 -2144559745, i32 -2144559699, i32 -2144559641, i32 -2144559587, i32 -2144559533, i32 -2144559478, i32 -2144559447}
!5622 = !DILocation(line: 382, column: 2, scope: !5623, inlinedAt: !5403)
!5623 = distinct !DILexicalBlock(scope: !5624, file: !148, line: 382, column: 2)
!5624 = distinct !DILexicalBlock(scope: !5620, file: !148, line: 382, column: 2)
!5625 = !{i32 -2144559004, i32 -2144558997, i32 -2144558943, i32 -2144558912, i32 -2144558882}
!5626 = !DILocation(line: 382, column: 2, scope: !5624, inlinedAt: !5403)
!5627 = !DILocation(line: 386, column: 1, scope: !5399, inlinedAt: !5403)
!5628 = !DILocation(line: 547, column: 9, scope: !5379, inlinedAt: !5384)
!5629 = !DILocation(line: 549, column: 8, scope: !5630, inlinedAt: !5384)
!5630 = distinct !DILexicalBlock(scope: !5379, file: !148, line: 549, column: 7)
!5631 = !DILocation(line: 549, column: 7, scope: !5379, inlinedAt: !5384)
!5632 = !DILocation(line: 550, column: 4, scope: !5630, inlinedAt: !5384)
!5633 = !DILocation(line: 553, column: 33, scope: !5379, inlinedAt: !5384)
!5634 = !DILocation(line: 325, column: 6, scope: !5635, inlinedAt: !5397)
!5635 = distinct !DILexicalBlock(scope: !5393, file: !148, line: 325, column: 6)
!5636 = !DILocation(line: 325, column: 6, scope: !5393, inlinedAt: !5397)
!5637 = !DILocation(line: 326, column: 3, scope: !5635, inlinedAt: !5397)
!5638 = !DILocation(line: 332, column: 9, scope: !5393, inlinedAt: !5397)
!5639 = !DILocation(line: 332, column: 15, scope: !5393, inlinedAt: !5397)
!5640 = !DILocation(line: 332, column: 2, scope: !5393, inlinedAt: !5397)
!5641 = !DILocation(line: 336, column: 1, scope: !5393, inlinedAt: !5397)
!5642 = !DILocation(line: 553, column: 5, scope: !5379, inlinedAt: !5384)
!5643 = !DILocation(line: 553, column: 41, scope: !5379, inlinedAt: !5384)
!5644 = !DILocation(line: 554, column: 5, scope: !5379, inlinedAt: !5384)
!5645 = !DILocation(line: 554, column: 12, scope: !5379, inlinedAt: !5384)
!5646 = !DILocation(line: 448, column: 31, scope: !5374, inlinedAt: !5378)
!5647 = !DILocation(line: 448, column: 34, scope: !5374, inlinedAt: !5378)
!5648 = !DILocation(line: 448, column: 14, scope: !5374, inlinedAt: !5378)
!5649 = !DILocation(line: 450, column: 22, scope: !5374, inlinedAt: !5378)
!5650 = !DILocation(line: 450, column: 25, scope: !5374, inlinedAt: !5378)
!5651 = !DILocation(line: 450, column: 30, scope: !5374, inlinedAt: !5378)
!5652 = !DILocation(line: 450, column: 36, scope: !5374, inlinedAt: !5378)
!5653 = !DILocation(line: 450, column: 8, scope: !5374, inlinedAt: !5378)
!5654 = !DILocation(line: 450, column: 6, scope: !5374, inlinedAt: !5378)
!5655 = !DILocation(line: 451, column: 9, scope: !5374, inlinedAt: !5378)
!5656 = !DILocation(line: 552, column: 3, scope: !5379, inlinedAt: !5384)
!5657 = !DILocation(line: 557, column: 19, scope: !5381, inlinedAt: !5384)
!5658 = !DILocation(line: 557, column: 25, scope: !5381, inlinedAt: !5384)
!5659 = !DILocation(line: 557, column: 9, scope: !5381, inlinedAt: !5384)
!5660 = !DILocation(line: 557, column: 2, scope: !5381, inlinedAt: !5384)
!5661 = !DILocation(line: 558, column: 1, scope: !5381, inlinedAt: !5384)
!5662 = !DILocation(line: 591, column: 3, scope: !5385)
!5663 = !DILocation(line: 592, column: 19, scope: !5370)
!5664 = !DILocation(line: 592, column: 26, scope: !5370)
!5665 = !DILocation(line: 592, column: 9, scope: !5370)
!5666 = !DILocation(line: 592, column: 2, scope: !5370)
!5667 = !DILocation(line: 593, column: 1, scope: !5370)
!5668 = distinct !DISubprogram(name: "regulator_set_voltage_time", scope: !4937, file: !4937, line: 478, type: !5669, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5669 = !DISubroutineType(types: !5670)
!5670 = !{!188, !4935, !188, !188}
!5671 = !DILocalVariable(name: "regulator", arg: 1, scope: !5668, file: !4937, line: 478, type: !4935)
!5672 = !DILocation(line: 478, column: 64, scope: !5668)
!5673 = !DILocalVariable(name: "old_uV", arg: 2, scope: !5668, file: !4937, line: 479, type: !188)
!5674 = !DILocation(line: 479, column: 15, scope: !5668)
!5675 = !DILocalVariable(name: "new_uV", arg: 3, scope: !5668, file: !4937, line: 479, type: !188)
!5676 = !DILocation(line: 479, column: 27, scope: !5668)
!5677 = !DILocation(line: 481, column: 2, scope: !5668)
!5678 = distinct !DISubprogram(name: "dev_pm_opp_get_max_transition_latency", scope: !3, file: !3, line: 270, type: !5154, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5679 = !DILocalVariable(name: "dev", arg: 1, scope: !5678, file: !3, line: 270, type: !1739)
!5680 = !DILocation(line: 270, column: 68, scope: !5678)
!5681 = !DILocation(line: 272, column: 41, scope: !5678)
!5682 = !DILocation(line: 272, column: 9, scope: !5678)
!5683 = !DILocation(line: 273, column: 36, scope: !5678)
!5684 = !DILocation(line: 273, column: 3, scope: !5678)
!5685 = !DILocation(line: 272, column: 46, scope: !5678)
!5686 = !DILocation(line: 272, column: 2, scope: !5678)
!5687 = distinct !DISubprogram(name: "dev_pm_opp_get_suspend_opp_freq", scope: !3, file: !3, line: 284, type: !5154, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5688 = !DILocalVariable(name: "dev", arg: 1, scope: !5687, file: !3, line: 284, type: !1739)
!5689 = !DILocation(line: 284, column: 62, scope: !5687)
!5690 = !DILocalVariable(name: "opp_table", scope: !5687, file: !3, line: 286, type: !221)
!5691 = !DILocation(line: 286, column: 20, scope: !5687)
!5692 = !DILocalVariable(name: "freq", scope: !5687, file: !3, line: 287, type: !197)
!5693 = !DILocation(line: 287, column: 16, scope: !5687)
!5694 = !DILocation(line: 289, column: 30, scope: !5687)
!5695 = !DILocation(line: 289, column: 14, scope: !5687)
!5696 = !DILocation(line: 289, column: 12, scope: !5687)
!5697 = !DILocation(line: 290, column: 13, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 290, column: 6)
!5699 = !DILocation(line: 290, column: 6, scope: !5698)
!5700 = !DILocation(line: 290, column: 6, scope: !5687)
!5701 = !DILocation(line: 291, column: 3, scope: !5698)
!5702 = !DILocation(line: 293, column: 6, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 293, column: 6)
!5704 = !DILocation(line: 293, column: 17, scope: !5703)
!5705 = !DILocation(line: 293, column: 29, scope: !5703)
!5706 = !DILocation(line: 293, column: 32, scope: !5703)
!5707 = !DILocation(line: 293, column: 43, scope: !5703)
!5708 = !DILocation(line: 293, column: 56, scope: !5703)
!5709 = !DILocation(line: 293, column: 6, scope: !5687)
!5710 = !DILocation(line: 294, column: 30, scope: !5703)
!5711 = !DILocation(line: 294, column: 41, scope: !5703)
!5712 = !DILocation(line: 294, column: 10, scope: !5703)
!5713 = !DILocation(line: 294, column: 8, scope: !5703)
!5714 = !DILocation(line: 294, column: 3, scope: !5703)
!5715 = !DILocation(line: 296, column: 27, scope: !5687)
!5716 = !DILocation(line: 296, column: 2, scope: !5687)
!5717 = !DILocation(line: 298, column: 9, scope: !5687)
!5718 = !DILocation(line: 298, column: 2, scope: !5687)
!5719 = !DILocation(line: 299, column: 1, scope: !5687)
!5720 = distinct !DISubprogram(name: "_get_opp_count", scope: !3, file: !3, line: 302, type: !5721, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5721 = !DISubroutineType(types: !5722)
!5722 = !{!188, !221}
!5723 = !DILocalVariable(name: "opp_table", arg: 1, scope: !5720, file: !3, line: 302, type: !221)
!5724 = !DILocation(line: 302, column: 38, scope: !5720)
!5725 = !DILocalVariable(name: "opp", scope: !5720, file: !3, line: 304, type: !166)
!5726 = !DILocation(line: 304, column: 21, scope: !5720)
!5727 = !DILocalVariable(name: "count", scope: !5720, file: !3, line: 305, type: !188)
!5728 = !DILocation(line: 305, column: 6, scope: !5720)
!5729 = !DILocation(line: 307, column: 14, scope: !5720)
!5730 = !DILocation(line: 307, column: 25, scope: !5720)
!5731 = !DILocation(line: 307, column: 2, scope: !5720)
!5732 = !DILocalVariable(name: "__mptr", scope: !5733, file: !3, line: 309, type: !165)
!5733 = distinct !DILexicalBlock(scope: !5734, file: !3, line: 309, column: 2)
!5734 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 309, column: 2)
!5735 = !DILocation(line: 309, column: 2, scope: !5733)
!5736 = !DILocation(line: 309, column: 2, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 309, column: 2)
!5738 = !DILocation(line: 309, column: 2, scope: !5734)
!5739 = !DILocation(line: 309, column: 2, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5734, file: !3, line: 309, column: 2)
!5741 = !DILocation(line: 310, column: 7, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 310, column: 7)
!5743 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 309, column: 55)
!5744 = !DILocation(line: 310, column: 12, scope: !5742)
!5745 = !DILocation(line: 310, column: 7, scope: !5743)
!5746 = !DILocation(line: 311, column: 9, scope: !5742)
!5747 = !DILocation(line: 311, column: 4, scope: !5742)
!5748 = !DILocation(line: 312, column: 2, scope: !5743)
!5749 = !DILocalVariable(name: "__mptr", scope: !5750, file: !3, line: 309, type: !165)
!5750 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 309, column: 2)
!5751 = !DILocation(line: 309, column: 2, scope: !5750)
!5752 = !DILocation(line: 309, column: 2, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 309, column: 2)
!5754 = distinct !{!5754, !5738, !5755}
!5755 = !DILocation(line: 312, column: 2, scope: !5734)
!5756 = !DILocation(line: 314, column: 16, scope: !5720)
!5757 = !DILocation(line: 314, column: 27, scope: !5720)
!5758 = !DILocation(line: 314, column: 2, scope: !5720)
!5759 = !DILocation(line: 316, column: 9, scope: !5720)
!5760 = !DILocation(line: 316, column: 2, scope: !5720)
!5761 = distinct !DISubprogram(name: "dev_pm_opp_get_opp_count", scope: !3, file: !3, line: 326, type: !4525, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5762 = !DILocalVariable(name: "dev", arg: 1, scope: !5761, file: !3, line: 326, type: !1739)
!5763 = !DILocation(line: 326, column: 45, scope: !5761)
!5764 = !DILocalVariable(name: "opp_table", scope: !5761, file: !3, line: 328, type: !221)
!5765 = !DILocation(line: 328, column: 20, scope: !5761)
!5766 = !DILocalVariable(name: "count", scope: !5761, file: !3, line: 329, type: !188)
!5767 = !DILocation(line: 329, column: 6, scope: !5761)
!5768 = !DILocation(line: 331, column: 30, scope: !5761)
!5769 = !DILocation(line: 331, column: 14, scope: !5761)
!5770 = !DILocation(line: 331, column: 12, scope: !5761)
!5771 = !DILocation(line: 332, column: 13, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5761, file: !3, line: 332, column: 6)
!5773 = !DILocation(line: 332, column: 6, scope: !5772)
!5774 = !DILocation(line: 332, column: 6, scope: !5761)
!5775 = !DILocation(line: 333, column: 19, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 332, column: 25)
!5777 = !DILocation(line: 333, column: 11, scope: !5776)
!5778 = !DILocation(line: 333, column: 9, scope: !5776)
!5779 = !DILocation(line: 336, column: 10, scope: !5776)
!5780 = !DILocation(line: 336, column: 3, scope: !5776)
!5781 = !DILocation(line: 339, column: 25, scope: !5761)
!5782 = !DILocation(line: 339, column: 10, scope: !5761)
!5783 = !DILocation(line: 339, column: 8, scope: !5761)
!5784 = !DILocation(line: 340, column: 27, scope: !5761)
!5785 = !DILocation(line: 340, column: 2, scope: !5761)
!5786 = !DILocation(line: 342, column: 9, scope: !5761)
!5787 = !DILocation(line: 342, column: 2, scope: !5761)
!5788 = !DILocation(line: 343, column: 1, scope: !5761)
!5789 = distinct !DISubprogram(name: "PTR_ERR", scope: !5019, file: !5019, line: 29, type: !5790, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5790 = !DISubroutineType(types: !5791)
!5791 = !{!405, !324}
!5792 = !DILocalVariable(name: "ptr", arg: 1, scope: !5789, file: !5019, line: 29, type: !324)
!5793 = !DILocation(line: 29, column: 61, scope: !5789)
!5794 = !DILocation(line: 31, column: 16, scope: !5789)
!5795 = !DILocation(line: 31, column: 9, scope: !5789)
!5796 = !DILocation(line: 31, column: 2, scope: !5789)
!5797 = distinct !DISubprogram(name: "dev_pm_opp_find_freq_exact", scope: !3, file: !3, line: 369, type: !5798, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5798 = !DISubroutineType(types: !5799)
!5799 = !{!166, !1739, !197, !190}
!5800 = !DILocalVariable(name: "dev", arg: 1, scope: !5797, file: !3, line: 369, type: !1739)
!5801 = !DILocation(line: 369, column: 62, scope: !5797)
!5802 = !DILocalVariable(name: "freq", arg: 2, scope: !5797, file: !3, line: 370, type: !197)
!5803 = !DILocation(line: 370, column: 26, scope: !5797)
!5804 = !DILocalVariable(name: "available", arg: 3, scope: !5797, file: !3, line: 371, type: !190)
!5805 = !DILocation(line: 371, column: 17, scope: !5797)
!5806 = !DILocalVariable(name: "opp_table", scope: !5797, file: !3, line: 373, type: !221)
!5807 = !DILocation(line: 373, column: 20, scope: !5797)
!5808 = !DILocalVariable(name: "temp_opp", scope: !5797, file: !3, line: 374, type: !166)
!5809 = !DILocation(line: 374, column: 21, scope: !5797)
!5810 = !DILocalVariable(name: "opp", scope: !5797, file: !3, line: 374, type: !166)
!5811 = !DILocation(line: 374, column: 32, scope: !5797)
!5812 = !DILocation(line: 374, column: 38, scope: !5797)
!5813 = !DILocation(line: 376, column: 30, scope: !5797)
!5814 = !DILocation(line: 376, column: 14, scope: !5797)
!5815 = !DILocation(line: 376, column: 12, scope: !5797)
!5816 = !DILocation(line: 377, column: 13, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5797, file: !3, line: 377, column: 6)
!5818 = !DILocation(line: 377, column: 6, scope: !5817)
!5819 = !DILocation(line: 377, column: 6, scope: !5797)
!5820 = !DILocalVariable(name: "r", scope: !5821, file: !3, line: 378, type: !188)
!5821 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 377, column: 25)
!5822 = !DILocation(line: 378, column: 7, scope: !5821)
!5823 = !DILocation(line: 378, column: 19, scope: !5821)
!5824 = !DILocation(line: 378, column: 11, scope: !5821)
!5825 = !DILocation(line: 380, column: 3, scope: !5821)
!5826 = !DILocation(line: 381, column: 18, scope: !5821)
!5827 = !DILocation(line: 381, column: 10, scope: !5821)
!5828 = !DILocation(line: 381, column: 3, scope: !5821)
!5829 = !DILocation(line: 384, column: 14, scope: !5797)
!5830 = !DILocation(line: 384, column: 25, scope: !5797)
!5831 = !DILocation(line: 384, column: 2, scope: !5797)
!5832 = !DILocalVariable(name: "__mptr", scope: !5833, file: !3, line: 386, type: !165)
!5833 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 386, column: 2)
!5834 = distinct !DILexicalBlock(scope: !5797, file: !3, line: 386, column: 2)
!5835 = !DILocation(line: 386, column: 2, scope: !5833)
!5836 = !DILocation(line: 386, column: 2, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5833, file: !3, line: 386, column: 2)
!5838 = !DILocation(line: 386, column: 2, scope: !5834)
!5839 = !DILocation(line: 386, column: 2, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5834, file: !3, line: 386, column: 2)
!5841 = !DILocation(line: 387, column: 7, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 387, column: 7)
!5843 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 386, column: 60)
!5844 = !DILocation(line: 387, column: 17, scope: !5842)
!5845 = !DILocation(line: 387, column: 30, scope: !5842)
!5846 = !DILocation(line: 387, column: 27, scope: !5842)
!5847 = !DILocation(line: 387, column: 40, scope: !5842)
!5848 = !DILocation(line: 388, column: 5, scope: !5842)
!5849 = !DILocation(line: 388, column: 15, scope: !5842)
!5850 = !DILocation(line: 388, column: 23, scope: !5842)
!5851 = !DILocation(line: 388, column: 20, scope: !5842)
!5852 = !DILocation(line: 387, column: 7, scope: !5843)
!5853 = !DILocation(line: 389, column: 10, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 388, column: 29)
!5855 = !DILocation(line: 389, column: 8, scope: !5854)
!5856 = !DILocation(line: 392, column: 19, scope: !5854)
!5857 = !DILocation(line: 392, column: 4, scope: !5854)
!5858 = !DILocation(line: 393, column: 4, scope: !5854)
!5859 = !DILocation(line: 395, column: 2, scope: !5843)
!5860 = !DILocalVariable(name: "__mptr", scope: !5861, file: !3, line: 386, type: !165)
!5861 = distinct !DILexicalBlock(scope: !5840, file: !3, line: 386, column: 2)
!5862 = !DILocation(line: 386, column: 2, scope: !5861)
!5863 = !DILocation(line: 386, column: 2, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5861, file: !3, line: 386, column: 2)
!5865 = distinct !{!5865, !5838, !5866}
!5866 = !DILocation(line: 395, column: 2, scope: !5834)
!5867 = !DILocation(line: 397, column: 16, scope: !5797)
!5868 = !DILocation(line: 397, column: 27, scope: !5797)
!5869 = !DILocation(line: 397, column: 2, scope: !5797)
!5870 = !DILocation(line: 398, column: 27, scope: !5797)
!5871 = !DILocation(line: 398, column: 2, scope: !5797)
!5872 = !DILocation(line: 400, column: 9, scope: !5797)
!5873 = !DILocation(line: 400, column: 2, scope: !5797)
!5874 = !DILocation(line: 401, column: 1, scope: !5797)
!5875 = distinct !DISubprogram(name: "dev_pm_opp_get", scope: !3, file: !3, line: 1261, type: !5876, scopeLine: 1262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5876 = !DISubroutineType(types: !5877)
!5877 = !{null, !166}
!5878 = !DILocalVariable(name: "opp", arg: 1, scope: !5875, file: !3, line: 1261, type: !166)
!5879 = !DILocation(line: 1261, column: 40, scope: !5875)
!5880 = !DILocation(line: 1263, column: 12, scope: !5875)
!5881 = !DILocation(line: 1263, column: 17, scope: !5875)
!5882 = !DILocation(line: 1263, column: 2, scope: !5875)
!5883 = !DILocation(line: 1264, column: 1, scope: !5875)
!5884 = distinct !DISubprogram(name: "dev_pm_opp_find_level_exact", scope: !3, file: !3, line: 419, type: !5885, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5885 = !DISubroutineType(types: !5886)
!5886 = !{!166, !1739, !7}
!5887 = !DILocalVariable(name: "dev", arg: 1, scope: !5884, file: !3, line: 419, type: !1739)
!5888 = !DILocation(line: 419, column: 63, scope: !5884)
!5889 = !DILocalVariable(name: "level", arg: 2, scope: !5884, file: !3, line: 420, type: !7)
!5890 = !DILocation(line: 420, column: 26, scope: !5884)
!5891 = !DILocalVariable(name: "opp_table", scope: !5884, file: !3, line: 422, type: !221)
!5892 = !DILocation(line: 422, column: 20, scope: !5884)
!5893 = !DILocalVariable(name: "temp_opp", scope: !5884, file: !3, line: 423, type: !166)
!5894 = !DILocation(line: 423, column: 21, scope: !5884)
!5895 = !DILocalVariable(name: "opp", scope: !5884, file: !3, line: 423, type: !166)
!5896 = !DILocation(line: 423, column: 32, scope: !5884)
!5897 = !DILocation(line: 423, column: 38, scope: !5884)
!5898 = !DILocation(line: 425, column: 30, scope: !5884)
!5899 = !DILocation(line: 425, column: 14, scope: !5884)
!5900 = !DILocation(line: 425, column: 12, scope: !5884)
!5901 = !DILocation(line: 426, column: 13, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 426, column: 6)
!5903 = !DILocation(line: 426, column: 6, scope: !5902)
!5904 = !DILocation(line: 426, column: 6, scope: !5884)
!5905 = !DILocalVariable(name: "r", scope: !5906, file: !3, line: 427, type: !188)
!5906 = distinct !DILexicalBlock(scope: !5902, file: !3, line: 426, column: 25)
!5907 = !DILocation(line: 427, column: 7, scope: !5906)
!5908 = !DILocation(line: 427, column: 19, scope: !5906)
!5909 = !DILocation(line: 427, column: 11, scope: !5906)
!5910 = !DILocation(line: 429, column: 3, scope: !5906)
!5911 = !DILocation(line: 430, column: 18, scope: !5906)
!5912 = !DILocation(line: 430, column: 10, scope: !5906)
!5913 = !DILocation(line: 430, column: 3, scope: !5906)
!5914 = !DILocation(line: 433, column: 14, scope: !5884)
!5915 = !DILocation(line: 433, column: 25, scope: !5884)
!5916 = !DILocation(line: 433, column: 2, scope: !5884)
!5917 = !DILocalVariable(name: "__mptr", scope: !5918, file: !3, line: 435, type: !165)
!5918 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 435, column: 2)
!5919 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 435, column: 2)
!5920 = !DILocation(line: 435, column: 2, scope: !5918)
!5921 = !DILocation(line: 435, column: 2, scope: !5922)
!5922 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 435, column: 2)
!5923 = !DILocation(line: 435, column: 2, scope: !5919)
!5924 = !DILocation(line: 435, column: 2, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 435, column: 2)
!5926 = !DILocation(line: 436, column: 7, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 436, column: 7)
!5928 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 435, column: 60)
!5929 = !DILocation(line: 436, column: 17, scope: !5927)
!5930 = !DILocation(line: 436, column: 26, scope: !5927)
!5931 = !DILocation(line: 436, column: 23, scope: !5927)
!5932 = !DILocation(line: 436, column: 7, scope: !5928)
!5933 = !DILocation(line: 437, column: 10, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 436, column: 33)
!5935 = !DILocation(line: 437, column: 8, scope: !5934)
!5936 = !DILocation(line: 440, column: 19, scope: !5934)
!5937 = !DILocation(line: 440, column: 4, scope: !5934)
!5938 = !DILocation(line: 441, column: 4, scope: !5934)
!5939 = !DILocation(line: 443, column: 2, scope: !5928)
!5940 = !DILocalVariable(name: "__mptr", scope: !5941, file: !3, line: 435, type: !165)
!5941 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 435, column: 2)
!5942 = !DILocation(line: 435, column: 2, scope: !5941)
!5943 = !DILocation(line: 435, column: 2, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 435, column: 2)
!5945 = distinct !{!5945, !5923, !5946}
!5946 = !DILocation(line: 443, column: 2, scope: !5919)
!5947 = !DILocation(line: 445, column: 16, scope: !5884)
!5948 = !DILocation(line: 445, column: 27, scope: !5884)
!5949 = !DILocation(line: 445, column: 2, scope: !5884)
!5950 = !DILocation(line: 446, column: 27, scope: !5884)
!5951 = !DILocation(line: 446, column: 2, scope: !5884)
!5952 = !DILocation(line: 448, column: 9, scope: !5884)
!5953 = !DILocation(line: 448, column: 2, scope: !5884)
!5954 = !DILocation(line: 449, column: 1, scope: !5884)
!5955 = distinct !DISubprogram(name: "dev_pm_opp_find_freq_ceil", scope: !3, file: !3, line: 493, type: !5956, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5956 = !DISubroutineType(types: !5957)
!5957 = !{!166, !1739, !5958}
!5958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!5959 = !DILocalVariable(name: "dev", arg: 1, scope: !5955, file: !3, line: 493, type: !1739)
!5960 = !DILocation(line: 493, column: 61, scope: !5955)
!5961 = !DILocalVariable(name: "freq", arg: 2, scope: !5955, file: !3, line: 494, type: !5958)
!5962 = !DILocation(line: 494, column: 26, scope: !5955)
!5963 = !DILocalVariable(name: "opp_table", scope: !5955, file: !3, line: 496, type: !221)
!5964 = !DILocation(line: 496, column: 20, scope: !5955)
!5965 = !DILocalVariable(name: "opp", scope: !5955, file: !3, line: 497, type: !166)
!5966 = !DILocation(line: 497, column: 21, scope: !5955)
!5967 = !DILocation(line: 499, column: 7, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 499, column: 6)
!5969 = !DILocation(line: 499, column: 11, scope: !5968)
!5970 = !DILocation(line: 499, column: 15, scope: !5968)
!5971 = !DILocation(line: 499, column: 6, scope: !5955)
!5972 = !DILocation(line: 500, column: 3, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 499, column: 21)
!5974 = !DILocation(line: 501, column: 10, scope: !5973)
!5975 = !DILocation(line: 501, column: 3, scope: !5973)
!5976 = !DILocation(line: 504, column: 30, scope: !5955)
!5977 = !DILocation(line: 504, column: 14, scope: !5955)
!5978 = !DILocation(line: 504, column: 12, scope: !5955)
!5979 = !DILocation(line: 505, column: 13, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5955, file: !3, line: 505, column: 6)
!5981 = !DILocation(line: 505, column: 6, scope: !5980)
!5982 = !DILocation(line: 505, column: 6, scope: !5955)
!5983 = !DILocation(line: 506, column: 19, scope: !5980)
!5984 = !DILocation(line: 506, column: 10, scope: !5980)
!5985 = !DILocation(line: 506, column: 3, scope: !5980)
!5986 = !DILocation(line: 508, column: 24, scope: !5955)
!5987 = !DILocation(line: 508, column: 35, scope: !5955)
!5988 = !DILocation(line: 508, column: 8, scope: !5955)
!5989 = !DILocation(line: 508, column: 6, scope: !5955)
!5990 = !DILocation(line: 510, column: 27, scope: !5955)
!5991 = !DILocation(line: 510, column: 2, scope: !5955)
!5992 = !DILocation(line: 512, column: 9, scope: !5955)
!5993 = !DILocation(line: 512, column: 2, scope: !5955)
!5994 = !DILocation(line: 513, column: 1, scope: !5955)
!5995 = distinct !DISubprogram(name: "ERR_CAST", scope: !5019, file: !5019, line: 51, type: !5996, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!5996 = !DISubroutineType(types: !5997)
!5997 = !{!165, !324}
!5998 = !DILocalVariable(name: "ptr", arg: 1, scope: !5995, file: !5019, line: 51, type: !324)
!5999 = !DILocation(line: 51, column: 64, scope: !5995)
!6000 = !DILocation(line: 54, column: 18, scope: !5995)
!6001 = !DILocation(line: 54, column: 2, scope: !5995)
!6002 = distinct !DISubprogram(name: "_find_freq_ceil", scope: !3, file: !3, line: 452, type: !6003, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!6003 = !DISubroutineType(types: !6004)
!6004 = !{!166, !221, !5958}
!6005 = !DILocalVariable(name: "opp_table", arg: 1, scope: !6002, file: !3, line: 452, type: !221)
!6006 = !DILocation(line: 452, column: 70, scope: !6002)
!6007 = !DILocalVariable(name: "freq", arg: 2, scope: !6002, file: !3, line: 453, type: !5958)
!6008 = !DILocation(line: 453, column: 25, scope: !6002)
!6009 = !DILocalVariable(name: "temp_opp", scope: !6002, file: !3, line: 455, type: !166)
!6010 = !DILocation(line: 455, column: 21, scope: !6002)
!6011 = !DILocalVariable(name: "opp", scope: !6002, file: !3, line: 455, type: !166)
!6012 = !DILocation(line: 455, column: 32, scope: !6002)
!6013 = !DILocation(line: 455, column: 38, scope: !6002)
!6014 = !DILocation(line: 457, column: 14, scope: !6002)
!6015 = !DILocation(line: 457, column: 25, scope: !6002)
!6016 = !DILocation(line: 457, column: 2, scope: !6002)
!6017 = !DILocalVariable(name: "__mptr", scope: !6018, file: !3, line: 459, type: !165)
!6018 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 459, column: 2)
!6019 = distinct !DILexicalBlock(scope: !6002, file: !3, line: 459, column: 2)
!6020 = !DILocation(line: 459, column: 2, scope: !6018)
!6021 = !DILocation(line: 459, column: 2, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6018, file: !3, line: 459, column: 2)
!6023 = !DILocation(line: 459, column: 2, scope: !6019)
!6024 = !DILocation(line: 459, column: 2, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 459, column: 2)
!6026 = !DILocation(line: 460, column: 7, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6028, file: !3, line: 460, column: 7)
!6028 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 459, column: 60)
!6029 = !DILocation(line: 460, column: 17, scope: !6027)
!6030 = !DILocation(line: 460, column: 27, scope: !6027)
!6031 = !DILocation(line: 460, column: 30, scope: !6027)
!6032 = !DILocation(line: 460, column: 40, scope: !6027)
!6033 = !DILocation(line: 460, column: 49, scope: !6027)
!6034 = !DILocation(line: 460, column: 48, scope: !6027)
!6035 = !DILocation(line: 460, column: 45, scope: !6027)
!6036 = !DILocation(line: 460, column: 7, scope: !6028)
!6037 = !DILocation(line: 461, column: 10, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 460, column: 55)
!6039 = !DILocation(line: 461, column: 8, scope: !6038)
!6040 = !DILocation(line: 462, column: 12, scope: !6038)
!6041 = !DILocation(line: 462, column: 17, scope: !6038)
!6042 = !DILocation(line: 462, column: 5, scope: !6038)
!6043 = !DILocation(line: 462, column: 10, scope: !6038)
!6044 = !DILocation(line: 465, column: 19, scope: !6038)
!6045 = !DILocation(line: 465, column: 4, scope: !6038)
!6046 = !DILocation(line: 466, column: 4, scope: !6038)
!6047 = !DILocation(line: 468, column: 2, scope: !6028)
!6048 = !DILocalVariable(name: "__mptr", scope: !6049, file: !3, line: 459, type: !165)
!6049 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 459, column: 2)
!6050 = !DILocation(line: 459, column: 2, scope: !6049)
!6051 = !DILocation(line: 459, column: 2, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 459, column: 2)
!6053 = distinct !{!6053, !6023, !6054}
!6054 = !DILocation(line: 468, column: 2, scope: !6019)
!6055 = !DILocation(line: 470, column: 16, scope: !6002)
!6056 = !DILocation(line: 470, column: 27, scope: !6002)
!6057 = !DILocation(line: 470, column: 2, scope: !6002)
!6058 = !DILocation(line: 472, column: 9, scope: !6002)
!6059 = !DILocation(line: 472, column: 2, scope: !6002)
!6060 = distinct !DISubprogram(name: "dev_pm_opp_find_freq_floor", scope: !3, file: !3, line: 534, type: !5956, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!6061 = !DILocalVariable(name: "dev", arg: 1, scope: !6060, file: !3, line: 534, type: !1739)
!6062 = !DILocation(line: 534, column: 62, scope: !6060)
!6063 = !DILocalVariable(name: "freq", arg: 2, scope: !6060, file: !3, line: 535, type: !5958)
!6064 = !DILocation(line: 535, column: 27, scope: !6060)
!6065 = !DILocalVariable(name: "opp_table", scope: !6060, file: !3, line: 537, type: !221)
!6066 = !DILocation(line: 537, column: 20, scope: !6060)
!6067 = !DILocalVariable(name: "temp_opp", scope: !6060, file: !3, line: 538, type: !166)
!6068 = !DILocation(line: 538, column: 21, scope: !6060)
!6069 = !DILocalVariable(name: "opp", scope: !6060, file: !3, line: 538, type: !166)
!6070 = !DILocation(line: 538, column: 32, scope: !6060)
!6071 = !DILocation(line: 538, column: 38, scope: !6060)
!6072 = !DILocation(line: 540, column: 7, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 540, column: 6)
!6074 = !DILocation(line: 540, column: 11, scope: !6073)
!6075 = !DILocation(line: 540, column: 15, scope: !6073)
!6076 = !DILocation(line: 540, column: 6, scope: !6060)
!6077 = !DILocation(line: 541, column: 3, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 540, column: 21)
!6079 = !DILocation(line: 542, column: 10, scope: !6078)
!6080 = !DILocation(line: 542, column: 3, scope: !6078)
!6081 = !DILocation(line: 545, column: 30, scope: !6060)
!6082 = !DILocation(line: 545, column: 14, scope: !6060)
!6083 = !DILocation(line: 545, column: 12, scope: !6060)
!6084 = !DILocation(line: 546, column: 13, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 546, column: 6)
!6086 = !DILocation(line: 546, column: 6, scope: !6085)
!6087 = !DILocation(line: 546, column: 6, scope: !6060)
!6088 = !DILocation(line: 547, column: 19, scope: !6085)
!6089 = !DILocation(line: 547, column: 10, scope: !6085)
!6090 = !DILocation(line: 547, column: 3, scope: !6085)
!6091 = !DILocation(line: 549, column: 14, scope: !6060)
!6092 = !DILocation(line: 549, column: 25, scope: !6060)
!6093 = !DILocation(line: 549, column: 2, scope: !6060)
!6094 = !DILocalVariable(name: "__mptr", scope: !6095, file: !3, line: 551, type: !165)
!6095 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 551, column: 2)
!6096 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 551, column: 2)
!6097 = !DILocation(line: 551, column: 2, scope: !6095)
!6098 = !DILocation(line: 551, column: 2, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6095, file: !3, line: 551, column: 2)
!6100 = !DILocation(line: 551, column: 2, scope: !6096)
!6101 = !DILocation(line: 551, column: 2, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 551, column: 2)
!6103 = !DILocation(line: 552, column: 7, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6105, file: !3, line: 552, column: 7)
!6105 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 551, column: 60)
!6106 = !DILocation(line: 552, column: 17, scope: !6104)
!6107 = !DILocation(line: 552, column: 7, scope: !6105)
!6108 = !DILocation(line: 554, column: 8, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 554, column: 8)
!6110 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 552, column: 28)
!6111 = !DILocation(line: 554, column: 18, scope: !6109)
!6112 = !DILocation(line: 554, column: 26, scope: !6109)
!6113 = !DILocation(line: 554, column: 25, scope: !6109)
!6114 = !DILocation(line: 554, column: 23, scope: !6109)
!6115 = !DILocation(line: 554, column: 8, scope: !6110)
!6116 = !DILocation(line: 555, column: 5, scope: !6109)
!6117 = !DILocation(line: 557, column: 11, scope: !6109)
!6118 = !DILocation(line: 557, column: 9, scope: !6109)
!6119 = !DILocation(line: 558, column: 3, scope: !6110)
!6120 = !DILocation(line: 559, column: 2, scope: !6105)
!6121 = !DILocalVariable(name: "__mptr", scope: !6122, file: !3, line: 551, type: !165)
!6122 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 551, column: 2)
!6123 = !DILocation(line: 551, column: 2, scope: !6122)
!6124 = !DILocation(line: 551, column: 2, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !6122, file: !3, line: 551, column: 2)
!6126 = distinct !{!6126, !6100, !6127}
!6127 = !DILocation(line: 559, column: 2, scope: !6096)
!6128 = !DILocation(line: 562, column: 14, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 562, column: 6)
!6130 = !DILocation(line: 562, column: 7, scope: !6129)
!6131 = !DILocation(line: 562, column: 6, scope: !6060)
!6132 = !DILocation(line: 563, column: 18, scope: !6129)
!6133 = !DILocation(line: 563, column: 3, scope: !6129)
!6134 = !DILocation(line: 564, column: 16, scope: !6060)
!6135 = !DILocation(line: 564, column: 27, scope: !6060)
!6136 = !DILocation(line: 564, column: 2, scope: !6060)
!6137 = !DILocation(line: 565, column: 27, scope: !6060)
!6138 = !DILocation(line: 565, column: 2, scope: !6060)
!6139 = !DILocation(line: 567, column: 14, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6060, file: !3, line: 567, column: 6)
!6141 = !DILocation(line: 567, column: 7, scope: !6140)
!6142 = !DILocation(line: 567, column: 6, scope: !6060)
!6143 = !DILocation(line: 568, column: 11, scope: !6140)
!6144 = !DILocation(line: 568, column: 16, scope: !6140)
!6145 = !DILocation(line: 568, column: 4, scope: !6140)
!6146 = !DILocation(line: 568, column: 9, scope: !6140)
!6147 = !DILocation(line: 568, column: 3, scope: !6140)
!6148 = !DILocation(line: 570, column: 9, scope: !6060)
!6149 = !DILocation(line: 570, column: 2, scope: !6060)
!6150 = !DILocation(line: 571, column: 1, scope: !6060)
!6151 = distinct !DISubprogram(name: "dev_pm_opp_find_freq_ceil_by_volt", scope: !3, file: !3, line: 591, type: !6152, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!6152 = !DISubroutineType(types: !6153)
!6153 = !{!166, !1739, !197}
!6154 = !DILocalVariable(name: "dev", arg: 1, scope: !6151, file: !3, line: 591, type: !1739)
!6155 = !DILocation(line: 591, column: 69, scope: !6151)
!6156 = !DILocalVariable(name: "u_volt", arg: 2, scope: !6151, file: !3, line: 592, type: !197)
!6157 = !DILocation(line: 592, column: 26, scope: !6151)
!6158 = !DILocalVariable(name: "opp_table", scope: !6151, file: !3, line: 594, type: !221)
!6159 = !DILocation(line: 594, column: 20, scope: !6151)
!6160 = !DILocalVariable(name: "temp_opp", scope: !6151, file: !3, line: 595, type: !166)
!6161 = !DILocation(line: 595, column: 21, scope: !6151)
!6162 = !DILocalVariable(name: "opp", scope: !6151, file: !3, line: 595, type: !166)
!6163 = !DILocation(line: 595, column: 32, scope: !6151)
!6164 = !DILocation(line: 595, column: 38, scope: !6151)
!6165 = !DILocation(line: 597, column: 7, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 597, column: 6)
!6167 = !DILocation(line: 597, column: 11, scope: !6166)
!6168 = !DILocation(line: 597, column: 15, scope: !6166)
!6169 = !DILocation(line: 597, column: 6, scope: !6151)
!6170 = !DILocation(line: 598, column: 3, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6166, file: !3, line: 597, column: 23)
!6172 = !DILocation(line: 600, column: 10, scope: !6171)
!6173 = !DILocation(line: 600, column: 3, scope: !6171)
!6174 = !DILocation(line: 603, column: 30, scope: !6151)
!6175 = !DILocation(line: 603, column: 14, scope: !6151)
!6176 = !DILocation(line: 603, column: 12, scope: !6151)
!6177 = !DILocation(line: 604, column: 13, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 604, column: 6)
!6179 = !DILocation(line: 604, column: 6, scope: !6178)
!6180 = !DILocation(line: 604, column: 6, scope: !6151)
!6181 = !DILocation(line: 605, column: 19, scope: !6178)
!6182 = !DILocation(line: 605, column: 10, scope: !6178)
!6183 = !DILocation(line: 605, column: 3, scope: !6178)
!6184 = !DILocation(line: 607, column: 14, scope: !6151)
!6185 = !DILocation(line: 607, column: 25, scope: !6151)
!6186 = !DILocation(line: 607, column: 2, scope: !6151)
!6187 = !DILocalVariable(name: "__mptr", scope: !6188, file: !3, line: 609, type: !165)
!6188 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 609, column: 2)
!6189 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 609, column: 2)
!6190 = !DILocation(line: 609, column: 2, scope: !6188)
!6191 = !DILocation(line: 609, column: 2, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 609, column: 2)
!6193 = !DILocation(line: 609, column: 2, scope: !6189)
!6194 = !DILocation(line: 609, column: 2, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 609, column: 2)
!6196 = !DILocation(line: 610, column: 7, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 610, column: 7)
!6198 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 609, column: 60)
!6199 = !DILocation(line: 610, column: 17, scope: !6197)
!6200 = !DILocation(line: 610, column: 7, scope: !6198)
!6201 = !DILocation(line: 611, column: 8, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6203, file: !3, line: 611, column: 8)
!6203 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 610, column: 28)
!6204 = !DILocation(line: 611, column: 18, scope: !6202)
!6205 = !DILocation(line: 611, column: 30, scope: !6202)
!6206 = !DILocation(line: 611, column: 39, scope: !6202)
!6207 = !DILocation(line: 611, column: 37, scope: !6202)
!6208 = !DILocation(line: 611, column: 8, scope: !6203)
!6209 = !DILocation(line: 612, column: 5, scope: !6202)
!6210 = !DILocation(line: 613, column: 10, scope: !6203)
!6211 = !DILocation(line: 613, column: 8, scope: !6203)
!6212 = !DILocation(line: 614, column: 3, scope: !6203)
!6213 = !DILocation(line: 615, column: 2, scope: !6198)
!6214 = !DILocalVariable(name: "__mptr", scope: !6215, file: !3, line: 609, type: !165)
!6215 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 609, column: 2)
!6216 = !DILocation(line: 609, column: 2, scope: !6215)
!6217 = !DILocation(line: 609, column: 2, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 609, column: 2)
!6219 = distinct !{!6219, !6193, !6220}
!6220 = !DILocation(line: 615, column: 2, scope: !6189)
!6221 = !DILocation(line: 618, column: 14, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6151, file: !3, line: 618, column: 6)
!6223 = !DILocation(line: 618, column: 7, scope: !6222)
!6224 = !DILocation(line: 618, column: 6, scope: !6151)
!6225 = !DILocation(line: 619, column: 18, scope: !6222)
!6226 = !DILocation(line: 619, column: 3, scope: !6222)
!6227 = !DILocation(line: 621, column: 16, scope: !6151)
!6228 = !DILocation(line: 621, column: 27, scope: !6151)
!6229 = !DILocation(line: 621, column: 2, scope: !6151)
!6230 = !DILocation(line: 622, column: 27, scope: !6151)
!6231 = !DILocation(line: 622, column: 2, scope: !6151)
!6232 = !DILocation(line: 624, column: 9, scope: !6151)
!6233 = !DILocation(line: 624, column: 2, scope: !6151)
!6234 = !DILocation(line: 625, column: 1, scope: !6151)
!6235 = distinct !DISubprogram(name: "dev_pm_opp_set_bw", scope: !3, file: !3, line: 854, type: !6236, scopeLine: 855, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!6236 = !DISubroutineType(types: !6237)
!6237 = !{!188, !1739, !166}
!6238 = !DILocalVariable(name: "dev", arg: 1, scope: !6235, file: !3, line: 854, type: !1739)
!6239 = !DILocation(line: 854, column: 38, scope: !6235)
!6240 = !DILocalVariable(name: "opp", arg: 2, scope: !6235, file: !3, line: 854, type: !166)
!6241 = !DILocation(line: 854, column: 62, scope: !6235)
!6242 = !DILocalVariable(name: "opp_table", scope: !6235, file: !3, line: 856, type: !221)
!6243 = !DILocation(line: 856, column: 20, scope: !6235)
!6244 = !DILocalVariable(name: "ret", scope: !6235, file: !3, line: 857, type: !188)
!6245 = !DILocation(line: 857, column: 6, scope: !6235)
!6246 = !DILocation(line: 859, column: 30, scope: !6235)
!6247 = !DILocation(line: 859, column: 14, scope: !6235)
!6248 = !DILocation(line: 859, column: 12, scope: !6235)
!6249 = !DILocation(line: 860, column: 13, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6235, file: !3, line: 860, column: 6)
!6251 = !DILocation(line: 860, column: 6, scope: !6250)
!6252 = !DILocation(line: 860, column: 6, scope: !6235)
!6253 = !DILocation(line: 861, column: 3, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6250, file: !3, line: 860, column: 25)
!6255 = !DILocation(line: 862, column: 18, scope: !6254)
!6256 = !DILocation(line: 862, column: 10, scope: !6254)
!6257 = !DILocation(line: 862, column: 3, scope: !6254)
!6258 = !DILocation(line: 865, column: 6, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6235, file: !3, line: 865, column: 6)
!6260 = !DILocation(line: 865, column: 6, scope: !6235)
!6261 = !DILocation(line: 866, column: 21, scope: !6259)
!6262 = !DILocation(line: 866, column: 32, scope: !6259)
!6263 = !DILocation(line: 866, column: 37, scope: !6259)
!6264 = !DILocation(line: 866, column: 9, scope: !6259)
!6265 = !DILocation(line: 866, column: 7, scope: !6259)
!6266 = !DILocation(line: 866, column: 3, scope: !6259)
!6267 = !DILocation(line: 868, column: 21, scope: !6259)
!6268 = !DILocation(line: 868, column: 38, scope: !6259)
!6269 = !DILocation(line: 868, column: 9, scope: !6259)
!6270 = !DILocation(line: 868, column: 7, scope: !6259)
!6271 = !DILocation(line: 870, column: 27, scope: !6235)
!6272 = !DILocation(line: 870, column: 2, scope: !6235)
!6273 = !DILocation(line: 871, column: 9, scope: !6235)
!6274 = !DILocation(line: 871, column: 2, scope: !6235)
!6275 = !DILocation(line: 872, column: 1, scope: !6235)
!6276 = distinct !DISubprogram(name: "_set_opp_bw", scope: !3, file: !3, line: 726, type: !6277, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!6277 = !DISubroutineType(types: !6278)
!6278 = !{!188, !6279, !166, !1739, !190}
!6279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6280, size: 64)
!6280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !222)
!6281 = !DILocalVariable(name: "opp_table", arg: 1, scope: !6276, file: !3, line: 726, type: !6279)
!6282 = !DILocation(line: 726, column: 48, scope: !6276)
!6283 = !DILocalVariable(name: "opp", arg: 2, scope: !6276, file: !3, line: 727, type: !166)
!6284 = !DILocation(line: 727, column: 29, scope: !6276)
!6285 = !DILocalVariable(name: "dev", arg: 3, scope: !6276, file: !3, line: 727, type: !1739)
!6286 = !DILocation(line: 727, column: 49, scope: !6276)
!6287 = !DILocalVariable(name: "remove", arg: 4, scope: !6276, file: !3, line: 727, type: !190)
!6288 = !DILocation(line: 727, column: 59, scope: !6276)
!6289 = !DILocalVariable(name: "avg", scope: !6276, file: !3, line: 729, type: !212)
!6290 = !DILocation(line: 729, column: 6, scope: !6276)
!6291 = !DILocalVariable(name: "peak", scope: !6276, file: !3, line: 729, type: !212)
!6292 = !DILocation(line: 729, column: 11, scope: !6276)
!6293 = !DILocalVariable(name: "i", scope: !6276, file: !3, line: 730, type: !188)
!6294 = !DILocation(line: 730, column: 6, scope: !6276)
!6295 = !DILocalVariable(name: "ret", scope: !6276, file: !3, line: 730, type: !188)
!6296 = !DILocation(line: 730, column: 9, scope: !6276)
!6297 = !DILocation(line: 732, column: 7, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 732, column: 6)
!6299 = !DILocation(line: 732, column: 18, scope: !6298)
!6300 = !DILocation(line: 732, column: 6, scope: !6276)
!6301 = !DILocation(line: 733, column: 3, scope: !6298)
!6302 = !DILocation(line: 735, column: 9, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6276, file: !3, line: 735, column: 2)
!6304 = !DILocation(line: 735, column: 7, scope: !6303)
!6305 = !DILocation(line: 735, column: 14, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 735, column: 2)
!6307 = !DILocation(line: 735, column: 18, scope: !6306)
!6308 = !DILocation(line: 735, column: 29, scope: !6306)
!6309 = !DILocation(line: 735, column: 16, scope: !6306)
!6310 = !DILocation(line: 735, column: 2, scope: !6303)
!6311 = !DILocation(line: 736, column: 7, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 736, column: 7)
!6313 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 735, column: 46)
!6314 = !DILocation(line: 736, column: 7, scope: !6313)
!6315 = !DILocation(line: 737, column: 8, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 736, column: 15)
!6317 = !DILocation(line: 738, column: 9, scope: !6316)
!6318 = !DILocation(line: 739, column: 3, scope: !6316)
!6319 = !DILocation(line: 740, column: 10, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 739, column: 10)
!6321 = !DILocation(line: 740, column: 15, scope: !6320)
!6322 = !DILocation(line: 740, column: 25, scope: !6320)
!6323 = !DILocation(line: 740, column: 28, scope: !6320)
!6324 = !DILocation(line: 740, column: 8, scope: !6320)
!6325 = !DILocation(line: 741, column: 11, scope: !6320)
!6326 = !DILocation(line: 741, column: 16, scope: !6320)
!6327 = !DILocation(line: 741, column: 26, scope: !6320)
!6328 = !DILocation(line: 741, column: 29, scope: !6320)
!6329 = !DILocation(line: 741, column: 9, scope: !6320)
!6330 = !DILocation(line: 743, column: 20, scope: !6313)
!6331 = !DILocation(line: 743, column: 31, scope: !6313)
!6332 = !DILocation(line: 743, column: 37, scope: !6313)
!6333 = !DILocation(line: 743, column: 41, scope: !6313)
!6334 = !DILocation(line: 743, column: 46, scope: !6313)
!6335 = !DILocation(line: 743, column: 9, scope: !6313)
!6336 = !DILocation(line: 743, column: 7, scope: !6313)
!6337 = !DILocation(line: 744, column: 7, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 744, column: 7)
!6339 = !DILocation(line: 744, column: 7, scope: !6313)
!6340 = !DILocation(line: 745, column: 4, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 744, column: 12)
!6342 = !DILocation(line: 747, column: 11, scope: !6341)
!6343 = !DILocation(line: 747, column: 4, scope: !6341)
!6344 = !DILocation(line: 749, column: 2, scope: !6313)
!6345 = !DILocation(line: 735, column: 42, scope: !6306)
!6346 = !DILocation(line: 735, column: 2, scope: !6306)
!6347 = distinct !{!6347, !6310, !6348}
!6348 = !DILocation(line: 749, column: 2, scope: !6303)
!6349 = !DILocation(line: 751, column: 2, scope: !6276)
!6350 = !DILocation(line: 752, column: 1, scope: !6276)
!6351 = distinct !DISubprogram(name: "dev_pm_opp_set_rate", scope: !3, file: !3, line: 914, type: !6352, scopeLine: 915, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!6352 = !DISubroutineType(types: !6353)
!6353 = !{!188, !1739, !197}
!6354 = !DILocalVariable(name: "dev", arg: 1, scope: !6351, file: !3, line: 914, type: !1739)
!6355 = !DILocation(line: 914, column: 40, scope: !6351)
!6356 = !DILocalVariable(name: "target_freq", arg: 2, scope: !6351, file: !3, line: 914, type: !197)
!6357 = !DILocation(line: 914, column: 59, scope: !6351)
!6358 = !DILocalVariable(name: "opp_table", scope: !6351, file: !3, line: 916, type: !221)
!6359 = !DILocation(line: 916, column: 20, scope: !6351)
!6360 = !DILocalVariable(name: "freq", scope: !6351, file: !3, line: 917, type: !197)
!6361 = !DILocation(line: 917, column: 16, scope: !6351)
!6362 = !DILocalVariable(name: "old_freq", scope: !6351, file: !3, line: 917, type: !197)
!6363 = !DILocation(line: 917, column: 22, scope: !6351)
!6364 = !DILocalVariable(name: "temp_freq", scope: !6351, file: !3, line: 917, type: !197)
!6365 = !DILocation(line: 917, column: 32, scope: !6351)
!6366 = !DILocalVariable(name: "old_opp", scope: !6351, file: !3, line: 918, type: !166)
!6367 = !DILocation(line: 918, column: 21, scope: !6351)
!6368 = !DILocalVariable(name: "opp", scope: !6351, file: !3, line: 918, type: !166)
!6369 = !DILocation(line: 918, column: 31, scope: !6351)
!6370 = !DILocalVariable(name: "clk", scope: !6351, file: !3, line: 919, type: !4930)
!6371 = !DILocation(line: 919, column: 14, scope: !6351)
!6372 = !DILocalVariable(name: "ret", scope: !6351, file: !3, line: 920, type: !188)
!6373 = !DILocation(line: 920, column: 6, scope: !6351)
!6374 = !DILocation(line: 922, column: 30, scope: !6351)
!6375 = !DILocation(line: 922, column: 14, scope: !6351)
!6376 = !DILocation(line: 922, column: 12, scope: !6351)
!6377 = !DILocation(line: 923, column: 13, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 923, column: 6)
!6379 = !DILocation(line: 923, column: 6, scope: !6378)
!6380 = !DILocation(line: 923, column: 6, scope: !6351)
!6381 = !DILocation(line: 924, column: 3, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 923, column: 25)
!6383 = !DILocation(line: 925, column: 18, scope: !6382)
!6384 = !DILocation(line: 925, column: 10, scope: !6382)
!6385 = !DILocation(line: 925, column: 3, scope: !6382)
!6386 = !DILocation(line: 928, column: 6, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 928, column: 6)
!6388 = !DILocation(line: 928, column: 6, scope: !6351)
!6389 = !DILocation(line: 929, column: 28, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 928, column: 30)
!6391 = !DILocation(line: 929, column: 33, scope: !6390)
!6392 = !DILocation(line: 929, column: 9, scope: !6390)
!6393 = !DILocation(line: 929, column: 7, scope: !6390)
!6394 = !DILocation(line: 930, column: 3, scope: !6390)
!6395 = !DILocation(line: 933, column: 8, scope: !6351)
!6396 = !DILocation(line: 933, column: 19, scope: !6351)
!6397 = !DILocation(line: 933, column: 6, scope: !6351)
!6398 = !DILocation(line: 934, column: 13, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 934, column: 6)
!6400 = !DILocation(line: 934, column: 6, scope: !6399)
!6401 = !DILocation(line: 934, column: 6, scope: !6351)
!6402 = !DILocation(line: 935, column: 3, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 934, column: 19)
!6404 = !DILocation(line: 937, column: 17, scope: !6403)
!6405 = !DILocation(line: 937, column: 9, scope: !6403)
!6406 = !DILocation(line: 937, column: 7, scope: !6403)
!6407 = !DILocation(line: 938, column: 3, scope: !6403)
!6408 = !DILocation(line: 941, column: 24, scope: !6351)
!6409 = !DILocation(line: 941, column: 29, scope: !6351)
!6410 = !DILocation(line: 941, column: 9, scope: !6351)
!6411 = !DILocation(line: 941, column: 7, scope: !6351)
!6412 = !DILocation(line: 942, column: 12, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 942, column: 6)
!6414 = !DILocation(line: 942, column: 17, scope: !6413)
!6415 = !DILocation(line: 942, column: 6, scope: !6351)
!6416 = !DILocation(line: 943, column: 10, scope: !6413)
!6417 = !DILocation(line: 943, column: 8, scope: !6413)
!6418 = !DILocation(line: 943, column: 3, scope: !6413)
!6419 = !DILocation(line: 945, column: 26, scope: !6351)
!6420 = !DILocation(line: 945, column: 13, scope: !6351)
!6421 = !DILocation(line: 945, column: 11, scope: !6351)
!6422 = !DILocation(line: 948, column: 6, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 948, column: 6)
!6424 = !DILocation(line: 948, column: 17, scope: !6423)
!6425 = !DILocation(line: 948, column: 25, scope: !6423)
!6426 = !DILocation(line: 948, column: 28, scope: !6423)
!6427 = !DILocation(line: 948, column: 40, scope: !6423)
!6428 = !DILocation(line: 948, column: 37, scope: !6423)
!6429 = !DILocation(line: 948, column: 6, scope: !6351)
!6430 = !DILocation(line: 951, column: 7, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6423, file: !3, line: 948, column: 46)
!6432 = !DILocation(line: 952, column: 3, scope: !6431)
!6433 = !DILocation(line: 962, column: 22, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 962, column: 6)
!6435 = !DILocation(line: 962, column: 7, scope: !6434)
!6436 = !DILocation(line: 962, column: 6, scope: !6351)
!6437 = !DILocation(line: 963, column: 35, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 962, column: 34)
!6439 = !DILocation(line: 963, column: 40, scope: !6438)
!6440 = !DILocation(line: 963, column: 45, scope: !6438)
!6441 = !DILocation(line: 963, column: 9, scope: !6438)
!6442 = !DILocation(line: 963, column: 7, scope: !6438)
!6443 = !DILocation(line: 964, column: 3, scope: !6438)
!6444 = !DILocation(line: 967, column: 14, scope: !6351)
!6445 = !DILocation(line: 967, column: 12, scope: !6351)
!6446 = !DILocation(line: 968, column: 28, scope: !6351)
!6447 = !DILocation(line: 968, column: 12, scope: !6351)
!6448 = !DILocation(line: 968, column: 10, scope: !6351)
!6449 = !DILocation(line: 969, column: 13, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 969, column: 6)
!6451 = !DILocation(line: 969, column: 6, scope: !6450)
!6452 = !DILocation(line: 969, column: 6, scope: !6351)
!6453 = !DILocation(line: 970, column: 3, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 969, column: 23)
!6455 = !DILocation(line: 972, column: 2, scope: !6454)
!6456 = !DILocation(line: 974, column: 14, scope: !6351)
!6457 = !DILocation(line: 974, column: 12, scope: !6351)
!6458 = !DILocation(line: 975, column: 24, scope: !6351)
!6459 = !DILocation(line: 975, column: 8, scope: !6351)
!6460 = !DILocation(line: 975, column: 6, scope: !6351)
!6461 = !DILocation(line: 976, column: 13, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 976, column: 6)
!6463 = !DILocation(line: 976, column: 6, scope: !6462)
!6464 = !DILocation(line: 976, column: 6, scope: !6351)
!6465 = !DILocation(line: 977, column: 17, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 976, column: 19)
!6467 = !DILocation(line: 977, column: 9, scope: !6466)
!6468 = !DILocation(line: 977, column: 7, scope: !6466)
!6469 = !DILocation(line: 978, column: 3, scope: !6466)
!6470 = !DILocation(line: 980, column: 3, scope: !6466)
!6471 = !DILocation(line: 987, column: 6, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 987, column: 6)
!6473 = !DILocation(line: 987, column: 14, scope: !6472)
!6474 = !DILocation(line: 987, column: 11, scope: !6472)
!6475 = !DILocation(line: 987, column: 6, scope: !6351)
!6476 = !DILocation(line: 988, column: 28, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 987, column: 24)
!6478 = !DILocation(line: 988, column: 33, scope: !6477)
!6479 = !DILocation(line: 988, column: 44, scope: !6477)
!6480 = !DILocation(line: 988, column: 9, scope: !6477)
!6481 = !DILocation(line: 988, column: 7, scope: !6477)
!6482 = !DILocation(line: 989, column: 7, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6477, file: !3, line: 989, column: 7)
!6484 = !DILocation(line: 989, column: 7, scope: !6477)
!6485 = !DILocation(line: 990, column: 4, scope: !6483)
!6486 = !DILocation(line: 991, column: 2, scope: !6477)
!6487 = !DILocation(line: 993, column: 6, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 993, column: 6)
!6489 = !DILocation(line: 993, column: 17, scope: !6488)
!6490 = !DILocation(line: 993, column: 6, scope: !6351)
!6491 = !DILocation(line: 994, column: 25, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 993, column: 26)
!6493 = !DILocation(line: 994, column: 36, scope: !6492)
!6494 = !DILocation(line: 994, column: 41, scope: !6492)
!6495 = !DILocation(line: 994, column: 51, scope: !6492)
!6496 = !DILocation(line: 995, column: 18, scope: !6492)
!6497 = !DILocation(line: 995, column: 11, scope: !6492)
!6498 = !DILocation(line: 995, column: 36, scope: !6492)
!6499 = !DILocation(line: 995, column: 45, scope: !6492)
!6500 = !DILocation(line: 996, column: 11, scope: !6492)
!6501 = !DILocation(line: 996, column: 16, scope: !6492)
!6502 = !DILocation(line: 994, column: 9, scope: !6492)
!6503 = !DILocation(line: 994, column: 7, scope: !6492)
!6504 = !DILocation(line: 997, column: 2, scope: !6492)
!6505 = !DILocation(line: 997, column: 13, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 997, column: 13)
!6507 = !DILocation(line: 997, column: 24, scope: !6506)
!6508 = !DILocation(line: 997, column: 13, scope: !6488)
!6509 = !DILocation(line: 998, column: 36, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6506, file: !3, line: 997, column: 36)
!6511 = !DILocation(line: 998, column: 47, scope: !6510)
!6512 = !DILocation(line: 998, column: 52, scope: !6510)
!6513 = !DILocation(line: 998, column: 62, scope: !6510)
!6514 = !DILocation(line: 999, column: 15, scope: !6510)
!6515 = !DILocation(line: 999, column: 8, scope: !6510)
!6516 = !DILocation(line: 999, column: 33, scope: !6510)
!6517 = !DILocation(line: 999, column: 42, scope: !6510)
!6518 = !DILocation(line: 1000, column: 8, scope: !6510)
!6519 = !DILocation(line: 1000, column: 13, scope: !6510)
!6520 = !DILocation(line: 998, column: 9, scope: !6510)
!6521 = !DILocation(line: 998, column: 7, scope: !6510)
!6522 = !DILocation(line: 1001, column: 2, scope: !6510)
!6523 = !DILocation(line: 1003, column: 35, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6506, file: !3, line: 1001, column: 9)
!6525 = !DILocation(line: 1003, column: 40, scope: !6524)
!6526 = !DILocation(line: 1003, column: 45, scope: !6524)
!6527 = !DILocation(line: 1003, column: 9, scope: !6524)
!6528 = !DILocation(line: 1003, column: 7, scope: !6524)
!6529 = !DILocation(line: 1007, column: 7, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 1007, column: 6)
!6531 = !DILocation(line: 1007, column: 11, scope: !6530)
!6532 = !DILocation(line: 1007, column: 14, scope: !6530)
!6533 = !DILocation(line: 1007, column: 21, scope: !6530)
!6534 = !DILocation(line: 1007, column: 19, scope: !6530)
!6535 = !DILocation(line: 1007, column: 6, scope: !6351)
!6536 = !DILocation(line: 1008, column: 28, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 1007, column: 31)
!6538 = !DILocation(line: 1008, column: 33, scope: !6537)
!6539 = !DILocation(line: 1008, column: 44, scope: !6537)
!6540 = !DILocation(line: 1008, column: 9, scope: !6537)
!6541 = !DILocation(line: 1008, column: 7, scope: !6537)
!6542 = !DILocation(line: 1009, column: 7, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6537, file: !3, line: 1009, column: 7)
!6544 = !DILocation(line: 1009, column: 7, scope: !6537)
!6545 = !DILocation(line: 1010, column: 4, scope: !6543)
!6546 = !DILocation(line: 1011, column: 2, scope: !6537)
!6547 = !DILocation(line: 1013, column: 7, scope: !6548)
!6548 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 1013, column: 6)
!6549 = !DILocation(line: 1013, column: 6, scope: !6351)
!6550 = !DILocation(line: 1014, column: 21, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 1013, column: 12)
!6552 = !DILocation(line: 1014, column: 32, scope: !6551)
!6553 = !DILocation(line: 1014, column: 37, scope: !6551)
!6554 = !DILocation(line: 1014, column: 9, scope: !6551)
!6555 = !DILocation(line: 1014, column: 7, scope: !6551)
!6556 = !DILocation(line: 1015, column: 8, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 1015, column: 7)
!6558 = !DILocation(line: 1015, column: 7, scope: !6551)
!6559 = !DILocation(line: 1016, column: 4, scope: !6557)
!6560 = !DILocation(line: 1016, column: 15, scope: !6557)
!6561 = !DILocation(line: 1016, column: 23, scope: !6557)
!6562 = !DILocation(line: 1017, column: 2, scope: !6551)
!6563 = !DILabel(scope: !6351, name: "put_opp", file: !3, line: 1019)
!6564 = !DILocation(line: 1019, column: 1, scope: !6351)
!6565 = !DILocation(line: 1020, column: 17, scope: !6351)
!6566 = !DILocation(line: 1020, column: 2, scope: !6351)
!6567 = !DILabel(scope: !6351, name: "put_old_opp", file: !3, line: 1021)
!6568 = !DILocation(line: 1021, column: 1, scope: !6351)
!6569 = !DILocation(line: 1022, column: 14, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 1022, column: 6)
!6571 = !DILocation(line: 1022, column: 7, scope: !6570)
!6572 = !DILocation(line: 1022, column: 6, scope: !6351)
!6573 = !DILocation(line: 1023, column: 18, scope: !6570)
!6574 = !DILocation(line: 1023, column: 3, scope: !6570)
!6575 = !DILocation(line: 1022, column: 21, scope: !6570)
!6576 = !DILabel(scope: !6351, name: "put_opp_table", file: !3, line: 1024)
!6577 = !DILocation(line: 1024, column: 1, scope: !6351)
!6578 = !DILocation(line: 1025, column: 27, scope: !6351)
!6579 = !DILocation(line: 1025, column: 2, scope: !6351)
!6580 = !DILocation(line: 1026, column: 9, scope: !6351)
!6581 = !DILocation(line: 1026, column: 2, scope: !6351)
!6582 = !DILocation(line: 1027, column: 1, scope: !6351)
!6583 = distinct !DISubprogram(name: "_opp_set_rate_zero", scope: !3, file: !3, line: 875, type: !6584, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!6584 = !DISubroutineType(types: !6585)
!6585 = !{!188, !1739, !221}
!6586 = !DILocalVariable(name: "dev", arg: 1, scope: !6583, file: !3, line: 875, type: !1739)
!6587 = !DILocation(line: 875, column: 46, scope: !6583)
!6588 = !DILocalVariable(name: "opp_table", arg: 2, scope: !6583, file: !3, line: 875, type: !221)
!6589 = !DILocation(line: 875, column: 69, scope: !6583)
!6590 = !DILocalVariable(name: "ret", scope: !6583, file: !3, line: 877, type: !188)
!6591 = !DILocation(line: 877, column: 6, scope: !6583)
!6592 = !DILocation(line: 879, column: 7, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 879, column: 6)
!6594 = !DILocation(line: 879, column: 18, scope: !6593)
!6595 = !DILocation(line: 879, column: 6, scope: !6583)
!6596 = !DILocation(line: 880, column: 3, scope: !6593)
!6597 = !DILocation(line: 887, column: 22, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 887, column: 6)
!6599 = !DILocation(line: 887, column: 7, scope: !6598)
!6600 = !DILocation(line: 887, column: 6, scope: !6583)
!6601 = !DILocation(line: 888, column: 3, scope: !6598)
!6602 = !DILocation(line: 890, column: 20, scope: !6583)
!6603 = !DILocation(line: 890, column: 37, scope: !6583)
!6604 = !DILocation(line: 890, column: 8, scope: !6583)
!6605 = !DILocation(line: 890, column: 6, scope: !6583)
!6606 = !DILocation(line: 891, column: 6, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 891, column: 6)
!6608 = !DILocation(line: 891, column: 6, scope: !6583)
!6609 = !DILocation(line: 892, column: 10, scope: !6607)
!6610 = !DILocation(line: 892, column: 3, scope: !6607)
!6611 = !DILocation(line: 894, column: 6, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 894, column: 6)
!6613 = !DILocation(line: 894, column: 17, scope: !6612)
!6614 = !DILocation(line: 894, column: 6, scope: !6583)
!6615 = !DILocation(line: 895, column: 21, scope: !6612)
!6616 = !DILocation(line: 895, column: 32, scope: !6612)
!6617 = !DILocation(line: 895, column: 3, scope: !6612)
!6618 = !DILocation(line: 897, column: 27, scope: !6583)
!6619 = !DILocation(line: 897, column: 32, scope: !6583)
!6620 = !DILocation(line: 897, column: 8, scope: !6583)
!6621 = !DILocation(line: 897, column: 6, scope: !6583)
!6622 = !DILocation(line: 899, column: 2, scope: !6583)
!6623 = !DILocation(line: 899, column: 13, scope: !6583)
!6624 = !DILocation(line: 899, column: 21, scope: !6583)
!6625 = !DILocation(line: 900, column: 9, scope: !6583)
!6626 = !DILocation(line: 900, column: 2, scope: !6583)
!6627 = !DILocation(line: 901, column: 1, scope: !6583)
!6628 = distinct !DISubprogram(name: "_generic_set_opp_clk_only", scope: !3, file: !3, line: 653, type: !6629, scopeLine: 655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!6629 = !DISubroutineType(types: !6630)
!6630 = !{!188, !1739, !4930, !197}
!6631 = !DILocalVariable(name: "dev", arg: 1, scope: !6628, file: !3, line: 653, type: !1739)
!6632 = !DILocation(line: 653, column: 60, scope: !6628)
!6633 = !DILocalVariable(name: "clk", arg: 2, scope: !6628, file: !3, line: 653, type: !4930)
!6634 = !DILocation(line: 653, column: 77, scope: !6628)
!6635 = !DILocalVariable(name: "freq", arg: 3, scope: !6628, file: !3, line: 654, type: !197)
!6636 = !DILocation(line: 654, column: 24, scope: !6628)
!6637 = !DILocalVariable(name: "ret", scope: !6628, file: !3, line: 656, type: !188)
!6638 = !DILocation(line: 656, column: 6, scope: !6628)
!6639 = !DILocation(line: 658, column: 21, scope: !6628)
!6640 = !DILocation(line: 658, column: 26, scope: !6628)
!6641 = !DILocation(line: 658, column: 8, scope: !6628)
!6642 = !DILocation(line: 658, column: 6, scope: !6628)
!6643 = !DILocation(line: 659, column: 6, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 659, column: 6)
!6645 = !DILocation(line: 659, column: 6, scope: !6628)
!6646 = !DILocation(line: 660, column: 3, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6644, file: !3, line: 659, column: 11)
!6648 = !DILocation(line: 662, column: 2, scope: !6647)
!6649 = !DILocation(line: 664, column: 9, scope: !6628)
!6650 = !DILocation(line: 664, column: 2, scope: !6628)
!6651 = distinct !DISubprogram(name: "_set_required_opps", scope: !3, file: !3, line: 801, type: !6652, scopeLine: 804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!6652 = !DISubroutineType(types: !6653)
!6653 = !{!188, !1739, !221, !166, !190}
!6654 = !DILocalVariable(name: "dev", arg: 1, scope: !6651, file: !3, line: 801, type: !1739)
!6655 = !DILocation(line: 801, column: 46, scope: !6651)
!6656 = !DILocalVariable(name: "opp_table", arg: 2, scope: !6651, file: !3, line: 802, type: !221)
!6657 = !DILocation(line: 802, column: 28, scope: !6651)
!6658 = !DILocalVariable(name: "opp", arg: 3, scope: !6651, file: !3, line: 803, type: !166)
!6659 = !DILocation(line: 803, column: 29, scope: !6651)
!6660 = !DILocalVariable(name: "up", arg: 4, scope: !6651, file: !3, line: 803, type: !190)
!6661 = !DILocation(line: 803, column: 39, scope: !6651)
!6662 = !DILocalVariable(name: "required_opp_tables", scope: !6651, file: !3, line: 805, type: !4924)
!6663 = !DILocation(line: 805, column: 21, scope: !6651)
!6664 = !DILocation(line: 805, column: 43, scope: !6651)
!6665 = !DILocation(line: 805, column: 54, scope: !6651)
!6666 = !DILocalVariable(name: "genpd_virt_devs", scope: !6651, file: !3, line: 806, type: !4922)
!6667 = !DILocation(line: 806, column: 18, scope: !6651)
!6668 = !DILocation(line: 806, column: 36, scope: !6651)
!6669 = !DILocation(line: 806, column: 47, scope: !6651)
!6670 = !DILocalVariable(name: "i", scope: !6651, file: !3, line: 807, type: !188)
!6671 = !DILocation(line: 807, column: 6, scope: !6651)
!6672 = !DILocalVariable(name: "ret", scope: !6651, file: !3, line: 807, type: !188)
!6673 = !DILocation(line: 807, column: 9, scope: !6651)
!6674 = !DILocation(line: 809, column: 7, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 809, column: 6)
!6676 = !DILocation(line: 809, column: 6, scope: !6651)
!6677 = !DILocation(line: 810, column: 3, scope: !6675)
!6678 = !DILocation(line: 813, column: 7, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 813, column: 6)
!6680 = !DILocation(line: 813, column: 6, scope: !6651)
!6681 = !DILocation(line: 814, column: 28, scope: !6679)
!6682 = !DILocation(line: 814, column: 33, scope: !6679)
!6683 = !DILocation(line: 814, column: 38, scope: !6679)
!6684 = !DILocation(line: 814, column: 10, scope: !6679)
!6685 = !DILocation(line: 814, column: 3, scope: !6679)
!6686 = !DILocation(line: 822, column: 14, scope: !6651)
!6687 = !DILocation(line: 822, column: 25, scope: !6651)
!6688 = !DILocation(line: 822, column: 2, scope: !6651)
!6689 = !DILocation(line: 825, column: 6, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 825, column: 6)
!6691 = !DILocation(line: 825, column: 6, scope: !6651)
!6692 = !DILocation(line: 826, column: 10, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 826, column: 3)
!6694 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 825, column: 10)
!6695 = !DILocation(line: 826, column: 8, scope: !6693)
!6696 = !DILocation(line: 826, column: 15, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 826, column: 3)
!6698 = !DILocation(line: 826, column: 19, scope: !6697)
!6699 = !DILocation(line: 826, column: 30, scope: !6697)
!6700 = !DILocation(line: 826, column: 17, scope: !6697)
!6701 = !DILocation(line: 826, column: 3, scope: !6693)
!6702 = !DILocation(line: 827, column: 28, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 826, column: 55)
!6704 = !DILocation(line: 827, column: 33, scope: !6703)
!6705 = !DILocation(line: 827, column: 49, scope: !6703)
!6706 = !DILocation(line: 827, column: 53, scope: !6703)
!6707 = !DILocation(line: 827, column: 58, scope: !6703)
!6708 = !DILocation(line: 827, column: 10, scope: !6703)
!6709 = !DILocation(line: 827, column: 8, scope: !6703)
!6710 = !DILocation(line: 828, column: 8, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 828, column: 8)
!6712 = !DILocation(line: 828, column: 8, scope: !6703)
!6713 = !DILocation(line: 829, column: 5, scope: !6711)
!6714 = !DILocation(line: 830, column: 3, scope: !6703)
!6715 = !DILocation(line: 826, column: 51, scope: !6697)
!6716 = !DILocation(line: 826, column: 3, scope: !6697)
!6717 = distinct !{!6717, !6701, !6718}
!6718 = !DILocation(line: 830, column: 3, scope: !6693)
!6719 = !DILocation(line: 831, column: 2, scope: !6694)
!6720 = !DILocation(line: 832, column: 12, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !3, line: 832, column: 3)
!6722 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 831, column: 9)
!6723 = !DILocation(line: 832, column: 23, scope: !6721)
!6724 = !DILocation(line: 832, column: 42, scope: !6721)
!6725 = !DILocation(line: 832, column: 10, scope: !6721)
!6726 = !DILocation(line: 832, column: 8, scope: !6721)
!6727 = !DILocation(line: 832, column: 47, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 832, column: 3)
!6729 = !DILocation(line: 832, column: 49, scope: !6728)
!6730 = !DILocation(line: 832, column: 3, scope: !6721)
!6731 = !DILocation(line: 833, column: 28, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 832, column: 60)
!6733 = !DILocation(line: 833, column: 33, scope: !6732)
!6734 = !DILocation(line: 833, column: 49, scope: !6732)
!6735 = !DILocation(line: 833, column: 53, scope: !6732)
!6736 = !DILocation(line: 833, column: 58, scope: !6732)
!6737 = !DILocation(line: 833, column: 10, scope: !6732)
!6738 = !DILocation(line: 833, column: 8, scope: !6732)
!6739 = !DILocation(line: 834, column: 8, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6732, file: !3, line: 834, column: 8)
!6741 = !DILocation(line: 834, column: 8, scope: !6732)
!6742 = !DILocation(line: 835, column: 5, scope: !6740)
!6743 = !DILocation(line: 836, column: 3, scope: !6732)
!6744 = !DILocation(line: 832, column: 56, scope: !6728)
!6745 = !DILocation(line: 832, column: 3, scope: !6728)
!6746 = distinct !{!6746, !6730, !6747}
!6747 = !DILocation(line: 836, column: 3, scope: !6721)
!6748 = !DILocation(line: 839, column: 16, scope: !6651)
!6749 = !DILocation(line: 839, column: 27, scope: !6651)
!6750 = !DILocation(line: 839, column: 2, scope: !6651)
!6751 = !DILocation(line: 841, column: 9, scope: !6651)
!6752 = !DILocation(line: 841, column: 2, scope: !6651)
!6753 = !DILocation(line: 842, column: 1, scope: !6651)
!6754 = distinct !DISubprogram(name: "_set_opp_custom", scope: !3, file: !3, line: 754, type: !6755, scopeLine: 759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!6755 = !DISubroutineType(types: !6756)
!6756 = !{!188, !6279, !1739, !197, !197, !200, !200}
!6757 = !DILocalVariable(name: "opp_table", arg: 1, scope: !6754, file: !3, line: 754, type: !6279)
!6758 = !DILocation(line: 754, column: 52, scope: !6754)
!6759 = !DILocalVariable(name: "dev", arg: 2, scope: !6754, file: !3, line: 755, type: !1739)
!6760 = !DILocation(line: 755, column: 22, scope: !6754)
!6761 = !DILocalVariable(name: "old_freq", arg: 3, scope: !6754, file: !3, line: 755, type: !197)
!6762 = !DILocation(line: 755, column: 41, scope: !6754)
!6763 = !DILocalVariable(name: "freq", arg: 4, scope: !6754, file: !3, line: 756, type: !197)
!6764 = !DILocation(line: 756, column: 21, scope: !6754)
!6765 = !DILocalVariable(name: "old_supply", arg: 5, scope: !6754, file: !3, line: 757, type: !200)
!6766 = !DILocation(line: 757, column: 33, scope: !6754)
!6767 = !DILocalVariable(name: "new_supply", arg: 6, scope: !6754, file: !3, line: 758, type: !200)
!6768 = !DILocation(line: 758, column: 33, scope: !6754)
!6769 = !DILocalVariable(name: "data", scope: !6754, file: !3, line: 760, type: !4952)
!6770 = !DILocation(line: 760, column: 30, scope: !6754)
!6771 = !DILocalVariable(name: "size", scope: !6754, file: !3, line: 761, type: !188)
!6772 = !DILocation(line: 761, column: 6, scope: !6754)
!6773 = !DILocation(line: 763, column: 9, scope: !6754)
!6774 = !DILocation(line: 763, column: 20, scope: !6754)
!6775 = !DILocation(line: 763, column: 7, scope: !6754)
!6776 = !DILocation(line: 764, column: 21, scope: !6754)
!6777 = !DILocation(line: 764, column: 32, scope: !6754)
!6778 = !DILocation(line: 764, column: 2, scope: !6754)
!6779 = !DILocation(line: 764, column: 8, scope: !6754)
!6780 = !DILocation(line: 764, column: 19, scope: !6754)
!6781 = !DILocation(line: 765, column: 26, scope: !6754)
!6782 = !DILocation(line: 765, column: 37, scope: !6754)
!6783 = !DILocation(line: 765, column: 2, scope: !6754)
!6784 = !DILocation(line: 765, column: 8, scope: !6754)
!6785 = !DILocation(line: 765, column: 24, scope: !6754)
!6786 = !DILocation(line: 766, column: 14, scope: !6754)
!6787 = !DILocation(line: 766, column: 25, scope: !6754)
!6788 = !DILocation(line: 766, column: 2, scope: !6754)
!6789 = !DILocation(line: 766, column: 8, scope: !6754)
!6790 = !DILocation(line: 766, column: 12, scope: !6754)
!6791 = !DILocation(line: 767, column: 14, scope: !6754)
!6792 = !DILocation(line: 767, column: 2, scope: !6754)
!6793 = !DILocation(line: 767, column: 8, scope: !6754)
!6794 = !DILocation(line: 767, column: 12, scope: !6754)
!6795 = !DILocation(line: 769, column: 23, scope: !6754)
!6796 = !DILocation(line: 769, column: 2, scope: !6754)
!6797 = !DILocation(line: 769, column: 8, scope: !6754)
!6798 = !DILocation(line: 769, column: 16, scope: !6754)
!6799 = !DILocation(line: 769, column: 21, scope: !6754)
!6800 = !DILocation(line: 770, column: 31, scope: !6754)
!6801 = !DILocation(line: 770, column: 42, scope: !6754)
!6802 = !DILocation(line: 770, column: 29, scope: !6754)
!6803 = !DILocation(line: 770, column: 9, scope: !6754)
!6804 = !DILocation(line: 770, column: 7, scope: !6754)
!6805 = !DILocation(line: 771, column: 7, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 771, column: 6)
!6807 = !DILocation(line: 771, column: 6, scope: !6754)
!6808 = !DILocation(line: 772, column: 10, scope: !6806)
!6809 = !DILocation(line: 772, column: 16, scope: !6806)
!6810 = !DILocation(line: 772, column: 24, scope: !6806)
!6811 = !DILocation(line: 772, column: 3, scope: !6806)
!6812 = !DILocation(line: 772, column: 37, scope: !6806)
!6813 = !DILocation(line: 774, column: 10, scope: !6806)
!6814 = !DILocation(line: 774, column: 16, scope: !6806)
!6815 = !DILocation(line: 774, column: 24, scope: !6806)
!6816 = !DILocation(line: 774, column: 3, scope: !6806)
!6817 = !DILocation(line: 774, column: 34, scope: !6806)
!6818 = !DILocation(line: 774, column: 46, scope: !6806)
!6819 = !DILocation(line: 776, column: 23, scope: !6754)
!6820 = !DILocation(line: 776, column: 2, scope: !6754)
!6821 = !DILocation(line: 776, column: 8, scope: !6754)
!6822 = !DILocation(line: 776, column: 16, scope: !6754)
!6823 = !DILocation(line: 776, column: 21, scope: !6754)
!6824 = !DILocation(line: 777, column: 9, scope: !6754)
!6825 = !DILocation(line: 777, column: 15, scope: !6754)
!6826 = !DILocation(line: 777, column: 23, scope: !6754)
!6827 = !DILocation(line: 777, column: 2, scope: !6754)
!6828 = !DILocation(line: 777, column: 33, scope: !6754)
!6829 = !DILocation(line: 777, column: 45, scope: !6754)
!6830 = !DILocation(line: 779, column: 9, scope: !6754)
!6831 = !DILocation(line: 779, column: 20, scope: !6754)
!6832 = !DILocation(line: 779, column: 28, scope: !6754)
!6833 = !DILocation(line: 779, column: 2, scope: !6754)
!6834 = distinct !DISubprogram(name: "_generic_set_opp_regulator", scope: !3, file: !3, line: 667, type: !6835, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!6835 = !DISubroutineType(types: !6836)
!6836 = !{!188, !221, !1739, !197, !197, !200, !200}
!6837 = !DILocalVariable(name: "opp_table", arg: 1, scope: !6834, file: !3, line: 667, type: !221)
!6838 = !DILocation(line: 667, column: 57, scope: !6834)
!6839 = !DILocalVariable(name: "dev", arg: 2, scope: !6834, file: !3, line: 668, type: !1739)
!6840 = !DILocation(line: 668, column: 26, scope: !6834)
!6841 = !DILocalVariable(name: "old_freq", arg: 3, scope: !6834, file: !3, line: 669, type: !197)
!6842 = !DILocation(line: 669, column: 25, scope: !6834)
!6843 = !DILocalVariable(name: "freq", arg: 4, scope: !6834, file: !3, line: 670, type: !197)
!6844 = !DILocation(line: 670, column: 25, scope: !6834)
!6845 = !DILocalVariable(name: "old_supply", arg: 5, scope: !6834, file: !3, line: 671, type: !200)
!6846 = !DILocation(line: 671, column: 37, scope: !6834)
!6847 = !DILocalVariable(name: "new_supply", arg: 6, scope: !6834, file: !3, line: 672, type: !200)
!6848 = !DILocation(line: 672, column: 37, scope: !6834)
!6849 = !DILocalVariable(name: "reg", scope: !6834, file: !3, line: 674, type: !4935)
!6850 = !DILocation(line: 674, column: 20, scope: !6834)
!6851 = !DILocation(line: 674, column: 26, scope: !6834)
!6852 = !DILocation(line: 674, column: 37, scope: !6834)
!6853 = !DILocalVariable(name: "ret", scope: !6834, file: !3, line: 675, type: !188)
!6854 = !DILocation(line: 675, column: 6, scope: !6834)
!6855 = !DILocalVariable(name: "__ret_warn_on", scope: !6856, file: !3, line: 678, type: !188)
!6856 = distinct !DILexicalBlock(scope: !6857, file: !3, line: 678, column: 6)
!6857 = distinct !DILexicalBlock(scope: !6834, file: !3, line: 678, column: 6)
!6858 = !DILocation(line: 678, column: 6, scope: !6856)
!6859 = !DILocation(line: 678, column: 6, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 678, column: 6)
!6861 = !DILocation(line: 678, column: 6, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 678, column: 6)
!6863 = !DILocation(line: 678, column: 6, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 678, column: 6)
!6865 = !DILocation(line: 678, column: 6, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 678, column: 6)
!6867 = !{i32 -2140692737, i32 -2140692708, i32 -2140692662, i32 -2140692604, i32 -2140692550, i32 -2140692496, i32 -2140692441, i32 -2140692410}
!6868 = !DILocation(line: 678, column: 6, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 678, column: 6)
!6870 = !{i32 -2140692010, i32 -2140692003, i32 -2140691951, i32 -2140691920, i32 -2140691890}
!6871 = !DILocation(line: 678, column: 6, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6862, file: !3, line: 678, column: 6)
!6873 = !DILocation(line: 678, column: 6, scope: !6857)
!6874 = !DILocation(line: 678, column: 6, scope: !6834)
!6875 = !DILocation(line: 679, column: 3, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6857, file: !3, line: 678, column: 47)
!6877 = !DILocation(line: 680, column: 3, scope: !6876)
!6878 = !DILocation(line: 684, column: 6, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6834, file: !3, line: 684, column: 6)
!6880 = !DILocation(line: 684, column: 14, scope: !6879)
!6881 = !DILocation(line: 684, column: 11, scope: !6879)
!6882 = !DILocation(line: 684, column: 6, scope: !6834)
!6883 = !DILocation(line: 685, column: 26, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6879, file: !3, line: 684, column: 24)
!6885 = !DILocation(line: 685, column: 31, scope: !6884)
!6886 = !DILocation(line: 685, column: 36, scope: !6884)
!6887 = !DILocation(line: 685, column: 9, scope: !6884)
!6888 = !DILocation(line: 685, column: 7, scope: !6884)
!6889 = !DILocation(line: 686, column: 7, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 686, column: 7)
!6891 = !DILocation(line: 686, column: 7, scope: !6884)
!6892 = !DILocation(line: 687, column: 4, scope: !6890)
!6893 = !DILocation(line: 688, column: 2, scope: !6884)
!6894 = !DILocation(line: 691, column: 34, scope: !6834)
!6895 = !DILocation(line: 691, column: 39, scope: !6834)
!6896 = !DILocation(line: 691, column: 50, scope: !6834)
!6897 = !DILocation(line: 691, column: 55, scope: !6834)
!6898 = !DILocation(line: 691, column: 8, scope: !6834)
!6899 = !DILocation(line: 691, column: 6, scope: !6834)
!6900 = !DILocation(line: 692, column: 6, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6834, file: !3, line: 692, column: 6)
!6902 = !DILocation(line: 692, column: 6, scope: !6834)
!6903 = !DILocation(line: 693, column: 3, scope: !6901)
!6904 = !DILocation(line: 696, column: 6, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6834, file: !3, line: 696, column: 6)
!6906 = !DILocation(line: 696, column: 13, scope: !6905)
!6907 = !DILocation(line: 696, column: 11, scope: !6905)
!6908 = !DILocation(line: 696, column: 6, scope: !6834)
!6909 = !DILocation(line: 697, column: 26, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 696, column: 23)
!6911 = !DILocation(line: 697, column: 31, scope: !6910)
!6912 = !DILocation(line: 697, column: 36, scope: !6910)
!6913 = !DILocation(line: 697, column: 9, scope: !6910)
!6914 = !DILocation(line: 697, column: 7, scope: !6910)
!6915 = !DILocation(line: 698, column: 7, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 698, column: 7)
!6917 = !DILocation(line: 698, column: 7, scope: !6910)
!6918 = !DILocation(line: 699, column: 4, scope: !6916)
!6919 = !DILocation(line: 700, column: 2, scope: !6910)
!6920 = !DILocation(line: 706, column: 6, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6834, file: !3, line: 706, column: 6)
!6922 = !DILocation(line: 706, column: 6, scope: !6834)
!6923 = !DILocation(line: 707, column: 26, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6921, file: !3, line: 706, column: 37)
!6925 = !DILocation(line: 707, column: 9, scope: !6924)
!6926 = !DILocation(line: 707, column: 7, scope: !6924)
!6927 = !DILocation(line: 708, column: 7, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 708, column: 7)
!6929 = !DILocation(line: 708, column: 11, scope: !6928)
!6930 = !DILocation(line: 708, column: 7, scope: !6924)
!6931 = !DILocation(line: 709, column: 4, scope: !6928)
!6932 = !DILocation(line: 710, column: 2, scope: !6924)
!6933 = !DILocation(line: 712, column: 2, scope: !6834)
!6934 = !DILabel(scope: !6834, name: "restore_freq", file: !3, line: 714)
!6935 = !DILocation(line: 714, column: 1, scope: !6834)
!6936 = !DILocation(line: 715, column: 32, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6834, file: !3, line: 715, column: 6)
!6938 = !DILocation(line: 715, column: 37, scope: !6937)
!6939 = !DILocation(line: 715, column: 48, scope: !6937)
!6940 = !DILocation(line: 715, column: 53, scope: !6937)
!6941 = !DILocation(line: 715, column: 6, scope: !6937)
!6942 = !DILocation(line: 715, column: 6, scope: !6834)
!6943 = !DILocation(line: 716, column: 3, scope: !6937)
!6944 = !DILocation(line: 715, column: 61, scope: !6937)
!6945 = !DILabel(scope: !6834, name: "restore_voltage", file: !3, line: 718)
!6946 = !DILocation(line: 718, column: 1, scope: !6834)
!6947 = !DILocation(line: 720, column: 6, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6834, file: !3, line: 720, column: 6)
!6949 = !DILocation(line: 720, column: 6, scope: !6834)
!6950 = !DILocation(line: 721, column: 20, scope: !6948)
!6951 = !DILocation(line: 721, column: 25, scope: !6948)
!6952 = !DILocation(line: 721, column: 30, scope: !6948)
!6953 = !DILocation(line: 721, column: 3, scope: !6948)
!6954 = !DILocation(line: 723, column: 9, scope: !6834)
!6955 = !DILocation(line: 723, column: 2, scope: !6834)
!6956 = !DILocation(line: 724, column: 1, scope: !6834)
!6957 = distinct !DISubprogram(name: "dev_pm_opp_put", scope: !3, file: !3, line: 1266, type: !5876, scopeLine: 1267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!6958 = !DILocalVariable(name: "opp", arg: 1, scope: !6957, file: !3, line: 1266, type: !166)
!6959 = !DILocation(line: 1266, column: 40, scope: !6957)
!6960 = !DILocation(line: 1268, column: 18, scope: !6957)
!6961 = !DILocation(line: 1268, column: 23, scope: !6957)
!6962 = !DILocation(line: 1269, column: 11, scope: !6957)
!6963 = !DILocation(line: 1269, column: 16, scope: !6957)
!6964 = !DILocation(line: 1269, column: 27, scope: !6957)
!6965 = !DILocation(line: 1268, column: 2, scope: !6957)
!6966 = !DILocation(line: 1270, column: 1, scope: !6957)
!6967 = distinct !DISubprogram(name: "_add_opp_dev", scope: !3, file: !3, line: 1059, type: !6968, scopeLine: 1061, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!6968 = !DISubroutineType(types: !6969)
!6969 = !{!4967, !326, !221}
!6970 = !DILocalVariable(name: "dev", arg: 1, scope: !6967, file: !3, line: 1059, type: !326)
!6971 = !DILocation(line: 1059, column: 54, scope: !6967)
!6972 = !DILocalVariable(name: "opp_table", arg: 2, scope: !6967, file: !3, line: 1060, type: !221)
!6973 = !DILocation(line: 1060, column: 23, scope: !6967)
!6974 = !DILocalVariable(name: "opp_dev", scope: !6967, file: !3, line: 1062, type: !4967)
!6975 = !DILocation(line: 1062, column: 21, scope: !6967)
!6976 = !DILocation(line: 1064, column: 14, scope: !6967)
!6977 = !DILocation(line: 1064, column: 25, scope: !6967)
!6978 = !DILocation(line: 1064, column: 2, scope: !6967)
!6979 = !DILocation(line: 1065, column: 34, scope: !6967)
!6980 = !DILocation(line: 1065, column: 39, scope: !6967)
!6981 = !DILocation(line: 1065, column: 12, scope: !6967)
!6982 = !DILocation(line: 1065, column: 10, scope: !6967)
!6983 = !DILocation(line: 1066, column: 16, scope: !6967)
!6984 = !DILocation(line: 1066, column: 27, scope: !6967)
!6985 = !DILocation(line: 1066, column: 2, scope: !6967)
!6986 = !DILocation(line: 1068, column: 9, scope: !6967)
!6987 = !DILocation(line: 1068, column: 2, scope: !6967)
!6988 = distinct !DISubprogram(name: "_add_opp_dev_unlocked", scope: !3, file: !3, line: 1039, type: !6968, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!6989 = !DILocalVariable(name: "dev", arg: 1, scope: !6988, file: !3, line: 1039, type: !326)
!6990 = !DILocation(line: 1039, column: 70, scope: !6988)
!6991 = !DILocalVariable(name: "opp_table", arg: 2, scope: !6988, file: !3, line: 1040, type: !221)
!6992 = !DILocation(line: 1040, column: 25, scope: !6988)
!6993 = !DILocalVariable(name: "opp_dev", scope: !6988, file: !3, line: 1042, type: !4967)
!6994 = !DILocation(line: 1042, column: 21, scope: !6988)
!6995 = !DILocation(line: 1044, column: 12, scope: !6988)
!6996 = !DILocation(line: 1044, column: 10, scope: !6988)
!6997 = !DILocation(line: 1045, column: 7, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 1045, column: 6)
!6999 = !DILocation(line: 1045, column: 6, scope: !6988)
!7000 = !DILocation(line: 1046, column: 3, scope: !6998)
!7001 = !DILocation(line: 1049, column: 17, scope: !6988)
!7002 = !DILocation(line: 1049, column: 2, scope: !6988)
!7003 = !DILocation(line: 1049, column: 11, scope: !6988)
!7004 = !DILocation(line: 1049, column: 15, scope: !6988)
!7005 = !DILocation(line: 1051, column: 12, scope: !6988)
!7006 = !DILocation(line: 1051, column: 21, scope: !6988)
!7007 = !DILocation(line: 1051, column: 28, scope: !6988)
!7008 = !DILocation(line: 1051, column: 39, scope: !6988)
!7009 = !DILocation(line: 1051, column: 2, scope: !6988)
!7010 = !DILocation(line: 1054, column: 21, scope: !6988)
!7011 = !DILocation(line: 1054, column: 30, scope: !6988)
!7012 = !DILocation(line: 1054, column: 2, scope: !6988)
!7013 = !DILocation(line: 1056, column: 9, scope: !6988)
!7014 = !DILocation(line: 1056, column: 2, scope: !6988)
!7015 = !DILocation(line: 1057, column: 1, scope: !6988)
!7016 = distinct !DISubprogram(name: "_get_opp_table_kref", scope: !3, file: !3, line: 1133, type: !5184, scopeLine: 1134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7017 = !DILocalVariable(name: "opp_table", arg: 1, scope: !7016, file: !3, line: 1133, type: !221)
!7018 = !DILocation(line: 1133, column: 44, scope: !7016)
!7019 = !DILocation(line: 1135, column: 12, scope: !7016)
!7020 = !DILocation(line: 1135, column: 23, scope: !7016)
!7021 = !DILocation(line: 1135, column: 2, scope: !7016)
!7022 = !DILocation(line: 1136, column: 1, scope: !7016)
!7023 = distinct !DISubprogram(name: "kref_get", scope: !177, file: !177, line: 43, type: !7024, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7024 = !DISubroutineType(types: !7025)
!7025 = !{null, !7026}
!7026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!7027 = !DILocalVariable(name: "kref", arg: 1, scope: !7023, file: !177, line: 43, type: !7026)
!7028 = !DILocation(line: 43, column: 42, scope: !7023)
!7029 = !DILocation(line: 45, column: 16, scope: !7023)
!7030 = !DILocation(line: 45, column: 22, scope: !7023)
!7031 = !DILocation(line: 45, column: 2, scope: !7023)
!7032 = !DILocation(line: 46, column: 1, scope: !7023)
!7033 = distinct !DISubprogram(name: "dev_pm_opp_get_opp_table", scope: !3, file: !3, line: 1166, type: !4996, scopeLine: 1167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7034 = !DILocalVariable(name: "dev", arg: 1, scope: !7033, file: !3, line: 1166, type: !1739)
!7035 = !DILocation(line: 1166, column: 59, scope: !7033)
!7036 = !DILocation(line: 1168, column: 28, scope: !7033)
!7037 = !DILocation(line: 1168, column: 9, scope: !7033)
!7038 = !DILocation(line: 1168, column: 2, scope: !7033)
!7039 = distinct !DISubprogram(name: "_opp_get_opp_table", scope: !3, file: !3, line: 1138, type: !4984, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7040 = !DILocalVariable(name: "dev", arg: 1, scope: !7039, file: !3, line: 1138, type: !1739)
!7041 = !DILocation(line: 1138, column: 60, scope: !7039)
!7042 = !DILocalVariable(name: "index", arg: 2, scope: !7039, file: !3, line: 1138, type: !188)
!7043 = !DILocation(line: 1138, column: 69, scope: !7039)
!7044 = !DILocalVariable(name: "opp_table", scope: !7039, file: !3, line: 1140, type: !221)
!7045 = !DILocation(line: 1140, column: 20, scope: !7039)
!7046 = !DILocation(line: 1143, column: 2, scope: !7039)
!7047 = !DILocation(line: 1145, column: 39, scope: !7039)
!7048 = !DILocation(line: 1145, column: 14, scope: !7039)
!7049 = !DILocation(line: 1145, column: 12, scope: !7039)
!7050 = !DILocation(line: 1146, column: 14, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7039, file: !3, line: 1146, column: 6)
!7052 = !DILocation(line: 1146, column: 7, scope: !7051)
!7053 = !DILocation(line: 1146, column: 6, scope: !7039)
!7054 = !DILocation(line: 1147, column: 3, scope: !7051)
!7055 = !DILocation(line: 1149, column: 27, scope: !7039)
!7056 = !DILocation(line: 1149, column: 32, scope: !7039)
!7057 = !DILocation(line: 1149, column: 14, scope: !7039)
!7058 = !DILocation(line: 1149, column: 12, scope: !7039)
!7059 = !DILocation(line: 1150, column: 6, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7039, file: !3, line: 1150, column: 6)
!7061 = !DILocation(line: 1150, column: 6, scope: !7039)
!7062 = !DILocation(line: 1151, column: 30, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7064, file: !3, line: 1151, column: 7)
!7064 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 1150, column: 17)
!7065 = !DILocation(line: 1151, column: 35, scope: !7063)
!7066 = !DILocation(line: 1151, column: 8, scope: !7063)
!7067 = !DILocation(line: 1151, column: 7, scope: !7064)
!7068 = !DILocation(line: 1152, column: 29, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7063, file: !3, line: 1151, column: 47)
!7070 = !DILocation(line: 1152, column: 4, scope: !7069)
!7071 = !DILocation(line: 1153, column: 16, scope: !7069)
!7072 = !DILocation(line: 1153, column: 14, scope: !7069)
!7073 = !DILocation(line: 1154, column: 3, scope: !7069)
!7074 = !DILocation(line: 1155, column: 3, scope: !7064)
!7075 = !DILocation(line: 1158, column: 34, scope: !7039)
!7076 = !DILocation(line: 1158, column: 39, scope: !7039)
!7077 = !DILocation(line: 1158, column: 14, scope: !7039)
!7078 = !DILocation(line: 1158, column: 12, scope: !7039)
!7079 = !DILocation(line: 1158, column: 2, scope: !7039)
!7080 = !DILabel(scope: !7039, name: "unlock", file: !3, line: 1160)
!7081 = !DILocation(line: 1160, column: 1, scope: !7039)
!7082 = !DILocation(line: 1161, column: 2, scope: !7039)
!7083 = !DILocation(line: 1163, column: 9, scope: !7039)
!7084 = !DILocation(line: 1163, column: 2, scope: !7039)
!7085 = distinct !DISubprogram(name: "dev_pm_opp_get_opp_table_indexed", scope: !3, file: !3, line: 1172, type: !4984, scopeLine: 1174, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7086 = !DILocalVariable(name: "dev", arg: 1, scope: !7085, file: !3, line: 1172, type: !1739)
!7087 = !DILocation(line: 1172, column: 67, scope: !7085)
!7088 = !DILocalVariable(name: "index", arg: 2, scope: !7085, file: !3, line: 1173, type: !188)
!7089 = !DILocation(line: 1173, column: 14, scope: !7085)
!7090 = !DILocation(line: 1175, column: 28, scope: !7085)
!7091 = !DILocation(line: 1175, column: 33, scope: !7085)
!7092 = !DILocation(line: 1175, column: 9, scope: !7085)
!7093 = !DILocation(line: 1175, column: 2, scope: !7085)
!7094 = distinct !DISubprogram(name: "kref_put_mutex", scope: !177, file: !177, line: 71, type: !7095, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7095 = !DISubroutineType(types: !7096)
!7096 = !{!188, !7026, !7097, !7098}
!7097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7024, size: 64)
!7098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!7099 = !DILocalVariable(name: "kref", arg: 1, scope: !7094, file: !177, line: 71, type: !7026)
!7100 = !DILocation(line: 71, column: 47, scope: !7094)
!7101 = !DILocalVariable(name: "release", arg: 2, scope: !7094, file: !177, line: 72, type: !7097)
!7102 = !DILocation(line: 72, column: 13, scope: !7094)
!7103 = !DILocalVariable(name: "lock", arg: 3, scope: !7094, file: !177, line: 73, type: !7098)
!7104 = !DILocation(line: 73, column: 20, scope: !7094)
!7105 = !DILocation(line: 75, column: 35, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7094, file: !177, line: 75, column: 6)
!7107 = !DILocation(line: 75, column: 41, scope: !7106)
!7108 = !DILocation(line: 75, column: 51, scope: !7106)
!7109 = !DILocation(line: 75, column: 6, scope: !7106)
!7110 = !DILocation(line: 75, column: 6, scope: !7094)
!7111 = !DILocation(line: 76, column: 3, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7106, file: !177, line: 75, column: 58)
!7113 = !DILocation(line: 76, column: 11, scope: !7112)
!7114 = !DILocation(line: 77, column: 3, scope: !7112)
!7115 = !DILocation(line: 79, column: 2, scope: !7094)
!7116 = !DILocation(line: 80, column: 1, scope: !7094)
!7117 = distinct !DISubprogram(name: "_opp_table_kref_release", scope: !3, file: !3, line: 1178, type: !7024, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7118 = !DILocalVariable(name: "kref", arg: 1, scope: !7117, file: !3, line: 1178, type: !7026)
!7119 = !DILocation(line: 1178, column: 50, scope: !7117)
!7120 = !DILocalVariable(name: "opp_table", scope: !7117, file: !3, line: 1180, type: !221)
!7121 = !DILocation(line: 1180, column: 20, scope: !7117)
!7122 = !DILocalVariable(name: "__mptr", scope: !7123, file: !3, line: 1180, type: !165)
!7123 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 1180, column: 32)
!7124 = !DILocation(line: 1180, column: 32, scope: !7123)
!7125 = !DILocation(line: 1180, column: 32, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 1180, column: 32)
!7127 = !DILocalVariable(name: "opp_dev", scope: !7117, file: !3, line: 1181, type: !4967)
!7128 = !DILocation(line: 1181, column: 21, scope: !7117)
!7129 = !DILocalVariable(name: "temp", scope: !7117, file: !3, line: 1181, type: !4967)
!7130 = !DILocation(line: 1181, column: 31, scope: !7117)
!7131 = !DILocalVariable(name: "i", scope: !7117, file: !3, line: 1182, type: !188)
!7132 = !DILocation(line: 1182, column: 6, scope: !7117)
!7133 = !DILocation(line: 1185, column: 12, scope: !7117)
!7134 = !DILocation(line: 1185, column: 23, scope: !7117)
!7135 = !DILocation(line: 1185, column: 2, scope: !7117)
!7136 = !DILocation(line: 1186, column: 2, scope: !7117)
!7137 = !DILocation(line: 1188, column: 22, scope: !7117)
!7138 = !DILocation(line: 1188, column: 2, scope: !7117)
!7139 = !DILocation(line: 1191, column: 14, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 1191, column: 6)
!7141 = !DILocation(line: 1191, column: 25, scope: !7140)
!7142 = !DILocation(line: 1191, column: 7, scope: !7140)
!7143 = !DILocation(line: 1191, column: 6, scope: !7117)
!7144 = !DILocation(line: 1192, column: 11, scope: !7140)
!7145 = !DILocation(line: 1192, column: 22, scope: !7140)
!7146 = !DILocation(line: 1192, column: 3, scope: !7140)
!7147 = !DILocation(line: 1194, column: 6, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 1194, column: 6)
!7149 = !DILocation(line: 1194, column: 17, scope: !7148)
!7150 = !DILocation(line: 1194, column: 6, scope: !7117)
!7151 = !DILocation(line: 1195, column: 10, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 1195, column: 3)
!7153 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 1194, column: 24)
!7154 = !DILocation(line: 1195, column: 8, scope: !7152)
!7155 = !DILocation(line: 1195, column: 15, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 1195, column: 3)
!7157 = !DILocation(line: 1195, column: 19, scope: !7156)
!7158 = !DILocation(line: 1195, column: 30, scope: !7156)
!7159 = !DILocation(line: 1195, column: 17, scope: !7156)
!7160 = !DILocation(line: 1195, column: 3, scope: !7152)
!7161 = !DILocation(line: 1196, column: 12, scope: !7156)
!7162 = !DILocation(line: 1196, column: 23, scope: !7156)
!7163 = !DILocation(line: 1196, column: 29, scope: !7156)
!7164 = !DILocation(line: 1196, column: 4, scope: !7156)
!7165 = !DILocation(line: 1195, column: 43, scope: !7156)
!7166 = !DILocation(line: 1195, column: 3, scope: !7156)
!7167 = distinct !{!7167, !7160, !7168}
!7168 = !DILocation(line: 1196, column: 31, scope: !7152)
!7169 = !DILocation(line: 1197, column: 9, scope: !7153)
!7170 = !DILocation(line: 1197, column: 20, scope: !7153)
!7171 = !DILocation(line: 1197, column: 3, scope: !7153)
!7172 = !DILocation(line: 1198, column: 2, scope: !7153)
!7173 = !DILocalVariable(name: "__ret_warn_on", scope: !7174, file: !3, line: 1200, type: !188)
!7174 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 1200, column: 2)
!7175 = !DILocation(line: 1200, column: 2, scope: !7174)
!7176 = !DILocation(line: 1200, column: 2, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 1200, column: 2)
!7178 = !DILocation(line: 1200, column: 2, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 1200, column: 2)
!7180 = !DILocation(line: 1200, column: 2, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 1200, column: 2)
!7182 = !DILocation(line: 1200, column: 2, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 1200, column: 2)
!7184 = !{i32 -2140685785, i32 -2140685756, i32 -2140685710, i32 -2140685652, i32 -2140685598, i32 -2140685544, i32 -2140685489, i32 -2140685458}
!7185 = !DILocation(line: 1200, column: 2, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 1200, column: 2)
!7187 = !{i32 -2140685057, i32 -2140685050, i32 -2140684998, i32 -2140684967, i32 -2140684937}
!7188 = !DILocation(line: 1200, column: 2, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 1200, column: 2)
!7190 = !DILocalVariable(name: "__mptr", scope: !7191, file: !3, line: 1202, type: !165)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 1202, column: 2)
!7192 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 1202, column: 2)
!7193 = !DILocation(line: 1202, column: 2, scope: !7191)
!7194 = !DILocation(line: 1202, column: 2, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7191, file: !3, line: 1202, column: 2)
!7196 = !DILocation(line: 1202, column: 2, scope: !7192)
!7197 = !DILocalVariable(name: "__mptr", scope: !7198, file: !3, line: 1202, type: !165)
!7198 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 1202, column: 2)
!7199 = !DILocation(line: 1202, column: 2, scope: !7198)
!7200 = !DILocation(line: 1202, column: 2, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 1202, column: 2)
!7202 = !DILocation(line: 1202, column: 2, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 1202, column: 2)
!7204 = !DILocation(line: 1207, column: 7, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 1207, column: 7)
!7206 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 1202, column: 70)
!7207 = !DILocation(line: 1207, column: 18, scope: !7205)
!7208 = !DILocation(line: 1207, column: 7, scope: !7206)
!7209 = !DILocation(line: 1208, column: 57, scope: !7205)
!7210 = !DILocation(line: 1208, column: 66, scope: !7205)
!7211 = !DILocation(line: 1208, column: 4, scope: !7205)
!7212 = !DILocation(line: 1210, column: 19, scope: !7206)
!7213 = !DILocation(line: 1210, column: 28, scope: !7206)
!7214 = !DILocation(line: 1210, column: 3, scope: !7206)
!7215 = !DILocation(line: 1211, column: 2, scope: !7206)
!7216 = !DILocalVariable(name: "__mptr", scope: !7217, file: !3, line: 1202, type: !165)
!7217 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 1202, column: 2)
!7218 = !DILocation(line: 1202, column: 2, scope: !7217)
!7219 = !DILocation(line: 1202, column: 2, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 1202, column: 2)
!7221 = distinct !{!7221, !7196, !7222}
!7222 = !DILocation(line: 1211, column: 2, scope: !7192)
!7223 = !DILocation(line: 1213, column: 17, scope: !7117)
!7224 = !DILocation(line: 1213, column: 28, scope: !7117)
!7225 = !DILocation(line: 1213, column: 2, scope: !7117)
!7226 = !DILocation(line: 1214, column: 17, scope: !7117)
!7227 = !DILocation(line: 1214, column: 28, scope: !7117)
!7228 = !DILocation(line: 1214, column: 2, scope: !7117)
!7229 = !DILocation(line: 1215, column: 8, scope: !7117)
!7230 = !DILocation(line: 1215, column: 2, scope: !7117)
!7231 = !DILocation(line: 1216, column: 1, scope: !7117)
!7232 = distinct !DISubprogram(name: "_opp_free", scope: !3, file: !3, line: 1225, type: !5876, scopeLine: 1226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7233 = !DILocalVariable(name: "opp", arg: 1, scope: !7232, file: !3, line: 1225, type: !166)
!7234 = !DILocation(line: 1225, column: 35, scope: !7232)
!7235 = !DILocation(line: 1227, column: 8, scope: !7232)
!7236 = !DILocation(line: 1227, column: 2, scope: !7232)
!7237 = !DILocation(line: 1228, column: 1, scope: !7232)
!7238 = distinct !DISubprogram(name: "_opp_kref_release_locked", scope: !3, file: !3, line: 1252, type: !7024, scopeLine: 1253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7239 = !DILocalVariable(name: "kref", arg: 1, scope: !7238, file: !3, line: 1252, type: !7026)
!7240 = !DILocation(line: 1252, column: 51, scope: !7238)
!7241 = !DILocalVariable(name: "opp", scope: !7238, file: !3, line: 1254, type: !166)
!7242 = !DILocation(line: 1254, column: 21, scope: !7238)
!7243 = !DILocalVariable(name: "__mptr", scope: !7244, file: !3, line: 1254, type: !165)
!7244 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1254, column: 27)
!7245 = !DILocation(line: 1254, column: 27, scope: !7244)
!7246 = !DILocation(line: 1254, column: 27, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7244, file: !3, line: 1254, column: 27)
!7248 = !DILocalVariable(name: "opp_table", scope: !7238, file: !3, line: 1255, type: !221)
!7249 = !DILocation(line: 1255, column: 20, scope: !7238)
!7250 = !DILocation(line: 1255, column: 32, scope: !7238)
!7251 = !DILocation(line: 1255, column: 37, scope: !7238)
!7252 = !DILocation(line: 1257, column: 20, scope: !7238)
!7253 = !DILocation(line: 1257, column: 25, scope: !7238)
!7254 = !DILocation(line: 1257, column: 2, scope: !7238)
!7255 = !DILocation(line: 1258, column: 16, scope: !7238)
!7256 = !DILocation(line: 1258, column: 27, scope: !7238)
!7257 = !DILocation(line: 1258, column: 2, scope: !7238)
!7258 = !DILocation(line: 1259, column: 1, scope: !7238)
!7259 = distinct !DISubprogram(name: "dev_pm_opp_remove", scope: !3, file: !3, line: 1285, type: !7260, scopeLine: 1286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7260 = !DISubroutineType(types: !7261)
!7261 = !{null, !1739, !197}
!7262 = !DILocalVariable(name: "dev", arg: 1, scope: !7259, file: !3, line: 1285, type: !1739)
!7263 = !DILocation(line: 1285, column: 39, scope: !7259)
!7264 = !DILocalVariable(name: "freq", arg: 2, scope: !7259, file: !3, line: 1285, type: !197)
!7265 = !DILocation(line: 1285, column: 58, scope: !7259)
!7266 = !DILocalVariable(name: "opp", scope: !7259, file: !3, line: 1287, type: !166)
!7267 = !DILocation(line: 1287, column: 21, scope: !7259)
!7268 = !DILocalVariable(name: "opp_table", scope: !7259, file: !3, line: 1288, type: !221)
!7269 = !DILocation(line: 1288, column: 20, scope: !7259)
!7270 = !DILocalVariable(name: "found", scope: !7259, file: !3, line: 1289, type: !190)
!7271 = !DILocation(line: 1289, column: 7, scope: !7259)
!7272 = !DILocation(line: 1291, column: 30, scope: !7259)
!7273 = !DILocation(line: 1291, column: 14, scope: !7259)
!7274 = !DILocation(line: 1291, column: 12, scope: !7259)
!7275 = !DILocation(line: 1292, column: 13, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 1292, column: 6)
!7277 = !DILocation(line: 1292, column: 6, scope: !7276)
!7278 = !DILocation(line: 1292, column: 6, scope: !7259)
!7279 = !DILocation(line: 1293, column: 3, scope: !7276)
!7280 = !DILocation(line: 1295, column: 14, scope: !7259)
!7281 = !DILocation(line: 1295, column: 25, scope: !7259)
!7282 = !DILocation(line: 1295, column: 2, scope: !7259)
!7283 = !DILocalVariable(name: "__mptr", scope: !7284, file: !3, line: 1297, type: !165)
!7284 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 1297, column: 2)
!7285 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 1297, column: 2)
!7286 = !DILocation(line: 1297, column: 2, scope: !7284)
!7287 = !DILocation(line: 1297, column: 2, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 1297, column: 2)
!7289 = !DILocation(line: 1297, column: 2, scope: !7285)
!7290 = !DILocation(line: 1297, column: 2, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 1297, column: 2)
!7292 = !DILocation(line: 1298, column: 7, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 1298, column: 7)
!7294 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 1297, column: 55)
!7295 = !DILocation(line: 1298, column: 12, scope: !7293)
!7296 = !DILocation(line: 1298, column: 20, scope: !7293)
!7297 = !DILocation(line: 1298, column: 17, scope: !7293)
!7298 = !DILocation(line: 1298, column: 7, scope: !7294)
!7299 = !DILocation(line: 1299, column: 10, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 1298, column: 26)
!7301 = !DILocation(line: 1300, column: 4, scope: !7300)
!7302 = !DILocation(line: 1302, column: 2, scope: !7294)
!7303 = !DILocalVariable(name: "__mptr", scope: !7304, file: !3, line: 1297, type: !165)
!7304 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 1297, column: 2)
!7305 = !DILocation(line: 1297, column: 2, scope: !7304)
!7306 = !DILocation(line: 1297, column: 2, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7304, file: !3, line: 1297, column: 2)
!7308 = distinct !{!7308, !7289, !7309}
!7309 = !DILocation(line: 1302, column: 2, scope: !7285)
!7310 = !DILocation(line: 1304, column: 16, scope: !7259)
!7311 = !DILocation(line: 1304, column: 27, scope: !7259)
!7312 = !DILocation(line: 1304, column: 2, scope: !7259)
!7313 = !DILocation(line: 1306, column: 6, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 1306, column: 6)
!7315 = !DILocation(line: 1306, column: 6, scope: !7259)
!7316 = !DILocation(line: 1307, column: 18, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 1306, column: 13)
!7318 = !DILocation(line: 1307, column: 3, scope: !7317)
!7319 = !DILocation(line: 1310, column: 28, scope: !7317)
!7320 = !DILocation(line: 1310, column: 3, scope: !7317)
!7321 = !DILocation(line: 1311, column: 2, scope: !7317)
!7322 = !DILocation(line: 1312, column: 3, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 1311, column: 9)
!7324 = !DILocation(line: 1317, column: 27, scope: !7259)
!7325 = !DILocation(line: 1317, column: 2, scope: !7259)
!7326 = !DILocation(line: 1318, column: 1, scope: !7259)
!7327 = distinct !DISubprogram(name: "_opp_remove_all_static", scope: !3, file: !3, line: 1321, type: !7328, scopeLine: 1322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7328 = !DISubroutineType(types: !7329)
!7329 = !{!190, !221}
!7330 = !DILocalVariable(name: "opp_table", arg: 1, scope: !7327, file: !3, line: 1321, type: !221)
!7331 = !DILocation(line: 1321, column: 47, scope: !7327)
!7332 = !DILocalVariable(name: "opp", scope: !7327, file: !3, line: 1323, type: !166)
!7333 = !DILocation(line: 1323, column: 21, scope: !7327)
!7334 = !DILocalVariable(name: "tmp", scope: !7327, file: !3, line: 1323, type: !166)
!7335 = !DILocation(line: 1323, column: 27, scope: !7327)
!7336 = !DILocalVariable(name: "ret", scope: !7327, file: !3, line: 1324, type: !190)
!7337 = !DILocation(line: 1324, column: 7, scope: !7327)
!7338 = !DILocation(line: 1326, column: 14, scope: !7327)
!7339 = !DILocation(line: 1326, column: 25, scope: !7327)
!7340 = !DILocation(line: 1326, column: 2, scope: !7327)
!7341 = !DILocation(line: 1328, column: 7, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 1328, column: 6)
!7343 = !DILocation(line: 1328, column: 18, scope: !7342)
!7344 = !DILocation(line: 1328, column: 6, scope: !7327)
!7345 = !DILocation(line: 1329, column: 7, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 1328, column: 38)
!7347 = !DILocation(line: 1330, column: 3, scope: !7346)
!7348 = !DILocation(line: 1333, column: 8, scope: !7349)
!7349 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 1333, column: 6)
!7350 = !DILocation(line: 1333, column: 19, scope: !7349)
!7351 = !DILocation(line: 1333, column: 6, scope: !7349)
!7352 = !DILocation(line: 1333, column: 6, scope: !7327)
!7353 = !DILocation(line: 1334, column: 3, scope: !7349)
!7354 = !DILocalVariable(name: "__mptr", scope: !7355, file: !3, line: 1336, type: !165)
!7355 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 1336, column: 2)
!7356 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 1336, column: 2)
!7357 = !DILocation(line: 1336, column: 2, scope: !7355)
!7358 = !DILocation(line: 1336, column: 2, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 1336, column: 2)
!7360 = !DILocation(line: 1336, column: 2, scope: !7356)
!7361 = !DILocalVariable(name: "__mptr", scope: !7362, file: !3, line: 1336, type: !165)
!7362 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 1336, column: 2)
!7363 = !DILocation(line: 1336, column: 2, scope: !7362)
!7364 = !DILocation(line: 1336, column: 2, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 1336, column: 2)
!7366 = !DILocation(line: 1336, column: 2, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 1336, column: 2)
!7368 = !DILocation(line: 1337, column: 8, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7370, file: !3, line: 1337, column: 7)
!7370 = distinct !DILexicalBlock(scope: !7367, file: !3, line: 1336, column: 65)
!7371 = !DILocation(line: 1337, column: 13, scope: !7369)
!7372 = !DILocation(line: 1337, column: 7, scope: !7370)
!7373 = !DILocation(line: 1338, column: 28, scope: !7369)
!7374 = !DILocation(line: 1338, column: 4, scope: !7369)
!7375 = !DILocation(line: 1339, column: 2, scope: !7370)
!7376 = !DILocalVariable(name: "__mptr", scope: !7377, file: !3, line: 1336, type: !165)
!7377 = distinct !DILexicalBlock(scope: !7367, file: !3, line: 1336, column: 2)
!7378 = !DILocation(line: 1336, column: 2, scope: !7377)
!7379 = !DILocation(line: 1336, column: 2, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7377, file: !3, line: 1336, column: 2)
!7381 = distinct !{!7381, !7360, !7382}
!7382 = !DILocation(line: 1339, column: 2, scope: !7356)
!7383 = !DILabel(scope: !7327, name: "unlock", file: !3, line: 1341)
!7384 = !DILocation(line: 1341, column: 1, scope: !7327)
!7385 = !DILocation(line: 1342, column: 16, scope: !7327)
!7386 = !DILocation(line: 1342, column: 27, scope: !7327)
!7387 = !DILocation(line: 1342, column: 2, scope: !7327)
!7388 = !DILocation(line: 1344, column: 9, scope: !7327)
!7389 = !DILocation(line: 1344, column: 2, scope: !7327)
!7390 = distinct !DISubprogram(name: "dev_pm_opp_put_unlocked", scope: !3, file: !3, line: 1273, type: !5876, scopeLine: 1274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7391 = !DILocalVariable(name: "opp", arg: 1, scope: !7390, file: !3, line: 1273, type: !166)
!7392 = !DILocation(line: 1273, column: 56, scope: !7390)
!7393 = !DILocation(line: 1275, column: 12, scope: !7390)
!7394 = !DILocation(line: 1275, column: 17, scope: !7390)
!7395 = !DILocation(line: 1275, column: 2, scope: !7390)
!7396 = !DILocation(line: 1276, column: 1, scope: !7390)
!7397 = distinct !DISubprogram(name: "dev_pm_opp_remove_all_dynamic", scope: !3, file: !3, line: 1353, type: !4516, scopeLine: 1354, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7398 = !DILocalVariable(name: "dev", arg: 1, scope: !7397, file: !3, line: 1353, type: !1739)
!7399 = !DILocation(line: 1353, column: 51, scope: !7397)
!7400 = !DILocalVariable(name: "opp_table", scope: !7397, file: !3, line: 1355, type: !221)
!7401 = !DILocation(line: 1355, column: 20, scope: !7397)
!7402 = !DILocalVariable(name: "opp", scope: !7397, file: !3, line: 1356, type: !166)
!7403 = !DILocation(line: 1356, column: 21, scope: !7397)
!7404 = !DILocalVariable(name: "temp", scope: !7397, file: !3, line: 1356, type: !166)
!7405 = !DILocation(line: 1356, column: 27, scope: !7397)
!7406 = !DILocalVariable(name: "count", scope: !7397, file: !3, line: 1357, type: !188)
!7407 = !DILocation(line: 1357, column: 6, scope: !7397)
!7408 = !DILocation(line: 1359, column: 30, scope: !7397)
!7409 = !DILocation(line: 1359, column: 14, scope: !7397)
!7410 = !DILocation(line: 1359, column: 12, scope: !7397)
!7411 = !DILocation(line: 1360, column: 13, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 1360, column: 6)
!7413 = !DILocation(line: 1360, column: 6, scope: !7412)
!7414 = !DILocation(line: 1360, column: 6, scope: !7397)
!7415 = !DILocation(line: 1361, column: 3, scope: !7412)
!7416 = !DILocation(line: 1363, column: 14, scope: !7397)
!7417 = !DILocation(line: 1363, column: 25, scope: !7397)
!7418 = !DILocation(line: 1363, column: 2, scope: !7397)
!7419 = !DILocalVariable(name: "__mptr", scope: !7420, file: !3, line: 1364, type: !165)
!7420 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 1364, column: 2)
!7421 = distinct !DILexicalBlock(scope: !7397, file: !3, line: 1364, column: 2)
!7422 = !DILocation(line: 1364, column: 2, scope: !7420)
!7423 = !DILocation(line: 1364, column: 2, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 1364, column: 2)
!7425 = !DILocation(line: 1364, column: 2, scope: !7421)
!7426 = !DILocalVariable(name: "__mptr", scope: !7427, file: !3, line: 1364, type: !165)
!7427 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 1364, column: 2)
!7428 = !DILocation(line: 1364, column: 2, scope: !7427)
!7429 = !DILocation(line: 1364, column: 2, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 1364, column: 2)
!7431 = !DILocation(line: 1364, column: 2, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 1364, column: 2)
!7433 = !DILocation(line: 1365, column: 7, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7435, file: !3, line: 1365, column: 7)
!7435 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 1364, column: 66)
!7436 = !DILocation(line: 1365, column: 12, scope: !7434)
!7437 = !DILocation(line: 1365, column: 7, scope: !7435)
!7438 = !DILocation(line: 1366, column: 28, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7434, file: !3, line: 1365, column: 21)
!7440 = !DILocation(line: 1366, column: 4, scope: !7439)
!7441 = !DILocation(line: 1367, column: 9, scope: !7439)
!7442 = !DILocation(line: 1368, column: 3, scope: !7439)
!7443 = !DILocation(line: 1369, column: 2, scope: !7435)
!7444 = !DILocalVariable(name: "__mptr", scope: !7445, file: !3, line: 1364, type: !165)
!7445 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 1364, column: 2)
!7446 = !DILocation(line: 1364, column: 2, scope: !7445)
!7447 = !DILocation(line: 1364, column: 2, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 1364, column: 2)
!7449 = distinct !{!7449, !7425, !7450}
!7450 = !DILocation(line: 1369, column: 2, scope: !7421)
!7451 = !DILocation(line: 1370, column: 16, scope: !7397)
!7452 = !DILocation(line: 1370, column: 27, scope: !7397)
!7453 = !DILocation(line: 1370, column: 2, scope: !7397)
!7454 = !DILocation(line: 1373, column: 2, scope: !7397)
!7455 = !DILocation(line: 1373, column: 14, scope: !7397)
!7456 = !DILocation(line: 1374, column: 28, scope: !7397)
!7457 = !DILocation(line: 1374, column: 3, scope: !7397)
!7458 = distinct !{!7458, !7454, !7459}
!7459 = !DILocation(line: 1374, column: 37, scope: !7397)
!7460 = !DILocation(line: 1377, column: 27, scope: !7397)
!7461 = !DILocation(line: 1377, column: 2, scope: !7397)
!7462 = !DILocation(line: 1378, column: 1, scope: !7397)
!7463 = distinct !DISubprogram(name: "_opp_allocate", scope: !3, file: !3, line: 1381, type: !7464, scopeLine: 1382, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7464 = !DISubroutineType(types: !7465)
!7465 = !{!166, !221}
!7466 = !DILocalVariable(name: "table", arg: 1, scope: !7463, file: !3, line: 1381, type: !221)
!7467 = !DILocation(line: 1381, column: 52, scope: !7463)
!7468 = !DILocalVariable(name: "opp", scope: !7463, file: !3, line: 1383, type: !166)
!7469 = !DILocation(line: 1383, column: 21, scope: !7463)
!7470 = !DILocalVariable(name: "supply_count", scope: !7463, file: !3, line: 1384, type: !188)
!7471 = !DILocation(line: 1384, column: 6, scope: !7463)
!7472 = !DILocalVariable(name: "supply_size", scope: !7463, file: !3, line: 1384, type: !188)
!7473 = !DILocation(line: 1384, column: 20, scope: !7463)
!7474 = !DILocalVariable(name: "icc_size", scope: !7463, file: !3, line: 1384, type: !188)
!7475 = !DILocation(line: 1384, column: 33, scope: !7463)
!7476 = !DILocation(line: 1387, column: 17, scope: !7463)
!7477 = !DILocation(line: 1387, column: 24, scope: !7463)
!7478 = !DILocation(line: 1387, column: 40, scope: !7463)
!7479 = !DILocation(line: 1387, column: 46, scope: !7463)
!7480 = !DILocation(line: 1387, column: 53, scope: !7463)
!7481 = !DILocation(line: 1387, column: 15, scope: !7463)
!7482 = !DILocation(line: 1388, column: 41, scope: !7463)
!7483 = !DILocation(line: 1388, column: 39, scope: !7463)
!7484 = !DILocation(line: 1388, column: 16, scope: !7463)
!7485 = !DILocation(line: 1388, column: 14, scope: !7463)
!7486 = !DILocation(line: 1389, column: 39, scope: !7463)
!7487 = !DILocation(line: 1389, column: 46, scope: !7463)
!7488 = !DILocation(line: 1389, column: 37, scope: !7463)
!7489 = !DILocation(line: 1389, column: 13, scope: !7463)
!7490 = !DILocation(line: 1389, column: 11, scope: !7463)
!7491 = !DILocation(line: 1392, column: 31, scope: !7463)
!7492 = !DILocation(line: 1392, column: 29, scope: !7463)
!7493 = !DILocation(line: 1392, column: 45, scope: !7463)
!7494 = !DILocation(line: 1392, column: 43, scope: !7463)
!7495 = !DILocation(line: 1392, column: 8, scope: !7463)
!7496 = !DILocation(line: 1392, column: 6, scope: !7463)
!7497 = !DILocation(line: 1394, column: 7, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7463, file: !3, line: 1394, column: 6)
!7499 = !DILocation(line: 1394, column: 6, scope: !7463)
!7500 = !DILocation(line: 1395, column: 3, scope: !7498)
!7501 = !DILocation(line: 1398, column: 47, scope: !7463)
!7502 = !DILocation(line: 1398, column: 51, scope: !7463)
!7503 = !DILocation(line: 1398, column: 18, scope: !7463)
!7504 = !DILocation(line: 1398, column: 2, scope: !7463)
!7505 = !DILocation(line: 1398, column: 7, scope: !7463)
!7506 = !DILocation(line: 1398, column: 16, scope: !7463)
!7507 = !DILocation(line: 1399, column: 6, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7463, file: !3, line: 1399, column: 6)
!7509 = !DILocation(line: 1399, column: 6, scope: !7463)
!7510 = !DILocation(line: 1400, column: 49, scope: !7508)
!7511 = !DILocation(line: 1400, column: 54, scope: !7508)
!7512 = !DILocation(line: 1400, column: 65, scope: !7508)
!7513 = !DILocation(line: 1400, column: 63, scope: !7508)
!7514 = !DILocation(line: 1400, column: 20, scope: !7508)
!7515 = !DILocation(line: 1400, column: 3, scope: !7508)
!7516 = !DILocation(line: 1400, column: 8, scope: !7508)
!7517 = !DILocation(line: 1400, column: 18, scope: !7508)
!7518 = !DILocation(line: 1401, column: 18, scope: !7463)
!7519 = !DILocation(line: 1401, column: 23, scope: !7463)
!7520 = !DILocation(line: 1401, column: 2, scope: !7463)
!7521 = !DILocation(line: 1403, column: 9, scope: !7463)
!7522 = !DILocation(line: 1403, column: 2, scope: !7463)
!7523 = !DILocation(line: 1404, column: 1, scope: !7463)
!7524 = distinct !DISubprogram(name: "kzalloc", scope: !148, file: !148, line: 662, type: !5382, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7525 = !DILocation(line: 445, column: 72, scope: !5374, inlinedAt: !7526)
!7526 = distinct !DILocation(line: 552, column: 10, scope: !5379, inlinedAt: !7527)
!7527 = distinct !DILocation(line: 664, column: 9, scope: !7524)
!7528 = !DILocation(line: 446, column: 9, scope: !5374, inlinedAt: !7526)
!7529 = !DILocation(line: 446, column: 23, scope: !5374, inlinedAt: !7526)
!7530 = !DILocation(line: 448, column: 8, scope: !5374, inlinedAt: !7526)
!7531 = !DILocation(line: 318, column: 67, scope: !5393, inlinedAt: !7532)
!7532 = distinct !DILocation(line: 553, column: 20, scope: !5379, inlinedAt: !7527)
!7533 = !DILocation(line: 346, column: 58, scope: !5399, inlinedAt: !7534)
!7534 = distinct !DILocation(line: 547, column: 11, scope: !5379, inlinedAt: !7527)
!7535 = !DILocation(line: 472, column: 28, scope: !5405, inlinedAt: !7536)
!7536 = distinct !DILocation(line: 481, column: 9, scope: !5410, inlinedAt: !7537)
!7537 = distinct !DILocation(line: 545, column: 11, scope: !5412, inlinedAt: !7527)
!7538 = !DILocation(line: 472, column: 40, scope: !5405, inlinedAt: !7536)
!7539 = !DILocation(line: 472, column: 60, scope: !5405, inlinedAt: !7536)
!7540 = !DILocation(line: 478, column: 51, scope: !5410, inlinedAt: !7537)
!7541 = !DILocation(line: 478, column: 63, scope: !5410, inlinedAt: !7537)
!7542 = !DILocation(line: 480, column: 15, scope: !5410, inlinedAt: !7537)
!7543 = !DILocation(line: 538, column: 45, scope: !5381, inlinedAt: !7527)
!7544 = !DILocation(line: 538, column: 57, scope: !5381, inlinedAt: !7527)
!7545 = !DILocation(line: 542, column: 16, scope: !5379, inlinedAt: !7527)
!7546 = !DILocalVariable(name: "size", arg: 1, scope: !7524, file: !148, line: 662, type: !417)
!7547 = !DILocation(line: 662, column: 36, scope: !7524)
!7548 = !DILocalVariable(name: "flags", arg: 2, scope: !7524, file: !148, line: 662, type: !163)
!7549 = !DILocation(line: 662, column: 48, scope: !7524)
!7550 = !DILocation(line: 664, column: 17, scope: !7524)
!7551 = !DILocation(line: 664, column: 23, scope: !7524)
!7552 = !DILocation(line: 664, column: 29, scope: !7524)
!7553 = !DILocation(line: 540, column: 27, scope: !5380, inlinedAt: !7527)
!7554 = !DILocation(line: 540, column: 6, scope: !5380, inlinedAt: !7527)
!7555 = !DILocation(line: 540, column: 6, scope: !5381, inlinedAt: !7527)
!7556 = !DILocation(line: 544, column: 7, scope: !5412, inlinedAt: !7527)
!7557 = !DILocation(line: 544, column: 12, scope: !5412, inlinedAt: !7527)
!7558 = !DILocation(line: 544, column: 7, scope: !5379, inlinedAt: !7527)
!7559 = !DILocation(line: 545, column: 25, scope: !5412, inlinedAt: !7527)
!7560 = !DILocation(line: 545, column: 31, scope: !5412, inlinedAt: !7527)
!7561 = !DILocation(line: 480, column: 33, scope: !5410, inlinedAt: !7537)
!7562 = !DILocation(line: 480, column: 23, scope: !5410, inlinedAt: !7537)
!7563 = !DILocation(line: 481, column: 29, scope: !5410, inlinedAt: !7537)
!7564 = !DILocation(line: 481, column: 35, scope: !5410, inlinedAt: !7537)
!7565 = !DILocation(line: 481, column: 42, scope: !5410, inlinedAt: !7537)
!7566 = !DILocation(line: 474, column: 23, scope: !5405, inlinedAt: !7536)
!7567 = !DILocation(line: 474, column: 29, scope: !5405, inlinedAt: !7536)
!7568 = !DILocation(line: 474, column: 36, scope: !5405, inlinedAt: !7536)
!7569 = !DILocation(line: 474, column: 9, scope: !5405, inlinedAt: !7536)
!7570 = !DILocation(line: 545, column: 4, scope: !5412, inlinedAt: !7527)
!7571 = !DILocation(line: 547, column: 25, scope: !5379, inlinedAt: !7527)
!7572 = !DILocation(line: 348, column: 7, scope: !5474, inlinedAt: !7534)
!7573 = !DILocation(line: 348, column: 6, scope: !5399, inlinedAt: !7534)
!7574 = !DILocation(line: 349, column: 3, scope: !5474, inlinedAt: !7534)
!7575 = !DILocation(line: 351, column: 6, scope: !5478, inlinedAt: !7534)
!7576 = !DILocation(line: 351, column: 11, scope: !5478, inlinedAt: !7534)
!7577 = !DILocation(line: 351, column: 6, scope: !5399, inlinedAt: !7534)
!7578 = !DILocation(line: 352, column: 3, scope: !5478, inlinedAt: !7534)
!7579 = !DILocation(line: 354, column: 32, scope: !5483, inlinedAt: !7534)
!7580 = !DILocation(line: 354, column: 37, scope: !5483, inlinedAt: !7534)
!7581 = !DILocation(line: 354, column: 42, scope: !5483, inlinedAt: !7534)
!7582 = !DILocation(line: 354, column: 45, scope: !5483, inlinedAt: !7534)
!7583 = !DILocation(line: 354, column: 50, scope: !5483, inlinedAt: !7534)
!7584 = !DILocation(line: 354, column: 6, scope: !5399, inlinedAt: !7534)
!7585 = !DILocation(line: 355, column: 3, scope: !5483, inlinedAt: !7534)
!7586 = !DILocation(line: 356, column: 32, scope: !5491, inlinedAt: !7534)
!7587 = !DILocation(line: 356, column: 37, scope: !5491, inlinedAt: !7534)
!7588 = !DILocation(line: 356, column: 43, scope: !5491, inlinedAt: !7534)
!7589 = !DILocation(line: 356, column: 46, scope: !5491, inlinedAt: !7534)
!7590 = !DILocation(line: 356, column: 51, scope: !5491, inlinedAt: !7534)
!7591 = !DILocation(line: 356, column: 6, scope: !5399, inlinedAt: !7534)
!7592 = !DILocation(line: 357, column: 3, scope: !5491, inlinedAt: !7534)
!7593 = !DILocation(line: 358, column: 6, scope: !5499, inlinedAt: !7534)
!7594 = !DILocation(line: 358, column: 11, scope: !5499, inlinedAt: !7534)
!7595 = !DILocation(line: 358, column: 6, scope: !5399, inlinedAt: !7534)
!7596 = !DILocation(line: 358, column: 26, scope: !5499, inlinedAt: !7534)
!7597 = !DILocation(line: 359, column: 6, scope: !5504, inlinedAt: !7534)
!7598 = !DILocation(line: 359, column: 11, scope: !5504, inlinedAt: !7534)
!7599 = !DILocation(line: 359, column: 6, scope: !5399, inlinedAt: !7534)
!7600 = !DILocation(line: 359, column: 26, scope: !5504, inlinedAt: !7534)
!7601 = !DILocation(line: 360, column: 6, scope: !5509, inlinedAt: !7534)
!7602 = !DILocation(line: 360, column: 11, scope: !5509, inlinedAt: !7534)
!7603 = !DILocation(line: 360, column: 6, scope: !5399, inlinedAt: !7534)
!7604 = !DILocation(line: 360, column: 26, scope: !5509, inlinedAt: !7534)
!7605 = !DILocation(line: 361, column: 6, scope: !5514, inlinedAt: !7534)
!7606 = !DILocation(line: 361, column: 11, scope: !5514, inlinedAt: !7534)
!7607 = !DILocation(line: 361, column: 6, scope: !5399, inlinedAt: !7534)
!7608 = !DILocation(line: 361, column: 26, scope: !5514, inlinedAt: !7534)
!7609 = !DILocation(line: 362, column: 6, scope: !5519, inlinedAt: !7534)
!7610 = !DILocation(line: 362, column: 11, scope: !5519, inlinedAt: !7534)
!7611 = !DILocation(line: 362, column: 6, scope: !5399, inlinedAt: !7534)
!7612 = !DILocation(line: 362, column: 26, scope: !5519, inlinedAt: !7534)
!7613 = !DILocation(line: 363, column: 6, scope: !5524, inlinedAt: !7534)
!7614 = !DILocation(line: 363, column: 11, scope: !5524, inlinedAt: !7534)
!7615 = !DILocation(line: 363, column: 6, scope: !5399, inlinedAt: !7534)
!7616 = !DILocation(line: 363, column: 26, scope: !5524, inlinedAt: !7534)
!7617 = !DILocation(line: 364, column: 6, scope: !5529, inlinedAt: !7534)
!7618 = !DILocation(line: 364, column: 11, scope: !5529, inlinedAt: !7534)
!7619 = !DILocation(line: 364, column: 6, scope: !5399, inlinedAt: !7534)
!7620 = !DILocation(line: 364, column: 26, scope: !5529, inlinedAt: !7534)
!7621 = !DILocation(line: 365, column: 6, scope: !5534, inlinedAt: !7534)
!7622 = !DILocation(line: 365, column: 11, scope: !5534, inlinedAt: !7534)
!7623 = !DILocation(line: 365, column: 6, scope: !5399, inlinedAt: !7534)
!7624 = !DILocation(line: 365, column: 26, scope: !5534, inlinedAt: !7534)
!7625 = !DILocation(line: 366, column: 6, scope: !5539, inlinedAt: !7534)
!7626 = !DILocation(line: 366, column: 11, scope: !5539, inlinedAt: !7534)
!7627 = !DILocation(line: 366, column: 6, scope: !5399, inlinedAt: !7534)
!7628 = !DILocation(line: 366, column: 26, scope: !5539, inlinedAt: !7534)
!7629 = !DILocation(line: 367, column: 6, scope: !5544, inlinedAt: !7534)
!7630 = !DILocation(line: 367, column: 11, scope: !5544, inlinedAt: !7534)
!7631 = !DILocation(line: 367, column: 6, scope: !5399, inlinedAt: !7534)
!7632 = !DILocation(line: 367, column: 26, scope: !5544, inlinedAt: !7534)
!7633 = !DILocation(line: 368, column: 6, scope: !5549, inlinedAt: !7534)
!7634 = !DILocation(line: 368, column: 11, scope: !5549, inlinedAt: !7534)
!7635 = !DILocation(line: 368, column: 6, scope: !5399, inlinedAt: !7534)
!7636 = !DILocation(line: 368, column: 26, scope: !5549, inlinedAt: !7534)
!7637 = !DILocation(line: 369, column: 6, scope: !5554, inlinedAt: !7534)
!7638 = !DILocation(line: 369, column: 11, scope: !5554, inlinedAt: !7534)
!7639 = !DILocation(line: 369, column: 6, scope: !5399, inlinedAt: !7534)
!7640 = !DILocation(line: 369, column: 26, scope: !5554, inlinedAt: !7534)
!7641 = !DILocation(line: 370, column: 6, scope: !5559, inlinedAt: !7534)
!7642 = !DILocation(line: 370, column: 11, scope: !5559, inlinedAt: !7534)
!7643 = !DILocation(line: 370, column: 6, scope: !5399, inlinedAt: !7534)
!7644 = !DILocation(line: 370, column: 26, scope: !5559, inlinedAt: !7534)
!7645 = !DILocation(line: 371, column: 6, scope: !5564, inlinedAt: !7534)
!7646 = !DILocation(line: 371, column: 11, scope: !5564, inlinedAt: !7534)
!7647 = !DILocation(line: 371, column: 6, scope: !5399, inlinedAt: !7534)
!7648 = !DILocation(line: 371, column: 26, scope: !5564, inlinedAt: !7534)
!7649 = !DILocation(line: 372, column: 6, scope: !5569, inlinedAt: !7534)
!7650 = !DILocation(line: 372, column: 11, scope: !5569, inlinedAt: !7534)
!7651 = !DILocation(line: 372, column: 6, scope: !5399, inlinedAt: !7534)
!7652 = !DILocation(line: 372, column: 26, scope: !5569, inlinedAt: !7534)
!7653 = !DILocation(line: 373, column: 6, scope: !5574, inlinedAt: !7534)
!7654 = !DILocation(line: 373, column: 11, scope: !5574, inlinedAt: !7534)
!7655 = !DILocation(line: 373, column: 6, scope: !5399, inlinedAt: !7534)
!7656 = !DILocation(line: 373, column: 26, scope: !5574, inlinedAt: !7534)
!7657 = !DILocation(line: 374, column: 6, scope: !5579, inlinedAt: !7534)
!7658 = !DILocation(line: 374, column: 11, scope: !5579, inlinedAt: !7534)
!7659 = !DILocation(line: 374, column: 6, scope: !5399, inlinedAt: !7534)
!7660 = !DILocation(line: 374, column: 26, scope: !5579, inlinedAt: !7534)
!7661 = !DILocation(line: 375, column: 6, scope: !5584, inlinedAt: !7534)
!7662 = !DILocation(line: 375, column: 11, scope: !5584, inlinedAt: !7534)
!7663 = !DILocation(line: 375, column: 6, scope: !5399, inlinedAt: !7534)
!7664 = !DILocation(line: 375, column: 27, scope: !5584, inlinedAt: !7534)
!7665 = !DILocation(line: 376, column: 6, scope: !5589, inlinedAt: !7534)
!7666 = !DILocation(line: 376, column: 11, scope: !5589, inlinedAt: !7534)
!7667 = !DILocation(line: 376, column: 6, scope: !5399, inlinedAt: !7534)
!7668 = !DILocation(line: 376, column: 32, scope: !5589, inlinedAt: !7534)
!7669 = !DILocation(line: 377, column: 6, scope: !5594, inlinedAt: !7534)
!7670 = !DILocation(line: 377, column: 11, scope: !5594, inlinedAt: !7534)
!7671 = !DILocation(line: 377, column: 6, scope: !5399, inlinedAt: !7534)
!7672 = !DILocation(line: 377, column: 32, scope: !5594, inlinedAt: !7534)
!7673 = !DILocation(line: 378, column: 6, scope: !5599, inlinedAt: !7534)
!7674 = !DILocation(line: 378, column: 11, scope: !5599, inlinedAt: !7534)
!7675 = !DILocation(line: 378, column: 6, scope: !5399, inlinedAt: !7534)
!7676 = !DILocation(line: 378, column: 32, scope: !5599, inlinedAt: !7534)
!7677 = !DILocation(line: 379, column: 6, scope: !5604, inlinedAt: !7534)
!7678 = !DILocation(line: 379, column: 11, scope: !5604, inlinedAt: !7534)
!7679 = !DILocation(line: 379, column: 6, scope: !5399, inlinedAt: !7534)
!7680 = !DILocation(line: 379, column: 33, scope: !5604, inlinedAt: !7534)
!7681 = !DILocation(line: 380, column: 6, scope: !5609, inlinedAt: !7534)
!7682 = !DILocation(line: 380, column: 11, scope: !5609, inlinedAt: !7534)
!7683 = !DILocation(line: 380, column: 6, scope: !5399, inlinedAt: !7534)
!7684 = !DILocation(line: 380, column: 33, scope: !5609, inlinedAt: !7534)
!7685 = !DILocation(line: 381, column: 6, scope: !5614, inlinedAt: !7534)
!7686 = !DILocation(line: 381, column: 11, scope: !5614, inlinedAt: !7534)
!7687 = !DILocation(line: 381, column: 6, scope: !5399, inlinedAt: !7534)
!7688 = !DILocation(line: 381, column: 33, scope: !5614, inlinedAt: !7534)
!7689 = !DILocation(line: 382, column: 2, scope: !5619, inlinedAt: !7534)
!7690 = !DILocation(line: 382, column: 2, scope: !5623, inlinedAt: !7534)
!7691 = !DILocation(line: 382, column: 2, scope: !5624, inlinedAt: !7534)
!7692 = !DILocation(line: 386, column: 1, scope: !5399, inlinedAt: !7534)
!7693 = !DILocation(line: 547, column: 9, scope: !5379, inlinedAt: !7527)
!7694 = !DILocation(line: 549, column: 8, scope: !5630, inlinedAt: !7527)
!7695 = !DILocation(line: 549, column: 7, scope: !5379, inlinedAt: !7527)
!7696 = !DILocation(line: 550, column: 4, scope: !5630, inlinedAt: !7527)
!7697 = !DILocation(line: 553, column: 33, scope: !5379, inlinedAt: !7527)
!7698 = !DILocation(line: 325, column: 6, scope: !5635, inlinedAt: !7532)
!7699 = !DILocation(line: 325, column: 6, scope: !5393, inlinedAt: !7532)
!7700 = !DILocation(line: 326, column: 3, scope: !5635, inlinedAt: !7532)
!7701 = !DILocation(line: 332, column: 9, scope: !5393, inlinedAt: !7532)
!7702 = !DILocation(line: 332, column: 15, scope: !5393, inlinedAt: !7532)
!7703 = !DILocation(line: 332, column: 2, scope: !5393, inlinedAt: !7532)
!7704 = !DILocation(line: 336, column: 1, scope: !5393, inlinedAt: !7532)
!7705 = !DILocation(line: 553, column: 5, scope: !5379, inlinedAt: !7527)
!7706 = !DILocation(line: 553, column: 41, scope: !5379, inlinedAt: !7527)
!7707 = !DILocation(line: 554, column: 5, scope: !5379, inlinedAt: !7527)
!7708 = !DILocation(line: 554, column: 12, scope: !5379, inlinedAt: !7527)
!7709 = !DILocation(line: 448, column: 31, scope: !5374, inlinedAt: !7526)
!7710 = !DILocation(line: 448, column: 34, scope: !5374, inlinedAt: !7526)
!7711 = !DILocation(line: 448, column: 14, scope: !5374, inlinedAt: !7526)
!7712 = !DILocation(line: 450, column: 22, scope: !5374, inlinedAt: !7526)
!7713 = !DILocation(line: 450, column: 25, scope: !5374, inlinedAt: !7526)
!7714 = !DILocation(line: 450, column: 30, scope: !5374, inlinedAt: !7526)
!7715 = !DILocation(line: 450, column: 36, scope: !5374, inlinedAt: !7526)
!7716 = !DILocation(line: 450, column: 8, scope: !5374, inlinedAt: !7526)
!7717 = !DILocation(line: 450, column: 6, scope: !5374, inlinedAt: !7526)
!7718 = !DILocation(line: 451, column: 9, scope: !5374, inlinedAt: !7526)
!7719 = !DILocation(line: 552, column: 3, scope: !5379, inlinedAt: !7527)
!7720 = !DILocation(line: 557, column: 19, scope: !5381, inlinedAt: !7527)
!7721 = !DILocation(line: 557, column: 25, scope: !5381, inlinedAt: !7527)
!7722 = !DILocation(line: 557, column: 9, scope: !5381, inlinedAt: !7527)
!7723 = !DILocation(line: 557, column: 2, scope: !5381, inlinedAt: !7527)
!7724 = !DILocation(line: 558, column: 1, scope: !5381, inlinedAt: !7527)
!7725 = !DILocation(line: 664, column: 2, scope: !7524)
!7726 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !7727, file: !7727, line: 33, type: !7728, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7727 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!7728 = !DISubroutineType(types: !7729)
!7729 = !{null, !173}
!7730 = !DILocalVariable(name: "list", arg: 1, scope: !7726, file: !7727, line: 33, type: !173)
!7731 = !DILocation(line: 33, column: 53, scope: !7726)
!7732 = !DILocation(line: 35, column: 2, scope: !7726)
!7733 = !DILocation(line: 35, column: 2, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7726, file: !7727, line: 35, column: 2)
!7735 = !DILocation(line: 35, column: 2, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7734, file: !7727, line: 35, column: 2)
!7737 = !DILocation(line: 35, column: 2, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7734, file: !7727, line: 35, column: 2)
!7739 = !DILocation(line: 36, column: 15, scope: !7726)
!7740 = !DILocation(line: 36, column: 2, scope: !7726)
!7741 = !DILocation(line: 36, column: 8, scope: !7726)
!7742 = !DILocation(line: 36, column: 13, scope: !7726)
!7743 = !DILocation(line: 37, column: 1, scope: !7726)
!7744 = distinct !DISubprogram(name: "_opp_compare_key", scope: !3, file: !3, line: 1431, type: !7745, scopeLine: 1432, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7745 = !DISubroutineType(types: !7746)
!7746 = !{!188, !166, !166}
!7747 = !DILocalVariable(name: "opp1", arg: 1, scope: !7744, file: !3, line: 1431, type: !166)
!7748 = !DILocation(line: 1431, column: 41, scope: !7744)
!7749 = !DILocalVariable(name: "opp2", arg: 2, scope: !7744, file: !3, line: 1431, type: !166)
!7750 = !DILocation(line: 1431, column: 66, scope: !7744)
!7751 = !DILocation(line: 1433, column: 6, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 1433, column: 6)
!7753 = !DILocation(line: 1433, column: 12, scope: !7752)
!7754 = !DILocation(line: 1433, column: 20, scope: !7752)
!7755 = !DILocation(line: 1433, column: 26, scope: !7752)
!7756 = !DILocation(line: 1433, column: 17, scope: !7752)
!7757 = !DILocation(line: 1433, column: 6, scope: !7744)
!7758 = !DILocation(line: 1434, column: 10, scope: !7752)
!7759 = !DILocation(line: 1434, column: 16, scope: !7752)
!7760 = !DILocation(line: 1434, column: 23, scope: !7752)
!7761 = !DILocation(line: 1434, column: 29, scope: !7752)
!7762 = !DILocation(line: 1434, column: 21, scope: !7752)
!7763 = !DILocation(line: 1434, column: 3, scope: !7752)
!7764 = !DILocation(line: 1435, column: 6, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 1435, column: 6)
!7766 = !DILocation(line: 1435, column: 12, scope: !7765)
!7767 = !DILocation(line: 1435, column: 22, scope: !7765)
!7768 = !DILocation(line: 1435, column: 25, scope: !7765)
!7769 = !DILocation(line: 1435, column: 31, scope: !7765)
!7770 = !DILocation(line: 1435, column: 41, scope: !7765)
!7771 = !DILocation(line: 1436, column: 6, scope: !7765)
!7772 = !DILocation(line: 1436, column: 12, scope: !7765)
!7773 = !DILocation(line: 1436, column: 25, scope: !7765)
!7774 = !DILocation(line: 1436, column: 33, scope: !7765)
!7775 = !DILocation(line: 1436, column: 39, scope: !7765)
!7776 = !DILocation(line: 1436, column: 52, scope: !7765)
!7777 = !DILocation(line: 1436, column: 30, scope: !7765)
!7778 = !DILocation(line: 1435, column: 6, scope: !7744)
!7779 = !DILocation(line: 1437, column: 10, scope: !7765)
!7780 = !DILocation(line: 1437, column: 16, scope: !7765)
!7781 = !DILocation(line: 1437, column: 29, scope: !7765)
!7782 = !DILocation(line: 1437, column: 36, scope: !7765)
!7783 = !DILocation(line: 1437, column: 42, scope: !7765)
!7784 = !DILocation(line: 1437, column: 55, scope: !7765)
!7785 = !DILocation(line: 1437, column: 34, scope: !7765)
!7786 = !DILocation(line: 1437, column: 3, scope: !7765)
!7787 = !DILocation(line: 1438, column: 6, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 1438, column: 6)
!7789 = !DILocation(line: 1438, column: 12, scope: !7788)
!7790 = !DILocation(line: 1438, column: 21, scope: !7788)
!7791 = !DILocation(line: 1438, column: 27, scope: !7788)
!7792 = !DILocation(line: 1438, column: 18, scope: !7788)
!7793 = !DILocation(line: 1438, column: 6, scope: !7744)
!7794 = !DILocation(line: 1439, column: 10, scope: !7788)
!7795 = !DILocation(line: 1439, column: 16, scope: !7788)
!7796 = !DILocation(line: 1439, column: 24, scope: !7788)
!7797 = !DILocation(line: 1439, column: 30, scope: !7788)
!7798 = !DILocation(line: 1439, column: 22, scope: !7788)
!7799 = !DILocation(line: 1439, column: 3, scope: !7788)
!7800 = !DILocation(line: 1440, column: 2, scope: !7744)
!7801 = !DILocation(line: 1441, column: 1, scope: !7744)
!7802 = distinct !DISubprogram(name: "_opp_add", scope: !3, file: !3, line: 1492, type: !7803, scopeLine: 1494, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7803 = !DISubroutineType(types: !7804)
!7804 = !{!188, !1739, !166, !221, !190}
!7805 = !DILocalVariable(name: "dev", arg: 1, scope: !7802, file: !3, line: 1492, type: !1739)
!7806 = !DILocation(line: 1492, column: 29, scope: !7802)
!7807 = !DILocalVariable(name: "new_opp", arg: 2, scope: !7802, file: !3, line: 1492, type: !166)
!7808 = !DILocation(line: 1492, column: 53, scope: !7802)
!7809 = !DILocalVariable(name: "opp_table", arg: 3, scope: !7802, file: !3, line: 1493, type: !221)
!7810 = !DILocation(line: 1493, column: 25, scope: !7802)
!7811 = !DILocalVariable(name: "rate_not_available", arg: 4, scope: !7802, file: !3, line: 1493, type: !190)
!7812 = !DILocation(line: 1493, column: 41, scope: !7802)
!7813 = !DILocalVariable(name: "head", scope: !7802, file: !3, line: 1495, type: !173)
!7814 = !DILocation(line: 1495, column: 20, scope: !7802)
!7815 = !DILocalVariable(name: "ret", scope: !7802, file: !3, line: 1496, type: !188)
!7816 = !DILocation(line: 1496, column: 6, scope: !7802)
!7817 = !DILocation(line: 1498, column: 14, scope: !7802)
!7818 = !DILocation(line: 1498, column: 25, scope: !7802)
!7819 = !DILocation(line: 1498, column: 2, scope: !7802)
!7820 = !DILocation(line: 1499, column: 10, scope: !7802)
!7821 = !DILocation(line: 1499, column: 21, scope: !7802)
!7822 = !DILocation(line: 1499, column: 7, scope: !7802)
!7823 = !DILocation(line: 1501, column: 6, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 1501, column: 6)
!7825 = !DILocation(line: 1501, column: 6, scope: !7802)
!7826 = !DILocation(line: 1502, column: 27, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7824, file: !3, line: 1501, column: 35)
!7828 = !DILocation(line: 1502, column: 32, scope: !7827)
!7829 = !DILocation(line: 1502, column: 41, scope: !7827)
!7830 = !DILocation(line: 1502, column: 9, scope: !7827)
!7831 = !DILocation(line: 1502, column: 7, scope: !7827)
!7832 = !DILocation(line: 1503, column: 7, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 1503, column: 7)
!7834 = !DILocation(line: 1503, column: 7, scope: !7827)
!7835 = !DILocation(line: 1504, column: 18, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7833, file: !3, line: 1503, column: 12)
!7837 = !DILocation(line: 1504, column: 29, scope: !7836)
!7838 = !DILocation(line: 1504, column: 4, scope: !7836)
!7839 = !DILocation(line: 1505, column: 11, scope: !7836)
!7840 = !DILocation(line: 1505, column: 4, scope: !7836)
!7841 = !DILocation(line: 1507, column: 2, scope: !7827)
!7842 = !DILocation(line: 1509, column: 12, scope: !7802)
!7843 = !DILocation(line: 1509, column: 21, scope: !7802)
!7844 = !DILocation(line: 1509, column: 27, scope: !7802)
!7845 = !DILocation(line: 1509, column: 2, scope: !7802)
!7846 = !DILocation(line: 1510, column: 16, scope: !7802)
!7847 = !DILocation(line: 1510, column: 27, scope: !7802)
!7848 = !DILocation(line: 1510, column: 2, scope: !7802)
!7849 = !DILocation(line: 1512, column: 23, scope: !7802)
!7850 = !DILocation(line: 1512, column: 2, scope: !7802)
!7851 = !DILocation(line: 1512, column: 11, scope: !7802)
!7852 = !DILocation(line: 1512, column: 21, scope: !7802)
!7853 = !DILocation(line: 1513, column: 13, scope: !7802)
!7854 = !DILocation(line: 1513, column: 22, scope: !7802)
!7855 = !DILocation(line: 1513, column: 2, scope: !7802)
!7856 = !DILocation(line: 1515, column: 23, scope: !7802)
!7857 = !DILocation(line: 1515, column: 32, scope: !7802)
!7858 = !DILocation(line: 1515, column: 2, scope: !7802)
!7859 = !DILocation(line: 1517, column: 36, scope: !7860)
!7860 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 1517, column: 6)
!7861 = !DILocation(line: 1517, column: 45, scope: !7860)
!7862 = !DILocation(line: 1517, column: 7, scope: !7860)
!7863 = !DILocation(line: 1517, column: 6, scope: !7802)
!7864 = !DILocation(line: 1518, column: 3, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7860, file: !3, line: 1517, column: 57)
!7866 = !DILocation(line: 1518, column: 12, scope: !7865)
!7867 = !DILocation(line: 1518, column: 22, scope: !7865)
!7868 = !DILocation(line: 1519, column: 3, scope: !7865)
!7869 = !DILocation(line: 1521, column: 2, scope: !7865)
!7870 = !DILocation(line: 1523, column: 2, scope: !7802)
!7871 = !DILocation(line: 1524, column: 1, scope: !7802)
!7872 = distinct !DISubprogram(name: "_opp_is_duplicate", scope: !3, file: !3, line: 1443, type: !7873, scopeLine: 1446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7873 = !DISubroutineType(types: !7874)
!7874 = !{!188, !1739, !166, !221, !7875}
!7875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!7876 = !DILocalVariable(name: "dev", arg: 1, scope: !7872, file: !3, line: 1443, type: !1739)
!7877 = !DILocation(line: 1443, column: 45, scope: !7872)
!7878 = !DILocalVariable(name: "new_opp", arg: 2, scope: !7872, file: !3, line: 1443, type: !166)
!7879 = !DILocation(line: 1443, column: 69, scope: !7872)
!7880 = !DILocalVariable(name: "opp_table", arg: 3, scope: !7872, file: !3, line: 1444, type: !221)
!7881 = !DILocation(line: 1444, column: 27, scope: !7872)
!7882 = !DILocalVariable(name: "head", arg: 4, scope: !7872, file: !3, line: 1445, type: !7875)
!7883 = !DILocation(line: 1445, column: 28, scope: !7872)
!7884 = !DILocalVariable(name: "opp", scope: !7872, file: !3, line: 1447, type: !166)
!7885 = !DILocation(line: 1447, column: 21, scope: !7872)
!7886 = !DILocalVariable(name: "opp_cmp", scope: !7872, file: !3, line: 1448, type: !188)
!7887 = !DILocation(line: 1448, column: 6, scope: !7872)
!7888 = !DILocalVariable(name: "__mptr", scope: !7889, file: !3, line: 1458, type: !165)
!7889 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 1458, column: 2)
!7890 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 1458, column: 2)
!7891 = !DILocation(line: 1458, column: 2, scope: !7889)
!7892 = !DILocation(line: 1458, column: 2, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7889, file: !3, line: 1458, column: 2)
!7894 = !DILocation(line: 1458, column: 2, scope: !7890)
!7895 = !DILocation(line: 1458, column: 2, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 1458, column: 2)
!7897 = !DILocation(line: 1459, column: 30, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 1458, column: 55)
!7899 = !DILocation(line: 1459, column: 39, scope: !7898)
!7900 = !DILocation(line: 1459, column: 13, scope: !7898)
!7901 = !DILocation(line: 1459, column: 11, scope: !7898)
!7902 = !DILocation(line: 1460, column: 7, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 1460, column: 7)
!7904 = !DILocation(line: 1460, column: 15, scope: !7903)
!7905 = !DILocation(line: 1460, column: 7, scope: !7898)
!7906 = !DILocation(line: 1461, column: 13, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 1460, column: 20)
!7908 = !DILocation(line: 1461, column: 18, scope: !7907)
!7909 = !DILocation(line: 1461, column: 5, scope: !7907)
!7910 = !DILocation(line: 1461, column: 10, scope: !7907)
!7911 = !DILocation(line: 1462, column: 4, scope: !7907)
!7912 = !DILocation(line: 1465, column: 7, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 1465, column: 7)
!7914 = !DILocation(line: 1465, column: 15, scope: !7913)
!7915 = !DILocation(line: 1465, column: 7, scope: !7898)
!7916 = !DILocation(line: 1466, column: 4, scope: !7913)
!7917 = !DILocation(line: 1469, column: 3, scope: !7898)
!7918 = !DILocation(line: 1475, column: 10, scope: !7898)
!7919 = !DILocation(line: 1475, column: 15, scope: !7898)
!7920 = !DILocation(line: 1475, column: 25, scope: !7898)
!7921 = !DILocation(line: 1476, column: 10, scope: !7898)
!7922 = !DILocation(line: 1476, column: 19, scope: !7898)
!7923 = !DILocation(line: 1476, column: 31, scope: !7898)
!7924 = !DILocation(line: 1476, column: 41, scope: !7898)
!7925 = !DILocation(line: 1476, column: 46, scope: !7898)
!7926 = !DILocation(line: 1476, column: 58, scope: !7898)
!7927 = !DILocation(line: 1476, column: 38, scope: !7898)
!7928 = !DILocation(line: 0, scope: !7898)
!7929 = !DILocation(line: 1475, column: 3, scope: !7898)
!7930 = !DILocalVariable(name: "__mptr", scope: !7931, file: !3, line: 1458, type: !165)
!7931 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 1458, column: 2)
!7932 = !DILocation(line: 1458, column: 2, scope: !7931)
!7933 = !DILocation(line: 1458, column: 2, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1458, column: 2)
!7935 = distinct !{!7935, !7894, !7936}
!7936 = !DILocation(line: 1477, column: 2, scope: !7890)
!7937 = !DILocation(line: 1479, column: 2, scope: !7872)
!7938 = !DILocation(line: 1480, column: 1, scope: !7872)
!7939 = distinct !DISubprogram(name: "list_add", scope: !7727, file: !7727, line: 84, type: !7940, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7940 = !DISubroutineType(types: !7941)
!7941 = !{null, !173, !173}
!7942 = !DILocalVariable(name: "new", arg: 1, scope: !7939, file: !7727, line: 84, type: !173)
!7943 = !DILocation(line: 84, column: 47, scope: !7939)
!7944 = !DILocalVariable(name: "head", arg: 2, scope: !7939, file: !7727, line: 84, type: !173)
!7945 = !DILocation(line: 84, column: 70, scope: !7939)
!7946 = !DILocation(line: 86, column: 13, scope: !7939)
!7947 = !DILocation(line: 86, column: 18, scope: !7939)
!7948 = !DILocation(line: 86, column: 24, scope: !7939)
!7949 = !DILocation(line: 86, column: 30, scope: !7939)
!7950 = !DILocation(line: 86, column: 2, scope: !7939)
!7951 = !DILocation(line: 87, column: 1, scope: !7939)
!7952 = distinct !DISubprogram(name: "kref_init", scope: !177, file: !177, line: 29, type: !7024, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7953 = !DILocalVariable(name: "kref", arg: 1, scope: !7952, file: !177, line: 29, type: !7026)
!7954 = !DILocation(line: 29, column: 43, scope: !7952)
!7955 = !DILocation(line: 31, column: 16, scope: !7952)
!7956 = !DILocation(line: 31, column: 22, scope: !7952)
!7957 = !DILocation(line: 31, column: 2, scope: !7952)
!7958 = !DILocation(line: 32, column: 1, scope: !7952)
!7959 = distinct !DISubprogram(name: "opp_debug_create_one", scope: !129, file: !129, line: 251, type: !7960, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7960 = !DISubroutineType(types: !7961)
!7961 = !{null, !166, !221}
!7962 = !DILocalVariable(name: "opp", arg: 1, scope: !7959, file: !129, line: 251, type: !166)
!7963 = !DILocation(line: 251, column: 60, scope: !7959)
!7964 = !DILocalVariable(name: "opp_table", arg: 2, scope: !7959, file: !129, line: 252, type: !221)
!7965 = !DILocation(line: 252, column: 24, scope: !7959)
!7966 = !DILocation(line: 252, column: 37, scope: !7959)
!7967 = distinct !DISubprogram(name: "_opp_supported_by_regulators", scope: !3, file: !3, line: 1406, type: !7968, scopeLine: 1408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!7968 = !DISubroutineType(types: !7969)
!7969 = !{!190, !166, !221}
!7970 = !DILocalVariable(name: "opp", arg: 1, scope: !7967, file: !3, line: 1406, type: !166)
!7971 = !DILocation(line: 1406, column: 61, scope: !7967)
!7972 = !DILocalVariable(name: "opp_table", arg: 2, scope: !7967, file: !3, line: 1407, type: !221)
!7973 = !DILocation(line: 1407, column: 25, scope: !7967)
!7974 = !DILocalVariable(name: "reg", scope: !7967, file: !3, line: 1409, type: !4935)
!7975 = !DILocation(line: 1409, column: 20, scope: !7967)
!7976 = !DILocalVariable(name: "i", scope: !7967, file: !3, line: 1410, type: !188)
!7977 = !DILocation(line: 1410, column: 6, scope: !7967)
!7978 = !DILocation(line: 1412, column: 7, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 1412, column: 6)
!7980 = !DILocation(line: 1412, column: 18, scope: !7979)
!7981 = !DILocation(line: 1412, column: 6, scope: !7967)
!7982 = !DILocation(line: 1413, column: 3, scope: !7979)
!7983 = !DILocation(line: 1415, column: 9, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 1415, column: 2)
!7985 = !DILocation(line: 1415, column: 7, scope: !7984)
!7986 = !DILocation(line: 1415, column: 14, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7984, file: !3, line: 1415, column: 2)
!7988 = !DILocation(line: 1415, column: 18, scope: !7987)
!7989 = !DILocation(line: 1415, column: 29, scope: !7987)
!7990 = !DILocation(line: 1415, column: 16, scope: !7987)
!7991 = !DILocation(line: 1415, column: 2, scope: !7984)
!7992 = !DILocation(line: 1416, column: 9, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7987, file: !3, line: 1415, column: 51)
!7994 = !DILocation(line: 1416, column: 20, scope: !7993)
!7995 = !DILocation(line: 1416, column: 31, scope: !7993)
!7996 = !DILocation(line: 1416, column: 7, scope: !7993)
!7997 = !DILocation(line: 1418, column: 39, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 1418, column: 7)
!7999 = !DILocation(line: 1419, column: 6, scope: !7998)
!8000 = !DILocation(line: 1419, column: 11, scope: !7998)
!8001 = !DILocation(line: 1419, column: 20, scope: !7998)
!8002 = !DILocation(line: 1419, column: 23, scope: !7998)
!8003 = !DILocation(line: 1420, column: 6, scope: !7998)
!8004 = !DILocation(line: 1420, column: 11, scope: !7998)
!8005 = !DILocation(line: 1420, column: 20, scope: !7998)
!8006 = !DILocation(line: 1420, column: 23, scope: !7998)
!8007 = !DILocation(line: 1418, column: 8, scope: !7998)
!8008 = !DILocation(line: 1418, column: 7, scope: !7993)
!8009 = !DILocation(line: 1421, column: 4, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !7998, file: !3, line: 1420, column: 36)
!8011 = !DILocation(line: 1424, column: 4, scope: !8010)
!8012 = !DILocation(line: 1426, column: 2, scope: !7993)
!8013 = !DILocation(line: 1415, column: 47, scope: !7987)
!8014 = !DILocation(line: 1415, column: 2, scope: !7987)
!8015 = distinct !{!8015, !7991, !8016}
!8016 = !DILocation(line: 1426, column: 2, scope: !7984)
!8017 = !DILocation(line: 1428, column: 2, scope: !7967)
!8018 = !DILocation(line: 1429, column: 1, scope: !7967)
!8019 = distinct !DISubprogram(name: "_opp_add_v1", scope: !3, file: !3, line: 1548, type: !8020, scopeLine: 1550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8020 = !DISubroutineType(types: !8021)
!8021 = !{!188, !221, !1739, !197, !405, !190}
!8022 = !DILocalVariable(name: "opp_table", arg: 1, scope: !8019, file: !3, line: 1548, type: !221)
!8023 = !DILocation(line: 1548, column: 35, scope: !8019)
!8024 = !DILocalVariable(name: "dev", arg: 2, scope: !8019, file: !3, line: 1548, type: !1739)
!8025 = !DILocation(line: 1548, column: 61, scope: !8019)
!8026 = !DILocalVariable(name: "freq", arg: 3, scope: !8019, file: !3, line: 1549, type: !197)
!8027 = !DILocation(line: 1549, column: 17, scope: !8019)
!8028 = !DILocalVariable(name: "u_volt", arg: 4, scope: !8019, file: !3, line: 1549, type: !405)
!8029 = !DILocation(line: 1549, column: 28, scope: !8019)
!8030 = !DILocalVariable(name: "dynamic", arg: 5, scope: !8019, file: !3, line: 1549, type: !190)
!8031 = !DILocation(line: 1549, column: 41, scope: !8019)
!8032 = !DILocalVariable(name: "new_opp", scope: !8019, file: !3, line: 1551, type: !166)
!8033 = !DILocation(line: 1551, column: 21, scope: !8019)
!8034 = !DILocalVariable(name: "tol", scope: !8019, file: !3, line: 1552, type: !197)
!8035 = !DILocation(line: 1552, column: 16, scope: !8019)
!8036 = !DILocalVariable(name: "ret", scope: !8019, file: !3, line: 1553, type: !188)
!8037 = !DILocation(line: 1553, column: 6, scope: !8019)
!8038 = !DILocation(line: 1555, column: 26, scope: !8019)
!8039 = !DILocation(line: 1555, column: 12, scope: !8019)
!8040 = !DILocation(line: 1555, column: 10, scope: !8019)
!8041 = !DILocation(line: 1556, column: 7, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8019, file: !3, line: 1556, column: 6)
!8043 = !DILocation(line: 1556, column: 6, scope: !8019)
!8044 = !DILocation(line: 1557, column: 3, scope: !8042)
!8045 = !DILocation(line: 1560, column: 18, scope: !8019)
!8046 = !DILocation(line: 1560, column: 2, scope: !8019)
!8047 = !DILocation(line: 1560, column: 11, scope: !8019)
!8048 = !DILocation(line: 1560, column: 16, scope: !8019)
!8049 = !DILocation(line: 1561, column: 8, scope: !8019)
!8050 = !DILocation(line: 1561, column: 17, scope: !8019)
!8051 = !DILocation(line: 1561, column: 28, scope: !8019)
!8052 = !DILocation(line: 1561, column: 15, scope: !8019)
!8053 = !DILocation(line: 1561, column: 49, scope: !8019)
!8054 = !DILocation(line: 1561, column: 6, scope: !8019)
!8055 = !DILocation(line: 1562, column: 32, scope: !8019)
!8056 = !DILocation(line: 1562, column: 2, scope: !8019)
!8057 = !DILocation(line: 1562, column: 11, scope: !8019)
!8058 = !DILocation(line: 1562, column: 23, scope: !8019)
!8059 = !DILocation(line: 1562, column: 30, scope: !8019)
!8060 = !DILocation(line: 1563, column: 36, scope: !8019)
!8061 = !DILocation(line: 1563, column: 45, scope: !8019)
!8062 = !DILocation(line: 1563, column: 43, scope: !8019)
!8063 = !DILocation(line: 1563, column: 2, scope: !8019)
!8064 = !DILocation(line: 1563, column: 11, scope: !8019)
!8065 = !DILocation(line: 1563, column: 23, scope: !8019)
!8066 = !DILocation(line: 1563, column: 34, scope: !8019)
!8067 = !DILocation(line: 1564, column: 36, scope: !8019)
!8068 = !DILocation(line: 1564, column: 45, scope: !8019)
!8069 = !DILocation(line: 1564, column: 43, scope: !8019)
!8070 = !DILocation(line: 1564, column: 2, scope: !8019)
!8071 = !DILocation(line: 1564, column: 11, scope: !8019)
!8072 = !DILocation(line: 1564, column: 23, scope: !8019)
!8073 = !DILocation(line: 1564, column: 34, scope: !8019)
!8074 = !DILocation(line: 1565, column: 2, scope: !8019)
!8075 = !DILocation(line: 1565, column: 11, scope: !8019)
!8076 = !DILocation(line: 1565, column: 21, scope: !8019)
!8077 = !DILocation(line: 1566, column: 21, scope: !8019)
!8078 = !DILocation(line: 1566, column: 2, scope: !8019)
!8079 = !DILocation(line: 1566, column: 11, scope: !8019)
!8080 = !DILocation(line: 1566, column: 19, scope: !8019)
!8081 = !DILocation(line: 1568, column: 17, scope: !8019)
!8082 = !DILocation(line: 1568, column: 22, scope: !8019)
!8083 = !DILocation(line: 1568, column: 31, scope: !8019)
!8084 = !DILocation(line: 1568, column: 8, scope: !8019)
!8085 = !DILocation(line: 1568, column: 6, scope: !8019)
!8086 = !DILocation(line: 1569, column: 6, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8019, file: !3, line: 1569, column: 6)
!8088 = !DILocation(line: 1569, column: 6, scope: !8019)
!8089 = !DILocation(line: 1571, column: 7, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8091, file: !3, line: 1571, column: 7)
!8091 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 1569, column: 11)
!8092 = !DILocation(line: 1571, column: 11, scope: !8090)
!8093 = !DILocation(line: 1571, column: 7, scope: !8091)
!8094 = !DILocation(line: 1572, column: 8, scope: !8090)
!8095 = !DILocation(line: 1572, column: 4, scope: !8090)
!8096 = !DILocation(line: 1573, column: 3, scope: !8091)
!8097 = !DILocation(line: 1580, column: 32, scope: !8019)
!8098 = !DILocation(line: 1580, column: 43, scope: !8019)
!8099 = !DILocation(line: 1580, column: 64, scope: !8019)
!8100 = !DILocation(line: 1580, column: 2, scope: !8019)
!8101 = !DILocation(line: 1581, column: 2, scope: !8019)
!8102 = !DILabel(scope: !8019, name: "free_opp", file: !3, line: 1583)
!8103 = !DILocation(line: 1583, column: 1, scope: !8019)
!8104 = !DILocation(line: 1584, column: 12, scope: !8019)
!8105 = !DILocation(line: 1584, column: 2, scope: !8019)
!8106 = !DILocation(line: 1586, column: 9, scope: !8019)
!8107 = !DILocation(line: 1586, column: 2, scope: !8019)
!8108 = !DILocation(line: 1587, column: 1, scope: !8019)
!8109 = distinct !DISubprogram(name: "dev_pm_opp_set_supported_hw", scope: !3, file: !3, line: 1600, type: !8110, scopeLine: 1602, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8110 = !DISubroutineType(types: !8111)
!8111 = !{!221, !1739, !8112, !7}
!8112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8113, size: 64)
!8113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !212)
!8114 = !DILocalVariable(name: "dev", arg: 1, scope: !8109, file: !3, line: 1600, type: !1739)
!8115 = !DILocation(line: 1600, column: 62, scope: !8109)
!8116 = !DILocalVariable(name: "versions", arg: 2, scope: !8109, file: !3, line: 1601, type: !8112)
!8117 = !DILocation(line: 1601, column: 15, scope: !8109)
!8118 = !DILocalVariable(name: "count", arg: 3, scope: !8109, file: !3, line: 1601, type: !7)
!8119 = !DILocation(line: 1601, column: 38, scope: !8109)
!8120 = !DILocalVariable(name: "opp_table", scope: !8109, file: !3, line: 1603, type: !221)
!8121 = !DILocation(line: 1603, column: 20, scope: !8109)
!8122 = !DILocation(line: 1605, column: 39, scope: !8109)
!8123 = !DILocation(line: 1605, column: 14, scope: !8109)
!8124 = !DILocation(line: 1605, column: 12, scope: !8109)
!8125 = !DILocation(line: 1606, column: 13, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8109, file: !3, line: 1606, column: 6)
!8127 = !DILocation(line: 1606, column: 6, scope: !8126)
!8128 = !DILocation(line: 1606, column: 6, scope: !8109)
!8129 = !DILocation(line: 1607, column: 10, scope: !8126)
!8130 = !DILocation(line: 1607, column: 3, scope: !8126)
!8131 = !DILocalVariable(name: "__ret_warn_on", scope: !8132, file: !3, line: 1610, type: !188)
!8132 = distinct !DILexicalBlock(scope: !8109, file: !3, line: 1610, column: 2)
!8133 = !DILocation(line: 1610, column: 2, scope: !8132)
!8134 = !DILocation(line: 1610, column: 2, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !8132, file: !3, line: 1610, column: 2)
!8136 = !DILocation(line: 1610, column: 2, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8135, file: !3, line: 1610, column: 2)
!8138 = !DILocation(line: 1610, column: 2, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 1610, column: 2)
!8140 = !DILocation(line: 1610, column: 2, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 1610, column: 2)
!8142 = !{i32 -2140654418, i32 -2140654389, i32 -2140654343, i32 -2140654285, i32 -2140654231, i32 -2140654177, i32 -2140654122, i32 -2140654091}
!8143 = !DILocation(line: 1610, column: 2, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 1610, column: 2)
!8145 = !{i32 -2140653690, i32 -2140653683, i32 -2140653631, i32 -2140653600, i32 -2140653570}
!8146 = !DILocation(line: 1610, column: 2, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 1610, column: 2)
!8148 = !DILocation(line: 1613, column: 6, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8109, file: !3, line: 1613, column: 6)
!8150 = !DILocation(line: 1613, column: 17, scope: !8149)
!8151 = !DILocation(line: 1613, column: 6, scope: !8109)
!8152 = !DILocation(line: 1614, column: 10, scope: !8149)
!8153 = !DILocation(line: 1614, column: 3, scope: !8149)
!8154 = !DILocation(line: 1616, column: 36, scope: !8109)
!8155 = !DILocation(line: 1616, column: 46, scope: !8109)
!8156 = !DILocation(line: 1616, column: 52, scope: !8109)
!8157 = !DILocation(line: 1616, column: 28, scope: !8109)
!8158 = !DILocation(line: 1616, column: 2, scope: !8109)
!8159 = !DILocation(line: 1616, column: 13, scope: !8109)
!8160 = !DILocation(line: 1616, column: 26, scope: !8109)
!8161 = !DILocation(line: 1618, column: 7, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8109, file: !3, line: 1618, column: 6)
!8163 = !DILocation(line: 1618, column: 18, scope: !8162)
!8164 = !DILocation(line: 1618, column: 6, scope: !8109)
!8165 = !DILocation(line: 1619, column: 28, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8162, file: !3, line: 1618, column: 32)
!8167 = !DILocation(line: 1619, column: 3, scope: !8166)
!8168 = !DILocation(line: 1620, column: 10, scope: !8166)
!8169 = !DILocation(line: 1620, column: 3, scope: !8166)
!8170 = !DILocation(line: 1623, column: 34, scope: !8109)
!8171 = !DILocation(line: 1623, column: 2, scope: !8109)
!8172 = !DILocation(line: 1623, column: 13, scope: !8109)
!8173 = !DILocation(line: 1623, column: 32, scope: !8109)
!8174 = !DILocation(line: 1625, column: 9, scope: !8109)
!8175 = !DILocation(line: 1625, column: 2, scope: !8109)
!8176 = !DILocation(line: 1626, column: 1, scope: !8109)
!8177 = distinct !DISubprogram(name: "list_empty", scope: !7727, file: !7727, line: 280, type: !8178, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8178 = !DISubroutineType(types: !8179)
!8179 = !{!188, !8180}
!8180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8181, size: 64)
!8181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!8182 = !DILocalVariable(name: "head", arg: 1, scope: !8177, file: !7727, line: 280, type: !8180)
!8183 = !DILocation(line: 280, column: 54, scope: !8177)
!8184 = !DILocation(line: 282, column: 9, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8177, file: !7727, line: 282, column: 9)
!8186 = !DILocation(line: 282, column: 9, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8185, file: !7727, line: 282, column: 9)
!8188 = !DILocation(line: 282, column: 34, scope: !8177)
!8189 = !DILocation(line: 282, column: 31, scope: !8177)
!8190 = !DILocation(line: 282, column: 2, scope: !8177)
!8191 = distinct !DISubprogram(name: "dev_pm_opp_put_supported_hw", scope: !3, file: !3, line: 1637, type: !5184, scopeLine: 1638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8192 = !DILocalVariable(name: "opp_table", arg: 1, scope: !8191, file: !3, line: 1637, type: !221)
!8193 = !DILocation(line: 1637, column: 52, scope: !8191)
!8194 = !DILocalVariable(name: "__ret_warn_on", scope: !8195, file: !3, line: 1640, type: !188)
!8195 = distinct !DILexicalBlock(scope: !8191, file: !3, line: 1640, column: 2)
!8196 = !DILocation(line: 1640, column: 2, scope: !8195)
!8197 = !DILocation(line: 1640, column: 2, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 1640, column: 2)
!8199 = !DILocation(line: 1640, column: 2, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 1640, column: 2)
!8201 = !DILocation(line: 1640, column: 2, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8200, file: !3, line: 1640, column: 2)
!8203 = !DILocation(line: 1640, column: 2, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8200, file: !3, line: 1640, column: 2)
!8205 = !{i32 -2140652660, i32 -2140652631, i32 -2140652585, i32 -2140652527, i32 -2140652473, i32 -2140652419, i32 -2140652364, i32 -2140652333}
!8206 = !DILocation(line: 1640, column: 2, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8200, file: !3, line: 1640, column: 2)
!8208 = !{i32 -2140651932, i32 -2140651925, i32 -2140651873, i32 -2140651842, i32 -2140651812}
!8209 = !DILocation(line: 1640, column: 2, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8200, file: !3, line: 1640, column: 2)
!8211 = !DILocation(line: 1642, column: 8, scope: !8191)
!8212 = !DILocation(line: 1642, column: 19, scope: !8191)
!8213 = !DILocation(line: 1642, column: 2, scope: !8191)
!8214 = !DILocation(line: 1643, column: 2, scope: !8191)
!8215 = !DILocation(line: 1643, column: 13, scope: !8191)
!8216 = !DILocation(line: 1643, column: 26, scope: !8191)
!8217 = !DILocation(line: 1644, column: 2, scope: !8191)
!8218 = !DILocation(line: 1644, column: 13, scope: !8191)
!8219 = !DILocation(line: 1644, column: 32, scope: !8191)
!8220 = !DILocation(line: 1646, column: 27, scope: !8191)
!8221 = !DILocation(line: 1646, column: 2, scope: !8191)
!8222 = !DILocation(line: 1647, column: 1, scope: !8191)
!8223 = distinct !DISubprogram(name: "dev_pm_opp_set_prop_name", scope: !3, file: !3, line: 1660, type: !8224, scopeLine: 1661, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8224 = !DISubroutineType(types: !8225)
!8225 = !{!221, !1739, !289}
!8226 = !DILocalVariable(name: "dev", arg: 1, scope: !8223, file: !3, line: 1660, type: !1739)
!8227 = !DILocation(line: 1660, column: 59, scope: !8223)
!8228 = !DILocalVariable(name: "name", arg: 2, scope: !8223, file: !3, line: 1660, type: !289)
!8229 = !DILocation(line: 1660, column: 76, scope: !8223)
!8230 = !DILocalVariable(name: "opp_table", scope: !8223, file: !3, line: 1662, type: !221)
!8231 = !DILocation(line: 1662, column: 20, scope: !8223)
!8232 = !DILocation(line: 1664, column: 39, scope: !8223)
!8233 = !DILocation(line: 1664, column: 14, scope: !8223)
!8234 = !DILocation(line: 1664, column: 12, scope: !8223)
!8235 = !DILocation(line: 1665, column: 13, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 1665, column: 6)
!8237 = !DILocation(line: 1665, column: 6, scope: !8236)
!8238 = !DILocation(line: 1665, column: 6, scope: !8223)
!8239 = !DILocation(line: 1666, column: 10, scope: !8236)
!8240 = !DILocation(line: 1666, column: 3, scope: !8236)
!8241 = !DILocalVariable(name: "__ret_warn_on", scope: !8242, file: !3, line: 1669, type: !188)
!8242 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 1669, column: 2)
!8243 = !DILocation(line: 1669, column: 2, scope: !8242)
!8244 = !DILocation(line: 1669, column: 2, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 1669, column: 2)
!8246 = !DILocation(line: 1669, column: 2, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8245, file: !3, line: 1669, column: 2)
!8248 = !DILocation(line: 1669, column: 2, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 1669, column: 2)
!8250 = !DILocation(line: 1669, column: 2, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 1669, column: 2)
!8252 = !{i32 -2140651074, i32 -2140651045, i32 -2140650999, i32 -2140650941, i32 -2140650887, i32 -2140650833, i32 -2140650778, i32 -2140650747}
!8253 = !DILocation(line: 1669, column: 2, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 1669, column: 2)
!8255 = !{i32 -2140650346, i32 -2140650339, i32 -2140650287, i32 -2140650256, i32 -2140650226}
!8256 = !DILocation(line: 1669, column: 2, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 1669, column: 2)
!8258 = !DILocation(line: 1672, column: 6, scope: !8259)
!8259 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 1672, column: 6)
!8260 = !DILocation(line: 1672, column: 17, scope: !8259)
!8261 = !DILocation(line: 1672, column: 6, scope: !8223)
!8262 = !DILocation(line: 1673, column: 10, scope: !8259)
!8263 = !DILocation(line: 1673, column: 3, scope: !8259)
!8264 = !DILocation(line: 1675, column: 33, scope: !8223)
!8265 = !DILocation(line: 1675, column: 25, scope: !8223)
!8266 = !DILocation(line: 1675, column: 2, scope: !8223)
!8267 = !DILocation(line: 1675, column: 13, scope: !8223)
!8268 = !DILocation(line: 1675, column: 23, scope: !8223)
!8269 = !DILocation(line: 1676, column: 7, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 1676, column: 6)
!8271 = !DILocation(line: 1676, column: 18, scope: !8270)
!8272 = !DILocation(line: 1676, column: 6, scope: !8223)
!8273 = !DILocation(line: 1677, column: 28, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 1676, column: 29)
!8275 = !DILocation(line: 1677, column: 3, scope: !8274)
!8276 = !DILocation(line: 1678, column: 10, scope: !8274)
!8277 = !DILocation(line: 1678, column: 3, scope: !8274)
!8278 = !DILocation(line: 1681, column: 9, scope: !8223)
!8279 = !DILocation(line: 1681, column: 2, scope: !8223)
!8280 = !DILocation(line: 1682, column: 1, scope: !8223)
!8281 = distinct !DISubprogram(name: "dev_pm_opp_put_prop_name", scope: !3, file: !3, line: 1693, type: !5184, scopeLine: 1694, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8282 = !DILocalVariable(name: "opp_table", arg: 1, scope: !8281, file: !3, line: 1693, type: !221)
!8283 = !DILocation(line: 1693, column: 49, scope: !8281)
!8284 = !DILocalVariable(name: "__ret_warn_on", scope: !8285, file: !3, line: 1696, type: !188)
!8285 = distinct !DILexicalBlock(scope: !8281, file: !3, line: 1696, column: 2)
!8286 = !DILocation(line: 1696, column: 2, scope: !8285)
!8287 = !DILocation(line: 1696, column: 2, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 1696, column: 2)
!8289 = !DILocation(line: 1696, column: 2, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 1696, column: 2)
!8291 = !DILocation(line: 1696, column: 2, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 1696, column: 2)
!8293 = !DILocation(line: 1696, column: 2, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 1696, column: 2)
!8295 = !{i32 -2140649322, i32 -2140649293, i32 -2140649247, i32 -2140649189, i32 -2140649135, i32 -2140649081, i32 -2140649026, i32 -2140648995}
!8296 = !DILocation(line: 1696, column: 2, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 1696, column: 2)
!8298 = !{i32 -2140648594, i32 -2140648587, i32 -2140648535, i32 -2140648504, i32 -2140648474}
!8299 = !DILocation(line: 1696, column: 2, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 1696, column: 2)
!8301 = !DILocation(line: 1698, column: 8, scope: !8281)
!8302 = !DILocation(line: 1698, column: 19, scope: !8281)
!8303 = !DILocation(line: 1698, column: 2, scope: !8281)
!8304 = !DILocation(line: 1699, column: 2, scope: !8281)
!8305 = !DILocation(line: 1699, column: 13, scope: !8281)
!8306 = !DILocation(line: 1699, column: 23, scope: !8281)
!8307 = !DILocation(line: 1701, column: 27, scope: !8281)
!8308 = !DILocation(line: 1701, column: 2, scope: !8281)
!8309 = !DILocation(line: 1702, column: 1, scope: !8281)
!8310 = distinct !DISubprogram(name: "dev_pm_opp_set_regulators", scope: !3, file: !3, line: 1749, type: !8311, scopeLine: 1752, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8311 = !DISubroutineType(types: !8312)
!8312 = !{!221, !1739, !8313, !7}
!8313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8314, size: 64)
!8314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !289)
!8315 = !DILocalVariable(name: "dev", arg: 1, scope: !8310, file: !3, line: 1749, type: !1739)
!8316 = !DILocation(line: 1749, column: 60, scope: !8310)
!8317 = !DILocalVariable(name: "names", arg: 2, scope: !8310, file: !3, line: 1750, type: !8313)
!8318 = !DILocation(line: 1750, column: 29, scope: !8310)
!8319 = !DILocalVariable(name: "count", arg: 3, scope: !8310, file: !3, line: 1751, type: !7)
!8320 = !DILocation(line: 1751, column: 23, scope: !8310)
!8321 = !DILocalVariable(name: "opp_table", scope: !8310, file: !3, line: 1753, type: !221)
!8322 = !DILocation(line: 1753, column: 20, scope: !8310)
!8323 = !DILocalVariable(name: "reg", scope: !8310, file: !3, line: 1754, type: !4935)
!8324 = !DILocation(line: 1754, column: 20, scope: !8310)
!8325 = !DILocalVariable(name: "ret", scope: !8310, file: !3, line: 1755, type: !188)
!8326 = !DILocation(line: 1755, column: 6, scope: !8310)
!8327 = !DILocalVariable(name: "i", scope: !8310, file: !3, line: 1755, type: !188)
!8328 = !DILocation(line: 1755, column: 11, scope: !8310)
!8329 = !DILocation(line: 1757, column: 39, scope: !8310)
!8330 = !DILocation(line: 1757, column: 14, scope: !8310)
!8331 = !DILocation(line: 1757, column: 12, scope: !8310)
!8332 = !DILocation(line: 1758, column: 13, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 1758, column: 6)
!8334 = !DILocation(line: 1758, column: 6, scope: !8333)
!8335 = !DILocation(line: 1758, column: 6, scope: !8310)
!8336 = !DILocation(line: 1759, column: 10, scope: !8333)
!8337 = !DILocation(line: 1759, column: 3, scope: !8333)
!8338 = !DILocalVariable(name: "__ret_warn_on", scope: !8339, file: !3, line: 1762, type: !188)
!8339 = distinct !DILexicalBlock(scope: !8340, file: !3, line: 1762, column: 6)
!8340 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 1762, column: 6)
!8341 = !DILocation(line: 1762, column: 6, scope: !8339)
!8342 = !DILocation(line: 1762, column: 6, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8339, file: !3, line: 1762, column: 6)
!8344 = !DILocation(line: 1762, column: 6, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 1762, column: 6)
!8346 = !DILocation(line: 1762, column: 6, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 1762, column: 6)
!8348 = !DILocation(line: 1762, column: 6, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 1762, column: 6)
!8350 = !{i32 -2140646101, i32 -2140646072, i32 -2140646026, i32 -2140645968, i32 -2140645914, i32 -2140645860, i32 -2140645805, i32 -2140645774}
!8351 = !DILocation(line: 1762, column: 6, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 1762, column: 6)
!8353 = !{i32 -2140641312, i32 -2140641305, i32 -2140641253, i32 -2140641222, i32 -2140641192}
!8354 = !DILocation(line: 1762, column: 6, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 1762, column: 6)
!8356 = !DILocation(line: 1762, column: 6, scope: !8340)
!8357 = !DILocation(line: 1762, column: 6, scope: !8310)
!8358 = !DILocation(line: 1763, column: 7, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8340, file: !3, line: 1762, column: 50)
!8360 = !DILocation(line: 1764, column: 3, scope: !8359)
!8361 = !DILocation(line: 1768, column: 6, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 1768, column: 6)
!8363 = !DILocation(line: 1768, column: 17, scope: !8362)
!8364 = !DILocation(line: 1768, column: 6, scope: !8310)
!8365 = !DILocation(line: 1769, column: 10, scope: !8362)
!8366 = !DILocation(line: 1769, column: 3, scope: !8362)
!8367 = !DILocation(line: 1771, column: 40, scope: !8310)
!8368 = !DILocation(line: 1771, column: 26, scope: !8310)
!8369 = !DILocation(line: 1771, column: 2, scope: !8310)
!8370 = !DILocation(line: 1771, column: 13, scope: !8310)
!8371 = !DILocation(line: 1771, column: 24, scope: !8310)
!8372 = !DILocation(line: 1774, column: 7, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 1774, column: 6)
!8374 = !DILocation(line: 1774, column: 18, scope: !8373)
!8375 = !DILocation(line: 1774, column: 6, scope: !8310)
!8376 = !DILocation(line: 1775, column: 7, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !8373, file: !3, line: 1774, column: 30)
!8378 = !DILocation(line: 1776, column: 3, scope: !8377)
!8379 = !DILocation(line: 1779, column: 9, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 1779, column: 2)
!8381 = !DILocation(line: 1779, column: 7, scope: !8380)
!8382 = !DILocation(line: 1779, column: 14, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 1779, column: 2)
!8384 = !DILocation(line: 1779, column: 18, scope: !8383)
!8385 = !DILocation(line: 1779, column: 16, scope: !8383)
!8386 = !DILocation(line: 1779, column: 2, scope: !8380)
!8387 = !DILocation(line: 1780, column: 32, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8383, file: !3, line: 1779, column: 30)
!8389 = !DILocation(line: 1780, column: 37, scope: !8388)
!8390 = !DILocation(line: 1780, column: 43, scope: !8388)
!8391 = !DILocation(line: 1780, column: 9, scope: !8388)
!8392 = !DILocation(line: 1780, column: 7, scope: !8388)
!8393 = !DILocation(line: 1781, column: 14, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 1781, column: 7)
!8395 = !DILocation(line: 1781, column: 7, scope: !8394)
!8396 = !DILocation(line: 1781, column: 7, scope: !8388)
!8397 = !DILocation(line: 1782, column: 18, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 1781, column: 20)
!8399 = !DILocation(line: 1782, column: 10, scope: !8398)
!8400 = !DILocation(line: 1782, column: 8, scope: !8398)
!8401 = !DILocation(line: 1783, column: 8, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 1783, column: 8)
!8403 = !DILocation(line: 1783, column: 12, scope: !8402)
!8404 = !DILocation(line: 1783, column: 8, scope: !8398)
!8405 = !DILocation(line: 1784, column: 5, scope: !8402)
!8406 = !DILocation(line: 1786, column: 4, scope: !8398)
!8407 = !DILocation(line: 1789, column: 30, scope: !8388)
!8408 = !DILocation(line: 1789, column: 3, scope: !8388)
!8409 = !DILocation(line: 1789, column: 14, scope: !8388)
!8410 = !DILocation(line: 1789, column: 25, scope: !8388)
!8411 = !DILocation(line: 1789, column: 28, scope: !8388)
!8412 = !DILocation(line: 1790, column: 2, scope: !8388)
!8413 = !DILocation(line: 1779, column: 26, scope: !8383)
!8414 = !DILocation(line: 1779, column: 2, scope: !8383)
!8415 = distinct !{!8415, !8386, !8416}
!8416 = !DILocation(line: 1790, column: 2, scope: !8380)
!8417 = !DILocation(line: 1792, column: 31, scope: !8310)
!8418 = !DILocation(line: 1792, column: 2, scope: !8310)
!8419 = !DILocation(line: 1792, column: 13, scope: !8310)
!8420 = !DILocation(line: 1792, column: 29, scope: !8310)
!8421 = !DILocation(line: 1795, column: 31, scope: !8310)
!8422 = !DILocation(line: 1795, column: 8, scope: !8310)
!8423 = !DILocation(line: 1795, column: 6, scope: !8310)
!8424 = !DILocation(line: 1796, column: 6, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 1796, column: 6)
!8426 = !DILocation(line: 1796, column: 6, scope: !8310)
!8427 = !DILocation(line: 1797, column: 3, scope: !8425)
!8428 = !DILocation(line: 1799, column: 9, scope: !8310)
!8429 = !DILocation(line: 1799, column: 2, scope: !8310)
!8430 = !DILabel(scope: !8310, name: "free_regulators", file: !3, line: 1801)
!8431 = !DILocation(line: 1801, column: 1, scope: !8310)
!8432 = !DILocation(line: 1802, column: 2, scope: !8310)
!8433 = !DILocation(line: 1802, column: 9, scope: !8310)
!8434 = !DILocation(line: 1802, column: 11, scope: !8310)
!8435 = !DILocation(line: 1803, column: 17, scope: !8310)
!8436 = !DILocation(line: 1803, column: 28, scope: !8310)
!8437 = !DILocation(line: 1803, column: 39, scope: !8310)
!8438 = !DILocation(line: 1803, column: 3, scope: !8310)
!8439 = distinct !{!8439, !8432, !8440}
!8440 = !DILocation(line: 1803, column: 43, scope: !8310)
!8441 = !DILocation(line: 1805, column: 8, scope: !8310)
!8442 = !DILocation(line: 1805, column: 19, scope: !8310)
!8443 = !DILocation(line: 1805, column: 2, scope: !8310)
!8444 = !DILocation(line: 1806, column: 2, scope: !8310)
!8445 = !DILocation(line: 1806, column: 13, scope: !8310)
!8446 = !DILocation(line: 1806, column: 24, scope: !8310)
!8447 = !DILocation(line: 1807, column: 2, scope: !8310)
!8448 = !DILocation(line: 1807, column: 13, scope: !8310)
!8449 = !DILocation(line: 1807, column: 29, scope: !8310)
!8450 = !DILabel(scope: !8310, name: "err", file: !3, line: 1808)
!8451 = !DILocation(line: 1808, column: 1, scope: !8310)
!8452 = !DILocation(line: 1809, column: 27, scope: !8310)
!8453 = !DILocation(line: 1809, column: 2, scope: !8310)
!8454 = !DILocation(line: 1811, column: 17, scope: !8310)
!8455 = !DILocation(line: 1811, column: 9, scope: !8310)
!8456 = !DILocation(line: 1811, column: 2, scope: !8310)
!8457 = !DILocation(line: 1812, column: 1, scope: !8310)
!8458 = distinct !DISubprogram(name: "regulator_get_optional", scope: !4937, file: !4937, line: 335, type: !8459, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8459 = !DISubroutineType(types: !8460)
!8460 = !{!4935, !1739, !289}
!8461 = !DILocalVariable(name: "dev", arg: 1, scope: !8458, file: !4937, line: 335, type: !1739)
!8462 = !DILocation(line: 335, column: 39, scope: !8458)
!8463 = !DILocalVariable(name: "id", arg: 2, scope: !8458, file: !4937, line: 335, type: !289)
!8464 = !DILocation(line: 335, column: 56, scope: !8458)
!8465 = !DILocation(line: 337, column: 9, scope: !8458)
!8466 = !DILocation(line: 337, column: 2, scope: !8458)
!8467 = distinct !DISubprogram(name: "_allocate_set_opp_data", scope: !3, file: !3, line: 1705, type: !5721, scopeLine: 1706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8468 = !DILocalVariable(name: "opp_table", arg: 1, scope: !8467, file: !3, line: 1705, type: !221)
!8469 = !DILocation(line: 1705, column: 53, scope: !8467)
!8470 = !DILocalVariable(name: "data", scope: !8467, file: !3, line: 1707, type: !4952)
!8471 = !DILocation(line: 1707, column: 30, scope: !8467)
!8472 = !DILocalVariable(name: "len", scope: !8467, file: !3, line: 1708, type: !188)
!8473 = !DILocation(line: 1708, column: 6, scope: !8467)
!8474 = !DILocalVariable(name: "count", scope: !8467, file: !3, line: 1708, type: !188)
!8475 = !DILocation(line: 1708, column: 11, scope: !8467)
!8476 = !DILocation(line: 1708, column: 19, scope: !8467)
!8477 = !DILocation(line: 1708, column: 30, scope: !8467)
!8478 = !DILocalVariable(name: "__ret_warn_on", scope: !8479, file: !3, line: 1710, type: !188)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 1710, column: 6)
!8480 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 1710, column: 6)
!8481 = !DILocation(line: 1710, column: 6, scope: !8479)
!8482 = !DILocation(line: 1710, column: 6, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 1710, column: 6)
!8484 = !DILocation(line: 1710, column: 6, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 1710, column: 6)
!8486 = !DILocation(line: 1710, column: 6, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8485, file: !3, line: 1710, column: 6)
!8488 = !DILocation(line: 1710, column: 6, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8485, file: !3, line: 1710, column: 6)
!8490 = !{i32 -2140647753, i32 -2140647724, i32 -2140647678, i32 -2140647620, i32 -2140647566, i32 -2140647512, i32 -2140647457, i32 -2140647426}
!8491 = !DILocation(line: 1710, column: 6, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8485, file: !3, line: 1710, column: 6)
!8493 = !{i32 -2140647025, i32 -2140647018, i32 -2140646966, i32 -2140646935, i32 -2140646905}
!8494 = !DILocation(line: 1710, column: 6, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8485, file: !3, line: 1710, column: 6)
!8496 = !DILocation(line: 1710, column: 6, scope: !8480)
!8497 = !DILocation(line: 1710, column: 6, scope: !8467)
!8498 = !DILocation(line: 1711, column: 3, scope: !8480)
!8499 = !DILocation(line: 1714, column: 6, scope: !8467)
!8500 = !DILocation(line: 1717, column: 48, scope: !8467)
!8501 = !DILocation(line: 1717, column: 46, scope: !8467)
!8502 = !DILocation(line: 1717, column: 6, scope: !8467)
!8503 = !DILocation(line: 1719, column: 17, scope: !8467)
!8504 = !DILocation(line: 1719, column: 9, scope: !8467)
!8505 = !DILocation(line: 1719, column: 7, scope: !8467)
!8506 = !DILocation(line: 1720, column: 7, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 1720, column: 6)
!8508 = !DILocation(line: 1720, column: 6, scope: !8467)
!8509 = !DILocation(line: 1721, column: 3, scope: !8507)
!8510 = !DILocation(line: 1723, column: 36, scope: !8467)
!8511 = !DILocation(line: 1723, column: 41, scope: !8467)
!8512 = !DILocation(line: 1723, column: 27, scope: !8467)
!8513 = !DILocation(line: 1723, column: 2, scope: !8467)
!8514 = !DILocation(line: 1723, column: 8, scope: !8467)
!8515 = !DILocation(line: 1723, column: 16, scope: !8467)
!8516 = !DILocation(line: 1723, column: 25, scope: !8467)
!8517 = !DILocation(line: 1724, column: 27, scope: !8467)
!8518 = !DILocation(line: 1724, column: 33, scope: !8467)
!8519 = !DILocation(line: 1724, column: 41, scope: !8467)
!8520 = !DILocation(line: 1724, column: 52, scope: !8467)
!8521 = !DILocation(line: 1724, column: 50, scope: !8467)
!8522 = !DILocation(line: 1724, column: 2, scope: !8467)
!8523 = !DILocation(line: 1724, column: 8, scope: !8467)
!8524 = !DILocation(line: 1724, column: 16, scope: !8467)
!8525 = !DILocation(line: 1724, column: 25, scope: !8467)
!8526 = !DILocation(line: 1726, column: 28, scope: !8467)
!8527 = !DILocation(line: 1726, column: 2, scope: !8467)
!8528 = !DILocation(line: 1726, column: 13, scope: !8467)
!8529 = !DILocation(line: 1726, column: 26, scope: !8467)
!8530 = !DILocation(line: 1728, column: 2, scope: !8467)
!8531 = !DILocation(line: 1729, column: 1, scope: !8467)
!8532 = distinct !DISubprogram(name: "regulator_put", scope: !4937, file: !4937, line: 347, type: !8533, scopeLine: 348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8533 = !DISubroutineType(types: !8534)
!8534 = !{null, !4935}
!8535 = !DILocalVariable(name: "regulator", arg: 1, scope: !8532, file: !4937, line: 347, type: !4935)
!8536 = !DILocation(line: 347, column: 52, scope: !8532)
!8537 = !DILocation(line: 349, column: 1, scope: !8532)
!8538 = distinct !DISubprogram(name: "dev_pm_opp_put_regulators", scope: !3, file: !3, line: 1819, type: !5184, scopeLine: 1820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8539 = !DILocalVariable(name: "opp_table", arg: 1, scope: !8538, file: !3, line: 1819, type: !221)
!8540 = !DILocation(line: 1819, column: 50, scope: !8538)
!8541 = !DILocalVariable(name: "i", scope: !8538, file: !3, line: 1821, type: !188)
!8542 = !DILocation(line: 1821, column: 6, scope: !8538)
!8543 = !DILocation(line: 1823, column: 7, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 1823, column: 6)
!8545 = !DILocation(line: 1823, column: 18, scope: !8544)
!8546 = !DILocation(line: 1823, column: 6, scope: !8538)
!8547 = !DILocation(line: 1824, column: 3, scope: !8544)
!8548 = !DILocalVariable(name: "__ret_warn_on", scope: !8549, file: !3, line: 1827, type: !188)
!8549 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 1827, column: 2)
!8550 = !DILocation(line: 1827, column: 2, scope: !8549)
!8551 = !DILocation(line: 1827, column: 2, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8549, file: !3, line: 1827, column: 2)
!8553 = !DILocation(line: 1827, column: 2, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 1827, column: 2)
!8555 = !DILocation(line: 1827, column: 2, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8554, file: !3, line: 1827, column: 2)
!8557 = !DILocation(line: 1827, column: 2, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8554, file: !3, line: 1827, column: 2)
!8559 = !{i32 -2140640120, i32 -2140640091, i32 -2140640045, i32 -2140639987, i32 -2140639933, i32 -2140639879, i32 -2140639824, i32 -2140639793}
!8560 = !DILocation(line: 1827, column: 2, scope: !8561)
!8561 = distinct !DILexicalBlock(scope: !8554, file: !3, line: 1827, column: 2)
!8562 = !{i32 -2140639392, i32 -2140639385, i32 -2140639333, i32 -2140639302, i32 -2140639272}
!8563 = !DILocation(line: 1827, column: 2, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8554, file: !3, line: 1827, column: 2)
!8565 = !DILocation(line: 1829, column: 6, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 1829, column: 6)
!8567 = !DILocation(line: 1829, column: 17, scope: !8566)
!8568 = !DILocation(line: 1829, column: 6, scope: !8538)
!8569 = !DILocation(line: 1830, column: 12, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8571, file: !3, line: 1830, column: 3)
!8571 = distinct !DILexicalBlock(scope: !8566, file: !3, line: 1829, column: 26)
!8572 = !DILocation(line: 1830, column: 23, scope: !8570)
!8573 = !DILocation(line: 1830, column: 39, scope: !8570)
!8574 = !DILocation(line: 1830, column: 10, scope: !8570)
!8575 = !DILocation(line: 1830, column: 8, scope: !8570)
!8576 = !DILocation(line: 1830, column: 44, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8570, file: !3, line: 1830, column: 3)
!8578 = !DILocation(line: 1830, column: 46, scope: !8577)
!8579 = !DILocation(line: 1830, column: 3, scope: !8570)
!8580 = !DILocation(line: 1831, column: 22, scope: !8577)
!8581 = !DILocation(line: 1831, column: 33, scope: !8577)
!8582 = !DILocation(line: 1831, column: 44, scope: !8577)
!8583 = !DILocation(line: 1831, column: 4, scope: !8577)
!8584 = !DILocation(line: 1830, column: 53, scope: !8577)
!8585 = !DILocation(line: 1830, column: 3, scope: !8577)
!8586 = distinct !{!8586, !8579, !8587}
!8587 = !DILocation(line: 1831, column: 46, scope: !8570)
!8588 = !DILocation(line: 1832, column: 2, scope: !8571)
!8589 = !DILocation(line: 1834, column: 11, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 1834, column: 2)
!8591 = !DILocation(line: 1834, column: 22, scope: !8590)
!8592 = !DILocation(line: 1834, column: 38, scope: !8590)
!8593 = !DILocation(line: 1834, column: 9, scope: !8590)
!8594 = !DILocation(line: 1834, column: 7, scope: !8590)
!8595 = !DILocation(line: 1834, column: 43, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 1834, column: 2)
!8597 = !DILocation(line: 1834, column: 45, scope: !8596)
!8598 = !DILocation(line: 1834, column: 2, scope: !8590)
!8599 = !DILocation(line: 1835, column: 17, scope: !8596)
!8600 = !DILocation(line: 1835, column: 28, scope: !8596)
!8601 = !DILocation(line: 1835, column: 39, scope: !8596)
!8602 = !DILocation(line: 1835, column: 3, scope: !8596)
!8603 = !DILocation(line: 1834, column: 52, scope: !8596)
!8604 = !DILocation(line: 1834, column: 2, scope: !8596)
!8605 = distinct !{!8605, !8598, !8606}
!8606 = !DILocation(line: 1835, column: 41, scope: !8590)
!8607 = !DILocation(line: 1837, column: 21, scope: !8538)
!8608 = !DILocation(line: 1837, column: 2, scope: !8538)
!8609 = !DILocation(line: 1839, column: 8, scope: !8538)
!8610 = !DILocation(line: 1839, column: 19, scope: !8538)
!8611 = !DILocation(line: 1839, column: 2, scope: !8538)
!8612 = !DILocation(line: 1840, column: 2, scope: !8538)
!8613 = !DILocation(line: 1840, column: 13, scope: !8538)
!8614 = !DILocation(line: 1840, column: 24, scope: !8538)
!8615 = !DILocation(line: 1841, column: 2, scope: !8538)
!8616 = !DILocation(line: 1841, column: 13, scope: !8538)
!8617 = !DILocation(line: 1841, column: 29, scope: !8538)
!8618 = !DILabel(scope: !8538, name: "put_opp_table", file: !3, line: 1843)
!8619 = !DILocation(line: 1843, column: 1, scope: !8538)
!8620 = !DILocation(line: 1844, column: 27, scope: !8538)
!8621 = !DILocation(line: 1844, column: 2, scope: !8538)
!8622 = !DILocation(line: 1845, column: 1, scope: !8538)
!8623 = distinct !DISubprogram(name: "regulator_disable", scope: !4937, file: !4937, line: 415, type: !8624, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8624 = !DISubroutineType(types: !8625)
!8625 = !{!188, !4935}
!8626 = !DILocalVariable(name: "regulator", arg: 1, scope: !8623, file: !4937, line: 415, type: !4935)
!8627 = !DILocation(line: 415, column: 55, scope: !8623)
!8628 = !DILocation(line: 417, column: 2, scope: !8623)
!8629 = distinct !DISubprogram(name: "_free_set_opp_data", scope: !3, file: !3, line: 1731, type: !5184, scopeLine: 1732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8630 = !DILocalVariable(name: "opp_table", arg: 1, scope: !8629, file: !3, line: 1731, type: !221)
!8631 = !DILocation(line: 1731, column: 50, scope: !8629)
!8632 = !DILocation(line: 1733, column: 8, scope: !8629)
!8633 = !DILocation(line: 1733, column: 19, scope: !8629)
!8634 = !DILocation(line: 1733, column: 2, scope: !8629)
!8635 = !DILocation(line: 1734, column: 2, scope: !8629)
!8636 = !DILocation(line: 1734, column: 13, scope: !8629)
!8637 = !DILocation(line: 1734, column: 26, scope: !8629)
!8638 = !DILocation(line: 1735, column: 1, scope: !8629)
!8639 = distinct !DISubprogram(name: "dev_pm_opp_set_clkname", scope: !3, file: !3, line: 1860, type: !8224, scopeLine: 1861, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8640 = !DILocalVariable(name: "dev", arg: 1, scope: !8639, file: !3, line: 1860, type: !1739)
!8641 = !DILocation(line: 1860, column: 57, scope: !8639)
!8642 = !DILocalVariable(name: "name", arg: 2, scope: !8639, file: !3, line: 1860, type: !289)
!8643 = !DILocation(line: 1860, column: 74, scope: !8639)
!8644 = !DILocalVariable(name: "opp_table", scope: !8639, file: !3, line: 1862, type: !221)
!8645 = !DILocation(line: 1862, column: 20, scope: !8639)
!8646 = !DILocalVariable(name: "ret", scope: !8639, file: !3, line: 1863, type: !188)
!8647 = !DILocation(line: 1863, column: 6, scope: !8639)
!8648 = !DILocation(line: 1865, column: 39, scope: !8639)
!8649 = !DILocation(line: 1865, column: 14, scope: !8639)
!8650 = !DILocation(line: 1865, column: 12, scope: !8639)
!8651 = !DILocation(line: 1866, column: 13, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 1866, column: 6)
!8653 = !DILocation(line: 1866, column: 6, scope: !8652)
!8654 = !DILocation(line: 1866, column: 6, scope: !8639)
!8655 = !DILocation(line: 1867, column: 10, scope: !8652)
!8656 = !DILocation(line: 1867, column: 3, scope: !8652)
!8657 = !DILocalVariable(name: "__ret_warn_on", scope: !8658, file: !3, line: 1870, type: !188)
!8658 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 1870, column: 6)
!8659 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 1870, column: 6)
!8660 = !DILocation(line: 1870, column: 6, scope: !8658)
!8661 = !DILocation(line: 1870, column: 6, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8658, file: !3, line: 1870, column: 6)
!8663 = !DILocation(line: 1870, column: 6, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8662, file: !3, line: 1870, column: 6)
!8665 = !DILocation(line: 1870, column: 6, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8664, file: !3, line: 1870, column: 6)
!8667 = !DILocation(line: 1870, column: 6, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8664, file: !3, line: 1870, column: 6)
!8669 = !{i32 -2140638538, i32 -2140638509, i32 -2140638463, i32 -2140638405, i32 -2140638351, i32 -2140638297, i32 -2140638242, i32 -2140638211}
!8670 = !DILocation(line: 1870, column: 6, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !8664, file: !3, line: 1870, column: 6)
!8672 = !{i32 -2140637810, i32 -2140637803, i32 -2140637751, i32 -2140637720, i32 -2140637690}
!8673 = !DILocation(line: 1870, column: 6, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8664, file: !3, line: 1870, column: 6)
!8675 = !DILocation(line: 1870, column: 6, scope: !8659)
!8676 = !DILocation(line: 1870, column: 6, scope: !8639)
!8677 = !DILocation(line: 1871, column: 7, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 1870, column: 50)
!8679 = !DILocation(line: 1872, column: 3, scope: !8678)
!8680 = !DILocation(line: 1876, column: 14, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 1876, column: 6)
!8682 = !DILocation(line: 1876, column: 25, scope: !8681)
!8683 = !DILocation(line: 1876, column: 7, scope: !8681)
!8684 = !DILocation(line: 1876, column: 6, scope: !8639)
!8685 = !DILocation(line: 1877, column: 11, scope: !8681)
!8686 = !DILocation(line: 1877, column: 22, scope: !8681)
!8687 = !DILocation(line: 1877, column: 3, scope: !8681)
!8688 = !DILocation(line: 1880, column: 27, scope: !8639)
!8689 = !DILocation(line: 1880, column: 32, scope: !8639)
!8690 = !DILocation(line: 1880, column: 19, scope: !8639)
!8691 = !DILocation(line: 1880, column: 2, scope: !8639)
!8692 = !DILocation(line: 1880, column: 13, scope: !8639)
!8693 = !DILocation(line: 1880, column: 17, scope: !8639)
!8694 = !DILocation(line: 1881, column: 13, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 1881, column: 6)
!8696 = !DILocation(line: 1881, column: 24, scope: !8695)
!8697 = !DILocation(line: 1881, column: 6, scope: !8695)
!8698 = !DILocation(line: 1881, column: 6, scope: !8639)
!8699 = !DILocation(line: 1882, column: 17, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 1881, column: 30)
!8701 = !DILocation(line: 1882, column: 28, scope: !8700)
!8702 = !DILocation(line: 1882, column: 9, scope: !8700)
!8703 = !DILocation(line: 1882, column: 7, scope: !8700)
!8704 = !DILocation(line: 1883, column: 7, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8700, file: !3, line: 1883, column: 7)
!8706 = !DILocation(line: 1883, column: 11, scope: !8705)
!8707 = !DILocation(line: 1883, column: 7, scope: !8700)
!8708 = !DILocation(line: 1884, column: 4, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8705, file: !3, line: 1883, column: 29)
!8710 = !DILocation(line: 1886, column: 3, scope: !8709)
!8711 = !DILocation(line: 1887, column: 3, scope: !8700)
!8712 = !DILocation(line: 1890, column: 9, scope: !8639)
!8713 = !DILocation(line: 1890, column: 2, scope: !8639)
!8714 = !DILabel(scope: !8639, name: "err", file: !3, line: 1892)
!8715 = !DILocation(line: 1892, column: 1, scope: !8639)
!8716 = !DILocation(line: 1893, column: 27, scope: !8639)
!8717 = !DILocation(line: 1893, column: 2, scope: !8639)
!8718 = !DILocation(line: 1895, column: 17, scope: !8639)
!8719 = !DILocation(line: 1895, column: 9, scope: !8639)
!8720 = !DILocation(line: 1895, column: 2, scope: !8639)
!8721 = !DILocation(line: 1896, column: 1, scope: !8639)
!8722 = distinct !DISubprogram(name: "dev_pm_opp_put_clkname", scope: !3, file: !3, line: 1903, type: !5184, scopeLine: 1904, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8723 = !DILocalVariable(name: "opp_table", arg: 1, scope: !8722, file: !3, line: 1903, type: !221)
!8724 = !DILocation(line: 1903, column: 47, scope: !8722)
!8725 = !DILocalVariable(name: "__ret_warn_on", scope: !8726, file: !3, line: 1906, type: !188)
!8726 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 1906, column: 2)
!8727 = !DILocation(line: 1906, column: 2, scope: !8726)
!8728 = !DILocation(line: 1906, column: 2, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 1906, column: 2)
!8730 = !DILocation(line: 1906, column: 2, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8729, file: !3, line: 1906, column: 2)
!8732 = !DILocation(line: 1906, column: 2, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 1906, column: 2)
!8734 = !DILocation(line: 1906, column: 2, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 1906, column: 2)
!8736 = !{i32 -2140636834, i32 -2140636805, i32 -2140636759, i32 -2140636701, i32 -2140636647, i32 -2140636593, i32 -2140636538, i32 -2140636507}
!8737 = !DILocation(line: 1906, column: 2, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 1906, column: 2)
!8739 = !{i32 -2140636106, i32 -2140636099, i32 -2140636047, i32 -2140636016, i32 -2140635986}
!8740 = !DILocation(line: 1906, column: 2, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8731, file: !3, line: 1906, column: 2)
!8742 = !DILocation(line: 1908, column: 10, scope: !8722)
!8743 = !DILocation(line: 1908, column: 21, scope: !8722)
!8744 = !DILocation(line: 1908, column: 2, scope: !8722)
!8745 = !DILocation(line: 1909, column: 19, scope: !8722)
!8746 = !DILocation(line: 1909, column: 2, scope: !8722)
!8747 = !DILocation(line: 1909, column: 13, scope: !8722)
!8748 = !DILocation(line: 1909, column: 17, scope: !8722)
!8749 = !DILocation(line: 1911, column: 27, scope: !8722)
!8750 = !DILocation(line: 1911, column: 2, scope: !8722)
!8751 = !DILocation(line: 1912, column: 1, scope: !8722)
!8752 = distinct !DISubprogram(name: "dev_pm_opp_register_set_opp_helper", scope: !3, file: !3, line: 1925, type: !8753, scopeLine: 1927, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8753 = !DISubroutineType(types: !8754)
!8754 = !{!221, !1739, !4949}
!8755 = !DILocalVariable(name: "dev", arg: 1, scope: !8752, file: !3, line: 1925, type: !1739)
!8756 = !DILocation(line: 1925, column: 69, scope: !8752)
!8757 = !DILocalVariable(name: "set_opp", arg: 2, scope: !8752, file: !3, line: 1926, type: !4949)
!8758 = !DILocation(line: 1926, column: 10, scope: !8752)
!8759 = !DILocalVariable(name: "opp_table", scope: !8752, file: !3, line: 1928, type: !221)
!8760 = !DILocation(line: 1928, column: 20, scope: !8752)
!8761 = !DILocation(line: 1930, column: 7, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8752, file: !3, line: 1930, column: 6)
!8763 = !DILocation(line: 1930, column: 6, scope: !8752)
!8764 = !DILocation(line: 1931, column: 10, scope: !8762)
!8765 = !DILocation(line: 1931, column: 3, scope: !8762)
!8766 = !DILocation(line: 1933, column: 39, scope: !8752)
!8767 = !DILocation(line: 1933, column: 14, scope: !8752)
!8768 = !DILocation(line: 1933, column: 12, scope: !8752)
!8769 = !DILocation(line: 1934, column: 13, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8752, file: !3, line: 1934, column: 6)
!8771 = !DILocation(line: 1934, column: 6, scope: !8770)
!8772 = !DILocation(line: 1934, column: 6, scope: !8752)
!8773 = !DILocation(line: 1935, column: 10, scope: !8770)
!8774 = !DILocation(line: 1935, column: 3, scope: !8770)
!8775 = !DILocalVariable(name: "__ret_warn_on", scope: !8776, file: !3, line: 1938, type: !188)
!8776 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 1938, column: 6)
!8777 = distinct !DILexicalBlock(scope: !8752, file: !3, line: 1938, column: 6)
!8778 = !DILocation(line: 1938, column: 6, scope: !8776)
!8779 = !DILocation(line: 1938, column: 6, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8776, file: !3, line: 1938, column: 6)
!8781 = !DILocation(line: 1938, column: 6, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 1938, column: 6)
!8783 = !DILocation(line: 1938, column: 6, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 1938, column: 6)
!8785 = !DILocation(line: 1938, column: 6, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 1938, column: 6)
!8787 = !{i32 -2140635264, i32 -2140635235, i32 -2140635189, i32 -2140635131, i32 -2140635077, i32 -2140635023, i32 -2140634968, i32 -2140634937}
!8788 = !DILocation(line: 1938, column: 6, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 1938, column: 6)
!8790 = !{i32 -2140634536, i32 -2140634529, i32 -2140634477, i32 -2140634446, i32 -2140634416}
!8791 = !DILocation(line: 1938, column: 6, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8782, file: !3, line: 1938, column: 6)
!8793 = !DILocation(line: 1938, column: 6, scope: !8777)
!8794 = !DILocation(line: 1938, column: 6, scope: !8752)
!8795 = !DILocation(line: 1939, column: 28, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 1938, column: 50)
!8797 = !DILocation(line: 1939, column: 3, scope: !8796)
!8798 = !DILocation(line: 1940, column: 10, scope: !8796)
!8799 = !DILocation(line: 1940, column: 3, scope: !8796)
!8800 = !DILocation(line: 1944, column: 7, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8752, file: !3, line: 1944, column: 6)
!8802 = !DILocation(line: 1944, column: 18, scope: !8801)
!8803 = !DILocation(line: 1944, column: 6, scope: !8752)
!8804 = !DILocation(line: 1945, column: 24, scope: !8801)
!8805 = !DILocation(line: 1945, column: 3, scope: !8801)
!8806 = !DILocation(line: 1945, column: 14, scope: !8801)
!8807 = !DILocation(line: 1945, column: 22, scope: !8801)
!8808 = !DILocation(line: 1947, column: 9, scope: !8752)
!8809 = !DILocation(line: 1947, column: 2, scope: !8752)
!8810 = !DILocation(line: 1948, column: 1, scope: !8752)
!8811 = distinct !DISubprogram(name: "dev_pm_opp_unregister_set_opp_helper", scope: !3, file: !3, line: 1958, type: !5184, scopeLine: 1959, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8812 = !DILocalVariable(name: "opp_table", arg: 1, scope: !8811, file: !3, line: 1958, type: !221)
!8813 = !DILocation(line: 1958, column: 61, scope: !8811)
!8814 = !DILocalVariable(name: "__ret_warn_on", scope: !8815, file: !3, line: 1961, type: !188)
!8815 = distinct !DILexicalBlock(scope: !8811, file: !3, line: 1961, column: 2)
!8816 = !DILocation(line: 1961, column: 2, scope: !8815)
!8817 = !DILocation(line: 1961, column: 2, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8815, file: !3, line: 1961, column: 2)
!8819 = !DILocation(line: 1961, column: 2, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8818, file: !3, line: 1961, column: 2)
!8821 = !DILocation(line: 1961, column: 2, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 1961, column: 2)
!8823 = !DILocation(line: 1961, column: 2, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 1961, column: 2)
!8825 = !{i32 -2140633673, i32 -2140633644, i32 -2140633598, i32 -2140633540, i32 -2140633486, i32 -2140633432, i32 -2140633377, i32 -2140633346}
!8826 = !DILocation(line: 1961, column: 2, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 1961, column: 2)
!8828 = !{i32 -2140632945, i32 -2140632938, i32 -2140632886, i32 -2140632855, i32 -2140632825}
!8829 = !DILocation(line: 1961, column: 2, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 1961, column: 2)
!8831 = !DILocation(line: 1963, column: 2, scope: !8811)
!8832 = !DILocation(line: 1963, column: 13, scope: !8811)
!8833 = !DILocation(line: 1963, column: 21, scope: !8811)
!8834 = !DILocation(line: 1964, column: 27, scope: !8811)
!8835 = !DILocation(line: 1964, column: 2, scope: !8811)
!8836 = !DILocation(line: 1965, column: 1, scope: !8811)
!8837 = distinct !DISubprogram(name: "dev_pm_opp_attach_genpd", scope: !3, file: !3, line: 2009, type: !8838, scopeLine: 2011, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8838 = !DISubroutineType(types: !8839)
!8839 = !{!221, !1739, !4852, !8840}
!8840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4922, size: 64)
!8841 = !DILocalVariable(name: "dev", arg: 1, scope: !8837, file: !3, line: 2009, type: !1739)
!8842 = !DILocation(line: 2009, column: 58, scope: !8837)
!8843 = !DILocalVariable(name: "names", arg: 2, scope: !8837, file: !3, line: 2010, type: !4852)
!8844 = !DILocation(line: 2010, column: 16, scope: !8837)
!8845 = !DILocalVariable(name: "virt_devs", arg: 3, scope: !8837, file: !3, line: 2010, type: !8840)
!8846 = !DILocation(line: 2010, column: 40, scope: !8837)
!8847 = !DILocalVariable(name: "opp_table", scope: !8837, file: !3, line: 2012, type: !221)
!8848 = !DILocation(line: 2012, column: 20, scope: !8837)
!8849 = !DILocalVariable(name: "virt_dev", scope: !8837, file: !3, line: 2013, type: !1739)
!8850 = !DILocation(line: 2013, column: 17, scope: !8837)
!8851 = !DILocalVariable(name: "index", scope: !8837, file: !3, line: 2014, type: !188)
!8852 = !DILocation(line: 2014, column: 6, scope: !8837)
!8853 = !DILocalVariable(name: "ret", scope: !8837, file: !3, line: 2014, type: !188)
!8854 = !DILocation(line: 2014, column: 17, scope: !8837)
!8855 = !DILocalVariable(name: "name", scope: !8837, file: !3, line: 2015, type: !4852)
!8856 = !DILocation(line: 2015, column: 15, scope: !8837)
!8857 = !DILocation(line: 2015, column: 22, scope: !8837)
!8858 = !DILocation(line: 2017, column: 39, scope: !8837)
!8859 = !DILocation(line: 2017, column: 14, scope: !8837)
!8860 = !DILocation(line: 2017, column: 12, scope: !8837)
!8861 = !DILocation(line: 2018, column: 13, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 2018, column: 6)
!8863 = !DILocation(line: 2018, column: 6, scope: !8862)
!8864 = !DILocation(line: 2018, column: 6, scope: !8837)
!8865 = !DILocation(line: 2019, column: 10, scope: !8862)
!8866 = !DILocation(line: 2019, column: 3, scope: !8862)
!8867 = !DILocation(line: 2021, column: 6, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 2021, column: 6)
!8869 = !DILocation(line: 2021, column: 17, scope: !8868)
!8870 = !DILocation(line: 2021, column: 6, scope: !8837)
!8871 = !DILocation(line: 2022, column: 10, scope: !8868)
!8872 = !DILocation(line: 2022, column: 3, scope: !8868)
!8873 = !DILocation(line: 2029, column: 7, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 2029, column: 6)
!8875 = !DILocation(line: 2029, column: 18, scope: !8874)
!8876 = !DILocation(line: 2029, column: 6, scope: !8837)
!8877 = !DILocation(line: 2030, column: 7, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8874, file: !3, line: 2029, column: 38)
!8879 = !DILocation(line: 2031, column: 3, scope: !8878)
!8880 = !DILocation(line: 2034, column: 14, scope: !8837)
!8881 = !DILocation(line: 2034, column: 25, scope: !8837)
!8882 = !DILocation(line: 2034, column: 2, scope: !8837)
!8883 = !DILocation(line: 2036, column: 39, scope: !8837)
!8884 = !DILocation(line: 2036, column: 50, scope: !8837)
!8885 = !DILocation(line: 2036, column: 31, scope: !8837)
!8886 = !DILocation(line: 2036, column: 2, scope: !8837)
!8887 = !DILocation(line: 2036, column: 13, scope: !8837)
!8888 = !DILocation(line: 2036, column: 29, scope: !8837)
!8889 = !DILocation(line: 2039, column: 7, scope: !8890)
!8890 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 2039, column: 6)
!8891 = !DILocation(line: 2039, column: 18, scope: !8890)
!8892 = !DILocation(line: 2039, column: 6, scope: !8837)
!8893 = !DILocation(line: 2040, column: 3, scope: !8890)
!8894 = !DILocation(line: 2042, column: 2, scope: !8837)
!8895 = !DILocation(line: 2042, column: 10, scope: !8837)
!8896 = !DILocation(line: 2042, column: 9, scope: !8837)
!8897 = !DILocation(line: 2043, column: 7, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 2043, column: 7)
!8899 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 2042, column: 16)
!8900 = !DILocation(line: 2043, column: 16, scope: !8898)
!8901 = !DILocation(line: 2043, column: 27, scope: !8898)
!8902 = !DILocation(line: 2043, column: 13, scope: !8898)
!8903 = !DILocation(line: 2043, column: 7, scope: !8899)
!8904 = !DILocation(line: 2044, column: 4, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8898, file: !3, line: 2043, column: 47)
!8906 = !DILocation(line: 2046, column: 4, scope: !8905)
!8907 = !DILocation(line: 2049, column: 43, scope: !8899)
!8908 = !DILocation(line: 2049, column: 49, scope: !8899)
!8909 = !DILocation(line: 2049, column: 48, scope: !8899)
!8910 = !DILocation(line: 2049, column: 14, scope: !8899)
!8911 = !DILocation(line: 2049, column: 12, scope: !8899)
!8912 = !DILocation(line: 2050, column: 14, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 2050, column: 7)
!8914 = !DILocation(line: 2050, column: 7, scope: !8913)
!8915 = !DILocation(line: 2050, column: 7, scope: !8899)
!8916 = !DILocation(line: 2051, column: 18, scope: !8917)
!8917 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 2050, column: 25)
!8918 = !DILocation(line: 2051, column: 10, scope: !8917)
!8919 = !DILocation(line: 2051, column: 8, scope: !8917)
!8920 = !DILocation(line: 2052, column: 4, scope: !8917)
!8921 = !DILocation(line: 2053, column: 4, scope: !8917)
!8922 = !DILocation(line: 2056, column: 39, scope: !8899)
!8923 = !DILocation(line: 2056, column: 3, scope: !8899)
!8924 = !DILocation(line: 2056, column: 14, scope: !8899)
!8925 = !DILocation(line: 2056, column: 30, scope: !8899)
!8926 = !DILocation(line: 2056, column: 37, scope: !8899)
!8927 = !DILocation(line: 2057, column: 8, scope: !8899)
!8928 = !DILocation(line: 2058, column: 7, scope: !8899)
!8929 = distinct !{!8929, !8894, !8930}
!8930 = !DILocation(line: 2059, column: 2, scope: !8837)
!8931 = !DILocation(line: 2061, column: 6, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 2061, column: 6)
!8933 = !DILocation(line: 2061, column: 6, scope: !8837)
!8934 = !DILocation(line: 2062, column: 16, scope: !8932)
!8935 = !DILocation(line: 2062, column: 27, scope: !8932)
!8936 = !DILocation(line: 2062, column: 4, scope: !8932)
!8937 = !DILocation(line: 2062, column: 14, scope: !8932)
!8938 = !DILocation(line: 2062, column: 3, scope: !8932)
!8939 = !DILocation(line: 2063, column: 16, scope: !8837)
!8940 = !DILocation(line: 2063, column: 27, scope: !8837)
!8941 = !DILocation(line: 2063, column: 2, scope: !8837)
!8942 = !DILocation(line: 2065, column: 9, scope: !8837)
!8943 = !DILocation(line: 2065, column: 2, scope: !8837)
!8944 = !DILabel(scope: !8837, name: "err", file: !3, line: 2067)
!8945 = !DILocation(line: 2067, column: 1, scope: !8837)
!8946 = !DILocation(line: 2068, column: 20, scope: !8837)
!8947 = !DILocation(line: 2068, column: 2, scope: !8837)
!8948 = !DILabel(scope: !8837, name: "unlock", file: !3, line: 2069)
!8949 = !DILocation(line: 2069, column: 1, scope: !8837)
!8950 = !DILocation(line: 2070, column: 16, scope: !8837)
!8951 = !DILocation(line: 2070, column: 27, scope: !8837)
!8952 = !DILocation(line: 2070, column: 2, scope: !8837)
!8953 = !DILabel(scope: !8837, name: "put_table", file: !3, line: 2072)
!8954 = !DILocation(line: 2072, column: 1, scope: !8837)
!8955 = !DILocation(line: 2073, column: 27, scope: !8837)
!8956 = !DILocation(line: 2073, column: 2, scope: !8837)
!8957 = !DILocation(line: 2075, column: 17, scope: !8837)
!8958 = !DILocation(line: 2075, column: 9, scope: !8837)
!8959 = !DILocation(line: 2075, column: 2, scope: !8837)
!8960 = !DILocation(line: 2076, column: 1, scope: !8837)
!8961 = distinct !DISubprogram(name: "kcalloc", scope: !148, file: !148, line: 601, type: !5371, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8962 = !DILocalVariable(name: "n", arg: 1, scope: !8961, file: !148, line: 601, type: !417)
!8963 = !DILocation(line: 601, column: 36, scope: !8961)
!8964 = !DILocalVariable(name: "size", arg: 2, scope: !8961, file: !148, line: 601, type: !417)
!8965 = !DILocation(line: 601, column: 46, scope: !8961)
!8966 = !DILocalVariable(name: "flags", arg: 3, scope: !8961, file: !148, line: 601, type: !163)
!8967 = !DILocation(line: 601, column: 58, scope: !8961)
!8968 = !DILocation(line: 603, column: 23, scope: !8961)
!8969 = !DILocation(line: 603, column: 26, scope: !8961)
!8970 = !DILocation(line: 603, column: 32, scope: !8961)
!8971 = !DILocation(line: 603, column: 38, scope: !8961)
!8972 = !DILocation(line: 603, column: 9, scope: !8961)
!8973 = !DILocation(line: 603, column: 2, scope: !8961)
!8974 = distinct !DISubprogram(name: "_opp_detach_genpd", scope: !3, file: !3, line: 1968, type: !5184, scopeLine: 1969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!8975 = !DILocalVariable(name: "opp_table", arg: 1, scope: !8974, file: !3, line: 1968, type: !221)
!8976 = !DILocation(line: 1968, column: 49, scope: !8974)
!8977 = !DILocalVariable(name: "index", scope: !8974, file: !3, line: 1970, type: !188)
!8978 = !DILocation(line: 1970, column: 6, scope: !8974)
!8979 = !DILocation(line: 1972, column: 7, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8974, file: !3, line: 1972, column: 6)
!8981 = !DILocation(line: 1972, column: 18, scope: !8980)
!8982 = !DILocation(line: 1972, column: 6, scope: !8974)
!8983 = !DILocation(line: 1973, column: 3, scope: !8980)
!8984 = !DILocation(line: 1975, column: 13, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8974, file: !3, line: 1975, column: 2)
!8986 = !DILocation(line: 1975, column: 7, scope: !8985)
!8987 = !DILocation(line: 1975, column: 18, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8985, file: !3, line: 1975, column: 2)
!8989 = !DILocation(line: 1975, column: 26, scope: !8988)
!8990 = !DILocation(line: 1975, column: 37, scope: !8988)
!8991 = !DILocation(line: 1975, column: 24, scope: !8988)
!8992 = !DILocation(line: 1975, column: 2, scope: !8985)
!8993 = !DILocation(line: 1976, column: 8, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 1976, column: 7)
!8995 = distinct !DILexicalBlock(scope: !8988, file: !3, line: 1975, column: 66)
!8996 = !DILocation(line: 1976, column: 19, scope: !8994)
!8997 = !DILocation(line: 1976, column: 35, scope: !8994)
!8998 = !DILocation(line: 1976, column: 7, scope: !8995)
!8999 = !DILocation(line: 1977, column: 4, scope: !8994)
!9000 = !DILocation(line: 1979, column: 24, scope: !8995)
!9001 = !DILocation(line: 1979, column: 35, scope: !8995)
!9002 = !DILocation(line: 1979, column: 51, scope: !8995)
!9003 = !DILocation(line: 1979, column: 3, scope: !8995)
!9004 = !DILocation(line: 1980, column: 3, scope: !8995)
!9005 = !DILocation(line: 1980, column: 14, scope: !8995)
!9006 = !DILocation(line: 1980, column: 30, scope: !8995)
!9007 = !DILocation(line: 1980, column: 37, scope: !8995)
!9008 = !DILocation(line: 1981, column: 2, scope: !8995)
!9009 = !DILocation(line: 1975, column: 62, scope: !8988)
!9010 = !DILocation(line: 1975, column: 2, scope: !8988)
!9011 = distinct !{!9011, !8992, !9012}
!9012 = !DILocation(line: 1981, column: 2, scope: !8985)
!9013 = !DILocation(line: 1983, column: 8, scope: !8974)
!9014 = !DILocation(line: 1983, column: 19, scope: !8974)
!9015 = !DILocation(line: 1983, column: 2, scope: !8974)
!9016 = !DILocation(line: 1984, column: 2, scope: !8974)
!9017 = !DILocation(line: 1984, column: 13, scope: !8974)
!9018 = !DILocation(line: 1984, column: 29, scope: !8974)
!9019 = !DILocation(line: 1985, column: 1, scope: !8974)
!9020 = distinct !DISubprogram(name: "dev_pm_opp_detach_genpd", scope: !3, file: !3, line: 2086, type: !5184, scopeLine: 2087, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9021 = !DILocalVariable(name: "opp_table", arg: 1, scope: !9020, file: !3, line: 2086, type: !221)
!9022 = !DILocation(line: 2086, column: 48, scope: !9020)
!9023 = !DILocation(line: 2092, column: 14, scope: !9020)
!9024 = !DILocation(line: 2092, column: 25, scope: !9020)
!9025 = !DILocation(line: 2092, column: 2, scope: !9020)
!9026 = !DILocation(line: 2093, column: 20, scope: !9020)
!9027 = !DILocation(line: 2093, column: 2, scope: !9020)
!9028 = !DILocation(line: 2094, column: 16, scope: !9020)
!9029 = !DILocation(line: 2094, column: 27, scope: !9020)
!9030 = !DILocation(line: 2094, column: 2, scope: !9020)
!9031 = !DILocation(line: 2096, column: 27, scope: !9020)
!9032 = !DILocation(line: 2096, column: 2, scope: !9020)
!9033 = !DILocation(line: 2097, column: 1, scope: !9020)
!9034 = distinct !DISubprogram(name: "dev_pm_opp_xlate_performance_state", scope: !3, file: !3, line: 2113, type: !9035, scopeLine: 2116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9035 = !DISubroutineType(types: !9036)
!9036 = !{!188, !221, !221, !7}
!9037 = !DILocalVariable(name: "src_table", arg: 1, scope: !9034, file: !3, line: 2113, type: !221)
!9038 = !DILocation(line: 2113, column: 58, scope: !9034)
!9039 = !DILocalVariable(name: "dst_table", arg: 2, scope: !9034, file: !3, line: 2114, type: !221)
!9040 = !DILocation(line: 2114, column: 30, scope: !9034)
!9041 = !DILocalVariable(name: "pstate", arg: 3, scope: !9034, file: !3, line: 2115, type: !7)
!9042 = !DILocation(line: 2115, column: 25, scope: !9034)
!9043 = !DILocalVariable(name: "opp", scope: !9034, file: !3, line: 2117, type: !166)
!9044 = !DILocation(line: 2117, column: 21, scope: !9034)
!9045 = !DILocalVariable(name: "dest_pstate", scope: !9034, file: !3, line: 2118, type: !188)
!9046 = !DILocation(line: 2118, column: 6, scope: !9034)
!9047 = !DILocalVariable(name: "i", scope: !9034, file: !3, line: 2119, type: !188)
!9048 = !DILocation(line: 2119, column: 6, scope: !9034)
!9049 = !DILocation(line: 2128, column: 7, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 2128, column: 6)
!9051 = !DILocation(line: 2128, column: 18, scope: !9050)
!9052 = !DILocation(line: 2128, column: 6, scope: !9034)
!9053 = !DILocation(line: 2129, column: 10, scope: !9050)
!9054 = !DILocation(line: 2129, column: 3, scope: !9050)
!9055 = !DILocation(line: 2131, column: 9, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 2131, column: 2)
!9057 = !DILocation(line: 2131, column: 7, scope: !9056)
!9058 = !DILocation(line: 2131, column: 14, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 2131, column: 2)
!9060 = !DILocation(line: 2131, column: 18, scope: !9059)
!9061 = !DILocation(line: 2131, column: 29, scope: !9059)
!9062 = !DILocation(line: 2131, column: 16, scope: !9059)
!9063 = !DILocation(line: 2131, column: 2, scope: !9056)
!9064 = !DILocation(line: 2132, column: 7, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9066, file: !3, line: 2132, column: 7)
!9066 = distinct !DILexicalBlock(scope: !9059, file: !3, line: 2131, column: 54)
!9067 = !DILocation(line: 2132, column: 18, scope: !9065)
!9068 = !DILocation(line: 2132, column: 38, scope: !9065)
!9069 = !DILocation(line: 2132, column: 42, scope: !9065)
!9070 = !DILocation(line: 2132, column: 48, scope: !9065)
!9071 = !DILocation(line: 2132, column: 59, scope: !9065)
!9072 = !DILocation(line: 2132, column: 45, scope: !9065)
!9073 = !DILocation(line: 2132, column: 7, scope: !9066)
!9074 = !DILocation(line: 2133, column: 4, scope: !9065)
!9075 = !DILocation(line: 2134, column: 2, scope: !9066)
!9076 = !DILocation(line: 2131, column: 50, scope: !9059)
!9077 = !DILocation(line: 2131, column: 2, scope: !9059)
!9078 = distinct !{!9078, !9063, !9079}
!9079 = !DILocation(line: 2134, column: 2, scope: !9056)
!9080 = !DILocation(line: 2136, column: 6, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 2136, column: 6)
!9082 = !DILocation(line: 2136, column: 6, scope: !9034)
!9083 = !DILocation(line: 2137, column: 3, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9081, file: !3, line: 2136, column: 52)
!9085 = !DILocation(line: 2139, column: 3, scope: !9084)
!9086 = !DILocation(line: 2142, column: 14, scope: !9034)
!9087 = !DILocation(line: 2142, column: 25, scope: !9034)
!9088 = !DILocation(line: 2142, column: 2, scope: !9034)
!9089 = !DILocalVariable(name: "__mptr", scope: !9090, file: !3, line: 2144, type: !165)
!9090 = distinct !DILexicalBlock(scope: !9091, file: !3, line: 2144, column: 2)
!9091 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 2144, column: 2)
!9092 = !DILocation(line: 2144, column: 2, scope: !9090)
!9093 = !DILocation(line: 2144, column: 2, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 2144, column: 2)
!9095 = !DILocation(line: 2144, column: 2, scope: !9091)
!9096 = !DILocation(line: 2144, column: 2, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9091, file: !3, line: 2144, column: 2)
!9098 = !DILocation(line: 2145, column: 7, scope: !9099)
!9099 = distinct !DILexicalBlock(scope: !9100, file: !3, line: 2145, column: 7)
!9100 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 2144, column: 55)
!9101 = !DILocation(line: 2145, column: 12, scope: !9099)
!9102 = !DILocation(line: 2145, column: 22, scope: !9099)
!9103 = !DILocation(line: 2145, column: 19, scope: !9099)
!9104 = !DILocation(line: 2145, column: 7, scope: !9100)
!9105 = !DILocation(line: 2146, column: 18, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 2145, column: 30)
!9107 = !DILocation(line: 2146, column: 23, scope: !9106)
!9108 = !DILocation(line: 2146, column: 37, scope: !9106)
!9109 = !DILocation(line: 2146, column: 41, scope: !9106)
!9110 = !DILocation(line: 2146, column: 16, scope: !9106)
!9111 = !DILocation(line: 2147, column: 4, scope: !9106)
!9112 = !DILocation(line: 2149, column: 2, scope: !9100)
!9113 = !DILocalVariable(name: "__mptr", scope: !9114, file: !3, line: 2144, type: !165)
!9114 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 2144, column: 2)
!9115 = !DILocation(line: 2144, column: 2, scope: !9114)
!9116 = !DILocation(line: 2144, column: 2, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9114, file: !3, line: 2144, column: 2)
!9118 = distinct !{!9118, !9095, !9119}
!9119 = !DILocation(line: 2149, column: 2, scope: !9091)
!9120 = !DILocation(line: 2151, column: 2, scope: !9034)
!9121 = !DILabel(scope: !9034, name: "unlock", file: !3, line: 2154)
!9122 = !DILocation(line: 2154, column: 1, scope: !9034)
!9123 = !DILocation(line: 2155, column: 16, scope: !9034)
!9124 = !DILocation(line: 2155, column: 27, scope: !9034)
!9125 = !DILocation(line: 2155, column: 2, scope: !9034)
!9126 = !DILocation(line: 2157, column: 9, scope: !9034)
!9127 = !DILocation(line: 2157, column: 2, scope: !9034)
!9128 = !DILocation(line: 2158, column: 1, scope: !9034)
!9129 = distinct !DISubprogram(name: "dev_pm_opp_add", scope: !3, file: !3, line: 2177, type: !9130, scopeLine: 2178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9130 = !DISubroutineType(types: !9131)
!9131 = !{!188, !1739, !197, !197}
!9132 = !DILocalVariable(name: "dev", arg: 1, scope: !9129, file: !3, line: 2177, type: !1739)
!9133 = !DILocation(line: 2177, column: 35, scope: !9129)
!9134 = !DILocalVariable(name: "freq", arg: 2, scope: !9129, file: !3, line: 2177, type: !197)
!9135 = !DILocation(line: 2177, column: 54, scope: !9129)
!9136 = !DILocalVariable(name: "u_volt", arg: 3, scope: !9129, file: !3, line: 2177, type: !197)
!9137 = !DILocation(line: 2177, column: 74, scope: !9129)
!9138 = !DILocalVariable(name: "opp_table", scope: !9129, file: !3, line: 2179, type: !221)
!9139 = !DILocation(line: 2179, column: 20, scope: !9129)
!9140 = !DILocalVariable(name: "ret", scope: !9129, file: !3, line: 2180, type: !188)
!9141 = !DILocation(line: 2180, column: 6, scope: !9129)
!9142 = !DILocation(line: 2182, column: 39, scope: !9129)
!9143 = !DILocation(line: 2182, column: 14, scope: !9129)
!9144 = !DILocation(line: 2182, column: 12, scope: !9129)
!9145 = !DILocation(line: 2183, column: 13, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9129, file: !3, line: 2183, column: 6)
!9147 = !DILocation(line: 2183, column: 6, scope: !9146)
!9148 = !DILocation(line: 2183, column: 6, scope: !9129)
!9149 = !DILocation(line: 2184, column: 18, scope: !9146)
!9150 = !DILocation(line: 2184, column: 10, scope: !9146)
!9151 = !DILocation(line: 2184, column: 3, scope: !9146)
!9152 = !DILocation(line: 2187, column: 2, scope: !9129)
!9153 = !DILocation(line: 2187, column: 13, scope: !9129)
!9154 = !DILocation(line: 2187, column: 29, scope: !9129)
!9155 = !DILocation(line: 2189, column: 20, scope: !9129)
!9156 = !DILocation(line: 2189, column: 31, scope: !9129)
!9157 = !DILocation(line: 2189, column: 36, scope: !9129)
!9158 = !DILocation(line: 2189, column: 42, scope: !9129)
!9159 = !DILocation(line: 2189, column: 8, scope: !9129)
!9160 = !DILocation(line: 2189, column: 6, scope: !9129)
!9161 = !DILocation(line: 2190, column: 6, scope: !9162)
!9162 = distinct !DILexicalBlock(scope: !9129, file: !3, line: 2190, column: 6)
!9163 = !DILocation(line: 2190, column: 6, scope: !9129)
!9164 = !DILocation(line: 2191, column: 28, scope: !9162)
!9165 = !DILocation(line: 2191, column: 3, scope: !9162)
!9166 = !DILocation(line: 2193, column: 9, scope: !9129)
!9167 = !DILocation(line: 2193, column: 2, scope: !9129)
!9168 = !DILocation(line: 2194, column: 1, scope: !9129)
!9169 = distinct !DISubprogram(name: "dev_pm_opp_adjust_voltage", scope: !3, file: !3, line: 2279, type: !9170, scopeLine: 2283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9170 = !DISubroutineType(types: !9171)
!9171 = !{!188, !1739, !197, !197, !197, !197}
!9172 = !DILocalVariable(name: "dev", arg: 1, scope: !9169, file: !3, line: 2279, type: !1739)
!9173 = !DILocation(line: 2279, column: 46, scope: !9169)
!9174 = !DILocalVariable(name: "freq", arg: 2, scope: !9169, file: !3, line: 2279, type: !197)
!9175 = !DILocation(line: 2279, column: 65, scope: !9169)
!9176 = !DILocalVariable(name: "u_volt", arg: 3, scope: !9169, file: !3, line: 2280, type: !197)
!9177 = !DILocation(line: 2280, column: 24, scope: !9169)
!9178 = !DILocalVariable(name: "u_volt_min", arg: 4, scope: !9169, file: !3, line: 2280, type: !197)
!9179 = !DILocation(line: 2280, column: 46, scope: !9169)
!9180 = !DILocalVariable(name: "u_volt_max", arg: 5, scope: !9169, file: !3, line: 2281, type: !197)
!9181 = !DILocation(line: 2281, column: 24, scope: !9169)
!9182 = !DILocalVariable(name: "opp_table", scope: !9169, file: !3, line: 2284, type: !221)
!9183 = !DILocation(line: 2284, column: 20, scope: !9169)
!9184 = !DILocalVariable(name: "tmp_opp", scope: !9169, file: !3, line: 2285, type: !166)
!9185 = !DILocation(line: 2285, column: 21, scope: !9169)
!9186 = !DILocalVariable(name: "opp", scope: !9169, file: !3, line: 2285, type: !166)
!9187 = !DILocation(line: 2285, column: 31, scope: !9169)
!9188 = !DILocation(line: 2285, column: 37, scope: !9169)
!9189 = !DILocalVariable(name: "r", scope: !9169, file: !3, line: 2286, type: !188)
!9190 = !DILocation(line: 2286, column: 6, scope: !9169)
!9191 = !DILocation(line: 2289, column: 30, scope: !9169)
!9192 = !DILocation(line: 2289, column: 14, scope: !9169)
!9193 = !DILocation(line: 2289, column: 12, scope: !9169)
!9194 = !DILocation(line: 2290, column: 13, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 2290, column: 6)
!9196 = !DILocation(line: 2290, column: 6, scope: !9195)
!9197 = !DILocation(line: 2290, column: 6, scope: !9169)
!9198 = !DILocation(line: 2291, column: 15, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9195, file: !3, line: 2290, column: 25)
!9200 = !DILocation(line: 2291, column: 7, scope: !9199)
!9201 = !DILocation(line: 2291, column: 5, scope: !9199)
!9202 = !DILocation(line: 2292, column: 3, scope: !9199)
!9203 = !DILocation(line: 2293, column: 10, scope: !9199)
!9204 = !DILocation(line: 2293, column: 3, scope: !9199)
!9205 = !DILocation(line: 2296, column: 14, scope: !9169)
!9206 = !DILocation(line: 2296, column: 25, scope: !9169)
!9207 = !DILocation(line: 2296, column: 2, scope: !9169)
!9208 = !DILocalVariable(name: "__mptr", scope: !9209, file: !3, line: 2299, type: !165)
!9209 = distinct !DILexicalBlock(scope: !9210, file: !3, line: 2299, column: 2)
!9210 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 2299, column: 2)
!9211 = !DILocation(line: 2299, column: 2, scope: !9209)
!9212 = !DILocation(line: 2299, column: 2, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9209, file: !3, line: 2299, column: 2)
!9214 = !DILocation(line: 2299, column: 2, scope: !9210)
!9215 = !DILocation(line: 2299, column: 2, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9210, file: !3, line: 2299, column: 2)
!9217 = !DILocation(line: 2300, column: 7, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9219, file: !3, line: 2300, column: 7)
!9219 = distinct !DILexicalBlock(scope: !9216, file: !3, line: 2299, column: 59)
!9220 = !DILocation(line: 2300, column: 16, scope: !9218)
!9221 = !DILocation(line: 2300, column: 24, scope: !9218)
!9222 = !DILocation(line: 2300, column: 21, scope: !9218)
!9223 = !DILocation(line: 2300, column: 7, scope: !9219)
!9224 = !DILocation(line: 2301, column: 10, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 2300, column: 30)
!9226 = !DILocation(line: 2301, column: 8, scope: !9225)
!9227 = !DILocation(line: 2302, column: 4, scope: !9225)
!9228 = !DILocation(line: 2304, column: 2, scope: !9219)
!9229 = !DILocalVariable(name: "__mptr", scope: !9230, file: !3, line: 2299, type: !165)
!9230 = distinct !DILexicalBlock(scope: !9216, file: !3, line: 2299, column: 2)
!9231 = !DILocation(line: 2299, column: 2, scope: !9230)
!9232 = !DILocation(line: 2299, column: 2, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9230, file: !3, line: 2299, column: 2)
!9234 = distinct !{!9234, !9214, !9235}
!9235 = !DILocation(line: 2304, column: 2, scope: !9210)
!9236 = !DILocation(line: 2306, column: 13, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 2306, column: 6)
!9238 = !DILocation(line: 2306, column: 6, scope: !9237)
!9239 = !DILocation(line: 2306, column: 6, scope: !9169)
!9240 = !DILocation(line: 2307, column: 15, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9237, file: !3, line: 2306, column: 19)
!9242 = !DILocation(line: 2307, column: 7, scope: !9241)
!9243 = !DILocation(line: 2307, column: 5, scope: !9241)
!9244 = !DILocation(line: 2308, column: 3, scope: !9241)
!9245 = !DILocation(line: 2312, column: 6, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 2312, column: 6)
!9247 = !DILocation(line: 2312, column: 11, scope: !9246)
!9248 = !DILocation(line: 2312, column: 21, scope: !9246)
!9249 = !DILocation(line: 2312, column: 31, scope: !9246)
!9250 = !DILocation(line: 2312, column: 28, scope: !9246)
!9251 = !DILocation(line: 2312, column: 6, scope: !9169)
!9252 = !DILocation(line: 2313, column: 3, scope: !9246)
!9253 = !DILocation(line: 2315, column: 26, scope: !9169)
!9254 = !DILocation(line: 2315, column: 2, scope: !9169)
!9255 = !DILocation(line: 2315, column: 7, scope: !9169)
!9256 = !DILocation(line: 2315, column: 17, scope: !9169)
!9257 = !DILocation(line: 2315, column: 24, scope: !9169)
!9258 = !DILocation(line: 2316, column: 30, scope: !9169)
!9259 = !DILocation(line: 2316, column: 2, scope: !9169)
!9260 = !DILocation(line: 2316, column: 7, scope: !9169)
!9261 = !DILocation(line: 2316, column: 17, scope: !9169)
!9262 = !DILocation(line: 2316, column: 28, scope: !9169)
!9263 = !DILocation(line: 2317, column: 30, scope: !9169)
!9264 = !DILocation(line: 2317, column: 2, scope: !9169)
!9265 = !DILocation(line: 2317, column: 7, scope: !9169)
!9266 = !DILocation(line: 2317, column: 17, scope: !9169)
!9267 = !DILocation(line: 2317, column: 28, scope: !9169)
!9268 = !DILocation(line: 2319, column: 17, scope: !9169)
!9269 = !DILocation(line: 2319, column: 2, scope: !9169)
!9270 = !DILocation(line: 2320, column: 16, scope: !9169)
!9271 = !DILocation(line: 2320, column: 27, scope: !9169)
!9272 = !DILocation(line: 2320, column: 2, scope: !9169)
!9273 = !DILocation(line: 2323, column: 32, scope: !9169)
!9274 = !DILocation(line: 2323, column: 43, scope: !9169)
!9275 = !DILocation(line: 2324, column: 10, scope: !9169)
!9276 = !DILocation(line: 2323, column: 2, scope: !9169)
!9277 = !DILocation(line: 2326, column: 17, scope: !9169)
!9278 = !DILocation(line: 2326, column: 2, scope: !9169)
!9279 = !DILocation(line: 2327, column: 2, scope: !9169)
!9280 = !DILabel(scope: !9169, name: "adjust_unlock", file: !3, line: 2329)
!9281 = !DILocation(line: 2329, column: 1, scope: !9169)
!9282 = !DILocation(line: 2330, column: 16, scope: !9169)
!9283 = !DILocation(line: 2330, column: 27, scope: !9169)
!9284 = !DILocation(line: 2330, column: 2, scope: !9169)
!9285 = !DILabel(scope: !9169, name: "adjust_put_table", file: !3, line: 2331)
!9286 = !DILocation(line: 2331, column: 1, scope: !9169)
!9287 = !DILocation(line: 2332, column: 27, scope: !9169)
!9288 = !DILocation(line: 2332, column: 2, scope: !9169)
!9289 = !DILocation(line: 2333, column: 9, scope: !9169)
!9290 = !DILocation(line: 2333, column: 2, scope: !9169)
!9291 = !DILocation(line: 2334, column: 1, scope: !9169)
!9292 = distinct !DISubprogram(name: "dev_pm_opp_enable", scope: !3, file: !3, line: 2350, type: !6352, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9293 = !DILocalVariable(name: "dev", arg: 1, scope: !9292, file: !3, line: 2350, type: !1739)
!9294 = !DILocation(line: 2350, column: 38, scope: !9292)
!9295 = !DILocalVariable(name: "freq", arg: 2, scope: !9292, file: !3, line: 2350, type: !197)
!9296 = !DILocation(line: 2350, column: 57, scope: !9292)
!9297 = !DILocation(line: 2352, column: 31, scope: !9292)
!9298 = !DILocation(line: 2352, column: 36, scope: !9292)
!9299 = !DILocation(line: 2352, column: 9, scope: !9292)
!9300 = !DILocation(line: 2352, column: 2, scope: !9292)
!9301 = distinct !DISubprogram(name: "_opp_set_availability", scope: !3, file: !3, line: 2210, type: !9302, scopeLine: 2212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9302 = !DISubroutineType(types: !9303)
!9303 = !{!188, !1739, !197, !190}
!9304 = !DILocalVariable(name: "dev", arg: 1, scope: !9301, file: !3, line: 2210, type: !1739)
!9305 = !DILocation(line: 2210, column: 49, scope: !9301)
!9306 = !DILocalVariable(name: "freq", arg: 2, scope: !9301, file: !3, line: 2210, type: !197)
!9307 = !DILocation(line: 2210, column: 68, scope: !9301)
!9308 = !DILocalVariable(name: "availability_req", arg: 3, scope: !9301, file: !3, line: 2211, type: !190)
!9309 = !DILocation(line: 2211, column: 11, scope: !9301)
!9310 = !DILocalVariable(name: "opp_table", scope: !9301, file: !3, line: 2213, type: !221)
!9311 = !DILocation(line: 2213, column: 20, scope: !9301)
!9312 = !DILocalVariable(name: "tmp_opp", scope: !9301, file: !3, line: 2214, type: !166)
!9313 = !DILocation(line: 2214, column: 21, scope: !9301)
!9314 = !DILocalVariable(name: "opp", scope: !9301, file: !3, line: 2214, type: !166)
!9315 = !DILocation(line: 2214, column: 31, scope: !9301)
!9316 = !DILocation(line: 2214, column: 37, scope: !9301)
!9317 = !DILocalVariable(name: "r", scope: !9301, file: !3, line: 2215, type: !188)
!9318 = !DILocation(line: 2215, column: 6, scope: !9301)
!9319 = !DILocation(line: 2218, column: 30, scope: !9301)
!9320 = !DILocation(line: 2218, column: 14, scope: !9301)
!9321 = !DILocation(line: 2218, column: 12, scope: !9301)
!9322 = !DILocation(line: 2219, column: 13, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 2219, column: 6)
!9324 = !DILocation(line: 2219, column: 6, scope: !9323)
!9325 = !DILocation(line: 2219, column: 6, scope: !9301)
!9326 = !DILocation(line: 2220, column: 15, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9323, file: !3, line: 2219, column: 25)
!9328 = !DILocation(line: 2220, column: 7, scope: !9327)
!9329 = !DILocation(line: 2220, column: 5, scope: !9327)
!9330 = !DILocation(line: 2221, column: 3, scope: !9327)
!9331 = !DILocation(line: 2222, column: 10, scope: !9327)
!9332 = !DILocation(line: 2222, column: 3, scope: !9327)
!9333 = !DILocation(line: 2225, column: 14, scope: !9301)
!9334 = !DILocation(line: 2225, column: 25, scope: !9301)
!9335 = !DILocation(line: 2225, column: 2, scope: !9301)
!9336 = !DILocalVariable(name: "__mptr", scope: !9337, file: !3, line: 2228, type: !165)
!9337 = distinct !DILexicalBlock(scope: !9338, file: !3, line: 2228, column: 2)
!9338 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 2228, column: 2)
!9339 = !DILocation(line: 2228, column: 2, scope: !9337)
!9340 = !DILocation(line: 2228, column: 2, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 2228, column: 2)
!9342 = !DILocation(line: 2228, column: 2, scope: !9338)
!9343 = !DILocation(line: 2228, column: 2, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9338, file: !3, line: 2228, column: 2)
!9345 = !DILocation(line: 2229, column: 7, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9347, file: !3, line: 2229, column: 7)
!9347 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 2228, column: 59)
!9348 = !DILocation(line: 2229, column: 16, scope: !9346)
!9349 = !DILocation(line: 2229, column: 24, scope: !9346)
!9350 = !DILocation(line: 2229, column: 21, scope: !9346)
!9351 = !DILocation(line: 2229, column: 7, scope: !9347)
!9352 = !DILocation(line: 2230, column: 10, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 2229, column: 30)
!9354 = !DILocation(line: 2230, column: 8, scope: !9353)
!9355 = !DILocation(line: 2231, column: 4, scope: !9353)
!9356 = !DILocation(line: 2233, column: 2, scope: !9347)
!9357 = !DILocalVariable(name: "__mptr", scope: !9358, file: !3, line: 2228, type: !165)
!9358 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 2228, column: 2)
!9359 = !DILocation(line: 2228, column: 2, scope: !9358)
!9360 = !DILocation(line: 2228, column: 2, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9358, file: !3, line: 2228, column: 2)
!9362 = distinct !{!9362, !9342, !9363}
!9363 = !DILocation(line: 2233, column: 2, scope: !9338)
!9364 = !DILocation(line: 2235, column: 13, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 2235, column: 6)
!9366 = !DILocation(line: 2235, column: 6, scope: !9365)
!9367 = !DILocation(line: 2235, column: 6, scope: !9301)
!9368 = !DILocation(line: 2236, column: 15, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 2235, column: 19)
!9370 = !DILocation(line: 2236, column: 7, scope: !9369)
!9371 = !DILocation(line: 2236, column: 5, scope: !9369)
!9372 = !DILocation(line: 2237, column: 3, scope: !9369)
!9373 = !DILocation(line: 2241, column: 6, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 2241, column: 6)
!9375 = !DILocation(line: 2241, column: 11, scope: !9374)
!9376 = !DILocation(line: 2241, column: 24, scope: !9374)
!9377 = !DILocation(line: 2241, column: 21, scope: !9374)
!9378 = !DILocation(line: 2241, column: 6, scope: !9301)
!9379 = !DILocation(line: 2242, column: 3, scope: !9374)
!9380 = !DILocation(line: 2244, column: 19, scope: !9301)
!9381 = !DILocation(line: 2244, column: 2, scope: !9301)
!9382 = !DILocation(line: 2244, column: 7, scope: !9301)
!9383 = !DILocation(line: 2244, column: 17, scope: !9301)
!9384 = !DILocation(line: 2246, column: 17, scope: !9301)
!9385 = !DILocation(line: 2246, column: 2, scope: !9301)
!9386 = !DILocation(line: 2247, column: 16, scope: !9301)
!9387 = !DILocation(line: 2247, column: 27, scope: !9301)
!9388 = !DILocation(line: 2247, column: 2, scope: !9301)
!9389 = !DILocation(line: 2250, column: 6, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9301, file: !3, line: 2250, column: 6)
!9391 = !DILocation(line: 2250, column: 6, scope: !9301)
!9392 = !DILocation(line: 2251, column: 33, scope: !9390)
!9393 = !DILocation(line: 2251, column: 44, scope: !9390)
!9394 = !DILocation(line: 2252, column: 11, scope: !9390)
!9395 = !DILocation(line: 2251, column: 3, scope: !9390)
!9396 = !DILocation(line: 2254, column: 33, scope: !9390)
!9397 = !DILocation(line: 2254, column: 44, scope: !9390)
!9398 = !DILocation(line: 2255, column: 30, scope: !9390)
!9399 = !DILocation(line: 2254, column: 3, scope: !9390)
!9400 = !DILocation(line: 2257, column: 17, scope: !9301)
!9401 = !DILocation(line: 2257, column: 2, scope: !9301)
!9402 = !DILocation(line: 2258, column: 2, scope: !9301)
!9403 = !DILabel(scope: !9301, name: "unlock", file: !3, line: 2260)
!9404 = !DILocation(line: 2260, column: 1, scope: !9301)
!9405 = !DILocation(line: 2261, column: 16, scope: !9301)
!9406 = !DILocation(line: 2261, column: 27, scope: !9301)
!9407 = !DILocation(line: 2261, column: 2, scope: !9301)
!9408 = !DILabel(scope: !9301, name: "put_table", file: !3, line: 2262)
!9409 = !DILocation(line: 2262, column: 1, scope: !9301)
!9410 = !DILocation(line: 2263, column: 27, scope: !9301)
!9411 = !DILocation(line: 2263, column: 2, scope: !9301)
!9412 = !DILocation(line: 2264, column: 9, scope: !9301)
!9413 = !DILocation(line: 2264, column: 2, scope: !9301)
!9414 = !DILocation(line: 2265, column: 1, scope: !9301)
!9415 = distinct !DISubprogram(name: "dev_pm_opp_disable", scope: !3, file: !3, line: 2370, type: !6352, scopeLine: 2371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9416 = !DILocalVariable(name: "dev", arg: 1, scope: !9415, file: !3, line: 2370, type: !1739)
!9417 = !DILocation(line: 2370, column: 39, scope: !9415)
!9418 = !DILocalVariable(name: "freq", arg: 2, scope: !9415, file: !3, line: 2370, type: !197)
!9419 = !DILocation(line: 2370, column: 58, scope: !9415)
!9420 = !DILocation(line: 2372, column: 31, scope: !9415)
!9421 = !DILocation(line: 2372, column: 36, scope: !9415)
!9422 = !DILocation(line: 2372, column: 9, scope: !9415)
!9423 = !DILocation(line: 2372, column: 2, scope: !9415)
!9424 = distinct !DISubprogram(name: "dev_pm_opp_register_notifier", scope: !3, file: !3, line: 2383, type: !9425, scopeLine: 2384, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9425 = !DISubroutineType(types: !9426)
!9426 = !{!188, !1739, !256}
!9427 = !DILocalVariable(name: "dev", arg: 1, scope: !9424, file: !3, line: 2383, type: !1739)
!9428 = !DILocation(line: 2383, column: 49, scope: !9424)
!9429 = !DILocalVariable(name: "nb", arg: 2, scope: !9424, file: !3, line: 2383, type: !256)
!9430 = !DILocation(line: 2383, column: 77, scope: !9424)
!9431 = !DILocalVariable(name: "opp_table", scope: !9424, file: !3, line: 2385, type: !221)
!9432 = !DILocation(line: 2385, column: 20, scope: !9424)
!9433 = !DILocalVariable(name: "ret", scope: !9424, file: !3, line: 2386, type: !188)
!9434 = !DILocation(line: 2386, column: 6, scope: !9424)
!9435 = !DILocation(line: 2388, column: 30, scope: !9424)
!9436 = !DILocation(line: 2388, column: 14, scope: !9424)
!9437 = !DILocation(line: 2388, column: 12, scope: !9424)
!9438 = !DILocation(line: 2389, column: 13, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9424, file: !3, line: 2389, column: 6)
!9440 = !DILocation(line: 2389, column: 6, scope: !9439)
!9441 = !DILocation(line: 2389, column: 6, scope: !9424)
!9442 = !DILocation(line: 2390, column: 18, scope: !9439)
!9443 = !DILocation(line: 2390, column: 10, scope: !9439)
!9444 = !DILocation(line: 2390, column: 3, scope: !9439)
!9445 = !DILocation(line: 2392, column: 42, scope: !9424)
!9446 = !DILocation(line: 2392, column: 53, scope: !9424)
!9447 = !DILocation(line: 2392, column: 59, scope: !9424)
!9448 = !DILocation(line: 2392, column: 8, scope: !9424)
!9449 = !DILocation(line: 2392, column: 6, scope: !9424)
!9450 = !DILocation(line: 2394, column: 27, scope: !9424)
!9451 = !DILocation(line: 2394, column: 2, scope: !9424)
!9452 = !DILocation(line: 2396, column: 9, scope: !9424)
!9453 = !DILocation(line: 2396, column: 2, scope: !9424)
!9454 = !DILocation(line: 2397, column: 1, scope: !9424)
!9455 = distinct !DISubprogram(name: "dev_pm_opp_unregister_notifier", scope: !3, file: !3, line: 2407, type: !9425, scopeLine: 2409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9456 = !DILocalVariable(name: "dev", arg: 1, scope: !9455, file: !3, line: 2407, type: !1739)
!9457 = !DILocation(line: 2407, column: 51, scope: !9455)
!9458 = !DILocalVariable(name: "nb", arg: 2, scope: !9455, file: !3, line: 2408, type: !256)
!9459 = !DILocation(line: 2408, column: 31, scope: !9455)
!9460 = !DILocalVariable(name: "opp_table", scope: !9455, file: !3, line: 2410, type: !221)
!9461 = !DILocation(line: 2410, column: 20, scope: !9455)
!9462 = !DILocalVariable(name: "ret", scope: !9455, file: !3, line: 2411, type: !188)
!9463 = !DILocation(line: 2411, column: 6, scope: !9455)
!9464 = !DILocation(line: 2413, column: 30, scope: !9455)
!9465 = !DILocation(line: 2413, column: 14, scope: !9455)
!9466 = !DILocation(line: 2413, column: 12, scope: !9455)
!9467 = !DILocation(line: 2414, column: 13, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9455, file: !3, line: 2414, column: 6)
!9469 = !DILocation(line: 2414, column: 6, scope: !9468)
!9470 = !DILocation(line: 2414, column: 6, scope: !9455)
!9471 = !DILocation(line: 2415, column: 18, scope: !9468)
!9472 = !DILocation(line: 2415, column: 10, scope: !9468)
!9473 = !DILocation(line: 2415, column: 3, scope: !9468)
!9474 = !DILocation(line: 2417, column: 44, scope: !9455)
!9475 = !DILocation(line: 2417, column: 55, scope: !9455)
!9476 = !DILocation(line: 2417, column: 61, scope: !9455)
!9477 = !DILocation(line: 2417, column: 8, scope: !9455)
!9478 = !DILocation(line: 2417, column: 6, scope: !9455)
!9479 = !DILocation(line: 2419, column: 27, scope: !9455)
!9480 = !DILocation(line: 2419, column: 2, scope: !9455)
!9481 = !DILocation(line: 2421, column: 9, scope: !9455)
!9482 = !DILocation(line: 2421, column: 2, scope: !9455)
!9483 = !DILocation(line: 2422, column: 1, scope: !9455)
!9484 = distinct !DISubprogram(name: "dev_pm_opp_remove_table", scope: !3, file: !3, line: 2432, type: !4516, scopeLine: 2433, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9485 = !DILocalVariable(name: "dev", arg: 1, scope: !9484, file: !3, line: 2432, type: !1739)
!9486 = !DILocation(line: 2432, column: 45, scope: !9484)
!9487 = !DILocalVariable(name: "opp_table", scope: !9484, file: !3, line: 2434, type: !221)
!9488 = !DILocation(line: 2434, column: 20, scope: !9484)
!9489 = !DILocation(line: 2437, column: 30, scope: !9484)
!9490 = !DILocation(line: 2437, column: 14, scope: !9484)
!9491 = !DILocation(line: 2437, column: 12, scope: !9484)
!9492 = !DILocation(line: 2438, column: 13, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 2438, column: 6)
!9494 = !DILocation(line: 2438, column: 6, scope: !9493)
!9495 = !DILocation(line: 2438, column: 6, scope: !9484)
!9496 = !DILocalVariable(name: "error", scope: !9497, file: !3, line: 2439, type: !188)
!9497 = distinct !DILexicalBlock(scope: !9493, file: !3, line: 2438, column: 25)
!9498 = !DILocation(line: 2439, column: 7, scope: !9497)
!9499 = !DILocation(line: 2439, column: 23, scope: !9497)
!9500 = !DILocation(line: 2439, column: 15, scope: !9497)
!9501 = !DILocation(line: 2441, column: 7, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9497, file: !3, line: 2441, column: 7)
!9503 = !DILocation(line: 2441, column: 13, scope: !9502)
!9504 = !DILocation(line: 2441, column: 7, scope: !9497)
!9505 = !DILocalVariable(name: "__ret_warn_on", scope: !9506, file: !3, line: 2442, type: !188)
!9506 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 2442, column: 4)
!9507 = !DILocation(line: 2442, column: 4, scope: !9506)
!9508 = !DILocation(line: 2442, column: 4, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9506, file: !3, line: 2442, column: 4)
!9510 = !DILocation(line: 2442, column: 4, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9509, file: !3, line: 2442, column: 4)
!9512 = !DILocation(line: 2442, column: 4, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 2442, column: 4)
!9514 = !DILocation(line: 2442, column: 4, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 2442, column: 4)
!9516 = !DILocation(line: 2442, column: 4, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9515, file: !3, line: 2442, column: 4)
!9518 = !DILocation(line: 2442, column: 4, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9515, file: !3, line: 2442, column: 4)
!9520 = !{i32 -2140617377, i32 -2140617348, i32 -2140617302, i32 -2140617244, i32 -2140617190, i32 -2140617136, i32 -2140617081, i32 -2140617050}
!9521 = !DILocation(line: 2442, column: 4, scope: !9522)
!9522 = distinct !DILexicalBlock(scope: !9515, file: !3, line: 2442, column: 4)
!9523 = !{i32 -2140616638, i32 -2140616631, i32 -2140616579, i32 -2140616548, i32 -2140616518}
!9524 = !DILocation(line: 2442, column: 4, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9515, file: !3, line: 2442, column: 4)
!9526 = !DILocation(line: 2442, column: 4, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 2442, column: 4)
!9528 = !DILocation(line: 2442, column: 4, scope: !9502)
!9529 = !DILocation(line: 2446, column: 3, scope: !9497)
!9530 = !DILocation(line: 2453, column: 29, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 2453, column: 6)
!9532 = !DILocation(line: 2453, column: 6, scope: !9531)
!9533 = !DILocation(line: 2453, column: 6, scope: !9484)
!9534 = !DILocation(line: 2454, column: 28, scope: !9531)
!9535 = !DILocation(line: 2454, column: 3, scope: !9531)
!9536 = !DILocation(line: 2457, column: 27, scope: !9484)
!9537 = !DILocation(line: 2457, column: 2, scope: !9484)
!9538 = !DILocation(line: 2458, column: 1, scope: !9484)
!9539 = distinct !DISubprogram(name: "dev_name", scope: !115, file: !115, line: 609, type: !9540, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9540 = !DISubroutineType(types: !9541)
!9541 = !{!289, !326}
!9542 = !DILocalVariable(name: "dev", arg: 1, scope: !9539, file: !115, line: 609, type: !326)
!9543 = !DILocation(line: 609, column: 57, scope: !9539)
!9544 = !DILocation(line: 612, column: 6, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9539, file: !115, line: 612, column: 6)
!9546 = !DILocation(line: 612, column: 11, scope: !9545)
!9547 = !DILocation(line: 612, column: 6, scope: !9539)
!9548 = !DILocation(line: 613, column: 10, scope: !9545)
!9549 = !DILocation(line: 613, column: 15, scope: !9545)
!9550 = !DILocation(line: 613, column: 3, scope: !9545)
!9551 = !DILocation(line: 615, column: 23, scope: !9539)
!9552 = !DILocation(line: 615, column: 28, scope: !9539)
!9553 = !DILocation(line: 615, column: 9, scope: !9539)
!9554 = !DILocation(line: 615, column: 2, scope: !9539)
!9555 = !DILocation(line: 616, column: 1, scope: !9539)
!9556 = distinct !DISubprogram(name: "_find_opp_dev", scope: !3, file: !3, line: 33, type: !6968, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9557 = !DILocalVariable(name: "dev", arg: 1, scope: !9556, file: !3, line: 33, type: !326)
!9558 = !DILocation(line: 33, column: 62, scope: !9556)
!9559 = !DILocalVariable(name: "opp_table", arg: 2, scope: !9556, file: !3, line: 34, type: !221)
!9560 = !DILocation(line: 34, column: 24, scope: !9556)
!9561 = !DILocalVariable(name: "opp_dev", scope: !9556, file: !3, line: 36, type: !4967)
!9562 = !DILocation(line: 36, column: 21, scope: !9556)
!9563 = !DILocalVariable(name: "__mptr", scope: !9564, file: !3, line: 38, type: !165)
!9564 = distinct !DILexicalBlock(scope: !9565, file: !3, line: 38, column: 2)
!9565 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 38, column: 2)
!9566 = !DILocation(line: 38, column: 2, scope: !9564)
!9567 = !DILocation(line: 38, column: 2, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9564, file: !3, line: 38, column: 2)
!9569 = !DILocation(line: 38, column: 2, scope: !9565)
!9570 = !DILocation(line: 38, column: 2, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9565, file: !3, line: 38, column: 2)
!9572 = !DILocation(line: 39, column: 7, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9571, file: !3, line: 39, column: 7)
!9574 = !DILocation(line: 39, column: 16, scope: !9573)
!9575 = !DILocation(line: 39, column: 23, scope: !9573)
!9576 = !DILocation(line: 39, column: 20, scope: !9573)
!9577 = !DILocation(line: 39, column: 7, scope: !9571)
!9578 = !DILocation(line: 40, column: 11, scope: !9573)
!9579 = !DILocation(line: 40, column: 4, scope: !9573)
!9580 = !DILocalVariable(name: "__mptr", scope: !9581, file: !3, line: 38, type: !165)
!9581 = distinct !DILexicalBlock(scope: !9571, file: !3, line: 38, column: 2)
!9582 = !DILocation(line: 38, column: 2, scope: !9581)
!9583 = !DILocation(line: 38, column: 2, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9581, file: !3, line: 38, column: 2)
!9585 = distinct !{!9585, !9569, !9586}
!9586 = !DILocation(line: 40, column: 11, scope: !9565)
!9587 = !DILocation(line: 42, column: 2, scope: !9556)
!9588 = !DILocation(line: 43, column: 1, scope: !9556)
!9589 = distinct !DISubprogram(name: "__must_check_overflow", scope: !9590, file: !9590, line: 52, type: !9591, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9590 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!9591 = !DISubroutineType(types: !9592)
!9592 = !{!190, !190}
!9593 = !DILocalVariable(name: "overflow", arg: 1, scope: !9589, file: !9590, line: 52, type: !190)
!9594 = !DILocation(line: 52, column: 60, scope: !9589)
!9595 = !DILocation(line: 54, column: 9, scope: !9589)
!9596 = !DILocation(line: 54, column: 2, scope: !9589)
!9597 = distinct !DISubprogram(name: "get_order", scope: !9598, file: !9598, line: 29, type: !9599, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9598 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!9599 = !DISubroutineType(types: !9600)
!9600 = !{!188, !197}
!9601 = !DILocalVariable(name: "x", arg: 1, scope: !9602, file: !9603, line: 366, type: !513)
!9602 = distinct !DISubprogram(name: "fls64", scope: !9603, file: !9603, line: 366, type: !9604, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9603 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!9604 = !DISubroutineType(types: !9605)
!9605 = !{!188, !513}
!9606 = !DILocation(line: 366, column: 40, scope: !9602, inlinedAt: !9607)
!9607 = distinct !DILocation(line: 46, column: 9, scope: !9597)
!9608 = !DILocalVariable(name: "bitpos", scope: !9602, file: !9603, line: 368, type: !188)
!9609 = !DILocation(line: 368, column: 6, scope: !9602, inlinedAt: !9607)
!9610 = !DILocalVariable(name: "size", arg: 1, scope: !9597, file: !9598, line: 29, type: !197)
!9611 = !DILocation(line: 29, column: 63, scope: !9597)
!9612 = !DILocation(line: 31, column: 27, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9597, file: !9598, line: 31, column: 6)
!9614 = !DILocation(line: 31, column: 6, scope: !9613)
!9615 = !DILocation(line: 31, column: 6, scope: !9597)
!9616 = !DILocation(line: 32, column: 8, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9618, file: !9598, line: 32, column: 7)
!9618 = distinct !DILexicalBlock(scope: !9613, file: !9598, line: 31, column: 34)
!9619 = !DILocation(line: 32, column: 7, scope: !9618)
!9620 = !DILocation(line: 33, column: 4, scope: !9617)
!9621 = !DILocation(line: 35, column: 7, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9618, file: !9598, line: 35, column: 7)
!9623 = !DILocation(line: 35, column: 12, scope: !9622)
!9624 = !DILocation(line: 35, column: 7, scope: !9618)
!9625 = !DILocation(line: 36, column: 4, scope: !9622)
!9626 = !DILocation(line: 38, column: 10, scope: !9618)
!9627 = !DILocation(line: 38, column: 28, scope: !9618)
!9628 = !DILocation(line: 38, column: 41, scope: !9618)
!9629 = !DILocation(line: 38, column: 3, scope: !9618)
!9630 = !DILocation(line: 41, column: 6, scope: !9597)
!9631 = !DILocation(line: 42, column: 7, scope: !9597)
!9632 = !DILocation(line: 46, column: 15, scope: !9597)
!9633 = !DILocation(line: 374, column: 2, scope: !9602, inlinedAt: !9607)
!9634 = !DILocation(line: 376, column: 14, scope: !9602, inlinedAt: !9607)
!9635 = !{i32 343718}
!9636 = !DILocation(line: 377, column: 9, scope: !9602, inlinedAt: !9607)
!9637 = !DILocation(line: 377, column: 16, scope: !9602, inlinedAt: !9607)
!9638 = !DILocation(line: 46, column: 2, scope: !9597)
!9639 = !DILocation(line: 48, column: 1, scope: !9597)
!9640 = distinct !DISubprogram(name: "__ilog2_u64", scope: !9641, file: !9641, line: 30, type: !9642, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9641 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!9642 = !DISubroutineType(types: !9643)
!9643 = !{!188, !512}
!9644 = !DILocation(line: 366, column: 40, scope: !9602, inlinedAt: !9645)
!9645 = distinct !DILocation(line: 32, column: 9, scope: !9640)
!9646 = !DILocation(line: 368, column: 6, scope: !9602, inlinedAt: !9645)
!9647 = !DILocalVariable(name: "n", arg: 1, scope: !9640, file: !9641, line: 30, type: !512)
!9648 = !DILocation(line: 30, column: 21, scope: !9640)
!9649 = !DILocation(line: 32, column: 15, scope: !9640)
!9650 = !DILocation(line: 374, column: 2, scope: !9602, inlinedAt: !9645)
!9651 = !DILocation(line: 376, column: 14, scope: !9602, inlinedAt: !9645)
!9652 = !DILocation(line: 377, column: 9, scope: !9602, inlinedAt: !9645)
!9653 = !DILocation(line: 377, column: 16, scope: !9602, inlinedAt: !9645)
!9654 = !DILocation(line: 32, column: 18, scope: !9640)
!9655 = !DILocation(line: 32, column: 2, scope: !9640)
!9656 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !9657, file: !9657, line: 137, type: !9658, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9657 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!9658 = !DISubroutineType(types: !9659)
!9659 = !{!165, !1273, !324, !417, !163}
!9660 = !DILocalVariable(name: "s", arg: 1, scope: !9656, file: !9657, line: 137, type: !1273)
!9661 = !DILocation(line: 137, column: 54, scope: !9656)
!9662 = !DILocalVariable(name: "object", arg: 2, scope: !9656, file: !9657, line: 137, type: !324)
!9663 = !DILocation(line: 137, column: 69, scope: !9656)
!9664 = !DILocalVariable(name: "size", arg: 3, scope: !9656, file: !9657, line: 138, type: !417)
!9665 = !DILocation(line: 138, column: 12, scope: !9656)
!9666 = !DILocalVariable(name: "flags", arg: 4, scope: !9656, file: !9657, line: 138, type: !163)
!9667 = !DILocation(line: 138, column: 24, scope: !9656)
!9668 = !DILocation(line: 140, column: 17, scope: !9656)
!9669 = !DILocation(line: 140, column: 2, scope: !9656)
!9670 = distinct !DISubprogram(name: "icc_set_bw", scope: !4943, file: !4943, line: 101, type: !9671, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9671 = !DISubroutineType(types: !9672)
!9672 = !{!188, !4941, !212, !212}
!9673 = !DILocalVariable(name: "path", arg: 1, scope: !9670, file: !4943, line: 101, type: !4941)
!9674 = !DILocation(line: 101, column: 47, scope: !9670)
!9675 = !DILocalVariable(name: "avg_bw", arg: 2, scope: !9670, file: !4943, line: 101, type: !212)
!9676 = !DILocation(line: 101, column: 57, scope: !9670)
!9677 = !DILocalVariable(name: "peak_bw", arg: 3, scope: !9670, file: !4943, line: 101, type: !212)
!9678 = !DILocation(line: 101, column: 69, scope: !9670)
!9679 = !DILocation(line: 103, column: 2, scope: !9670)
!9680 = distinct !DISubprogram(name: "_set_required_opp", scope: !3, file: !3, line: 782, type: !9681, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9681 = !DISubroutineType(types: !9682)
!9682 = !{!188, !1739, !1739, !166, !188}
!9683 = !DILocalVariable(name: "dev", arg: 1, scope: !9680, file: !3, line: 782, type: !1739)
!9684 = !DILocation(line: 782, column: 45, scope: !9680)
!9685 = !DILocalVariable(name: "pd_dev", arg: 2, scope: !9680, file: !3, line: 782, type: !1739)
!9686 = !DILocation(line: 782, column: 65, scope: !9680)
!9687 = !DILocalVariable(name: "opp", arg: 3, scope: !9680, file: !3, line: 783, type: !166)
!9688 = !DILocation(line: 783, column: 28, scope: !9680)
!9689 = !DILocalVariable(name: "i", arg: 4, scope: !9680, file: !3, line: 783, type: !188)
!9690 = !DILocation(line: 783, column: 37, scope: !9680)
!9691 = !DILocalVariable(name: "pstate", scope: !9680, file: !3, line: 785, type: !7)
!9692 = !DILocation(line: 785, column: 15, scope: !9680)
!9693 = !DILocation(line: 785, column: 24, scope: !9680)
!9694 = !DILocation(line: 785, column: 38, scope: !9680)
!9695 = !DILocation(line: 785, column: 43, scope: !9680)
!9696 = !DILocation(line: 785, column: 57, scope: !9680)
!9697 = !DILocation(line: 785, column: 61, scope: !9680)
!9698 = !DILocalVariable(name: "ret", scope: !9680, file: !3, line: 786, type: !188)
!9699 = !DILocation(line: 786, column: 6, scope: !9680)
!9700 = !DILocation(line: 788, column: 7, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 788, column: 6)
!9702 = !DILocation(line: 788, column: 6, scope: !9680)
!9703 = !DILocation(line: 789, column: 3, scope: !9701)
!9704 = !DILocation(line: 791, column: 43, scope: !9680)
!9705 = !DILocation(line: 791, column: 51, scope: !9680)
!9706 = !DILocation(line: 791, column: 8, scope: !9680)
!9707 = !DILocation(line: 791, column: 6, scope: !9680)
!9708 = !DILocation(line: 792, column: 6, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 792, column: 6)
!9710 = !DILocation(line: 792, column: 6, scope: !9680)
!9711 = !DILocation(line: 793, column: 3, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9709, file: !3, line: 792, column: 11)
!9713 = !DILocation(line: 795, column: 2, scope: !9712)
!9714 = !DILocation(line: 797, column: 9, scope: !9680)
!9715 = !DILocation(line: 797, column: 2, scope: !9680)
!9716 = !DILocation(line: 798, column: 1, scope: !9680)
!9717 = distinct !DISubprogram(name: "_set_opp_voltage", scope: !3, file: !3, line: 628, type: !9718, scopeLine: 630, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9718 = !DISubroutineType(types: !9719)
!9719 = !{!188, !1739, !4935, !200}
!9720 = !DILocalVariable(name: "dev", arg: 1, scope: !9717, file: !3, line: 628, type: !1739)
!9721 = !DILocation(line: 628, column: 44, scope: !9717)
!9722 = !DILocalVariable(name: "reg", arg: 2, scope: !9717, file: !3, line: 628, type: !4935)
!9723 = !DILocation(line: 628, column: 67, scope: !9717)
!9724 = !DILocalVariable(name: "supply", arg: 3, scope: !9717, file: !3, line: 629, type: !200)
!9725 = !DILocation(line: 629, column: 34, scope: !9717)
!9726 = !DILocalVariable(name: "ret", scope: !9717, file: !3, line: 631, type: !188)
!9727 = !DILocation(line: 631, column: 6, scope: !9717)
!9728 = !DILocation(line: 634, column: 13, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9717, file: !3, line: 634, column: 6)
!9730 = !DILocation(line: 634, column: 6, scope: !9729)
!9731 = !DILocation(line: 634, column: 6, scope: !9717)
!9732 = !DILocation(line: 637, column: 3, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9729, file: !3, line: 634, column: 19)
!9734 = !DILocation(line: 643, column: 38, scope: !9717)
!9735 = !DILocation(line: 643, column: 43, scope: !9717)
!9736 = !DILocation(line: 643, column: 51, scope: !9717)
!9737 = !DILocation(line: 644, column: 10, scope: !9717)
!9738 = !DILocation(line: 644, column: 18, scope: !9717)
!9739 = !DILocation(line: 644, column: 26, scope: !9717)
!9740 = !DILocation(line: 644, column: 34, scope: !9717)
!9741 = !DILocation(line: 643, column: 8, scope: !9717)
!9742 = !DILocation(line: 643, column: 6, scope: !9717)
!9743 = !DILocation(line: 645, column: 6, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9717, file: !3, line: 645, column: 6)
!9745 = !DILocation(line: 645, column: 6, scope: !9717)
!9746 = !DILocation(line: 646, column: 3, scope: !9744)
!9747 = !DILocation(line: 650, column: 9, scope: !9717)
!9748 = !DILocation(line: 650, column: 2, scope: !9717)
!9749 = !DILocation(line: 651, column: 1, scope: !9717)
!9750 = distinct !DISubprogram(name: "regulator_enable", scope: !4937, file: !4937, line: 410, type: !8624, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9751 = !DILocalVariable(name: "regulator", arg: 1, scope: !9750, file: !4937, line: 410, type: !4935)
!9752 = !DILocation(line: 410, column: 54, scope: !9750)
!9753 = !DILocation(line: 412, column: 2, scope: !9750)
!9754 = distinct !DISubprogram(name: "regulator_set_voltage_triplet", scope: !4937, file: !4937, line: 615, type: !9755, scopeLine: 618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9755 = !DISubroutineType(types: !9756)
!9756 = !{!188, !4935, !188, !188, !188}
!9757 = !DILocalVariable(name: "regulator", arg: 1, scope: !9754, file: !4937, line: 615, type: !4935)
!9758 = !DILocation(line: 615, column: 67, scope: !9754)
!9759 = !DILocalVariable(name: "min_uV", arg: 2, scope: !9754, file: !4937, line: 616, type: !188)
!9760 = !DILocation(line: 616, column: 11, scope: !9754)
!9761 = !DILocalVariable(name: "target_uV", arg: 3, scope: !9754, file: !4937, line: 616, type: !188)
!9762 = !DILocation(line: 616, column: 23, scope: !9754)
!9763 = !DILocalVariable(name: "max_uV", arg: 4, scope: !9754, file: !4937, line: 617, type: !188)
!9764 = !DILocation(line: 617, column: 11, scope: !9754)
!9765 = !DILocation(line: 619, column: 28, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9754, file: !4937, line: 619, column: 6)
!9767 = !DILocation(line: 619, column: 39, scope: !9766)
!9768 = !DILocation(line: 619, column: 50, scope: !9766)
!9769 = !DILocation(line: 619, column: 6, scope: !9766)
!9770 = !DILocation(line: 619, column: 58, scope: !9766)
!9771 = !DILocation(line: 619, column: 6, scope: !9754)
!9772 = !DILocation(line: 620, column: 3, scope: !9766)
!9773 = !DILocation(line: 622, column: 31, scope: !9754)
!9774 = !DILocation(line: 622, column: 42, scope: !9754)
!9775 = !DILocation(line: 622, column: 50, scope: !9754)
!9776 = !DILocation(line: 622, column: 9, scope: !9754)
!9777 = !DILocation(line: 622, column: 2, scope: !9754)
!9778 = !DILocation(line: 623, column: 1, scope: !9754)
!9779 = distinct !DISubprogram(name: "regulator_set_voltage", scope: !4937, file: !4937, line: 472, type: !5669, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9780 = !DILocalVariable(name: "regulator", arg: 1, scope: !9779, file: !4937, line: 472, type: !4935)
!9781 = !DILocation(line: 472, column: 59, scope: !9779)
!9782 = !DILocalVariable(name: "min_uV", arg: 2, scope: !9779, file: !4937, line: 473, type: !188)
!9783 = !DILocation(line: 473, column: 10, scope: !9779)
!9784 = !DILocalVariable(name: "max_uV", arg: 3, scope: !9779, file: !4937, line: 473, type: !188)
!9785 = !DILocation(line: 473, column: 22, scope: !9779)
!9786 = !DILocation(line: 475, column: 2, scope: !9779)
!9787 = distinct !DISubprogram(name: "opp_debug_register", scope: !129, file: !129, line: 254, type: !9788, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9788 = !DISubroutineType(types: !9789)
!9789 = !{null, !4967, !221}
!9790 = !DILocalVariable(name: "opp_dev", arg: 1, scope: !9787, file: !129, line: 254, type: !4967)
!9791 = !DILocation(line: 254, column: 58, scope: !9787)
!9792 = !DILocalVariable(name: "opp_table", arg: 2, scope: !9787, file: !129, line: 255, type: !221)
!9793 = !DILocation(line: 255, column: 29, scope: !9787)
!9794 = !DILocation(line: 255, column: 42, scope: !9787)
!9795 = distinct !DISubprogram(name: "refcount_inc", scope: !155, file: !155, line: 265, type: !9796, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9796 = !DISubroutineType(types: !9797)
!9797 = !{null, !9798}
!9798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!9799 = !DILocalVariable(name: "r", arg: 1, scope: !9795, file: !155, line: 265, type: !9798)
!9800 = !DILocation(line: 265, column: 45, scope: !9795)
!9801 = !DILocation(line: 267, column: 17, scope: !9795)
!9802 = !DILocation(line: 267, column: 2, scope: !9795)
!9803 = !DILocation(line: 268, column: 1, scope: !9795)
!9804 = distinct !DISubprogram(name: "__refcount_inc", scope: !155, file: !155, line: 248, type: !9805, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9805 = !DISubroutineType(types: !9806)
!9806 = !{null, !9798, !809}
!9807 = !DILocalVariable(name: "r", arg: 1, scope: !9804, file: !155, line: 248, type: !9798)
!9808 = !DILocation(line: 248, column: 47, scope: !9804)
!9809 = !DILocalVariable(name: "oldp", arg: 2, scope: !9804, file: !155, line: 248, type: !809)
!9810 = !DILocation(line: 248, column: 55, scope: !9804)
!9811 = !DILocation(line: 250, column: 20, scope: !9804)
!9812 = !DILocation(line: 250, column: 23, scope: !9804)
!9813 = !DILocation(line: 250, column: 2, scope: !9804)
!9814 = !DILocation(line: 251, column: 1, scope: !9804)
!9815 = distinct !DISubprogram(name: "__refcount_add", scope: !155, file: !155, line: 191, type: !9816, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9816 = !DISubroutineType(types: !9817)
!9817 = !{null, !188, !9798, !809}
!9818 = !DILocalVariable(name: "i", arg: 1, scope: !9819, file: !9820, line: 182, type: !188)
!9819 = distinct !DISubprogram(name: "arch_atomic_fetch_add", scope: !9820, file: !9820, line: 182, type: !9821, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9820 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!9821 = !DISubroutineType(types: !9822)
!9822 = !{!188, !188, !9823}
!9823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!9824 = !DILocation(line: 182, column: 54, scope: !9819, inlinedAt: !9825)
!9825 = distinct !DILocation(line: 143, column: 9, scope: !9826, inlinedAt: !9828)
!9826 = distinct !DISubprogram(name: "atomic_fetch_add_relaxed", scope: !9827, file: !9827, line: 140, type: !9821, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9827 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!9828 = distinct !DILocation(line: 193, column: 12, scope: !9815)
!9829 = !DILocalVariable(name: "v", arg: 2, scope: !9819, file: !9820, line: 182, type: !9823)
!9830 = !DILocation(line: 182, column: 67, scope: !9819, inlinedAt: !9825)
!9831 = !DILocalVariable(name: "__ret", scope: !9832, file: !9820, line: 184, type: !188)
!9832 = distinct !DILexicalBlock(scope: !9819, file: !9820, line: 184, column: 9)
!9833 = !DILocation(line: 184, column: 9, scope: !9832, inlinedAt: !9825)
!9834 = !DILocalVariable(name: "v", arg: 1, scope: !9835, file: !9836, line: 99, type: !9839)
!9835 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !9836, file: !9836, line: 99, type: !9837, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9836 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!9837 = !DISubroutineType(types: !9838)
!9838 = !{null, !9839, !417}
!9839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9840, size: 64)
!9840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9841)
!9841 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!9842 = !DILocation(line: 99, column: 79, scope: !9835, inlinedAt: !9843)
!9843 = distinct !DILocation(line: 142, column: 2, scope: !9826, inlinedAt: !9828)
!9844 = !DILocalVariable(name: "size", arg: 2, scope: !9835, file: !9836, line: 99, type: !417)
!9845 = !DILocation(line: 99, column: 89, scope: !9835, inlinedAt: !9843)
!9846 = !DILocalVariable(name: "i", arg: 1, scope: !9826, file: !9827, line: 140, type: !188)
!9847 = !DILocation(line: 140, column: 30, scope: !9826, inlinedAt: !9828)
!9848 = !DILocalVariable(name: "v", arg: 2, scope: !9826, file: !9827, line: 140, type: !9823)
!9849 = !DILocation(line: 140, column: 43, scope: !9826, inlinedAt: !9828)
!9850 = !DILocalVariable(name: "i", arg: 1, scope: !9815, file: !155, line: 191, type: !188)
!9851 = !DILocation(line: 191, column: 39, scope: !9815)
!9852 = !DILocalVariable(name: "r", arg: 2, scope: !9815, file: !155, line: 191, type: !9798)
!9853 = !DILocation(line: 191, column: 54, scope: !9815)
!9854 = !DILocalVariable(name: "oldp", arg: 3, scope: !9815, file: !155, line: 191, type: !809)
!9855 = !DILocation(line: 191, column: 62, scope: !9815)
!9856 = !DILocalVariable(name: "old", scope: !9815, file: !155, line: 193, type: !188)
!9857 = !DILocation(line: 193, column: 6, scope: !9815)
!9858 = !DILocation(line: 193, column: 37, scope: !9815)
!9859 = !DILocation(line: 193, column: 41, scope: !9815)
!9860 = !DILocation(line: 193, column: 44, scope: !9815)
!9861 = !DILocation(line: 142, column: 31, scope: !9826, inlinedAt: !9828)
!9862 = !DILocation(line: 101, column: 20, scope: !9835, inlinedAt: !9843)
!9863 = !DILocation(line: 101, column: 23, scope: !9835, inlinedAt: !9843)
!9864 = !DILocation(line: 101, column: 2, scope: !9835, inlinedAt: !9843)
!9865 = !DILocation(line: 102, column: 2, scope: !9835, inlinedAt: !9843)
!9866 = !DILocation(line: 143, column: 39, scope: !9826, inlinedAt: !9828)
!9867 = !DILocation(line: 143, column: 42, scope: !9826, inlinedAt: !9828)
!9868 = !{i32 -2146600175}
!9869 = !DILocation(line: 195, column: 6, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9815, file: !155, line: 195, column: 6)
!9871 = !DILocation(line: 195, column: 6, scope: !9815)
!9872 = !DILocation(line: 196, column: 11, scope: !9870)
!9873 = !DILocation(line: 196, column: 4, scope: !9870)
!9874 = !DILocation(line: 196, column: 9, scope: !9870)
!9875 = !DILocation(line: 196, column: 3, scope: !9870)
!9876 = !DILocation(line: 198, column: 6, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9815, file: !155, line: 198, column: 6)
!9878 = !DILocation(line: 198, column: 6, scope: !9815)
!9879 = !DILocation(line: 199, column: 26, scope: !9877)
!9880 = !DILocation(line: 199, column: 3, scope: !9877)
!9881 = !DILocation(line: 200, column: 11, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9877, file: !155, line: 200, column: 11)
!9883 = !DILocation(line: 200, column: 11, scope: !9877)
!9884 = !DILocation(line: 201, column: 26, scope: !9882)
!9885 = !DILocation(line: 201, column: 3, scope: !9882)
!9886 = !DILocation(line: 202, column: 1, scope: !9815)
!9887 = distinct !DISubprogram(name: "kasan_check_write", scope: !9888, file: !9888, line: 38, type: !9889, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9888 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!9889 = !DISubroutineType(types: !9890)
!9890 = !{!190, !9839, !7}
!9891 = !DILocalVariable(name: "p", arg: 1, scope: !9887, file: !9888, line: 38, type: !9839)
!9892 = !DILocation(line: 38, column: 59, scope: !9887)
!9893 = !DILocalVariable(name: "size", arg: 2, scope: !9887, file: !9888, line: 38, type: !7)
!9894 = !DILocation(line: 38, column: 75, scope: !9887)
!9895 = !DILocation(line: 40, column: 2, scope: !9887)
!9896 = distinct !DISubprogram(name: "kcsan_check_access", scope: !9897, file: !9897, line: 178, type: !9898, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!9897 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!9898 = !DISubroutineType(types: !9899)
!9899 = !{null, !9839, !417, !188}
!9900 = !DILocalVariable(name: "ptr", arg: 1, scope: !9896, file: !9897, line: 178, type: !9839)
!9901 = !DILocation(line: 178, column: 60, scope: !9896)
!9902 = !DILocalVariable(name: "size", arg: 2, scope: !9896, file: !9897, line: 178, type: !417)
!9903 = !DILocation(line: 178, column: 72, scope: !9896)
!9904 = !DILocalVariable(name: "type", arg: 3, scope: !9896, file: !9897, line: 179, type: !188)
!9905 = !DILocation(line: 179, column: 15, scope: !9896)
!9906 = !DILocation(line: 179, column: 23, scope: !9896)
!9907 = !DILocalVariable(name: "dev", arg: 1, scope: !4983, file: !3, line: 1071, type: !1739)
!9908 = !DILocation(line: 1071, column: 61, scope: !4983)
!9909 = !DILocalVariable(name: "index", arg: 2, scope: !4983, file: !3, line: 1071, type: !188)
!9910 = !DILocation(line: 1071, column: 70, scope: !4983)
!9911 = !DILocalVariable(name: "opp_table", scope: !4983, file: !3, line: 1073, type: !221)
!9912 = !DILocation(line: 1073, column: 20, scope: !4983)
!9913 = !DILocalVariable(name: "opp_dev", scope: !4983, file: !3, line: 1074, type: !4967)
!9914 = !DILocation(line: 1074, column: 21, scope: !4983)
!9915 = !DILocalVariable(name: "ret", scope: !4983, file: !3, line: 1075, type: !188)
!9916 = !DILocation(line: 1075, column: 6, scope: !4983)
!9917 = !DILocation(line: 1081, column: 14, scope: !4983)
!9918 = !DILocation(line: 1081, column: 12, scope: !4983)
!9919 = !DILocation(line: 1082, column: 7, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 1082, column: 6)
!9921 = !DILocation(line: 1082, column: 6, scope: !4983)
!9922 = !DILocation(line: 1083, column: 10, scope: !9920)
!9923 = !DILocation(line: 1083, column: 3, scope: !9920)
!9924 = !DILocation(line: 1085, column: 2, scope: !4983)
!9925 = !DILocation(line: 1085, column: 2, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 1085, column: 2)
!9927 = !DILocation(line: 1086, column: 2, scope: !4983)
!9928 = !DILocation(line: 1086, column: 2, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 1086, column: 2)
!9930 = !DILocation(line: 1087, column: 18, scope: !4983)
!9931 = !DILocation(line: 1087, column: 29, scope: !4983)
!9932 = !DILocation(line: 1087, column: 2, scope: !4983)
!9933 = !DILocation(line: 1090, column: 2, scope: !4983)
!9934 = !DILocation(line: 1090, column: 13, scope: !4983)
!9935 = !DILocation(line: 1090, column: 29, scope: !4983)
!9936 = !DILocation(line: 1092, column: 25, scope: !4983)
!9937 = !DILocation(line: 1092, column: 30, scope: !4983)
!9938 = !DILocation(line: 1092, column: 12, scope: !4983)
!9939 = !DILocation(line: 1092, column: 10, scope: !4983)
!9940 = !DILocation(line: 1093, column: 7, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 1093, column: 6)
!9942 = !DILocation(line: 1093, column: 6, scope: !4983)
!9943 = !DILocation(line: 1094, column: 7, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 1093, column: 16)
!9945 = !DILocation(line: 1095, column: 3, scope: !9944)
!9946 = !DILocation(line: 1098, column: 21, scope: !4983)
!9947 = !DILocation(line: 1098, column: 32, scope: !4983)
!9948 = !DILocation(line: 1098, column: 37, scope: !4983)
!9949 = !DILocation(line: 1098, column: 2, scope: !4983)
!9950 = !DILocation(line: 1101, column: 27, scope: !4983)
!9951 = !DILocation(line: 1101, column: 19, scope: !4983)
!9952 = !DILocation(line: 1101, column: 2, scope: !4983)
!9953 = !DILocation(line: 1101, column: 13, scope: !4983)
!9954 = !DILocation(line: 1101, column: 17, scope: !4983)
!9955 = !DILocation(line: 1102, column: 13, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 1102, column: 6)
!9957 = !DILocation(line: 1102, column: 24, scope: !9956)
!9958 = !DILocation(line: 1102, column: 6, scope: !9956)
!9959 = !DILocation(line: 1102, column: 6, scope: !4983)
!9960 = !DILocation(line: 1103, column: 17, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9956, file: !3, line: 1102, column: 30)
!9962 = !DILocation(line: 1103, column: 28, scope: !9961)
!9963 = !DILocation(line: 1103, column: 9, scope: !9961)
!9964 = !DILocation(line: 1103, column: 7, scope: !9961)
!9965 = !DILocation(line: 1104, column: 7, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9961, file: !3, line: 1104, column: 7)
!9967 = !DILocation(line: 1104, column: 11, scope: !9966)
!9968 = !DILocation(line: 1104, column: 7, scope: !9961)
!9969 = !DILocation(line: 1105, column: 4, scope: !9966)
!9970 = !DILocation(line: 1108, column: 2, scope: !9961)
!9971 = !DILocation(line: 1111, column: 37, scope: !4983)
!9972 = !DILocation(line: 1111, column: 42, scope: !4983)
!9973 = !DILocation(line: 1111, column: 8, scope: !4983)
!9974 = !DILocation(line: 1111, column: 6, scope: !4983)
!9975 = !DILocation(line: 1112, column: 6, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 1112, column: 6)
!9977 = !DILocation(line: 1112, column: 6, scope: !4983)
!9978 = !DILocation(line: 1113, column: 7, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9980, file: !3, line: 1113, column: 7)
!9980 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 1112, column: 11)
!9981 = !DILocation(line: 1113, column: 11, scope: !9979)
!9982 = !DILocation(line: 1113, column: 7, scope: !9980)
!9983 = !DILocation(line: 1114, column: 4, scope: !9979)
!9984 = !DILocation(line: 1116, column: 3, scope: !9980)
!9985 = !DILocation(line: 1118, column: 2, scope: !9980)
!9986 = !DILocation(line: 1120, column: 2, scope: !4983)
!9987 = !DILocation(line: 1120, column: 2, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 1120, column: 2)
!9989 = !DILocation(line: 1120, column: 2, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9988, file: !3, line: 1120, column: 2)
!9991 = !DILocation(line: 1121, column: 18, scope: !4983)
!9992 = !DILocation(line: 1121, column: 29, scope: !4983)
!9993 = !DILocation(line: 1121, column: 2, scope: !4983)
!9994 = !DILocation(line: 1122, column: 13, scope: !4983)
!9995 = !DILocation(line: 1122, column: 24, scope: !4983)
!9996 = !DILocation(line: 1122, column: 2, scope: !4983)
!9997 = !DILocation(line: 1125, column: 12, scope: !4983)
!9998 = !DILocation(line: 1125, column: 23, scope: !4983)
!9999 = !DILocation(line: 1125, column: 2, scope: !4983)
!10000 = !DILocation(line: 1126, column: 9, scope: !4983)
!10001 = !DILocation(line: 1126, column: 2, scope: !4983)
!10002 = !DILabel(scope: !4983, name: "err", file: !3, line: 1128)
!10003 = !DILocation(line: 1128, column: 1, scope: !4983)
!10004 = !DILocation(line: 1129, column: 8, scope: !4983)
!10005 = !DILocation(line: 1129, column: 2, scope: !4983)
!10006 = !DILocation(line: 1130, column: 17, scope: !4983)
!10007 = !DILocation(line: 1130, column: 9, scope: !4983)
!10008 = !DILocation(line: 1130, column: 2, scope: !4983)
!10009 = !DILocation(line: 1131, column: 1, scope: !4983)
!10010 = distinct !DISubprogram(name: "list_del", scope: !7727, file: !7727, line: 144, type: !7728, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10011 = !DILocalVariable(name: "entry", arg: 1, scope: !10010, file: !7727, line: 144, type: !173)
!10012 = !DILocation(line: 144, column: 47, scope: !10010)
!10013 = !DILocation(line: 146, column: 19, scope: !10010)
!10014 = !DILocation(line: 146, column: 2, scope: !10010)
!10015 = !DILocation(line: 147, column: 2, scope: !10010)
!10016 = !DILocation(line: 147, column: 9, scope: !10010)
!10017 = !DILocation(line: 147, column: 14, scope: !10010)
!10018 = !DILocation(line: 148, column: 2, scope: !10010)
!10019 = !DILocation(line: 148, column: 9, scope: !10010)
!10020 = !DILocation(line: 148, column: 14, scope: !10010)
!10021 = !DILocation(line: 149, column: 1, scope: !10010)
!10022 = distinct !DISubprogram(name: "icc_put", scope: !4943, file: !4943, line: 87, type: !10023, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10023 = !DISubroutineType(types: !10024)
!10024 = !{null, !4941}
!10025 = !DILocalVariable(name: "path", arg: 1, scope: !10022, file: !4943, line: 87, type: !4941)
!10026 = !DILocation(line: 87, column: 45, scope: !10022)
!10027 = !DILocation(line: 89, column: 1, scope: !10022)
!10028 = distinct !DISubprogram(name: "_remove_opp_dev", scope: !3, file: !3, line: 1031, type: !9788, scopeLine: 1033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10029 = !DILocalVariable(name: "opp_dev", arg: 1, scope: !10028, file: !3, line: 1031, type: !4967)
!10030 = !DILocation(line: 1031, column: 48, scope: !10028)
!10031 = !DILocalVariable(name: "opp_table", arg: 2, scope: !10028, file: !3, line: 1032, type: !221)
!10032 = !DILocation(line: 1032, column: 26, scope: !10028)
!10033 = !DILocation(line: 1034, column: 23, scope: !10028)
!10034 = !DILocation(line: 1034, column: 32, scope: !10028)
!10035 = !DILocation(line: 1034, column: 2, scope: !10028)
!10036 = !DILocation(line: 1035, column: 12, scope: !10028)
!10037 = !DILocation(line: 1035, column: 21, scope: !10028)
!10038 = !DILocation(line: 1035, column: 2, scope: !10028)
!10039 = !DILocation(line: 1036, column: 8, scope: !10028)
!10040 = !DILocation(line: 1036, column: 2, scope: !10028)
!10041 = !DILocation(line: 1037, column: 1, scope: !10028)
!10042 = distinct !DISubprogram(name: "mutex_destroy", scope: !271, file: !271, line: 103, type: !10043, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10043 = !DISubroutineType(types: !10044)
!10044 = !{null, !7098}
!10045 = !DILocalVariable(name: "lock", arg: 1, scope: !10042, file: !271, line: 103, type: !7098)
!10046 = !DILocation(line: 103, column: 48, scope: !10042)
!10047 = !DILocation(line: 103, column: 55, scope: !10042)
!10048 = distinct !DISubprogram(name: "__list_del_entry", scope: !7727, file: !7727, line: 130, type: !7728, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10049 = !DILocalVariable(name: "entry", arg: 1, scope: !10048, file: !7727, line: 130, type: !173)
!10050 = !DILocation(line: 130, column: 55, scope: !10048)
!10051 = !DILocation(line: 132, column: 30, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10048, file: !7727, line: 132, column: 6)
!10053 = !DILocation(line: 132, column: 7, scope: !10052)
!10054 = !DILocation(line: 132, column: 6, scope: !10048)
!10055 = !DILocation(line: 133, column: 3, scope: !10052)
!10056 = !DILocation(line: 135, column: 13, scope: !10048)
!10057 = !DILocation(line: 135, column: 20, scope: !10048)
!10058 = !DILocation(line: 135, column: 26, scope: !10048)
!10059 = !DILocation(line: 135, column: 33, scope: !10048)
!10060 = !DILocation(line: 135, column: 2, scope: !10048)
!10061 = !DILocation(line: 136, column: 1, scope: !10048)
!10062 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !7727, file: !7727, line: 51, type: !10063, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10063 = !DISubroutineType(types: !10064)
!10064 = !{!190, !173}
!10065 = !DILocalVariable(name: "entry", arg: 1, scope: !10062, file: !7727, line: 51, type: !173)
!10066 = !DILocation(line: 51, column: 61, scope: !10062)
!10067 = !DILocation(line: 53, column: 2, scope: !10062)
!10068 = distinct !DISubprogram(name: "__list_del", scope: !7727, file: !7727, line: 110, type: !7940, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10069 = !DILocalVariable(name: "prev", arg: 1, scope: !10068, file: !7727, line: 110, type: !173)
!10070 = !DILocation(line: 110, column: 50, scope: !10068)
!10071 = !DILocalVariable(name: "next", arg: 2, scope: !10068, file: !7727, line: 110, type: !173)
!10072 = !DILocation(line: 110, column: 75, scope: !10068)
!10073 = !DILocation(line: 112, column: 15, scope: !10068)
!10074 = !DILocation(line: 112, column: 2, scope: !10068)
!10075 = !DILocation(line: 112, column: 8, scope: !10068)
!10076 = !DILocation(line: 112, column: 13, scope: !10068)
!10077 = !DILocation(line: 113, column: 2, scope: !10068)
!10078 = !DILocation(line: 113, column: 2, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10068, file: !7727, line: 113, column: 2)
!10080 = !DILocation(line: 113, column: 2, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10079, file: !7727, line: 113, column: 2)
!10082 = !DILocation(line: 113, column: 2, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10079, file: !7727, line: 113, column: 2)
!10084 = !DILocation(line: 114, column: 1, scope: !10068)
!10085 = distinct !DISubprogram(name: "opp_debug_unregister", scope: !129, file: !129, line: 257, type: !9788, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10086 = !DILocalVariable(name: "opp_dev", arg: 1, scope: !10085, file: !129, line: 257, type: !4967)
!10087 = !DILocation(line: 257, column: 60, scope: !10085)
!10088 = !DILocalVariable(name: "opp_table", arg: 2, scope: !10085, file: !129, line: 258, type: !221)
!10089 = !DILocation(line: 258, column: 24, scope: !10085)
!10090 = !DILocation(line: 259, column: 3, scope: !10085)
!10091 = distinct !DISubprogram(name: "_opp_kref_release", scope: !3, file: !3, line: 1230, type: !7960, scopeLine: 1232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10092 = !DILocalVariable(name: "opp", arg: 1, scope: !10091, file: !3, line: 1230, type: !166)
!10093 = !DILocation(line: 1230, column: 50, scope: !10091)
!10094 = !DILocalVariable(name: "opp_table", arg: 2, scope: !10091, file: !3, line: 1231, type: !221)
!10095 = !DILocation(line: 1231, column: 28, scope: !10091)
!10096 = !DILocation(line: 1237, column: 32, scope: !10091)
!10097 = !DILocation(line: 1237, column: 43, scope: !10091)
!10098 = !DILocation(line: 1237, column: 67, scope: !10091)
!10099 = !DILocation(line: 1237, column: 2, scope: !10091)
!10100 = !DILocation(line: 1238, column: 29, scope: !10091)
!10101 = !DILocation(line: 1238, column: 40, scope: !10091)
!10102 = !DILocation(line: 1238, column: 2, scope: !10091)
!10103 = !DILocation(line: 1239, column: 23, scope: !10091)
!10104 = !DILocation(line: 1239, column: 2, scope: !10091)
!10105 = !DILocation(line: 1240, column: 12, scope: !10091)
!10106 = !DILocation(line: 1240, column: 17, scope: !10091)
!10107 = !DILocation(line: 1240, column: 2, scope: !10091)
!10108 = !DILocation(line: 1241, column: 8, scope: !10091)
!10109 = !DILocation(line: 1241, column: 2, scope: !10091)
!10110 = !DILocation(line: 1242, column: 1, scope: !10091)
!10111 = distinct !DISubprogram(name: "opp_debug_remove_one", scope: !129, file: !129, line: 249, type: !5876, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10112 = !DILocalVariable(name: "opp", arg: 1, scope: !10111, file: !129, line: 249, type: !166)
!10113 = !DILocation(line: 249, column: 60, scope: !10111)
!10114 = !DILocation(line: 249, column: 66, scope: !10111)
!10115 = distinct !DISubprogram(name: "kref_put", scope: !177, file: !177, line: 62, type: !10116, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10116 = !DISubroutineType(types: !10117)
!10117 = !{!188, !7026, !7097}
!10118 = !DILocalVariable(name: "kref", arg: 1, scope: !10115, file: !177, line: 62, type: !7026)
!10119 = !DILocation(line: 62, column: 41, scope: !10115)
!10120 = !DILocalVariable(name: "release", arg: 2, scope: !10115, file: !177, line: 62, type: !7097)
!10121 = !DILocation(line: 62, column: 54, scope: !10115)
!10122 = !DILocation(line: 64, column: 29, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10115, file: !177, line: 64, column: 6)
!10124 = !DILocation(line: 64, column: 35, scope: !10123)
!10125 = !DILocation(line: 64, column: 6, scope: !10123)
!10126 = !DILocation(line: 64, column: 6, scope: !10115)
!10127 = !DILocation(line: 65, column: 3, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10123, file: !177, line: 64, column: 46)
!10129 = !DILocation(line: 65, column: 11, scope: !10128)
!10130 = !DILocation(line: 66, column: 3, scope: !10128)
!10131 = !DILocation(line: 68, column: 2, scope: !10115)
!10132 = !DILocation(line: 69, column: 1, scope: !10115)
!10133 = distinct !DISubprogram(name: "_opp_kref_release_unlocked", scope: !3, file: !3, line: 1244, type: !7024, scopeLine: 1245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10134 = !DILocalVariable(name: "kref", arg: 1, scope: !10133, file: !3, line: 1244, type: !7026)
!10135 = !DILocation(line: 1244, column: 53, scope: !10133)
!10136 = !DILocalVariable(name: "opp", scope: !10133, file: !3, line: 1246, type: !166)
!10137 = !DILocation(line: 1246, column: 21, scope: !10133)
!10138 = !DILocalVariable(name: "__mptr", scope: !10139, file: !3, line: 1246, type: !165)
!10139 = distinct !DILexicalBlock(scope: !10133, file: !3, line: 1246, column: 27)
!10140 = !DILocation(line: 1246, column: 27, scope: !10139)
!10141 = !DILocation(line: 1246, column: 27, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10139, file: !3, line: 1246, column: 27)
!10143 = !DILocalVariable(name: "opp_table", scope: !10133, file: !3, line: 1247, type: !221)
!10144 = !DILocation(line: 1247, column: 20, scope: !10133)
!10145 = !DILocation(line: 1247, column: 32, scope: !10133)
!10146 = !DILocation(line: 1247, column: 37, scope: !10133)
!10147 = !DILocation(line: 1249, column: 20, scope: !10133)
!10148 = !DILocation(line: 1249, column: 25, scope: !10133)
!10149 = !DILocation(line: 1249, column: 2, scope: !10133)
!10150 = !DILocation(line: 1250, column: 1, scope: !10133)
!10151 = distinct !DISubprogram(name: "refcount_dec_and_test", scope: !155, file: !155, line: 331, type: !10152, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10152 = !DISubroutineType(types: !10153)
!10153 = !{!190, !9798}
!10154 = !DILocalVariable(name: "r", arg: 1, scope: !10151, file: !155, line: 331, type: !9798)
!10155 = !DILocation(line: 331, column: 67, scope: !10151)
!10156 = !DILocation(line: 333, column: 33, scope: !10151)
!10157 = !DILocation(line: 333, column: 9, scope: !10151)
!10158 = !DILocation(line: 333, column: 2, scope: !10151)
!10159 = distinct !DISubprogram(name: "__refcount_dec_and_test", scope: !155, file: !155, line: 313, type: !10160, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10160 = !DISubroutineType(types: !10161)
!10161 = !{!190, !9798, !809}
!10162 = !DILocalVariable(name: "r", arg: 1, scope: !10159, file: !155, line: 313, type: !9798)
!10163 = !DILocation(line: 313, column: 69, scope: !10159)
!10164 = !DILocalVariable(name: "oldp", arg: 2, scope: !10159, file: !155, line: 313, type: !809)
!10165 = !DILocation(line: 313, column: 77, scope: !10159)
!10166 = !DILocation(line: 315, column: 36, scope: !10159)
!10167 = !DILocation(line: 315, column: 39, scope: !10159)
!10168 = !DILocation(line: 315, column: 9, scope: !10159)
!10169 = !DILocation(line: 315, column: 2, scope: !10159)
!10170 = distinct !DISubprogram(name: "__refcount_sub_and_test", scope: !155, file: !155, line: 270, type: !10171, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10171 = !DISubroutineType(types: !10172)
!10172 = !{!190, !188, !9798, !809}
!10173 = !DILocalVariable(name: "i", arg: 1, scope: !10174, file: !9820, line: 188, type: !188)
!10174 = distinct !DISubprogram(name: "arch_atomic_fetch_sub", scope: !9820, file: !9820, line: 188, type: !9821, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10175 = !DILocation(line: 188, column: 54, scope: !10174, inlinedAt: !10176)
!10176 = distinct !DILocation(line: 221, column: 9, scope: !10177, inlinedAt: !10178)
!10177 = distinct !DISubprogram(name: "atomic_fetch_sub_release", scope: !9827, file: !9827, line: 218, type: !9821, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10178 = distinct !DILocation(line: 272, column: 12, scope: !10170)
!10179 = !DILocalVariable(name: "v", arg: 2, scope: !10174, file: !9820, line: 188, type: !9823)
!10180 = !DILocation(line: 188, column: 67, scope: !10174, inlinedAt: !10176)
!10181 = !DILocalVariable(name: "__ret", scope: !10182, file: !9820, line: 190, type: !188)
!10182 = distinct !DILexicalBlock(scope: !10174, file: !9820, line: 190, column: 9)
!10183 = !DILocation(line: 190, column: 9, scope: !10182, inlinedAt: !10176)
!10184 = !DILocation(line: 99, column: 79, scope: !9835, inlinedAt: !10185)
!10185 = distinct !DILocation(line: 220, column: 2, scope: !10177, inlinedAt: !10178)
!10186 = !DILocation(line: 99, column: 89, scope: !9835, inlinedAt: !10185)
!10187 = !DILocalVariable(name: "i", arg: 1, scope: !10177, file: !9827, line: 218, type: !188)
!10188 = !DILocation(line: 218, column: 30, scope: !10177, inlinedAt: !10178)
!10189 = !DILocalVariable(name: "v", arg: 2, scope: !10177, file: !9827, line: 218, type: !9823)
!10190 = !DILocation(line: 218, column: 43, scope: !10177, inlinedAt: !10178)
!10191 = !DILocalVariable(name: "i", arg: 1, scope: !10170, file: !155, line: 270, type: !188)
!10192 = !DILocation(line: 270, column: 61, scope: !10170)
!10193 = !DILocalVariable(name: "r", arg: 2, scope: !10170, file: !155, line: 270, type: !9798)
!10194 = !DILocation(line: 270, column: 76, scope: !10170)
!10195 = !DILocalVariable(name: "oldp", arg: 3, scope: !10170, file: !155, line: 270, type: !809)
!10196 = !DILocation(line: 270, column: 84, scope: !10170)
!10197 = !DILocalVariable(name: "old", scope: !10170, file: !155, line: 272, type: !188)
!10198 = !DILocation(line: 272, column: 6, scope: !10170)
!10199 = !DILocation(line: 272, column: 37, scope: !10170)
!10200 = !DILocation(line: 272, column: 41, scope: !10170)
!10201 = !DILocation(line: 272, column: 44, scope: !10170)
!10202 = !DILocation(line: 220, column: 31, scope: !10177, inlinedAt: !10178)
!10203 = !DILocation(line: 101, column: 20, scope: !9835, inlinedAt: !10185)
!10204 = !DILocation(line: 101, column: 23, scope: !9835, inlinedAt: !10185)
!10205 = !DILocation(line: 101, column: 2, scope: !9835, inlinedAt: !10185)
!10206 = !DILocation(line: 102, column: 2, scope: !9835, inlinedAt: !10185)
!10207 = !DILocation(line: 221, column: 39, scope: !10177, inlinedAt: !10178)
!10208 = !DILocation(line: 221, column: 42, scope: !10177, inlinedAt: !10178)
!10209 = !{i32 -2146598823}
!10210 = !DILocation(line: 274, column: 6, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10170, file: !155, line: 274, column: 6)
!10212 = !DILocation(line: 274, column: 6, scope: !10170)
!10213 = !DILocation(line: 275, column: 11, scope: !10211)
!10214 = !DILocation(line: 275, column: 4, scope: !10211)
!10215 = !DILocation(line: 275, column: 9, scope: !10211)
!10216 = !DILocation(line: 275, column: 3, scope: !10211)
!10217 = !DILocation(line: 277, column: 6, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10170, file: !155, line: 277, column: 6)
!10219 = !DILocation(line: 277, column: 13, scope: !10218)
!10220 = !DILocation(line: 277, column: 10, scope: !10218)
!10221 = !DILocation(line: 277, column: 6, scope: !10170)
!10222 = !DILocation(line: 278, column: 3, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10218, file: !155, line: 277, column: 16)
!10224 = !{i32 -2144304565}
!10225 = !DILocation(line: 279, column: 3, scope: !10223)
!10226 = !DILocation(line: 282, column: 6, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10170, file: !155, line: 282, column: 6)
!10228 = !DILocation(line: 282, column: 6, scope: !10170)
!10229 = !DILocation(line: 283, column: 26, scope: !10227)
!10230 = !DILocation(line: 283, column: 3, scope: !10227)
!10231 = !DILocation(line: 285, column: 2, scope: !10170)
!10232 = !DILocation(line: 286, column: 1, scope: !10170)
!10233 = distinct !DISubprogram(name: "__list_add", scope: !7727, file: !7727, line: 63, type: !10234, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10234 = !DISubroutineType(types: !10235)
!10235 = !{null, !173, !173, !173}
!10236 = !DILocalVariable(name: "new", arg: 1, scope: !10233, file: !7727, line: 63, type: !173)
!10237 = !DILocation(line: 63, column: 49, scope: !10233)
!10238 = !DILocalVariable(name: "prev", arg: 2, scope: !10233, file: !7727, line: 64, type: !173)
!10239 = !DILocation(line: 64, column: 28, scope: !10233)
!10240 = !DILocalVariable(name: "next", arg: 3, scope: !10233, file: !7727, line: 65, type: !173)
!10241 = !DILocation(line: 65, column: 28, scope: !10233)
!10242 = !DILocation(line: 67, column: 24, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10233, file: !7727, line: 67, column: 6)
!10244 = !DILocation(line: 67, column: 29, scope: !10243)
!10245 = !DILocation(line: 67, column: 35, scope: !10243)
!10246 = !DILocation(line: 67, column: 7, scope: !10243)
!10247 = !DILocation(line: 67, column: 6, scope: !10233)
!10248 = !DILocation(line: 68, column: 3, scope: !10243)
!10249 = !DILocation(line: 70, column: 15, scope: !10233)
!10250 = !DILocation(line: 70, column: 2, scope: !10233)
!10251 = !DILocation(line: 70, column: 8, scope: !10233)
!10252 = !DILocation(line: 70, column: 13, scope: !10233)
!10253 = !DILocation(line: 71, column: 14, scope: !10233)
!10254 = !DILocation(line: 71, column: 2, scope: !10233)
!10255 = !DILocation(line: 71, column: 7, scope: !10233)
!10256 = !DILocation(line: 71, column: 12, scope: !10233)
!10257 = !DILocation(line: 72, column: 14, scope: !10233)
!10258 = !DILocation(line: 72, column: 2, scope: !10233)
!10259 = !DILocation(line: 72, column: 7, scope: !10233)
!10260 = !DILocation(line: 72, column: 12, scope: !10233)
!10261 = !DILocation(line: 73, column: 2, scope: !10233)
!10262 = !DILocation(line: 73, column: 2, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10233, file: !7727, line: 73, column: 2)
!10264 = !DILocation(line: 73, column: 2, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10263, file: !7727, line: 73, column: 2)
!10266 = !DILocation(line: 73, column: 2, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10263, file: !7727, line: 73, column: 2)
!10268 = !DILocation(line: 74, column: 1, scope: !10233)
!10269 = distinct !DISubprogram(name: "__list_add_valid", scope: !7727, file: !7727, line: 45, type: !10270, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10270 = !DISubroutineType(types: !10271)
!10271 = !{!190, !173, !173, !173}
!10272 = !DILocalVariable(name: "new", arg: 1, scope: !10269, file: !7727, line: 45, type: !173)
!10273 = !DILocation(line: 45, column: 55, scope: !10269)
!10274 = !DILocalVariable(name: "prev", arg: 2, scope: !10269, file: !7727, line: 46, type: !173)
!10275 = !DILocation(line: 46, column: 23, scope: !10269)
!10276 = !DILocalVariable(name: "next", arg: 3, scope: !10269, file: !7727, line: 47, type: !173)
!10277 = !DILocation(line: 47, column: 23, scope: !10269)
!10278 = !DILocation(line: 49, column: 2, scope: !10269)
!10279 = distinct !DISubprogram(name: "refcount_set", scope: !155, file: !155, line: 134, type: !10280, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10280 = !DISubroutineType(types: !10281)
!10281 = !{null, !9798, !188}
!10282 = !DILocalVariable(name: "v", arg: 1, scope: !10283, file: !9820, line: 39, type: !9823)
!10283 = distinct !DISubprogram(name: "arch_atomic_set", scope: !9820, file: !9820, line: 39, type: !10284, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10284 = !DISubroutineType(types: !10285)
!10285 = !{null, !9823, !188}
!10286 = !DILocation(line: 39, column: 55, scope: !10283, inlinedAt: !10287)
!10287 = distinct !DILocation(line: 46, column: 2, scope: !10288, inlinedAt: !10289)
!10288 = distinct !DISubprogram(name: "atomic_set", scope: !9827, file: !9827, line: 43, type: !10284, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10289 = distinct !DILocation(line: 136, column: 2, scope: !10279)
!10290 = !DILocalVariable(name: "i", arg: 2, scope: !10283, file: !9820, line: 39, type: !188)
!10291 = !DILocation(line: 39, column: 62, scope: !10283, inlinedAt: !10287)
!10292 = !DILocalVariable(name: "v", arg: 1, scope: !10293, file: !9836, line: 84, type: !9839)
!10293 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !9836, file: !9836, line: 84, type: !9837, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10294 = !DILocation(line: 84, column: 74, scope: !10293, inlinedAt: !10295)
!10295 = distinct !DILocation(line: 45, column: 2, scope: !10288, inlinedAt: !10289)
!10296 = !DILocalVariable(name: "size", arg: 2, scope: !10293, file: !9836, line: 84, type: !417)
!10297 = !DILocation(line: 84, column: 84, scope: !10293, inlinedAt: !10295)
!10298 = !DILocalVariable(name: "v", arg: 1, scope: !10288, file: !9827, line: 43, type: !9823)
!10299 = !DILocation(line: 43, column: 22, scope: !10288, inlinedAt: !10289)
!10300 = !DILocalVariable(name: "i", arg: 2, scope: !10288, file: !9827, line: 43, type: !188)
!10301 = !DILocation(line: 43, column: 29, scope: !10288, inlinedAt: !10289)
!10302 = !DILocalVariable(name: "r", arg: 1, scope: !10279, file: !155, line: 134, type: !9798)
!10303 = !DILocation(line: 134, column: 45, scope: !10279)
!10304 = !DILocalVariable(name: "n", arg: 2, scope: !10279, file: !155, line: 134, type: !188)
!10305 = !DILocation(line: 134, column: 52, scope: !10279)
!10306 = !DILocation(line: 136, column: 14, scope: !10279)
!10307 = !DILocation(line: 136, column: 17, scope: !10279)
!10308 = !DILocation(line: 136, column: 23, scope: !10279)
!10309 = !DILocation(line: 45, column: 26, scope: !10288, inlinedAt: !10289)
!10310 = !DILocation(line: 86, column: 20, scope: !10293, inlinedAt: !10295)
!10311 = !DILocation(line: 86, column: 23, scope: !10293, inlinedAt: !10295)
!10312 = !DILocation(line: 86, column: 2, scope: !10293, inlinedAt: !10295)
!10313 = !DILocation(line: 87, column: 2, scope: !10293, inlinedAt: !10295)
!10314 = !DILocation(line: 46, column: 18, scope: !10288, inlinedAt: !10289)
!10315 = !DILocation(line: 46, column: 21, scope: !10288, inlinedAt: !10289)
!10316 = !DILocation(line: 41, column: 2, scope: !10317, inlinedAt: !10287)
!10317 = distinct !DILexicalBlock(scope: !10283, file: !9820, line: 41, column: 2)
!10318 = !DILocation(line: 137, column: 1, scope: !10279)
!10319 = distinct !DISubprogram(name: "regulator_is_supported_voltage", scope: !4937, file: !4937, line: 489, type: !5669, scopeLine: 491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10320 = !DILocalVariable(name: "regulator", arg: 1, scope: !10319, file: !4937, line: 489, type: !4935)
!10321 = !DILocation(line: 489, column: 68, scope: !10319)
!10322 = !DILocalVariable(name: "min_uV", arg: 2, scope: !10319, file: !4937, line: 490, type: !188)
!10323 = !DILocation(line: 490, column: 12, scope: !10319)
!10324 = !DILocalVariable(name: "max_uV", arg: 3, scope: !10319, file: !4937, line: 490, type: !188)
!10325 = !DILocation(line: 490, column: 24, scope: !10319)
!10326 = !DILocation(line: 492, column: 2, scope: !10319)
!10327 = distinct !DISubprogram(name: "kobject_name", scope: !332, file: !332, line: 88, type: !10328, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !253)
!10328 = !DISubroutineType(types: !10329)
!10329 = !{!289, !10330}
!10330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10331, size: 64)
!10331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !331)
!10332 = !DILocalVariable(name: "kobj", arg: 1, scope: !10327, file: !332, line: 88, type: !10330)
!10333 = !DILocation(line: 88, column: 62, scope: !10327)
!10334 = !DILocation(line: 90, column: 9, scope: !10327)
!10335 = !DILocation(line: 90, column: 15, scope: !10327)
!10336 = !DILocation(line: 90, column: 2, scope: !10327)
