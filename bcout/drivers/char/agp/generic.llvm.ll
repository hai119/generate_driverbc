; ModuleID = '../bcout/drivers/char/agp/generic.llvm.bc'
source_filename = "drivers/char/agp/generic.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.agp_bridge_data = type { %struct.agp_version*, %struct.agp_bridge_driver*, %struct.vm_operations_struct*, i8*, i8*, i8*, %struct.pci_dev*, i32*, i32*, i64, %struct.page*, i64, i64, i64, i32, i32, i64*, %struct.atomic_t, %struct.atomic_t, i32, i32, i32, i32, i8, i8, %struct.list_head, i32, %struct.list_head, %struct.spinlock }
%struct.agp_version = type { i16, i16 }
%struct.agp_bridge_driver = type { %struct.module*, i8*, i32, i32, i8, i8, %struct.gatt_mask*, i32 ()*, i32 ()*, void (%struct.agp_bridge_data*, i32)*, void ()*, void (%struct.agp_memory*)*, i64 (%struct.agp_bridge_data*, i64, i32)*, void ()*, i32 (%struct.agp_bridge_data*)*, i32 (%struct.agp_bridge_data*)*, i32 (%struct.agp_memory*, i64, i32)*, i32 (%struct.agp_memory*, i64, i32)*, %struct.agp_memory* (i64, i32)*, void (%struct.agp_memory*)*, %struct.page* (%struct.agp_bridge_data*)*, i32 (%struct.agp_bridge_data*, %struct.agp_memory*, i64)*, void (%struct.page*, i32)*, void (%struct.agp_memory*)*, i32 (%struct.agp_bridge_data*, i32)* }
%struct.module = type opaque
%struct.gatt_mask = type { i64, i32 }
%struct.agp_memory = type { %struct.agp_memory*, %struct.agp_memory*, %struct.agp_bridge_data*, %struct.page**, i64, i32, i32, i64, i32, i32, i8, i8, %struct.list_head, %struct.scatterlist*, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.8, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.mm_struct = type { %struct.anon.7, [0 x i64] }
%struct.anon.7 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.37, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.9 }
%union.anon.9 = type { %struct.anon.10 }
%struct.anon.10 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.22 }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.22 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.14, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.15, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.16, %union.anon.20, %struct.key_restriction* }
%union.anon.14 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.15 = type { i64 }
%union.anon.16 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.17, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.17 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.20 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.23, %union.anon.24, i32 }
%struct.request_queue = type opaque
%union.anon.23 = type { %struct.list_head }
%union.anon.24 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.25 }
%struct.anon.25 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.29 }
%struct.anon.29 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.36, i32, [12 x i8] }
%union.anon.36 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.37 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.38, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.41 }
%union.anon.38 = type { %struct.anon.39 }
%struct.anon.39 = type { i64, i64 }
%union.anon.41 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.user_namespace = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.pgprot = type { i64 }
%struct.anon.8 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.42, %struct.list_head, %struct.list_head, %union.anon.43 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.4 }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type opaque
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.6, i32 }
%union.anon.6 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.42 = type { %struct.list_head }
%union.anon.43 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.62, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.63, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.64, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.65, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.62 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.63 = type { %struct.callback_head }
%union.anon.64 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.44 }
%union.anon.44 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.65 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.45 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.45 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.atomic64_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.61, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.60, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.60 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.driver_private = type opaque
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.pci_vpd = type opaque
%union.anon.61 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.page = type { i64, %union.anon, %union.anon.59, %struct.atomic_t, [8 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.59 = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.aper_size_info_16 = type { i32, i32, i32, i16 }
%struct.kmem_cache = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.aper_size_info_8 = type { i32, i32, i32, i8 }
%struct.aper_size_info_32 = type { i32, i32, i32, i32 }
%struct.aper_size_info_lvl2 = type { i32, i32, i32 }
%struct.aper_size_info_fixed = type { i32, i32, i32 }
%struct.agp_kern_info = type { %struct.agp_version, %struct.pci_dev*, i32, i64, i64, i64, i32, i32, i8, i64, %struct.vm_operations_struct* }
%struct.pci_bus_region = type { i64, i64 }
%struct.nodemask_t = type { [1 x i64] }
%struct.anon.53 = type { i64, i8, i8, %struct.atomic_t, i32 }

@agp_bridge = external dso_local global %struct.agp_bridge_data*, align 8
@agp_memory_reserved = dso_local global i32 0, align 4, !dbg !0
@.str = private unnamed_addr constant [40 x i8] c"\016agpgart: memory %p is already bound!\0A\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"\016agpgart: memory %p was not bound!\0A\00", align 1
@.str.2 = private unnamed_addr constant [49 x i8] c"\016agpgart: Couldn't find an AGP VGA controller.\0A\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"putting AGP V%d device into %dx mode\0A\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"AGP %d.%d bridge\0A\00", align 1
@.str.5 = private unnamed_addr constant [47 x i8] c"bridge is in legacy mode, falling back to 2.x\0A\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@agp_gatt_table = dso_local global i32* null, align 8, !dbg !3110
@.str.6 = private unnamed_addr constant [42 x i8] c"\014Could not set GATT table memory to UC!\0A\00", align 1
@agp_bridges = external dso_local global %struct.list_head, align 8
@agp3_generic_sizes = dso_local constant [11 x %struct.aper_size_info_16] [%struct.aper_size_info_16 { i32 4096, i32 1048576, i32 10, i16 0 }, %struct.aper_size_info_16 { i32 2048, i32 524288, i32 9, i16 2048 }, %struct.aper_size_info_16 { i32 1024, i32 262144, i32 8, i16 3072 }, %struct.aper_size_info_16 { i32 512, i32 131072, i32 7, i16 3584 }, %struct.aper_size_info_16 { i32 256, i32 65536, i32 6, i16 3840 }, %struct.aper_size_info_16 { i32 128, i32 32768, i32 5, i16 3872 }, %struct.aper_size_info_16 { i32 64, i32 16384, i32 4, i16 3888 }, %struct.aper_size_info_16 { i32 32, i32 8192, i32 3, i16 3896 }, %struct.aper_size_info_16 { i32 16, i32 4096, i32 2, i16 3900 }, %struct.aper_size_info_16 { i32 8, i32 2048, i32 1, i16 3902 }, %struct.aper_size_info_16 { i32 4, i32 1024, i32 0, i16 3903 }], align 16, !dbg !3104
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.7 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.8 = private unnamed_addr constant [56 x i8] c"\016agpgart: reserved bits set (%x) in mode 0x%x. Fixed.\0A\00", align 1
@.str.9 = private unnamed_addr constant [62 x i8] c"\016agpgart: %s tried to set rate=x0. Setting to AGP3 x4 mode.\0A\00", align 1
@.str.10 = private unnamed_addr constant [63 x i8] c"\016agpgart: %s tried to set rate=x%d. Setting to AGP3 x8 mode.\0A\00", align 1
@.str.11 = private unnamed_addr constant [53 x i8] c"\016agpgart: %s passes broken AGP3 flags (%x). Fixed.\0A\00", align 1
@.str.12 = private unnamed_addr constant [66 x i8] c"\016agpgart: %s passes broken AGP2 flags (%x) in AGP3 mode. Fixed.\0A\00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c"\016agpgart: %s requested AGPx8 but bridge not capable.\0A\00", align 1
@.str.14 = private unnamed_addr constant [61 x i8] c"\016agpgart: %s requested AGPx8 but graphic card not capable.\0A\00", align 1
@.str.15 = private unnamed_addr constant [92 x i8] c"\016agpgart: No AGP mode specified. Setting to highest mode supported by bridge & card (x8).\0A\00", align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"\016agpgart: Fell back to AGPx4 mode because \00", align 1
@.str.17 = private unnamed_addr constant [63 x i8] c"\016agpgart: bridge couldn't do x8. bridge_agpstat:%x (orig=%x)\0A\00", align 1
@.str.18 = private unnamed_addr constant [67 x i8] c"\016agpgart: graphics card couldn't do x8. vga_agpstat:%x (orig=%x)\0A\00", align 1
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@.str.19 = private unnamed_addr constant [95 x i8] c"\016agpgart: BIOS bug. AGP bridge claims to only support x4 rate. Fixing up support for x2 & x1\0A\00", align 1
@.str.20 = private unnamed_addr constant [90 x i8] c"\016agpgart: BIOS bug. AGP bridge claims to only support x2 rate. Fixing up support for x1\0A\00", align 1
@.str.21 = private unnamed_addr constant [57 x i8] c"\016agpgart: %s tried to set rate=x0. Setting to x1 mode.\0A\00", align 1
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @agp_free_key(i32 %key) #0 !dbg !3119 {
entry:
  %key.addr = alloca i32, align 4
  store i32 %key, i32* %key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %key.addr, metadata !3120, metadata !DIExpression()), !dbg !3121
  %0 = load i32, i32* %key.addr, align 4, !dbg !3122
  %cmp = icmp slt i32 %0, 0, !dbg !3124
  br i1 %cmp, label %if.then, label %if.end, !dbg !3125

if.then:                                          ; preds = %entry
  br label %if.end3, !dbg !3126

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %key.addr, align 4, !dbg !3127
  %cmp1 = icmp slt i32 %1, 131072, !dbg !3129
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3130

if.then2:                                         ; preds = %if.end
  %2 = load i32, i32* %key.addr, align 4, !dbg !3131
  %conv = sext i32 %2 to i64, !dbg !3131
  %3 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !3132
  %key_list = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %3, i32 0, i32 16, !dbg !3133
  %4 = load i64*, i64** %key_list, align 8, !dbg !3133
  call void @clear_bit(i64 %conv, i64* %4) #10, !dbg !3134
  br label %if.end3, !dbg !3134

if.end3:                                          ; preds = %if.then, %if.then2, %if.end
  ret void, !dbg !3135
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !3136 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !3141, metadata !DIExpression()), !dbg !3144
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !3146, metadata !DIExpression()), !dbg !3147
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !3148, metadata !DIExpression()), !dbg !3156
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !3158, metadata !DIExpression()), !dbg !3159
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !3160, metadata !DIExpression()), !dbg !3161
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !3162, metadata !DIExpression()), !dbg !3163
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !3164
  %1 = load i64, i64* %nr.addr, align 8, !dbg !3165
  %div = sdiv i64 %1, 64, !dbg !3165
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !3166
  %2 = bitcast i64* %add.ptr to i8*, !dbg !3164
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !3167
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !3168
  %conv.i = trunc i64 %4 to i32, !dbg !3168
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !3169
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !3170
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !3170
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #11, !dbg !3170
  %7 = load i64, i64* %nr.addr, align 8, !dbg !3171
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !3172
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !3173
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #9, !dbg !3175
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !3176

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !3177
  %12 = bitcast i64* %11 to i8*, !dbg !3177
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !3177
  %shr.i = ashr i64 %13, 3, !dbg !3177
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !3177
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !3179
  %and.i = and i64 %14, 7, !dbg !3179
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !3179
  %shl.i = shl i32 1, %sh_prom.i, !dbg !3179
  %neg.i = xor i32 %shl.i, -1, !dbg !3180
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #9, !dbg !3181, !srcloc !3182
  br label %arch_clear_bit.exit, !dbg !3183

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !3184
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !3186
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #9, !dbg !3187, !srcloc !3188
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !3189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @agp_alloc_page_array(i64 %size, %struct.agp_memory* %mem) #0 !dbg !3190 {
entry:
  %size.addr = alloca i64, align 8
  %mem.addr = alloca %struct.agp_memory*, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4354, metadata !DIExpression()), !dbg !4355
  store %struct.agp_memory* %mem, %struct.agp_memory** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_memory** %mem.addr, metadata !4356, metadata !DIExpression()), !dbg !4357
  %0 = load i64, i64* %size.addr, align 8, !dbg !4358
  %call = call i8* @kvmalloc(i64 %0, i32 3264) #10, !dbg !4359
  %1 = bitcast i8* %call to %struct.page**, !dbg !4359
  %2 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !4360
  %pages = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %2, i32 0, i32 3, !dbg !4361
  store %struct.page** %1, %struct.page*** %pages, align 8, !dbg !4362
  ret void, !dbg !4363
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kvmalloc(i64 %size, i32 %flags) #0 !dbg !4364 {
entry:
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4367, metadata !DIExpression()), !dbg !4368
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4369, metadata !DIExpression()), !dbg !4370
  %0 = load i64, i64* %size.addr, align 8, !dbg !4371
  %1 = load i32, i32* %flags.addr, align 4, !dbg !4372
  %call = call i8* @kvmalloc_node(i64 %0, i32 %1, i32 -1) #10, !dbg !4373
  ret i8* %call, !dbg !4374
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.agp_memory* @agp_create_memory(i32 %scratch_pages) #0 !dbg !4375 {
entry:
  %retval = alloca %struct.agp_memory*, align 8
  %scratch_pages.addr = alloca i32, align 4
  %new = alloca %struct.agp_memory*, align 8
  store i32 %scratch_pages, i32* %scratch_pages.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scratch_pages.addr, metadata !4378, metadata !DIExpression()), !dbg !4379
  call void @llvm.dbg.declare(metadata %struct.agp_memory** %new, metadata !4380, metadata !DIExpression()), !dbg !4381
  %call = call i8* @kzalloc(i64 104, i32 3264) #10, !dbg !4382
  %0 = bitcast i8* %call to %struct.agp_memory*, !dbg !4382
  store %struct.agp_memory* %0, %struct.agp_memory** %new, align 8, !dbg !4383
  %1 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !4384
  %cmp = icmp eq %struct.agp_memory* %1, null, !dbg !4386
  br i1 %cmp, label %if.then, label %if.end, !dbg !4387

if.then:                                          ; preds = %entry
  store %struct.agp_memory* null, %struct.agp_memory** %retval, align 8, !dbg !4388
  br label %return, !dbg !4388

if.end:                                           ; preds = %entry
  %call1 = call i32 @agp_get_key() #10, !dbg !4389
  %2 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !4390
  %key = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %2, i32 0, i32 5, !dbg !4391
  store i32 %call1, i32* %key, align 8, !dbg !4392
  %3 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !4393
  %key2 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %3, i32 0, i32 5, !dbg !4395
  %4 = load i32, i32* %key2, align 8, !dbg !4395
  %cmp3 = icmp slt i32 %4, 0, !dbg !4396
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !4397

if.then4:                                         ; preds = %if.end
  %5 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !4398
  %6 = bitcast %struct.agp_memory* %5 to i8*, !dbg !4398
  call void @kfree(i8* %6) #10, !dbg !4400
  store %struct.agp_memory* null, %struct.agp_memory** %retval, align 8, !dbg !4401
  br label %return, !dbg !4401

if.end5:                                          ; preds = %if.end
  %7 = load i32, i32* %scratch_pages.addr, align 4, !dbg !4402
  %conv = sext i32 %7 to i64, !dbg !4402
  %mul = mul i64 4096, %conv, !dbg !4403
  %8 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !4404
  call void @agp_alloc_page_array(i64 %mul, %struct.agp_memory* %8) #10, !dbg !4405
  %9 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !4406
  %pages = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %9, i32 0, i32 3, !dbg !4408
  %10 = load %struct.page**, %struct.page*** %pages, align 8, !dbg !4408
  %cmp6 = icmp eq %struct.page** %10, null, !dbg !4409
  br i1 %cmp6, label %if.then8, label %if.end10, !dbg !4410

if.then8:                                         ; preds = %if.end5
  %11 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !4411
  %key9 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %11, i32 0, i32 5, !dbg !4413
  %12 = load i32, i32* %key9, align 8, !dbg !4413
  call void @agp_free_key(i32 %12) #10, !dbg !4414
  %13 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !4415
  %14 = bitcast %struct.agp_memory* %13 to i8*, !dbg !4415
  call void @kfree(i8* %14) #10, !dbg !4416
  store %struct.agp_memory* null, %struct.agp_memory** %retval, align 8, !dbg !4417
  br label %return, !dbg !4417

if.end10:                                         ; preds = %if.end5
  %15 = load i32, i32* %scratch_pages.addr, align 4, !dbg !4418
  %16 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !4419
  %num_scratch_pages = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %16, i32 0, i32 6, !dbg !4420
  store i32 %15, i32* %num_scratch_pages, align 4, !dbg !4421
  %17 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !4422
  %type = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %17, i32 0, i32 8, !dbg !4423
  store i32 0, i32* %type, align 8, !dbg !4424
  %18 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !4425
  store %struct.agp_memory* %18, %struct.agp_memory** %retval, align 8, !dbg !4426
  br label %return, !dbg !4426

return:                                           ; preds = %if.end10, %if.then8, %if.then4, %if.then
  %19 = load %struct.agp_memory*, %struct.agp_memory** %retval, align 8, !dbg !4427
  ret %struct.agp_memory* %19, !dbg !4427
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !4428 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4429, metadata !DIExpression()), !dbg !4433
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4439, metadata !DIExpression()), !dbg !4440
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4441, metadata !DIExpression()), !dbg !4442
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4443, metadata !DIExpression()), !dbg !4444
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4445, metadata !DIExpression()), !dbg !4449
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4451, metadata !DIExpression()), !dbg !4455
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4457, metadata !DIExpression()), !dbg !4461
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4466, metadata !DIExpression()), !dbg !4467
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4468, metadata !DIExpression()), !dbg !4469
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4470, metadata !DIExpression()), !dbg !4471
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4472, metadata !DIExpression()), !dbg !4473
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4474, metadata !DIExpression()), !dbg !4475
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4476, metadata !DIExpression()), !dbg !4477
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4478, metadata !DIExpression()), !dbg !4479
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4480, metadata !DIExpression()), !dbg !4481
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4482, metadata !DIExpression()), !dbg !4483
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4484, metadata !DIExpression()), !dbg !4485
  %0 = load i64, i64* %size.addr, align 8, !dbg !4486
  %1 = load i32, i32* %flags.addr, align 4, !dbg !4487
  %or = or i32 %1, 256, !dbg !4488
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !4489
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #9, !dbg !4490
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !4491

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !4492
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !4493
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !4494

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !4495
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !4496
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !4497
  %call.i.i = call i32 @get_order(i64 %7) #12, !dbg !4498
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !4475
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !4499
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !4500
  %10 = load i32, i32* %order.i.i, align 4, !dbg !4501
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !4502
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !4503
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !4504
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #11, !dbg !4505
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !4505
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !4505
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !4505
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !4505
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !4506
  br label %kmalloc.exit, !dbg !4506

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !4507
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4508
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !4508
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !4510

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !4511
  br label %kmalloc_index.exit.i, !dbg !4511

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4512
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !4514
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !4515

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !4516
  br label %kmalloc_index.exit.i, !dbg !4516

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4517
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !4519
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !4520

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4521
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !4522
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !4523

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !4524
  br label %kmalloc_index.exit.i, !dbg !4524

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4525
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !4527
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !4528

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4529
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !4530
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !4531

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !4532
  br label %kmalloc_index.exit.i, !dbg !4532

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4533
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !4535
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !4536

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !4537
  br label %kmalloc_index.exit.i, !dbg !4537

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4538
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !4540
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !4541

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !4542
  br label %kmalloc_index.exit.i, !dbg !4542

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4543
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !4545
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !4546

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !4547
  br label %kmalloc_index.exit.i, !dbg !4547

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4548
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !4550
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !4551

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !4552
  br label %kmalloc_index.exit.i, !dbg !4552

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4553
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !4555
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !4556

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !4557
  br label %kmalloc_index.exit.i, !dbg !4557

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4558
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !4560
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !4561

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !4562
  br label %kmalloc_index.exit.i, !dbg !4562

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4563
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !4565
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !4566

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !4567
  br label %kmalloc_index.exit.i, !dbg !4567

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4568
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !4570
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !4571

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !4572
  br label %kmalloc_index.exit.i, !dbg !4572

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4573
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !4575
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !4576

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !4577
  br label %kmalloc_index.exit.i, !dbg !4577

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4578
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !4580
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !4581

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !4582
  br label %kmalloc_index.exit.i, !dbg !4582

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4583
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !4585
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !4586

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !4587
  br label %kmalloc_index.exit.i, !dbg !4587

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4588
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !4590
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !4591

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !4592
  br label %kmalloc_index.exit.i, !dbg !4592

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4593
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !4595
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !4596

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !4597
  br label %kmalloc_index.exit.i, !dbg !4597

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4598
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !4600
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !4601

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !4602
  br label %kmalloc_index.exit.i, !dbg !4602

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4603
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !4605
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !4606

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !4607
  br label %kmalloc_index.exit.i, !dbg !4607

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4608
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !4610
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !4611

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !4612
  br label %kmalloc_index.exit.i, !dbg !4612

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4613
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !4615
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !4616

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !4617
  br label %kmalloc_index.exit.i, !dbg !4617

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4618
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !4620
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !4621

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !4622
  br label %kmalloc_index.exit.i, !dbg !4622

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4623
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !4625
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !4626

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !4627
  br label %kmalloc_index.exit.i, !dbg !4627

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4628
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !4630
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !4631

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !4632
  br label %kmalloc_index.exit.i, !dbg !4632

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4633
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !4635
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !4636

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !4637
  br label %kmalloc_index.exit.i, !dbg !4637

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4638
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !4640
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !4641

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !4642
  br label %kmalloc_index.exit.i, !dbg !4642

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4643
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !4645
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !4646

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !4647
  br label %kmalloc_index.exit.i, !dbg !4647

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4648
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !4650
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !4651

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !4652
  br label %kmalloc_index.exit.i, !dbg !4652

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !4653, !srcloc !4656
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #9, !dbg !4657, !srcloc !4660
  unreachable, !dbg !4661

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !4662
  store i32 %45, i32* %index.i, align 4, !dbg !4663
  %46 = load i32, i32* %index.i, align 4, !dbg !4664
  %tobool.i = icmp ne i32 %46, 0, !dbg !4664
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !4666

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !4667
  br label %kmalloc.exit, !dbg !4667

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !4668
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4669
  %and.i.i = and i32 %48, 17, !dbg !4669
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !4669
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !4669
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !4669
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !4669
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !4671

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !4672
  br label %kmalloc_type.exit.i, !dbg !4672

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4673
  %and2.i.i = and i32 %49, 1, !dbg !4674
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !4673
  %50 = zext i1 %tobool3.i.i to i64, !dbg !4673
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !4673
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !4675
  br label %kmalloc_type.exit.i, !dbg !4675

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !4676
  %idxprom.i = zext i32 %51 to i64, !dbg !4677
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !4677
  %52 = load i32, i32* %index.i, align 4, !dbg !4678
  %idxprom6.i = zext i32 %52 to i64, !dbg !4677
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !4677
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !4677
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !4679
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !4680
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4681
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4682
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #11, !dbg !4683
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !4683
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !4683
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !4683
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !4683
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !4444
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4684
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !4685
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !4686
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4687
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #11, !dbg !4688
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !4689
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !4690
  store i8* %62, i8** %retval.i, align 8, !dbg !4691
  br label %kmalloc.exit, !dbg !4691

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !4692
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !4693
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #11, !dbg !4694
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !4694
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !4694
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !4694
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !4694
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !4695
  br label %kmalloc.exit, !dbg !4695

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !4696
  ret i8* %65, !dbg !4697
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @agp_get_key() #0 !dbg !4698 {
entry:
  %retval = alloca i32, align 4
  %bit = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bit, metadata !4699, metadata !DIExpression()), !dbg !4700
  %0 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !4701
  %key_list = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %0, i32 0, i32 16, !dbg !4702
  %1 = load i64*, i64** %key_list, align 8, !dbg !4702
  %call = call i64 @find_first_zero_bit(i64* %1, i64 131072) #10, !dbg !4703
  %conv = trunc i64 %call to i32, !dbg !4703
  store i32 %conv, i32* %bit, align 4, !dbg !4704
  %2 = load i32, i32* %bit, align 4, !dbg !4705
  %cmp = icmp slt i32 %2, 131072, !dbg !4707
  br i1 %cmp, label %if.then, label %if.end, !dbg !4708

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %bit, align 4, !dbg !4709
  %conv2 = sext i32 %3 to i64, !dbg !4709
  %4 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !4711
  %key_list3 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %4, i32 0, i32 16, !dbg !4712
  %5 = load i64*, i64** %key_list3, align 8, !dbg !4712
  call void @set_bit(i64 %conv2, i64* %5) #10, !dbg !4713
  %6 = load i32, i32* %bit, align 4, !dbg !4714
  store i32 %6, i32* %retval, align 4, !dbg !4715
  br label %return, !dbg !4715

if.end:                                           ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !4716
  br label %return, !dbg !4716

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !4717
  ret i32 %7, !dbg !4717
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @agp_free_memory(%struct.agp_memory* %curr) #0 !dbg !4718 {
entry:
  %curr.addr = alloca %struct.agp_memory*, align 8
  %i = alloca i64, align 8
  store %struct.agp_memory* %curr, %struct.agp_memory** %curr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_memory** %curr.addr, metadata !4719, metadata !DIExpression()), !dbg !4720
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4721, metadata !DIExpression()), !dbg !4722
  %0 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4723
  %cmp = icmp eq %struct.agp_memory* %0, null, !dbg !4725
  br i1 %cmp, label %if.then, label %if.end, !dbg !4726

if.then:                                          ; preds = %entry
  br label %return, !dbg !4727

if.end:                                           ; preds = %entry
  %1 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4728
  %is_bound = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %1, i32 0, i32 10, !dbg !4730
  %2 = load i8, i8* %is_bound, align 8, !dbg !4730
  %tobool = trunc i8 %2 to i1, !dbg !4730
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !4731

if.then1:                                         ; preds = %if.end
  %3 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4732
  %call = call i32 @agp_unbind_memory(%struct.agp_memory* %3) #10, !dbg !4733
  br label %if.end2, !dbg !4733

if.end2:                                          ; preds = %if.then1, %if.end
  %4 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4734
  %type = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %4, i32 0, i32 8, !dbg !4736
  %5 = load i32, i32* %type, align 8, !dbg !4736
  %cmp3 = icmp uge i32 %5, 65536, !dbg !4737
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !4738

if.then4:                                         ; preds = %if.end2
  %6 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4739
  call void @agp_generic_free_by_type(%struct.agp_memory* %6) #10, !dbg !4741
  br label %return, !dbg !4742

if.end5:                                          ; preds = %if.end2
  %7 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4743
  %type6 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %7, i32 0, i32 8, !dbg !4745
  %8 = load i32, i32* %type6, align 8, !dbg !4745
  %cmp7 = icmp ne i32 %8, 0, !dbg !4746
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !4747

if.then8:                                         ; preds = %if.end5
  %9 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4748
  %bridge = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %9, i32 0, i32 2, !dbg !4750
  %10 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !4750
  %driver = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %10, i32 0, i32 1, !dbg !4751
  %11 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver, align 8, !dbg !4751
  %free_by_type = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %11, i32 0, i32 19, !dbg !4752
  %12 = load void (%struct.agp_memory*)*, void (%struct.agp_memory*)** %free_by_type, align 8, !dbg !4752
  %13 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4753
  call void %12(%struct.agp_memory* %13) #10, !dbg !4748
  br label %return, !dbg !4754

if.end9:                                          ; preds = %if.end5
  %14 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4755
  %page_count = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %14, i32 0, i32 4, !dbg !4757
  %15 = load i64, i64* %page_count, align 8, !dbg !4757
  %cmp10 = icmp ne i64 %15, 0, !dbg !4758
  br i1 %cmp10, label %if.then11, label %if.end36, !dbg !4759

if.then11:                                        ; preds = %if.end9
  %16 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4760
  %bridge12 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %16, i32 0, i32 2, !dbg !4763
  %17 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge12, align 8, !dbg !4763
  %driver13 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %17, i32 0, i32 1, !dbg !4764
  %18 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver13, align 8, !dbg !4764
  %agp_destroy_pages = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %18, i32 0, i32 23, !dbg !4765
  %19 = load void (%struct.agp_memory*)*, void (%struct.agp_memory*)** %agp_destroy_pages, align 8, !dbg !4765
  %tobool14 = icmp ne void (%struct.agp_memory*)* %19, null, !dbg !4760
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !4766

if.then15:                                        ; preds = %if.then11
  %20 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4767
  %bridge16 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %20, i32 0, i32 2, !dbg !4769
  %21 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge16, align 8, !dbg !4769
  %driver17 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %21, i32 0, i32 1, !dbg !4770
  %22 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver17, align 8, !dbg !4770
  %agp_destroy_pages18 = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %22, i32 0, i32 23, !dbg !4771
  %23 = load void (%struct.agp_memory*)*, void (%struct.agp_memory*)** %agp_destroy_pages18, align 8, !dbg !4771
  %24 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4772
  call void %23(%struct.agp_memory* %24) #10, !dbg !4767
  br label %if.end35, !dbg !4773

if.else:                                          ; preds = %if.then11
  store i64 0, i64* %i, align 8, !dbg !4774
  br label %for.cond, !dbg !4777

for.cond:                                         ; preds = %for.inc, %if.else
  %25 = load i64, i64* %i, align 8, !dbg !4778
  %26 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4780
  %page_count19 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %26, i32 0, i32 4, !dbg !4781
  %27 = load i64, i64* %page_count19, align 8, !dbg !4781
  %cmp20 = icmp ult i64 %25, %27, !dbg !4782
  br i1 %cmp20, label %for.body, label %for.end, !dbg !4783

for.body:                                         ; preds = %for.cond
  %28 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4784
  %bridge21 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %28, i32 0, i32 2, !dbg !4786
  %29 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge21, align 8, !dbg !4786
  %driver22 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %29, i32 0, i32 1, !dbg !4787
  %30 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver22, align 8, !dbg !4787
  %agp_destroy_page = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %30, i32 0, i32 22, !dbg !4788
  %31 = load void (%struct.page*, i32)*, void (%struct.page*, i32)** %agp_destroy_page, align 8, !dbg !4788
  %32 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4789
  %pages = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %32, i32 0, i32 3, !dbg !4790
  %33 = load %struct.page**, %struct.page*** %pages, align 8, !dbg !4790
  %34 = load i64, i64* %i, align 8, !dbg !4791
  %arrayidx = getelementptr %struct.page*, %struct.page** %33, i64 %34, !dbg !4789
  %35 = load %struct.page*, %struct.page** %arrayidx, align 8, !dbg !4789
  call void %31(%struct.page* %35, i32 1) #10, !dbg !4784
  br label %for.inc, !dbg !4792

for.inc:                                          ; preds = %for.body
  %36 = load i64, i64* %i, align 8, !dbg !4793
  %inc = add i64 %36, 1, !dbg !4793
  store i64 %inc, i64* %i, align 8, !dbg !4793
  br label %for.cond, !dbg !4794, !llvm.loop !4795

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !4797
  br label %for.cond23, !dbg !4799

for.cond23:                                       ; preds = %for.inc32, %for.end
  %37 = load i64, i64* %i, align 8, !dbg !4800
  %38 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4802
  %page_count24 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %38, i32 0, i32 4, !dbg !4803
  %39 = load i64, i64* %page_count24, align 8, !dbg !4803
  %cmp25 = icmp ult i64 %37, %39, !dbg !4804
  br i1 %cmp25, label %for.body26, label %for.end34, !dbg !4805

for.body26:                                       ; preds = %for.cond23
  %40 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4806
  %bridge27 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %40, i32 0, i32 2, !dbg !4808
  %41 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge27, align 8, !dbg !4808
  %driver28 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %41, i32 0, i32 1, !dbg !4809
  %42 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver28, align 8, !dbg !4809
  %agp_destroy_page29 = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %42, i32 0, i32 22, !dbg !4810
  %43 = load void (%struct.page*, i32)*, void (%struct.page*, i32)** %agp_destroy_page29, align 8, !dbg !4810
  %44 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4811
  %pages30 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %44, i32 0, i32 3, !dbg !4812
  %45 = load %struct.page**, %struct.page*** %pages30, align 8, !dbg !4812
  %46 = load i64, i64* %i, align 8, !dbg !4813
  %arrayidx31 = getelementptr %struct.page*, %struct.page** %45, i64 %46, !dbg !4811
  %47 = load %struct.page*, %struct.page** %arrayidx31, align 8, !dbg !4811
  call void %43(%struct.page* %47, i32 2) #10, !dbg !4806
  br label %for.inc32, !dbg !4814

for.inc32:                                        ; preds = %for.body26
  %48 = load i64, i64* %i, align 8, !dbg !4815
  %inc33 = add i64 %48, 1, !dbg !4815
  store i64 %inc33, i64* %i, align 8, !dbg !4815
  br label %for.cond23, !dbg !4816, !llvm.loop !4817

for.end34:                                        ; preds = %for.cond23
  br label %if.end35

if.end35:                                         ; preds = %for.end34, %if.then15
  br label %if.end36, !dbg !4819

if.end36:                                         ; preds = %if.end35, %if.end9
  %49 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4820
  %key = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %49, i32 0, i32 5, !dbg !4821
  %50 = load i32, i32* %key, align 8, !dbg !4821
  call void @agp_free_key(i32 %50) #10, !dbg !4822
  %51 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4823
  call void @agp_free_page_array(%struct.agp_memory* %51) #10, !dbg !4824
  %52 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4825
  %53 = bitcast %struct.agp_memory* %52 to i8*, !dbg !4825
  call void @kfree(i8* %53) #10, !dbg !4826
  br label %return, !dbg !4827

return:                                           ; preds = %if.end36, %if.then8, %if.then4, %if.then
  ret void, !dbg !4827
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @agp_unbind_memory(%struct.agp_memory* %curr) #0 !dbg !4828 {
entry:
  %lock.addr.i12 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i12, metadata !4831, metadata !DIExpression()), !dbg !4836
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4838, metadata !DIExpression()), !dbg !4840
  %retval = alloca i32, align 4
  %curr.addr = alloca %struct.agp_memory*, align 8
  %ret_val = alloca i32, align 4
  store %struct.agp_memory* %curr, %struct.agp_memory** %curr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_memory** %curr.addr, metadata !4842, metadata !DIExpression()), !dbg !4843
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !4844, metadata !DIExpression()), !dbg !4845
  %0 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4846
  %cmp = icmp eq %struct.agp_memory* %0, null, !dbg !4848
  br i1 %cmp, label %if.then, label %if.end, !dbg !4849

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !4850
  br label %return, !dbg !4850

if.end:                                           ; preds = %entry
  %1 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4851
  %is_bound = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %1, i32 0, i32 10, !dbg !4853
  %2 = load i8, i8* %is_bound, align 8, !dbg !4853
  %tobool = trunc i8 %2 to i1, !dbg !4853
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !4854

if.then1:                                         ; preds = %if.end
  %3 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4855
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), %struct.agp_memory* %3) #13, !dbg !4857
  store i32 -22, i32* %retval, align 4, !dbg !4858
  br label %return, !dbg !4858

if.end2:                                          ; preds = %if.end
  %4 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4859
  %bridge = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %4, i32 0, i32 2, !dbg !4860
  %5 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !4860
  %driver = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %5, i32 0, i32 1, !dbg !4861
  %6 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver, align 8, !dbg !4861
  %remove_memory = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %6, i32 0, i32 17, !dbg !4862
  %7 = load i32 (%struct.agp_memory*, i64, i32)*, i32 (%struct.agp_memory*, i64, i32)** %remove_memory, align 8, !dbg !4862
  %8 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4863
  %9 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4864
  %pg_start = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %9, i32 0, i32 7, !dbg !4865
  %10 = load i64, i64* %pg_start, align 8, !dbg !4865
  %11 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4866
  %type = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %11, i32 0, i32 8, !dbg !4867
  %12 = load i32, i32* %type, align 8, !dbg !4867
  %call3 = call i32 %7(%struct.agp_memory* %8, i64 %10, i32 %12) #10, !dbg !4859
  store i32 %call3, i32* %ret_val, align 4, !dbg !4868
  %13 = load i32, i32* %ret_val, align 4, !dbg !4869
  %cmp4 = icmp ne i32 %13, 0, !dbg !4871
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4872

if.then5:                                         ; preds = %if.end2
  %14 = load i32, i32* %ret_val, align 4, !dbg !4873
  store i32 %14, i32* %retval, align 4, !dbg !4874
  br label %return, !dbg !4874

if.end6:                                          ; preds = %if.end2
  %15 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4875
  %is_bound7 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %15, i32 0, i32 10, !dbg !4876
  store i8 0, i8* %is_bound7, align 8, !dbg !4877
  %16 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4878
  %pg_start8 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %16, i32 0, i32 7, !dbg !4879
  store i64 0, i64* %pg_start8, align 8, !dbg !4880
  %17 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4881
  %bridge9 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %17, i32 0, i32 2, !dbg !4882
  %18 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge9, align 8, !dbg !4882
  %mapped_lock = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %18, i32 0, i32 28, !dbg !4883
  store %struct.spinlock* %mapped_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4884, !srcloc !4886
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4887
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !4887
  %rlock.i = bitcast %union.anon.0* %20 to %struct.raw_spinlock*, !dbg !4887
  %21 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4889
  %mapped_list = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %21, i32 0, i32 12, !dbg !4890
  call void @list_del(%struct.list_head* %mapped_list) #10, !dbg !4891
  %22 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4892
  %bridge10 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %22, i32 0, i32 2, !dbg !4893
  %23 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge10, align 8, !dbg !4893
  %mapped_lock11 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %23, i32 0, i32 28, !dbg !4894
  store %struct.spinlock* %mapped_lock11, %struct.spinlock** %lock.addr.i12, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !4895, !srcloc !4897
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i12, align 8, !dbg !4898
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !4898
  %rlock.i13 = bitcast %union.anon.0* %25 to %struct.raw_spinlock*, !dbg !4898
  store i32 0, i32* %retval, align 4, !dbg !4900
  br label %return, !dbg !4900

return:                                           ; preds = %if.end6, %if.then5, %if.then1, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !4901
  ret i32 %26, !dbg !4901
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @agp_generic_free_by_type(%struct.agp_memory* %curr) #0 !dbg !4902 {
entry:
  %curr.addr = alloca %struct.agp_memory*, align 8
  store %struct.agp_memory* %curr, %struct.agp_memory** %curr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_memory** %curr.addr, metadata !4903, metadata !DIExpression()), !dbg !4904
  %0 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4905
  call void @agp_free_page_array(%struct.agp_memory* %0) #10, !dbg !4906
  %1 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4907
  %key = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %1, i32 0, i32 5, !dbg !4908
  %2 = load i32, i32* %key, align 8, !dbg !4908
  call void @agp_free_key(i32 %2) #10, !dbg !4909
  %3 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !4910
  %4 = bitcast %struct.agp_memory* %3 to i8*, !dbg !4910
  call void @kfree(i8* %4) #10, !dbg !4911
  ret void, !dbg !4912
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @agp_free_page_array(%struct.agp_memory* %mem) #0 !dbg !4913 {
entry:
  %mem.addr = alloca %struct.agp_memory*, align 8
  store %struct.agp_memory* %mem, %struct.agp_memory** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_memory** %mem.addr, metadata !4914, metadata !DIExpression()), !dbg !4915
  %0 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !4916
  %pages = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %0, i32 0, i32 3, !dbg !4917
  %1 = load %struct.page**, %struct.page*** %pages, align 8, !dbg !4917
  %2 = bitcast %struct.page** %1 to i8*, !dbg !4916
  call void @kvfree(i8* %2) #10, !dbg !4918
  ret void, !dbg !4919
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.agp_memory* @agp_allocate_memory(%struct.agp_bridge_data* %bridge, i64 %page_count, i32 %type) #0 !dbg !4920 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4923, metadata !DIExpression()), !dbg !4930
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4935, metadata !DIExpression()), !dbg !4937
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4939, metadata !DIExpression()), !dbg !4940
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4941, metadata !DIExpression()), !dbg !4942
  %retval = alloca %struct.agp_memory*, align 8
  %bridge.addr = alloca %struct.agp_bridge_data*, align 8
  %page_count.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  %scratch_pages = alloca i32, align 4
  %new = alloca %struct.agp_memory*, align 8
  %i = alloca i64, align 8
  %cur_memory = alloca i32, align 4
  %page = alloca %struct.page*, align 8
  store %struct.agp_bridge_data* %bridge, %struct.agp_bridge_data** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_bridge_data** %bridge.addr, metadata !4943, metadata !DIExpression()), !dbg !4944
  store i64 %page_count, i64* %page_count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %page_count.addr, metadata !4945, metadata !DIExpression()), !dbg !4946
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4947, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.declare(metadata i32* %scratch_pages, metadata !4949, metadata !DIExpression()), !dbg !4950
  call void @llvm.dbg.declare(metadata %struct.agp_memory** %new, metadata !4951, metadata !DIExpression()), !dbg !4952
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4953, metadata !DIExpression()), !dbg !4954
  call void @llvm.dbg.declare(metadata i32* %cur_memory, metadata !4955, metadata !DIExpression()), !dbg !4956
  %0 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !4957
  %tobool = icmp ne %struct.agp_bridge_data* %0, null, !dbg !4957
  br i1 %tobool, label %if.end, label %if.then, !dbg !4959

if.then:                                          ; preds = %entry
  store %struct.agp_memory* null, %struct.agp_memory** %retval, align 8, !dbg !4960
  br label %return, !dbg !4960

if.end:                                           ; preds = %entry
  %1 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !4961
  %current_memory_agp = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %1, i32 0, i32 17, !dbg !4962
  store %struct.atomic_t* %current_memory_agp, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4963
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !4963
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4964
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !4965
  %conv.i.i = trunc i64 %5 to i32, !dbg !4965
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %4, i32 %conv.i.i) #11, !dbg !4966
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !4967
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !4967
  call void @kcsan_check_access(i8* %6, i64 %7, i32 4) #11, !dbg !4967
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !4968
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !4969
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %9, i32 0, i32 0, !dbg !4969
  %10 = load volatile i32, i32* %counter.i.i, align 4, !dbg !4969
  store i32 %10, i32* %cur_memory, align 4, !dbg !4970
  %11 = load i32, i32* %cur_memory, align 4, !dbg !4971
  %conv = sext i32 %11 to i64, !dbg !4971
  %12 = load i64, i64* %page_count.addr, align 8, !dbg !4973
  %add = add i64 %conv, %12, !dbg !4974
  %13 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !4975
  %max_memory_agp = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %13, i32 0, i32 19, !dbg !4976
  %14 = load i32, i32* %max_memory_agp, align 8, !dbg !4976
  %conv1 = sext i32 %14 to i64, !dbg !4975
  %cmp = icmp ugt i64 %add, %conv1, !dbg !4977
  br i1 %cmp, label %if.then7, label %lor.lhs.false, !dbg !4978

lor.lhs.false:                                    ; preds = %if.end
  %15 = load i32, i32* %cur_memory, align 4, !dbg !4979
  %conv3 = sext i32 %15 to i64, !dbg !4979
  %16 = load i64, i64* %page_count.addr, align 8, !dbg !4980
  %add4 = add i64 %conv3, %16, !dbg !4981
  %17 = load i64, i64* %page_count.addr, align 8, !dbg !4982
  %cmp5 = icmp ult i64 %add4, %17, !dbg !4983
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4984

if.then7:                                         ; preds = %lor.lhs.false, %if.end
  store %struct.agp_memory* null, %struct.agp_memory** %retval, align 8, !dbg !4985
  br label %return, !dbg !4985

if.end8:                                          ; preds = %lor.lhs.false
  %18 = load i32, i32* %type.addr, align 4, !dbg !4986
  %cmp9 = icmp uge i32 %18, 65536, !dbg !4988
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !4989

if.then11:                                        ; preds = %if.end8
  %19 = load i64, i64* %page_count.addr, align 8, !dbg !4990
  %20 = load i32, i32* %type.addr, align 4, !dbg !4992
  %call12 = call %struct.agp_memory* @agp_generic_alloc_user(i64 %19, i32 %20) #10, !dbg !4993
  store %struct.agp_memory* %call12, %struct.agp_memory** %new, align 8, !dbg !4994
  %21 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !4995
  %tobool13 = icmp ne %struct.agp_memory* %21, null, !dbg !4995
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !4997

if.then14:                                        ; preds = %if.then11
  %22 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !4998
  %23 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !4999
  %bridge15 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %23, i32 0, i32 2, !dbg !5000
  store %struct.agp_bridge_data* %22, %struct.agp_bridge_data** %bridge15, align 8, !dbg !5001
  br label %if.end16, !dbg !4999

if.end16:                                         ; preds = %if.then14, %if.then11
  %24 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5002
  store %struct.agp_memory* %24, %struct.agp_memory** %retval, align 8, !dbg !5003
  br label %return, !dbg !5003

if.end17:                                         ; preds = %if.end8
  %25 = load i32, i32* %type.addr, align 4, !dbg !5004
  %cmp18 = icmp ne i32 %25, 0, !dbg !5006
  br i1 %cmp18, label %if.then20, label %if.end26, !dbg !5007

if.then20:                                        ; preds = %if.end17
  %26 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5008
  %driver = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %26, i32 0, i32 1, !dbg !5010
  %27 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver, align 8, !dbg !5010
  %alloc_by_type = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %27, i32 0, i32 18, !dbg !5011
  %28 = load %struct.agp_memory* (i64, i32)*, %struct.agp_memory* (i64, i32)** %alloc_by_type, align 8, !dbg !5011
  %29 = load i64, i64* %page_count.addr, align 8, !dbg !5012
  %30 = load i32, i32* %type.addr, align 4, !dbg !5013
  %call21 = call %struct.agp_memory* %28(i64 %29, i32 %30) #10, !dbg !5008
  store %struct.agp_memory* %call21, %struct.agp_memory** %new, align 8, !dbg !5014
  %31 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5015
  %tobool22 = icmp ne %struct.agp_memory* %31, null, !dbg !5015
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !5017

if.then23:                                        ; preds = %if.then20
  %32 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5018
  %33 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5019
  %bridge24 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %33, i32 0, i32 2, !dbg !5020
  store %struct.agp_bridge_data* %32, %struct.agp_bridge_data** %bridge24, align 8, !dbg !5021
  br label %if.end25, !dbg !5019

if.end25:                                         ; preds = %if.then23, %if.then20
  %34 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5022
  store %struct.agp_memory* %34, %struct.agp_memory** %retval, align 8, !dbg !5023
  br label %return, !dbg !5023

if.end26:                                         ; preds = %if.end17
  %35 = load i64, i64* %page_count.addr, align 8, !dbg !5024
  %add27 = add i64 %35, 512, !dbg !5025
  %sub = sub i64 %add27, 1, !dbg !5026
  %div = udiv i64 %sub, 512, !dbg !5027
  %conv28 = trunc i64 %div to i32, !dbg !5028
  store i32 %conv28, i32* %scratch_pages, align 4, !dbg !5029
  %36 = load i32, i32* %scratch_pages, align 4, !dbg !5030
  %call29 = call %struct.agp_memory* @agp_create_memory(i32 %36) #10, !dbg !5031
  store %struct.agp_memory* %call29, %struct.agp_memory** %new, align 8, !dbg !5032
  %37 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5033
  %cmp30 = icmp eq %struct.agp_memory* %37, null, !dbg !5035
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !5036

if.then32:                                        ; preds = %if.end26
  store %struct.agp_memory* null, %struct.agp_memory** %retval, align 8, !dbg !5037
  br label %return, !dbg !5037

if.end33:                                         ; preds = %if.end26
  %38 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5038
  %driver34 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %38, i32 0, i32 1, !dbg !5040
  %39 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver34, align 8, !dbg !5040
  %agp_alloc_pages = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %39, i32 0, i32 21, !dbg !5041
  %40 = load i32 (%struct.agp_bridge_data*, %struct.agp_memory*, i64)*, i32 (%struct.agp_bridge_data*, %struct.agp_memory*, i64)** %agp_alloc_pages, align 8, !dbg !5041
  %tobool35 = icmp ne i32 (%struct.agp_bridge_data*, %struct.agp_memory*, i64)* %40, null, !dbg !5038
  br i1 %tobool35, label %if.then36, label %if.end44, !dbg !5042

if.then36:                                        ; preds = %if.end33
  %41 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5043
  %driver37 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %41, i32 0, i32 1, !dbg !5046
  %42 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver37, align 8, !dbg !5046
  %agp_alloc_pages38 = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %42, i32 0, i32 21, !dbg !5047
  %43 = load i32 (%struct.agp_bridge_data*, %struct.agp_memory*, i64)*, i32 (%struct.agp_bridge_data*, %struct.agp_memory*, i64)** %agp_alloc_pages38, align 8, !dbg !5047
  %44 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5048
  %45 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5049
  %46 = load i64, i64* %page_count.addr, align 8, !dbg !5050
  %call39 = call i32 %43(%struct.agp_bridge_data* %44, %struct.agp_memory* %45, i64 %46) #10, !dbg !5043
  %tobool40 = icmp ne i32 %call39, 0, !dbg !5043
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !5051

if.then41:                                        ; preds = %if.then36
  %47 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5052
  call void @agp_free_memory(%struct.agp_memory* %47) #10, !dbg !5054
  store %struct.agp_memory* null, %struct.agp_memory** %retval, align 8, !dbg !5055
  br label %return, !dbg !5055

if.end42:                                         ; preds = %if.then36
  %48 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5056
  %49 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5057
  %bridge43 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %49, i32 0, i32 2, !dbg !5058
  store %struct.agp_bridge_data* %48, %struct.agp_bridge_data** %bridge43, align 8, !dbg !5059
  %50 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5060
  store %struct.agp_memory* %50, %struct.agp_memory** %retval, align 8, !dbg !5061
  br label %return, !dbg !5061

if.end44:                                         ; preds = %if.end33
  store i64 0, i64* %i, align 8, !dbg !5062
  br label %for.cond, !dbg !5064

for.cond:                                         ; preds = %for.inc, %if.end44
  %51 = load i64, i64* %i, align 8, !dbg !5065
  %52 = load i64, i64* %page_count.addr, align 8, !dbg !5067
  %cmp45 = icmp ult i64 %51, %52, !dbg !5068
  br i1 %cmp45, label %for.body, label %for.end, !dbg !5069

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !5070, metadata !DIExpression()), !dbg !5072
  %53 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5073
  %driver47 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %53, i32 0, i32 1, !dbg !5074
  %54 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver47, align 8, !dbg !5074
  %agp_alloc_page = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %54, i32 0, i32 20, !dbg !5075
  %55 = load %struct.page* (%struct.agp_bridge_data*)*, %struct.page* (%struct.agp_bridge_data*)** %agp_alloc_page, align 8, !dbg !5075
  %56 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5076
  %call48 = call %struct.page* %55(%struct.agp_bridge_data* %56) #10, !dbg !5073
  store %struct.page* %call48, %struct.page** %page, align 8, !dbg !5072
  %57 = load %struct.page*, %struct.page** %page, align 8, !dbg !5077
  %cmp49 = icmp eq %struct.page* %57, null, !dbg !5079
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !5080

if.then51:                                        ; preds = %for.body
  %58 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5081
  call void @agp_free_memory(%struct.agp_memory* %58) #10, !dbg !5083
  store %struct.agp_memory* null, %struct.agp_memory** %retval, align 8, !dbg !5084
  br label %return, !dbg !5084

if.end52:                                         ; preds = %for.body
  %59 = load %struct.page*, %struct.page** %page, align 8, !dbg !5085
  %60 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5086
  %pages = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %60, i32 0, i32 3, !dbg !5087
  %61 = load %struct.page**, %struct.page*** %pages, align 8, !dbg !5087
  %62 = load i64, i64* %i, align 8, !dbg !5088
  %arrayidx = getelementptr %struct.page*, %struct.page** %61, i64 %62, !dbg !5086
  store %struct.page* %59, %struct.page** %arrayidx, align 8, !dbg !5089
  %63 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5090
  %page_count53 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %63, i32 0, i32 4, !dbg !5091
  %64 = load i64, i64* %page_count53, align 8, !dbg !5092
  %inc = add i64 %64, 1, !dbg !5092
  store i64 %inc, i64* %page_count53, align 8, !dbg !5092
  br label %for.inc, !dbg !5093

for.inc:                                          ; preds = %if.end52
  %65 = load i64, i64* %i, align 8, !dbg !5094
  %inc54 = add i64 %65, 1, !dbg !5094
  store i64 %inc54, i64* %i, align 8, !dbg !5094
  br label %for.cond, !dbg !5095, !llvm.loop !5096

for.end:                                          ; preds = %for.cond
  %66 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5098
  %67 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5099
  %bridge55 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %67, i32 0, i32 2, !dbg !5100
  store %struct.agp_bridge_data* %66, %struct.agp_bridge_data** %bridge55, align 8, !dbg !5101
  %68 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5102
  store %struct.agp_memory* %68, %struct.agp_memory** %retval, align 8, !dbg !5103
  br label %return, !dbg !5103

return:                                           ; preds = %for.end, %if.then51, %if.end42, %if.then41, %if.then32, %if.end25, %if.end16, %if.then7, %if.then
  %69 = load %struct.agp_memory*, %struct.agp_memory** %retval, align 8, !dbg !5104
  ret %struct.agp_memory* %69, !dbg !5104
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.agp_memory* @agp_generic_alloc_user(i64 %page_count, i32 %type) #0 !dbg !5105 {
entry:
  %retval = alloca %struct.agp_memory*, align 8
  %page_count.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  %new = alloca %struct.agp_memory*, align 8
  %i = alloca i32, align 4
  %pages = alloca i32, align 4
  store i64 %page_count, i64* %page_count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %page_count.addr, metadata !5106, metadata !DIExpression()), !dbg !5107
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5108, metadata !DIExpression()), !dbg !5109
  call void @llvm.dbg.declare(metadata %struct.agp_memory** %new, metadata !5110, metadata !DIExpression()), !dbg !5111
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5112, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.declare(metadata i32* %pages, metadata !5114, metadata !DIExpression()), !dbg !5115
  %0 = load i64, i64* %page_count.addr, align 8, !dbg !5116
  %add = add i64 %0, 512, !dbg !5117
  %sub = sub i64 %add, 1, !dbg !5118
  %div = udiv i64 %sub, 512, !dbg !5119
  %conv = trunc i64 %div to i32, !dbg !5120
  store i32 %conv, i32* %pages, align 4, !dbg !5121
  %1 = load i64, i64* %page_count.addr, align 8, !dbg !5122
  %call = call %struct.agp_memory* @agp_create_user_memory(i64 %1) #10, !dbg !5123
  store %struct.agp_memory* %call, %struct.agp_memory** %new, align 8, !dbg !5124
  %2 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5125
  %cmp = icmp eq %struct.agp_memory* %2, null, !dbg !5127
  br i1 %cmp, label %if.then, label %if.end, !dbg !5128

if.then:                                          ; preds = %entry
  store %struct.agp_memory* null, %struct.agp_memory** %retval, align 8, !dbg !5129
  br label %return, !dbg !5129

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !5130
  br label %for.cond, !dbg !5132

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !5133
  %conv2 = sext i32 %3 to i64, !dbg !5133
  %4 = load i64, i64* %page_count.addr, align 8, !dbg !5135
  %cmp3 = icmp ult i64 %conv2, %4, !dbg !5136
  br i1 %cmp3, label %for.body, label %for.end, !dbg !5137

for.body:                                         ; preds = %for.cond
  %5 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5138
  %pages5 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %5, i32 0, i32 3, !dbg !5139
  %6 = load %struct.page**, %struct.page*** %pages5, align 8, !dbg !5139
  %7 = load i32, i32* %i, align 4, !dbg !5140
  %idxprom = sext i32 %7 to i64, !dbg !5138
  %arrayidx = getelementptr %struct.page*, %struct.page** %6, i64 %idxprom, !dbg !5138
  store %struct.page* null, %struct.page** %arrayidx, align 8, !dbg !5141
  br label %for.inc, !dbg !5138

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !5142
  %inc = add i32 %8, 1, !dbg !5142
  store i32 %inc, i32* %i, align 4, !dbg !5142
  br label %for.cond, !dbg !5143, !llvm.loop !5144

for.end:                                          ; preds = %for.cond
  %9 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5146
  %page_count6 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %9, i32 0, i32 4, !dbg !5147
  store i64 0, i64* %page_count6, align 8, !dbg !5148
  %10 = load i32, i32* %type.addr, align 4, !dbg !5149
  %11 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5150
  %type7 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %11, i32 0, i32 8, !dbg !5151
  store i32 %10, i32* %type7, align 8, !dbg !5152
  %12 = load i32, i32* %pages, align 4, !dbg !5153
  %13 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5154
  %num_scratch_pages = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %13, i32 0, i32 6, !dbg !5155
  store i32 %12, i32* %num_scratch_pages, align 4, !dbg !5156
  %14 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !5157
  store %struct.agp_memory* %14, %struct.agp_memory** %retval, align 8, !dbg !5158
  br label %return, !dbg !5158

return:                                           ; preds = %for.end, %if.then
  %15 = load %struct.agp_memory*, %struct.agp_memory** %retval, align 8, !dbg !5159
  ret %struct.agp_memory* %15, !dbg !5159
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @agp_num_entries() #0 !dbg !5160 {
entry:
  %num_entries = alloca i32, align 4
  %temp = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i32* %num_entries, metadata !5161, metadata !DIExpression()), !dbg !5162
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !5163, metadata !DIExpression()), !dbg !5164
  %0 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !5165
  %current_size = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %0, i32 0, i32 4, !dbg !5166
  %1 = load i8*, i8** %current_size, align 8, !dbg !5166
  store i8* %1, i8** %temp, align 8, !dbg !5167
  %2 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !5168
  %driver = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %2, i32 0, i32 1, !dbg !5169
  %3 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver, align 8, !dbg !5169
  %size_type = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %3, i32 0, i32 3, !dbg !5170
  %4 = load i32, i32* %size_type, align 4, !dbg !5170
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb4
    i32 3, label %sw.bb6
    i32 4, label %sw.bb8
  ], !dbg !5171

sw.bb:                                            ; preds = %entry
  %5 = load i8*, i8** %temp, align 8, !dbg !5172
  %6 = bitcast i8* %5 to %struct.aper_size_info_8*, !dbg !5172
  %num_entries1 = getelementptr inbounds %struct.aper_size_info_8, %struct.aper_size_info_8* %6, i32 0, i32 1, !dbg !5174
  %7 = load i32, i32* %num_entries1, align 4, !dbg !5174
  store i32 %7, i32* %num_entries, align 4, !dbg !5175
  br label %sw.epilog, !dbg !5176

sw.bb2:                                           ; preds = %entry
  %8 = load i8*, i8** %temp, align 8, !dbg !5177
  %9 = bitcast i8* %8 to %struct.aper_size_info_16*, !dbg !5177
  %num_entries3 = getelementptr inbounds %struct.aper_size_info_16, %struct.aper_size_info_16* %9, i32 0, i32 1, !dbg !5178
  %10 = load i32, i32* %num_entries3, align 4, !dbg !5178
  store i32 %10, i32* %num_entries, align 4, !dbg !5179
  br label %sw.epilog, !dbg !5180

sw.bb4:                                           ; preds = %entry
  %11 = load i8*, i8** %temp, align 8, !dbg !5181
  %12 = bitcast i8* %11 to %struct.aper_size_info_32*, !dbg !5181
  %num_entries5 = getelementptr inbounds %struct.aper_size_info_32, %struct.aper_size_info_32* %12, i32 0, i32 1, !dbg !5182
  %13 = load i32, i32* %num_entries5, align 4, !dbg !5182
  store i32 %13, i32* %num_entries, align 4, !dbg !5183
  br label %sw.epilog, !dbg !5184

sw.bb6:                                           ; preds = %entry
  %14 = load i8*, i8** %temp, align 8, !dbg !5185
  %15 = bitcast i8* %14 to %struct.aper_size_info_lvl2*, !dbg !5185
  %num_entries7 = getelementptr inbounds %struct.aper_size_info_lvl2, %struct.aper_size_info_lvl2* %15, i32 0, i32 1, !dbg !5186
  %16 = load i32, i32* %num_entries7, align 4, !dbg !5186
  store i32 %16, i32* %num_entries, align 4, !dbg !5187
  br label %sw.epilog, !dbg !5188

sw.bb8:                                           ; preds = %entry
  %17 = load i8*, i8** %temp, align 8, !dbg !5189
  %18 = bitcast i8* %17 to %struct.aper_size_info_fixed*, !dbg !5189
  %num_entries9 = getelementptr inbounds %struct.aper_size_info_fixed, %struct.aper_size_info_fixed* %18, i32 0, i32 1, !dbg !5190
  %19 = load i32, i32* %num_entries9, align 4, !dbg !5190
  store i32 %19, i32* %num_entries, align 4, !dbg !5191
  br label %sw.epilog, !dbg !5192

sw.default:                                       ; preds = %entry
  store i32 0, i32* %num_entries, align 4, !dbg !5193
  br label %sw.epilog, !dbg !5194

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb
  %20 = load i32, i32* @agp_memory_reserved, align 4, !dbg !5195
  %shr = ashr i32 %20, 12, !dbg !5196
  %21 = load i32, i32* %num_entries, align 4, !dbg !5197
  %sub = sub i32 %21, %shr, !dbg !5197
  store i32 %sub, i32* %num_entries, align 4, !dbg !5197
  %22 = load i32, i32* %num_entries, align 4, !dbg !5198
  %cmp = icmp slt i32 %22, 0, !dbg !5200
  br i1 %cmp, label %if.then, label %if.end, !dbg !5201

if.then:                                          ; preds = %sw.epilog
  store i32 0, i32* %num_entries, align 4, !dbg !5202
  br label %if.end, !dbg !5203

if.end:                                           ; preds = %if.then, %sw.epilog
  %23 = load i32, i32* %num_entries, align 4, !dbg !5204
  ret i32 %23, !dbg !5205
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @agp_copy_info(%struct.agp_bridge_data* %bridge, %struct.agp_kern_info* %info) #0 !dbg !5206 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !4923, metadata !DIExpression()), !dbg !5223
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !4935, metadata !DIExpression()), !dbg !5226
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4939, metadata !DIExpression()), !dbg !5228
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !4941, metadata !DIExpression()), !dbg !5229
  %retval = alloca i32, align 4
  %bridge.addr = alloca %struct.agp_bridge_data*, align 8
  %info.addr = alloca %struct.agp_kern_info*, align 8
  store %struct.agp_bridge_data* %bridge, %struct.agp_bridge_data** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_bridge_data** %bridge.addr, metadata !5230, metadata !DIExpression()), !dbg !5231
  store %struct.agp_kern_info* %info, %struct.agp_kern_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_kern_info** %info.addr, metadata !5232, metadata !DIExpression()), !dbg !5233
  %0 = load %struct.agp_kern_info*, %struct.agp_kern_info** %info.addr, align 8, !dbg !5234
  %1 = bitcast %struct.agp_kern_info* %0 to i8*, !dbg !5235
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 80, i1 false), !dbg !5235
  %2 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5236
  %tobool = icmp ne %struct.agp_bridge_data* %2, null, !dbg !5236
  br i1 %tobool, label %if.end, label %if.then, !dbg !5238

if.then:                                          ; preds = %entry
  %3 = load %struct.agp_kern_info*, %struct.agp_kern_info** %info.addr, align 8, !dbg !5239
  %chipset = getelementptr inbounds %struct.agp_kern_info, %struct.agp_kern_info* %3, i32 0, i32 2, !dbg !5241
  store i32 0, i32* %chipset, align 8, !dbg !5242
  store i32 -5, i32* %retval, align 4, !dbg !5243
  br label %return, !dbg !5243

if.end:                                           ; preds = %entry
  %4 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5244
  %version = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %4, i32 0, i32 0, !dbg !5245
  %5 = load %struct.agp_version*, %struct.agp_version** %version, align 8, !dbg !5245
  %major = getelementptr inbounds %struct.agp_version, %struct.agp_version* %5, i32 0, i32 0, !dbg !5246
  %6 = load i16, i16* %major, align 2, !dbg !5246
  %7 = load %struct.agp_kern_info*, %struct.agp_kern_info** %info.addr, align 8, !dbg !5247
  %version1 = getelementptr inbounds %struct.agp_kern_info, %struct.agp_kern_info* %7, i32 0, i32 0, !dbg !5248
  %major2 = getelementptr inbounds %struct.agp_version, %struct.agp_version* %version1, i32 0, i32 0, !dbg !5249
  store i16 %6, i16* %major2, align 8, !dbg !5250
  %8 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5251
  %version3 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %8, i32 0, i32 0, !dbg !5252
  %9 = load %struct.agp_version*, %struct.agp_version** %version3, align 8, !dbg !5252
  %minor = getelementptr inbounds %struct.agp_version, %struct.agp_version* %9, i32 0, i32 1, !dbg !5253
  %10 = load i16, i16* %minor, align 2, !dbg !5253
  %11 = load %struct.agp_kern_info*, %struct.agp_kern_info** %info.addr, align 8, !dbg !5254
  %version4 = getelementptr inbounds %struct.agp_kern_info, %struct.agp_kern_info* %11, i32 0, i32 0, !dbg !5255
  %minor5 = getelementptr inbounds %struct.agp_version, %struct.agp_version* %version4, i32 0, i32 1, !dbg !5256
  store i16 %10, i16* %minor5, align 2, !dbg !5257
  %12 = load %struct.agp_kern_info*, %struct.agp_kern_info** %info.addr, align 8, !dbg !5258
  %chipset6 = getelementptr inbounds %struct.agp_kern_info, %struct.agp_kern_info* %12, i32 0, i32 2, !dbg !5259
  store i32 1, i32* %chipset6, align 8, !dbg !5260
  %13 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5261
  %dev = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %13, i32 0, i32 6, !dbg !5262
  %14 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !5262
  %15 = load %struct.agp_kern_info*, %struct.agp_kern_info** %info.addr, align 8, !dbg !5263
  %device = getelementptr inbounds %struct.agp_kern_info, %struct.agp_kern_info* %15, i32 0, i32 1, !dbg !5264
  store %struct.pci_dev* %14, %struct.pci_dev** %device, align 8, !dbg !5265
  %16 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5266
  %mode = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %16, i32 0, i32 14, !dbg !5268
  %17 = load i32, i32* %mode, align 8, !dbg !5268
  %and = and i32 %17, 8, !dbg !5269
  %tobool7 = icmp ne i32 %and, 0, !dbg !5269
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !5270

if.then8:                                         ; preds = %if.end
  %18 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5271
  %mode9 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %18, i32 0, i32 14, !dbg !5272
  %19 = load i32, i32* %mode9, align 8, !dbg !5272
  %and10 = and i32 %19, -16711877, !dbg !5273
  %conv = zext i32 %and10 to i64, !dbg !5271
  %20 = load %struct.agp_kern_info*, %struct.agp_kern_info** %info.addr, align 8, !dbg !5274
  %mode11 = getelementptr inbounds %struct.agp_kern_info, %struct.agp_kern_info* %20, i32 0, i32 3, !dbg !5275
  store i64 %conv, i64* %mode11, align 8, !dbg !5276
  br label %if.end16, !dbg !5274

if.else:                                          ; preds = %if.end
  %21 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5277
  %mode12 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %21, i32 0, i32 14, !dbg !5278
  %22 = load i32, i32* %mode12, align 8, !dbg !5278
  %and13 = and i32 %22, -16776393, !dbg !5279
  %conv14 = zext i32 %and13 to i64, !dbg !5277
  %23 = load %struct.agp_kern_info*, %struct.agp_kern_info** %info.addr, align 8, !dbg !5280
  %mode15 = getelementptr inbounds %struct.agp_kern_info, %struct.agp_kern_info* %23, i32 0, i32 3, !dbg !5281
  store i64 %conv14, i64* %mode15, align 8, !dbg !5282
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then8
  %24 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5283
  %gart_bus_addr = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %24, i32 0, i32 12, !dbg !5284
  %25 = load i64, i64* %gart_bus_addr, align 8, !dbg !5284
  %26 = load %struct.agp_kern_info*, %struct.agp_kern_info** %info.addr, align 8, !dbg !5285
  %aper_base = getelementptr inbounds %struct.agp_kern_info, %struct.agp_kern_info* %26, i32 0, i32 4, !dbg !5286
  store i64 %25, i64* %aper_base, align 8, !dbg !5287
  %call = call i32 @agp_return_size() #10, !dbg !5288
  %conv17 = sext i32 %call to i64, !dbg !5288
  %27 = load %struct.agp_kern_info*, %struct.agp_kern_info** %info.addr, align 8, !dbg !5289
  %aper_size = getelementptr inbounds %struct.agp_kern_info, %struct.agp_kern_info* %27, i32 0, i32 5, !dbg !5290
  store i64 %conv17, i64* %aper_size, align 8, !dbg !5291
  %28 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5292
  %max_memory_agp = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %28, i32 0, i32 19, !dbg !5293
  %29 = load i32, i32* %max_memory_agp, align 8, !dbg !5293
  %30 = load %struct.agp_kern_info*, %struct.agp_kern_info** %info.addr, align 8, !dbg !5294
  %max_memory = getelementptr inbounds %struct.agp_kern_info, %struct.agp_kern_info* %30, i32 0, i32 6, !dbg !5295
  store i32 %29, i32* %max_memory, align 8, !dbg !5296
  %31 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5297
  %current_memory_agp = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %31, i32 0, i32 17, !dbg !5298
  store %struct.atomic_t* %current_memory_agp, %struct.atomic_t** %v.addr.i, align 8
  %32 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5299
  %33 = bitcast %struct.atomic_t* %32 to i8*, !dbg !5299
  store i8* %33, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %34 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5300
  %35 = load i64, i64* %size.addr.i.i, align 8, !dbg !5301
  %conv.i.i = trunc i64 %35 to i32, !dbg !5301
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %34, i32 %conv.i.i) #11, !dbg !5302
  %36 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5303
  %37 = load i64, i64* %size.addr.i.i, align 8, !dbg !5303
  call void @kcsan_check_access(i8* %36, i64 %37, i32 4) #11, !dbg !5303
  %38 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5304
  store %struct.atomic_t* %38, %struct.atomic_t** %v.addr.i1.i, align 8
  %39 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5305
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %39, i32 0, i32 0, !dbg !5305
  %40 = load volatile i32, i32* %counter.i.i, align 4, !dbg !5305
  %41 = load %struct.agp_kern_info*, %struct.agp_kern_info** %info.addr, align 8, !dbg !5306
  %current_memory = getelementptr inbounds %struct.agp_kern_info, %struct.agp_kern_info* %41, i32 0, i32 7, !dbg !5307
  store i32 %40, i32* %current_memory, align 4, !dbg !5308
  %42 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5309
  %driver = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %42, i32 0, i32 1, !dbg !5310
  %43 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver, align 8, !dbg !5310
  %cant_use_aperture = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %43, i32 0, i32 4, !dbg !5311
  %44 = load i8, i8* %cant_use_aperture, align 8, !dbg !5311
  %tobool19 = trunc i8 %44 to i1, !dbg !5311
  %45 = load %struct.agp_kern_info*, %struct.agp_kern_info** %info.addr, align 8, !dbg !5312
  %cant_use_aperture20 = getelementptr inbounds %struct.agp_kern_info, %struct.agp_kern_info* %45, i32 0, i32 8, !dbg !5313
  %frombool = zext i1 %tobool19 to i8, !dbg !5314
  store i8 %frombool, i8* %cant_use_aperture20, align 8, !dbg !5314
  %46 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !5315
  %vm_ops = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %46, i32 0, i32 2, !dbg !5316
  %47 = load %struct.vm_operations_struct*, %struct.vm_operations_struct** %vm_ops, align 8, !dbg !5316
  %48 = load %struct.agp_kern_info*, %struct.agp_kern_info** %info.addr, align 8, !dbg !5317
  %vm_ops21 = getelementptr inbounds %struct.agp_kern_info, %struct.agp_kern_info* %48, i32 0, i32 10, !dbg !5318
  store %struct.vm_operations_struct* %47, %struct.vm_operations_struct** %vm_ops21, align 8, !dbg !5319
  %49 = load %struct.agp_kern_info*, %struct.agp_kern_info** %info.addr, align 8, !dbg !5320
  %page_mask = getelementptr inbounds %struct.agp_kern_info, %struct.agp_kern_info* %49, i32 0, i32 9, !dbg !5321
  store i64 -1, i64* %page_mask, align 8, !dbg !5322
  store i32 0, i32* %retval, align 4, !dbg !5323
  br label %return, !dbg !5323

return:                                           ; preds = %if.end16, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !5324
  ret i32 %50, !dbg !5324
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @agp_return_size() #0 !dbg !5325 {
entry:
  %current_size = alloca i32, align 4
  %temp = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i32* %current_size, metadata !5326, metadata !DIExpression()), !dbg !5327
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !5328, metadata !DIExpression()), !dbg !5329
  %0 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !5330
  %current_size1 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %0, i32 0, i32 4, !dbg !5331
  %1 = load i8*, i8** %current_size1, align 8, !dbg !5331
  store i8* %1, i8** %temp, align 8, !dbg !5332
  %2 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !5333
  %driver = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %2, i32 0, i32 1, !dbg !5334
  %3 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver, align 8, !dbg !5334
  %size_type = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %3, i32 0, i32 3, !dbg !5335
  %4 = load i32, i32* %size_type, align 4, !dbg !5335
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb4
    i32 3, label %sw.bb6
    i32 4, label %sw.bb8
  ], !dbg !5336

sw.bb:                                            ; preds = %entry
  %5 = load i8*, i8** %temp, align 8, !dbg !5337
  %6 = bitcast i8* %5 to %struct.aper_size_info_8*, !dbg !5337
  %size = getelementptr inbounds %struct.aper_size_info_8, %struct.aper_size_info_8* %6, i32 0, i32 0, !dbg !5339
  %7 = load i32, i32* %size, align 4, !dbg !5339
  store i32 %7, i32* %current_size, align 4, !dbg !5340
  br label %sw.epilog, !dbg !5341

sw.bb2:                                           ; preds = %entry
  %8 = load i8*, i8** %temp, align 8, !dbg !5342
  %9 = bitcast i8* %8 to %struct.aper_size_info_16*, !dbg !5342
  %size3 = getelementptr inbounds %struct.aper_size_info_16, %struct.aper_size_info_16* %9, i32 0, i32 0, !dbg !5343
  %10 = load i32, i32* %size3, align 4, !dbg !5343
  store i32 %10, i32* %current_size, align 4, !dbg !5344
  br label %sw.epilog, !dbg !5345

sw.bb4:                                           ; preds = %entry
  %11 = load i8*, i8** %temp, align 8, !dbg !5346
  %12 = bitcast i8* %11 to %struct.aper_size_info_32*, !dbg !5346
  %size5 = getelementptr inbounds %struct.aper_size_info_32, %struct.aper_size_info_32* %12, i32 0, i32 0, !dbg !5347
  %13 = load i32, i32* %size5, align 4, !dbg !5347
  store i32 %13, i32* %current_size, align 4, !dbg !5348
  br label %sw.epilog, !dbg !5349

sw.bb6:                                           ; preds = %entry
  %14 = load i8*, i8** %temp, align 8, !dbg !5350
  %15 = bitcast i8* %14 to %struct.aper_size_info_lvl2*, !dbg !5350
  %size7 = getelementptr inbounds %struct.aper_size_info_lvl2, %struct.aper_size_info_lvl2* %15, i32 0, i32 0, !dbg !5351
  %16 = load i32, i32* %size7, align 4, !dbg !5351
  store i32 %16, i32* %current_size, align 4, !dbg !5352
  br label %sw.epilog, !dbg !5353

sw.bb8:                                           ; preds = %entry
  %17 = load i8*, i8** %temp, align 8, !dbg !5354
  %18 = bitcast i8* %17 to %struct.aper_size_info_fixed*, !dbg !5354
  %size9 = getelementptr inbounds %struct.aper_size_info_fixed, %struct.aper_size_info_fixed* %18, i32 0, i32 0, !dbg !5355
  %19 = load i32, i32* %size9, align 4, !dbg !5355
  store i32 %19, i32* %current_size, align 4, !dbg !5356
  br label %sw.epilog, !dbg !5357

sw.default:                                       ; preds = %entry
  store i32 0, i32* %current_size, align 4, !dbg !5358
  br label %sw.epilog, !dbg !5359

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb
  %20 = load i32, i32* @agp_memory_reserved, align 4, !dbg !5360
  %div = sdiv i32 %20, 1048576, !dbg !5361
  %21 = load i32, i32* %current_size, align 4, !dbg !5362
  %sub = sub i32 %21, %div, !dbg !5362
  store i32 %sub, i32* %current_size, align 4, !dbg !5362
  %22 = load i32, i32* %current_size, align 4, !dbg !5363
  %cmp = icmp slt i32 %22, 0, !dbg !5365
  br i1 %cmp, label %if.then, label %if.end, !dbg !5366

if.then:                                          ; preds = %sw.epilog
  store i32 0, i32* %current_size, align 4, !dbg !5367
  br label %if.end, !dbg !5368

if.end:                                           ; preds = %if.then, %sw.epilog
  %23 = load i32, i32* %current_size, align 4, !dbg !5369
  ret i32 %23, !dbg !5370
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @agp_bind_memory(%struct.agp_memory* %curr, i64 %pg_start) #0 !dbg !5371 {
entry:
  %lock.addr.i17 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i17, metadata !4831, metadata !DIExpression()), !dbg !5374
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4838, metadata !DIExpression()), !dbg !5376
  %retval = alloca i32, align 4
  %curr.addr = alloca %struct.agp_memory*, align 8
  %pg_start.addr = alloca i64, align 8
  %ret_val = alloca i32, align 4
  store %struct.agp_memory* %curr, %struct.agp_memory** %curr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_memory** %curr.addr, metadata !5378, metadata !DIExpression()), !dbg !5379
  store i64 %pg_start, i64* %pg_start.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pg_start.addr, metadata !5380, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !5382, metadata !DIExpression()), !dbg !5383
  %0 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !5384
  %cmp = icmp eq %struct.agp_memory* %0, null, !dbg !5386
  br i1 %cmp, label %if.then, label %if.end, !dbg !5387

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !5388
  br label %return, !dbg !5388

if.end:                                           ; preds = %entry
  %1 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !5389
  %is_bound = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %1, i32 0, i32 10, !dbg !5391
  %2 = load i8, i8* %is_bound, align 8, !dbg !5391
  %tobool = trunc i8 %2 to i1, !dbg !5391
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !5392

if.then1:                                         ; preds = %if.end
  %3 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !5393
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), %struct.agp_memory* %3) #13, !dbg !5395
  store i32 -22, i32* %retval, align 4, !dbg !5396
  br label %return, !dbg !5396

if.end2:                                          ; preds = %if.end
  %4 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !5397
  %is_flushed = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %4, i32 0, i32 11, !dbg !5399
  %5 = load i8, i8* %is_flushed, align 1, !dbg !5399
  %tobool3 = trunc i8 %5 to i1, !dbg !5399
  br i1 %tobool3, label %if.end6, label %if.then4, !dbg !5400

if.then4:                                         ; preds = %if.end2
  %6 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !5401
  %bridge = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %6, i32 0, i32 2, !dbg !5403
  %7 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !5403
  %driver = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %7, i32 0, i32 1, !dbg !5404
  %8 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver, align 8, !dbg !5404
  %cache_flush = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %8, i32 0, i32 13, !dbg !5405
  %9 = load void ()*, void ()** %cache_flush, align 8, !dbg !5405
  call void %9() #10, !dbg !5401
  %10 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !5406
  %is_flushed5 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %10, i32 0, i32 11, !dbg !5407
  store i8 1, i8* %is_flushed5, align 1, !dbg !5408
  br label %if.end6, !dbg !5409

if.end6:                                          ; preds = %if.then4, %if.end2
  %11 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !5410
  %bridge7 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %11, i32 0, i32 2, !dbg !5411
  %12 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge7, align 8, !dbg !5411
  %driver8 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %12, i32 0, i32 1, !dbg !5412
  %13 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver8, align 8, !dbg !5412
  %insert_memory = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %13, i32 0, i32 16, !dbg !5413
  %14 = load i32 (%struct.agp_memory*, i64, i32)*, i32 (%struct.agp_memory*, i64, i32)** %insert_memory, align 8, !dbg !5413
  %15 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !5414
  %16 = load i64, i64* %pg_start.addr, align 8, !dbg !5415
  %17 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !5416
  %type = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %17, i32 0, i32 8, !dbg !5417
  %18 = load i32, i32* %type, align 8, !dbg !5417
  %call9 = call i32 %14(%struct.agp_memory* %15, i64 %16, i32 %18) #10, !dbg !5410
  store i32 %call9, i32* %ret_val, align 4, !dbg !5418
  %19 = load i32, i32* %ret_val, align 4, !dbg !5419
  %cmp10 = icmp ne i32 %19, 0, !dbg !5421
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !5422

if.then11:                                        ; preds = %if.end6
  %20 = load i32, i32* %ret_val, align 4, !dbg !5423
  store i32 %20, i32* %retval, align 4, !dbg !5424
  br label %return, !dbg !5424

if.end12:                                         ; preds = %if.end6
  %21 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !5425
  %is_bound13 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %21, i32 0, i32 10, !dbg !5426
  store i8 1, i8* %is_bound13, align 8, !dbg !5427
  %22 = load i64, i64* %pg_start.addr, align 8, !dbg !5428
  %23 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !5429
  %pg_start14 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %23, i32 0, i32 7, !dbg !5430
  store i64 %22, i64* %pg_start14, align 8, !dbg !5431
  %24 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !5432
  %mapped_lock = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %24, i32 0, i32 28, !dbg !5433
  store %struct.spinlock* %mapped_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5434, !srcloc !4886
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5435
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !5435
  %rlock.i = bitcast %union.anon.0* %26 to %struct.raw_spinlock*, !dbg !5435
  %27 = load %struct.agp_memory*, %struct.agp_memory** %curr.addr, align 8, !dbg !5436
  %mapped_list = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %27, i32 0, i32 12, !dbg !5437
  %28 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !5438
  %mapped_list15 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %28, i32 0, i32 27, !dbg !5439
  call void @list_add(%struct.list_head* %mapped_list, %struct.list_head* %mapped_list15) #10, !dbg !5440
  %29 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !5441
  %mapped_lock16 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %29, i32 0, i32 28, !dbg !5442
  store %struct.spinlock* %mapped_lock16, %struct.spinlock** %lock.addr.i17, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #9, !dbg !5443, !srcloc !4897
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i17, align 8, !dbg !5444
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !5444
  %rlock.i18 = bitcast %union.anon.0* %31 to %struct.raw_spinlock*, !dbg !5444
  store i32 0, i32* %retval, align 4, !dbg !5445
  br label %return, !dbg !5445

return:                                           ; preds = %if.end12, %if.then11, %if.then1, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !5446
  ret i32 %32, !dbg !5446
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !5447 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !5451, metadata !DIExpression()), !dbg !5452
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !5453, metadata !DIExpression()), !dbg !5454
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !5455
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !5456
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !5457
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !5458
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5458
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #10, !dbg !5459
  ret void, !dbg !5460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !5461 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !5464, metadata !DIExpression()), !dbg !5465
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5466
  call void @__list_del_entry(%struct.list_head* %0) #10, !dbg !5467
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5468
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !5469
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !5470
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !5471
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !5472
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !5473
  ret void, !dbg !5474
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @agp_collect_device_status(%struct.agp_bridge_data* %bridge, i32 %requested_mode, i32 %bridge_agpstat) #0 !dbg !5475 {
entry:
  %retval = alloca i32, align 4
  %bridge.addr = alloca %struct.agp_bridge_data*, align 8
  %requested_mode.addr = alloca i32, align 4
  %bridge_agpstat.addr = alloca i32, align 4
  %device = alloca %struct.pci_dev*, align 8
  %vga_agpstat = alloca i32, align 4
  %cap_ptr = alloca i8, align 1
  %__UNIQUE_ID___x252 = alloca i32, align 4
  %__UNIQUE_ID___y253 = alloca i32, align 4
  %__UNIQUE_ID___x250 = alloca i32, align 4
  %__UNIQUE_ID___y251 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp12 = alloca i32, align 4
  store %struct.agp_bridge_data* %bridge, %struct.agp_bridge_data** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_bridge_data** %bridge.addr, metadata !5478, metadata !DIExpression()), !dbg !5479
  store i32 %requested_mode, i32* %requested_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %requested_mode.addr, metadata !5480, metadata !DIExpression()), !dbg !5481
  store i32 %bridge_agpstat, i32* %bridge_agpstat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bridge_agpstat.addr, metadata !5482, metadata !DIExpression()), !dbg !5483
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %device, metadata !5484, metadata !DIExpression()), !dbg !5485
  store %struct.pci_dev* null, %struct.pci_dev** %device, align 8, !dbg !5485
  call void @llvm.dbg.declare(metadata i32* %vga_agpstat, metadata !5486, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.declare(metadata i8* %cap_ptr, metadata !5488, metadata !DIExpression()), !dbg !5489
  br label %for.cond, !dbg !5490

for.cond:                                         ; preds = %if.end5, %entry
  %0 = load %struct.pci_dev*, %struct.pci_dev** %device, align 8, !dbg !5491
  %call = call %struct.pci_dev* @pci_get_class(i32 196608, %struct.pci_dev* %0) #10, !dbg !5495
  store %struct.pci_dev* %call, %struct.pci_dev** %device, align 8, !dbg !5496
  %1 = load %struct.pci_dev*, %struct.pci_dev** %device, align 8, !dbg !5497
  %tobool = icmp ne %struct.pci_dev* %1, null, !dbg !5497
  br i1 %tobool, label %if.end, label %if.then, !dbg !5499

if.then:                                          ; preds = %for.cond
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0)) #13, !dbg !5500
  store i32 0, i32* %retval, align 4, !dbg !5502
  br label %return, !dbg !5502

if.end:                                           ; preds = %for.cond
  %2 = load %struct.pci_dev*, %struct.pci_dev** %device, align 8, !dbg !5503
  %call2 = call i32 @pci_find_capability(%struct.pci_dev* %2, i32 2) #10, !dbg !5504
  %conv = trunc i32 %call2 to i8, !dbg !5504
  store i8 %conv, i8* %cap_ptr, align 1, !dbg !5505
  %3 = load i8, i8* %cap_ptr, align 1, !dbg !5506
  %tobool3 = icmp ne i8 %3, 0, !dbg !5506
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !5508

if.then4:                                         ; preds = %if.end
  br label %for.end, !dbg !5509

if.end5:                                          ; preds = %if.end
  br label %for.cond, !dbg !5510, !llvm.loop !5511

for.end:                                          ; preds = %if.then4
  %4 = load %struct.pci_dev*, %struct.pci_dev** %device, align 8, !dbg !5514
  %5 = load i8, i8* %cap_ptr, align 1, !dbg !5515
  %conv6 = zext i8 %5 to i32, !dbg !5515
  %add = add i32 %conv6, 4, !dbg !5516
  %call7 = call i32 @pci_read_config_dword(%struct.pci_dev* %4, i32 %add, i32* %vga_agpstat) #10, !dbg !5517
  %6 = load i32, i32* %bridge_agpstat.addr, align 4, !dbg !5518
  %and = and i32 %6, 16777215, !dbg !5519
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x252, metadata !5520, metadata !DIExpression()), !dbg !5522
  %7 = load i32, i32* %requested_mode.addr, align 4, !dbg !5522
  %and8 = and i32 %7, -16777216, !dbg !5522
  store i32 %and8, i32* %__UNIQUE_ID___x252, align 4, !dbg !5522
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y253, metadata !5523, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x250, metadata !5524, metadata !DIExpression()), !dbg !5526
  %8 = load i32, i32* %bridge_agpstat.addr, align 4, !dbg !5526
  %and9 = and i32 %8, -16777216, !dbg !5526
  store i32 %and9, i32* %__UNIQUE_ID___x250, align 4, !dbg !5526
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y251, metadata !5527, metadata !DIExpression()), !dbg !5526
  %9 = load i32, i32* %vga_agpstat, align 4, !dbg !5526
  %and10 = and i32 %9, -16777216, !dbg !5526
  store i32 %and10, i32* %__UNIQUE_ID___y251, align 4, !dbg !5526
  %10 = load i32, i32* %__UNIQUE_ID___x250, align 4, !dbg !5526
  %11 = load i32, i32* %__UNIQUE_ID___y251, align 4, !dbg !5526
  %cmp = icmp ult i32 %10, %11, !dbg !5526
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5526

cond.true:                                        ; preds = %for.end
  %12 = load i32, i32* %__UNIQUE_ID___x250, align 4, !dbg !5526
  br label %cond.end, !dbg !5526

cond.false:                                       ; preds = %for.end
  %13 = load i32, i32* %__UNIQUE_ID___y251, align 4, !dbg !5526
  br label %cond.end, !dbg !5526

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ %13, %cond.false ], !dbg !5526
  store i32 %cond, i32* %tmp, align 4, !dbg !5526
  %14 = load i32, i32* %tmp, align 4, !dbg !5526
  store i32 %14, i32* %__UNIQUE_ID___y253, align 4, !dbg !5522
  %15 = load i32, i32* %__UNIQUE_ID___x252, align 4, !dbg !5522
  %16 = load i32, i32* %__UNIQUE_ID___y253, align 4, !dbg !5522
  %cmp13 = icmp ult i32 %15, %16, !dbg !5522
  br i1 %cmp13, label %cond.true15, label %cond.false16, !dbg !5522

cond.true15:                                      ; preds = %cond.end
  %17 = load i32, i32* %__UNIQUE_ID___x252, align 4, !dbg !5522
  br label %cond.end17, !dbg !5522

cond.false16:                                     ; preds = %cond.end
  %18 = load i32, i32* %__UNIQUE_ID___y253, align 4, !dbg !5522
  br label %cond.end17, !dbg !5522

cond.end17:                                       ; preds = %cond.false16, %cond.true15
  %cond18 = phi i32 [ %17, %cond.true15 ], [ %18, %cond.false16 ], !dbg !5522
  store i32 %cond18, i32* %tmp12, align 4, !dbg !5522
  %19 = load i32, i32* %tmp12, align 4, !dbg !5522
  %or = or i32 %and, %19, !dbg !5528
  store i32 %or, i32* %bridge_agpstat.addr, align 4, !dbg !5529
  %20 = load i32, i32* %bridge_agpstat.addr, align 4, !dbg !5530
  %and19 = and i32 %20, 16, !dbg !5532
  %tobool20 = icmp ne i32 %and19, 0, !dbg !5532
  br i1 %tobool20, label %land.lhs.true, label %if.then26, !dbg !5533

land.lhs.true:                                    ; preds = %cond.end17
  %21 = load i32, i32* %vga_agpstat, align 4, !dbg !5534
  %and21 = and i32 %21, 16, !dbg !5535
  %tobool22 = icmp ne i32 %and21, 0, !dbg !5535
  br i1 %tobool22, label %land.lhs.true23, label %if.then26, !dbg !5536

land.lhs.true23:                                  ; preds = %land.lhs.true
  %22 = load i32, i32* %requested_mode.addr, align 4, !dbg !5537
  %and24 = and i32 %22, 16, !dbg !5538
  %tobool25 = icmp ne i32 %and24, 0, !dbg !5538
  br i1 %tobool25, label %if.end28, label %if.then26, !dbg !5539

if.then26:                                        ; preds = %land.lhs.true23, %land.lhs.true, %cond.end17
  %23 = load i32, i32* %bridge_agpstat.addr, align 4, !dbg !5540
  %and27 = and i32 %23, -17, !dbg !5540
  store i32 %and27, i32* %bridge_agpstat.addr, align 4, !dbg !5540
  br label %if.end28, !dbg !5541

if.end28:                                         ; preds = %if.then26, %land.lhs.true23
  %24 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !5542
  %mode = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %24, i32 0, i32 14, !dbg !5544
  %25 = load i32, i32* %mode, align 8, !dbg !5544
  %and29 = and i32 %25, 8, !dbg !5545
  %tobool30 = icmp ne i32 %and29, 0, !dbg !5545
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !5546

if.then31:                                        ; preds = %if.end28
  call void @agp_v3_parse_one(i32* %requested_mode.addr, i32* %bridge_agpstat.addr, i32* %vga_agpstat) #10, !dbg !5547
  br label %if.end32, !dbg !5547

if.else:                                          ; preds = %if.end28
  call void @agp_v2_parse_one(i32* %requested_mode.addr, i32* %bridge_agpstat.addr, i32* %vga_agpstat) #10, !dbg !5548
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then31
  %26 = load %struct.pci_dev*, %struct.pci_dev** %device, align 8, !dbg !5549
  call void @pci_dev_put(%struct.pci_dev* %26) #10, !dbg !5550
  %27 = load i32, i32* %bridge_agpstat.addr, align 4, !dbg !5551
  store i32 %27, i32* %retval, align 4, !dbg !5552
  br label %return, !dbg !5552

return:                                           ; preds = %if.end32, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !5553
  ret i32 %28, !dbg !5553
}

; Function Attrs: noredzone
declare dso_local %struct.pci_dev* @pci_get_class(i32, %struct.pci_dev*) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_find_capability(%struct.pci_dev*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_dword(%struct.pci_dev*, i32, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @agp_v3_parse_one(i32* %requested_mode, i32* %bridge_agpstat, i32* %vga_agpstat) #0 !dbg !5554 {
entry:
  %pscr_ret__.i150 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i150, metadata !5557, metadata !DIExpression()), !dbg !5563
  %__vpp_verify.i151 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i151, metadata !5569, metadata !DIExpression()), !dbg !5571
  %pfo_val__.i152 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i152, metadata !5572, metadata !DIExpression()), !dbg !5574
  %tmp.i153 = alloca %struct.task_struct*, align 8
  %tmp1.i154 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i145 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i145, metadata !5557, metadata !DIExpression()), !dbg !5575
  %__vpp_verify.i146 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i146, metadata !5569, metadata !DIExpression()), !dbg !5579
  %pfo_val__.i147 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i147, metadata !5572, metadata !DIExpression()), !dbg !5580
  %tmp.i148 = alloca %struct.task_struct*, align 8
  %tmp1.i149 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i140 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i140, metadata !5557, metadata !DIExpression()), !dbg !5581
  %__vpp_verify.i141 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i141, metadata !5569, metadata !DIExpression()), !dbg !5585
  %pfo_val__.i142 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i142, metadata !5572, metadata !DIExpression()), !dbg !5586
  %tmp.i143 = alloca %struct.task_struct*, align 8
  %tmp1.i144 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i135 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i135, metadata !5557, metadata !DIExpression()), !dbg !5587
  %__vpp_verify.i136 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i136, metadata !5569, metadata !DIExpression()), !dbg !5592
  %pfo_val__.i137 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i137, metadata !5572, metadata !DIExpression()), !dbg !5593
  %tmp.i138 = alloca %struct.task_struct*, align 8
  %tmp1.i139 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i130 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i130, metadata !5557, metadata !DIExpression()), !dbg !5594
  %__vpp_verify.i131 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i131, metadata !5569, metadata !DIExpression()), !dbg !5598
  %pfo_val__.i132 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i132, metadata !5572, metadata !DIExpression()), !dbg !5599
  %tmp.i133 = alloca %struct.task_struct*, align 8
  %tmp1.i134 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !5557, metadata !DIExpression()), !dbg !5600
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !5569, metadata !DIExpression()), !dbg !5604
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !5572, metadata !DIExpression()), !dbg !5605
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %requested_mode.addr = alloca i32*, align 8
  %bridge_agpstat.addr = alloca i32*, align 8
  %vga_agpstat.addr = alloca i32*, align 8
  %origbridge = alloca i32, align 4
  %origvga = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x246 = alloca i32, align 4
  %__UNIQUE_ID___y247 = alloca i32, align 4
  %tmp20 = alloca i32, align 4
  %__UNIQUE_ID___x248 = alloca i32, align 4
  %__UNIQUE_ID___y249 = alloca i32, align 4
  %tmp26 = alloca i32, align 4
  store i32* %requested_mode, i32** %requested_mode.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %requested_mode.addr, metadata !5606, metadata !DIExpression()), !dbg !5607
  store i32* %bridge_agpstat, i32** %bridge_agpstat.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bridge_agpstat.addr, metadata !5608, metadata !DIExpression()), !dbg !5609
  store i32* %vga_agpstat, i32** %vga_agpstat.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %vga_agpstat.addr, metadata !5610, metadata !DIExpression()), !dbg !5611
  call void @llvm.dbg.declare(metadata i32* %origbridge, metadata !5612, metadata !DIExpression()), !dbg !5613
  %0 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5614
  %1 = load i32, i32* %0, align 4, !dbg !5615
  store i32 %1, i32* %origbridge, align 4, !dbg !5613
  call void @llvm.dbg.declare(metadata i32* %origvga, metadata !5616, metadata !DIExpression()), !dbg !5617
  %2 = load i32*, i32** %vga_agpstat.addr, align 8, !dbg !5618
  %3 = load i32, i32* %2, align 4, !dbg !5619
  store i32 %3, i32* %origvga, align 4, !dbg !5617
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !5620, metadata !DIExpression()), !dbg !5621
  %4 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5622
  %5 = load i32, i32* %4, align 4, !dbg !5624
  %and = and i32 %5, 16711876, !dbg !5625
  %tobool = icmp ne i32 %and, 0, !dbg !5625
  br i1 %tobool, label %if.then, label %if.end, !dbg !5626

if.then:                                          ; preds = %entry
  %6 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5627
  %7 = load i32, i32* %6, align 4, !dbg !5629
  %and1 = and i32 %7, 16711876, !dbg !5630
  %8 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5631
  %9 = load i32, i32* %8, align 4, !dbg !5632
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.8, i64 0, i64 0), i32 %and1, i32 %9) #13, !dbg !5633
  %10 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5634
  %11 = load i32, i32* %10, align 4, !dbg !5635
  %and2 = and i32 %11, -16711877, !dbg !5635
  store i32 %and2, i32* %10, align 4, !dbg !5635
  br label %if.end, !dbg !5636

if.end:                                           ; preds = %if.then, %entry
  %12 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5637
  %13 = load i32, i32* %12, align 4, !dbg !5638
  %and3 = and i32 %13, 7, !dbg !5639
  store i32 %and3, i32* %tmp, align 4, !dbg !5640
  %14 = load i32, i32* %tmp, align 4, !dbg !5641
  %cmp = icmp eq i32 %14, 0, !dbg !5642
  br i1 %cmp, label %if.then4, label %if.end7, !dbg !5643

if.then4:                                         ; preds = %if.end
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !5604
  %15 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !5604
  %16 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !5605, !srcloc !5644
  store i64 %16, i64* %pfo_val__.i, align 8, !dbg !5605
  %17 = load i64, i64* %pfo_val__.i, align 8, !dbg !5605
  %18 = inttoptr i64 %17 to %struct.task_struct*, !dbg !5605
  store %struct.task_struct* %18, %struct.task_struct** %tmp.i, align 8, !dbg !5605
  %19 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !5605
  store %struct.task_struct* %19, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !5600
  %20 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !5600
  store %struct.task_struct* %20, %struct.task_struct** %tmp1.i, align 8, !dbg !5600
  %21 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !5600
  %comm = getelementptr inbounds %struct.task_struct, %struct.task_struct* %21, i32 0, i32 68, !dbg !5645
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %comm, i64 0, i64 0, !dbg !5646
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.9, i64 0, i64 0), i8* %arraydecay) #13, !dbg !5647
  %22 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5648
  %23 = load i32, i32* %22, align 4, !dbg !5649
  %or = or i32 %23, 1, !dbg !5649
  store i32 %or, i32* %22, align 4, !dbg !5649
  br label %if.end7, !dbg !5650

if.end7:                                          ; preds = %if.then4, %if.end
  %24 = load i32, i32* %tmp, align 4, !dbg !5651
  %cmp8 = icmp uge i32 %24, 3, !dbg !5652
  br i1 %cmp8, label %if.then9, label %if.end16, !dbg !5653

if.then9:                                         ; preds = %if.end7
  store i8* null, i8** %__vpp_verify.i131, align 8, !dbg !5598
  %25 = load i8*, i8** %__vpp_verify.i131, align 8, !dbg !5598
  %26 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !5599, !srcloc !5644
  store i64 %26, i64* %pfo_val__.i132, align 8, !dbg !5599
  %27 = load i64, i64* %pfo_val__.i132, align 8, !dbg !5599
  %28 = inttoptr i64 %27 to %struct.task_struct*, !dbg !5599
  store %struct.task_struct* %28, %struct.task_struct** %tmp.i133, align 8, !dbg !5599
  %29 = load %struct.task_struct*, %struct.task_struct** %tmp.i133, align 8, !dbg !5599
  store %struct.task_struct* %29, %struct.task_struct** %pscr_ret__.i130, align 8, !dbg !5594
  %30 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i130, align 8, !dbg !5594
  store %struct.task_struct* %30, %struct.task_struct** %tmp1.i134, align 8, !dbg !5594
  %31 = load %struct.task_struct*, %struct.task_struct** %tmp1.i134, align 8, !dbg !5594
  %comm11 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %31, i32 0, i32 68, !dbg !5654
  %arraydecay12 = getelementptr inbounds [16 x i8], [16 x i8]* %comm11, i64 0, i64 0, !dbg !5655
  %32 = load i32, i32* %tmp, align 4, !dbg !5656
  %mul = mul i32 %32, 4, !dbg !5657
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.10, i64 0, i64 0), i8* %arraydecay12, i32 %mul) #13, !dbg !5658
  %33 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5659
  %34 = load i32, i32* %33, align 4, !dbg !5660
  %and14 = and i32 %34, -8, !dbg !5661
  %or15 = or i32 %and14, 2, !dbg !5662
  %35 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5663
  store i32 %or15, i32* %35, align 4, !dbg !5664
  br label %if.end16, !dbg !5665

if.end16:                                         ; preds = %if.then9, %if.end7
  %36 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5666
  %37 = load i32, i32* %36, align 4, !dbg !5667
  %and17 = and i32 %37, -57345, !dbg !5668
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x246, metadata !5669, metadata !DIExpression()), !dbg !5671
  %38 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5671
  %39 = load i32, i32* %38, align 4, !dbg !5671
  %and18 = and i32 %39, 57344, !dbg !5671
  store i32 %and18, i32* %__UNIQUE_ID___x246, align 4, !dbg !5671
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y247, metadata !5672, metadata !DIExpression()), !dbg !5671
  %40 = load i32*, i32** %vga_agpstat.addr, align 8, !dbg !5671
  %41 = load i32, i32* %40, align 4, !dbg !5671
  %and19 = and i32 %41, 57344, !dbg !5671
  store i32 %and19, i32* %__UNIQUE_ID___y247, align 4, !dbg !5671
  %42 = load i32, i32* %__UNIQUE_ID___x246, align 4, !dbg !5671
  %43 = load i32, i32* %__UNIQUE_ID___y247, align 4, !dbg !5671
  %cmp21 = icmp ugt i32 %42, %43, !dbg !5671
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !5671

cond.true:                                        ; preds = %if.end16
  %44 = load i32, i32* %__UNIQUE_ID___x246, align 4, !dbg !5671
  br label %cond.end, !dbg !5671

cond.false:                                       ; preds = %if.end16
  %45 = load i32, i32* %__UNIQUE_ID___y247, align 4, !dbg !5671
  br label %cond.end, !dbg !5671

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %44, %cond.true ], [ %45, %cond.false ], !dbg !5671
  store i32 %cond, i32* %tmp20, align 4, !dbg !5671
  %46 = load i32, i32* %tmp20, align 4, !dbg !5671
  %or22 = or i32 %and17, %46, !dbg !5673
  %47 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5674
  store i32 %or22, i32* %47, align 4, !dbg !5675
  %48 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5676
  %49 = load i32, i32* %48, align 4, !dbg !5677
  %and23 = and i32 %49, -7169, !dbg !5678
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x248, metadata !5679, metadata !DIExpression()), !dbg !5681
  %50 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5681
  %51 = load i32, i32* %50, align 4, !dbg !5681
  %and24 = and i32 %51, 7168, !dbg !5681
  store i32 %and24, i32* %__UNIQUE_ID___x248, align 4, !dbg !5681
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y249, metadata !5682, metadata !DIExpression()), !dbg !5681
  %52 = load i32*, i32** %vga_agpstat.addr, align 8, !dbg !5681
  %53 = load i32, i32* %52, align 4, !dbg !5681
  %and25 = and i32 %53, 7168, !dbg !5681
  store i32 %and25, i32* %__UNIQUE_ID___y249, align 4, !dbg !5681
  %54 = load i32, i32* %__UNIQUE_ID___x248, align 4, !dbg !5681
  %55 = load i32, i32* %__UNIQUE_ID___y249, align 4, !dbg !5681
  %cmp27 = icmp ult i32 %54, %55, !dbg !5681
  br i1 %cmp27, label %cond.true28, label %cond.false29, !dbg !5681

cond.true28:                                      ; preds = %cond.end
  %56 = load i32, i32* %__UNIQUE_ID___x248, align 4, !dbg !5681
  br label %cond.end30, !dbg !5681

cond.false29:                                     ; preds = %cond.end
  %57 = load i32, i32* %__UNIQUE_ID___y249, align 4, !dbg !5681
  br label %cond.end30, !dbg !5681

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond31 = phi i32 [ %56, %cond.true28 ], [ %57, %cond.false29 ], !dbg !5681
  store i32 %cond31, i32* %tmp26, align 4, !dbg !5681
  %58 = load i32, i32* %tmp26, align 4, !dbg !5681
  %or32 = or i32 %and23, %58, !dbg !5683
  %59 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5684
  store i32 %or32, i32* %59, align 4, !dbg !5685
  %60 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5686
  %61 = load i32, i32* %60, align 4, !dbg !5687
  %or33 = or i32 %61, 512, !dbg !5687
  store i32 %or33, i32* %60, align 4, !dbg !5687
  %62 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5688
  %63 = load i32, i32* %62, align 4, !dbg !5689
  %and34 = and i32 %63, 8, !dbg !5690
  %tobool35 = icmp ne i32 %and34, 0, !dbg !5690
  br i1 %tobool35, label %if.then36, label %if.else, !dbg !5691

if.then36:                                        ; preds = %cond.end30
  %64 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5692
  %65 = load i32, i32* %64, align 4, !dbg !5693
  %and37 = and i32 %65, 4, !dbg !5694
  %tobool38 = icmp ne i32 %and37, 0, !dbg !5694
  br i1 %tobool38, label %if.then39, label %if.end46, !dbg !5695

if.then39:                                        ; preds = %if.then36
  store i8* null, i8** %__vpp_verify.i136, align 8, !dbg !5592
  %66 = load i8*, i8** %__vpp_verify.i136, align 8, !dbg !5592
  %67 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !5593, !srcloc !5644
  store i64 %67, i64* %pfo_val__.i137, align 8, !dbg !5593
  %68 = load i64, i64* %pfo_val__.i137, align 8, !dbg !5593
  %69 = inttoptr i64 %68 to %struct.task_struct*, !dbg !5593
  store %struct.task_struct* %69, %struct.task_struct** %tmp.i138, align 8, !dbg !5593
  %70 = load %struct.task_struct*, %struct.task_struct** %tmp.i138, align 8, !dbg !5593
  store %struct.task_struct* %70, %struct.task_struct** %pscr_ret__.i135, align 8, !dbg !5587
  %71 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i135, align 8, !dbg !5587
  store %struct.task_struct* %71, %struct.task_struct** %tmp1.i139, align 8, !dbg !5587
  %72 = load %struct.task_struct*, %struct.task_struct** %tmp1.i139, align 8, !dbg !5587
  %comm41 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %72, i32 0, i32 68, !dbg !5696
  %arraydecay42 = getelementptr inbounds [16 x i8], [16 x i8]* %comm41, i64 0, i64 0, !dbg !5697
  %73 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5698
  %74 = load i32, i32* %73, align 4, !dbg !5699
  %call43 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.11, i64 0, i64 0), i8* %arraydecay42, i32 %74) #13, !dbg !5700
  %75 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5701
  %76 = load i32, i32* %75, align 4, !dbg !5702
  %and44 = and i32 %76, -5, !dbg !5702
  store i32 %and44, i32* %75, align 4, !dbg !5702
  %77 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5703
  %78 = load i32, i32* %77, align 4, !dbg !5704
  %or45 = or i32 %78, 1, !dbg !5704
  store i32 %or45, i32* %77, align 4, !dbg !5704
  br label %if.end46, !dbg !5705

if.end46:                                         ; preds = %if.then39, %if.then36
  br label %if.end53, !dbg !5706

if.else:                                          ; preds = %cond.end30
  store i8* null, i8** %__vpp_verify.i141, align 8, !dbg !5585
  %79 = load i8*, i8** %__vpp_verify.i141, align 8, !dbg !5585
  %80 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !5586, !srcloc !5644
  store i64 %80, i64* %pfo_val__.i142, align 8, !dbg !5586
  %81 = load i64, i64* %pfo_val__.i142, align 8, !dbg !5586
  %82 = inttoptr i64 %81 to %struct.task_struct*, !dbg !5586
  store %struct.task_struct* %82, %struct.task_struct** %tmp.i143, align 8, !dbg !5586
  %83 = load %struct.task_struct*, %struct.task_struct** %tmp.i143, align 8, !dbg !5586
  store %struct.task_struct* %83, %struct.task_struct** %pscr_ret__.i140, align 8, !dbg !5581
  %84 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i140, align 8, !dbg !5581
  store %struct.task_struct* %84, %struct.task_struct** %tmp1.i144, align 8, !dbg !5581
  %85 = load %struct.task_struct*, %struct.task_struct** %tmp1.i144, align 8, !dbg !5581
  %comm48 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %85, i32 0, i32 68, !dbg !5707
  %arraydecay49 = getelementptr inbounds [16 x i8], [16 x i8]* %comm48, i64 0, i64 0, !dbg !5708
  %86 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5709
  %87 = load i32, i32* %86, align 4, !dbg !5710
  %call50 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12, i64 0, i64 0), i8* %arraydecay49, i32 %87) #13, !dbg !5711
  %88 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5712
  %89 = load i32, i32* %88, align 4, !dbg !5713
  %and51 = and i32 %89, -8, !dbg !5713
  store i32 %and51, i32* %88, align 4, !dbg !5713
  %90 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5714
  %91 = load i32, i32* %90, align 4, !dbg !5715
  %or52 = or i32 %91, 1, !dbg !5715
  store i32 %or52, i32* %90, align 4, !dbg !5715
  br label %if.end53

if.end53:                                         ; preds = %if.else, %if.end46
  %92 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5716
  %93 = load i32, i32* %92, align 4, !dbg !5717
  %and54 = and i32 %93, 2, !dbg !5718
  %tobool55 = icmp ne i32 %and54, 0, !dbg !5718
  br i1 %tobool55, label %if.then56, label %if.else78, !dbg !5719

if.then56:                                        ; preds = %if.end53
  %94 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5720
  %95 = load i32, i32* %94, align 4, !dbg !5721
  %and57 = and i32 %95, 2, !dbg !5722
  %tobool58 = icmp ne i32 %and57, 0, !dbg !5722
  br i1 %tobool58, label %if.end66, label %if.then59, !dbg !5723

if.then59:                                        ; preds = %if.then56
  %96 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5724
  %97 = load i32, i32* %96, align 4, !dbg !5725
  %and60 = and i32 %97, -7, !dbg !5725
  store i32 %and60, i32* %96, align 4, !dbg !5725
  %98 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5726
  %99 = load i32, i32* %98, align 4, !dbg !5727
  %or61 = or i32 %99, 1, !dbg !5727
  store i32 %or61, i32* %98, align 4, !dbg !5727
  store i8* null, i8** %__vpp_verify.i146, align 8, !dbg !5579
  %100 = load i8*, i8** %__vpp_verify.i146, align 8, !dbg !5579
  %101 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !5580, !srcloc !5644
  store i64 %101, i64* %pfo_val__.i147, align 8, !dbg !5580
  %102 = load i64, i64* %pfo_val__.i147, align 8, !dbg !5580
  %103 = inttoptr i64 %102 to %struct.task_struct*, !dbg !5580
  store %struct.task_struct* %103, %struct.task_struct** %tmp.i148, align 8, !dbg !5580
  %104 = load %struct.task_struct*, %struct.task_struct** %tmp.i148, align 8, !dbg !5580
  store %struct.task_struct* %104, %struct.task_struct** %pscr_ret__.i145, align 8, !dbg !5575
  %105 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i145, align 8, !dbg !5575
  store %struct.task_struct* %105, %struct.task_struct** %tmp1.i149, align 8, !dbg !5575
  %106 = load %struct.task_struct*, %struct.task_struct** %tmp1.i149, align 8, !dbg !5575
  %comm63 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %106, i32 0, i32 68, !dbg !5728
  %arraydecay64 = getelementptr inbounds [16 x i8], [16 x i8]* %comm63, i64 0, i64 0, !dbg !5729
  %call65 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i8* %arraydecay64) #13, !dbg !5730
  br label %if.end129, !dbg !5731

if.end66:                                         ; preds = %if.then56
  %107 = load i32*, i32** %vga_agpstat.addr, align 8, !dbg !5732
  %108 = load i32, i32* %107, align 4, !dbg !5733
  %and67 = and i32 %108, 2, !dbg !5734
  %tobool68 = icmp ne i32 %and67, 0, !dbg !5734
  br i1 %tobool68, label %if.end76, label %if.then69, !dbg !5735

if.then69:                                        ; preds = %if.end66
  %109 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5736
  %110 = load i32, i32* %109, align 4, !dbg !5737
  %and70 = and i32 %110, -7, !dbg !5737
  store i32 %and70, i32* %109, align 4, !dbg !5737
  %111 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5738
  %112 = load i32, i32* %111, align 4, !dbg !5739
  %or71 = or i32 %112, 1, !dbg !5739
  store i32 %or71, i32* %111, align 4, !dbg !5739
  store i8* null, i8** %__vpp_verify.i151, align 8, !dbg !5571
  %113 = load i8*, i8** %__vpp_verify.i151, align 8, !dbg !5571
  %114 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !5574, !srcloc !5644
  store i64 %114, i64* %pfo_val__.i152, align 8, !dbg !5574
  %115 = load i64, i64* %pfo_val__.i152, align 8, !dbg !5574
  %116 = inttoptr i64 %115 to %struct.task_struct*, !dbg !5574
  store %struct.task_struct* %116, %struct.task_struct** %tmp.i153, align 8, !dbg !5574
  %117 = load %struct.task_struct*, %struct.task_struct** %tmp.i153, align 8, !dbg !5574
  store %struct.task_struct* %117, %struct.task_struct** %pscr_ret__.i150, align 8, !dbg !5563
  %118 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i150, align 8, !dbg !5563
  store %struct.task_struct* %118, %struct.task_struct** %tmp1.i154, align 8, !dbg !5563
  %119 = load %struct.task_struct*, %struct.task_struct** %tmp1.i154, align 8, !dbg !5563
  %comm73 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %119, i32 0, i32 68, !dbg !5740
  %arraydecay74 = getelementptr inbounds [16 x i8], [16 x i8]* %comm73, i64 0, i64 0, !dbg !5741
  %call75 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.14, i64 0, i64 0), i8* %arraydecay74) #13, !dbg !5742
  br label %if.end129, !dbg !5743

if.end76:                                         ; preds = %if.end66
  %120 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5744
  %121 = load i32, i32* %120, align 4, !dbg !5745
  %and77 = and i32 %121, -6, !dbg !5745
  store i32 %and77, i32* %120, align 4, !dbg !5745
  br label %done, !dbg !5746

if.else78:                                        ; preds = %if.end53
  %122 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5747
  %123 = load i32, i32* %122, align 4, !dbg !5749
  %and79 = and i32 %123, 1, !dbg !5750
  %tobool80 = icmp ne i32 %and79, 0, !dbg !5750
  br i1 %tobool80, label %if.then81, label %if.else84, !dbg !5751

if.then81:                                        ; preds = %if.else78
  %124 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5752
  %125 = load i32, i32* %124, align 4, !dbg !5754
  %and82 = and i32 %125, -7, !dbg !5754
  store i32 %and82, i32* %124, align 4, !dbg !5754
  %126 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5755
  %127 = load i32, i32* %126, align 4, !dbg !5756
  %or83 = or i32 %127, 1, !dbg !5756
  store i32 %or83, i32* %126, align 4, !dbg !5756
  br label %done, !dbg !5757

if.else84:                                        ; preds = %if.else78
  %128 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5758
  %129 = load i32, i32* %128, align 4, !dbg !5761
  %and85 = and i32 %129, 2, !dbg !5762
  %tobool86 = icmp ne i32 %and85, 0, !dbg !5762
  br i1 %tobool86, label %land.lhs.true, label %if.else93, !dbg !5763

land.lhs.true:                                    ; preds = %if.else84
  %130 = load i32*, i32** %vga_agpstat.addr, align 8, !dbg !5764
  %131 = load i32, i32* %130, align 4, !dbg !5765
  %and87 = and i32 %131, 2, !dbg !5766
  %tobool88 = icmp ne i32 %and87, 0, !dbg !5766
  br i1 %tobool88, label %if.then89, label %if.else93, !dbg !5767

if.then89:                                        ; preds = %land.lhs.true
  %call90 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.15, i64 0, i64 0)) #13, !dbg !5768
  %132 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5770
  %133 = load i32, i32* %132, align 4, !dbg !5771
  %and91 = and i32 %133, -6, !dbg !5771
  store i32 %and91, i32* %132, align 4, !dbg !5771
  %134 = load i32*, i32** %vga_agpstat.addr, align 8, !dbg !5772
  %135 = load i32, i32* %134, align 4, !dbg !5773
  %and92 = and i32 %135, -6, !dbg !5773
  store i32 %and92, i32* %134, align 4, !dbg !5773
  br label %if.end109, !dbg !5774

if.else93:                                        ; preds = %land.lhs.true, %if.else84
  %call94 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0)) #13, !dbg !5775
  %136 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5777
  %137 = load i32, i32* %136, align 4, !dbg !5779
  %and95 = and i32 %137, 2, !dbg !5780
  %tobool96 = icmp ne i32 %and95, 0, !dbg !5780
  br i1 %tobool96, label %if.end101, label %if.then97, !dbg !5781

if.then97:                                        ; preds = %if.else93
  %138 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5782
  %139 = load i32, i32* %138, align 4, !dbg !5784
  %140 = load i32, i32* %origbridge, align 4, !dbg !5785
  %call98 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.17, i64 0, i64 0), i32 %139, i32 %140) #13, !dbg !5786
  %141 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5787
  %142 = load i32, i32* %141, align 4, !dbg !5788
  %and99 = and i32 %142, -7, !dbg !5788
  store i32 %and99, i32* %141, align 4, !dbg !5788
  %143 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5789
  %144 = load i32, i32* %143, align 4, !dbg !5790
  %or100 = or i32 %144, 1, !dbg !5790
  store i32 %or100, i32* %143, align 4, !dbg !5790
  br label %if.end101, !dbg !5791

if.end101:                                        ; preds = %if.then97, %if.else93
  %145 = load i32*, i32** %vga_agpstat.addr, align 8, !dbg !5792
  %146 = load i32, i32* %145, align 4, !dbg !5794
  %and102 = and i32 %146, 2, !dbg !5795
  %tobool103 = icmp ne i32 %and102, 0, !dbg !5795
  br i1 %tobool103, label %if.end108, label %if.then104, !dbg !5796

if.then104:                                       ; preds = %if.end101
  %147 = load i32*, i32** %vga_agpstat.addr, align 8, !dbg !5797
  %148 = load i32, i32* %147, align 4, !dbg !5799
  %149 = load i32, i32* %origvga, align 4, !dbg !5800
  %call105 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.18, i64 0, i64 0), i32 %148, i32 %149) #13, !dbg !5801
  %150 = load i32*, i32** %vga_agpstat.addr, align 8, !dbg !5802
  %151 = load i32, i32* %150, align 4, !dbg !5803
  %and106 = and i32 %151, -7, !dbg !5803
  store i32 %and106, i32* %150, align 4, !dbg !5803
  %152 = load i32*, i32** %vga_agpstat.addr, align 8, !dbg !5804
  %153 = load i32, i32* %152, align 4, !dbg !5805
  %or107 = or i32 %153, 1, !dbg !5805
  store i32 %or107, i32* %152, align 4, !dbg !5805
  br label %if.end108, !dbg !5806

if.end108:                                        ; preds = %if.then104, %if.end101
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.then89
  br label %if.end110

if.end110:                                        ; preds = %if.end109
  br label %if.end111

if.end111:                                        ; preds = %if.end110
  br label %done, !dbg !5807

done:                                             ; preds = %if.end111, %if.then81, %if.end76
  call void @llvm.dbg.label(metadata !5808), !dbg !5809
  %154 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !5810
  %flags = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %154, i32 0, i32 22, !dbg !5812
  %155 = load i32, i32* %flags, align 4, !dbg !5812
  %and112 = and i32 %155, 1, !dbg !5813
  %tobool113 = icmp ne i32 %and112, 0, !dbg !5813
  br i1 %tobool113, label %if.then114, label %if.end116, !dbg !5814

if.then114:                                       ; preds = %done
  %156 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5815
  %157 = load i32, i32* %156, align 4, !dbg !5816
  %and115 = and i32 %157, -17, !dbg !5816
  store i32 %and115, i32* %156, align 4, !dbg !5816
  br label %if.end116, !dbg !5817

if.end116:                                        ; preds = %if.then114, %done
  %158 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !5818
  %flags117 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %158, i32 0, i32 22, !dbg !5820
  %159 = load i32, i32* %flags117, align 4, !dbg !5820
  %and118 = and i32 %159, 2, !dbg !5821
  %tobool119 = icmp ne i32 %and118, 0, !dbg !5821
  br i1 %tobool119, label %if.then120, label %if.end122, !dbg !5822

if.then120:                                       ; preds = %if.end116
  %160 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5823
  %161 = load i32, i32* %160, align 4, !dbg !5824
  %and121 = and i32 %161, -513, !dbg !5824
  store i32 %and121, i32* %160, align 4, !dbg !5824
  br label %if.end122, !dbg !5825

if.end122:                                        ; preds = %if.then120, %if.end116
  %162 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !5826
  %flags123 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %162, i32 0, i32 22, !dbg !5828
  %163 = load i32, i32* %flags123, align 4, !dbg !5828
  %and124 = and i32 %163, 4, !dbg !5829
  %tobool125 = icmp ne i32 %and124, 0, !dbg !5829
  br i1 %tobool125, label %if.then126, label %if.end129, !dbg !5830

if.then126:                                       ; preds = %if.end122
  %164 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5831
  %165 = load i32, i32* %164, align 4, !dbg !5833
  %and127 = and i32 %165, -7, !dbg !5833
  store i32 %and127, i32* %164, align 4, !dbg !5833
  %166 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5834
  %167 = load i32, i32* %166, align 4, !dbg !5835
  %or128 = or i32 %167, 1, !dbg !5835
  store i32 %or128, i32* %166, align 4, !dbg !5835
  br label %if.end129, !dbg !5836

if.end129:                                        ; preds = %if.then59, %if.then69, %if.then126, %if.end122
  ret void, !dbg !5837
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @agp_v2_parse_one(i32* %requested_mode, i32* %bridge_agpstat, i32* %vga_agpstat) #0 !dbg !5838 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !5557, metadata !DIExpression()), !dbg !5839
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !5569, metadata !DIExpression()), !dbg !5842
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !5572, metadata !DIExpression()), !dbg !5843
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %requested_mode.addr = alloca i32*, align 8
  %bridge_agpstat.addr = alloca i32*, align 8
  %vga_agpstat.addr = alloca i32*, align 8
  %tmp = alloca i32, align 4
  store i32* %requested_mode, i32** %requested_mode.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %requested_mode.addr, metadata !5844, metadata !DIExpression()), !dbg !5845
  store i32* %bridge_agpstat, i32** %bridge_agpstat.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bridge_agpstat.addr, metadata !5846, metadata !DIExpression()), !dbg !5847
  store i32* %vga_agpstat, i32** %vga_agpstat.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %vga_agpstat.addr, metadata !5848, metadata !DIExpression()), !dbg !5849
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !5850, metadata !DIExpression()), !dbg !5851
  %0 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5852
  %1 = load i32, i32* %0, align 4, !dbg !5854
  %and = and i32 %1, 16776392, !dbg !5855
  %tobool = icmp ne i32 %and, 0, !dbg !5855
  br i1 %tobool, label %if.then, label %if.end, !dbg !5856

if.then:                                          ; preds = %entry
  %2 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5857
  %3 = load i32, i32* %2, align 4, !dbg !5859
  %and1 = and i32 %3, 16776392, !dbg !5860
  %4 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5861
  %5 = load i32, i32* %4, align 4, !dbg !5862
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.8, i64 0, i64 0), i32 %and1, i32 %5) #13, !dbg !5863
  %6 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5864
  %7 = load i32, i32* %6, align 4, !dbg !5865
  %and2 = and i32 %7, -16776393, !dbg !5865
  store i32 %and2, i32* %6, align 4, !dbg !5865
  br label %if.end, !dbg !5866

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5867
  %9 = load i32, i32* %8, align 4, !dbg !5868
  %and3 = and i32 %9, 7, !dbg !5869
  switch i32 %and3, label %sw.default [
    i32 4, label %sw.bb
    i32 2, label %sw.bb5
  ], !dbg !5870

sw.bb:                                            ; preds = %if.end
  %10 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5871
  %11 = load i32, i32* %10, align 4, !dbg !5873
  %or = or i32 %11, 3, !dbg !5873
  store i32 %or, i32* %10, align 4, !dbg !5873
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.19, i64 0, i64 0)) #13, !dbg !5874
  br label %sw.epilog, !dbg !5875

sw.bb5:                                           ; preds = %if.end
  %12 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5876
  %13 = load i32, i32* %12, align 4, !dbg !5877
  %or6 = or i32 %13, 1, !dbg !5877
  store i32 %or6, i32* %12, align 4, !dbg !5877
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.20, i64 0, i64 0)) #13, !dbg !5878
  br label %sw.epilog, !dbg !5879

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !5880

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb
  %14 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5881
  %15 = load i32, i32* %14, align 4, !dbg !5882
  %and8 = and i32 %15, 7, !dbg !5883
  store i32 %and8, i32* %tmp, align 4, !dbg !5884
  %16 = load i32, i32* %tmp, align 4, !dbg !5885
  switch i32 %16, label %sw.epilog19 [
    i32 0, label %sw.bb9
    i32 1, label %sw.bb13
    i32 2, label %sw.bb13
    i32 3, label %sw.bb14
    i32 4, label %sw.bb16
    i32 5, label %sw.bb17
    i32 6, label %sw.bb17
    i32 7, label %sw.bb17
  ], !dbg !5886

sw.bb9:                                           ; preds = %sw.epilog
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !5842
  %17 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !5842
  %18 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !5843, !srcloc !5644
  store i64 %18, i64* %pfo_val__.i, align 8, !dbg !5843
  %19 = load i64, i64* %pfo_val__.i, align 8, !dbg !5843
  %20 = inttoptr i64 %19 to %struct.task_struct*, !dbg !5843
  store %struct.task_struct* %20, %struct.task_struct** %tmp.i, align 8, !dbg !5843
  %21 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !5843
  store %struct.task_struct* %21, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !5839
  %22 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !5839
  store %struct.task_struct* %22, %struct.task_struct** %tmp1.i, align 8, !dbg !5839
  %23 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !5839
  %comm = getelementptr inbounds %struct.task_struct, %struct.task_struct* %23, i32 0, i32 68, !dbg !5887
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %comm, i64 0, i64 0, !dbg !5888
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.21, i64 0, i64 0), i8* %arraydecay) #13, !dbg !5889
  %24 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5890
  %25 = load i32, i32* %24, align 4, !dbg !5891
  %or12 = or i32 %25, 1, !dbg !5891
  store i32 %or12, i32* %24, align 4, !dbg !5891
  br label %sw.epilog19, !dbg !5892

sw.bb13:                                          ; preds = %sw.epilog, %sw.epilog
  br label %sw.epilog19, !dbg !5893

sw.bb14:                                          ; preds = %sw.epilog
  %26 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5894
  %27 = load i32, i32* %26, align 4, !dbg !5895
  %and15 = and i32 %27, -2, !dbg !5895
  store i32 %and15, i32* %26, align 4, !dbg !5895
  br label %sw.epilog19, !dbg !5896

sw.bb16:                                          ; preds = %sw.epilog
  br label %sw.epilog19, !dbg !5897

sw.bb17:                                          ; preds = %sw.epilog, %sw.epilog, %sw.epilog
  %28 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5898
  %29 = load i32, i32* %28, align 4, !dbg !5899
  %and18 = and i32 %29, -4, !dbg !5899
  store i32 %and18, i32* %28, align 4, !dbg !5899
  br label %sw.epilog19, !dbg !5900

sw.epilog19:                                      ; preds = %sw.epilog, %sw.bb17, %sw.bb16, %sw.bb14, %sw.bb13, %sw.bb9
  %30 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5901
  %31 = load i32, i32* %30, align 4, !dbg !5903
  %and20 = and i32 %31, 512, !dbg !5904
  %tobool21 = icmp ne i32 %and20, 0, !dbg !5904
  br i1 %tobool21, label %land.lhs.true, label %if.then27, !dbg !5905

land.lhs.true:                                    ; preds = %sw.epilog19
  %32 = load i32*, i32** %vga_agpstat.addr, align 8, !dbg !5906
  %33 = load i32, i32* %32, align 4, !dbg !5907
  %and22 = and i32 %33, 512, !dbg !5908
  %tobool23 = icmp ne i32 %and22, 0, !dbg !5908
  br i1 %tobool23, label %land.lhs.true24, label %if.then27, !dbg !5909

land.lhs.true24:                                  ; preds = %land.lhs.true
  %34 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5910
  %35 = load i32, i32* %34, align 4, !dbg !5911
  %and25 = and i32 %35, 512, !dbg !5912
  %tobool26 = icmp ne i32 %and25, 0, !dbg !5912
  br i1 %tobool26, label %if.end29, label %if.then27, !dbg !5913

if.then27:                                        ; preds = %land.lhs.true24, %land.lhs.true, %sw.epilog19
  %36 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5914
  %37 = load i32, i32* %36, align 4, !dbg !5915
  %and28 = and i32 %37, -513, !dbg !5915
  store i32 %and28, i32* %36, align 4, !dbg !5915
  br label %if.end29, !dbg !5916

if.end29:                                         ; preds = %if.then27, %land.lhs.true24
  %38 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5917
  %39 = load i32, i32* %38, align 4, !dbg !5919
  %and30 = and i32 %39, 4, !dbg !5920
  %tobool31 = icmp ne i32 %and30, 0, !dbg !5920
  br i1 %tobool31, label %land.lhs.true32, label %if.then38, !dbg !5921

land.lhs.true32:                                  ; preds = %if.end29
  %40 = load i32*, i32** %vga_agpstat.addr, align 8, !dbg !5922
  %41 = load i32, i32* %40, align 4, !dbg !5923
  %and33 = and i32 %41, 4, !dbg !5924
  %tobool34 = icmp ne i32 %and33, 0, !dbg !5924
  br i1 %tobool34, label %land.lhs.true35, label %if.then38, !dbg !5925

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %42 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5926
  %43 = load i32, i32* %42, align 4, !dbg !5927
  %and36 = and i32 %43, 4, !dbg !5928
  %tobool37 = icmp ne i32 %and36, 0, !dbg !5928
  br i1 %tobool37, label %if.end40, label %if.then38, !dbg !5929

if.then38:                                        ; preds = %land.lhs.true35, %land.lhs.true32, %if.end29
  %44 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5930
  %45 = load i32, i32* %44, align 4, !dbg !5931
  %and39 = and i32 %45, -5, !dbg !5931
  store i32 %and39, i32* %44, align 4, !dbg !5931
  br label %if.end40, !dbg !5932

if.end40:                                         ; preds = %if.then38, %land.lhs.true35
  %46 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5933
  %47 = load i32, i32* %46, align 4, !dbg !5935
  %and41 = and i32 %47, 2, !dbg !5936
  %tobool42 = icmp ne i32 %and41, 0, !dbg !5936
  br i1 %tobool42, label %land.lhs.true43, label %if.then49, !dbg !5937

land.lhs.true43:                                  ; preds = %if.end40
  %48 = load i32*, i32** %vga_agpstat.addr, align 8, !dbg !5938
  %49 = load i32, i32* %48, align 4, !dbg !5939
  %and44 = and i32 %49, 2, !dbg !5940
  %tobool45 = icmp ne i32 %and44, 0, !dbg !5940
  br i1 %tobool45, label %land.lhs.true46, label %if.then49, !dbg !5941

land.lhs.true46:                                  ; preds = %land.lhs.true43
  %50 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5942
  %51 = load i32, i32* %50, align 4, !dbg !5943
  %and47 = and i32 %51, 2, !dbg !5944
  %tobool48 = icmp ne i32 %and47, 0, !dbg !5944
  br i1 %tobool48, label %if.end51, label %if.then49, !dbg !5945

if.then49:                                        ; preds = %land.lhs.true46, %land.lhs.true43, %if.end40
  %52 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5946
  %53 = load i32, i32* %52, align 4, !dbg !5947
  %and50 = and i32 %53, -3, !dbg !5947
  store i32 %and50, i32* %52, align 4, !dbg !5947
  br label %if.end51, !dbg !5948

if.end51:                                         ; preds = %if.then49, %land.lhs.true46
  %54 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5949
  %55 = load i32, i32* %54, align 4, !dbg !5951
  %and52 = and i32 %55, 1, !dbg !5952
  %tobool53 = icmp ne i32 %and52, 0, !dbg !5952
  br i1 %tobool53, label %land.lhs.true54, label %if.then60, !dbg !5953

land.lhs.true54:                                  ; preds = %if.end51
  %56 = load i32*, i32** %vga_agpstat.addr, align 8, !dbg !5954
  %57 = load i32, i32* %56, align 4, !dbg !5955
  %and55 = and i32 %57, 1, !dbg !5956
  %tobool56 = icmp ne i32 %and55, 0, !dbg !5956
  br i1 %tobool56, label %land.lhs.true57, label %if.then60, !dbg !5957

land.lhs.true57:                                  ; preds = %land.lhs.true54
  %58 = load i32*, i32** %requested_mode.addr, align 8, !dbg !5958
  %59 = load i32, i32* %58, align 4, !dbg !5959
  %and58 = and i32 %59, 1, !dbg !5960
  %tobool59 = icmp ne i32 %and58, 0, !dbg !5960
  br i1 %tobool59, label %if.end62, label %if.then60, !dbg !5961

if.then60:                                        ; preds = %land.lhs.true57, %land.lhs.true54, %if.end51
  %60 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5962
  %61 = load i32, i32* %60, align 4, !dbg !5963
  %and61 = and i32 %61, -2, !dbg !5963
  store i32 %and61, i32* %60, align 4, !dbg !5963
  br label %if.end62, !dbg !5964

if.end62:                                         ; preds = %if.then60, %land.lhs.true57
  %62 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5965
  %63 = load i32, i32* %62, align 4, !dbg !5967
  %and63 = and i32 %63, 4, !dbg !5968
  %tobool64 = icmp ne i32 %and63, 0, !dbg !5968
  br i1 %tobool64, label %if.then65, label %if.end67, !dbg !5969

if.then65:                                        ; preds = %if.end62
  %64 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5970
  %65 = load i32, i32* %64, align 4, !dbg !5971
  %and66 = and i32 %65, -4, !dbg !5971
  store i32 %and66, i32* %64, align 4, !dbg !5971
  br label %if.end67, !dbg !5972

if.end67:                                         ; preds = %if.then65, %if.end62
  %66 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5973
  %67 = load i32, i32* %66, align 4, !dbg !5975
  %and68 = and i32 %67, 2, !dbg !5976
  %tobool69 = icmp ne i32 %and68, 0, !dbg !5976
  br i1 %tobool69, label %if.then70, label %if.end72, !dbg !5977

if.then70:                                        ; preds = %if.end67
  %68 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5978
  %69 = load i32, i32* %68, align 4, !dbg !5979
  %and71 = and i32 %69, -6, !dbg !5979
  store i32 %and71, i32* %68, align 4, !dbg !5979
  br label %if.end72, !dbg !5980

if.end72:                                         ; preds = %if.then70, %if.end67
  %70 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5981
  %71 = load i32, i32* %70, align 4, !dbg !5983
  %and73 = and i32 %71, 1, !dbg !5984
  %tobool74 = icmp ne i32 %and73, 0, !dbg !5984
  br i1 %tobool74, label %if.then75, label %if.end77, !dbg !5985

if.then75:                                        ; preds = %if.end72
  %72 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5986
  %73 = load i32, i32* %72, align 4, !dbg !5987
  %and76 = and i32 %73, -7, !dbg !5987
  store i32 %and76, i32* %72, align 4, !dbg !5987
  br label %if.end77, !dbg !5988

if.end77:                                         ; preds = %if.then75, %if.end72
  %74 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !5989
  %flags = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %74, i32 0, i32 22, !dbg !5991
  %75 = load i32, i32* %flags, align 4, !dbg !5991
  %and78 = and i32 %75, 1, !dbg !5992
  %tobool79 = icmp ne i32 %and78, 0, !dbg !5992
  br i1 %tobool79, label %if.then80, label %if.end82, !dbg !5993

if.then80:                                        ; preds = %if.end77
  %76 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !5994
  %77 = load i32, i32* %76, align 4, !dbg !5995
  %and81 = and i32 %77, -17, !dbg !5995
  store i32 %and81, i32* %76, align 4, !dbg !5995
  br label %if.end82, !dbg !5996

if.end82:                                         ; preds = %if.then80, %if.end77
  %78 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !5997
  %flags83 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %78, i32 0, i32 22, !dbg !5999
  %79 = load i32, i32* %flags83, align 4, !dbg !5999
  %and84 = and i32 %79, 2, !dbg !6000
  %tobool85 = icmp ne i32 %and84, 0, !dbg !6000
  br i1 %tobool85, label %if.then86, label %if.end88, !dbg !6001

if.then86:                                        ; preds = %if.end82
  %80 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !6002
  %81 = load i32, i32* %80, align 4, !dbg !6003
  %and87 = and i32 %81, -513, !dbg !6003
  store i32 %and87, i32* %80, align 4, !dbg !6003
  br label %if.end88, !dbg !6004

if.end88:                                         ; preds = %if.then86, %if.end82
  %82 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !6005
  %flags89 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %82, i32 0, i32 22, !dbg !6007
  %83 = load i32, i32* %flags89, align 4, !dbg !6007
  %and90 = and i32 %83, 4, !dbg !6008
  %tobool91 = icmp ne i32 %and90, 0, !dbg !6008
  br i1 %tobool91, label %if.then92, label %if.end95, !dbg !6009

if.then92:                                        ; preds = %if.end88
  %84 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !6010
  %85 = load i32, i32* %84, align 4, !dbg !6012
  %and93 = and i32 %85, -7, !dbg !6012
  store i32 %and93, i32* %84, align 4, !dbg !6012
  %86 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !6013
  %87 = load i32, i32* %86, align 4, !dbg !6014
  %or94 = or i32 %87, 1, !dbg !6014
  store i32 %or94, i32* %86, align 4, !dbg !6014
  br label %if.end95, !dbg !6015

if.end95:                                         ; preds = %if.then92, %if.end88
  %88 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !6016
  %89 = load i32, i32* %88, align 4, !dbg !6018
  %and96 = and i32 %89, 1, !dbg !6019
  %tobool97 = icmp ne i32 %and96, 0, !dbg !6019
  br i1 %tobool97, label %if.then98, label %if.end100, !dbg !6020

if.then98:                                        ; preds = %if.end95
  %90 = load i32*, i32** %bridge_agpstat.addr, align 8, !dbg !6021
  %91 = load i32, i32* %90, align 4, !dbg !6022
  %and99 = and i32 %91, -17, !dbg !6022
  store i32 %and99, i32* %90, align 4, !dbg !6022
  br label %if.end100, !dbg !6023

if.end100:                                        ; preds = %if.then98, %if.end95
  ret void, !dbg !6024
}

; Function Attrs: noredzone
declare dso_local void @pci_dev_put(%struct.pci_dev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @agp_device_command(i32 %bridge_agpstat, i1 zeroext %agp_v3) #0 !dbg !6025 {
entry:
  %bridge_agpstat.addr = alloca i32, align 4
  %agp_v3.addr = alloca i8, align 1
  %device = alloca %struct.pci_dev*, align 8
  %mode = alloca i32, align 4
  %agp = alloca i8, align 1
  store i32 %bridge_agpstat, i32* %bridge_agpstat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bridge_agpstat.addr, metadata !6028, metadata !DIExpression()), !dbg !6029
  %frombool = zext i1 %agp_v3 to i8
  store i8 %frombool, i8* %agp_v3.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %agp_v3.addr, metadata !6030, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %device, metadata !6032, metadata !DIExpression()), !dbg !6033
  store %struct.pci_dev* null, %struct.pci_dev** %device, align 8, !dbg !6033
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !6034, metadata !DIExpression()), !dbg !6035
  %0 = load i32, i32* %bridge_agpstat.addr, align 4, !dbg !6036
  %and = and i32 %0, 7, !dbg !6037
  store i32 %and, i32* %mode, align 4, !dbg !6038
  %1 = load i8, i8* %agp_v3.addr, align 1, !dbg !6039
  %tobool = trunc i8 %1 to i1, !dbg !6039
  br i1 %tobool, label %if.then, label %if.end, !dbg !6041

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %mode, align 4, !dbg !6042
  %mul = mul i32 %2, 4, !dbg !6042
  store i32 %mul, i32* %mode, align 4, !dbg !6042
  br label %if.end, !dbg !6043

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !6044

while.cond:                                       ; preds = %if.end4, %if.then3, %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %device, align 8, !dbg !6044
  %call = call %struct.pci_dev* @pci_get_device(i32 -1, i32 -1, %struct.pci_dev* %3) #10, !dbg !6044
  store %struct.pci_dev* %call, %struct.pci_dev** %device, align 8, !dbg !6044
  %cmp = icmp ne %struct.pci_dev* %call, null, !dbg !6044
  br i1 %cmp, label %while.body, label %while.end, !dbg !6044

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %agp, metadata !6045, metadata !DIExpression()), !dbg !6047
  %4 = load %struct.pci_dev*, %struct.pci_dev** %device, align 8, !dbg !6048
  %call1 = call i32 @pci_find_capability(%struct.pci_dev* %4, i32 2) #10, !dbg !6049
  %conv = trunc i32 %call1 to i8, !dbg !6049
  store i8 %conv, i8* %agp, align 1, !dbg !6047
  %5 = load i8, i8* %agp, align 1, !dbg !6050
  %tobool2 = icmp ne i8 %5, 0, !dbg !6050
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6052

if.then3:                                         ; preds = %while.body
  br label %while.cond, !dbg !6053, !llvm.loop !6054

if.end4:                                          ; preds = %while.body
  %6 = load %struct.pci_dev*, %struct.pci_dev** %device, align 8, !dbg !6056
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 41, !dbg !6056
  %7 = load i8, i8* %agp_v3.addr, align 1, !dbg !6056
  %tobool5 = trunc i8 %7 to i1, !dbg !6056
  %8 = zext i1 %tobool5 to i64, !dbg !6056
  %cond = select i1 %tobool5, i32 3, i32 2, !dbg !6056
  %9 = load i32, i32* %mode, align 4, !dbg !6056
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0), i32 %cond, i32 %9) #13, !dbg !6056
  %10 = load %struct.pci_dev*, %struct.pci_dev** %device, align 8, !dbg !6057
  %11 = load i8, i8* %agp, align 1, !dbg !6058
  %conv7 = zext i8 %11 to i32, !dbg !6058
  %add = add i32 %conv7, 8, !dbg !6059
  %12 = load i32, i32* %bridge_agpstat.addr, align 4, !dbg !6060
  %call8 = call i32 @pci_write_config_dword(%struct.pci_dev* %10, i32 %add, i32 %12) #10, !dbg !6061
  br label %while.cond, !dbg !6044, !llvm.loop !6054

while.end:                                        ; preds = %while.cond
  ret void, !dbg !6062
}

; Function Attrs: noredzone
declare dso_local %struct.pci_dev* @pci_get_device(i32, i32, %struct.pci_dev*) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_dword(%struct.pci_dev*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @get_agp_version(%struct.agp_bridge_data* %bridge) #0 !dbg !6063 {
entry:
  %bridge.addr = alloca %struct.agp_bridge_data*, align 8
  %ncapid = alloca i32, align 4
  store %struct.agp_bridge_data* %bridge, %struct.agp_bridge_data** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_bridge_data** %bridge.addr, metadata !6066, metadata !DIExpression()), !dbg !6067
  call void @llvm.dbg.declare(metadata i32* %ncapid, metadata !6068, metadata !DIExpression()), !dbg !6069
  %0 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6070
  %major_version = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %0, i32 0, i32 23, !dbg !6072
  %1 = load i8, i8* %major_version, align 8, !dbg !6072
  %conv = sext i8 %1 to i32, !dbg !6070
  %cmp = icmp ne i32 %conv, 0, !dbg !6073
  br i1 %cmp, label %if.then, label %if.end, !dbg !6074

if.then:                                          ; preds = %entry
  br label %return, !dbg !6075

if.end:                                           ; preds = %entry
  %2 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6076
  %dev = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %2, i32 0, i32 6, !dbg !6077
  %3 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6077
  %4 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6078
  %capndx = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %4, i32 0, i32 21, !dbg !6079
  %5 = load i32, i32* %capndx, align 8, !dbg !6079
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %3, i32 %5, i32* %ncapid) #10, !dbg !6080
  %6 = load i32, i32* %ncapid, align 4, !dbg !6081
  %shr = lshr i32 %6, 20, !dbg !6082
  %and = and i32 %shr, 15, !dbg !6083
  %conv2 = trunc i32 %and to i8, !dbg !6084
  %7 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6085
  %major_version3 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %7, i32 0, i32 23, !dbg !6086
  store i8 %conv2, i8* %major_version3, align 8, !dbg !6087
  %8 = load i32, i32* %ncapid, align 4, !dbg !6088
  %shr4 = lshr i32 %8, 16, !dbg !6089
  %and5 = and i32 %shr4, 15, !dbg !6090
  %conv6 = trunc i32 %and5 to i8, !dbg !6091
  %9 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6092
  %minor_version = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %9, i32 0, i32 24, !dbg !6093
  store i8 %conv6, i8* %minor_version, align 1, !dbg !6094
  br label %return, !dbg !6095

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6095
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @agp_generic_enable(%struct.agp_bridge_data* %bridge, i32 %requested_mode) #0 !dbg !6096 {
entry:
  %bridge.addr = alloca %struct.agp_bridge_data*, align 8
  %requested_mode.addr = alloca i32, align 4
  %bridge_agpstat = alloca i32, align 4
  %temp = alloca i32, align 4
  store %struct.agp_bridge_data* %bridge, %struct.agp_bridge_data** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_bridge_data** %bridge.addr, metadata !6097, metadata !DIExpression()), !dbg !6098
  store i32 %requested_mode, i32* %requested_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %requested_mode.addr, metadata !6099, metadata !DIExpression()), !dbg !6100
  call void @llvm.dbg.declare(metadata i32* %bridge_agpstat, metadata !6101, metadata !DIExpression()), !dbg !6102
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !6103, metadata !DIExpression()), !dbg !6104
  %0 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !6105
  call void @get_agp_version(%struct.agp_bridge_data* %0) #10, !dbg !6106
  %1 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !6107
  %dev = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %1, i32 0, i32 6, !dbg !6107
  %2 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !6107
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 41, !dbg !6107
  %3 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !6107
  %major_version = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %3, i32 0, i32 23, !dbg !6107
  %4 = load i8, i8* %major_version, align 8, !dbg !6107
  %conv = sext i8 %4 to i32, !dbg !6107
  %5 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !6107
  %minor_version = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %5, i32 0, i32 24, !dbg !6107
  %6 = load i8, i8* %minor_version, align 1, !dbg !6107
  %conv2 = sext i8 %6 to i32, !dbg !6107
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i32 %conv, i32 %conv2) #13, !dbg !6107
  %7 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !6108
  %dev3 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %7, i32 0, i32 6, !dbg !6109
  %8 = load %struct.pci_dev*, %struct.pci_dev** %dev3, align 8, !dbg !6109
  %9 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !6110
  %capndx = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %9, i32 0, i32 21, !dbg !6111
  %10 = load i32, i32* %capndx, align 8, !dbg !6111
  %add = add i32 %10, 4, !dbg !6112
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %8, i32 %add, i32* %bridge_agpstat) #10, !dbg !6113
  %11 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !6114
  %12 = load i32, i32* %requested_mode.addr, align 4, !dbg !6115
  %13 = load i32, i32* %bridge_agpstat, align 4, !dbg !6116
  %call4 = call i32 @agp_collect_device_status(%struct.agp_bridge_data* %11, i32 %12, i32 %13) #10, !dbg !6117
  store i32 %call4, i32* %bridge_agpstat, align 4, !dbg !6118
  %14 = load i32, i32* %bridge_agpstat, align 4, !dbg !6119
  %cmp = icmp eq i32 %14, 0, !dbg !6121
  br i1 %cmp, label %if.then, label %if.end, !dbg !6122

if.then:                                          ; preds = %entry
  br label %return, !dbg !6123

if.end:                                           ; preds = %entry
  %15 = load i32, i32* %bridge_agpstat, align 4, !dbg !6124
  %or = or i32 %15, 256, !dbg !6124
  store i32 %or, i32* %bridge_agpstat, align 4, !dbg !6124
  %16 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6125
  %major_version6 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %16, i32 0, i32 23, !dbg !6127
  %17 = load i8, i8* %major_version6, align 8, !dbg !6127
  %conv7 = sext i8 %17 to i32, !dbg !6125
  %cmp8 = icmp sge i32 %conv7, 3, !dbg !6128
  br i1 %cmp8, label %if.then10, label %if.end32, !dbg !6129

if.then10:                                        ; preds = %if.end
  %18 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6130
  %mode = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %18, i32 0, i32 14, !dbg !6133
  %19 = load i32, i32* %mode, align 8, !dbg !6133
  %and = and i32 %19, 8, !dbg !6134
  %tobool = icmp ne i32 %and, 0, !dbg !6134
  br i1 %tobool, label %if.then11, label %if.else, !dbg !6135

if.then11:                                        ; preds = %if.then10
  %20 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6136
  %minor_version12 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %20, i32 0, i32 24, !dbg !6139
  %21 = load i8, i8* %minor_version12, align 1, !dbg !6139
  %conv13 = sext i8 %21 to i32, !dbg !6136
  %cmp14 = icmp sge i32 %conv13, 5, !dbg !6140
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !6141

if.then16:                                        ; preds = %if.then11
  %22 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6142
  %call17 = call i32 @agp_3_5_enable(%struct.agp_bridge_data* %22) #10, !dbg !6143
  br label %if.end18, !dbg !6143

if.end18:                                         ; preds = %if.then16, %if.then11
  %23 = load i32, i32* %bridge_agpstat, align 4, !dbg !6144
  call void @agp_device_command(i32 %23, i1 zeroext true) #10, !dbg !6145
  br label %return, !dbg !6146

if.else:                                          ; preds = %if.then10
  %24 = load i32, i32* %bridge_agpstat, align 4, !dbg !6147
  %and19 = and i32 %24, -7169, !dbg !6147
  store i32 %and19, i32* %bridge_agpstat, align 4, !dbg !6147
  %25 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6149
  %dev20 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %25, i32 0, i32 6, !dbg !6150
  %26 = load %struct.pci_dev*, %struct.pci_dev** %dev20, align 8, !dbg !6150
  %27 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6151
  %capndx21 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %27, i32 0, i32 21, !dbg !6152
  %28 = load i32, i32* %capndx21, align 8, !dbg !6152
  %add22 = add i32 %28, 16, !dbg !6153
  %call23 = call i32 @pci_read_config_dword(%struct.pci_dev* %26, i32 %add22, i32* %temp) #10, !dbg !6154
  %29 = load i32, i32* %temp, align 4, !dbg !6155
  %or24 = or i32 %29, 512, !dbg !6155
  store i32 %or24, i32* %temp, align 4, !dbg !6155
  %30 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6156
  %dev25 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %30, i32 0, i32 6, !dbg !6157
  %31 = load %struct.pci_dev*, %struct.pci_dev** %dev25, align 8, !dbg !6157
  %32 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6158
  %capndx26 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %32, i32 0, i32 21, !dbg !6159
  %33 = load i32, i32* %capndx26, align 8, !dbg !6159
  %add27 = add i32 %33, 16, !dbg !6160
  %34 = load i32, i32* %temp, align 4, !dbg !6161
  %call28 = call i32 @pci_write_config_dword(%struct.pci_dev* %31, i32 %add27, i32 %34) #10, !dbg !6162
  %35 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6163
  %dev29 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %35, i32 0, i32 6, !dbg !6163
  %36 = load %struct.pci_dev*, %struct.pci_dev** %dev29, align 8, !dbg !6163
  %dev30 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %36, i32 0, i32 41, !dbg !6163
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev30, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5, i64 0, i64 0)) #13, !dbg !6163
  br label %if.end31

if.end31:                                         ; preds = %if.else
  br label %if.end32, !dbg !6164

if.end32:                                         ; preds = %if.end31, %if.end
  %37 = load i32, i32* %bridge_agpstat, align 4, !dbg !6165
  call void @agp_device_command(i32 %37, i1 zeroext false) #10, !dbg !6166
  br label %return, !dbg !6167

return:                                           ; preds = %if.end32, %if.end18, %if.then
  ret void, !dbg !6167
}

; Function Attrs: noredzone
declare dso_local i32 @agp_3_5_enable(%struct.agp_bridge_data*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @agp_generic_create_gatt_table(%struct.agp_bridge_data* %bridge) #0 !dbg !6168 {
entry:
  %page.addr.i101 = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i101, metadata !6169, metadata !DIExpression()), !dbg !6171
  %tmp.i102 = alloca %struct.page*, align 8
  %tmp1.i103 = alloca %struct.page*, align 8
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !6177, metadata !DIExpression()), !dbg !6179
  %tmp.i = alloca %struct.page*, align 8
  %tmp1.i = alloca %struct.page*, align 8
  %retval = alloca i32, align 4
  %bridge.addr = alloca %struct.agp_bridge_data*, align 8
  %table = alloca i8*, align 8
  %table_end = alloca i8*, align 8
  %page_order = alloca i32, align 4
  %num_entries = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca i8*, align 8
  %page = alloca %struct.page*, align 8
  store %struct.agp_bridge_data* %bridge, %struct.agp_bridge_data** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_bridge_data** %bridge.addr, metadata !6183, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.declare(metadata i8** %table, metadata !6185, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.declare(metadata i8** %table_end, metadata !6187, metadata !DIExpression()), !dbg !6188
  call void @llvm.dbg.declare(metadata i32* %page_order, metadata !6189, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.declare(metadata i32* %num_entries, metadata !6191, metadata !DIExpression()), !dbg !6192
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6193, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !6195, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !6197, metadata !DIExpression()), !dbg !6198
  %0 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6199
  %driver = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %0, i32 0, i32 1, !dbg !6201
  %1 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver, align 8, !dbg !6201
  %size_type = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %1, i32 0, i32 3, !dbg !6202
  %2 = load i32, i32* %size_type, align 4, !dbg !6202
  %cmp = icmp eq i32 %2, 3, !dbg !6203
  br i1 %cmp, label %if.then, label %if.end, !dbg !6204

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6205
  br label %return, !dbg !6205

if.end:                                           ; preds = %entry
  store i8* null, i8** %table, align 8, !dbg !6206
  %3 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6207
  %aperture_size_idx = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %3, i32 0, i32 20, !dbg !6208
  %4 = load i32, i32* %aperture_size_idx, align 4, !dbg !6208
  store i32 %4, i32* %i, align 4, !dbg !6209
  %5 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6210
  %current_size = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %5, i32 0, i32 4, !dbg !6211
  %6 = load i8*, i8** %current_size, align 8, !dbg !6211
  store i8* %6, i8** %temp, align 8, !dbg !6212
  store i32 0, i32* %num_entries, align 4, !dbg !6213
  store i32 0, i32* %page_order, align 4, !dbg !6214
  %7 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6215
  %driver1 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %7, i32 0, i32 1, !dbg !6217
  %8 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver1, align 8, !dbg !6217
  %size_type2 = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %8, i32 0, i32 3, !dbg !6218
  %9 = load i32, i32* %size_type2, align 4, !dbg !6218
  %cmp3 = icmp ne i32 %9, 4, !dbg !6219
  br i1 %cmp3, label %if.then4, label %if.else43, !dbg !6220

if.then4:                                         ; preds = %if.end
  br label %do.body, !dbg !6221

do.body:                                          ; preds = %land.end, %if.then4
  %10 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6223
  %driver5 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %10, i32 0, i32 1, !dbg !6225
  %11 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver5, align 8, !dbg !6225
  %size_type6 = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %11, i32 0, i32 3, !dbg !6226
  %12 = load i32, i32* %size_type6, align 4, !dbg !6226
  switch i32 %12, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb9
    i32 2, label %sw.bb12
    i32 4, label %sw.bb15
    i32 3, label %sw.bb15
  ], !dbg !6227

sw.bb:                                            ; preds = %do.body
  %13 = load i8*, i8** %temp, align 8, !dbg !6228
  %14 = bitcast i8* %13 to %struct.aper_size_info_8*, !dbg !6228
  %page_order7 = getelementptr inbounds %struct.aper_size_info_8, %struct.aper_size_info_8* %14, i32 0, i32 2, !dbg !6230
  %15 = load i32, i32* %page_order7, align 4, !dbg !6230
  store i32 %15, i32* %page_order, align 4, !dbg !6231
  %16 = load i8*, i8** %temp, align 8, !dbg !6232
  %17 = bitcast i8* %16 to %struct.aper_size_info_8*, !dbg !6232
  %num_entries8 = getelementptr inbounds %struct.aper_size_info_8, %struct.aper_size_info_8* %17, i32 0, i32 1, !dbg !6233
  %18 = load i32, i32* %num_entries8, align 4, !dbg !6233
  store i32 %18, i32* %num_entries, align 4, !dbg !6234
  br label %sw.epilog, !dbg !6235

sw.bb9:                                           ; preds = %do.body
  %19 = load i8*, i8** %temp, align 8, !dbg !6236
  %20 = bitcast i8* %19 to %struct.aper_size_info_16*, !dbg !6236
  %page_order10 = getelementptr inbounds %struct.aper_size_info_16, %struct.aper_size_info_16* %20, i32 0, i32 2, !dbg !6237
  %21 = load i32, i32* %page_order10, align 4, !dbg !6237
  store i32 %21, i32* %page_order, align 4, !dbg !6238
  %22 = load i8*, i8** %temp, align 8, !dbg !6239
  %23 = bitcast i8* %22 to %struct.aper_size_info_16*, !dbg !6239
  %num_entries11 = getelementptr inbounds %struct.aper_size_info_16, %struct.aper_size_info_16* %23, i32 0, i32 1, !dbg !6240
  %24 = load i32, i32* %num_entries11, align 4, !dbg !6240
  store i32 %24, i32* %num_entries, align 4, !dbg !6241
  br label %sw.epilog, !dbg !6242

sw.bb12:                                          ; preds = %do.body
  %25 = load i8*, i8** %temp, align 8, !dbg !6243
  %26 = bitcast i8* %25 to %struct.aper_size_info_32*, !dbg !6243
  %page_order13 = getelementptr inbounds %struct.aper_size_info_32, %struct.aper_size_info_32* %26, i32 0, i32 2, !dbg !6244
  %27 = load i32, i32* %page_order13, align 4, !dbg !6244
  store i32 %27, i32* %page_order, align 4, !dbg !6245
  %28 = load i8*, i8** %temp, align 8, !dbg !6246
  %29 = bitcast i8* %28 to %struct.aper_size_info_32*, !dbg !6246
  %num_entries14 = getelementptr inbounds %struct.aper_size_info_32, %struct.aper_size_info_32* %29, i32 0, i32 1, !dbg !6247
  %30 = load i32, i32* %num_entries14, align 4, !dbg !6247
  store i32 %30, i32* %num_entries, align 4, !dbg !6248
  br label %sw.epilog, !dbg !6249

sw.bb15:                                          ; preds = %do.body, %do.body
  br label %sw.default, !dbg !6249

sw.default:                                       ; preds = %do.body, %sw.bb15
  store i32 0, i32* %num_entries, align 4, !dbg !6250
  store i32 0, i32* %page_order, align 4, !dbg !6251
  br label %sw.epilog, !dbg !6252

sw.epilog:                                        ; preds = %sw.default, %sw.bb12, %sw.bb9, %sw.bb
  %31 = load i32, i32* %page_order, align 4, !dbg !6253
  %call = call i64 @__get_free_pages(i32 3264, i32 %31) #10, !dbg !6253
  %32 = inttoptr i64 %call to i8*, !dbg !6253
  store i8* %32, i8** %table, align 8, !dbg !6254
  %33 = load i8*, i8** %table, align 8, !dbg !6255
  %cmp16 = icmp eq i8* %33, null, !dbg !6257
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !6258

if.then17:                                        ; preds = %sw.epilog
  %34 = load i32, i32* %i, align 4, !dbg !6259
  %inc = add i32 %34, 1, !dbg !6259
  store i32 %inc, i32* %i, align 4, !dbg !6259
  %35 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6261
  %driver18 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %35, i32 0, i32 1, !dbg !6262
  %36 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver18, align 8, !dbg !6262
  %size_type19 = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %36, i32 0, i32 3, !dbg !6263
  %37 = load i32, i32* %size_type19, align 4, !dbg !6263
  switch i32 %37, label %sw.default36 [
    i32 0, label %sw.bb20
    i32 1, label %sw.bb23
    i32 2, label %sw.bb29
    i32 4, label %sw.bb35
    i32 3, label %sw.bb35
  ], !dbg !6264

sw.bb20:                                          ; preds = %if.then17
  %38 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6265
  %driver21 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %38, i32 0, i32 1, !dbg !6265
  %39 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver21, align 8, !dbg !6265
  %aperture_sizes = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %39, i32 0, i32 1, !dbg !6265
  %40 = load i8*, i8** %aperture_sizes, align 8, !dbg !6265
  %41 = bitcast i8* %40 to %struct.aper_size_info_8*, !dbg !6265
  %42 = load i32, i32* %i, align 4, !dbg !6265
  %idx.ext = sext i32 %42 to i64, !dbg !6265
  %add.ptr = getelementptr %struct.aper_size_info_8, %struct.aper_size_info_8* %41, i64 %idx.ext, !dbg !6265
  %43 = bitcast %struct.aper_size_info_8* %add.ptr to i8*, !dbg !6265
  %44 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6267
  %current_size22 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %44, i32 0, i32 4, !dbg !6268
  store i8* %43, i8** %current_size22, align 8, !dbg !6269
  br label %sw.epilog37, !dbg !6270

sw.bb23:                                          ; preds = %if.then17
  %45 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6271
  %driver24 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %45, i32 0, i32 1, !dbg !6271
  %46 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver24, align 8, !dbg !6271
  %aperture_sizes25 = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %46, i32 0, i32 1, !dbg !6271
  %47 = load i8*, i8** %aperture_sizes25, align 8, !dbg !6271
  %48 = bitcast i8* %47 to %struct.aper_size_info_16*, !dbg !6271
  %49 = load i32, i32* %i, align 4, !dbg !6271
  %idx.ext26 = sext i32 %49 to i64, !dbg !6271
  %add.ptr27 = getelementptr %struct.aper_size_info_16, %struct.aper_size_info_16* %48, i64 %idx.ext26, !dbg !6271
  %50 = bitcast %struct.aper_size_info_16* %add.ptr27 to i8*, !dbg !6271
  %51 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6272
  %current_size28 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %51, i32 0, i32 4, !dbg !6273
  store i8* %50, i8** %current_size28, align 8, !dbg !6274
  br label %sw.epilog37, !dbg !6275

sw.bb29:                                          ; preds = %if.then17
  %52 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6276
  %driver30 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %52, i32 0, i32 1, !dbg !6276
  %53 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver30, align 8, !dbg !6276
  %aperture_sizes31 = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %53, i32 0, i32 1, !dbg !6276
  %54 = load i8*, i8** %aperture_sizes31, align 8, !dbg !6276
  %55 = bitcast i8* %54 to %struct.aper_size_info_32*, !dbg !6276
  %56 = load i32, i32* %i, align 4, !dbg !6276
  %idx.ext32 = sext i32 %56 to i64, !dbg !6276
  %add.ptr33 = getelementptr %struct.aper_size_info_32, %struct.aper_size_info_32* %55, i64 %idx.ext32, !dbg !6276
  %57 = bitcast %struct.aper_size_info_32* %add.ptr33 to i8*, !dbg !6276
  %58 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6277
  %current_size34 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %58, i32 0, i32 4, !dbg !6278
  store i8* %57, i8** %current_size34, align 8, !dbg !6279
  br label %sw.epilog37, !dbg !6280

sw.bb35:                                          ; preds = %if.then17, %if.then17
  br label %sw.default36, !dbg !6280

sw.default36:                                     ; preds = %if.then17, %sw.bb35
  br label %sw.epilog37, !dbg !6281

sw.epilog37:                                      ; preds = %sw.default36, %sw.bb29, %sw.bb23, %sw.bb20
  %59 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6282
  %current_size38 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %59, i32 0, i32 4, !dbg !6283
  %60 = load i8*, i8** %current_size38, align 8, !dbg !6283
  store i8* %60, i8** %temp, align 8, !dbg !6284
  br label %if.end40, !dbg !6285

if.else:                                          ; preds = %sw.epilog
  %61 = load i32, i32* %i, align 4, !dbg !6286
  %62 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6288
  %aperture_size_idx39 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %62, i32 0, i32 20, !dbg !6289
  store i32 %61, i32* %aperture_size_idx39, align 4, !dbg !6290
  br label %if.end40

if.end40:                                         ; preds = %if.else, %sw.epilog37
  br label %do.cond, !dbg !6291

do.cond:                                          ; preds = %if.end40
  %63 = load i8*, i8** %table, align 8, !dbg !6292
  %tobool = icmp ne i8* %63, null, !dbg !6292
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !6293

land.rhs:                                         ; preds = %do.cond
  %64 = load i32, i32* %i, align 4, !dbg !6294
  %65 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6295
  %driver41 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %65, i32 0, i32 1, !dbg !6296
  %66 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver41, align 8, !dbg !6296
  %num_aperture_sizes = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %66, i32 0, i32 2, !dbg !6297
  %67 = load i32, i32* %num_aperture_sizes, align 8, !dbg !6297
  %cmp42 = icmp slt i32 %64, %67, !dbg !6298
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %68 = phi i1 [ false, %do.cond ], [ %cmp42, %land.rhs ], !dbg !6299
  br i1 %68, label %do.body, label %do.end, !dbg !6291, !llvm.loop !6300

do.end:                                           ; preds = %land.end
  br label %if.end47, !dbg !6302

if.else43:                                        ; preds = %if.end
  %69 = load i8*, i8** %temp, align 8, !dbg !6303
  %70 = bitcast i8* %69 to %struct.aper_size_info_fixed*, !dbg !6305
  %page_order44 = getelementptr inbounds %struct.aper_size_info_fixed, %struct.aper_size_info_fixed* %70, i32 0, i32 2, !dbg !6306
  %71 = load i32, i32* %page_order44, align 4, !dbg !6306
  store i32 %71, i32* %page_order, align 4, !dbg !6307
  %72 = load i8*, i8** %temp, align 8, !dbg !6308
  %73 = bitcast i8* %72 to %struct.aper_size_info_fixed*, !dbg !6309
  %num_entries45 = getelementptr inbounds %struct.aper_size_info_fixed, %struct.aper_size_info_fixed* %73, i32 0, i32 1, !dbg !6310
  %74 = load i32, i32* %num_entries45, align 4, !dbg !6310
  store i32 %74, i32* %num_entries, align 4, !dbg !6311
  %75 = load i32, i32* %page_order, align 4, !dbg !6312
  %call46 = call i64 @__get_free_pages(i32 3264, i32 %75) #10, !dbg !6312
  %76 = inttoptr i64 %call46 to i8*, !dbg !6312
  store i8* %76, i8** %table, align 8, !dbg !6313
  br label %if.end47

if.end47:                                         ; preds = %if.else43, %do.end
  %77 = load i8*, i8** %table, align 8, !dbg !6314
  %cmp48 = icmp eq i8* %77, null, !dbg !6316
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !6317

if.then49:                                        ; preds = %if.end47
  store i32 -12, i32* %retval, align 4, !dbg !6318
  br label %return, !dbg !6318

if.end50:                                         ; preds = %if.end47
  %78 = load i8*, i8** %table, align 8, !dbg !6319
  %79 = load i32, i32* %page_order, align 4, !dbg !6320
  %shl = shl i32 1, %79, !dbg !6321
  %conv = sext i32 %shl to i64, !dbg !6322
  %mul = mul i64 4096, %conv, !dbg !6323
  %sub = sub i64 %mul, 1, !dbg !6324
  %add.ptr51 = getelementptr i8, i8* %78, i64 %sub, !dbg !6325
  store i8* %add.ptr51, i8** %table_end, align 8, !dbg !6326
  %80 = load i64, i64* @vmemmap_base, align 8, !dbg !6327
  %81 = inttoptr i64 %80 to %struct.page*, !dbg !6327
  %82 = load i8*, i8** %table, align 8, !dbg !6327
  %83 = ptrtoint i8* %82 to i64, !dbg !6327
  %call52 = call i64 @__phys_addr_nodebug(i64 %83) #10, !dbg !6327
  %shr = lshr i64 %call52, 12, !dbg !6327
  %add.ptr53 = getelementptr %struct.page, %struct.page* %81, i64 %shr, !dbg !6327
  store %struct.page* %add.ptr53, %struct.page** %page, align 8, !dbg !6328
  br label %for.cond, !dbg !6329

for.cond:                                         ; preds = %for.inc, %if.end50
  %84 = load %struct.page*, %struct.page** %page, align 8, !dbg !6330
  %85 = load i64, i64* @vmemmap_base, align 8, !dbg !6331
  %86 = inttoptr i64 %85 to %struct.page*, !dbg !6331
  %87 = load i8*, i8** %table_end, align 8, !dbg !6331
  %88 = ptrtoint i8* %87 to i64, !dbg !6331
  %call54 = call i64 @__phys_addr_nodebug(i64 %88) #10, !dbg !6331
  %shr55 = lshr i64 %call54, 12, !dbg !6331
  %add.ptr56 = getelementptr %struct.page, %struct.page* %86, i64 %shr55, !dbg !6331
  %cmp57 = icmp ule %struct.page* %84, %add.ptr56, !dbg !6332
  br i1 %cmp57, label %for.body, label %for.end, !dbg !6333

for.body:                                         ; preds = %for.cond
  %89 = load %struct.page*, %struct.page** %page, align 8, !dbg !6334
  store %struct.page* %89, %struct.page** %page.addr.i, align 8
  %90 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !6335
  store %struct.page* %90, %struct.page** %tmp1.i, align 8, !dbg !6335
  %91 = load %struct.page*, %struct.page** %tmp1.i, align 8, !dbg !6335
  store %struct.page* %91, %struct.page** %tmp.i, align 8, !dbg !6338
  %92 = load %struct.page*, %struct.page** %tmp.i, align 8, !dbg !6338
  %flags.i = getelementptr inbounds %struct.page, %struct.page* %92, i32 0, i32 0, !dbg !6179
  call void @set_bit(i64 12, i64* %flags.i) #11, !dbg !6179
  br label %for.inc, !dbg !6339

for.inc:                                          ; preds = %for.body
  %93 = load %struct.page*, %struct.page** %page, align 8, !dbg !6340
  %incdec.ptr = getelementptr %struct.page, %struct.page* %93, i32 1, !dbg !6340
  store %struct.page* %incdec.ptr, %struct.page** %page, align 8, !dbg !6340
  br label %for.cond, !dbg !6341, !llvm.loop !6342

for.end:                                          ; preds = %for.cond
  %94 = load i8*, i8** %table, align 8, !dbg !6344
  %95 = bitcast i8* %94 to i32*, !dbg !6345
  %96 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6346
  %gatt_table_real = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %96, i32 0, i32 8, !dbg !6347
  store i32* %95, i32** %gatt_table_real, align 8, !dbg !6348
  %97 = load i8*, i8** %table, align 8, !dbg !6349
  %98 = bitcast i8* %97 to i32*, !dbg !6350
  store i32* %98, i32** @agp_gatt_table, align 8, !dbg !6351
  %99 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6352
  %driver59 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %99, i32 0, i32 1, !dbg !6353
  %100 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver59, align 8, !dbg !6353
  %cache_flush = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %100, i32 0, i32 13, !dbg !6354
  %101 = load void ()*, void ()** %cache_flush, align 8, !dbg !6354
  call void %101() #10, !dbg !6352
  %102 = load i8*, i8** %table, align 8, !dbg !6355
  %103 = ptrtoint i8* %102 to i64, !dbg !6357
  %104 = load i32, i32* %page_order, align 4, !dbg !6358
  %shl60 = shl i32 1, %104, !dbg !6359
  %call61 = call i32 @set_memory_uc(i64 %103, i32 %shl60) #10, !dbg !6360
  %tobool62 = icmp ne i32 %call61, 0, !dbg !6360
  br i1 %tobool62, label %if.then63, label %if.end65, !dbg !6361

if.then63:                                        ; preds = %for.end
  %call64 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0)) #13, !dbg !6362
  br label %if.end65, !dbg !6362

if.end65:                                         ; preds = %if.then63, %for.end
  %105 = load i8*, i8** %table, align 8, !dbg !6363
  %106 = bitcast i8* %105 to i32*, !dbg !6364
  %107 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6365
  %gatt_table = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %107, i32 0, i32 7, !dbg !6366
  store i32* %106, i32** %gatt_table, align 8, !dbg !6367
  %108 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6368
  %gatt_table66 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %108, i32 0, i32 7, !dbg !6369
  %109 = load i32*, i32** %gatt_table66, align 8, !dbg !6369
  %cmp67 = icmp eq i32* %109, null, !dbg !6370
  br i1 %cmp67, label %if.then69, label %if.end83, !dbg !6371

if.then69:                                        ; preds = %if.end65
  %110 = load i64, i64* @vmemmap_base, align 8, !dbg !6372
  %111 = inttoptr i64 %110 to %struct.page*, !dbg !6372
  %112 = load i8*, i8** %table, align 8, !dbg !6372
  %113 = ptrtoint i8* %112 to i64, !dbg !6372
  %call70 = call i64 @__phys_addr_nodebug(i64 %113) #10, !dbg !6372
  %shr71 = lshr i64 %call70, 12, !dbg !6372
  %add.ptr72 = getelementptr %struct.page, %struct.page* %111, i64 %shr71, !dbg !6372
  store %struct.page* %add.ptr72, %struct.page** %page, align 8, !dbg !6373
  br label %for.cond73, !dbg !6374

for.cond73:                                       ; preds = %for.inc80, %if.then69
  %114 = load %struct.page*, %struct.page** %page, align 8, !dbg !6375
  %115 = load i64, i64* @vmemmap_base, align 8, !dbg !6376
  %116 = inttoptr i64 %115 to %struct.page*, !dbg !6376
  %117 = load i8*, i8** %table_end, align 8, !dbg !6376
  %118 = ptrtoint i8* %117 to i64, !dbg !6376
  %call74 = call i64 @__phys_addr_nodebug(i64 %118) #10, !dbg !6376
  %shr75 = lshr i64 %call74, 12, !dbg !6376
  %add.ptr76 = getelementptr %struct.page, %struct.page* %116, i64 %shr75, !dbg !6376
  %cmp77 = icmp ule %struct.page* %114, %add.ptr76, !dbg !6377
  br i1 %cmp77, label %for.body79, label %for.end82, !dbg !6378

for.body79:                                       ; preds = %for.cond73
  %119 = load %struct.page*, %struct.page** %page, align 8, !dbg !6379
  store %struct.page* %119, %struct.page** %page.addr.i101, align 8
  %120 = load %struct.page*, %struct.page** %page.addr.i101, align 8, !dbg !6380
  store %struct.page* %120, %struct.page** %tmp1.i103, align 8, !dbg !6380
  %121 = load %struct.page*, %struct.page** %tmp1.i103, align 8, !dbg !6380
  store %struct.page* %121, %struct.page** %tmp.i102, align 8, !dbg !6383
  %122 = load %struct.page*, %struct.page** %tmp.i102, align 8, !dbg !6383
  %flags.i104 = getelementptr inbounds %struct.page, %struct.page* %122, i32 0, i32 0, !dbg !6171
  call void @clear_bit(i64 12, i64* %flags.i104) #11, !dbg !6171
  br label %for.inc80, !dbg !6384

for.inc80:                                        ; preds = %for.body79
  %123 = load %struct.page*, %struct.page** %page, align 8, !dbg !6385
  %incdec.ptr81 = getelementptr %struct.page, %struct.page* %123, i32 1, !dbg !6385
  store %struct.page* %incdec.ptr81, %struct.page** %page, align 8, !dbg !6385
  br label %for.cond73, !dbg !6386, !llvm.loop !6387

for.end82:                                        ; preds = %for.cond73
  %124 = load i8*, i8** %table, align 8, !dbg !6389
  %125 = ptrtoint i8* %124 to i64, !dbg !6389
  %126 = load i32, i32* %page_order, align 4, !dbg !6389
  call void @free_pages(i64 %125, i32 %126) #10, !dbg !6389
  store i32 -12, i32* %retval, align 4, !dbg !6390
  br label %return, !dbg !6390

if.end83:                                         ; preds = %if.end65
  %127 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6391
  %gatt_table_real84 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %127, i32 0, i32 8, !dbg !6392
  %128 = load i32*, i32** %gatt_table_real84, align 8, !dbg !6392
  %129 = bitcast i32* %128 to i8*, !dbg !6391
  %call85 = call i64 @virt_to_phys(i8* %129) #10, !dbg !6393
  %130 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6394
  %gatt_bus_addr = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %130, i32 0, i32 13, !dbg !6395
  store i64 %call85, i64* %gatt_bus_addr, align 8, !dbg !6396
  store i32 0, i32* %i, align 4, !dbg !6397
  br label %for.cond86, !dbg !6399

for.cond86:                                       ; preds = %for.inc98, %if.end83
  %131 = load i32, i32* %i, align 4, !dbg !6400
  %132 = load i32, i32* %num_entries, align 4, !dbg !6402
  %cmp87 = icmp slt i32 %131, %132, !dbg !6403
  br i1 %cmp87, label %for.body89, label %for.end100, !dbg !6404

for.body89:                                       ; preds = %for.cond86
  %133 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6405
  %scratch_page = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %133, i32 0, i32 9, !dbg !6407
  %134 = load i64, i64* %scratch_page, align 8, !dbg !6407
  %conv90 = trunc i64 %134 to i32, !dbg !6405
  %135 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6408
  %gatt_table91 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %135, i32 0, i32 7, !dbg !6409
  %136 = load i32*, i32** %gatt_table91, align 8, !dbg !6409
  %137 = load i32, i32* %i, align 4, !dbg !6410
  %idx.ext92 = sext i32 %137 to i64, !dbg !6411
  %add.ptr93 = getelementptr i32, i32* %136, i64 %idx.ext92, !dbg !6411
  %138 = bitcast i32* %add.ptr93 to i8*, !dbg !6408
  call void @writel(i32 %conv90, i8* %138) #10, !dbg !6412
  %139 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6413
  %gatt_table94 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %139, i32 0, i32 7, !dbg !6414
  %140 = load i32*, i32** %gatt_table94, align 8, !dbg !6414
  %141 = load i32, i32* %i, align 4, !dbg !6415
  %idx.ext95 = sext i32 %141 to i64, !dbg !6416
  %add.ptr96 = getelementptr i32, i32* %140, i64 %idx.ext95, !dbg !6416
  %142 = bitcast i32* %add.ptr96 to i8*, !dbg !6413
  %call97 = call i32 @readl(i8* %142) #10, !dbg !6417
  br label %for.inc98, !dbg !6418

for.inc98:                                        ; preds = %for.body89
  %143 = load i32, i32* %i, align 4, !dbg !6419
  %inc99 = add i32 %143, 1, !dbg !6419
  store i32 %inc99, i32* %i, align 4, !dbg !6419
  br label %for.cond86, !dbg !6420, !llvm.loop !6421

for.end100:                                       ; preds = %for.cond86
  store i32 0, i32* %retval, align 4, !dbg !6423
  br label %return, !dbg !6423

return:                                           ; preds = %for.end100, %for.end82, %if.then49, %if.then
  %144 = load i32, i32* %retval, align 4, !dbg !6424
  ret i32 %144, !dbg !6424
}

; Function Attrs: noredzone
declare dso_local i64 @__get_free_pages(i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #0 !dbg !6425 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !6429, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.declare(metadata i64* %y, metadata !6431, metadata !DIExpression()), !dbg !6432
  %0 = load i64, i64* %x.addr, align 8, !dbg !6433
  %sub = sub i64 %0, -2147483648, !dbg !6434
  store i64 %sub, i64* %y, align 8, !dbg !6432
  %1 = load i64, i64* %y, align 8, !dbg !6435
  %2 = load i64, i64* %x.addr, align 8, !dbg !6436
  %3 = load i64, i64* %y, align 8, !dbg !6437
  %cmp = icmp ugt i64 %2, %3, !dbg !6438
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6439

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !6440
  br label %cond.end, !dbg !6439

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !6441
  %sub1 = sub i64 -2147483648, %5, !dbg !6442
  br label %cond.end, !dbg !6439

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !6439
  %add = add i64 %1, %cond, !dbg !6443
  store i64 %add, i64* %x.addr, align 8, !dbg !6444
  %6 = load i64, i64* %x.addr, align 8, !dbg !6445
  ret i64 %6, !dbg !6446
}

; Function Attrs: noredzone
declare dso_local i32 @set_memory_uc(i64, i32) #2

; Function Attrs: noredzone
declare dso_local void @free_pages(i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @virt_to_phys(i8* %address) #0 !dbg !6447 {
entry:
  %address.addr = alloca i8*, align 8
  store i8* %address, i8** %address.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %address.addr, metadata !6452, metadata !DIExpression()), !dbg !6453
  %0 = load i8*, i8** %address.addr, align 8, !dbg !6454
  %1 = ptrtoint i8* %0 to i64, !dbg !6454
  %call = call i64 @__phys_addr_nodebug(i64 %1) #10, !dbg !6454
  ret i64 %call, !dbg !6455
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #0 !dbg !6456 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !6459, metadata !DIExpression()), !dbg !6460
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6461, metadata !DIExpression()), !dbg !6460
  %0 = load i32, i32* %val.addr, align 4, !dbg !6460
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !6460
  %2 = bitcast i8* %1 to i32*, !dbg !6460
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #9, !dbg !6460, !srcloc !6462
  ret void, !dbg !6460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #0 !dbg !6463 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !6466, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6468, metadata !DIExpression()), !dbg !6467
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !6467
  %1 = bitcast i8* %0 to i32*, !dbg !6467
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #9, !dbg !6467, !srcloc !6469
  store i32 %2, i32* %ret, align 4, !dbg !6467
  %3 = load i32, i32* %ret, align 4, !dbg !6467
  ret i32 %3, !dbg !6467
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @agp_generic_free_gatt_table(%struct.agp_bridge_data* %bridge) #0 !dbg !6470 {
entry:
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !6169, metadata !DIExpression()), !dbg !6471
  %tmp.i = alloca %struct.page*, align 8
  %tmp1.i = alloca %struct.page*, align 8
  %retval = alloca i32, align 4
  %bridge.addr = alloca %struct.agp_bridge_data*, align 8
  %page_order = alloca i32, align 4
  %table = alloca i8*, align 8
  %table_end = alloca i8*, align 8
  %temp = alloca i8*, align 8
  %page = alloca %struct.page*, align 8
  store %struct.agp_bridge_data* %bridge, %struct.agp_bridge_data** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_bridge_data** %bridge.addr, metadata !6475, metadata !DIExpression()), !dbg !6476
  call void @llvm.dbg.declare(metadata i32* %page_order, metadata !6477, metadata !DIExpression()), !dbg !6478
  call void @llvm.dbg.declare(metadata i8** %table, metadata !6479, metadata !DIExpression()), !dbg !6480
  call void @llvm.dbg.declare(metadata i8** %table_end, metadata !6481, metadata !DIExpression()), !dbg !6482
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !6483, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !6485, metadata !DIExpression()), !dbg !6486
  %0 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6487
  %current_size = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %0, i32 0, i32 4, !dbg !6488
  %1 = load i8*, i8** %current_size, align 8, !dbg !6488
  store i8* %1, i8** %temp, align 8, !dbg !6489
  %2 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6490
  %driver = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %2, i32 0, i32 1, !dbg !6491
  %3 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver, align 8, !dbg !6491
  %size_type = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %3, i32 0, i32 3, !dbg !6492
  %4 = load i32, i32* %size_type, align 4, !dbg !6492
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb4
    i32 4, label %sw.bb6
    i32 3, label %sw.bb8
  ], !dbg !6493

sw.bb:                                            ; preds = %entry
  %5 = load i8*, i8** %temp, align 8, !dbg !6494
  %6 = bitcast i8* %5 to %struct.aper_size_info_8*, !dbg !6494
  %page_order1 = getelementptr inbounds %struct.aper_size_info_8, %struct.aper_size_info_8* %6, i32 0, i32 2, !dbg !6496
  %7 = load i32, i32* %page_order1, align 4, !dbg !6496
  store i32 %7, i32* %page_order, align 4, !dbg !6497
  br label %sw.epilog, !dbg !6498

sw.bb2:                                           ; preds = %entry
  %8 = load i8*, i8** %temp, align 8, !dbg !6499
  %9 = bitcast i8* %8 to %struct.aper_size_info_16*, !dbg !6499
  %page_order3 = getelementptr inbounds %struct.aper_size_info_16, %struct.aper_size_info_16* %9, i32 0, i32 2, !dbg !6500
  %10 = load i32, i32* %page_order3, align 4, !dbg !6500
  store i32 %10, i32* %page_order, align 4, !dbg !6501
  br label %sw.epilog, !dbg !6502

sw.bb4:                                           ; preds = %entry
  %11 = load i8*, i8** %temp, align 8, !dbg !6503
  %12 = bitcast i8* %11 to %struct.aper_size_info_32*, !dbg !6503
  %page_order5 = getelementptr inbounds %struct.aper_size_info_32, %struct.aper_size_info_32* %12, i32 0, i32 2, !dbg !6504
  %13 = load i32, i32* %page_order5, align 4, !dbg !6504
  store i32 %13, i32* %page_order, align 4, !dbg !6505
  br label %sw.epilog, !dbg !6506

sw.bb6:                                           ; preds = %entry
  %14 = load i8*, i8** %temp, align 8, !dbg !6507
  %15 = bitcast i8* %14 to %struct.aper_size_info_fixed*, !dbg !6507
  %page_order7 = getelementptr inbounds %struct.aper_size_info_fixed, %struct.aper_size_info_fixed* %15, i32 0, i32 2, !dbg !6508
  %16 = load i32, i32* %page_order7, align 4, !dbg !6508
  store i32 %16, i32* %page_order, align 4, !dbg !6509
  br label %sw.epilog, !dbg !6510

sw.bb8:                                           ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6511
  br label %return, !dbg !6511

sw.default:                                       ; preds = %entry
  store i32 0, i32* %page_order, align 4, !dbg !6512
  br label %sw.epilog, !dbg !6513

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb
  %17 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6514
  %gatt_table = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %17, i32 0, i32 7, !dbg !6515
  %18 = load i32*, i32** %gatt_table, align 8, !dbg !6515
  %19 = ptrtoint i32* %18 to i64, !dbg !6516
  %20 = load i32, i32* %page_order, align 4, !dbg !6517
  %shl = shl i32 1, %20, !dbg !6518
  %call = call i32 @set_memory_wb(i64 %19, i32 %shl) #10, !dbg !6519
  %21 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6520
  %gatt_table_real = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %21, i32 0, i32 8, !dbg !6521
  %22 = load i32*, i32** %gatt_table_real, align 8, !dbg !6521
  %23 = bitcast i32* %22 to i8*, !dbg !6522
  store i8* %23, i8** %table, align 8, !dbg !6523
  %24 = load i8*, i8** %table, align 8, !dbg !6524
  %25 = load i32, i32* %page_order, align 4, !dbg !6525
  %shl9 = shl i32 1, %25, !dbg !6526
  %conv = sext i32 %shl9 to i64, !dbg !6527
  %mul = mul i64 4096, %conv, !dbg !6528
  %sub = sub i64 %mul, 1, !dbg !6529
  %add.ptr = getelementptr i8, i8* %24, i64 %sub, !dbg !6530
  store i8* %add.ptr, i8** %table_end, align 8, !dbg !6531
  %26 = load i64, i64* @vmemmap_base, align 8, !dbg !6532
  %27 = inttoptr i64 %26 to %struct.page*, !dbg !6532
  %28 = load i8*, i8** %table, align 8, !dbg !6532
  %29 = ptrtoint i8* %28 to i64, !dbg !6532
  %call10 = call i64 @__phys_addr_nodebug(i64 %29) #10, !dbg !6532
  %shr = lshr i64 %call10, 12, !dbg !6532
  %add.ptr11 = getelementptr %struct.page, %struct.page* %27, i64 %shr, !dbg !6532
  store %struct.page* %add.ptr11, %struct.page** %page, align 8, !dbg !6533
  br label %for.cond, !dbg !6534

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %30 = load %struct.page*, %struct.page** %page, align 8, !dbg !6535
  %31 = load i64, i64* @vmemmap_base, align 8, !dbg !6536
  %32 = inttoptr i64 %31 to %struct.page*, !dbg !6536
  %33 = load i8*, i8** %table_end, align 8, !dbg !6536
  %34 = ptrtoint i8* %33 to i64, !dbg !6536
  %call12 = call i64 @__phys_addr_nodebug(i64 %34) #10, !dbg !6536
  %shr13 = lshr i64 %call12, 12, !dbg !6536
  %add.ptr14 = getelementptr %struct.page, %struct.page* %32, i64 %shr13, !dbg !6536
  %cmp = icmp ule %struct.page* %30, %add.ptr14, !dbg !6537
  br i1 %cmp, label %for.body, label %for.end, !dbg !6538

for.body:                                         ; preds = %for.cond
  %35 = load %struct.page*, %struct.page** %page, align 8, !dbg !6539
  store %struct.page* %35, %struct.page** %page.addr.i, align 8
  %36 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !6540
  store %struct.page* %36, %struct.page** %tmp1.i, align 8, !dbg !6540
  %37 = load %struct.page*, %struct.page** %tmp1.i, align 8, !dbg !6540
  store %struct.page* %37, %struct.page** %tmp.i, align 8, !dbg !6541
  %38 = load %struct.page*, %struct.page** %tmp.i, align 8, !dbg !6541
  %flags.i = getelementptr inbounds %struct.page, %struct.page* %38, i32 0, i32 0, !dbg !6471
  call void @clear_bit(i64 12, i64* %flags.i) #11, !dbg !6471
  br label %for.inc, !dbg !6542

for.inc:                                          ; preds = %for.body
  %39 = load %struct.page*, %struct.page** %page, align 8, !dbg !6543
  %incdec.ptr = getelementptr %struct.page, %struct.page* %39, i32 1, !dbg !6543
  store %struct.page* %incdec.ptr, %struct.page** %page, align 8, !dbg !6543
  br label %for.cond, !dbg !6544, !llvm.loop !6545

for.end:                                          ; preds = %for.cond
  %40 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6547
  %gatt_table_real16 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %40, i32 0, i32 8, !dbg !6547
  %41 = load i32*, i32** %gatt_table_real16, align 8, !dbg !6547
  %42 = ptrtoint i32* %41 to i64, !dbg !6547
  %43 = load i32, i32* %page_order, align 4, !dbg !6547
  call void @free_pages(i64 %42, i32 %43) #10, !dbg !6547
  store i32* null, i32** @agp_gatt_table, align 8, !dbg !6548
  %44 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6549
  %gatt_table17 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %44, i32 0, i32 7, !dbg !6550
  store i32* null, i32** %gatt_table17, align 8, !dbg !6551
  %45 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6552
  %gatt_table_real18 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %45, i32 0, i32 8, !dbg !6553
  store i32* null, i32** %gatt_table_real18, align 8, !dbg !6554
  %46 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !6555
  %gatt_bus_addr = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %46, i32 0, i32 13, !dbg !6556
  store i64 0, i64* %gatt_bus_addr, align 8, !dbg !6557
  store i32 0, i32* %retval, align 4, !dbg !6558
  br label %return, !dbg !6558

return:                                           ; preds = %for.end, %sw.bb8
  %47 = load i32, i32* %retval, align 4, !dbg !6559
  ret i32 %47, !dbg !6559
}

; Function Attrs: noredzone
declare dso_local i32 @set_memory_wb(i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @agp_generic_insert_memory(%struct.agp_memory* %mem, i64 %pg_start, i32 %type) #0 !dbg !6560 {
entry:
  %retval = alloca i32, align 4
  %mem.addr = alloca %struct.agp_memory*, align 8
  %pg_start.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  %num_entries = alloca i32, align 4
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %temp = alloca i8*, align 8
  %bridge = alloca %struct.agp_bridge_data*, align 8
  %mask_type = alloca i32, align 4
  store %struct.agp_memory* %mem, %struct.agp_memory** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_memory** %mem.addr, metadata !6561, metadata !DIExpression()), !dbg !6562
  store i64 %pg_start, i64* %pg_start.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pg_start.addr, metadata !6563, metadata !DIExpression()), !dbg !6564
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6565, metadata !DIExpression()), !dbg !6566
  call void @llvm.dbg.declare(metadata i32* %num_entries, metadata !6567, metadata !DIExpression()), !dbg !6568
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6569, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.declare(metadata i64* %j, metadata !6571, metadata !DIExpression()), !dbg !6572
  call void @llvm.dbg.declare(metadata i8** %temp, metadata !6573, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.declare(metadata %struct.agp_bridge_data** %bridge, metadata !6575, metadata !DIExpression()), !dbg !6576
  call void @llvm.dbg.declare(metadata i32* %mask_type, metadata !6577, metadata !DIExpression()), !dbg !6578
  %0 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6579
  %bridge1 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %0, i32 0, i32 2, !dbg !6580
  %1 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge1, align 8, !dbg !6580
  store %struct.agp_bridge_data* %1, %struct.agp_bridge_data** %bridge, align 8, !dbg !6581
  %2 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6582
  %tobool = icmp ne %struct.agp_bridge_data* %2, null, !dbg !6582
  br i1 %tobool, label %if.end, label %if.then, !dbg !6584

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6585
  br label %return, !dbg !6585

if.end:                                           ; preds = %entry
  %3 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6586
  %page_count = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %3, i32 0, i32 4, !dbg !6588
  %4 = load i64, i64* %page_count, align 8, !dbg !6588
  %cmp = icmp eq i64 %4, 0, !dbg !6589
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6590

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6591
  br label %return, !dbg !6591

if.end3:                                          ; preds = %if.end
  %5 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6592
  %current_size = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %5, i32 0, i32 4, !dbg !6593
  %6 = load i8*, i8** %current_size, align 8, !dbg !6593
  store i8* %6, i8** %temp, align 8, !dbg !6594
  %7 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6595
  %driver = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %7, i32 0, i32 1, !dbg !6596
  %8 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver, align 8, !dbg !6596
  %size_type = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %8, i32 0, i32 3, !dbg !6597
  %9 = load i32, i32* %size_type, align 4, !dbg !6597
  switch i32 %9, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb5
    i32 2, label %sw.bb7
    i32 4, label %sw.bb9
    i32 3, label %sw.bb11
  ], !dbg !6598

sw.bb:                                            ; preds = %if.end3
  %10 = load i8*, i8** %temp, align 8, !dbg !6599
  %11 = bitcast i8* %10 to %struct.aper_size_info_8*, !dbg !6599
  %num_entries4 = getelementptr inbounds %struct.aper_size_info_8, %struct.aper_size_info_8* %11, i32 0, i32 1, !dbg !6601
  %12 = load i32, i32* %num_entries4, align 4, !dbg !6601
  store i32 %12, i32* %num_entries, align 4, !dbg !6602
  br label %sw.epilog, !dbg !6603

sw.bb5:                                           ; preds = %if.end3
  %13 = load i8*, i8** %temp, align 8, !dbg !6604
  %14 = bitcast i8* %13 to %struct.aper_size_info_16*, !dbg !6604
  %num_entries6 = getelementptr inbounds %struct.aper_size_info_16, %struct.aper_size_info_16* %14, i32 0, i32 1, !dbg !6605
  %15 = load i32, i32* %num_entries6, align 4, !dbg !6605
  store i32 %15, i32* %num_entries, align 4, !dbg !6606
  br label %sw.epilog, !dbg !6607

sw.bb7:                                           ; preds = %if.end3
  %16 = load i8*, i8** %temp, align 8, !dbg !6608
  %17 = bitcast i8* %16 to %struct.aper_size_info_32*, !dbg !6608
  %num_entries8 = getelementptr inbounds %struct.aper_size_info_32, %struct.aper_size_info_32* %17, i32 0, i32 1, !dbg !6609
  %18 = load i32, i32* %num_entries8, align 4, !dbg !6609
  store i32 %18, i32* %num_entries, align 4, !dbg !6610
  br label %sw.epilog, !dbg !6611

sw.bb9:                                           ; preds = %if.end3
  %19 = load i8*, i8** %temp, align 8, !dbg !6612
  %20 = bitcast i8* %19 to %struct.aper_size_info_fixed*, !dbg !6612
  %num_entries10 = getelementptr inbounds %struct.aper_size_info_fixed, %struct.aper_size_info_fixed* %20, i32 0, i32 1, !dbg !6613
  %21 = load i32, i32* %num_entries10, align 4, !dbg !6613
  store i32 %21, i32* %num_entries, align 4, !dbg !6614
  br label %sw.epilog, !dbg !6615

sw.bb11:                                          ; preds = %if.end3
  store i32 -22, i32* %retval, align 4, !dbg !6616
  br label %return, !dbg !6616

sw.default:                                       ; preds = %if.end3
  store i32 0, i32* %num_entries, align 4, !dbg !6617
  br label %sw.epilog, !dbg !6618

sw.epilog:                                        ; preds = %sw.default, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb
  %22 = load i32, i32* @agp_memory_reserved, align 4, !dbg !6619
  %conv = sext i32 %22 to i64, !dbg !6619
  %div = udiv i64 %conv, 4096, !dbg !6620
  %23 = load i32, i32* %num_entries, align 4, !dbg !6621
  %conv12 = sext i32 %23 to i64, !dbg !6621
  %sub = sub i64 %conv12, %div, !dbg !6621
  %conv13 = trunc i64 %sub to i32, !dbg !6621
  store i32 %conv13, i32* %num_entries, align 4, !dbg !6621
  %24 = load i32, i32* %num_entries, align 4, !dbg !6622
  %cmp14 = icmp slt i32 %24, 0, !dbg !6624
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !6625

if.then16:                                        ; preds = %sw.epilog
  store i32 0, i32* %num_entries, align 4, !dbg !6626
  br label %if.end17, !dbg !6627

if.end17:                                         ; preds = %if.then16, %sw.epilog
  %25 = load i32, i32* %type.addr, align 4, !dbg !6628
  %26 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6630
  %type18 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %26, i32 0, i32 8, !dbg !6631
  %27 = load i32, i32* %type18, align 8, !dbg !6631
  %cmp19 = icmp ne i32 %25, %27, !dbg !6632
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !6633

if.then21:                                        ; preds = %if.end17
  store i32 -22, i32* %retval, align 4, !dbg !6634
  br label %return, !dbg !6634

if.end22:                                         ; preds = %if.end17
  %28 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6635
  %driver23 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %28, i32 0, i32 1, !dbg !6636
  %29 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver23, align 8, !dbg !6636
  %agp_type_to_mask_type = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %29, i32 0, i32 24, !dbg !6637
  %30 = load i32 (%struct.agp_bridge_data*, i32)*, i32 (%struct.agp_bridge_data*, i32)** %agp_type_to_mask_type, align 8, !dbg !6637
  %31 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6638
  %32 = load i32, i32* %type.addr, align 4, !dbg !6639
  %call = call i32 %30(%struct.agp_bridge_data* %31, i32 %32) #10, !dbg !6635
  store i32 %call, i32* %mask_type, align 4, !dbg !6640
  %33 = load i32, i32* %mask_type, align 4, !dbg !6641
  %cmp24 = icmp ne i32 %33, 0, !dbg !6643
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !6644

if.then26:                                        ; preds = %if.end22
  store i32 -22, i32* %retval, align 4, !dbg !6645
  br label %return, !dbg !6645

if.end27:                                         ; preds = %if.end22
  %34 = load i64, i64* %pg_start.addr, align 8, !dbg !6647
  %35 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6649
  %page_count28 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %35, i32 0, i32 4, !dbg !6650
  %36 = load i64, i64* %page_count28, align 8, !dbg !6650
  %add = add i64 %34, %36, !dbg !6651
  %37 = load i32, i32* %num_entries, align 4, !dbg !6652
  %conv29 = sext i32 %37 to i64, !dbg !6652
  %cmp30 = icmp ugt i64 %add, %conv29, !dbg !6653
  br i1 %cmp30, label %if.then36, label %lor.lhs.false, !dbg !6654

lor.lhs.false:                                    ; preds = %if.end27
  %38 = load i64, i64* %pg_start.addr, align 8, !dbg !6655
  %39 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6656
  %page_count32 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %39, i32 0, i32 4, !dbg !6657
  %40 = load i64, i64* %page_count32, align 8, !dbg !6657
  %add33 = add i64 %38, %40, !dbg !6658
  %41 = load i64, i64* %pg_start.addr, align 8, !dbg !6659
  %cmp34 = icmp ult i64 %add33, %41, !dbg !6660
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !6661

if.then36:                                        ; preds = %lor.lhs.false, %if.end27
  store i32 -22, i32* %retval, align 4, !dbg !6662
  br label %return, !dbg !6662

if.end37:                                         ; preds = %lor.lhs.false
  %42 = load i64, i64* %pg_start.addr, align 8, !dbg !6663
  store i64 %42, i64* %j, align 8, !dbg !6664
  br label %while.cond, !dbg !6665

while.cond:                                       ; preds = %if.end52, %if.end37
  %43 = load i64, i64* %j, align 8, !dbg !6666
  %44 = load i64, i64* %pg_start.addr, align 8, !dbg !6667
  %45 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6668
  %page_count38 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %45, i32 0, i32 4, !dbg !6669
  %46 = load i64, i64* %page_count38, align 8, !dbg !6669
  %add39 = add i64 %44, %46, !dbg !6670
  %cmp40 = icmp ult i64 %43, %add39, !dbg !6671
  br i1 %cmp40, label %while.body, label %while.end, !dbg !6665

while.body:                                       ; preds = %while.cond
  %47 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6672
  %gatt_table = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %47, i32 0, i32 7, !dbg !6672
  %48 = load i32*, i32** %gatt_table, align 8, !dbg !6672
  %49 = load i64, i64* %j, align 8, !dbg !6672
  %add.ptr = getelementptr i32, i32* %48, i64 %49, !dbg !6672
  %50 = bitcast i32* %add.ptr to i8*, !dbg !6672
  %call42 = call i32 @readl(i8* %50) #10, !dbg !6672
  %tobool43 = icmp ne i32 %call42, 0, !dbg !6672
  br i1 %tobool43, label %lor.lhs.false44, label %if.end52, !dbg !6672

lor.lhs.false44:                                  ; preds = %while.body
  %51 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6672
  %gatt_table45 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %51, i32 0, i32 7, !dbg !6672
  %52 = load i32*, i32** %gatt_table45, align 8, !dbg !6672
  %53 = load i64, i64* %j, align 8, !dbg !6672
  %add.ptr46 = getelementptr i32, i32* %52, i64 %53, !dbg !6672
  %54 = bitcast i32* %add.ptr46 to i8*, !dbg !6672
  %call47 = call i32 @readl(i8* %54) #10, !dbg !6672
  %conv48 = zext i32 %call47 to i64, !dbg !6672
  %55 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6672
  %scratch_page = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %55, i32 0, i32 9, !dbg !6672
  %56 = load i64, i64* %scratch_page, align 8, !dbg !6672
  %cmp49 = icmp eq i64 %conv48, %56, !dbg !6672
  br i1 %cmp49, label %if.end52, label %if.then51, !dbg !6675

if.then51:                                        ; preds = %lor.lhs.false44
  store i32 -16, i32* %retval, align 4, !dbg !6676
  br label %return, !dbg !6676

if.end52:                                         ; preds = %lor.lhs.false44, %while.body
  %57 = load i64, i64* %j, align 8, !dbg !6677
  %inc = add i64 %57, 1, !dbg !6677
  store i64 %inc, i64* %j, align 8, !dbg !6677
  br label %while.cond, !dbg !6665, !llvm.loop !6678

while.end:                                        ; preds = %while.cond
  %58 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6680
  %is_flushed = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %58, i32 0, i32 11, !dbg !6682
  %59 = load i8, i8* %is_flushed, align 1, !dbg !6682
  %tobool53 = trunc i8 %59 to i1, !dbg !6682
  br i1 %tobool53, label %if.end57, label %if.then54, !dbg !6683

if.then54:                                        ; preds = %while.end
  %60 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6684
  %driver55 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %60, i32 0, i32 1, !dbg !6686
  %61 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver55, align 8, !dbg !6686
  %cache_flush = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %61, i32 0, i32 13, !dbg !6687
  %62 = load void ()*, void ()** %cache_flush, align 8, !dbg !6687
  call void %62() #10, !dbg !6684
  %63 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6688
  %is_flushed56 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %63, i32 0, i32 11, !dbg !6689
  store i8 1, i8* %is_flushed56, align 1, !dbg !6690
  br label %if.end57, !dbg !6691

if.end57:                                         ; preds = %if.then54, %while.end
  store i64 0, i64* %i, align 8, !dbg !6692
  %64 = load i64, i64* %pg_start.addr, align 8, !dbg !6694
  store i64 %64, i64* %j, align 8, !dbg !6695
  br label %for.cond, !dbg !6696

for.cond:                                         ; preds = %for.inc, %if.end57
  %65 = load i64, i64* %i, align 8, !dbg !6697
  %66 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6699
  %page_count58 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %66, i32 0, i32 4, !dbg !6700
  %67 = load i64, i64* %page_count58, align 8, !dbg !6700
  %cmp59 = icmp ult i64 %65, %67, !dbg !6701
  br i1 %cmp59, label %for.body, label %for.end, !dbg !6702

for.body:                                         ; preds = %for.cond
  %68 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6703
  %driver61 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %68, i32 0, i32 1, !dbg !6705
  %69 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver61, align 8, !dbg !6705
  %mask_memory = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %69, i32 0, i32 12, !dbg !6706
  %70 = load i64 (%struct.agp_bridge_data*, i64, i32)*, i64 (%struct.agp_bridge_data*, i64, i32)** %mask_memory, align 8, !dbg !6706
  %71 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6707
  %72 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6708
  %pages = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %72, i32 0, i32 3, !dbg !6708
  %73 = load %struct.page**, %struct.page*** %pages, align 8, !dbg !6708
  %74 = load i64, i64* %i, align 8, !dbg !6708
  %arrayidx = getelementptr %struct.page*, %struct.page** %73, i64 %74, !dbg !6708
  %75 = load %struct.page*, %struct.page** %arrayidx, align 8, !dbg !6708
  %76 = load i64, i64* @vmemmap_base, align 8, !dbg !6708
  %77 = inttoptr i64 %76 to %struct.page*, !dbg !6708
  %sub.ptr.lhs.cast = ptrtoint %struct.page* %75 to i64, !dbg !6708
  %sub.ptr.rhs.cast = ptrtoint %struct.page* %77 to i64, !dbg !6708
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6708
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64, !dbg !6708
  %shl = shl i64 %sub.ptr.div, 12, !dbg !6708
  %78 = load i32, i32* %mask_type, align 4, !dbg !6709
  %call62 = call i64 %70(%struct.agp_bridge_data* %71, i64 %shl, i32 %78) #10, !dbg !6703
  %conv63 = trunc i64 %call62 to i32, !dbg !6703
  %79 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6710
  %gatt_table64 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %79, i32 0, i32 7, !dbg !6711
  %80 = load i32*, i32** %gatt_table64, align 8, !dbg !6711
  %81 = load i64, i64* %j, align 8, !dbg !6712
  %add.ptr65 = getelementptr i32, i32* %80, i64 %81, !dbg !6713
  %82 = bitcast i32* %add.ptr65 to i8*, !dbg !6710
  call void @writel(i32 %conv63, i8* %82) #10, !dbg !6714
  br label %for.inc, !dbg !6715

for.inc:                                          ; preds = %for.body
  %83 = load i64, i64* %i, align 8, !dbg !6716
  %inc66 = add i64 %83, 1, !dbg !6716
  store i64 %inc66, i64* %i, align 8, !dbg !6716
  %84 = load i64, i64* %j, align 8, !dbg !6717
  %inc67 = add i64 %84, 1, !dbg !6717
  store i64 %inc67, i64* %j, align 8, !dbg !6717
  br label %for.cond, !dbg !6718, !llvm.loop !6719

for.end:                                          ; preds = %for.cond
  %85 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6721
  %gatt_table68 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %85, i32 0, i32 7, !dbg !6722
  %86 = load i32*, i32** %gatt_table68, align 8, !dbg !6722
  %87 = load i64, i64* %j, align 8, !dbg !6723
  %add.ptr69 = getelementptr i32, i32* %86, i64 %87, !dbg !6724
  %add.ptr70 = getelementptr i32, i32* %add.ptr69, i64 -1, !dbg !6725
  %88 = bitcast i32* %add.ptr70 to i8*, !dbg !6721
  %call71 = call i32 @readl(i8* %88) #10, !dbg !6726
  %89 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6727
  %driver72 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %89, i32 0, i32 1, !dbg !6728
  %90 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver72, align 8, !dbg !6728
  %tlb_flush = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %90, i32 0, i32 11, !dbg !6729
  %91 = load void (%struct.agp_memory*)*, void (%struct.agp_memory*)** %tlb_flush, align 8, !dbg !6729
  %92 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6730
  call void %91(%struct.agp_memory* %92) #10, !dbg !6727
  store i32 0, i32* %retval, align 4, !dbg !6731
  br label %return, !dbg !6731

return:                                           ; preds = %for.end, %if.then51, %if.then36, %if.then26, %if.then21, %sw.bb11, %if.then2, %if.then
  %93 = load i32, i32* %retval, align 4, !dbg !6732
  ret i32 %93, !dbg !6732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @agp_generic_remove_memory(%struct.agp_memory* %mem, i64 %pg_start, i32 %type) #0 !dbg !6733 {
entry:
  %retval = alloca i32, align 4
  %mem.addr = alloca %struct.agp_memory*, align 8
  %pg_start.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  %i = alloca i64, align 8
  %bridge = alloca %struct.agp_bridge_data*, align 8
  %mask_type = alloca i32, align 4
  %num_entries = alloca i32, align 4
  store %struct.agp_memory* %mem, %struct.agp_memory** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_memory** %mem.addr, metadata !6734, metadata !DIExpression()), !dbg !6735
  store i64 %pg_start, i64* %pg_start.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pg_start.addr, metadata !6736, metadata !DIExpression()), !dbg !6737
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6738, metadata !DIExpression()), !dbg !6739
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6740, metadata !DIExpression()), !dbg !6741
  call void @llvm.dbg.declare(metadata %struct.agp_bridge_data** %bridge, metadata !6742, metadata !DIExpression()), !dbg !6743
  call void @llvm.dbg.declare(metadata i32* %mask_type, metadata !6744, metadata !DIExpression()), !dbg !6745
  call void @llvm.dbg.declare(metadata i32* %num_entries, metadata !6746, metadata !DIExpression()), !dbg !6747
  %0 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6748
  %bridge1 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %0, i32 0, i32 2, !dbg !6749
  %1 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge1, align 8, !dbg !6749
  store %struct.agp_bridge_data* %1, %struct.agp_bridge_data** %bridge, align 8, !dbg !6750
  %2 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6751
  %tobool = icmp ne %struct.agp_bridge_data* %2, null, !dbg !6751
  br i1 %tobool, label %if.end, label %if.then, !dbg !6753

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6754
  br label %return, !dbg !6754

if.end:                                           ; preds = %entry
  %3 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6755
  %page_count = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %3, i32 0, i32 4, !dbg !6757
  %4 = load i64, i64* %page_count, align 8, !dbg !6757
  %cmp = icmp eq i64 %4, 0, !dbg !6758
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6759

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6760
  br label %return, !dbg !6760

if.end3:                                          ; preds = %if.end
  %5 = load i32, i32* %type.addr, align 4, !dbg !6761
  %6 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6763
  %type4 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %6, i32 0, i32 8, !dbg !6764
  %7 = load i32, i32* %type4, align 8, !dbg !6764
  %cmp5 = icmp ne i32 %5, %7, !dbg !6765
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6766

if.then6:                                         ; preds = %if.end3
  store i32 -22, i32* %retval, align 4, !dbg !6767
  br label %return, !dbg !6767

if.end7:                                          ; preds = %if.end3
  %call = call i32 @agp_num_entries() #10, !dbg !6768
  store i32 %call, i32* %num_entries, align 4, !dbg !6769
  %8 = load i64, i64* %pg_start.addr, align 8, !dbg !6770
  %9 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6772
  %page_count8 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %9, i32 0, i32 4, !dbg !6773
  %10 = load i64, i64* %page_count8, align 8, !dbg !6773
  %add = add i64 %8, %10, !dbg !6774
  %11 = load i32, i32* %num_entries, align 4, !dbg !6775
  %conv = sext i32 %11 to i64, !dbg !6775
  %cmp9 = icmp ugt i64 %add, %conv, !dbg !6776
  br i1 %cmp9, label %if.then15, label %lor.lhs.false, !dbg !6777

lor.lhs.false:                                    ; preds = %if.end7
  %12 = load i64, i64* %pg_start.addr, align 8, !dbg !6778
  %13 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6779
  %page_count11 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %13, i32 0, i32 4, !dbg !6780
  %14 = load i64, i64* %page_count11, align 8, !dbg !6780
  %add12 = add i64 %12, %14, !dbg !6781
  %15 = load i64, i64* %pg_start.addr, align 8, !dbg !6782
  %cmp13 = icmp ult i64 %add12, %15, !dbg !6783
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !6784

if.then15:                                        ; preds = %lor.lhs.false, %if.end7
  store i32 -22, i32* %retval, align 4, !dbg !6785
  br label %return, !dbg !6785

if.end16:                                         ; preds = %lor.lhs.false
  %16 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6786
  %driver = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %16, i32 0, i32 1, !dbg !6787
  %17 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver, align 8, !dbg !6787
  %agp_type_to_mask_type = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %17, i32 0, i32 24, !dbg !6788
  %18 = load i32 (%struct.agp_bridge_data*, i32)*, i32 (%struct.agp_bridge_data*, i32)** %agp_type_to_mask_type, align 8, !dbg !6788
  %19 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6789
  %20 = load i32, i32* %type.addr, align 4, !dbg !6790
  %call17 = call i32 %18(%struct.agp_bridge_data* %19, i32 %20) #10, !dbg !6786
  store i32 %call17, i32* %mask_type, align 4, !dbg !6791
  %21 = load i32, i32* %mask_type, align 4, !dbg !6792
  %cmp18 = icmp ne i32 %21, 0, !dbg !6794
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !6795

if.then20:                                        ; preds = %if.end16
  store i32 -22, i32* %retval, align 4, !dbg !6796
  br label %return, !dbg !6796

if.end21:                                         ; preds = %if.end16
  %22 = load i64, i64* %pg_start.addr, align 8, !dbg !6798
  store i64 %22, i64* %i, align 8, !dbg !6800
  br label %for.cond, !dbg !6801

for.cond:                                         ; preds = %for.inc, %if.end21
  %23 = load i64, i64* %i, align 8, !dbg !6802
  %24 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6804
  %page_count22 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %24, i32 0, i32 4, !dbg !6805
  %25 = load i64, i64* %page_count22, align 8, !dbg !6805
  %26 = load i64, i64* %pg_start.addr, align 8, !dbg !6806
  %add23 = add i64 %25, %26, !dbg !6807
  %cmp24 = icmp ult i64 %23, %add23, !dbg !6808
  br i1 %cmp24, label %for.body, label %for.end, !dbg !6809

for.body:                                         ; preds = %for.cond
  %27 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6810
  %scratch_page = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %27, i32 0, i32 9, !dbg !6812
  %28 = load i64, i64* %scratch_page, align 8, !dbg !6812
  %conv26 = trunc i64 %28 to i32, !dbg !6810
  %29 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6813
  %gatt_table = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %29, i32 0, i32 7, !dbg !6814
  %30 = load i32*, i32** %gatt_table, align 8, !dbg !6814
  %31 = load i64, i64* %i, align 8, !dbg !6815
  %add.ptr = getelementptr i32, i32* %30, i64 %31, !dbg !6816
  %32 = bitcast i32* %add.ptr to i8*, !dbg !6813
  call void @writel(i32 %conv26, i8* %32) #10, !dbg !6817
  br label %for.inc, !dbg !6818

for.inc:                                          ; preds = %for.body
  %33 = load i64, i64* %i, align 8, !dbg !6819
  %inc = add i64 %33, 1, !dbg !6819
  store i64 %inc, i64* %i, align 8, !dbg !6819
  br label %for.cond, !dbg !6820, !llvm.loop !6821

for.end:                                          ; preds = %for.cond
  %34 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6823
  %gatt_table27 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %34, i32 0, i32 7, !dbg !6824
  %35 = load i32*, i32** %gatt_table27, align 8, !dbg !6824
  %36 = load i64, i64* %i, align 8, !dbg !6825
  %add.ptr28 = getelementptr i32, i32* %35, i64 %36, !dbg !6826
  %add.ptr29 = getelementptr i32, i32* %add.ptr28, i64 -1, !dbg !6827
  %37 = bitcast i32* %add.ptr29 to i8*, !dbg !6823
  %call30 = call i32 @readl(i8* %37) #10, !dbg !6828
  %38 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge, align 8, !dbg !6829
  %driver31 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %38, i32 0, i32 1, !dbg !6830
  %39 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver31, align 8, !dbg !6830
  %tlb_flush = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %39, i32 0, i32 11, !dbg !6831
  %40 = load void (%struct.agp_memory*)*, void (%struct.agp_memory*)** %tlb_flush, align 8, !dbg !6831
  %41 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6832
  call void %40(%struct.agp_memory* %41) #10, !dbg !6829
  store i32 0, i32* %retval, align 4, !dbg !6833
  br label %return, !dbg !6833

return:                                           ; preds = %for.end, %if.then20, %if.then15, %if.then6, %if.then2, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !6834
  ret i32 %42, !dbg !6834
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.agp_memory* @agp_generic_alloc_by_type(i64 %page_count, i32 %type) #0 !dbg !6835 {
entry:
  %page_count.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i64 %page_count, i64* %page_count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %page_count.addr, metadata !6836, metadata !DIExpression()), !dbg !6837
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6838, metadata !DIExpression()), !dbg !6839
  ret %struct.agp_memory* null, !dbg !6840
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.agp_memory* @agp_create_user_memory(i64 %num_agp_pages) #0 !dbg !6841 {
entry:
  %retval = alloca %struct.agp_memory*, align 8
  %num_agp_pages.addr = alloca i64, align 8
  %new = alloca %struct.agp_memory*, align 8
  %alloc_size = alloca i64, align 8
  store i64 %num_agp_pages, i64* %num_agp_pages.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %num_agp_pages.addr, metadata !6844, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.declare(metadata %struct.agp_memory** %new, metadata !6846, metadata !DIExpression()), !dbg !6847
  call void @llvm.dbg.declare(metadata i64* %alloc_size, metadata !6848, metadata !DIExpression()), !dbg !6849
  %0 = load i64, i64* %num_agp_pages.addr, align 8, !dbg !6850
  %mul = mul i64 %0, 8, !dbg !6851
  store i64 %mul, i64* %alloc_size, align 8, !dbg !6849
  %1 = load i64, i64* %num_agp_pages.addr, align 8, !dbg !6852
  %cmp = icmp ult i64 268435455, %1, !dbg !6854
  br i1 %cmp, label %if.then, label %if.end, !dbg !6855

if.then:                                          ; preds = %entry
  store %struct.agp_memory* null, %struct.agp_memory** %retval, align 8, !dbg !6856
  br label %return, !dbg !6856

if.end:                                           ; preds = %entry
  %call = call i8* @kzalloc(i64 104, i32 3264) #10, !dbg !6857
  %2 = bitcast i8* %call to %struct.agp_memory*, !dbg !6857
  store %struct.agp_memory* %2, %struct.agp_memory** %new, align 8, !dbg !6858
  %3 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !6859
  %cmp1 = icmp eq %struct.agp_memory* %3, null, !dbg !6861
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6862

if.then2:                                         ; preds = %if.end
  store %struct.agp_memory* null, %struct.agp_memory** %retval, align 8, !dbg !6863
  br label %return, !dbg !6863

if.end3:                                          ; preds = %if.end
  %call4 = call i32 @agp_get_key() #10, !dbg !6864
  %4 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !6865
  %key = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %4, i32 0, i32 5, !dbg !6866
  store i32 %call4, i32* %key, align 8, !dbg !6867
  %5 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !6868
  %key5 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %5, i32 0, i32 5, !dbg !6870
  %6 = load i32, i32* %key5, align 8, !dbg !6870
  %cmp6 = icmp slt i32 %6, 0, !dbg !6871
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !6872

if.then7:                                         ; preds = %if.end3
  %7 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !6873
  %8 = bitcast %struct.agp_memory* %7 to i8*, !dbg !6873
  call void @kfree(i8* %8) #10, !dbg !6875
  store %struct.agp_memory* null, %struct.agp_memory** %retval, align 8, !dbg !6876
  br label %return, !dbg !6876

if.end8:                                          ; preds = %if.end3
  %9 = load i64, i64* %alloc_size, align 8, !dbg !6877
  %10 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !6878
  call void @agp_alloc_page_array(i64 %9, %struct.agp_memory* %10) #10, !dbg !6879
  %11 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !6880
  %pages = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %11, i32 0, i32 3, !dbg !6882
  %12 = load %struct.page**, %struct.page*** %pages, align 8, !dbg !6882
  %cmp9 = icmp eq %struct.page** %12, null, !dbg !6883
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !6884

if.then10:                                        ; preds = %if.end8
  %13 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !6885
  %key11 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %13, i32 0, i32 5, !dbg !6887
  %14 = load i32, i32* %key11, align 8, !dbg !6887
  call void @agp_free_key(i32 %14) #10, !dbg !6888
  %15 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !6889
  %16 = bitcast %struct.agp_memory* %15 to i8*, !dbg !6889
  call void @kfree(i8* %16) #10, !dbg !6890
  store %struct.agp_memory* null, %struct.agp_memory** %retval, align 8, !dbg !6891
  br label %return, !dbg !6891

if.end12:                                         ; preds = %if.end8
  %17 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !6892
  %num_scratch_pages = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %17, i32 0, i32 6, !dbg !6893
  store i32 0, i32* %num_scratch_pages, align 4, !dbg !6894
  %18 = load %struct.agp_memory*, %struct.agp_memory** %new, align 8, !dbg !6895
  store %struct.agp_memory* %18, %struct.agp_memory** %retval, align 8, !dbg !6896
  br label %return, !dbg !6896

return:                                           ; preds = %if.end12, %if.then10, %if.then7, %if.then2, %if.then
  %19 = load %struct.agp_memory*, %struct.agp_memory** %retval, align 8, !dbg !6897
  ret %struct.agp_memory* %19, !dbg !6897
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @agp_generic_alloc_pages(%struct.agp_bridge_data* %bridge, %struct.agp_memory* %mem, i64 %num_pages) #0 !dbg !6898 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6899, metadata !DIExpression()), !dbg !6904
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6911, metadata !DIExpression()), !dbg !6913
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6915, metadata !DIExpression()), !dbg !6916
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6917, metadata !DIExpression()), !dbg !6918
  %bridge.addr = alloca %struct.agp_bridge_data*, align 8
  %mem.addr = alloca %struct.agp_memory*, align 8
  %num_pages.addr = alloca i64, align 8
  %page = alloca %struct.page*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.agp_bridge_data* %bridge, %struct.agp_bridge_data** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_bridge_data** %bridge.addr, metadata !6919, metadata !DIExpression()), !dbg !6920
  store %struct.agp_memory* %mem, %struct.agp_memory** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_memory** %mem.addr, metadata !6921, metadata !DIExpression()), !dbg !6922
  store i64 %num_pages, i64* %num_pages.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %num_pages.addr, metadata !6923, metadata !DIExpression()), !dbg !6924
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !6925, metadata !DIExpression()), !dbg !6926
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6927, metadata !DIExpression()), !dbg !6928
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6929, metadata !DIExpression()), !dbg !6930
  store i32 -12, i32* %ret, align 4, !dbg !6930
  store i32 0, i32* %i, align 4, !dbg !6931
  br label %for.cond, !dbg !6932

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6933
  %conv = sext i32 %0 to i64, !dbg !6933
  %1 = load i64, i64* %num_pages.addr, align 8, !dbg !6934
  %cmp = icmp ult i64 %conv, %1, !dbg !6935
  br i1 %cmp, label %for.body, label %for.end, !dbg !6936

for.body:                                         ; preds = %for.cond
  %call = call %struct.page* @alloc_pages(i32 3524, i32 0) #10, !dbg !6937
  store %struct.page* %call, %struct.page** %page, align 8, !dbg !6938
  %2 = load %struct.page*, %struct.page** %page, align 8, !dbg !6939
  %cmp2 = icmp eq %struct.page* %2, null, !dbg !6941
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6942

if.then:                                          ; preds = %for.body
  br label %out, !dbg !6943

if.end:                                           ; preds = %for.body
  %3 = load %struct.page*, %struct.page** %page, align 8, !dbg !6944
  call void @get_page(%struct.page* %3) #10, !dbg !6945
  %4 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !6946
  %current_memory_agp = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %4, i32 0, i32 17, !dbg !6947
  store %struct.atomic_t* %current_memory_agp, %struct.atomic_t** %v.addr.i, align 8
  %5 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6948
  %6 = bitcast %struct.atomic_t* %5 to i8*, !dbg !6948
  store i8* %6, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6949
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !6950
  %conv.i.i = trunc i64 %8 to i32, !dbg !6950
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %7, i32 %conv.i.i) #11, !dbg !6951
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6952
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !6952
  call void @kcsan_check_access(i8* %9, i64 %10, i32 7) #11, !dbg !6952
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6953
  store %struct.atomic_t* %11, %struct.atomic_t** %v.addr.i1.i, align 8
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6954
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !6955
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #9, !dbg !6956, !srcloc !6957
  %13 = load %struct.page*, %struct.page** %page, align 8, !dbg !6958
  %14 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6959
  %pages = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %14, i32 0, i32 3, !dbg !6960
  %15 = load %struct.page**, %struct.page*** %pages, align 8, !dbg !6960
  %16 = load i32, i32* %i, align 4, !dbg !6961
  %idxprom = sext i32 %16 to i64, !dbg !6959
  %arrayidx = getelementptr %struct.page*, %struct.page** %15, i64 %idxprom, !dbg !6959
  store %struct.page* %13, %struct.page** %arrayidx, align 8, !dbg !6962
  %17 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6963
  %page_count = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %17, i32 0, i32 4, !dbg !6964
  %18 = load i64, i64* %page_count, align 8, !dbg !6965
  %inc = add i64 %18, 1, !dbg !6965
  store i64 %inc, i64* %page_count, align 8, !dbg !6965
  br label %for.inc, !dbg !6966

for.inc:                                          ; preds = %if.end
  %19 = load i32, i32* %i, align 4, !dbg !6967
  %inc4 = add i32 %19, 1, !dbg !6967
  store i32 %inc4, i32* %i, align 4, !dbg !6967
  br label %for.cond, !dbg !6968, !llvm.loop !6969

for.end:                                          ; preds = %for.cond
  %20 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !6971
  %pages5 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %20, i32 0, i32 3, !dbg !6972
  %21 = load %struct.page**, %struct.page*** %pages5, align 8, !dbg !6972
  %22 = load i64, i64* %num_pages.addr, align 8, !dbg !6973
  %conv6 = trunc i64 %22 to i32, !dbg !6973
  %call7 = call i32 @set_pages_array_uc(%struct.page** %21, i32 %conv6) #10, !dbg !6974
  store i32 0, i32* %ret, align 4, !dbg !6975
  br label %out, !dbg !6976

out:                                              ; preds = %for.end, %if.then
  call void @llvm.dbg.label(metadata !6977), !dbg !6978
  %23 = load i32, i32* %ret, align 4, !dbg !6979
  ret i32 %23, !dbg !6980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @alloc_pages(i32 %gfp_mask, i32 %order) #0 !dbg !6981 {
entry:
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !6985, metadata !DIExpression()), !dbg !6986
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !6987, metadata !DIExpression()), !dbg !6988
  %call = call i32 @numa_node_id() #10, !dbg !6989
  %0 = load i32, i32* %gfp_mask.addr, align 4, !dbg !6990
  %1 = load i32, i32* %order.addr, align 4, !dbg !6991
  %call1 = call %struct.page* @alloc_pages_node(i32 %call, i32 %0, i32 %1) #10, !dbg !6992
  ret %struct.page* %call1, !dbg !6993
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @get_page(%struct.page* %page) #0 !dbg !6994 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !6995, metadata !DIExpression()), !dbg !6996
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !6997
  %call = call %struct.page* @compound_head(%struct.page* %0) #10, !dbg !6998
  store %struct.page* %call, %struct.page** %page.addr, align 8, !dbg !6999
  %1 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7000
  call void @page_ref_inc(%struct.page* %1) #10, !dbg !7001
  ret void, !dbg !7002
}

; Function Attrs: noredzone
declare dso_local i32 @set_pages_array_uc(%struct.page**, i32) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.page* @agp_generic_alloc_page(%struct.agp_bridge_data* %bridge) #0 !dbg !7003 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6899, metadata !DIExpression()), !dbg !7004
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6911, metadata !DIExpression()), !dbg !7007
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6915, metadata !DIExpression()), !dbg !7009
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6917, metadata !DIExpression()), !dbg !7010
  %retval = alloca %struct.page*, align 8
  %bridge.addr = alloca %struct.agp_bridge_data*, align 8
  %page = alloca %struct.page*, align 8
  store %struct.agp_bridge_data* %bridge, %struct.agp_bridge_data** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_bridge_data** %bridge.addr, metadata !7011, metadata !DIExpression()), !dbg !7012
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !7013, metadata !DIExpression()), !dbg !7014
  %call = call %struct.page* @alloc_pages(i32 3524, i32 0) #10, !dbg !7015
  store %struct.page* %call, %struct.page** %page, align 8, !dbg !7016
  %0 = load %struct.page*, %struct.page** %page, align 8, !dbg !7017
  %cmp = icmp eq %struct.page* %0, null, !dbg !7019
  br i1 %cmp, label %if.then, label %if.end, !dbg !7020

if.then:                                          ; preds = %entry
  store %struct.page* null, %struct.page** %retval, align 8, !dbg !7021
  br label %return, !dbg !7021

if.end:                                           ; preds = %entry
  %1 = load %struct.page*, %struct.page** %page, align 8, !dbg !7022
  %call1 = call i32 @set_pages_uc(%struct.page* %1, i32 1) #10, !dbg !7022
  %2 = load %struct.page*, %struct.page** %page, align 8, !dbg !7023
  call void @get_page(%struct.page* %2) #10, !dbg !7024
  %3 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7025
  %current_memory_agp = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %3, i32 0, i32 17, !dbg !7026
  store %struct.atomic_t* %current_memory_agp, %struct.atomic_t** %v.addr.i, align 8
  %4 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7027
  %5 = bitcast %struct.atomic_t* %4 to i8*, !dbg !7027
  store i8* %5, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7028
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7029
  %conv.i.i = trunc i64 %7 to i32, !dbg !7029
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %6, i32 %conv.i.i) #11, !dbg !7030
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7031
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !7031
  call void @kcsan_check_access(i8* %8, i64 %9, i32 7) #11, !dbg !7031
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7032
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i1.i, align 8
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7033
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !7034
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #9, !dbg !7035, !srcloc !6957
  %12 = load %struct.page*, %struct.page** %page, align 8, !dbg !7036
  store %struct.page* %12, %struct.page** %retval, align 8, !dbg !7037
  br label %return, !dbg !7037

return:                                           ; preds = %if.end, %if.then
  %13 = load %struct.page*, %struct.page** %retval, align 8, !dbg !7038
  ret %struct.page* %13, !dbg !7038
}

; Function Attrs: noredzone
declare dso_local i32 @set_pages_uc(%struct.page*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @agp_generic_destroy_pages(%struct.agp_memory* %mem) #0 !dbg !7039 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7040, metadata !DIExpression()), !dbg !7042
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6911, metadata !DIExpression()), !dbg !7049
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6915, metadata !DIExpression()), !dbg !7051
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7052, metadata !DIExpression()), !dbg !7053
  %mem.addr = alloca %struct.agp_memory*, align 8
  %i = alloca i32, align 4
  %page = alloca %struct.page*, align 8
  store %struct.agp_memory* %mem, %struct.agp_memory** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_memory** %mem.addr, metadata !7054, metadata !DIExpression()), !dbg !7055
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7056, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !7058, metadata !DIExpression()), !dbg !7059
  %0 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !7060
  %tobool = icmp ne %struct.agp_memory* %0, null, !dbg !7060
  br i1 %tobool, label %if.end, label %if.then, !dbg !7062

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !7063

if.end:                                           ; preds = %entry
  %1 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !7064
  %pages = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %1, i32 0, i32 3, !dbg !7065
  %2 = load %struct.page**, %struct.page*** %pages, align 8, !dbg !7065
  %3 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !7066
  %page_count = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %3, i32 0, i32 4, !dbg !7067
  %4 = load i64, i64* %page_count, align 8, !dbg !7067
  %conv = trunc i64 %4 to i32, !dbg !7066
  %call = call i32 @set_pages_array_wb(%struct.page** %2, i32 %conv) #10, !dbg !7068
  store i32 0, i32* %i, align 4, !dbg !7069
  br label %for.cond, !dbg !7070

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !7071
  %conv1 = sext i32 %5 to i64, !dbg !7071
  %6 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !7072
  %page_count2 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %6, i32 0, i32 4, !dbg !7073
  %7 = load i64, i64* %page_count2, align 8, !dbg !7073
  %cmp = icmp ult i64 %conv1, %7, !dbg !7074
  br i1 %cmp, label %for.body, label %for.end, !dbg !7075

for.body:                                         ; preds = %for.cond
  %8 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !7076
  %pages4 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %8, i32 0, i32 3, !dbg !7077
  %9 = load %struct.page**, %struct.page*** %pages4, align 8, !dbg !7077
  %10 = load i32, i32* %i, align 4, !dbg !7078
  %idxprom = sext i32 %10 to i64, !dbg !7076
  %arrayidx = getelementptr %struct.page*, %struct.page** %9, i64 %idxprom, !dbg !7076
  %11 = load %struct.page*, %struct.page** %arrayidx, align 8, !dbg !7076
  store %struct.page* %11, %struct.page** %page, align 8, !dbg !7079
  %12 = load %struct.page*, %struct.page** %page, align 8, !dbg !7080
  call void @put_page(%struct.page* %12) #10, !dbg !7081
  %13 = load %struct.page*, %struct.page** %page, align 8, !dbg !7082
  call void @__free_pages(%struct.page* %13, i32 0) #10, !dbg !7082
  %14 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7083
  %current_memory_agp = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %14, i32 0, i32 17, !dbg !7084
  store %struct.atomic_t* %current_memory_agp, %struct.atomic_t** %v.addr.i, align 8
  %15 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7085
  %16 = bitcast %struct.atomic_t* %15 to i8*, !dbg !7085
  store i8* %16, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %17 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7086
  %18 = load i64, i64* %size.addr.i.i, align 8, !dbg !7087
  %conv.i.i = trunc i64 %18 to i32, !dbg !7087
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %17, i32 %conv.i.i) #11, !dbg !7088
  %19 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7089
  %20 = load i64, i64* %size.addr.i.i, align 8, !dbg !7089
  call void @kcsan_check_access(i8* %19, i64 %20, i32 7) #11, !dbg !7089
  %21 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7090
  store %struct.atomic_t* %21, %struct.atomic_t** %v.addr.i1.i, align 8
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7091
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %22, i32 0, i32 0, !dbg !7092
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #9, !dbg !7093, !srcloc !7094
  %23 = load %struct.agp_memory*, %struct.agp_memory** %mem.addr, align 8, !dbg !7095
  %pages5 = getelementptr inbounds %struct.agp_memory, %struct.agp_memory* %23, i32 0, i32 3, !dbg !7096
  %24 = load %struct.page**, %struct.page*** %pages5, align 8, !dbg !7096
  %25 = load i32, i32* %i, align 4, !dbg !7097
  %idxprom6 = sext i32 %25 to i64, !dbg !7095
  %arrayidx7 = getelementptr %struct.page*, %struct.page** %24, i64 %idxprom6, !dbg !7095
  store %struct.page* null, %struct.page** %arrayidx7, align 8, !dbg !7098
  br label %for.inc, !dbg !7099

for.inc:                                          ; preds = %for.body
  %26 = load i32, i32* %i, align 4, !dbg !7100
  %inc = add i32 %26, 1, !dbg !7100
  store i32 %inc, i32* %i, align 4, !dbg !7100
  br label %for.cond, !dbg !7101, !llvm.loop !7102

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !7104
}

; Function Attrs: noredzone
declare dso_local i32 @set_pages_array_wb(%struct.page**, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @put_page(%struct.page* %page) #0 !dbg !7105 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !7106, metadata !DIExpression()), !dbg !7107
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7108
  %call = call %struct.page* @compound_head(%struct.page* %0) #10, !dbg !7109
  store %struct.page* %call, %struct.page** %page.addr, align 8, !dbg !7110
  %1 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7111
  %call1 = call zeroext i1 @page_is_devmap_managed(%struct.page* %1) #10, !dbg !7113
  br i1 %call1, label %if.then, label %if.end, !dbg !7114

if.then:                                          ; preds = %entry
  %2 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7115
  call void @put_devmap_managed_page(%struct.page* %2) #10, !dbg !7117
  br label %if.end4, !dbg !7118

if.end:                                           ; preds = %entry
  %3 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7119
  %call2 = call i32 @put_page_testzero(%struct.page* %3) #10, !dbg !7121
  %tobool = icmp ne i32 %call2, 0, !dbg !7121
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !7122

if.then3:                                         ; preds = %if.end
  %4 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7123
  call void @__put_page(%struct.page* %4) #10, !dbg !7124
  br label %if.end4, !dbg !7124

if.end4:                                          ; preds = %if.then, %if.then3, %if.end
  ret void, !dbg !7125
}

; Function Attrs: noredzone
declare dso_local void @__free_pages(%struct.page*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @agp_generic_destroy_page(%struct.page* %page, i32 %flags) #0 !dbg !7126 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7040, metadata !DIExpression()), !dbg !7127
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6911, metadata !DIExpression()), !dbg !7132
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6915, metadata !DIExpression()), !dbg !7134
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7052, metadata !DIExpression()), !dbg !7135
  %page.addr = alloca %struct.page*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !7136, metadata !DIExpression()), !dbg !7137
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7138, metadata !DIExpression()), !dbg !7139
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7140
  %cmp = icmp eq %struct.page* %0, null, !dbg !7142
  br i1 %cmp, label %if.then, label %if.end, !dbg !7143

if.then:                                          ; preds = %entry
  br label %if.end6, !dbg !7144

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %flags.addr, align 4, !dbg !7145
  %and = and i32 %1, 1, !dbg !7147
  %tobool = icmp ne i32 %and, 0, !dbg !7147
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !7148

if.then1:                                         ; preds = %if.end
  %2 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7149
  %call = call i32 @set_pages_wb(%struct.page* %2, i32 1) #10, !dbg !7149
  br label %if.end2, !dbg !7149

if.end2:                                          ; preds = %if.then1, %if.end
  %3 = load i32, i32* %flags.addr, align 4, !dbg !7150
  %and3 = and i32 %3, 2, !dbg !7151
  %tobool4 = icmp ne i32 %and3, 0, !dbg !7151
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !7152

if.then5:                                         ; preds = %if.end2
  %4 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7153
  call void @put_page(%struct.page* %4) #10, !dbg !7154
  %5 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7155
  call void @__free_pages(%struct.page* %5, i32 0) #10, !dbg !7155
  %6 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7156
  %current_memory_agp = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %6, i32 0, i32 17, !dbg !7157
  store %struct.atomic_t* %current_memory_agp, %struct.atomic_t** %v.addr.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7158
  %8 = bitcast %struct.atomic_t* %7 to i8*, !dbg !7158
  store i8* %8, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7159
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !7160
  %conv.i.i = trunc i64 %10 to i32, !dbg !7160
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %9, i32 %conv.i.i) #11, !dbg !7161
  %11 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7162
  %12 = load i64, i64* %size.addr.i.i, align 8, !dbg !7162
  call void @kcsan_check_access(i8* %11, i64 %12, i32 7) #11, !dbg !7162
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7163
  store %struct.atomic_t* %13, %struct.atomic_t** %v.addr.i1.i, align 8
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7164
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %14, i32 0, i32 0, !dbg !7165
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #9, !dbg !7166, !srcloc !7094
  br label %if.end6, !dbg !7167

if.end6:                                          ; preds = %if.then, %if.then5, %if.end2
  ret void, !dbg !7168
}

; Function Attrs: noredzone
declare dso_local i32 @set_pages_wb(%struct.page*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @agp_enable(%struct.agp_bridge_data* %bridge, i32 %mode) #0 !dbg !7169 {
entry:
  %bridge.addr = alloca %struct.agp_bridge_data*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.agp_bridge_data* %bridge, %struct.agp_bridge_data** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_bridge_data** %bridge.addr, metadata !7170, metadata !DIExpression()), !dbg !7171
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7172, metadata !DIExpression()), !dbg !7173
  %0 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !7174
  %tobool = icmp ne %struct.agp_bridge_data* %0, null, !dbg !7174
  br i1 %tobool, label %if.end, label %if.then, !dbg !7176

if.then:                                          ; preds = %entry
  br label %return, !dbg !7177

if.end:                                           ; preds = %entry
  %1 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !7178
  %driver = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %1, i32 0, i32 1, !dbg !7179
  %2 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver, align 8, !dbg !7179
  %agp_enable = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %2, i32 0, i32 9, !dbg !7180
  %3 = load void (%struct.agp_bridge_data*, i32)*, void (%struct.agp_bridge_data*, i32)** %agp_enable, align 8, !dbg !7180
  %4 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !7181
  %5 = load i32, i32* %mode.addr, align 4, !dbg !7182
  call void %3(%struct.agp_bridge_data* %4, i32 %5) #10, !dbg !7178
  br label %return, !dbg !7183

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.agp_bridge_data* @agp_generic_find_bridge(%struct.pci_dev* %pdev) #0 !dbg !7184 {
entry:
  %retval = alloca %struct.agp_bridge_data*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7187, metadata !DIExpression()), !dbg !7188
  %call = call i32 @list_empty(%struct.list_head* @agp_bridges) #10, !dbg !7189
  %tobool = icmp ne i32 %call, 0, !dbg !7189
  br i1 %tobool, label %if.then, label %if.end, !dbg !7191

if.then:                                          ; preds = %entry
  store %struct.agp_bridge_data* null, %struct.agp_bridge_data** %retval, align 8, !dbg !7192
  br label %return, !dbg !7192

if.end:                                           ; preds = %entry
  %0 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7193
  store %struct.agp_bridge_data* %0, %struct.agp_bridge_data** %retval, align 8, !dbg !7194
  br label %return, !dbg !7194

return:                                           ; preds = %if.end, %if.then
  %1 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %retval, align 8, !dbg !7195
  ret %struct.agp_bridge_data* %1, !dbg !7195
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !7196 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7201, metadata !DIExpression()), !dbg !7202
  br label %do.body, !dbg !7203

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7205

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7203
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !7203
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7203
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !7205
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !7203
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7207
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !7208
  %conv = zext i1 %cmp to i32, !dbg !7208
  ret i32 %conv, !dbg !7209
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @global_cache_flush() #0 !dbg !7210 {
entry:
  call void @on_each_cpu(void (i8*)* @ipi_handler, i8* null, i32 1) #10, !dbg !7211
  ret void, !dbg !7212
}

; Function Attrs: noredzone
declare dso_local void @on_each_cpu(void (i8*)*, i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ipi_handler(i8* %null) #0 !dbg !7213 {
entry:
  %null.addr = alloca i8*, align 8
  store i8* %null, i8** %null.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %null.addr, metadata !7214, metadata !DIExpression()), !dbg !7215
  call void @wbinvd() #10, !dbg !7216
  ret void, !dbg !7217
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @agp_generic_mask_memory(%struct.agp_bridge_data* %bridge, i64 %addr, i32 %type) #0 !dbg !7218 {
entry:
  %retval = alloca i64, align 8
  %bridge.addr = alloca %struct.agp_bridge_data*, align 8
  %addr.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store %struct.agp_bridge_data* %bridge, %struct.agp_bridge_data** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_bridge_data** %bridge.addr, metadata !7219, metadata !DIExpression()), !dbg !7220
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !7221, metadata !DIExpression()), !dbg !7222
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7223, metadata !DIExpression()), !dbg !7224
  %0 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !7225
  %driver = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %0, i32 0, i32 1, !dbg !7227
  %1 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver, align 8, !dbg !7227
  %masks = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %1, i32 0, i32 6, !dbg !7228
  %2 = load %struct.gatt_mask*, %struct.gatt_mask** %masks, align 8, !dbg !7228
  %tobool = icmp ne %struct.gatt_mask* %2, null, !dbg !7225
  br i1 %tobool, label %if.then, label %if.else, !dbg !7229

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %addr.addr, align 8, !dbg !7230
  %4 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** %bridge.addr, align 8, !dbg !7231
  %driver1 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %4, i32 0, i32 1, !dbg !7232
  %5 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver1, align 8, !dbg !7232
  %masks2 = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %5, i32 0, i32 6, !dbg !7233
  %6 = load %struct.gatt_mask*, %struct.gatt_mask** %masks2, align 8, !dbg !7233
  %arrayidx = getelementptr %struct.gatt_mask, %struct.gatt_mask* %6, i64 0, !dbg !7231
  %mask = getelementptr inbounds %struct.gatt_mask, %struct.gatt_mask* %arrayidx, i32 0, i32 0, !dbg !7234
  %7 = load i64, i64* %mask, align 8, !dbg !7234
  %or = or i64 %3, %7, !dbg !7235
  store i64 %or, i64* %retval, align 8, !dbg !7236
  br label %return, !dbg !7236

if.else:                                          ; preds = %entry
  %8 = load i64, i64* %addr.addr, align 8, !dbg !7237
  store i64 %8, i64* %retval, align 8, !dbg !7238
  br label %return, !dbg !7238

return:                                           ; preds = %if.else, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !7239
  ret i64 %9, !dbg !7239
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @agp_generic_type_to_mask_type(%struct.agp_bridge_data* %bridge, i32 %type) #0 !dbg !7240 {
entry:
  %retval = alloca i32, align 4
  %bridge.addr = alloca %struct.agp_bridge_data*, align 8
  %type.addr = alloca i32, align 4
  store %struct.agp_bridge_data* %bridge, %struct.agp_bridge_data** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_bridge_data** %bridge.addr, metadata !7241, metadata !DIExpression()), !dbg !7242
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7243, metadata !DIExpression()), !dbg !7244
  %0 = load i32, i32* %type.addr, align 4, !dbg !7245
  %cmp = icmp sge i32 %0, 65536, !dbg !7247
  br i1 %cmp, label %if.then, label %if.end, !dbg !7248

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7249
  br label %return, !dbg !7249

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %type.addr, align 4, !dbg !7250
  store i32 %1, i32* %retval, align 4, !dbg !7251
  br label %return, !dbg !7251

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !7252
  ret i32 %2, !dbg !7252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @agp3_generic_fetch_size() #0 !dbg !7253 {
entry:
  %retval = alloca i32, align 4
  %temp_size = alloca i16, align 2
  %i = alloca i32, align 4
  %values = alloca %struct.aper_size_info_16*, align 8
  call void @llvm.dbg.declare(metadata i16* %temp_size, metadata !7254, metadata !DIExpression()), !dbg !7255
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7256, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.declare(metadata %struct.aper_size_info_16** %values, metadata !7258, metadata !DIExpression()), !dbg !7259
  %0 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7260
  %dev = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %0, i32 0, i32 6, !dbg !7261
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7261
  %2 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7262
  %capndx = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %2, i32 0, i32 21, !dbg !7263
  %3 = load i32, i32* %capndx, align 8, !dbg !7263
  %add = add i32 %3, 20, !dbg !7264
  %call = call i32 @pci_read_config_word(%struct.pci_dev* %1, i32 %add, i16* %temp_size) #10, !dbg !7265
  %4 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7266
  %driver = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %4, i32 0, i32 1, !dbg !7266
  %5 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver, align 8, !dbg !7266
  %aperture_sizes = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %5, i32 0, i32 1, !dbg !7266
  %6 = load i8*, i8** %aperture_sizes, align 8, !dbg !7266
  %7 = bitcast i8* %6 to %struct.aper_size_info_16*, !dbg !7266
  store %struct.aper_size_info_16* %7, %struct.aper_size_info_16** %values, align 8, !dbg !7267
  store i32 0, i32* %i, align 4, !dbg !7268
  br label %for.cond, !dbg !7270

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !7271
  %9 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7273
  %driver1 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %9, i32 0, i32 1, !dbg !7274
  %10 = load %struct.agp_bridge_driver*, %struct.agp_bridge_driver** %driver1, align 8, !dbg !7274
  %num_aperture_sizes = getelementptr inbounds %struct.agp_bridge_driver, %struct.agp_bridge_driver* %10, i32 0, i32 2, !dbg !7275
  %11 = load i32, i32* %num_aperture_sizes, align 8, !dbg !7275
  %cmp = icmp slt i32 %8, %11, !dbg !7276
  br i1 %cmp, label %for.body, label %for.end, !dbg !7277

for.body:                                         ; preds = %for.cond
  %12 = load i16, i16* %temp_size, align 2, !dbg !7278
  %conv = zext i16 %12 to i32, !dbg !7278
  %13 = load %struct.aper_size_info_16*, %struct.aper_size_info_16** %values, align 8, !dbg !7281
  %14 = load i32, i32* %i, align 4, !dbg !7282
  %idxprom = sext i32 %14 to i64, !dbg !7281
  %arrayidx = getelementptr %struct.aper_size_info_16, %struct.aper_size_info_16* %13, i64 %idxprom, !dbg !7281
  %size_value = getelementptr inbounds %struct.aper_size_info_16, %struct.aper_size_info_16* %arrayidx, i32 0, i32 3, !dbg !7283
  %15 = load i16, i16* %size_value, align 4, !dbg !7283
  %conv2 = zext i16 %15 to i32, !dbg !7281
  %cmp3 = icmp eq i32 %conv, %conv2, !dbg !7284
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7285

if.then:                                          ; preds = %for.body
  %16 = load %struct.aper_size_info_16*, %struct.aper_size_info_16** %values, align 8, !dbg !7286
  %17 = load i32, i32* %i, align 4, !dbg !7288
  %idx.ext = sext i32 %17 to i64, !dbg !7289
  %add.ptr = getelementptr %struct.aper_size_info_16, %struct.aper_size_info_16* %16, i64 %idx.ext, !dbg !7289
  %18 = bitcast %struct.aper_size_info_16* %add.ptr to i8*, !dbg !7290
  %19 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7291
  %current_size = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %19, i32 0, i32 4, !dbg !7292
  store i8* %18, i8** %current_size, align 8, !dbg !7293
  %20 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7294
  %previous_size = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %20, i32 0, i32 3, !dbg !7295
  store i8* %18, i8** %previous_size, align 8, !dbg !7296
  %21 = load i32, i32* %i, align 4, !dbg !7297
  %22 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7298
  %aperture_size_idx = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %22, i32 0, i32 20, !dbg !7299
  store i32 %21, i32* %aperture_size_idx, align 4, !dbg !7300
  %23 = load %struct.aper_size_info_16*, %struct.aper_size_info_16** %values, align 8, !dbg !7301
  %24 = load i32, i32* %i, align 4, !dbg !7302
  %idxprom5 = sext i32 %24 to i64, !dbg !7301
  %arrayidx6 = getelementptr %struct.aper_size_info_16, %struct.aper_size_info_16* %23, i64 %idxprom5, !dbg !7301
  %size = getelementptr inbounds %struct.aper_size_info_16, %struct.aper_size_info_16* %arrayidx6, i32 0, i32 0, !dbg !7303
  %25 = load i32, i32* %size, align 4, !dbg !7303
  store i32 %25, i32* %retval, align 4, !dbg !7304
  br label %return, !dbg !7304

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !7305

for.inc:                                          ; preds = %if.end
  %26 = load i32, i32* %i, align 4, !dbg !7306
  %inc = add i32 %26, 1, !dbg !7306
  store i32 %inc, i32* %i, align 4, !dbg !7306
  br label %for.cond, !dbg !7307, !llvm.loop !7308

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7310
  br label %return, !dbg !7310

return:                                           ; preds = %for.end, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !7311
  ret i32 %27, !dbg !7311
}

; Function Attrs: noredzone
declare dso_local i32 @pci_read_config_word(%struct.pci_dev*, i32, i16*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @agp3_generic_tlbflush(%struct.agp_memory* %mem) #0 !dbg !7312 {
entry:
  %mem.addr = alloca %struct.agp_memory*, align 8
  %ctrl = alloca i32, align 4
  store %struct.agp_memory* %mem, %struct.agp_memory** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.agp_memory** %mem.addr, metadata !7313, metadata !DIExpression()), !dbg !7314
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !7315, metadata !DIExpression()), !dbg !7316
  %0 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7317
  %dev = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %0, i32 0, i32 6, !dbg !7318
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7318
  %2 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7319
  %capndx = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %2, i32 0, i32 21, !dbg !7320
  %3 = load i32, i32* %capndx, align 8, !dbg !7320
  %add = add i32 %3, 16, !dbg !7321
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %1, i32 %add, i32* %ctrl) #10, !dbg !7322
  %4 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7323
  %dev1 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %4, i32 0, i32 6, !dbg !7324
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev1, align 8, !dbg !7324
  %6 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7325
  %capndx2 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %6, i32 0, i32 21, !dbg !7326
  %7 = load i32, i32* %capndx2, align 8, !dbg !7326
  %add3 = add i32 %7, 16, !dbg !7327
  %8 = load i32, i32* %ctrl, align 4, !dbg !7328
  %and = and i32 %8, -129, !dbg !7329
  %call4 = call i32 @pci_write_config_dword(%struct.pci_dev* %5, i32 %add3, i32 %and) #10, !dbg !7330
  %9 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7331
  %dev5 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %9, i32 0, i32 6, !dbg !7332
  %10 = load %struct.pci_dev*, %struct.pci_dev** %dev5, align 8, !dbg !7332
  %11 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7333
  %capndx6 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %11, i32 0, i32 21, !dbg !7334
  %12 = load i32, i32* %capndx6, align 8, !dbg !7334
  %add7 = add i32 %12, 16, !dbg !7335
  %13 = load i32, i32* %ctrl, align 4, !dbg !7336
  %call8 = call i32 @pci_write_config_dword(%struct.pci_dev* %10, i32 %add7, i32 %13) #10, !dbg !7337
  ret void, !dbg !7338
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @agp3_generic_configure() #0 !dbg !7339 {
entry:
  %temp = alloca i32, align 4
  %current_size = alloca %struct.aper_size_info_16*, align 8
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !7340, metadata !DIExpression()), !dbg !7341
  call void @llvm.dbg.declare(metadata %struct.aper_size_info_16** %current_size, metadata !7342, metadata !DIExpression()), !dbg !7343
  %0 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7344
  %current_size1 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %0, i32 0, i32 4, !dbg !7344
  %1 = load i8*, i8** %current_size1, align 8, !dbg !7344
  %2 = bitcast i8* %1 to %struct.aper_size_info_16*, !dbg !7344
  store %struct.aper_size_info_16* %2, %struct.aper_size_info_16** %current_size, align 8, !dbg !7345
  %3 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7346
  %dev = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %3, i32 0, i32 6, !dbg !7347
  %4 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7347
  %call = call i64 @pci_bus_address(%struct.pci_dev* %4, i32 0) #10, !dbg !7348
  %5 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7349
  %gart_bus_addr = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %5, i32 0, i32 12, !dbg !7350
  store i64 %call, i64* %gart_bus_addr, align 8, !dbg !7351
  %6 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7352
  %dev2 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %6, i32 0, i32 6, !dbg !7353
  %7 = load %struct.pci_dev*, %struct.pci_dev** %dev2, align 8, !dbg !7353
  %8 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7354
  %capndx = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %8, i32 0, i32 21, !dbg !7355
  %9 = load i32, i32* %capndx, align 8, !dbg !7355
  %add = add i32 %9, 20, !dbg !7356
  %10 = load %struct.aper_size_info_16*, %struct.aper_size_info_16** %current_size, align 8, !dbg !7357
  %size_value = getelementptr inbounds %struct.aper_size_info_16, %struct.aper_size_info_16* %10, i32 0, i32 3, !dbg !7358
  %11 = load i16, i16* %size_value, align 4, !dbg !7358
  %call3 = call i32 @pci_write_config_word(%struct.pci_dev* %7, i32 %add, i16 zeroext %11) #10, !dbg !7359
  %12 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7360
  %dev4 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %12, i32 0, i32 6, !dbg !7361
  %13 = load %struct.pci_dev*, %struct.pci_dev** %dev4, align 8, !dbg !7361
  %14 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7362
  %capndx5 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %14, i32 0, i32 21, !dbg !7363
  %15 = load i32, i32* %capndx5, align 8, !dbg !7363
  %add6 = add i32 %15, 24, !dbg !7364
  %16 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7365
  %gatt_bus_addr = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %16, i32 0, i32 13, !dbg !7366
  %17 = load i64, i64* %gatt_bus_addr, align 8, !dbg !7366
  %conv = trunc i64 %17 to i32, !dbg !7365
  %call7 = call i32 @pci_write_config_dword(%struct.pci_dev* %13, i32 %add6, i32 %conv) #10, !dbg !7367
  %18 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7368
  %dev8 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %18, i32 0, i32 6, !dbg !7369
  %19 = load %struct.pci_dev*, %struct.pci_dev** %dev8, align 8, !dbg !7369
  %20 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7370
  %capndx9 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %20, i32 0, i32 21, !dbg !7371
  %21 = load i32, i32* %capndx9, align 8, !dbg !7371
  %add10 = add i32 %21, 16, !dbg !7372
  %call11 = call i32 @pci_read_config_dword(%struct.pci_dev* %19, i32 %add10, i32* %temp) #10, !dbg !7373
  %22 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7374
  %dev12 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %22, i32 0, i32 6, !dbg !7375
  %23 = load %struct.pci_dev*, %struct.pci_dev** %dev12, align 8, !dbg !7375
  %24 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7376
  %capndx13 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %24, i32 0, i32 21, !dbg !7377
  %25 = load i32, i32* %capndx13, align 8, !dbg !7377
  %add14 = add i32 %25, 16, !dbg !7378
  %26 = load i32, i32* %temp, align 4, !dbg !7379
  %or = or i32 %26, 256, !dbg !7380
  %or15 = or i32 %or, 128, !dbg !7381
  %call16 = call i32 @pci_write_config_dword(%struct.pci_dev* %23, i32 %add14, i32 %or15) #10, !dbg !7382
  ret i32 0, !dbg !7383
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @pci_bus_address(%struct.pci_dev* %pdev, i32 %bar) #0 !dbg !7384 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %bar.addr = alloca i32, align 4
  %region = alloca %struct.pci_bus_region, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7388, metadata !DIExpression()), !dbg !7389
  store i32 %bar, i32* %bar.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bar.addr, metadata !7390, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.declare(metadata %struct.pci_bus_region* %region, metadata !7392, metadata !DIExpression()), !dbg !7397
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7398
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 1, !dbg !7399
  %1 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !7399
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !7400
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 44, !dbg !7401
  %3 = load i32, i32* %bar.addr, align 4, !dbg !7402
  %idxprom = sext i32 %3 to i64, !dbg !7400
  %arrayidx = getelementptr [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 %idxprom, !dbg !7400
  call void @pcibios_resource_to_bus(%struct.pci_bus* %1, %struct.pci_bus_region* %region, %struct.resource* %arrayidx) #10, !dbg !7403
  %start = getelementptr inbounds %struct.pci_bus_region, %struct.pci_bus_region* %region, i32 0, i32 0, !dbg !7404
  %4 = load i64, i64* %start, align 8, !dbg !7404
  ret i64 %4, !dbg !7405
}

; Function Attrs: noredzone
declare dso_local i32 @pci_write_config_word(%struct.pci_dev*, i32, i16 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @agp3_generic_cleanup() #0 !dbg !7406 {
entry:
  %ctrl = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ctrl, metadata !7407, metadata !DIExpression()), !dbg !7408
  %0 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7409
  %dev = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %0, i32 0, i32 6, !dbg !7410
  %1 = load %struct.pci_dev*, %struct.pci_dev** %dev, align 8, !dbg !7410
  %2 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7411
  %capndx = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %2, i32 0, i32 21, !dbg !7412
  %3 = load i32, i32* %capndx, align 8, !dbg !7412
  %add = add i32 %3, 16, !dbg !7413
  %call = call i32 @pci_read_config_dword(%struct.pci_dev* %1, i32 %add, i32* %ctrl) #10, !dbg !7414
  %4 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7415
  %dev1 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %4, i32 0, i32 6, !dbg !7416
  %5 = load %struct.pci_dev*, %struct.pci_dev** %dev1, align 8, !dbg !7416
  %6 = load %struct.agp_bridge_data*, %struct.agp_bridge_data** @agp_bridge, align 8, !dbg !7417
  %capndx2 = getelementptr inbounds %struct.agp_bridge_data, %struct.agp_bridge_data* %6, i32 0, i32 21, !dbg !7418
  %7 = load i32, i32* %capndx2, align 8, !dbg !7418
  %add3 = add i32 %7, 16, !dbg !7419
  %8 = load i32, i32* %ctrl, align 4, !dbg !7420
  %and = and i32 %8, -257, !dbg !7421
  %call4 = call i32 @pci_write_config_dword(%struct.pci_dev* %5, i32 %add3, i32 %and) #10, !dbg !7422
  ret void, !dbg !7423
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !7424 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7428, metadata !DIExpression()), !dbg !7429
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7430, metadata !DIExpression()), !dbg !7431
  ret i1 true, !dbg !7432
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !7433 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7437, metadata !DIExpression()), !dbg !7438
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7439, metadata !DIExpression()), !dbg !7440
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7441, metadata !DIExpression()), !dbg !7442
  ret void, !dbg !7443
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local i8* @kvmalloc_node(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !7444 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7448, metadata !DIExpression()), !dbg !7452
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7454, metadata !DIExpression()), !dbg !7455
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7456, metadata !DIExpression()), !dbg !7457
  %0 = load i64, i64* %size.addr, align 8, !dbg !7458
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !7460
  br i1 %1, label %if.then, label %if.end447, !dbg !7461

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !7462
  %tobool = icmp ne i64 %2, 0, !dbg !7462
  br i1 %tobool, label %if.end, label %if.then1, !dbg !7465

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !7466
  br label %return, !dbg !7466

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !7467
  %cmp = icmp ult i64 %3, 4096, !dbg !7469
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7470

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7471
  br label %return, !dbg !7471

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub = sub i64 %4, 1, !dbg !7472
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !7472
  br i1 %5, label %cond.true, label %cond.false442, !dbg !7472

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub4 = sub i64 %6, 1, !dbg !7472
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !7472
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !7472

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub6 = sub i64 %8, 1, !dbg !7472
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !7472
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !7472

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !7472

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub9 = sub i64 %9, 1, !dbg !7472
  %and = and i64 %sub9, -9223372036854775808, !dbg !7472
  %tobool10 = icmp ne i64 %and, 0, !dbg !7472
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !7472

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !7472

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub13 = sub i64 %10, 1, !dbg !7472
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !7472
  %tobool15 = icmp ne i64 %and14, 0, !dbg !7472
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !7472

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !7472

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub18 = sub i64 %11, 1, !dbg !7472
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !7472
  %tobool20 = icmp ne i64 %and19, 0, !dbg !7472
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !7472

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !7472

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub23 = sub i64 %12, 1, !dbg !7472
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !7472
  %tobool25 = icmp ne i64 %and24, 0, !dbg !7472
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !7472

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !7472

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub28 = sub i64 %13, 1, !dbg !7472
  %and29 = and i64 %sub28, 576460752303423488, !dbg !7472
  %tobool30 = icmp ne i64 %and29, 0, !dbg !7472
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !7472

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !7472

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub33 = sub i64 %14, 1, !dbg !7472
  %and34 = and i64 %sub33, 288230376151711744, !dbg !7472
  %tobool35 = icmp ne i64 %and34, 0, !dbg !7472
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !7472

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !7472

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub38 = sub i64 %15, 1, !dbg !7472
  %and39 = and i64 %sub38, 144115188075855872, !dbg !7472
  %tobool40 = icmp ne i64 %and39, 0, !dbg !7472
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !7472

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !7472

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub43 = sub i64 %16, 1, !dbg !7472
  %and44 = and i64 %sub43, 72057594037927936, !dbg !7472
  %tobool45 = icmp ne i64 %and44, 0, !dbg !7472
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !7472

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !7472

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub48 = sub i64 %17, 1, !dbg !7472
  %and49 = and i64 %sub48, 36028797018963968, !dbg !7472
  %tobool50 = icmp ne i64 %and49, 0, !dbg !7472
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !7472

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !7472

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub53 = sub i64 %18, 1, !dbg !7472
  %and54 = and i64 %sub53, 18014398509481984, !dbg !7472
  %tobool55 = icmp ne i64 %and54, 0, !dbg !7472
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !7472

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !7472

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub58 = sub i64 %19, 1, !dbg !7472
  %and59 = and i64 %sub58, 9007199254740992, !dbg !7472
  %tobool60 = icmp ne i64 %and59, 0, !dbg !7472
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !7472

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !7472

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub63 = sub i64 %20, 1, !dbg !7472
  %and64 = and i64 %sub63, 4503599627370496, !dbg !7472
  %tobool65 = icmp ne i64 %and64, 0, !dbg !7472
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !7472

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !7472

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub68 = sub i64 %21, 1, !dbg !7472
  %and69 = and i64 %sub68, 2251799813685248, !dbg !7472
  %tobool70 = icmp ne i64 %and69, 0, !dbg !7472
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !7472

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !7472

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub73 = sub i64 %22, 1, !dbg !7472
  %and74 = and i64 %sub73, 1125899906842624, !dbg !7472
  %tobool75 = icmp ne i64 %and74, 0, !dbg !7472
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !7472

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !7472

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub78 = sub i64 %23, 1, !dbg !7472
  %and79 = and i64 %sub78, 562949953421312, !dbg !7472
  %tobool80 = icmp ne i64 %and79, 0, !dbg !7472
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !7472

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !7472

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub83 = sub i64 %24, 1, !dbg !7472
  %and84 = and i64 %sub83, 281474976710656, !dbg !7472
  %tobool85 = icmp ne i64 %and84, 0, !dbg !7472
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !7472

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !7472

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub88 = sub i64 %25, 1, !dbg !7472
  %and89 = and i64 %sub88, 140737488355328, !dbg !7472
  %tobool90 = icmp ne i64 %and89, 0, !dbg !7472
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !7472

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !7472

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub93 = sub i64 %26, 1, !dbg !7472
  %and94 = and i64 %sub93, 70368744177664, !dbg !7472
  %tobool95 = icmp ne i64 %and94, 0, !dbg !7472
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !7472

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !7472

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub98 = sub i64 %27, 1, !dbg !7472
  %and99 = and i64 %sub98, 35184372088832, !dbg !7472
  %tobool100 = icmp ne i64 %and99, 0, !dbg !7472
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !7472

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !7472

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub103 = sub i64 %28, 1, !dbg !7472
  %and104 = and i64 %sub103, 17592186044416, !dbg !7472
  %tobool105 = icmp ne i64 %and104, 0, !dbg !7472
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !7472

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !7472

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub108 = sub i64 %29, 1, !dbg !7472
  %and109 = and i64 %sub108, 8796093022208, !dbg !7472
  %tobool110 = icmp ne i64 %and109, 0, !dbg !7472
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !7472

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !7472

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub113 = sub i64 %30, 1, !dbg !7472
  %and114 = and i64 %sub113, 4398046511104, !dbg !7472
  %tobool115 = icmp ne i64 %and114, 0, !dbg !7472
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !7472

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !7472

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub118 = sub i64 %31, 1, !dbg !7472
  %and119 = and i64 %sub118, 2199023255552, !dbg !7472
  %tobool120 = icmp ne i64 %and119, 0, !dbg !7472
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !7472

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !7472

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub123 = sub i64 %32, 1, !dbg !7472
  %and124 = and i64 %sub123, 1099511627776, !dbg !7472
  %tobool125 = icmp ne i64 %and124, 0, !dbg !7472
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !7472

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !7472

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub128 = sub i64 %33, 1, !dbg !7472
  %and129 = and i64 %sub128, 549755813888, !dbg !7472
  %tobool130 = icmp ne i64 %and129, 0, !dbg !7472
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !7472

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !7472

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub133 = sub i64 %34, 1, !dbg !7472
  %and134 = and i64 %sub133, 274877906944, !dbg !7472
  %tobool135 = icmp ne i64 %and134, 0, !dbg !7472
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !7472

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !7472

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub138 = sub i64 %35, 1, !dbg !7472
  %and139 = and i64 %sub138, 137438953472, !dbg !7472
  %tobool140 = icmp ne i64 %and139, 0, !dbg !7472
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !7472

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !7472

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub143 = sub i64 %36, 1, !dbg !7472
  %and144 = and i64 %sub143, 68719476736, !dbg !7472
  %tobool145 = icmp ne i64 %and144, 0, !dbg !7472
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !7472

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !7472

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub148 = sub i64 %37, 1, !dbg !7472
  %and149 = and i64 %sub148, 34359738368, !dbg !7472
  %tobool150 = icmp ne i64 %and149, 0, !dbg !7472
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !7472

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !7472

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub153 = sub i64 %38, 1, !dbg !7472
  %and154 = and i64 %sub153, 17179869184, !dbg !7472
  %tobool155 = icmp ne i64 %and154, 0, !dbg !7472
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !7472

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !7472

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub158 = sub i64 %39, 1, !dbg !7472
  %and159 = and i64 %sub158, 8589934592, !dbg !7472
  %tobool160 = icmp ne i64 %and159, 0, !dbg !7472
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !7472

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !7472

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub163 = sub i64 %40, 1, !dbg !7472
  %and164 = and i64 %sub163, 4294967296, !dbg !7472
  %tobool165 = icmp ne i64 %and164, 0, !dbg !7472
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !7472

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !7472

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub168 = sub i64 %41, 1, !dbg !7472
  %and169 = and i64 %sub168, 2147483648, !dbg !7472
  %tobool170 = icmp ne i64 %and169, 0, !dbg !7472
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !7472

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !7472

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub173 = sub i64 %42, 1, !dbg !7472
  %and174 = and i64 %sub173, 1073741824, !dbg !7472
  %tobool175 = icmp ne i64 %and174, 0, !dbg !7472
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !7472

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !7472

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub178 = sub i64 %43, 1, !dbg !7472
  %and179 = and i64 %sub178, 536870912, !dbg !7472
  %tobool180 = icmp ne i64 %and179, 0, !dbg !7472
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !7472

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !7472

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub183 = sub i64 %44, 1, !dbg !7472
  %and184 = and i64 %sub183, 268435456, !dbg !7472
  %tobool185 = icmp ne i64 %and184, 0, !dbg !7472
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !7472

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !7472

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub188 = sub i64 %45, 1, !dbg !7472
  %and189 = and i64 %sub188, 134217728, !dbg !7472
  %tobool190 = icmp ne i64 %and189, 0, !dbg !7472
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !7472

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !7472

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub193 = sub i64 %46, 1, !dbg !7472
  %and194 = and i64 %sub193, 67108864, !dbg !7472
  %tobool195 = icmp ne i64 %and194, 0, !dbg !7472
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !7472

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !7472

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub198 = sub i64 %47, 1, !dbg !7472
  %and199 = and i64 %sub198, 33554432, !dbg !7472
  %tobool200 = icmp ne i64 %and199, 0, !dbg !7472
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !7472

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !7472

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub203 = sub i64 %48, 1, !dbg !7472
  %and204 = and i64 %sub203, 16777216, !dbg !7472
  %tobool205 = icmp ne i64 %and204, 0, !dbg !7472
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !7472

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !7472

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub208 = sub i64 %49, 1, !dbg !7472
  %and209 = and i64 %sub208, 8388608, !dbg !7472
  %tobool210 = icmp ne i64 %and209, 0, !dbg !7472
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !7472

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !7472

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub213 = sub i64 %50, 1, !dbg !7472
  %and214 = and i64 %sub213, 4194304, !dbg !7472
  %tobool215 = icmp ne i64 %and214, 0, !dbg !7472
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !7472

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !7472

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub218 = sub i64 %51, 1, !dbg !7472
  %and219 = and i64 %sub218, 2097152, !dbg !7472
  %tobool220 = icmp ne i64 %and219, 0, !dbg !7472
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !7472

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !7472

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub223 = sub i64 %52, 1, !dbg !7472
  %and224 = and i64 %sub223, 1048576, !dbg !7472
  %tobool225 = icmp ne i64 %and224, 0, !dbg !7472
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !7472

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !7472

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub228 = sub i64 %53, 1, !dbg !7472
  %and229 = and i64 %sub228, 524288, !dbg !7472
  %tobool230 = icmp ne i64 %and229, 0, !dbg !7472
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !7472

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !7472

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub233 = sub i64 %54, 1, !dbg !7472
  %and234 = and i64 %sub233, 262144, !dbg !7472
  %tobool235 = icmp ne i64 %and234, 0, !dbg !7472
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !7472

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !7472

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub238 = sub i64 %55, 1, !dbg !7472
  %and239 = and i64 %sub238, 131072, !dbg !7472
  %tobool240 = icmp ne i64 %and239, 0, !dbg !7472
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !7472

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !7472

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub243 = sub i64 %56, 1, !dbg !7472
  %and244 = and i64 %sub243, 65536, !dbg !7472
  %tobool245 = icmp ne i64 %and244, 0, !dbg !7472
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !7472

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !7472

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub248 = sub i64 %57, 1, !dbg !7472
  %and249 = and i64 %sub248, 32768, !dbg !7472
  %tobool250 = icmp ne i64 %and249, 0, !dbg !7472
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !7472

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !7472

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub253 = sub i64 %58, 1, !dbg !7472
  %and254 = and i64 %sub253, 16384, !dbg !7472
  %tobool255 = icmp ne i64 %and254, 0, !dbg !7472
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !7472

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !7472

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub258 = sub i64 %59, 1, !dbg !7472
  %and259 = and i64 %sub258, 8192, !dbg !7472
  %tobool260 = icmp ne i64 %and259, 0, !dbg !7472
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !7472

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !7472

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub263 = sub i64 %60, 1, !dbg !7472
  %and264 = and i64 %sub263, 4096, !dbg !7472
  %tobool265 = icmp ne i64 %and264, 0, !dbg !7472
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !7472

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !7472

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub268 = sub i64 %61, 1, !dbg !7472
  %and269 = and i64 %sub268, 2048, !dbg !7472
  %tobool270 = icmp ne i64 %and269, 0, !dbg !7472
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !7472

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !7472

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub273 = sub i64 %62, 1, !dbg !7472
  %and274 = and i64 %sub273, 1024, !dbg !7472
  %tobool275 = icmp ne i64 %and274, 0, !dbg !7472
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !7472

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !7472

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub278 = sub i64 %63, 1, !dbg !7472
  %and279 = and i64 %sub278, 512, !dbg !7472
  %tobool280 = icmp ne i64 %and279, 0, !dbg !7472
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !7472

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !7472

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub283 = sub i64 %64, 1, !dbg !7472
  %and284 = and i64 %sub283, 256, !dbg !7472
  %tobool285 = icmp ne i64 %and284, 0, !dbg !7472
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !7472

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !7472

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub288 = sub i64 %65, 1, !dbg !7472
  %and289 = and i64 %sub288, 128, !dbg !7472
  %tobool290 = icmp ne i64 %and289, 0, !dbg !7472
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !7472

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !7472

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub293 = sub i64 %66, 1, !dbg !7472
  %and294 = and i64 %sub293, 64, !dbg !7472
  %tobool295 = icmp ne i64 %and294, 0, !dbg !7472
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !7472

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !7472

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub298 = sub i64 %67, 1, !dbg !7472
  %and299 = and i64 %sub298, 32, !dbg !7472
  %tobool300 = icmp ne i64 %and299, 0, !dbg !7472
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !7472

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !7472

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub303 = sub i64 %68, 1, !dbg !7472
  %and304 = and i64 %sub303, 16, !dbg !7472
  %tobool305 = icmp ne i64 %and304, 0, !dbg !7472
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !7472

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !7472

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub308 = sub i64 %69, 1, !dbg !7472
  %and309 = and i64 %sub308, 8, !dbg !7472
  %tobool310 = icmp ne i64 %and309, 0, !dbg !7472
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !7472

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !7472

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub313 = sub i64 %70, 1, !dbg !7472
  %and314 = and i64 %sub313, 4, !dbg !7472
  %tobool315 = icmp ne i64 %and314, 0, !dbg !7472
  %71 = zext i1 %tobool315 to i64, !dbg !7472
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !7472
  br label %cond.end, !dbg !7472

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !7472
  br label %cond.end317, !dbg !7472

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !7472
  br label %cond.end319, !dbg !7472

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !7472
  br label %cond.end321, !dbg !7472

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !7472
  br label %cond.end323, !dbg !7472

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !7472
  br label %cond.end325, !dbg !7472

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !7472
  br label %cond.end327, !dbg !7472

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !7472
  br label %cond.end329, !dbg !7472

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !7472
  br label %cond.end331, !dbg !7472

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !7472
  br label %cond.end333, !dbg !7472

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !7472
  br label %cond.end335, !dbg !7472

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !7472
  br label %cond.end337, !dbg !7472

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !7472
  br label %cond.end339, !dbg !7472

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !7472
  br label %cond.end341, !dbg !7472

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !7472
  br label %cond.end343, !dbg !7472

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !7472
  br label %cond.end345, !dbg !7472

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !7472
  br label %cond.end347, !dbg !7472

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !7472
  br label %cond.end349, !dbg !7472

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !7472
  br label %cond.end351, !dbg !7472

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !7472
  br label %cond.end353, !dbg !7472

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !7472
  br label %cond.end355, !dbg !7472

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !7472
  br label %cond.end357, !dbg !7472

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !7472
  br label %cond.end359, !dbg !7472

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !7472
  br label %cond.end361, !dbg !7472

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !7472
  br label %cond.end363, !dbg !7472

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !7472
  br label %cond.end365, !dbg !7472

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !7472
  br label %cond.end367, !dbg !7472

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !7472
  br label %cond.end369, !dbg !7472

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !7472
  br label %cond.end371, !dbg !7472

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !7472
  br label %cond.end373, !dbg !7472

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !7472
  br label %cond.end375, !dbg !7472

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !7472
  br label %cond.end377, !dbg !7472

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !7472
  br label %cond.end379, !dbg !7472

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !7472
  br label %cond.end381, !dbg !7472

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !7472
  br label %cond.end383, !dbg !7472

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !7472
  br label %cond.end385, !dbg !7472

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !7472
  br label %cond.end387, !dbg !7472

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !7472
  br label %cond.end389, !dbg !7472

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !7472
  br label %cond.end391, !dbg !7472

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !7472
  br label %cond.end393, !dbg !7472

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !7472
  br label %cond.end395, !dbg !7472

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !7472
  br label %cond.end397, !dbg !7472

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !7472
  br label %cond.end399, !dbg !7472

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !7472
  br label %cond.end401, !dbg !7472

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !7472
  br label %cond.end403, !dbg !7472

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !7472
  br label %cond.end405, !dbg !7472

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !7472
  br label %cond.end407, !dbg !7472

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !7472
  br label %cond.end409, !dbg !7472

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !7472
  br label %cond.end411, !dbg !7472

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !7472
  br label %cond.end413, !dbg !7472

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !7472
  br label %cond.end415, !dbg !7472

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !7472
  br label %cond.end417, !dbg !7472

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !7472
  br label %cond.end419, !dbg !7472

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !7472
  br label %cond.end421, !dbg !7472

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !7472
  br label %cond.end423, !dbg !7472

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !7472
  br label %cond.end425, !dbg !7472

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !7472
  br label %cond.end427, !dbg !7472

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !7472
  br label %cond.end429, !dbg !7472

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !7472
  br label %cond.end431, !dbg !7472

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !7472
  br label %cond.end433, !dbg !7472

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !7472
  br label %cond.end435, !dbg !7472

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !7472
  br label %cond.end437, !dbg !7472

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !7472
  br label %cond.end440, !dbg !7472

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !7472

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !7472
  br label %cond.end444, !dbg !7472

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !7472
  %sub443 = sub i64 %72, 1, !dbg !7472
  %call = call i32 @__ilog2_u64(i64 %sub443) #12, !dbg !7472
  br label %cond.end444, !dbg !7472

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !7472
  %sub446 = sub i32 %cond445, 12, !dbg !7473
  %add = add i32 %sub446, 1, !dbg !7474
  store i32 %add, i32* %retval, align 4, !dbg !7475
  br label %return, !dbg !7475

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !7476
  %dec = add i64 %73, -1, !dbg !7476
  store i64 %dec, i64* %size.addr, align 8, !dbg !7476
  %74 = load i64, i64* %size.addr, align 8, !dbg !7477
  %shr = lshr i64 %74, 12, !dbg !7477
  store i64 %shr, i64* %size.addr, align 8, !dbg !7477
  %75 = load i64, i64* %size.addr, align 8, !dbg !7478
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !7455
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !7479
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !7480
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #8, !dbg !7479, !srcloc !7481
  store i32 %78, i32* %bitpos.i, align 4, !dbg !7479
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !7482
  %add.i = add i32 %79, 1, !dbg !7483
  store i32 %add.i, i32* %retval, align 4, !dbg !7484
  br label %return, !dbg !7484

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !7485
  ret i32 %80, !dbg !7485
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !7486 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7448, metadata !DIExpression()), !dbg !7490
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7454, metadata !DIExpression()), !dbg !7492
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7493, metadata !DIExpression()), !dbg !7494
  %0 = load i64, i64* %n.addr, align 8, !dbg !7495
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !7492
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !7496
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !7497
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #8, !dbg !7496, !srcloc !7481
  store i32 %3, i32* %bitpos.i, align 4, !dbg !7496
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !7498
  %add.i = add i32 %4, 1, !dbg !7499
  %sub = sub i32 %add.i, 1, !dbg !7500
  ret i32 %sub, !dbg !7501
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !7502 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !7506, metadata !DIExpression()), !dbg !7507
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !7508, metadata !DIExpression()), !dbg !7509
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7510, metadata !DIExpression()), !dbg !7511
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7512, metadata !DIExpression()), !dbg !7513
  %0 = load i8*, i8** %object.addr, align 8, !dbg !7514
  ret i8* %0, !dbg !7515
}

; Function Attrs: noredzone
declare dso_local i64 @find_first_zero_bit(i64*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !7516 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7517, metadata !DIExpression()), !dbg !7519
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7521, metadata !DIExpression()), !dbg !7522
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !3148, metadata !DIExpression()), !dbg !7523
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !3158, metadata !DIExpression()), !dbg !7525
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7526, metadata !DIExpression()), !dbg !7527
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7528, metadata !DIExpression()), !dbg !7529
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7530
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7531
  %div = sdiv i64 %1, 64, !dbg !7531
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7532
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7530
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7533
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7534
  %conv.i = trunc i64 %4 to i32, !dbg !7534
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #11, !dbg !7535
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7536
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7536
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #11, !dbg !7536
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7537
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7538
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !7539
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #9, !dbg !7541
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !7542

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !7543
  %12 = bitcast i64* %11 to i8*, !dbg !7543
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7543
  %shr.i = ashr i64 %13, 3, !dbg !7543
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !7543
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !7545
  %and.i = and i64 %14, 7, !dbg !7545
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !7545
  %shl.i = shl i32 1, %sh_prom.i, !dbg !7545
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #9, !dbg !7546, !srcloc !7547
  br label %arch_set_bit.exit, !dbg !7548

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !7549
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !7551
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #9, !dbg !7552, !srcloc !7553
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !7554
}

; Function Attrs: noredzone
declare dso_local void @kvfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !7555 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7556, metadata !DIExpression()), !dbg !7557
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7558, metadata !DIExpression()), !dbg !7559
  ret i1 true, !dbg !7560
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7561 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7564, metadata !DIExpression()), !dbg !7565
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7566, metadata !DIExpression()), !dbg !7567
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7568, metadata !DIExpression()), !dbg !7569
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7570
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7572
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7573
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #10, !dbg !7574
  br i1 %call, label %if.end, label %if.then, !dbg !7575

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !7576

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7577
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7578
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !7579
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !7580
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7581
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7582
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !7583
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !7584
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7585
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7586
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !7587
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !7588
  br label %do.body, !dbg !7589

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !7590

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !7592

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !7590

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7594
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7594
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !7594
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !7594
  br label %do.end7, !dbg !7594

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !7590

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !7596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7597 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7600, metadata !DIExpression()), !dbg !7601
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7602, metadata !DIExpression()), !dbg !7603
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7604, metadata !DIExpression()), !dbg !7605
  ret i1 true, !dbg !7606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !7607 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7608, metadata !DIExpression()), !dbg !7609
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7610
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #10, !dbg !7612
  br i1 %call, label %if.end, label %if.then, !dbg !7613

if.then:                                          ; preds = %entry
  br label %return, !dbg !7614

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7615
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7616
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7616
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7617
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7618
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7618
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #10, !dbg !7619
  br label %return, !dbg !7620

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7620
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !7621 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7624, metadata !DIExpression()), !dbg !7625
  ret i1 true, !dbg !7626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !7627 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7628, metadata !DIExpression()), !dbg !7629
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7630, metadata !DIExpression()), !dbg !7631
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7632
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7633
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7634
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !7635
  br label %do.body, !dbg !7636

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !7637

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !7639

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !7637

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7641
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7641
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7641
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !7641
  br label %do.end5, !dbg !7641

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !7637

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !7643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @alloc_pages_node(i32 %nid, i32 %gfp_mask, i32 %order) #0 !dbg !7644 {
entry:
  %nid.addr = alloca i32, align 4
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  store i32 %nid, i32* %nid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nid.addr, metadata !7647, metadata !DIExpression()), !dbg !7648
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !7649, metadata !DIExpression()), !dbg !7650
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !7651, metadata !DIExpression()), !dbg !7652
  %0 = load i32, i32* %nid.addr, align 4, !dbg !7653
  %cmp = icmp eq i32 %0, -1, !dbg !7655
  br i1 %cmp, label %if.then, label %if.end, !dbg !7656

if.then:                                          ; preds = %entry
  %call = call i32 @numa_mem_id() #10, !dbg !7657
  store i32 %call, i32* %nid.addr, align 4, !dbg !7658
  br label %if.end, !dbg !7659

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32, i32* %nid.addr, align 4, !dbg !7660
  %2 = load i32, i32* %gfp_mask.addr, align 4, !dbg !7661
  %3 = load i32, i32* %order.addr, align 4, !dbg !7662
  %call1 = call %struct.page* @__alloc_pages_node(i32 %1, i32 %2, i32 %3) #10, !dbg !7663
  ret %struct.page* %call1, !dbg !7664
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @numa_node_id() #0 !dbg !7665 {
entry:
  ret i32 0, !dbg !7667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @numa_mem_id() #0 !dbg !7668 {
entry:
  %call = call i32 @numa_node_id() #10, !dbg !7670
  ret i32 %call, !dbg !7671
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @__alloc_pages_node(i32 %nid, i32 %gfp_mask, i32 %order) #0 !dbg !7672 {
entry:
  %nid.addr = alloca i32, align 4
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  store i32 %nid, i32* %nid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nid.addr, metadata !7673, metadata !DIExpression()), !dbg !7674
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !7675, metadata !DIExpression()), !dbg !7676
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !7677, metadata !DIExpression()), !dbg !7678
  %0 = load i32, i32* %gfp_mask.addr, align 4, !dbg !7679
  %1 = load i32, i32* %order.addr, align 4, !dbg !7680
  %2 = load i32, i32* %nid.addr, align 4, !dbg !7681
  %call = call %struct.page* @__alloc_pages(i32 %0, i32 %1, i32 %2) #10, !dbg !7682
  ret %struct.page* %call, !dbg !7683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @__alloc_pages(i32 %gfp_mask, i32 %order, i32 %preferred_nid) #0 !dbg !7684 {
entry:
  %gfp_mask.addr = alloca i32, align 4
  %order.addr = alloca i32, align 4
  %preferred_nid.addr = alloca i32, align 4
  store i32 %gfp_mask, i32* %gfp_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_mask.addr, metadata !7687, metadata !DIExpression()), !dbg !7688
  store i32 %order, i32* %order.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr, metadata !7689, metadata !DIExpression()), !dbg !7690
  store i32 %preferred_nid, i32* %preferred_nid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %preferred_nid.addr, metadata !7691, metadata !DIExpression()), !dbg !7692
  %0 = load i32, i32* %gfp_mask.addr, align 4, !dbg !7693
  %1 = load i32, i32* %order.addr, align 4, !dbg !7694
  %2 = load i32, i32* %preferred_nid.addr, align 4, !dbg !7695
  %call = call %struct.page* @__alloc_pages_nodemask(i32 %0, i32 %1, i32 %2, %struct.nodemask_t* null) #10, !dbg !7696
  ret %struct.page* %call, !dbg !7697
}

; Function Attrs: noredzone
declare dso_local %struct.page* @__alloc_pages_nodemask(i32, i32, i32, %struct.nodemask_t*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @compound_head(%struct.page* %page) #0 !dbg !7698 {
entry:
  %retval = alloca %struct.page*, align 8
  %page.addr = alloca %struct.page*, align 8
  %head = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !7701, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.declare(metadata i64* %head, metadata !7703, metadata !DIExpression()), !dbg !7704
  br label %do.body, !dbg !7705

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7707

do.end:                                           ; preds = %do.body
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7705
  %1 = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 1, !dbg !7705
  %2 = bitcast %union.anon* %1 to %struct.anon.53*, !dbg !7705
  %compound_head = getelementptr inbounds %struct.anon.53, %struct.anon.53* %2, i32 0, i32 0, !dbg !7705
  %3 = load volatile i64, i64* %compound_head, align 8, !dbg !7705
  store i64 %3, i64* %tmp, align 8, !dbg !7707
  %4 = load i64, i64* %tmp, align 8, !dbg !7705
  store i64 %4, i64* %head, align 8, !dbg !7704
  %5 = load i64, i64* %head, align 8, !dbg !7709
  %and = and i64 %5, 1, !dbg !7709
  %tobool = icmp ne i64 %and, 0, !dbg !7709
  %lnot = xor i1 %tobool, true, !dbg !7709
  %lnot1 = xor i1 %lnot, true, !dbg !7709
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7709
  %conv = sext i32 %lnot.ext to i64, !dbg !7709
  %tobool2 = icmp ne i64 %conv, 0, !dbg !7709
  br i1 %tobool2, label %if.then, label %if.end, !dbg !7711

if.then:                                          ; preds = %do.end
  %6 = load i64, i64* %head, align 8, !dbg !7712
  %sub = sub i64 %6, 1, !dbg !7713
  %7 = inttoptr i64 %sub to %struct.page*, !dbg !7714
  store %struct.page* %7, %struct.page** %retval, align 8, !dbg !7715
  br label %return, !dbg !7715

if.end:                                           ; preds = %do.end
  %8 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7716
  store %struct.page* %8, %struct.page** %retval, align 8, !dbg !7717
  br label %return, !dbg !7717

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct.page*, %struct.page** %retval, align 8, !dbg !7718
  ret %struct.page* %9, !dbg !7718
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @page_ref_inc(%struct.page* %page) #0 !dbg !7719 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6899, metadata !DIExpression()), !dbg !7721
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6911, metadata !DIExpression()), !dbg !7724
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6915, metadata !DIExpression()), !dbg !7726
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6917, metadata !DIExpression()), !dbg !7727
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !7728, metadata !DIExpression()), !dbg !7729
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7730
  %_refcount = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 3, !dbg !7731
  store %struct.atomic_t* %_refcount, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7732
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !7732
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7733
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !7734
  %conv.i.i = trunc i64 %4 to i32, !dbg !7734
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #11, !dbg !7735
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7736
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !7736
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #11, !dbg !7736
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7737
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7738
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !7739
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #9, !dbg !7740, !srcloc !6957
  ret void, !dbg !7741
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @page_is_devmap_managed(%struct.page* %page) #0 !dbg !7742 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !7745, metadata !DIExpression()), !dbg !7746
  ret i1 false, !dbg !7747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @put_devmap_managed_page(%struct.page* %page) #0 !dbg !7748 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !7749, metadata !DIExpression()), !dbg !7750
  ret void, !dbg !7751
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @put_page_testzero(%struct.page* %page) #0 !dbg !7752 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !7753, metadata !DIExpression()), !dbg !7754
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7755
  %call = call i32 @page_ref_dec_and_test(%struct.page* %0) #10, !dbg !7756
  ret i32 %call, !dbg !7757
}

; Function Attrs: noredzone
declare dso_local void @__put_page(%struct.page*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @page_ref_dec_and_test(%struct.page* %page) #0 !dbg !7758 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7759, metadata !DIExpression()), !dbg !7763
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !7767, metadata !DIExpression()), !dbg !7769
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6911, metadata !DIExpression()), !dbg !7770
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6915, metadata !DIExpression()), !dbg !7772
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7773, metadata !DIExpression()), !dbg !7774
  %page.addr = alloca %struct.page*, align 8
  %ret = alloca i32, align 4
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !7775, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7777, metadata !DIExpression()), !dbg !7778
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7779
  %_refcount = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 3, !dbg !7780
  store %struct.atomic_t* %_refcount, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7781
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !7781
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7782
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !7783
  %conv.i.i = trunc i64 %4 to i32, !dbg !7783
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #11, !dbg !7784
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7785
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !7785
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #11, !dbg !7785
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7786
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7769
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !7769
  %9 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #9, !dbg !7769, !srcloc !7787
  store i8 %9, i8* %c.i.i, align 1, !dbg !7769
  %10 = load i8, i8* %c.i.i, align 1, !dbg !7769
  %tobool.i.i = trunc i8 %10 to i1, !dbg !7769
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !7769
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !7769
  %11 = load i8, i8* %tmp.i.i, align 1, !dbg !7769
  %tobool1.i.i = trunc i8 %11 to i1, !dbg !7769
  %conv = zext i1 %tobool1.i.i to i32, !dbg !7788
  store i32 %conv, i32* %ret, align 4, !dbg !7778
  %12 = load i32, i32* %ret, align 4, !dbg !7789
  ret i32 %12, !dbg !7790
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @wbinvd() #0 !dbg !7791 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7793, metadata !DIExpression()), !dbg !7795
  %0 = load i64, i64* %__edi, align 8, !dbg !7795
  store i64 %0, i64* %__edi, align 8, !dbg !7795
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7796, metadata !DIExpression()), !dbg !7795
  %1 = load i64, i64* %__esi, align 8, !dbg !7795
  store i64 %1, i64* %__esi, align 8, !dbg !7795
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7797, metadata !DIExpression()), !dbg !7795
  %2 = load i64, i64* %__edx, align 8, !dbg !7795
  store i64 %2, i64* %__edx, align 8, !dbg !7795
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7798, metadata !DIExpression()), !dbg !7795
  %3 = load i64, i64* %__ecx, align 8, !dbg !7795
  store i64 %3, i64* %__ecx, align 8, !dbg !7795
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7799, metadata !DIExpression()), !dbg !7795
  %4 = load i64, i64* %__eax, align 8, !dbg !7795
  store i64 %4, i64* %__eax, align 8, !dbg !7795
  %5 = load void ()*, void ()** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 2, i32 21), align 8, !dbg !7795
  %6 = call i64 @llvm.read_register.i64(metadata !3113), !dbg !7795
  %7 = call { i64, i64, i64, i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${6:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${5:c}\0A  .byte 772b-771b\0A  .short ${7:c}\0A.popsection\0A", "={di},={si},={dx},={cx},={rsp},i,i,i,4,~{memory},~{cc},~{rax},~{r8},~{r9},~{r10},~{r11},~{dirflag},~{fpsr},~{flags}"(i64 24, void ()** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 2, i32 21), i32 511, i64 %6) #9, !dbg !7795, !srcloc !7800
  %asmresult = extractvalue { i64, i64, i64, i64, i64 } %7, 0, !dbg !7795
  %asmresult1 = extractvalue { i64, i64, i64, i64, i64 } %7, 1, !dbg !7795
  %asmresult2 = extractvalue { i64, i64, i64, i64, i64 } %7, 2, !dbg !7795
  %asmresult3 = extractvalue { i64, i64, i64, i64, i64 } %7, 3, !dbg !7795
  %asmresult4 = extractvalue { i64, i64, i64, i64, i64 } %7, 4, !dbg !7795
  store i64 %asmresult, i64* %__edi, align 8, !dbg !7795
  store i64 %asmresult1, i64* %__esi, align 8, !dbg !7795
  store i64 %asmresult2, i64* %__edx, align 8, !dbg !7795
  store i64 %asmresult3, i64* %__ecx, align 8, !dbg !7795
  call void @llvm.write_register.i64(metadata !3113, i64 %asmresult4), !dbg !7795
  ret void, !dbg !7801
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #8

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #9

; Function Attrs: noredzone
declare dso_local void @pcibios_resource_to_bus(%struct.pci_bus*, %struct.pci_bus_region*, %struct.resource*) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { noredzone }
attributes #11 = { noredzone nounwind }
attributes #12 = { noredzone nounwind readnone }
attributes #13 = { cold noredzone }
attributes #14 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!3113}
!llvm.module.flags = !{!3114, !3115, !3116, !3117}
!llvm.ident = !{!3118}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "agp_memory_reserved", scope: !2, file: !3, line: 48, type: !165, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !157, globals: !3103, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/char/agp/generic.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !14, !20, !25, !31, !40, !48, !54, !61, !68, !74, !80, !87, !95, !101, !106, !111, !118}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "aper_size_type", file: !6, line: 45, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "drivers/char/agp/agp.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13}
!9 = !DIEnumerator(name: "U8_APER_SIZE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "U16_APER_SIZE", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "U32_APER_SIZE", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "LVL2_APER_SIZE", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "FIXED_APER_SIZE", value: 4, isUnsigned: true)
!14 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !15, line: 54, baseType: !7, size: 32, elements: !16)
!15 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!16 = !{!17, !18, !19}
!17 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!19 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !21, line: 65, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!22 = !{!23, !24}
!23 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !26, line: 546, baseType: !7, size: 32, elements: !27)
!26 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!27 = !{!28, !29, !30}
!28 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!29 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !32, line: 296, baseType: !7, size: 32, elements: !33)
!32 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!33 = !{!34, !35, !36, !37, !38, !39}
!34 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!35 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!36 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!37 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!38 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!39 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !41, line: 9, baseType: !7, size: 32, elements: !42)
!41 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!42 = !{!43, !44, !45, !46, !47}
!43 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!44 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!45 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!46 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!47 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !49, line: 16, baseType: !7, size: 32, elements: !50)
!49 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!50 = !{!51, !52, !53}
!51 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!52 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!53 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !55, line: 15, baseType: !7, size: 32, elements: !56)
!55 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!56 = !{!57, !58, !59, !60}
!57 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!58 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!59 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!60 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !62, line: 59, baseType: !7, size: 32, elements: !63)
!62 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!63 = !{!64, !65, !66, !67}
!64 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!67 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !69, line: 26, baseType: !7, size: 32, elements: !70)
!69 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!70 = !{!71, !72, !73}
!71 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!72 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!73 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !75, line: 44, baseType: !7, size: 32, elements: !76)
!75 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!76 = !{!77, !78, !79}
!77 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!78 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!79 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !81, line: 343, baseType: !7, size: 32, elements: !82)
!81 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!82 = !{!83, !84, !85, !86}
!83 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!84 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!85 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!86 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !88, line: 524, baseType: !7, size: 32, elements: !89)
!88 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!89 = !{!90, !91, !92, !93, !94}
!90 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!93 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!94 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !88, line: 502, baseType: !7, size: 32, elements: !96)
!96 = !{!97, !98, !99, !100}
!97 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chipset_type", file: !102, line: 35, baseType: !7, size: 32, elements: !103)
!102 = !DIFile(filename: "./include/linux/agp_backend.h", directory: "/home/lizy2001/genbc/linux")
!103 = !{!104, !105}
!104 = !DIEnumerator(name: "NOT_SUPPORTED", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "SUPPORTED", value: 1, isUnsigned: true)
!106 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !107, line: 10, baseType: !7, size: 32, elements: !108)
!107 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!108 = !{!109, !110}
!109 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!110 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!111 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !112, line: 305, baseType: !7, size: 32, elements: !113)
!112 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!113 = !{!114, !115, !116, !117}
!114 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!115 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!116 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!117 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pageflags", file: !119, line: 104, baseType: !7, size: 32, elements: !120)
!119 = !DIFile(filename: "./include/linux/page-flags.h", directory: "/home/lizy2001/genbc/linux")
!120 = !{!121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!121 = !DIEnumerator(name: "PG_locked", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "PG_referenced", value: 1, isUnsigned: true)
!123 = !DIEnumerator(name: "PG_uptodate", value: 2, isUnsigned: true)
!124 = !DIEnumerator(name: "PG_dirty", value: 3, isUnsigned: true)
!125 = !DIEnumerator(name: "PG_lru", value: 4, isUnsigned: true)
!126 = !DIEnumerator(name: "PG_active", value: 5, isUnsigned: true)
!127 = !DIEnumerator(name: "PG_workingset", value: 6, isUnsigned: true)
!128 = !DIEnumerator(name: "PG_waiters", value: 7, isUnsigned: true)
!129 = !DIEnumerator(name: "PG_error", value: 8, isUnsigned: true)
!130 = !DIEnumerator(name: "PG_slab", value: 9, isUnsigned: true)
!131 = !DIEnumerator(name: "PG_owner_priv_1", value: 10, isUnsigned: true)
!132 = !DIEnumerator(name: "PG_arch_1", value: 11, isUnsigned: true)
!133 = !DIEnumerator(name: "PG_reserved", value: 12, isUnsigned: true)
!134 = !DIEnumerator(name: "PG_private", value: 13, isUnsigned: true)
!135 = !DIEnumerator(name: "PG_private_2", value: 14, isUnsigned: true)
!136 = !DIEnumerator(name: "PG_writeback", value: 15, isUnsigned: true)
!137 = !DIEnumerator(name: "PG_head", value: 16, isUnsigned: true)
!138 = !DIEnumerator(name: "PG_mappedtodisk", value: 17, isUnsigned: true)
!139 = !DIEnumerator(name: "PG_reclaim", value: 18, isUnsigned: true)
!140 = !DIEnumerator(name: "PG_swapbacked", value: 19, isUnsigned: true)
!141 = !DIEnumerator(name: "PG_unevictable", value: 20, isUnsigned: true)
!142 = !DIEnumerator(name: "PG_mlocked", value: 21, isUnsigned: true)
!143 = !DIEnumerator(name: "PG_uncached", value: 22, isUnsigned: true)
!144 = !DIEnumerator(name: "PG_arch_2", value: 23, isUnsigned: true)
!145 = !DIEnumerator(name: "__NR_PAGEFLAGS", value: 24, isUnsigned: true)
!146 = !DIEnumerator(name: "PG_checked", value: 10, isUnsigned: true)
!147 = !DIEnumerator(name: "PG_swapcache", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "PG_fscache", value: 14, isUnsigned: true)
!149 = !DIEnumerator(name: "PG_pinned", value: 10, isUnsigned: true)
!150 = !DIEnumerator(name: "PG_savepinned", value: 3, isUnsigned: true)
!151 = !DIEnumerator(name: "PG_foreign", value: 10, isUnsigned: true)
!152 = !DIEnumerator(name: "PG_xen_remapped", value: 10, isUnsigned: true)
!153 = !DIEnumerator(name: "PG_slob_free", value: 13, isUnsigned: true)
!154 = !DIEnumerator(name: "PG_double_map", value: 6, isUnsigned: true)
!155 = !DIEnumerator(name: "PG_isolated", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "PG_reported", value: 2, isUnsigned: true)
!157 = !{!158, !160, !161, !174, !184, !193, !199, !191, !205, !207, !212, !1885, !2957, !3087, !3089, !3090, !3093, !3095, !864, !3096, !165, !3098, !3101}
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !159, line: 148, baseType: !7)
!159 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aper_size_info_8", file: !6, line: 64, size: 128, elements: !163)
!163 = !{!164, !166, !167, !168}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !162, file: !6, line: 65, baseType: !165, size: 32)
!165 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "num_entries", scope: !162, file: !6, line: 66, baseType: !165, size: 32, offset: 32)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "page_order", scope: !162, file: !6, line: 67, baseType: !165, size: 32, offset: 64)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "size_value", scope: !162, file: !6, line: 68, baseType: !169, size: 8, offset: 96)
!169 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !170, line: 17, baseType: !171)
!170 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !172, line: 21, baseType: !173)
!172 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!173 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aper_size_info_16", file: !6, line: 71, size: 128, elements: !176)
!176 = !{!177, !178, !179, !180}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !175, file: !6, line: 72, baseType: !165, size: 32)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "num_entries", scope: !175, file: !6, line: 73, baseType: !165, size: 32, offset: 32)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "page_order", scope: !175, file: !6, line: 74, baseType: !165, size: 32, offset: 64)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "size_value", scope: !175, file: !6, line: 75, baseType: !181, size: 16, offset: 96)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !170, line: 19, baseType: !182)
!182 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !172, line: 24, baseType: !183)
!183 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aper_size_info_32", file: !6, line: 78, size: 128, elements: !186)
!186 = !{!187, !188, !189, !190}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !185, file: !6, line: 79, baseType: !165, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "num_entries", scope: !185, file: !6, line: 80, baseType: !165, size: 32, offset: 32)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "page_order", scope: !185, file: !6, line: 81, baseType: !165, size: 32, offset: 64)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "size_value", scope: !185, file: !6, line: 82, baseType: !191, size: 32, offset: 96)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !170, line: 21, baseType: !192)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !172, line: 27, baseType: !7)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64)
!194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aper_size_info_lvl2", file: !6, line: 85, size: 96, elements: !195)
!195 = !{!196, !197, !198}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !194, file: !6, line: 86, baseType: !165, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "num_entries", scope: !194, file: !6, line: 87, baseType: !165, size: 32, offset: 32)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "size_value", scope: !194, file: !6, line: 88, baseType: !191, size: 32, offset: 64)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "aper_size_info_fixed", file: !6, line: 91, size: 96, elements: !201)
!201 = !{!202, !203, !204}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !200, file: !6, line: 92, baseType: !165, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "num_entries", scope: !200, file: !6, line: 93, baseType: !165, size: 32, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "page_order", scope: !200, file: !6, line: 94, baseType: !165, size: 32, offset: 64)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!206 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !209, line: 68, size: 512, align: 128, elements: !210)
!209 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!210 = !{!211, !213, !3079, !3086}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !208, file: !209, line: 69, baseType: !212, size: 64)
!212 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!213 = !DIDerivedType(tag: DW_TAG_member, scope: !208, file: !209, line: 77, baseType: !214, size: 320, offset: 64)
!214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !208, file: !209, line: 77, size: 320, elements: !215)
!215 = !{!216, !2953, !2958, !2984, !2992, !2998, !3010, !3078}
!216 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !209, line: 78, baseType: !217, size: 320)
!217 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !214, file: !209, line: 78, size: 320, elements: !218)
!218 = !{!219, !225, !2951, !2952}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !217, file: !209, line: 84, baseType: !220, size: 128)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !159, line: 178, size: 128, elements: !221)
!221 = !{!222, !224}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !220, file: !159, line: 179, baseType: !223, size: 64)
!223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !220, file: !159, line: 179, baseType: !223, size: 64, offset: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !217, file: !209, line: 86, baseType: !226, size: 64, offset: 128)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !32, line: 451, size: 1216, align: 64, elements: !228)
!228 = !{!229, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2946, !2947, !2948, !2949, !2950}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !227, file: !32, line: 452, baseType: !230, size: 64)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !32, line: 610, size: 4224, elements: !232)
!232 = !{!233, !235, !236, !245, !252, !253, !2771, !2772, !2773, !2774, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2815, !2823, !2824, !2825, !2835, !2836, !2837, !2838}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !231, file: !32, line: 611, baseType: !234, size: 16)
!234 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !159, line: 19, baseType: !183)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !231, file: !32, line: 612, baseType: !183, size: 16, offset: 16)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !231, file: !32, line: 613, baseType: !237, size: 32, offset: 32)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !238, line: 23, baseType: !239)
!238 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !238, line: 21, size: 32, elements: !240)
!240 = !{!241}
!241 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !239, file: !238, line: 22, baseType: !242, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !159, line: 32, baseType: !243)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !244, line: 49, baseType: !7)
!244 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!245 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !231, file: !32, line: 614, baseType: !246, size: 32, offset: 64)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !238, line: 28, baseType: !247)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !238, line: 26, size: 32, elements: !248)
!248 = !{!249}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !247, file: !238, line: 27, baseType: !250, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !159, line: 33, baseType: !251)
!251 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !244, line: 50, baseType: !7)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !231, file: !32, line: 615, baseType: !7, size: 32, offset: 96)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !231, file: !32, line: 622, baseType: !254, size: 64, offset: 128)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!255 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !256)
!256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !32, line: 1864, size: 1536, align: 512, elements: !257)
!257 = !{!258, !2645, !2658, !2662, !2668, !2672, !2676, !2680, !2684, !2688, !2692, !2693, !2697, !2701, !2721, !2747, !2751, !2757, !2762, !2766, !2767}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !256, file: !32, line: 1865, baseType: !259, size: 64)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!260 = !DISubroutineType(types: !261)
!261 = !{!262, !230, !262, !7}
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !264, line: 89, size: 1536, elements: !265)
!264 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!265 = !{!266, !267, !277, !285, !286, !304, !305, !309, !336, !408, !2629, !2630, !2631, !2637, !2638, !2639}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !263, file: !264, line: 91, baseType: !7, size: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !263, file: !264, line: 92, baseType: !268, size: 32, offset: 32)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !269, line: 277, baseType: !270)
!269 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !269, line: 277, size: 32, elements: !271)
!271 = !{!272}
!272 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !270, file: !269, line: 277, baseType: !273, size: 32)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !269, line: 70, baseType: !274)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !269, line: 65, size: 32, elements: !275)
!275 = !{!276}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !274, file: !269, line: 66, baseType: !7, size: 32)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !263, file: !264, line: 93, baseType: !278, size: 128, offset: 64)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !279, line: 38, size: 128, elements: !280)
!279 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!280 = !{!281, !283}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !278, file: !279, line: 39, baseType: !282, size: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !278, file: !279, line: 39, baseType: !284, size: 64, offset: 64)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !263, file: !264, line: 94, baseType: !262, size: 64, offset: 192)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !263, file: !264, line: 95, baseType: !287, size: 128, offset: 256)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !264, line: 47, size: 128, elements: !288)
!288 = !{!289, !301}
!289 = !DIDerivedType(tag: DW_TAG_member, scope: !287, file: !264, line: 48, baseType: !290, size: 64)
!290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !287, file: !264, line: 48, size: 64, elements: !291)
!291 = !{!292, !297}
!292 = !DIDerivedType(tag: DW_TAG_member, scope: !290, file: !264, line: 49, baseType: !293, size: 64)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !290, file: !264, line: 49, size: 64, elements: !294)
!294 = !{!295, !296}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !293, file: !264, line: 50, baseType: !191, size: 32)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !293, file: !264, line: 50, baseType: !191, size: 32, offset: 32)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !290, file: !264, line: 52, baseType: !298, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !170, line: 23, baseType: !299)
!299 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !172, line: 31, baseType: !300)
!300 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !287, file: !264, line: 54, baseType: !302, size: 64, offset: 64)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !263, file: !264, line: 96, baseType: !230, size: 64, offset: 384)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !263, file: !264, line: 98, baseType: !306, size: 256, offset: 448)
!306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !173, size: 256, elements: !307)
!307 = !{!308}
!308 = !DISubrange(count: 32)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !263, file: !264, line: 101, baseType: !310, size: 32, offset: 704)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !311, line: 25, size: 32, elements: !312)
!311 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!312 = !{!313}
!313 = !DIDerivedType(tag: DW_TAG_member, scope: !310, file: !311, line: 26, baseType: !314, size: 32)
!314 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !310, file: !311, line: 26, size: 32, elements: !315)
!315 = !{!316}
!316 = !DIDerivedType(tag: DW_TAG_member, scope: !314, file: !311, line: 30, baseType: !317, size: 32)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !314, file: !311, line: 30, size: 32, elements: !318)
!318 = !{!319, !335}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !317, file: !311, line: 31, baseType: !320)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !321, line: 83, baseType: !322)
!321 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !321, line: 71, elements: !323)
!323 = !{!324}
!324 = !DIDerivedType(tag: DW_TAG_member, scope: !322, file: !321, line: 72, baseType: !325)
!325 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !322, file: !321, line: 72, elements: !326)
!326 = !{!327}
!327 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !325, file: !321, line: 73, baseType: !328)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !321, line: 20, elements: !329)
!329 = !{!330}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !328, file: !321, line: 21, baseType: !331)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !332, line: 25, baseType: !333)
!332 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !332, line: 25, elements: !334)
!334 = !{}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !317, file: !311, line: 32, baseType: !165, size: 32)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !263, file: !264, line: 102, baseType: !337, size: 64, offset: 768)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !339)
!339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !264, line: 135, size: 1024, align: 512, elements: !340)
!340 = !{!341, !345, !346, !353, !361, !365, !369, !373, !374, !378, !382, !394, !402}
!341 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !339, file: !264, line: 136, baseType: !342, size: 64)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 64)
!343 = !DISubroutineType(types: !344)
!344 = !{!165, !262, !7}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !339, file: !264, line: 137, baseType: !342, size: 64, offset: 64)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !339, file: !264, line: 138, baseType: !347, size: 64, offset: 128)
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!348 = !DISubroutineType(types: !349)
!349 = !{!165, !350, !352}
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !263)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !339, file: !264, line: 139, baseType: !354, size: 64, offset: 192)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = !DISubroutineType(types: !356)
!356 = !{!165, !350, !7, !357, !359}
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !206)
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64)
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !287)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !339, file: !264, line: 141, baseType: !362, size: 64, offset: 256)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!363 = !DISubroutineType(types: !364)
!364 = !{!165, !350}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !339, file: !264, line: 142, baseType: !366, size: 64, offset: 320)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DISubroutineType(types: !368)
!368 = !{!165, !262}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !339, file: !264, line: 143, baseType: !370, size: 64, offset: 384)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = !DISubroutineType(types: !372)
!372 = !{null, !262}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !339, file: !264, line: 144, baseType: !370, size: 64, offset: 448)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !339, file: !264, line: 145, baseType: !375, size: 64, offset: 512)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = !DISubroutineType(types: !377)
!377 = !{null, !262, !230}
!378 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !339, file: !264, line: 146, baseType: !379, size: 64, offset: 576)
!379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64)
!380 = !DISubroutineType(types: !381)
!381 = !{!205, !262, !205, !165}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !339, file: !264, line: 147, baseType: !383, size: 64, offset: 640)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = !DISubroutineType(types: !385)
!385 = !{!386, !388}
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !264, line: 18, flags: DIFlagFwdDecl)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !390, line: 8, size: 128, elements: !391)
!390 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!391 = !{!392, !393}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !389, file: !390, line: 9, baseType: !386, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !389, file: !390, line: 10, baseType: !262, size: 64, offset: 64)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !339, file: !264, line: 148, baseType: !395, size: 64, offset: 704)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64)
!396 = !DISubroutineType(types: !397)
!397 = !{!165, !398, !400}
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !389)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !159, line: 30, baseType: !401)
!401 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !339, file: !264, line: 149, baseType: !403, size: 64, offset: 768)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!404 = !DISubroutineType(types: !405)
!405 = !{!262, !262, !406}
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !231)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !263, file: !264, line: 103, baseType: !409, size: 64, offset: 832)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !32, line: 1416, size: 9472, elements: !411)
!411 = !{!412, !413, !416, !417, !418, !422, !474, !558, !660, !743, !747, !748, !749, !750, !751, !760, !761, !762, !767, !771, !772, !775, !779, !782, !783, !784, !825, !2558, !2559, !2560, !2561, !2562, !2563, !2566, !2568, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2596, !2597, !2598, !2599, !2600, !2603, !2604, !2605, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !410, file: !32, line: 1417, baseType: !220, size: 128)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !410, file: !32, line: 1418, baseType: !414, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !159, line: 16, baseType: !415)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !159, line: 13, baseType: !191)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !410, file: !32, line: 1419, baseType: !173, size: 8, offset: 160)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !410, file: !32, line: 1420, baseType: !212, size: 64, offset: 192)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !410, file: !32, line: 1421, baseType: !419, size: 64, offset: 256)
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !159, line: 46, baseType: !420)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !244, line: 88, baseType: !421)
!421 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !410, file: !32, line: 1422, baseType: !423, size: 64, offset: 320)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !32, line: 2228, size: 576, elements: !425)
!425 = !{!426, !427, !428, !435, !439, !443, !447, !451, !452, !462, !465, !466, !467, !471, !472, !473}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !424, file: !32, line: 2229, baseType: !357, size: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !424, file: !32, line: 2230, baseType: !165, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !424, file: !32, line: 2238, baseType: !429, size: 64, offset: 128)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = !DISubroutineType(types: !431)
!431 = !{!165, !432}
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!433 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !434, line: 28, flags: DIFlagFwdDecl)
!434 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!435 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !424, file: !32, line: 2239, baseType: !436, size: 64, offset: 192)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !438)
!438 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !32, line: 70, flags: DIFlagFwdDecl)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !424, file: !32, line: 2240, baseType: !440, size: 64, offset: 256)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!441 = !DISubroutineType(types: !442)
!442 = !{!262, !423, !165, !357, !160}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !424, file: !32, line: 2242, baseType: !444, size: 64, offset: 320)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = !DISubroutineType(types: !446)
!446 = !{null, !409}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !424, file: !32, line: 2243, baseType: !448, size: 64, offset: 384)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !450, line: 76, flags: DIFlagFwdDecl)
!450 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!451 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !424, file: !32, line: 2244, baseType: !423, size: 64, offset: 448)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !424, file: !32, line: 2245, baseType: !453, size: 64, offset: 512)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !159, line: 182, size: 64, elements: !454)
!454 = !{!455}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !453, file: !159, line: 183, baseType: !456, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !159, line: 186, size: 128, elements: !458)
!458 = !{!459, !460}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !457, file: !159, line: 187, baseType: !456, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !457, file: !159, line: 187, baseType: !461, size: 64, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !424, file: !32, line: 2247, baseType: !463, offset: 576)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !464, line: 187, elements: !334)
!464 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!465 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !424, file: !32, line: 2248, baseType: !463, offset: 576)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !424, file: !32, line: 2249, baseType: !463, offset: 576)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !424, file: !32, line: 2250, baseType: !468, offset: 576)
!468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, elements: !469)
!469 = !{!470}
!470 = !DISubrange(count: 3)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !424, file: !32, line: 2252, baseType: !463, offset: 576)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !424, file: !32, line: 2253, baseType: !463, offset: 576)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !424, file: !32, line: 2254, baseType: !463, offset: 576)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !410, file: !32, line: 1423, baseType: !475, size: 64, offset: 384)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !477)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !32, line: 1935, size: 1472, elements: !478)
!478 = !{!479, !483, !487, !488, !492, !498, !502, !503, !504, !508, !512, !513, !514, !515, !521, !526, !527, !534, !535, !536, !537, !541, !557}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !477, file: !32, line: 1936, baseType: !480, size: 64)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = !DISubroutineType(types: !482)
!482 = !{!230, !409}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !477, file: !32, line: 1937, baseType: !484, size: 64, offset: 64)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = !DISubroutineType(types: !486)
!486 = !{null, !230}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !477, file: !32, line: 1938, baseType: !484, size: 64, offset: 128)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !477, file: !32, line: 1940, baseType: !489, size: 64, offset: 192)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DISubroutineType(types: !491)
!491 = !{null, !230, !165}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !477, file: !32, line: 1941, baseType: !493, size: 64, offset: 256)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DISubroutineType(types: !495)
!495 = !{!165, !230, !496}
!496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !497, size: 64)
!497 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !26, line: 40, flags: DIFlagFwdDecl)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !477, file: !32, line: 1942, baseType: !499, size: 64, offset: 320)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = !DISubroutineType(types: !501)
!501 = !{!165, !230}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !477, file: !32, line: 1943, baseType: !484, size: 64, offset: 384)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !477, file: !32, line: 1944, baseType: !444, size: 64, offset: 448)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !477, file: !32, line: 1945, baseType: !505, size: 64, offset: 512)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = !DISubroutineType(types: !507)
!507 = !{!165, !409, !165}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !477, file: !32, line: 1946, baseType: !509, size: 64, offset: 576)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = !DISubroutineType(types: !511)
!511 = !{!165, !409}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !477, file: !32, line: 1947, baseType: !509, size: 64, offset: 640)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !477, file: !32, line: 1948, baseType: !509, size: 64, offset: 704)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !477, file: !32, line: 1949, baseType: !509, size: 64, offset: 768)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !477, file: !32, line: 1950, baseType: !516, size: 64, offset: 832)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = !DISubroutineType(types: !518)
!518 = !{!165, !262, !519}
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !32, line: 57, flags: DIFlagFwdDecl)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !477, file: !32, line: 1951, baseType: !522, size: 64, offset: 896)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!523 = !DISubroutineType(types: !524)
!524 = !{!165, !409, !525, !205}
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !477, file: !32, line: 1952, baseType: !444, size: 64, offset: 960)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !477, file: !32, line: 1954, baseType: !528, size: 64, offset: 1024)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = !DISubroutineType(types: !530)
!530 = !{!165, !531, !262}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !533, line: 539, flags: DIFlagFwdDecl)
!533 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!534 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !477, file: !32, line: 1955, baseType: !528, size: 64, offset: 1088)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !477, file: !32, line: 1956, baseType: !528, size: 64, offset: 1152)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !477, file: !32, line: 1957, baseType: !528, size: 64, offset: 1216)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !477, file: !32, line: 1963, baseType: !538, size: 64, offset: 1280)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = !DISubroutineType(types: !540)
!540 = !{!165, !409, !207, !158}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !477, file: !32, line: 1964, baseType: !542, size: 64, offset: 1344)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = !DISubroutineType(types: !544)
!544 = !{!545, !409, !546}
!545 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !548, line: 12, size: 256, elements: !549)
!548 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!549 = !{!550, !551, !552, !553, !554}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !547, file: !548, line: 13, baseType: !158, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !547, file: !548, line: 16, baseType: !165, size: 32, offset: 32)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !547, file: !548, line: 23, baseType: !212, size: 64, offset: 64)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !547, file: !548, line: 30, baseType: !212, size: 64, offset: 128)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !547, file: !548, line: 33, baseType: !555, size: 64, offset: 192)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !209, line: 27, flags: DIFlagFwdDecl)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !477, file: !32, line: 1966, baseType: !542, size: 64, offset: 1408)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !410, file: !32, line: 1424, baseType: !559, size: 64, offset: 448)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !561)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !15, line: 322, size: 704, elements: !562)
!562 = !{!563, !629, !633, !637, !638, !639, !640, !641, !646, !651, !655}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !561, file: !15, line: 323, baseType: !564, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DISubroutineType(types: !566)
!566 = !{!165, !567}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !15, line: 294, size: 1600, elements: !569)
!569 = !{!570, !571, !572, !573, !574, !589, !590, !595, !596, !612, !613, !614}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !568, file: !15, line: 295, baseType: !457, size: 128)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !568, file: !15, line: 296, baseType: !220, size: 128, offset: 128)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !568, file: !15, line: 297, baseType: !220, size: 128, offset: 256)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !568, file: !15, line: 298, baseType: !220, size: 128, offset: 384)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !568, file: !15, line: 299, baseType: !575, size: 192, offset: 512)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !576, line: 53, size: 192, elements: !577)
!576 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!577 = !{!578, !587, !588}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !575, file: !576, line: 54, baseType: !579, size: 64)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !580, line: 13, baseType: !581)
!580 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !159, line: 175, baseType: !582)
!582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !159, line: 173, size: 64, elements: !583)
!583 = !{!584}
!584 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !582, file: !159, line: 174, baseType: !585, size: 64)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !170, line: 22, baseType: !586)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !172, line: 30, baseType: !421)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !575, file: !576, line: 55, baseType: !320, offset: 64)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !575, file: !576, line: 59, baseType: !220, size: 128, offset: 64)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !568, file: !15, line: 300, baseType: !320, offset: 704)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !568, file: !15, line: 301, baseType: !591, size: 32, offset: 704)
!591 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !159, line: 168, baseType: !592)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !159, line: 166, size: 32, elements: !593)
!593 = !{!594}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !592, file: !159, line: 167, baseType: !165, size: 32)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !568, file: !15, line: 302, baseType: !409, size: 64, offset: 768)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !568, file: !15, line: 303, baseType: !597, size: 64, offset: 832)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !15, line: 68, size: 64, elements: !598)
!598 = !{!599, !611}
!599 = !DIDerivedType(tag: DW_TAG_member, scope: !597, file: !15, line: 69, baseType: !600, size: 32)
!600 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !597, file: !15, line: 69, size: 32, elements: !601)
!601 = !{!602, !603, !604}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !600, file: !15, line: 70, baseType: !237, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !600, file: !15, line: 71, baseType: !246, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !600, file: !15, line: 72, baseType: !605, size: 32)
!605 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !606, line: 24, baseType: !607)
!606 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !606, line: 22, size: 32, elements: !608)
!608 = !{!609}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !607, file: !606, line: 23, baseType: !610, size: 32)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !606, line: 20, baseType: !243)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !597, file: !15, line: 74, baseType: !14, size: 32, offset: 32)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !568, file: !15, line: 304, baseType: !419, size: 64, offset: 896)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !568, file: !15, line: 305, baseType: !212, size: 64, offset: 960)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !568, file: !15, line: 306, baseType: !615, size: 576, offset: 1024)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !15, line: 205, size: 576, elements: !616)
!616 = !{!617, !619, !620, !621, !622, !623, !624, !625, !628}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !615, file: !15, line: 206, baseType: !618, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !15, line: 66, baseType: !421)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !615, file: !15, line: 207, baseType: !618, size: 64, offset: 64)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !615, file: !15, line: 208, baseType: !618, size: 64, offset: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !615, file: !15, line: 209, baseType: !618, size: 64, offset: 192)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !615, file: !15, line: 210, baseType: !618, size: 64, offset: 256)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !615, file: !15, line: 211, baseType: !618, size: 64, offset: 320)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !615, file: !15, line: 212, baseType: !618, size: 64, offset: 384)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !615, file: !15, line: 213, baseType: !626, size: 64, offset: 448)
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !627, line: 8, baseType: !586)
!627 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!628 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !615, file: !15, line: 214, baseType: !626, size: 64, offset: 512)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !561, file: !15, line: 324, baseType: !630, size: 64, offset: 64)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = !DISubroutineType(types: !632)
!632 = !{!567, !409, !165}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !561, file: !15, line: 325, baseType: !634, size: 64, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = !DISubroutineType(types: !636)
!636 = !{null, !567}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !561, file: !15, line: 326, baseType: !564, size: 64, offset: 192)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !561, file: !15, line: 327, baseType: !564, size: 64, offset: 256)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !561, file: !15, line: 328, baseType: !564, size: 64, offset: 320)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !561, file: !15, line: 329, baseType: !505, size: 64, offset: 384)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !561, file: !15, line: 332, baseType: !642, size: 64, offset: 448)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DISubroutineType(types: !644)
!644 = !{!645, !230}
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !561, file: !15, line: 333, baseType: !647, size: 64, offset: 512)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DISubroutineType(types: !649)
!649 = !{!165, !230, !650}
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !561, file: !15, line: 335, baseType: !652, size: 64, offset: 576)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DISubroutineType(types: !654)
!654 = !{!165, !230, !645}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !561, file: !15, line: 337, baseType: !656, size: 64, offset: 640)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DISubroutineType(types: !658)
!658 = !{!165, !409, !659}
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !410, file: !32, line: 1425, baseType: !661, size: 64, offset: 512)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !663)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !15, line: 428, size: 704, elements: !664)
!664 = !{!665, !669, !670, !674, !675, !676, !691, !714, !718, !719, !742}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !663, file: !15, line: 429, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{!165, !409, !165, !165, !398}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !663, file: !15, line: 430, baseType: !505, size: 64, offset: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !663, file: !15, line: 431, baseType: !671, size: 64, offset: 128)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DISubroutineType(types: !673)
!673 = !{!165, !409, !7}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !663, file: !15, line: 432, baseType: !671, size: 64, offset: 192)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !663, file: !15, line: 433, baseType: !505, size: 64, offset: 256)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !663, file: !15, line: 434, baseType: !677, size: 64, offset: 320)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DISubroutineType(types: !679)
!679 = !{!165, !409, !165, !680}
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 64)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !15, line: 415, size: 256, elements: !682)
!682 = !{!683, !684, !685, !686, !687, !688, !689, !690}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !681, file: !15, line: 416, baseType: !165, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !681, file: !15, line: 417, baseType: !7, size: 32, offset: 32)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !681, file: !15, line: 418, baseType: !7, size: 32, offset: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !681, file: !15, line: 420, baseType: !7, size: 32, offset: 96)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !681, file: !15, line: 421, baseType: !7, size: 32, offset: 128)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !681, file: !15, line: 422, baseType: !7, size: 32, offset: 160)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !681, file: !15, line: 423, baseType: !7, size: 32, offset: 192)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !681, file: !15, line: 424, baseType: !7, size: 32, offset: 224)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !663, file: !15, line: 435, baseType: !692, size: 64, offset: 384)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DISubroutineType(types: !694)
!694 = !{!165, !409, !597, !695}
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !15, line: 343, size: 960, elements: !697)
!697 = !{!698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !696, file: !15, line: 344, baseType: !165, size: 32)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !696, file: !15, line: 345, baseType: !298, size: 64, offset: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !696, file: !15, line: 346, baseType: !298, size: 64, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !696, file: !15, line: 347, baseType: !298, size: 64, offset: 192)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !696, file: !15, line: 348, baseType: !298, size: 64, offset: 256)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !696, file: !15, line: 349, baseType: !298, size: 64, offset: 320)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !696, file: !15, line: 350, baseType: !298, size: 64, offset: 384)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !696, file: !15, line: 351, baseType: !585, size: 64, offset: 448)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !696, file: !15, line: 353, baseType: !585, size: 64, offset: 512)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !696, file: !15, line: 354, baseType: !165, size: 32, offset: 576)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !696, file: !15, line: 355, baseType: !165, size: 32, offset: 608)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !696, file: !15, line: 356, baseType: !298, size: 64, offset: 640)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !696, file: !15, line: 357, baseType: !298, size: 64, offset: 704)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !696, file: !15, line: 358, baseType: !298, size: 64, offset: 768)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !696, file: !15, line: 359, baseType: !585, size: 64, offset: 832)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !696, file: !15, line: 360, baseType: !165, size: 32, offset: 896)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !663, file: !15, line: 436, baseType: !715, size: 64, offset: 448)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DISubroutineType(types: !717)
!717 = !{!165, !409, !659, !695}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !663, file: !15, line: 438, baseType: !692, size: 64, offset: 512)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !663, file: !15, line: 439, baseType: !720, size: 64, offset: 576)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DISubroutineType(types: !722)
!722 = !{!165, !409, !723}
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !15, line: 409, size: 1408, elements: !725)
!725 = !{!726, !727}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !724, file: !15, line: 410, baseType: !7, size: 32)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !724, file: !15, line: 411, baseType: !728, size: 1344, offset: 64)
!728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 1344, elements: !469)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !15, line: 395, size: 448, elements: !730)
!730 = !{!731, !732, !733, !734, !735, !736, !737, !738, !739, !741}
!731 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !729, file: !15, line: 396, baseType: !7, size: 32)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !729, file: !15, line: 397, baseType: !7, size: 32, offset: 32)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !729, file: !15, line: 399, baseType: !7, size: 32, offset: 64)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !729, file: !15, line: 400, baseType: !7, size: 32, offset: 96)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !729, file: !15, line: 401, baseType: !7, size: 32, offset: 128)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !729, file: !15, line: 402, baseType: !7, size: 32, offset: 160)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !729, file: !15, line: 403, baseType: !7, size: 32, offset: 192)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !729, file: !15, line: 404, baseType: !300, size: 64, offset: 256)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !729, file: !15, line: 405, baseType: !740, size: 64, offset: 320)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !159, line: 126, baseType: !298)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !729, file: !15, line: 406, baseType: !740, size: 64, offset: 384)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !663, file: !15, line: 440, baseType: !671, size: 64, offset: 640)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !410, file: !32, line: 1426, baseType: !744, size: 64, offset: 576)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !746)
!746 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !32, line: 49, flags: DIFlagFwdDecl)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !410, file: !32, line: 1427, baseType: !212, size: 64, offset: 640)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !410, file: !32, line: 1428, baseType: !212, size: 64, offset: 704)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !410, file: !32, line: 1429, baseType: !212, size: 64, offset: 768)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !410, file: !32, line: 1430, baseType: !262, size: 64, offset: 832)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !410, file: !32, line: 1431, baseType: !752, size: 256, offset: 896)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !753, line: 35, size: 256, elements: !754)
!753 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!754 = !{!755, !756, !757, !759}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !752, file: !753, line: 36, baseType: !579, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !752, file: !753, line: 42, baseType: !579, size: 64, offset: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !752, file: !753, line: 46, baseType: !758, offset: 128)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !321, line: 29, baseType: !328)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !752, file: !753, line: 47, baseType: !220, size: 128, offset: 128)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !410, file: !32, line: 1432, baseType: !165, size: 32, offset: 1152)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !410, file: !32, line: 1433, baseType: !591, size: 32, offset: 1184)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !410, file: !32, line: 1437, baseType: !763, size: 64, offset: 1216)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !766)
!766 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !32, line: 1437, flags: DIFlagFwdDecl)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !410, file: !32, line: 1449, baseType: !768, size: 64, offset: 1280)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !279, line: 34, size: 64, elements: !769)
!769 = !{!770}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !768, file: !279, line: 35, baseType: !282, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !410, file: !32, line: 1450, baseType: !220, size: 128, offset: 1344)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !410, file: !32, line: 1451, baseType: !773, size: 64, offset: 1472)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !32, line: 699, flags: DIFlagFwdDecl)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !410, file: !32, line: 1452, baseType: !776, size: 64, offset: 1536)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !778, line: 40, flags: DIFlagFwdDecl)
!778 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!779 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !410, file: !32, line: 1453, baseType: !780, size: 64, offset: 1600)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !32, line: 1453, flags: DIFlagFwdDecl)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !410, file: !32, line: 1454, baseType: !457, size: 128, offset: 1664)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !410, file: !32, line: 1455, baseType: !7, size: 32, offset: 1792)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !410, file: !32, line: 1456, baseType: !785, size: 2432, offset: 1856)
!785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !15, line: 518, size: 2432, elements: !786)
!786 = !{!787, !788, !789, !791, !823}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !785, file: !15, line: 519, baseType: !7, size: 32)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !785, file: !15, line: 520, baseType: !752, size: 256, offset: 64)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !785, file: !15, line: 521, baseType: !790, size: 192, offset: 320)
!790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !230, size: 192, elements: !469)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !785, file: !15, line: 522, baseType: !792, size: 1728, offset: 512)
!792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !793, size: 1728, elements: !469)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !15, line: 222, size: 576, elements: !794)
!794 = !{!795, !815, !816, !817, !818, !819, !820, !821, !822}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !793, file: !15, line: 223, baseType: !796, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !15, line: 443, size: 256, elements: !798)
!798 = !{!799, !800, !813, !814}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !797, file: !15, line: 444, baseType: !165, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !797, file: !15, line: 445, baseType: !801, size: 64, offset: 64)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !15, line: 310, size: 512, elements: !804)
!804 = !{!805, !806, !807, !808, !809, !810, !811, !812}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !803, file: !15, line: 311, baseType: !505, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !803, file: !15, line: 312, baseType: !505, size: 64, offset: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !803, file: !15, line: 313, baseType: !505, size: 64, offset: 128)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !803, file: !15, line: 314, baseType: !505, size: 64, offset: 192)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !803, file: !15, line: 315, baseType: !564, size: 64, offset: 256)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !803, file: !15, line: 316, baseType: !564, size: 64, offset: 320)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !803, file: !15, line: 317, baseType: !564, size: 64, offset: 384)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !803, file: !15, line: 318, baseType: !656, size: 64, offset: 448)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !797, file: !15, line: 446, baseType: !448, size: 64, offset: 128)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !797, file: !15, line: 447, baseType: !796, size: 64, offset: 192)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !793, file: !15, line: 224, baseType: !165, size: 32, offset: 64)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !793, file: !15, line: 226, baseType: !220, size: 128, offset: 128)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !793, file: !15, line: 227, baseType: !212, size: 64, offset: 256)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !793, file: !15, line: 228, baseType: !7, size: 32, offset: 320)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !793, file: !15, line: 229, baseType: !7, size: 32, offset: 352)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !793, file: !15, line: 230, baseType: !618, size: 64, offset: 384)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !793, file: !15, line: 231, baseType: !618, size: 64, offset: 448)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !793, file: !15, line: 232, baseType: !160, size: 64, offset: 512)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !785, file: !15, line: 523, baseType: !824, size: 192, offset: 2240)
!824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !801, size: 192, elements: !469)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !410, file: !32, line: 1458, baseType: !826, size: 2112, offset: 4288)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !32, line: 1410, size: 2112, elements: !827)
!827 = !{!828, !829, !836}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !826, file: !32, line: 1411, baseType: !165, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !826, file: !32, line: 1412, baseType: !830, size: 128, offset: 64)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !831, line: 40, baseType: !832)
!831 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !831, line: 36, size: 128, elements: !833)
!833 = !{!834, !835}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !832, file: !831, line: 37, baseType: !320)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !832, file: !831, line: 38, baseType: !220, size: 128)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !826, file: !32, line: 1413, baseType: !837, size: 1920, offset: 192)
!837 = !DICompositeType(tag: DW_TAG_array_type, baseType: !838, size: 1920, elements: !469)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !839, line: 12, size: 640, elements: !840)
!839 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!840 = !{!841, !857, !859, !2556, !2557}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !838, file: !839, line: 13, baseType: !842, size: 320)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !843, line: 17, size: 320, elements: !844)
!843 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!844 = !{!845, !846, !847, !848}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !842, file: !843, line: 18, baseType: !165, size: 32)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !842, file: !843, line: 19, baseType: !165, size: 32, offset: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !842, file: !843, line: 20, baseType: !830, size: 128, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !842, file: !843, line: 22, baseType: !849, size: 128, align: 64, offset: 192)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !159, line: 216, size: 128, align: 64, elements: !850)
!850 = !{!851, !853}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !849, file: !159, line: 217, baseType: !852, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !849, file: !159, line: 218, baseType: !854, size: 64, offset: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DISubroutineType(types: !856)
!856 = !{null, !852}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !838, file: !839, line: 14, baseType: !858, size: 64, offset: 320)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !838, file: !839, line: 15, baseType: !860, size: 64, offset: 384)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !861, line: 16, size: 64, elements: !862)
!861 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!862 = !{!863}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !860, file: !861, line: 17, baseType: !864, size: 64)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !778, line: 640, size: 48640, elements: !866)
!866 = !{!867, !873, !875, !876, !882, !883, !884, !885, !886, !887, !888, !889, !893, !918, !929, !1019, !1020, !1021, !1032, !1033, !1035, !1036, !1848, !1849, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1926, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1941, !1942, !1943, !1945, !1946, !1947, !1948, !1949, !1950, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1974, !1979, !1980, !1981, !1982, !1983, !1987, !1990, !1993, !1996, !1999, !2003, !2104, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2152, !2153, !2154, !2155, !2156, !2161, !2162, !2163, !2166, !2167, !2170, !2173, !2176, !2177, !2217, !2220, !2221, !2300, !2301, !2304, !2305, !2308, !2309, !2310, !2314, !2315, !2316, !2329, !2330, !2331, !2341, !2346, !2347, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !865, file: !778, line: 646, baseType: !868, size: 128)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !869, line: 56, size: 128, elements: !870)
!869 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !868, file: !869, line: 57, baseType: !212, size: 64)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !868, file: !869, line: 58, baseType: !191, size: 32, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !865, file: !778, line: 649, baseType: !874, size: 64, offset: 128)
!874 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !545)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !865, file: !778, line: 657, baseType: !160, size: 64, offset: 192)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !865, file: !778, line: 658, baseType: !877, size: 32, offset: 256)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !878, line: 113, baseType: !879)
!878 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !878, line: 111, size: 32, elements: !880)
!880 = !{!881}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !879, file: !878, line: 112, baseType: !591, size: 32)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !865, file: !778, line: 660, baseType: !7, size: 32, offset: 288)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !865, file: !778, line: 661, baseType: !7, size: 32, offset: 320)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !865, file: !778, line: 684, baseType: !165, size: 32, offset: 352)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !865, file: !778, line: 686, baseType: !165, size: 32, offset: 384)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !865, file: !778, line: 687, baseType: !165, size: 32, offset: 416)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !865, file: !778, line: 688, baseType: !165, size: 32, offset: 448)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !865, file: !778, line: 689, baseType: !7, size: 32, offset: 480)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !865, file: !778, line: 691, baseType: !890, size: 64, offset: 512)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !892)
!892 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !778, line: 691, flags: DIFlagFwdDecl)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !865, file: !778, line: 692, baseType: !894, size: 832, offset: 576)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !778, line: 451, size: 832, elements: !895)
!895 = !{!896, !901, !909, !910, !911, !912, !913, !914, !915, !916}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !894, file: !778, line: 453, baseType: !897, size: 128)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !778, line: 325, size: 128, elements: !898)
!898 = !{!899, !900}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !897, file: !778, line: 326, baseType: !212, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !897, file: !778, line: 327, baseType: !191, size: 32, offset: 64)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !894, file: !778, line: 454, baseType: !902, size: 192, align: 64, offset: 128)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !903, line: 24, size: 192, align: 64, elements: !904)
!903 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!904 = !{!905, !906, !908}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !902, file: !903, line: 25, baseType: !212, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !902, file: !903, line: 26, baseType: !907, size: 64, offset: 64)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !902, file: !903, line: 27, baseType: !907, size: 64, offset: 128)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !894, file: !778, line: 455, baseType: !220, size: 128, offset: 320)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !894, file: !778, line: 456, baseType: !7, size: 32, offset: 448)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !894, file: !778, line: 458, baseType: !298, size: 64, offset: 512)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !894, file: !778, line: 459, baseType: !298, size: 64, offset: 576)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !894, file: !778, line: 460, baseType: !298, size: 64, offset: 640)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !894, file: !778, line: 461, baseType: !298, size: 64, offset: 704)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !894, file: !778, line: 463, baseType: !298, size: 64, offset: 768)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !894, file: !778, line: 465, baseType: !917, offset: 832)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !778, line: 415, elements: !334)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !865, file: !778, line: 693, baseType: !919, size: 384, offset: 1408)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !778, line: 489, size: 384, elements: !920)
!920 = !{!921, !922, !923, !924, !925, !926, !927}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !919, file: !778, line: 490, baseType: !220, size: 128)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !919, file: !778, line: 491, baseType: !212, size: 64, offset: 128)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !919, file: !778, line: 492, baseType: !212, size: 64, offset: 192)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !919, file: !778, line: 493, baseType: !7, size: 32, offset: 256)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !919, file: !778, line: 494, baseType: !183, size: 16, offset: 288)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !919, file: !778, line: 495, baseType: !183, size: 16, offset: 304)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !919, file: !778, line: 497, baseType: !928, size: 64, offset: 320)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !865, file: !778, line: 697, baseType: !930, size: 1792, offset: 1792)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !778, line: 507, size: 1792, elements: !931)
!931 = !{!932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !1016, !1017}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !930, file: !778, line: 508, baseType: !902, size: 192, align: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !930, file: !778, line: 515, baseType: !298, size: 64, offset: 192)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !930, file: !778, line: 516, baseType: !298, size: 64, offset: 256)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !930, file: !778, line: 517, baseType: !298, size: 64, offset: 320)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !930, file: !778, line: 518, baseType: !298, size: 64, offset: 384)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !930, file: !778, line: 519, baseType: !298, size: 64, offset: 448)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !930, file: !778, line: 526, baseType: !585, size: 64, offset: 512)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !930, file: !778, line: 527, baseType: !298, size: 64, offset: 576)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !930, file: !778, line: 528, baseType: !7, size: 32, offset: 640)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !930, file: !778, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !930, file: !778, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !930, file: !778, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !930, file: !778, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !930, file: !778, line: 563, baseType: !946, size: 512, offset: 704)
!946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !21, line: 118, size: 512, elements: !947)
!947 = !{!948, !956, !957, !962, !1012, !1013, !1014, !1015}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !946, file: !21, line: 119, baseType: !949, size: 256)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !950, line: 9, size: 256, elements: !951)
!950 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!951 = !{!952, !953}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !949, file: !950, line: 10, baseType: !902, size: 192, align: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !949, file: !950, line: 11, baseType: !954, size: 64, offset: 192)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !955, line: 29, baseType: !585)
!955 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!956 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !946, file: !21, line: 120, baseType: !954, size: 64, offset: 256)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !946, file: !21, line: 121, baseType: !958, size: 64, offset: 320)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DISubroutineType(types: !960)
!960 = !{!20, !961}
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !946, file: !21, line: 122, baseType: !963, size: 64, offset: 384)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !21, line: 159, size: 512, align: 512, elements: !965)
!965 = !{!966, !986, !987, !990, !995, !996, !1007, !1011}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !964, file: !21, line: 160, baseType: !967, size: 64)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !21, line: 214, size: 4608, align: 512, elements: !969)
!969 = !{!970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !968, file: !21, line: 215, baseType: !758)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !968, file: !21, line: 216, baseType: !7, size: 32)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !968, file: !21, line: 217, baseType: !7, size: 32, offset: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !968, file: !21, line: 218, baseType: !7, size: 32, offset: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !968, file: !21, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !968, file: !21, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !968, file: !21, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !968, file: !21, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !968, file: !21, line: 233, baseType: !954, size: 64, offset: 128)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !968, file: !21, line: 234, baseType: !961, size: 64, offset: 192)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !968, file: !21, line: 235, baseType: !954, size: 64, offset: 256)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !968, file: !21, line: 236, baseType: !961, size: 64, offset: 320)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !968, file: !21, line: 237, baseType: !983, size: 4096, offset: 512)
!983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !964, size: 4096, elements: !984)
!984 = !{!985}
!985 = !DISubrange(count: 8)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !964, file: !21, line: 161, baseType: !7, size: 32, offset: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !964, file: !21, line: 162, baseType: !988, size: 32, offset: 96)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !159, line: 27, baseType: !989)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !244, line: 96, baseType: !165)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !964, file: !21, line: 163, baseType: !991, size: 32, offset: 128)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !269, line: 276, baseType: !992)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !269, line: 276, size: 32, elements: !993)
!993 = !{!994}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !992, file: !269, line: 276, baseType: !273, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !964, file: !21, line: 164, baseType: !961, size: 64, offset: 192)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !964, file: !21, line: 165, baseType: !997, size: 128, offset: 256)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !950, line: 14, size: 128, elements: !998)
!998 = !{!999}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !997, file: !950, line: 15, baseType: !1000, size: 128)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !903, line: 125, size: 128, elements: !1001)
!1001 = !{!1002, !1006}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1000, file: !903, line: 126, baseType: !1003, size: 64)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !903, line: 31, size: 64, elements: !1004)
!1004 = !{!1005}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1003, file: !903, line: 32, baseType: !907, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1000, file: !903, line: 127, baseType: !907, size: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !964, file: !21, line: 166, baseType: !1008, size: 64, offset: 384)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!954}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !964, file: !21, line: 167, baseType: !954, size: 64, offset: 448)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !946, file: !21, line: 123, baseType: !169, size: 8, offset: 448)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !946, file: !21, line: 124, baseType: !169, size: 8, offset: 456)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !946, file: !21, line: 125, baseType: !169, size: 8, offset: 464)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !946, file: !21, line: 126, baseType: !169, size: 8, offset: 472)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !930, file: !778, line: 572, baseType: !946, size: 512, offset: 1216)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !930, file: !778, line: 580, baseType: !1018, size: 64, offset: 1728)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !865, file: !778, line: 721, baseType: !7, size: 32, offset: 3584)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !865, file: !778, line: 722, baseType: !165, size: 32, offset: 3616)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !865, file: !778, line: 723, baseType: !1022, size: 64, offset: 3648)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1024)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1025, line: 17, baseType: !1026)
!1025 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1025, line: 17, size: 64, elements: !1027)
!1027 = !{!1028}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1026, file: !1025, line: 17, baseType: !1029, size: 64)
!1029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, size: 64, elements: !1030)
!1030 = !{!1031}
!1031 = !DISubrange(count: 1)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !865, file: !778, line: 724, baseType: !1024, size: 64, offset: 3712)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !865, file: !778, line: 749, baseType: !1034, offset: 3776)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !778, line: 290, elements: !334)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !865, file: !778, line: 751, baseType: !220, size: 128, offset: 3776)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !865, file: !778, line: 757, baseType: !1037, size: 64, offset: 3904)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !209, line: 388, size: 7296, elements: !1039)
!1039 = !{!1040, !1844}
!1040 = !DIDerivedType(tag: DW_TAG_member, scope: !1038, file: !209, line: 389, baseType: !1041, size: 7296)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1038, file: !209, line: 389, size: 7296, elements: !1042)
!1042 = !{!1043, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1746, !1752, !1755, !1794, !1795, !1817, !1818, !1821, !1822, !1823, !1826, !1827, !1828, !1831, !1843}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1041, file: !209, line: 390, baseType: !1044, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !209, line: 305, size: 1472, elements: !1046)
!1046 = !{!1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1061, !1062, !1067, !1068, !1071, !1156, !1157, !1694, !1695, !1696}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1045, file: !209, line: 308, baseType: !212, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1045, file: !209, line: 309, baseType: !212, size: 64, offset: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1045, file: !209, line: 313, baseType: !1044, size: 64, offset: 128)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1045, file: !209, line: 313, baseType: !1044, size: 64, offset: 192)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1045, file: !209, line: 315, baseType: !902, size: 192, align: 64, offset: 256)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1045, file: !209, line: 323, baseType: !212, size: 64, offset: 448)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1045, file: !209, line: 327, baseType: !1037, size: 64, offset: 512)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1045, file: !209, line: 333, baseType: !1055, size: 64, offset: 576)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !533, line: 284, baseType: !1056)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !533, line: 284, size: 64, elements: !1057)
!1057 = !{!1058}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1056, file: !533, line: 284, baseType: !1059, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1060, line: 19, baseType: !212)
!1060 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1045, file: !209, line: 334, baseType: !212, size: 64, offset: 640)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1045, file: !209, line: 343, baseType: !1063, size: 256, offset: 704)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1045, file: !209, line: 340, size: 256, elements: !1064)
!1064 = !{!1065, !1066}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1063, file: !209, line: 341, baseType: !902, size: 192, align: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1063, file: !209, line: 342, baseType: !212, size: 64, offset: 192)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1045, file: !209, line: 351, baseType: !220, size: 128, offset: 960)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1045, file: !209, line: 353, baseType: !1069, size: 64, offset: 1088)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !209, line: 353, flags: DIFlagFwdDecl)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1045, file: !209, line: 356, baseType: !1072, size: 64, offset: 1152)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1074)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !26, line: 557, size: 832, elements: !1075)
!1075 = !{!1076, !1080, !1081, !1085, !1089, !1130, !1134, !1138, !1142, !1143, !1144, !1148, !1152}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1074, file: !26, line: 558, baseType: !1077, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{null, !1044}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1074, file: !26, line: 559, baseType: !1077, size: 64, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1074, file: !26, line: 560, baseType: !1082, size: 64, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{!165, !1044, !212}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1074, file: !26, line: 561, baseType: !1086, size: 64, offset: 192)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!165, !1044}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1074, file: !26, line: 562, baseType: !1090, size: 64, offset: 256)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!1093, !1094}
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !209, line: 682, baseType: !7)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !26, line: 508, size: 768, elements: !1096)
!1096 = !{!1097, !1098, !1099, !1100, !1101, !1102, !1109, !1116, !1122, !1123, !1124, !1126, !1128}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1095, file: !26, line: 509, baseType: !1044, size: 64)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1095, file: !26, line: 510, baseType: !7, size: 32, offset: 64)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1095, file: !26, line: 511, baseType: !158, size: 32, offset: 96)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1095, file: !26, line: 512, baseType: !212, size: 64, offset: 128)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1095, file: !26, line: 513, baseType: !212, size: 64, offset: 192)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1095, file: !26, line: 514, baseType: !1103, size: 64, offset: 256)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !533, line: 385, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 385, size: 64, elements: !1106)
!1106 = !{!1107}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1105, file: !533, line: 385, baseType: !1108, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1060, line: 15, baseType: !212)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1095, file: !26, line: 516, baseType: !1110, size: 64, offset: 320)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !533, line: 359, baseType: !1112)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 359, size: 64, elements: !1113)
!1113 = !{!1114}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1112, file: !533, line: 359, baseType: !1115, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1060, line: 16, baseType: !212)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1095, file: !26, line: 519, baseType: !1117, size: 64, offset: 384)
!1117 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1060, line: 21, baseType: !1118)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1060, line: 21, size: 64, elements: !1119)
!1119 = !{!1120}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1118, file: !1060, line: 21, baseType: !1121, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1060, line: 14, baseType: !212)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1095, file: !26, line: 521, baseType: !207, size: 64, offset: 448)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1095, file: !26, line: 522, baseType: !207, size: 64, offset: 512)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1095, file: !26, line: 528, baseType: !1125, size: 64, offset: 576)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1095, file: !26, line: 532, baseType: !1127, size: 64, offset: 640)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1095, file: !26, line: 536, baseType: !1129, size: 64, offset: 704)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !533, line: 509, baseType: !207)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1074, file: !26, line: 563, baseType: !1131, size: 64, offset: 320)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!1093, !1094, !25}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1074, file: !26, line: 565, baseType: !1135, size: 64, offset: 384)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{null, !1094, !212, !212}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1074, file: !26, line: 567, baseType: !1139, size: 64, offset: 448)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!212, !1044}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1074, file: !26, line: 571, baseType: !1090, size: 64, offset: 512)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1074, file: !26, line: 574, baseType: !1090, size: 64, offset: 576)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1074, file: !26, line: 579, baseType: !1145, size: 64, offset: 640)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{!165, !1044, !212, !160, !165, !165}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1074, file: !26, line: 585, baseType: !1149, size: 64, offset: 704)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DISubroutineType(types: !1151)
!1151 = !{!357, !1044}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1074, file: !26, line: 615, baseType: !1153, size: 64, offset: 768)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!207, !1044, !212}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1045, file: !209, line: 359, baseType: !212, size: 64, offset: 1216)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1045, file: !209, line: 361, baseType: !1158, size: 64, offset: 1280)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !32, line: 916, size: 1856, align: 32, elements: !1160)
!1160 = !{!1161, !1171, !1172, !1173, !1450, !1451, !1452, !1453, !1454, !1456, !1457, !1458, !1488, !1676, !1685, !1686, !1687, !1688, !1689, !1690, !1693}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1159, file: !32, line: 920, baseType: !1162, size: 128)
!1162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1159, file: !32, line: 917, size: 128, elements: !1163)
!1163 = !{!1164, !1170}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1162, file: !32, line: 918, baseType: !1165, size: 64)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1166, line: 58, size: 64, elements: !1167)
!1166 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1167 = !{!1168}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1165, file: !1166, line: 59, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1162, file: !32, line: 919, baseType: !849, size: 128, align: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1159, file: !32, line: 921, baseType: !389, size: 128, offset: 128)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1159, file: !32, line: 922, baseType: !230, size: 64, offset: 256)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1159, file: !32, line: 923, baseType: !1174, size: 64, offset: 320)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1176)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !32, line: 1822, size: 2048, elements: !1177)
!1177 = !{!1178, !1179, !1183, !1194, !1198, !1241, !1242, !1246, !1259, !1260, !1268, !1272, !1273, !1277, !1278, !1282, !1287, !1288, !1292, !1296, !1405, !1409, !1413, !1417, !1418, !1424, !1428, !1433, !1437, !1441, !1445, !1449}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1176, file: !32, line: 1823, baseType: !448, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1176, file: !32, line: 1824, baseType: !1180, size: 64, offset: 64)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{!419, !1158, !419, !165}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1176, file: !32, line: 1825, baseType: !1184, size: 64, offset: 128)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!1187, !1158, !205, !1190, !1193}
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !159, line: 60, baseType: !1188)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !244, line: 73, baseType: !1189)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !244, line: 15, baseType: !545)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !159, line: 55, baseType: !1191)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !244, line: 72, baseType: !1192)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !244, line: 16, baseType: !212)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1176, file: !32, line: 1826, baseType: !1195, size: 64, offset: 192)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DISubroutineType(types: !1197)
!1197 = !{!1187, !1158, !357, !1190, !1193}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1176, file: !32, line: 1827, baseType: !1199, size: 64, offset: 256)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = !DISubroutineType(types: !1201)
!1201 = !{!1187, !1202, !1239}
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !32, line: 320, size: 384, elements: !1204)
!1204 = !{!1205, !1206, !1207, !1211, !1212, !1213, !1214, !1215}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1203, file: !32, line: 321, baseType: !1158, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1203, file: !32, line: 326, baseType: !419, size: 64, offset: 64)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1203, file: !32, line: 327, baseType: !1208, size: 64, offset: 128)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{null, !1202, !545, !545}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1203, file: !32, line: 328, baseType: !160, size: 64, offset: 192)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1203, file: !32, line: 329, baseType: !165, size: 32, offset: 256)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1203, file: !32, line: 330, baseType: !181, size: 16, offset: 288)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1203, file: !32, line: 331, baseType: !181, size: 16, offset: 304)
!1215 = !DIDerivedType(tag: DW_TAG_member, scope: !1203, file: !32, line: 332, baseType: !1216, size: 64, offset: 320)
!1216 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1203, file: !32, line: 332, size: 64, elements: !1217)
!1217 = !{!1218, !1219}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1216, file: !32, line: 333, baseType: !7, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1216, file: !32, line: 334, baseType: !1220, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1222, line: 569, size: 448, elements: !1223)
!1222 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1223 = !{!1224, !1225, !1226}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1221, file: !1222, line: 570, baseType: !207, size: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1221, file: !1222, line: 571, baseType: !165, size: 32, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1221, file: !1222, line: 572, baseType: !1227, size: 320, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !831, line: 14, baseType: !1228)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !831, line: 29, size: 320, elements: !1229)
!1229 = !{!1230, !1231, !1232, !1238}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1228, file: !831, line: 30, baseType: !7, size: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1228, file: !831, line: 31, baseType: !160, size: 64, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1228, file: !831, line: 32, baseType: !1233, size: 64, offset: 128)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !831, line: 16, baseType: !1234)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1235, size: 64)
!1235 = !DISubroutineType(types: !1236)
!1236 = !{!165, !1237, !7, !165, !160}
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1228, file: !831, line: 33, baseType: !220, size: 128, offset: 192)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !32, line: 64, flags: DIFlagFwdDecl)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1176, file: !32, line: 1828, baseType: !1199, size: 64, offset: 320)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1176, file: !32, line: 1829, baseType: !1243, size: 64, offset: 384)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = !DISubroutineType(types: !1245)
!1245 = !{!165, !1202, !400}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1176, file: !32, line: 1830, baseType: !1247, size: 64, offset: 448)
!1247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1248, size: 64)
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!165, !1158, !1250}
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !32, line: 1776, size: 128, elements: !1252)
!1252 = !{!1253, !1258}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1251, file: !32, line: 1777, baseType: !1254, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !32, line: 1773, baseType: !1255)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!165, !1250, !357, !165, !419, !298, !7}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1251, file: !32, line: 1778, baseType: !419, size: 64, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1176, file: !32, line: 1831, baseType: !1247, size: 64, offset: 512)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1176, file: !32, line: 1832, baseType: !1261, size: 64, offset: 576)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!1264, !1158, !1266}
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !1265, line: 52, baseType: !7)
!1265 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !434, line: 27, flags: DIFlagFwdDecl)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1176, file: !32, line: 1833, baseType: !1269, size: 64, offset: 640)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!545, !1158, !7, !212}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1176, file: !32, line: 1834, baseType: !1269, size: 64, offset: 704)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1176, file: !32, line: 1835, baseType: !1274, size: 64, offset: 768)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = !DISubroutineType(types: !1276)
!1276 = !{!165, !1158, !1044}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1176, file: !32, line: 1836, baseType: !212, size: 64, offset: 832)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1176, file: !32, line: 1837, baseType: !1279, size: 64, offset: 896)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{!165, !230, !1158}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1176, file: !32, line: 1838, baseType: !1283, size: 64, offset: 960)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{!165, !1158, !1286}
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !32, line: 1007, baseType: !160)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1176, file: !32, line: 1839, baseType: !1279, size: 64, offset: 1024)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1176, file: !32, line: 1840, baseType: !1289, size: 64, offset: 1088)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{!165, !1158, !419, !419, !165}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1176, file: !32, line: 1841, baseType: !1293, size: 64, offset: 1152)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!165, !165, !1158, !165}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1176, file: !32, line: 1842, baseType: !1297, size: 64, offset: 1216)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{!165, !1158, !165, !1300}
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !32, line: 1062, size: 1664, elements: !1302)
!1302 = !{!1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1334, !1335, !1336, !1349, !1381}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !1301, file: !32, line: 1063, baseType: !1300, size: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !1301, file: !32, line: 1064, baseType: !220, size: 128, offset: 64)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !1301, file: !32, line: 1065, baseType: !457, size: 128, offset: 192)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !1301, file: !32, line: 1066, baseType: !220, size: 128, offset: 320)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !1301, file: !32, line: 1069, baseType: !220, size: 128, offset: 448)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !1301, file: !32, line: 1072, baseType: !1286, size: 64, offset: 576)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !1301, file: !32, line: 1073, baseType: !7, size: 32, offset: 640)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !1301, file: !32, line: 1074, baseType: !173, size: 8, offset: 672)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !1301, file: !32, line: 1075, baseType: !7, size: 32, offset: 704)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !1301, file: !32, line: 1076, baseType: !165, size: 32, offset: 736)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !1301, file: !32, line: 1077, baseType: !830, size: 128, offset: 768)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !1301, file: !32, line: 1078, baseType: !1158, size: 64, offset: 896)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !1301, file: !32, line: 1079, baseType: !419, size: 64, offset: 960)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !1301, file: !32, line: 1080, baseType: !419, size: 64, offset: 1024)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !1301, file: !32, line: 1082, baseType: !1318, size: 64, offset: 1088)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64)
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !32, line: 1314, size: 320, elements: !1320)
!1320 = !{!1321, !1329, !1330, !1331, !1332, !1333}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1319, file: !32, line: 1315, baseType: !1322)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1323, line: 20, baseType: !1324)
!1323 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1323, line: 11, elements: !1325)
!1325 = !{!1326}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1324, file: !1323, line: 12, baseType: !1327)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !332, line: 33, baseType: !1328)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !332, line: 31, elements: !334)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1319, file: !32, line: 1316, baseType: !165, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1319, file: !32, line: 1317, baseType: !165, size: 32, offset: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1319, file: !32, line: 1318, baseType: !1318, size: 64, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1319, file: !32, line: 1319, baseType: !1158, size: 64, offset: 128)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1319, file: !32, line: 1320, baseType: !849, size: 128, align: 64, offset: 192)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !1301, file: !32, line: 1084, baseType: !212, size: 64, offset: 1152)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !1301, file: !32, line: 1085, baseType: !212, size: 64, offset: 1216)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !1301, file: !32, line: 1087, baseType: !1337, size: 64, offset: 1280)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1339)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !32, line: 1011, size: 128, elements: !1340)
!1340 = !{!1341, !1345}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !1339, file: !32, line: 1012, baseType: !1342, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{null, !1300, !1300}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !1339, file: !32, line: 1013, baseType: !1346, size: 64, offset: 64)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{null, !1300}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !1301, file: !32, line: 1088, baseType: !1350, size: 64, offset: 1344)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1352)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !32, line: 1016, size: 512, elements: !1353)
!1353 = !{!1354, !1358, !1362, !1363, !1367, !1371, !1375, !1380}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !1352, file: !32, line: 1017, baseType: !1355, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1356, size: 64)
!1356 = !DISubroutineType(types: !1357)
!1357 = !{!1286, !1286}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !1352, file: !32, line: 1018, baseType: !1359, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{null, !1286}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !1352, file: !32, line: 1019, baseType: !1346, size: 64, offset: 128)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !1352, file: !32, line: 1020, baseType: !1364, size: 64, offset: 192)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1365 = !DISubroutineType(types: !1366)
!1366 = !{!165, !1300, !165}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !1352, file: !32, line: 1021, baseType: !1368, size: 64, offset: 256)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64)
!1369 = !DISubroutineType(types: !1370)
!1370 = !{!400, !1300}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !1352, file: !32, line: 1022, baseType: !1372, size: 64, offset: 320)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 64)
!1373 = !DISubroutineType(types: !1374)
!1374 = !{!165, !1300, !165, !223}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !1352, file: !32, line: 1023, baseType: !1376, size: 64, offset: 384)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = !DISubroutineType(types: !1378)
!1378 = !{null, !1300, !1379}
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !1352, file: !32, line: 1024, baseType: !1368, size: 64, offset: 448)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !1301, file: !32, line: 1097, baseType: !1382, size: 256, offset: 1408)
!1382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1301, file: !32, line: 1089, size: 256, elements: !1383)
!1383 = !{!1384, !1393, !1399}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !1382, file: !32, line: 1090, baseType: !1385, size: 256)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !1386, line: 10, size: 256, elements: !1387)
!1386 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1387 = !{!1388, !1389, !1392}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1385, file: !1386, line: 11, baseType: !191, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1385, file: !1386, line: 12, baseType: !1390, size: 64, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !1386, line: 5, flags: DIFlagFwdDecl)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1385, file: !1386, line: 13, baseType: !220, size: 128, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !1382, file: !32, line: 1091, baseType: !1394, size: 64)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !1386, line: 17, size: 64, elements: !1395)
!1395 = !{!1396}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1394, file: !1386, line: 18, baseType: !1397, size: 64)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !1386, line: 16, flags: DIFlagFwdDecl)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !1382, file: !32, line: 1096, baseType: !1400, size: 192)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1382, file: !32, line: 1092, size: 192, elements: !1401)
!1401 = !{!1402, !1403, !1404}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1400, file: !32, line: 1093, baseType: !220, size: 128)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1400, file: !32, line: 1094, baseType: !165, size: 32, offset: 128)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !1400, file: !32, line: 1095, baseType: !7, size: 32, offset: 160)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1176, file: !32, line: 1843, baseType: !1406, size: 64, offset: 1280)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{!1187, !1158, !207, !165, !1190, !1193, !165}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1176, file: !32, line: 1844, baseType: !1410, size: 64, offset: 1344)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{!212, !1158, !212, !212, !212, !212}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1176, file: !32, line: 1845, baseType: !1414, size: 64, offset: 1408)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!165, !165}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1176, file: !32, line: 1846, baseType: !1297, size: 64, offset: 1472)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1176, file: !32, line: 1847, baseType: !1419, size: 64, offset: 1536)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{!1187, !1422, !1158, !1193, !1190, !7}
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !778, line: 53, flags: DIFlagFwdDecl)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1176, file: !32, line: 1848, baseType: !1425, size: 64, offset: 1600)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{!1187, !1158, !1193, !1422, !1190, !7}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1176, file: !32, line: 1849, baseType: !1429, size: 64, offset: 1664)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{!165, !1158, !545, !1432, !1379}
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1176, file: !32, line: 1850, baseType: !1434, size: 64, offset: 1728)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!545, !1158, !165, !419, !419}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1176, file: !32, line: 1852, baseType: !1438, size: 64, offset: 1792)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{null, !531, !1158}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1176, file: !32, line: 1856, baseType: !1442, size: 64, offset: 1856)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!1187, !1158, !419, !1158, !419, !1190, !7}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1176, file: !32, line: 1858, baseType: !1446, size: 64, offset: 1920)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!419, !1158, !419, !1158, !419, !419, !7}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1176, file: !32, line: 1861, baseType: !1289, size: 64, offset: 1984)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1159, file: !32, line: 929, baseType: !320, offset: 384)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1159, file: !32, line: 930, baseType: !31, size: 32, offset: 384)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1159, file: !32, line: 931, baseType: !579, size: 64, offset: 448)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1159, file: !32, line: 932, baseType: !7, size: 32, offset: 512)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1159, file: !32, line: 933, baseType: !1455, size: 32, offset: 544)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !159, line: 150, baseType: !7)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1159, file: !32, line: 934, baseType: !575, size: 192, offset: 576)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1159, file: !32, line: 935, baseType: !419, size: 64, offset: 768)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1159, file: !32, line: 936, baseType: !1459, size: 192, offset: 832)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !32, line: 885, size: 192, elements: !1460)
!1460 = !{!1461, !1462, !1484, !1485, !1486, !1487}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1459, file: !32, line: 886, baseType: !1322)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1459, file: !32, line: 887, baseType: !1463, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !41, line: 59, size: 768, elements: !1465)
!1465 = !{!1466, !1467, !1468, !1469, !1473, !1474, !1475, !1476}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1464, file: !41, line: 61, baseType: !877, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1464, file: !41, line: 62, baseType: !7, size: 32, offset: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1464, file: !41, line: 63, baseType: !320, offset: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1464, file: !41, line: 65, baseType: !1470, size: 256, offset: 64)
!1470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !453, size: 256, elements: !1471)
!1471 = !{!1472}
!1472 = !DISubrange(count: 4)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1464, file: !41, line: 66, baseType: !453, size: 64, offset: 320)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1464, file: !41, line: 68, baseType: !830, size: 128, offset: 384)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1464, file: !41, line: 69, baseType: !849, size: 128, align: 64, offset: 512)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1464, file: !41, line: 70, baseType: !1477, size: 128, offset: 640)
!1477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1478, size: 128, elements: !1030)
!1478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !41, line: 54, size: 128, elements: !1479)
!1479 = !{!1480, !1481}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1478, file: !41, line: 55, baseType: !165, size: 32)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1478, file: !41, line: 56, baseType: !1482, size: 64, offset: 64)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !41, line: 56, flags: DIFlagFwdDecl)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !1459, file: !32, line: 888, baseType: !40, size: 32, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1459, file: !32, line: 889, baseType: !237, size: 32, offset: 96)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1459, file: !32, line: 889, baseType: !237, size: 32, offset: 128)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !1459, file: !32, line: 890, baseType: !165, size: 32, offset: 160)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1159, file: !32, line: 937, baseType: !1489, size: 64, offset: 1024)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1492, line: 111, size: 1280, elements: !1493)
!1492 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1493 = !{!1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1513, !1514, !1515, !1516, !1517, !1518, !1629, !1630, !1631, !1632, !1658, !1661, !1671}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1491, file: !1492, line: 112, baseType: !591, size: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1491, file: !1492, line: 120, baseType: !237, size: 32, offset: 32)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1491, file: !1492, line: 121, baseType: !246, size: 32, offset: 64)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1491, file: !1492, line: 122, baseType: !237, size: 32, offset: 96)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1491, file: !1492, line: 123, baseType: !246, size: 32, offset: 128)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1491, file: !1492, line: 124, baseType: !237, size: 32, offset: 160)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1491, file: !1492, line: 125, baseType: !246, size: 32, offset: 192)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1491, file: !1492, line: 126, baseType: !237, size: 32, offset: 224)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1491, file: !1492, line: 127, baseType: !246, size: 32, offset: 256)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1491, file: !1492, line: 128, baseType: !7, size: 32, offset: 288)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1491, file: !1492, line: 129, baseType: !1505, size: 64, offset: 320)
!1505 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1506, line: 26, baseType: !1507)
!1506 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1506, line: 24, size: 64, elements: !1508)
!1508 = !{!1509}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1507, file: !1506, line: 25, baseType: !1510, size: 64)
!1510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !192, size: 64, elements: !1511)
!1511 = !{!1512}
!1512 = !DISubrange(count: 2)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1491, file: !1492, line: 130, baseType: !1505, size: 64, offset: 384)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1491, file: !1492, line: 131, baseType: !1505, size: 64, offset: 448)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1491, file: !1492, line: 132, baseType: !1505, size: 64, offset: 512)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1491, file: !1492, line: 133, baseType: !1505, size: 64, offset: 576)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1491, file: !1492, line: 135, baseType: !173, size: 8, offset: 640)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1491, file: !1492, line: 137, baseType: !1519, size: 64, offset: 704)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1521, line: 189, size: 1664, elements: !1522)
!1521 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1522 = !{!1523, !1524, !1529, !1534, !1535, !1538, !1539, !1544, !1545, !1546, !1547, !1550, !1551, !1552, !1554, !1555, !1593, !1614}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1520, file: !1521, line: 190, baseType: !877, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1520, file: !1521, line: 191, baseType: !1525, size: 32, offset: 32)
!1525 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1521, line: 28, baseType: !1526)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !159, line: 98, baseType: !1527)
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !170, line: 20, baseType: !1528)
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !172, line: 26, baseType: !165)
!1529 = !DIDerivedType(tag: DW_TAG_member, scope: !1520, file: !1521, line: 192, baseType: !1530, size: 192, offset: 64)
!1530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1520, file: !1521, line: 192, size: 192, elements: !1531)
!1531 = !{!1532, !1533}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1530, file: !1521, line: 193, baseType: !220, size: 128)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1530, file: !1521, line: 194, baseType: !902, size: 192, align: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1520, file: !1521, line: 199, baseType: !752, size: 256, offset: 256)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1520, file: !1521, line: 200, baseType: !1536, size: 64, offset: 512)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1521, line: 200, flags: DIFlagFwdDecl)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1520, file: !1521, line: 201, baseType: !160, size: 64, offset: 576)
!1539 = !DIDerivedType(tag: DW_TAG_member, scope: !1520, file: !1521, line: 202, baseType: !1540, size: 64, offset: 640)
!1540 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1520, file: !1521, line: 202, size: 64, elements: !1541)
!1541 = !{!1542, !1543}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1540, file: !1521, line: 203, baseType: !626, size: 64)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1540, file: !1521, line: 204, baseType: !626, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1520, file: !1521, line: 206, baseType: !626, size: 64, offset: 704)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1520, file: !1521, line: 207, baseType: !237, size: 32, offset: 768)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1520, file: !1521, line: 208, baseType: !246, size: 32, offset: 800)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1520, file: !1521, line: 209, baseType: !1548, size: 32, offset: 832)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1521, line: 31, baseType: !1549)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !159, line: 104, baseType: !191)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1520, file: !1521, line: 210, baseType: !183, size: 16, offset: 864)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1520, file: !1521, line: 211, baseType: !183, size: 16, offset: 880)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1520, file: !1521, line: 215, baseType: !1553, size: 16, offset: 896)
!1553 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1520, file: !1521, line: 222, baseType: !212, size: 64, offset: 960)
!1555 = !DIDerivedType(tag: DW_TAG_member, scope: !1520, file: !1521, line: 239, baseType: !1556, size: 320, offset: 1024)
!1556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1520, file: !1521, line: 239, size: 320, elements: !1557)
!1557 = !{!1558, !1585}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1556, file: !1521, line: 240, baseType: !1559, size: 320)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1521, line: 108, size: 320, elements: !1560)
!1560 = !{!1561, !1562, !1574, !1577, !1584}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1559, file: !1521, line: 110, baseType: !212, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, scope: !1559, file: !1521, line: 111, baseType: !1563, size: 64, offset: 64)
!1563 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1559, file: !1521, line: 111, size: 64, elements: !1564)
!1564 = !{!1565, !1573}
!1565 = !DIDerivedType(tag: DW_TAG_member, scope: !1563, file: !1521, line: 112, baseType: !1566, size: 64)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1563, file: !1521, line: 112, size: 64, elements: !1567)
!1567 = !{!1568, !1569}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1566, file: !1521, line: 114, baseType: !181, size: 16)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1566, file: !1521, line: 115, baseType: !1570, size: 48, offset: 16)
!1570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 48, elements: !1571)
!1571 = !{!1572}
!1572 = !DISubrange(count: 6)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1563, file: !1521, line: 121, baseType: !212, size: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1559, file: !1521, line: 123, baseType: !1575, size: 64, offset: 128)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1521, line: 96, flags: DIFlagFwdDecl)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1559, file: !1521, line: 124, baseType: !1578, size: 64, offset: 192)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1521, line: 102, size: 192, elements: !1580)
!1580 = !{!1581, !1582, !1583}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1579, file: !1521, line: 103, baseType: !849, size: 128, align: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1579, file: !1521, line: 104, baseType: !877, size: 32, offset: 128)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1579, file: !1521, line: 105, baseType: !400, size: 8, offset: 160)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1559, file: !1521, line: 125, baseType: !357, size: 64, offset: 256)
!1585 = !DIDerivedType(tag: DW_TAG_member, scope: !1556, file: !1521, line: 241, baseType: !1586, size: 320)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1556, file: !1521, line: 241, size: 320, elements: !1587)
!1587 = !{!1588, !1589, !1590, !1591, !1592}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1586, file: !1521, line: 242, baseType: !212, size: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1586, file: !1521, line: 243, baseType: !212, size: 64, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1586, file: !1521, line: 244, baseType: !1575, size: 64, offset: 128)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1586, file: !1521, line: 245, baseType: !1578, size: 64, offset: 192)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1586, file: !1521, line: 246, baseType: !205, size: 64, offset: 256)
!1593 = !DIDerivedType(tag: DW_TAG_member, scope: !1520, file: !1521, line: 254, baseType: !1594, size: 256, offset: 1344)
!1594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1520, file: !1521, line: 254, size: 256, elements: !1595)
!1595 = !{!1596, !1602}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1594, file: !1521, line: 255, baseType: !1597, size: 256)
!1597 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1521, line: 128, size: 256, elements: !1598)
!1598 = !{!1599, !1600}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1597, file: !1521, line: 129, baseType: !160, size: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1597, file: !1521, line: 130, baseType: !1601, size: 256)
!1601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 256, elements: !1471)
!1602 = !DIDerivedType(tag: DW_TAG_member, scope: !1594, file: !1521, line: 256, baseType: !1603, size: 256)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1594, file: !1521, line: 256, size: 256, elements: !1604)
!1604 = !{!1605, !1606}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1603, file: !1521, line: 258, baseType: !220, size: 128)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1603, file: !1521, line: 259, baseType: !1607, size: 128, offset: 128)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1608, line: 22, size: 128, elements: !1609)
!1608 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1609 = !{!1610, !1613}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1607, file: !1608, line: 23, baseType: !1611, size: 64)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1612 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1608, line: 23, flags: DIFlagFwdDecl)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1607, file: !1608, line: 24, baseType: !212, size: 64, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1520, file: !1521, line: 274, baseType: !1615, size: 64, offset: 1600)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1521, line: 170, size: 192, elements: !1617)
!1617 = !{!1618, !1627, !1628}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1616, file: !1521, line: 171, baseType: !1619, size: 64)
!1619 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1521, line: 165, baseType: !1620)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{!165, !1519, !1623, !1625, !1519}
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1576)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1597)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1616, file: !1521, line: 172, baseType: !1519, size: 64, offset: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1616, file: !1521, line: 173, baseType: !1575, size: 64, offset: 128)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1491, file: !1492, line: 138, baseType: !1519, size: 64, offset: 768)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1491, file: !1492, line: 139, baseType: !1519, size: 64, offset: 832)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1491, file: !1492, line: 140, baseType: !1519, size: 64, offset: 896)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1491, file: !1492, line: 145, baseType: !1633, size: 64, offset: 960)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1635, line: 13, size: 896, elements: !1636)
!1635 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1636 = !{!1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1634, file: !1635, line: 14, baseType: !877, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1634, file: !1635, line: 15, baseType: !591, size: 32, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1634, file: !1635, line: 16, baseType: !591, size: 32, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1634, file: !1635, line: 21, baseType: !579, size: 64, offset: 128)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1634, file: !1635, line: 27, baseType: !212, size: 64, offset: 192)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1634, file: !1635, line: 28, baseType: !212, size: 64, offset: 256)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1634, file: !1635, line: 29, baseType: !579, size: 64, offset: 320)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1634, file: !1635, line: 32, baseType: !457, size: 128, offset: 384)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1634, file: !1635, line: 33, baseType: !237, size: 32, offset: 512)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1634, file: !1635, line: 37, baseType: !579, size: 64, offset: 576)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1634, file: !1635, line: 44, baseType: !1648, size: 256, offset: 640)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1649, line: 15, size: 256, elements: !1650)
!1649 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1650 = !{!1651, !1652, !1653, !1654, !1655, !1656, !1657}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1648, file: !1649, line: 16, baseType: !758)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1648, file: !1649, line: 18, baseType: !165, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1648, file: !1649, line: 19, baseType: !165, size: 32, offset: 32)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1648, file: !1649, line: 20, baseType: !165, size: 32, offset: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1648, file: !1649, line: 21, baseType: !165, size: 32, offset: 96)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1648, file: !1649, line: 22, baseType: !212, size: 64, offset: 128)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1648, file: !1649, line: 23, baseType: !212, size: 64, offset: 192)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1491, file: !1492, line: 146, baseType: !1659, size: 64, offset: 1024)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!1660 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !238, line: 18, flags: DIFlagFwdDecl)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1491, file: !1492, line: 147, baseType: !1662, size: 64, offset: 1088)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1492, line: 25, size: 64, elements: !1664)
!1664 = !{!1665, !1666, !1667}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1663, file: !1492, line: 26, baseType: !591, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1663, file: !1492, line: 27, baseType: !165, size: 32, offset: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1663, file: !1492, line: 28, baseType: !1668, offset: 64)
!1668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, elements: !1669)
!1669 = !{!1670}
!1670 = !DISubrange(count: 0)
!1671 = !DIDerivedType(tag: DW_TAG_member, scope: !1491, file: !1492, line: 149, baseType: !1672, size: 128, offset: 1152)
!1672 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1491, file: !1492, line: 149, size: 128, elements: !1673)
!1673 = !{!1674, !1675}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1672, file: !1492, line: 150, baseType: !165, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1672, file: !1492, line: 151, baseType: !849, size: 128, align: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1159, file: !32, line: 938, baseType: !1677, size: 256, offset: 1088)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !32, line: 896, size: 256, elements: !1678)
!1678 = !{!1679, !1680, !1681, !1682, !1683, !1684}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1677, file: !32, line: 897, baseType: !212, size: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1677, file: !32, line: 898, baseType: !7, size: 32, offset: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !1677, file: !32, line: 899, baseType: !7, size: 32, offset: 96)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1677, file: !32, line: 902, baseType: !7, size: 32, offset: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !1677, file: !32, line: 903, baseType: !7, size: 32, offset: 160)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !1677, file: !32, line: 904, baseType: !419, size: 64, offset: 192)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1159, file: !32, line: 940, baseType: !298, size: 64, offset: 1344)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1159, file: !32, line: 945, baseType: !160, size: 64, offset: 1408)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1159, file: !32, line: 949, baseType: !220, size: 128, offset: 1472)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1159, file: !32, line: 950, baseType: !220, size: 128, offset: 1600)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1159, file: !32, line: 952, baseType: !226, size: 64, offset: 1728)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1159, file: !32, line: 953, baseType: !1691, size: 32, offset: 1792)
!1691 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1692, line: 8, baseType: !191)
!1692 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1159, file: !32, line: 954, baseType: !1691, size: 32, offset: 1824)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1045, file: !209, line: 362, baseType: !160, size: 64, offset: 1344)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1045, file: !209, line: 365, baseType: !579, size: 64, offset: 1408)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1045, file: !209, line: 373, baseType: !1697, offset: 1472)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !209, line: 296, elements: !334)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1041, file: !209, line: 391, baseType: !1003, size: 64, offset: 64)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1041, file: !209, line: 392, baseType: !298, size: 64, offset: 128)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1041, file: !209, line: 394, baseType: !1410, size: 64, offset: 192)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1041, file: !209, line: 398, baseType: !212, size: 64, offset: 256)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1041, file: !209, line: 399, baseType: !212, size: 64, offset: 320)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1041, file: !209, line: 405, baseType: !212, size: 64, offset: 384)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1041, file: !209, line: 406, baseType: !212, size: 64, offset: 448)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1041, file: !209, line: 407, baseType: !1706, size: 64, offset: 512)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !533, line: 286, baseType: !1708)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !533, line: 286, size: 64, elements: !1709)
!1709 = !{!1710}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1708, file: !533, line: 286, baseType: !1711, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1060, line: 18, baseType: !212)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1041, file: !209, line: 416, baseType: !591, size: 32, offset: 576)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1041, file: !209, line: 428, baseType: !591, size: 32, offset: 608)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1041, file: !209, line: 437, baseType: !591, size: 32, offset: 640)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1041, file: !209, line: 447, baseType: !591, size: 32, offset: 672)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1041, file: !209, line: 450, baseType: !579, size: 64, offset: 704)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1041, file: !209, line: 452, baseType: !165, size: 32, offset: 768)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1041, file: !209, line: 454, baseType: !320, offset: 800)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1041, file: !209, line: 457, baseType: !752, size: 256, offset: 832)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1041, file: !209, line: 459, baseType: !220, size: 128, offset: 1088)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1041, file: !209, line: 466, baseType: !212, size: 64, offset: 1216)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1041, file: !209, line: 467, baseType: !212, size: 64, offset: 1280)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1041, file: !209, line: 469, baseType: !212, size: 64, offset: 1344)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1041, file: !209, line: 470, baseType: !212, size: 64, offset: 1408)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1041, file: !209, line: 471, baseType: !581, size: 64, offset: 1472)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1041, file: !209, line: 472, baseType: !212, size: 64, offset: 1536)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1041, file: !209, line: 473, baseType: !212, size: 64, offset: 1600)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1041, file: !209, line: 474, baseType: !212, size: 64, offset: 1664)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1041, file: !209, line: 475, baseType: !212, size: 64, offset: 1728)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1041, file: !209, line: 477, baseType: !320, offset: 1792)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1041, file: !209, line: 478, baseType: !212, size: 64, offset: 1792)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1041, file: !209, line: 478, baseType: !212, size: 64, offset: 1856)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1041, file: !209, line: 478, baseType: !212, size: 64, offset: 1920)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1041, file: !209, line: 478, baseType: !212, size: 64, offset: 1984)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1041, file: !209, line: 479, baseType: !212, size: 64, offset: 2048)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1041, file: !209, line: 479, baseType: !212, size: 64, offset: 2112)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1041, file: !209, line: 479, baseType: !212, size: 64, offset: 2176)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1041, file: !209, line: 480, baseType: !212, size: 64, offset: 2240)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1041, file: !209, line: 480, baseType: !212, size: 64, offset: 2304)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1041, file: !209, line: 480, baseType: !212, size: 64, offset: 2368)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1041, file: !209, line: 480, baseType: !212, size: 64, offset: 2432)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1041, file: !209, line: 482, baseType: !1743, size: 2816, offset: 2496)
!1743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, size: 2816, elements: !1744)
!1744 = !{!1745}
!1745 = !DISubrange(count: 44)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1041, file: !209, line: 488, baseType: !1747, size: 256, offset: 5312)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1748, line: 60, size: 256, elements: !1749)
!1748 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1749 = !{!1750}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1747, file: !1748, line: 61, baseType: !1751, size: 256)
!1751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !579, size: 256, elements: !1471)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1041, file: !209, line: 490, baseType: !1753, size: 64, offset: 5568)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!1754 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !209, line: 490, flags: DIFlagFwdDecl)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1041, file: !209, line: 493, baseType: !1756, size: 896, offset: 5632)
!1756 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1757, line: 53, baseType: !1758)
!1757 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1757, line: 13, size: 896, elements: !1759)
!1759 = !{!1760, !1761, !1762, !1763, !1766, !1767, !1768, !1769, !1789, !1790, !1791}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1758, file: !1757, line: 18, baseType: !298, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1758, file: !1757, line: 28, baseType: !581, size: 64, offset: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1758, file: !1757, line: 31, baseType: !752, size: 256, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1758, file: !1757, line: 32, baseType: !1764, size: 64, offset: 384)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1765 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1757, line: 32, flags: DIFlagFwdDecl)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1758, file: !1757, line: 37, baseType: !183, size: 16, offset: 448)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1758, file: !1757, line: 40, baseType: !575, size: 192, offset: 512)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1758, file: !1757, line: 41, baseType: !160, size: 64, offset: 704)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1758, file: !1757, line: 42, baseType: !1770, size: 64, offset: 768)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1772)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1773, line: 13, size: 896, elements: !1774)
!1773 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1774 = !{!1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1772, file: !1773, line: 14, baseType: !160, size: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1772, file: !1773, line: 15, baseType: !212, size: 64, offset: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1772, file: !1773, line: 17, baseType: !212, size: 64, offset: 128)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1772, file: !1773, line: 17, baseType: !212, size: 64, offset: 192)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1772, file: !1773, line: 19, baseType: !545, size: 64, offset: 256)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1772, file: !1773, line: 21, baseType: !545, size: 64, offset: 320)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1772, file: !1773, line: 22, baseType: !545, size: 64, offset: 384)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1772, file: !1773, line: 23, baseType: !545, size: 64, offset: 448)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1772, file: !1773, line: 24, baseType: !545, size: 64, offset: 512)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1772, file: !1773, line: 25, baseType: !545, size: 64, offset: 576)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1772, file: !1773, line: 26, baseType: !545, size: 64, offset: 640)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1772, file: !1773, line: 27, baseType: !545, size: 64, offset: 704)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1772, file: !1773, line: 28, baseType: !545, size: 64, offset: 768)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1772, file: !1773, line: 29, baseType: !545, size: 64, offset: 832)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1758, file: !1757, line: 44, baseType: !591, size: 32, offset: 832)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1758, file: !1757, line: 50, baseType: !181, size: 16, offset: 864)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1758, file: !1757, line: 51, baseType: !1792, size: 16, offset: 880)
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !170, line: 18, baseType: !1793)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !172, line: 23, baseType: !1553)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1041, file: !209, line: 495, baseType: !212, size: 64, offset: 6528)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1041, file: !209, line: 497, baseType: !1796, size: 64, offset: 6592)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !209, line: 381, size: 384, elements: !1798)
!1798 = !{!1799, !1800, !1806}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1797, file: !209, line: 382, baseType: !591, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1797, file: !209, line: 383, baseType: !1801, size: 128, offset: 64)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !209, line: 376, size: 128, elements: !1802)
!1802 = !{!1803, !1804}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1801, file: !209, line: 377, baseType: !864, size: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1801, file: !209, line: 378, baseType: !1805, size: 64, offset: 64)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1797, file: !209, line: 384, baseType: !1807, size: 192, offset: 192)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1808, line: 26, size: 192, elements: !1809)
!1808 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1809 = !{!1810, !1811}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1807, file: !1808, line: 27, baseType: !7, size: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1807, file: !1808, line: 28, baseType: !1812, size: 128, offset: 64)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1813, line: 43, size: 128, elements: !1814)
!1813 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1814 = !{!1815, !1816}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1812, file: !1813, line: 44, baseType: !758)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1812, file: !1813, line: 45, baseType: !220, size: 128)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1041, file: !209, line: 500, baseType: !320, offset: 6656)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1041, file: !209, line: 501, baseType: !1819, size: 64, offset: 6656)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64)
!1820 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !209, line: 387, flags: DIFlagFwdDecl)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1041, file: !209, line: 516, baseType: !1659, size: 64, offset: 6720)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1041, file: !209, line: 519, baseType: !1158, size: 64, offset: 6784)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1041, file: !209, line: 521, baseType: !1824, size: 64, offset: 6848)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !209, line: 521, flags: DIFlagFwdDecl)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1041, file: !209, line: 545, baseType: !591, size: 32, offset: 6912)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1041, file: !209, line: 548, baseType: !400, size: 8, offset: 6944)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1041, file: !209, line: 550, baseType: !1829, offset: 6952)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !1830, line: 142, elements: !334)
!1830 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1041, file: !209, line: 554, baseType: !1832, size: 256, offset: 6976)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1833, line: 102, size: 256, elements: !1834)
!1833 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1834 = !{!1835, !1836, !1837}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1832, file: !1833, line: 103, baseType: !579, size: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1832, file: !1833, line: 104, baseType: !220, size: 128, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1832, file: !1833, line: 105, baseType: !1838, size: 64, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1833, line: 21, baseType: !1839)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{null, !1842}
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1041, file: !209, line: 557, baseType: !191, size: 32, offset: 7232)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1038, file: !209, line: 565, baseType: !1845, offset: 7296)
!1845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, elements: !1846)
!1846 = !{!1847}
!1847 = !DISubrange(count: -1)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !865, file: !778, line: 758, baseType: !1037, size: 64, offset: 3968)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !865, file: !778, line: 761, baseType: !1850, size: 320, offset: 4032)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1748, line: 34, size: 320, elements: !1851)
!1851 = !{!1852, !1853}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1850, file: !1748, line: 35, baseType: !298, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1850, file: !1748, line: 36, baseType: !1854, size: 256, offset: 64)
!1854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1044, size: 256, elements: !1471)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !865, file: !778, line: 766, baseType: !165, size: 32, offset: 4352)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !865, file: !778, line: 767, baseType: !165, size: 32, offset: 4384)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !865, file: !778, line: 768, baseType: !165, size: 32, offset: 4416)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !865, file: !778, line: 770, baseType: !165, size: 32, offset: 4448)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !865, file: !778, line: 772, baseType: !212, size: 64, offset: 4480)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !865, file: !778, line: 775, baseType: !7, size: 32, offset: 4544)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !865, file: !778, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !865, file: !778, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !865, file: !778, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !865, file: !778, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !865, file: !778, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !865, file: !778, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !865, file: !778, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !865, file: !778, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !865, file: !778, line: 831, baseType: !212, size: 64, offset: 4672)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !865, file: !778, line: 833, baseType: !1871, size: 384, offset: 4736)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !49, line: 25, size: 384, elements: !1872)
!1872 = !{!1873, !1878}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1871, file: !49, line: 26, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!545, !1877}
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, scope: !1871, file: !49, line: 27, baseType: !1879, size: 320, offset: 64)
!1879 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1871, file: !49, line: 27, size: 320, elements: !1880)
!1880 = !{!1881, !1891, !1916}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1879, file: !49, line: 36, baseType: !1882, size: 320)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1879, file: !49, line: 29, size: 320, elements: !1883)
!1883 = !{!1884, !1886, !1887, !1888, !1889, !1890}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1882, file: !49, line: 30, baseType: !1885, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1882, file: !49, line: 31, baseType: !191, size: 32, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1882, file: !49, line: 32, baseType: !191, size: 32, offset: 96)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1882, file: !49, line: 33, baseType: !191, size: 32, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1882, file: !49, line: 34, baseType: !298, size: 64, offset: 192)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1882, file: !49, line: 35, baseType: !1885, size: 64, offset: 256)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1879, file: !49, line: 46, baseType: !1892, size: 192)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1879, file: !49, line: 38, size: 192, elements: !1893)
!1893 = !{!1894, !1895, !1896, !1915}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1892, file: !49, line: 39, baseType: !988, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1892, file: !49, line: 40, baseType: !48, size: 32, offset: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, scope: !1892, file: !49, line: 41, baseType: !1897, size: 64, offset: 64)
!1897 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1892, file: !49, line: 41, size: 64, elements: !1898)
!1898 = !{!1899, !1907}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1897, file: !49, line: 42, baseType: !1900, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1902, line: 7, size: 128, elements: !1903)
!1902 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1903 = !{!1904, !1906}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1901, file: !1902, line: 8, baseType: !1905, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !244, line: 93, baseType: !421)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1901, file: !1902, line: 9, baseType: !421, size: 64, offset: 64)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1897, file: !49, line: 43, baseType: !1908, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1910, line: 7, size: 64, elements: !1911)
!1910 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1911 = !{!1912, !1914}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1909, file: !1910, line: 8, baseType: !1913, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1910, line: 5, baseType: !1527)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1909, file: !1910, line: 9, baseType: !1527, size: 32, offset: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1892, file: !49, line: 45, baseType: !298, size: 64, offset: 128)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1879, file: !49, line: 54, baseType: !1917, size: 256)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1879, file: !49, line: 48, size: 256, elements: !1918)
!1918 = !{!1919, !1922, !1923, !1924, !1925}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1917, file: !49, line: 49, baseType: !1920, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !49, line: 14, flags: DIFlagFwdDecl)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1917, file: !49, line: 50, baseType: !165, size: 32, offset: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1917, file: !49, line: 51, baseType: !165, size: 32, offset: 96)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1917, file: !49, line: 52, baseType: !212, size: 64, offset: 128)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1917, file: !49, line: 53, baseType: !212, size: 64, offset: 192)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !865, file: !778, line: 835, baseType: !1927, size: 32, offset: 5120)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !159, line: 22, baseType: !1928)
!1928 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !244, line: 28, baseType: !165)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !865, file: !778, line: 836, baseType: !1927, size: 32, offset: 5152)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !865, file: !778, line: 840, baseType: !212, size: 64, offset: 5184)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !865, file: !778, line: 849, baseType: !864, size: 64, offset: 5248)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !865, file: !778, line: 852, baseType: !864, size: 64, offset: 5312)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !865, file: !778, line: 857, baseType: !220, size: 128, offset: 5376)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !865, file: !778, line: 858, baseType: !220, size: 128, offset: 5504)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !865, file: !778, line: 859, baseType: !864, size: 64, offset: 5632)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !865, file: !778, line: 867, baseType: !220, size: 128, offset: 5696)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !865, file: !778, line: 868, baseType: !220, size: 128, offset: 5824)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !865, file: !778, line: 871, baseType: !1463, size: 64, offset: 5952)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !865, file: !778, line: 872, baseType: !1940, size: 512, offset: 6016)
!1940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !457, size: 512, elements: !1471)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !865, file: !778, line: 873, baseType: !220, size: 128, offset: 6528)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !865, file: !778, line: 874, baseType: !220, size: 128, offset: 6656)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !865, file: !778, line: 876, baseType: !1944, size: 64, offset: 6784)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !865, file: !778, line: 879, baseType: !525, size: 64, offset: 6848)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !865, file: !778, line: 882, baseType: !525, size: 64, offset: 6912)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !865, file: !778, line: 884, baseType: !298, size: 64, offset: 6976)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !865, file: !778, line: 885, baseType: !298, size: 64, offset: 7040)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !865, file: !778, line: 890, baseType: !298, size: 64, offset: 7104)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !865, file: !778, line: 891, baseType: !1951, size: 128, offset: 7168)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !778, line: 242, size: 128, elements: !1952)
!1952 = !{!1953, !1954, !1955}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1951, file: !778, line: 244, baseType: !298, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1951, file: !778, line: 245, baseType: !298, size: 64, offset: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1951, file: !778, line: 246, baseType: !758, offset: 128)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !865, file: !778, line: 900, baseType: !212, size: 64, offset: 7296)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !865, file: !778, line: 901, baseType: !212, size: 64, offset: 7360)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !865, file: !778, line: 904, baseType: !298, size: 64, offset: 7424)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !865, file: !778, line: 907, baseType: !298, size: 64, offset: 7488)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !865, file: !778, line: 910, baseType: !212, size: 64, offset: 7552)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !865, file: !778, line: 911, baseType: !212, size: 64, offset: 7616)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !865, file: !778, line: 914, baseType: !1963, size: 640, offset: 7680)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1964, line: 123, size: 640, elements: !1965)
!1964 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1965 = !{!1966, !1972, !1973}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1963, file: !1964, line: 124, baseType: !1967, size: 576)
!1967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1968, size: 576, elements: !469)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1964, line: 108, size: 192, elements: !1969)
!1969 = !{!1970, !1971}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1968, file: !1964, line: 109, baseType: !298, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1968, file: !1964, line: 110, baseType: !997, size: 128, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1963, file: !1964, line: 125, baseType: !7, size: 32, offset: 576)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1963, file: !1964, line: 126, baseType: !7, size: 32, offset: 608)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !865, file: !778, line: 917, baseType: !1975, size: 192, offset: 8320)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1964, line: 134, size: 192, elements: !1976)
!1976 = !{!1977, !1978}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1975, file: !1964, line: 135, baseType: !849, size: 128, align: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1975, file: !1964, line: 136, baseType: !7, size: 32, offset: 128)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !865, file: !778, line: 923, baseType: !1489, size: 64, offset: 8512)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !865, file: !778, line: 926, baseType: !1489, size: 64, offset: 8576)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !865, file: !778, line: 929, baseType: !1489, size: 64, offset: 8640)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !865, file: !778, line: 933, baseType: !1519, size: 64, offset: 8704)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !865, file: !778, line: 943, baseType: !1984, size: 128, offset: 8768)
!1984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 128, elements: !1985)
!1985 = !{!1986}
!1986 = !DISubrange(count: 16)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !865, file: !778, line: 945, baseType: !1988, size: 64, offset: 8896)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !778, line: 49, flags: DIFlagFwdDecl)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !865, file: !778, line: 956, baseType: !1991, size: 64, offset: 8960)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 64)
!1992 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !778, line: 45, flags: DIFlagFwdDecl)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !865, file: !778, line: 959, baseType: !1994, size: 64, offset: 9024)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !778, line: 959, flags: DIFlagFwdDecl)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !865, file: !778, line: 962, baseType: !1997, size: 64, offset: 9088)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !778, line: 66, flags: DIFlagFwdDecl)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !865, file: !778, line: 966, baseType: !2000, size: 64, offset: 9152)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2002, line: 35, flags: DIFlagFwdDecl)
!2002 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !865, file: !778, line: 969, baseType: !2004, size: 64, offset: 9216)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2006, line: 82, size: 7296, elements: !2007)
!2006 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2007 = !{!2008, !2009, !2010, !2011, !2012, !2013, !2014, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2043, !2052, !2053, !2055, !2056, !2057, !2060, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2090, !2091, !2098, !2099, !2100, !2101, !2102, !2103}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2005, file: !2006, line: 83, baseType: !877, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2005, file: !2006, line: 84, baseType: !591, size: 32, offset: 32)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2005, file: !2006, line: 85, baseType: !165, size: 32, offset: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2005, file: !2006, line: 86, baseType: !220, size: 128, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2005, file: !2006, line: 88, baseType: !830, size: 128, offset: 256)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2005, file: !2006, line: 91, baseType: !864, size: 64, offset: 384)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2005, file: !2006, line: 94, baseType: !2015, size: 192, offset: 448)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2016, line: 30, size: 192, elements: !2017)
!2016 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2017 = !{!2018, !2019}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2015, file: !2016, line: 31, baseType: !220, size: 128)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2015, file: !2016, line: 32, baseType: !2020, size: 64, offset: 128)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2021, line: 25, baseType: !2022)
!2021 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2021, line: 23, size: 64, elements: !2023)
!2023 = !{!2024}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2022, file: !2021, line: 24, baseType: !1029, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2005, file: !2006, line: 97, baseType: !453, size: 64, offset: 640)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2005, file: !2006, line: 100, baseType: !165, size: 32, offset: 704)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2005, file: !2006, line: 106, baseType: !165, size: 32, offset: 736)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2005, file: !2006, line: 107, baseType: !864, size: 64, offset: 768)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2005, file: !2006, line: 110, baseType: !165, size: 32, offset: 832)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2005, file: !2006, line: 111, baseType: !7, size: 32, offset: 864)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2005, file: !2006, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2005, file: !2006, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2005, file: !2006, line: 128, baseType: !165, size: 32, offset: 928)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2005, file: !2006, line: 129, baseType: !220, size: 128, offset: 960)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2005, file: !2006, line: 132, baseType: !946, size: 512, offset: 1088)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2005, file: !2006, line: 133, baseType: !954, size: 64, offset: 1600)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2005, file: !2006, line: 140, baseType: !2038, size: 256, offset: 1664)
!2038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2039, size: 256, elements: !1511)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2006, line: 38, size: 128, elements: !2040)
!2040 = !{!2041, !2042}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2039, file: !2006, line: 39, baseType: !298, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2039, file: !2006, line: 40, baseType: !298, size: 64, offset: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2005, file: !2006, line: 146, baseType: !2044, size: 192, offset: 1920)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2006, line: 66, size: 192, elements: !2045)
!2045 = !{!2046}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2044, file: !2006, line: 67, baseType: !2047, size: 192)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2006, line: 47, size: 192, elements: !2048)
!2048 = !{!2049, !2050, !2051}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2047, file: !2006, line: 48, baseType: !581, size: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2047, file: !2006, line: 49, baseType: !581, size: 64, offset: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2047, file: !2006, line: 50, baseType: !581, size: 64, offset: 128)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2005, file: !2006, line: 150, baseType: !1963, size: 640, offset: 2112)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2005, file: !2006, line: 153, baseType: !2054, size: 256, offset: 2752)
!2054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1463, size: 256, elements: !1471)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2005, file: !2006, line: 159, baseType: !1463, size: 64, offset: 3008)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2005, file: !2006, line: 162, baseType: !165, size: 32, offset: 3072)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2005, file: !2006, line: 164, baseType: !2058, size: 64, offset: 3136)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2059 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2006, line: 164, flags: DIFlagFwdDecl)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2005, file: !2006, line: 175, baseType: !2061, size: 32, offset: 3200)
!2061 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !269, line: 805, baseType: !2062)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !269, line: 798, size: 32, elements: !2063)
!2063 = !{!2064, !2065}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2062, file: !269, line: 803, baseType: !268, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2062, file: !269, line: 804, baseType: !320, offset: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2005, file: !2006, line: 176, baseType: !298, size: 64, offset: 3264)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2005, file: !2006, line: 176, baseType: !298, size: 64, offset: 3328)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2005, file: !2006, line: 176, baseType: !298, size: 64, offset: 3392)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2005, file: !2006, line: 176, baseType: !298, size: 64, offset: 3456)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2005, file: !2006, line: 177, baseType: !298, size: 64, offset: 3520)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2005, file: !2006, line: 178, baseType: !298, size: 64, offset: 3584)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2005, file: !2006, line: 179, baseType: !1951, size: 128, offset: 3648)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2005, file: !2006, line: 180, baseType: !212, size: 64, offset: 3776)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2005, file: !2006, line: 180, baseType: !212, size: 64, offset: 3840)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2005, file: !2006, line: 180, baseType: !212, size: 64, offset: 3904)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2005, file: !2006, line: 180, baseType: !212, size: 64, offset: 3968)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2005, file: !2006, line: 181, baseType: !212, size: 64, offset: 4032)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2005, file: !2006, line: 181, baseType: !212, size: 64, offset: 4096)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2005, file: !2006, line: 181, baseType: !212, size: 64, offset: 4160)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2005, file: !2006, line: 181, baseType: !212, size: 64, offset: 4224)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2005, file: !2006, line: 182, baseType: !212, size: 64, offset: 4288)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2005, file: !2006, line: 182, baseType: !212, size: 64, offset: 4352)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2005, file: !2006, line: 182, baseType: !212, size: 64, offset: 4416)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2005, file: !2006, line: 182, baseType: !212, size: 64, offset: 4480)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2005, file: !2006, line: 183, baseType: !212, size: 64, offset: 4544)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2005, file: !2006, line: 183, baseType: !212, size: 64, offset: 4608)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2005, file: !2006, line: 184, baseType: !2088, offset: 4672)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2089, line: 12, elements: !334)
!2089 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2005, file: !2006, line: 192, baseType: !300, size: 64, offset: 4672)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2005, file: !2006, line: 203, baseType: !2092, size: 2048, offset: 4736)
!2092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2093, size: 2048, elements: !1985)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2094, line: 43, size: 128, elements: !2095)
!2094 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2095 = !{!2096, !2097}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2093, file: !2094, line: 44, baseType: !1192, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2093, file: !2094, line: 45, baseType: !1192, size: 64, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2005, file: !2006, line: 220, baseType: !400, size: 8, offset: 6784)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2005, file: !2006, line: 221, baseType: !1553, size: 16, offset: 6800)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2005, file: !2006, line: 222, baseType: !1553, size: 16, offset: 6816)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2005, file: !2006, line: 224, baseType: !1037, size: 64, offset: 6848)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2005, file: !2006, line: 227, baseType: !575, size: 192, offset: 6912)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2005, file: !2006, line: 233, baseType: !575, size: 192, offset: 7104)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !865, file: !778, line: 970, baseType: !2105, size: 64, offset: 9280)
!2105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2106, size: 64)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2006, line: 20, size: 16576, elements: !2107)
!2107 = !{!2108, !2109, !2110, !2111}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2106, file: !2006, line: 21, baseType: !320)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2106, file: !2006, line: 22, baseType: !877, size: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2106, file: !2006, line: 23, baseType: !830, size: 128, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2106, file: !2006, line: 24, baseType: !2112, size: 16384, offset: 192)
!2112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2113, size: 16384, elements: !2133)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2016, line: 49, size: 256, elements: !2114)
!2114 = !{!2115}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2113, file: !2016, line: 50, baseType: !2116, size: 256)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2016, line: 35, size: 256, elements: !2117)
!2117 = !{!2118, !2125, !2126, !2132}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2116, file: !2016, line: 37, baseType: !2119, size: 64)
!2119 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2120, line: 19, baseType: !2121)
!2120 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2120, line: 18, baseType: !2123)
!2123 = !DISubroutineType(types: !2124)
!2124 = !{null, !165}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2116, file: !2016, line: 38, baseType: !212, size: 64, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2116, file: !2016, line: 44, baseType: !2127, size: 64, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2120, line: 22, baseType: !2128)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2120, line: 21, baseType: !2130)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{null}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2116, file: !2016, line: 46, baseType: !2020, size: 64, offset: 192)
!2133 = !{!2134}
!2134 = !DISubrange(count: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !865, file: !778, line: 971, baseType: !2020, size: 64, offset: 9344)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !865, file: !778, line: 972, baseType: !2020, size: 64, offset: 9408)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !865, file: !778, line: 974, baseType: !2020, size: 64, offset: 9472)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !865, file: !778, line: 975, baseType: !2015, size: 192, offset: 9536)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !865, file: !778, line: 976, baseType: !212, size: 64, offset: 9728)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !865, file: !778, line: 977, baseType: !1190, size: 64, offset: 9792)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !865, file: !778, line: 978, baseType: !7, size: 32, offset: 9856)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !865, file: !778, line: 980, baseType: !852, size: 64, offset: 9920)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !865, file: !778, line: 989, baseType: !2144, size: 128, offset: 9984)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2145, line: 35, size: 128, elements: !2146)
!2145 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2146 = !{!2147, !2148, !2149}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2144, file: !2145, line: 36, baseType: !165, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2144, file: !2145, line: 37, baseType: !591, size: 32, offset: 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2144, file: !2145, line: 38, baseType: !2150, size: 64, offset: 64)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2145, line: 23, flags: DIFlagFwdDecl)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !865, file: !778, line: 992, baseType: !298, size: 64, offset: 10112)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !865, file: !778, line: 993, baseType: !298, size: 64, offset: 10176)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !865, file: !778, line: 996, baseType: !320, offset: 10240)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !865, file: !778, line: 999, baseType: !758, offset: 10240)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !865, file: !778, line: 1001, baseType: !2157, size: 64, offset: 10240)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !778, line: 636, size: 64, elements: !2158)
!2158 = !{!2159}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2157, file: !778, line: 637, baseType: !2160, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !865, file: !778, line: 1005, baseType: !1000, size: 128, offset: 10304)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !865, file: !778, line: 1007, baseType: !864, size: 64, offset: 10432)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !865, file: !778, line: 1009, baseType: !2164, size: 64, offset: 10496)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !778, line: 1009, flags: DIFlagFwdDecl)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !865, file: !778, line: 1043, baseType: !160, size: 64, offset: 10560)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !865, file: !778, line: 1046, baseType: !2168, size: 64, offset: 10624)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2169 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !778, line: 41, flags: DIFlagFwdDecl)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !865, file: !778, line: 1050, baseType: !2171, size: 64, offset: 10688)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !778, line: 42, flags: DIFlagFwdDecl)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !865, file: !778, line: 1054, baseType: !2174, size: 64, offset: 10752)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !778, line: 55, flags: DIFlagFwdDecl)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !865, file: !778, line: 1056, baseType: !776, size: 64, offset: 10816)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !865, file: !778, line: 1058, baseType: !2178, size: 64, offset: 10880)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2180, line: 99, size: 704, elements: !2181)
!2180 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2181 = !{!2182, !2183, !2184, !2185, !2186, !2187, !2194, !2215, !2216}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2179, file: !2180, line: 100, baseType: !579, size: 64)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2179, file: !2180, line: 101, baseType: !591, size: 32, offset: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2179, file: !2180, line: 102, baseType: !591, size: 32, offset: 96)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2179, file: !2180, line: 105, baseType: !320, offset: 128)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2179, file: !2180, line: 107, baseType: !183, size: 16, offset: 128)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2179, file: !2180, line: 109, baseType: !2188, size: 128, offset: 192)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !2189, line: 292, size: 128, elements: !2190)
!2189 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!2190 = !{!2191, !2192, !2193}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !2188, file: !2189, line: 293, baseType: !320)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !2188, file: !2189, line: 295, baseType: !158, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !2188, file: !2189, line: 296, baseType: !160, size: 64, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2179, file: !2180, line: 110, baseType: !2195, size: 64, offset: 320)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2180, line: 73, size: 448, elements: !2197)
!2197 = !{!2198, !2201, !2202, !2209, !2214}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2196, file: !2180, line: 74, baseType: !2199, size: 64)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!2200 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2180, line: 74, flags: DIFlagFwdDecl)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2196, file: !2180, line: 75, baseType: !2178, size: 64, offset: 64)
!2202 = !DIDerivedType(tag: DW_TAG_member, scope: !2196, file: !2180, line: 83, baseType: !2203, size: 128, offset: 128)
!2203 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2196, file: !2180, line: 83, size: 128, elements: !2204)
!2204 = !{!2205, !2206}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2203, file: !2180, line: 84, baseType: !220, size: 128)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2203, file: !2180, line: 85, baseType: !2207, size: 64)
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 64)
!2208 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !209, line: 117, flags: DIFlagFwdDecl)
!2209 = !DIDerivedType(tag: DW_TAG_member, scope: !2196, file: !2180, line: 87, baseType: !2210, size: 128, offset: 256)
!2210 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2196, file: !2180, line: 87, size: 128, elements: !2211)
!2211 = !{!2212, !2213}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2210, file: !2180, line: 88, baseType: !457, size: 128)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2210, file: !2180, line: 89, baseType: !849, size: 128, align: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2196, file: !2180, line: 92, baseType: !7, size: 32, offset: 384)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2179, file: !2180, line: 111, baseType: !453, size: 64, offset: 384)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2179, file: !2180, line: 113, baseType: !1832, size: 256, offset: 448)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !865, file: !778, line: 1061, baseType: !2218, size: 64, offset: 10944)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !778, line: 43, flags: DIFlagFwdDecl)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !865, file: !778, line: 1064, baseType: !212, size: 64, offset: 11008)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !865, file: !778, line: 1065, baseType: !2222, size: 64, offset: 11072)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2016, line: 14, baseType: !2224)
!2224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2016, line: 12, size: 384, elements: !2225)
!2225 = !{!2226}
!2226 = !DIDerivedType(tag: DW_TAG_member, scope: !2224, file: !2016, line: 13, baseType: !2227, size: 384)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2224, file: !2016, line: 13, size: 384, elements: !2228)
!2228 = !{!2229, !2230, !2231, !2232}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2227, file: !2016, line: 13, baseType: !165, size: 32)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2227, file: !2016, line: 13, baseType: !165, size: 32, offset: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2227, file: !2016, line: 13, baseType: !165, size: 32, offset: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2227, file: !2016, line: 13, baseType: !2233, size: 256, offset: 128)
!2233 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2234, line: 32, size: 256, elements: !2235)
!2234 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2235 = !{!2236, !2241, !2254, !2260, !2269, !2289, !2294}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2233, file: !2234, line: 37, baseType: !2237, size: 64)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2233, file: !2234, line: 34, size: 64, elements: !2238)
!2238 = !{!2239, !2240}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2237, file: !2234, line: 35, baseType: !1928, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2237, file: !2234, line: 36, baseType: !243, size: 32, offset: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2233, file: !2234, line: 45, baseType: !2242, size: 192)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2233, file: !2234, line: 40, size: 192, elements: !2243)
!2243 = !{!2244, !2246, !2247, !2253}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2242, file: !2234, line: 41, baseType: !2245, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !244, line: 95, baseType: !165)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2242, file: !2234, line: 42, baseType: !165, size: 32, offset: 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2242, file: !2234, line: 43, baseType: !2248, size: 64, offset: 64)
!2248 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2234, line: 11, baseType: !2249)
!2249 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2234, line: 8, size: 64, elements: !2250)
!2250 = !{!2251, !2252}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2249, file: !2234, line: 9, baseType: !165, size: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2249, file: !2234, line: 10, baseType: !160, size: 64)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2242, file: !2234, line: 44, baseType: !165, size: 32, offset: 128)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2233, file: !2234, line: 52, baseType: !2255, size: 128)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2233, file: !2234, line: 48, size: 128, elements: !2256)
!2256 = !{!2257, !2258, !2259}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2255, file: !2234, line: 49, baseType: !1928, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2255, file: !2234, line: 50, baseType: !243, size: 32, offset: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2255, file: !2234, line: 51, baseType: !2248, size: 64, offset: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2233, file: !2234, line: 61, baseType: !2261, size: 256)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2233, file: !2234, line: 55, size: 256, elements: !2262)
!2262 = !{!2263, !2264, !2265, !2266, !2268}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2261, file: !2234, line: 56, baseType: !1928, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2261, file: !2234, line: 57, baseType: !243, size: 32, offset: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2261, file: !2234, line: 58, baseType: !165, size: 32, offset: 64)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2261, file: !2234, line: 59, baseType: !2267, size: 64, offset: 128)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !244, line: 94, baseType: !1189)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2261, file: !2234, line: 60, baseType: !2267, size: 64, offset: 192)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2233, file: !2234, line: 95, baseType: !2270, size: 256)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2233, file: !2234, line: 64, size: 256, elements: !2271)
!2271 = !{!2272, !2273}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2270, file: !2234, line: 65, baseType: !160, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_member, scope: !2270, file: !2234, line: 77, baseType: !2274, size: 192, offset: 64)
!2274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2270, file: !2234, line: 77, size: 192, elements: !2275)
!2275 = !{!2276, !2277, !2284}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2274, file: !2234, line: 82, baseType: !1553, size: 16)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2274, file: !2234, line: 88, baseType: !2278, size: 192)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2274, file: !2234, line: 84, size: 192, elements: !2279)
!2279 = !{!2280, !2282, !2283}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2278, file: !2234, line: 85, baseType: !2281, size: 64)
!2281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 64, elements: !984)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2278, file: !2234, line: 86, baseType: !160, size: 64, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2278, file: !2234, line: 87, baseType: !160, size: 64, offset: 128)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2274, file: !2234, line: 93, baseType: !2285, size: 96)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2274, file: !2234, line: 90, size: 96, elements: !2286)
!2286 = !{!2287, !2288}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2285, file: !2234, line: 91, baseType: !2281, size: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2285, file: !2234, line: 92, baseType: !192, size: 32, offset: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2233, file: !2234, line: 101, baseType: !2290, size: 128)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2233, file: !2234, line: 98, size: 128, elements: !2291)
!2291 = !{!2292, !2293}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2290, file: !2234, line: 99, baseType: !545, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2290, file: !2234, line: 100, baseType: !165, size: 32, offset: 64)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2233, file: !2234, line: 108, baseType: !2295, size: 128)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2233, file: !2234, line: 104, size: 128, elements: !2296)
!2296 = !{!2297, !2298, !2299}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2295, file: !2234, line: 105, baseType: !160, size: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2295, file: !2234, line: 106, baseType: !165, size: 32, offset: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2295, file: !2234, line: 107, baseType: !7, size: 32, offset: 96)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !865, file: !778, line: 1067, baseType: !2088, offset: 11136)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !865, file: !778, line: 1099, baseType: !2302, size: 64, offset: 11136)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !778, line: 56, flags: DIFlagFwdDecl)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !865, file: !778, line: 1103, baseType: !220, size: 128, offset: 11200)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !865, file: !778, line: 1104, baseType: !2306, size: 64, offset: 11328)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 64)
!2307 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !778, line: 46, flags: DIFlagFwdDecl)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !865, file: !778, line: 1105, baseType: !575, size: 192, offset: 11392)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !865, file: !778, line: 1106, baseType: !7, size: 32, offset: 11584)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !865, file: !778, line: 1109, baseType: !2311, size: 128, offset: 11648)
!2311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2312, size: 128, elements: !1511)
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !778, line: 51, flags: DIFlagFwdDecl)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !865, file: !778, line: 1110, baseType: !575, size: 192, offset: 11776)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !865, file: !778, line: 1111, baseType: !220, size: 128, offset: 11968)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !865, file: !778, line: 1173, baseType: !2317, size: 64, offset: 12096)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2319, line: 62, size: 256, align: 256, elements: !2320)
!2319 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2320 = !{!2321, !2322, !2323, !2328}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2318, file: !2319, line: 75, baseType: !192, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2318, file: !2319, line: 90, baseType: !192, size: 32, offset: 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2318, file: !2319, line: 124, baseType: !2324, size: 64, offset: 64)
!2324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2318, file: !2319, line: 109, size: 64, elements: !2325)
!2325 = !{!2326, !2327}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2324, file: !2319, line: 110, baseType: !299, size: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2324, file: !2319, line: 112, baseType: !299, size: 64)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2318, file: !2319, line: 144, baseType: !192, size: 32, offset: 128)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !865, file: !778, line: 1174, baseType: !191, size: 32, offset: 12160)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !865, file: !778, line: 1179, baseType: !212, size: 64, offset: 12224)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !865, file: !778, line: 1182, baseType: !2332, size: 128, offset: 12288)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1748, line: 76, size: 128, elements: !2333)
!2333 = !{!2334, !2339, !2340}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2332, file: !1748, line: 85, baseType: !2335, size: 64)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2336, line: 7, size: 64, elements: !2337)
!2336 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2337 = !{!2338}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2335, file: !2336, line: 12, baseType: !1026, size: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2332, file: !1748, line: 88, baseType: !400, size: 8, offset: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2332, file: !1748, line: 95, baseType: !400, size: 8, offset: 72)
!2341 = !DIDerivedType(tag: DW_TAG_member, scope: !865, file: !778, line: 1184, baseType: !2342, size: 128, offset: 12416)
!2342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !865, file: !778, line: 1184, size: 128, elements: !2343)
!2343 = !{!2344, !2345}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2342, file: !778, line: 1185, baseType: !877, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2342, file: !778, line: 1186, baseType: !849, size: 128, align: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !865, file: !778, line: 1190, baseType: !1422, size: 64, offset: 12544)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !865, file: !778, line: 1192, baseType: !2348, size: 128, offset: 12608)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1748, line: 64, size: 128, elements: !2349)
!2349 = !{!2350, !2351, !2352}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2348, file: !1748, line: 65, baseType: !207, size: 64)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2348, file: !1748, line: 67, baseType: !192, size: 32, offset: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2348, file: !1748, line: 68, baseType: !192, size: 32, offset: 96)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !865, file: !778, line: 1206, baseType: !165, size: 32, offset: 12736)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !865, file: !778, line: 1207, baseType: !165, size: 32, offset: 12768)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !865, file: !778, line: 1209, baseType: !212, size: 64, offset: 12800)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !865, file: !778, line: 1219, baseType: !298, size: 64, offset: 12864)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !865, file: !778, line: 1220, baseType: !298, size: 64, offset: 12928)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !865, file: !778, line: 1317, baseType: !165, size: 32, offset: 12992)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !865, file: !778, line: 1319, baseType: !864, size: 64, offset: 13056)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !865, file: !778, line: 1322, baseType: !2361, size: 64, offset: 13120)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 64)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2363, line: 56, size: 512, elements: !2364)
!2363 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2364 = !{!2365, !2366, !2367, !2368, !2369, !2371, !2372, !2374}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2362, file: !2363, line: 57, baseType: !2361, size: 64)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2362, file: !2363, line: 58, baseType: !160, size: 64, offset: 64)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2362, file: !2363, line: 59, baseType: !212, size: 64, offset: 128)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2362, file: !2363, line: 60, baseType: !212, size: 64, offset: 192)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2362, file: !2363, line: 61, baseType: !2370, size: 64, offset: 256)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2362, file: !2363, line: 62, baseType: !7, size: 32, offset: 320)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2362, file: !2363, line: 63, baseType: !2373, size: 64, offset: 384)
!2373 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !159, line: 153, baseType: !298)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2362, file: !2363, line: 64, baseType: !2375, size: 64, offset: 448)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 64)
!2376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !865, file: !778, line: 1326, baseType: !877, size: 32, offset: 13184)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !865, file: !778, line: 1342, baseType: !160, size: 64, offset: 13248)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !865, file: !778, line: 1343, baseType: !299, size: 64, offset: 13312)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !865, file: !778, line: 1344, baseType: !298, size: 64, offset: 13376)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !865, file: !778, line: 1345, baseType: !299, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !865, file: !778, line: 1346, baseType: !299, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !865, file: !778, line: 1347, baseType: !299, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !865, file: !778, line: 1348, baseType: !849, size: 128, align: 64, offset: 13504)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !865, file: !778, line: 1358, baseType: !2386, size: 34816, offset: 13824)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2387, line: 485, size: 34816, elements: !2388)
!2387 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2388 = !{!2389, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2418, !2419, !2420, !2421, !2422, !2423, !2426, !2427, !2428}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2386, file: !2387, line: 487, baseType: !2390, size: 192)
!2390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2391, size: 192, elements: !469)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2392, line: 16, size: 64, elements: !2393)
!2392 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2393 = !{!2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2391, file: !2392, line: 17, baseType: !181, size: 16)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2391, file: !2392, line: 18, baseType: !181, size: 16, offset: 16)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2391, file: !2392, line: 19, baseType: !181, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2391, file: !2392, line: 19, baseType: !181, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2391, file: !2392, line: 19, baseType: !181, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2391, file: !2392, line: 19, baseType: !181, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2391, file: !2392, line: 19, baseType: !181, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2391, file: !2392, line: 20, baseType: !181, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2391, file: !2392, line: 20, baseType: !181, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2391, file: !2392, line: 20, baseType: !181, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2391, file: !2392, line: 20, baseType: !181, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2391, file: !2392, line: 20, baseType: !181, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2391, file: !2392, line: 20, baseType: !181, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2386, file: !2387, line: 491, baseType: !212, size: 64, offset: 192)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2386, file: !2387, line: 495, baseType: !183, size: 16, offset: 256)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2386, file: !2387, line: 496, baseType: !183, size: 16, offset: 272)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2386, file: !2387, line: 497, baseType: !183, size: 16, offset: 288)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2386, file: !2387, line: 498, baseType: !183, size: 16, offset: 304)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2386, file: !2387, line: 502, baseType: !212, size: 64, offset: 320)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2386, file: !2387, line: 503, baseType: !212, size: 64, offset: 384)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2386, file: !2387, line: 514, baseType: !2415, size: 256, offset: 448)
!2415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2416, size: 256, elements: !1471)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2387, line: 483, flags: DIFlagFwdDecl)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2386, file: !2387, line: 516, baseType: !212, size: 64, offset: 704)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2386, file: !2387, line: 518, baseType: !212, size: 64, offset: 768)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2386, file: !2387, line: 520, baseType: !212, size: 64, offset: 832)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2386, file: !2387, line: 521, baseType: !212, size: 64, offset: 896)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2386, file: !2387, line: 522, baseType: !212, size: 64, offset: 960)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2386, file: !2387, line: 528, baseType: !2424, size: 64, offset: 1024)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2387, line: 10, flags: DIFlagFwdDecl)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2386, file: !2387, line: 535, baseType: !212, size: 64, offset: 1088)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2386, file: !2387, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2386, file: !2387, line: 540, baseType: !2429, size: 33280, offset: 1536)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2430, line: 317, size: 33280, elements: !2431)
!2430 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2431 = !{!2432, !2433, !2434}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2429, file: !2430, line: 330, baseType: !7, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2429, file: !2430, line: 337, baseType: !212, size: 64, offset: 64)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2429, file: !2430, line: 348, baseType: !2435, size: 32768, offset: 512)
!2435 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2430, line: 304, size: 32768, elements: !2436)
!2436 = !{!2437, !2452, !2489, !2539, !2552}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2435, file: !2430, line: 305, baseType: !2438, size: 896)
!2438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2430, line: 12, size: 896, elements: !2439)
!2439 = !{!2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2451}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2438, file: !2430, line: 13, baseType: !191, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2438, file: !2430, line: 14, baseType: !191, size: 32, offset: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2438, file: !2430, line: 15, baseType: !191, size: 32, offset: 64)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2438, file: !2430, line: 16, baseType: !191, size: 32, offset: 96)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2438, file: !2430, line: 17, baseType: !191, size: 32, offset: 128)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2438, file: !2430, line: 18, baseType: !191, size: 32, offset: 160)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2438, file: !2430, line: 19, baseType: !191, size: 32, offset: 192)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2438, file: !2430, line: 22, baseType: !2448, size: 640, offset: 224)
!2448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 640, elements: !2449)
!2449 = !{!2450}
!2450 = !DISubrange(count: 20)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2438, file: !2430, line: 25, baseType: !191, size: 32, offset: 864)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2435, file: !2430, line: 306, baseType: !2453, size: 4096, align: 128)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2430, line: 34, size: 4096, align: 128, elements: !2454)
!2454 = !{!2455, !2456, !2457, !2458, !2459, !2474, !2475, !2476, !2478, !2480, !2484}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2453, file: !2430, line: 35, baseType: !181, size: 16)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2453, file: !2430, line: 36, baseType: !181, size: 16, offset: 16)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2453, file: !2430, line: 37, baseType: !181, size: 16, offset: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2453, file: !2430, line: 38, baseType: !181, size: 16, offset: 48)
!2459 = !DIDerivedType(tag: DW_TAG_member, scope: !2453, file: !2430, line: 39, baseType: !2460, size: 128, offset: 64)
!2460 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2453, file: !2430, line: 39, size: 128, elements: !2461)
!2461 = !{!2462, !2467}
!2462 = !DIDerivedType(tag: DW_TAG_member, scope: !2460, file: !2430, line: 40, baseType: !2463, size: 128)
!2463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2460, file: !2430, line: 40, size: 128, elements: !2464)
!2464 = !{!2465, !2466}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2463, file: !2430, line: 41, baseType: !298, size: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2463, file: !2430, line: 42, baseType: !298, size: 64, offset: 64)
!2467 = !DIDerivedType(tag: DW_TAG_member, scope: !2460, file: !2430, line: 44, baseType: !2468, size: 128)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2460, file: !2430, line: 44, size: 128, elements: !2469)
!2469 = !{!2470, !2471, !2472, !2473}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2468, file: !2430, line: 45, baseType: !191, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2468, file: !2430, line: 46, baseType: !191, size: 32, offset: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2468, file: !2430, line: 47, baseType: !191, size: 32, offset: 64)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2468, file: !2430, line: 48, baseType: !191, size: 32, offset: 96)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2453, file: !2430, line: 51, baseType: !191, size: 32, offset: 192)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2453, file: !2430, line: 52, baseType: !191, size: 32, offset: 224)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2453, file: !2430, line: 55, baseType: !2477, size: 1024, offset: 256)
!2477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 1024, elements: !307)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2453, file: !2430, line: 58, baseType: !2479, size: 2048, offset: 1280)
!2479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 2048, elements: !2133)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2453, file: !2430, line: 60, baseType: !2481, size: 384, offset: 3328)
!2481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 384, elements: !2482)
!2482 = !{!2483}
!2483 = !DISubrange(count: 12)
!2484 = !DIDerivedType(tag: DW_TAG_member, scope: !2453, file: !2430, line: 62, baseType: !2485, size: 384, offset: 3712)
!2485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2453, file: !2430, line: 62, size: 384, elements: !2486)
!2486 = !{!2487, !2488}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2485, file: !2430, line: 63, baseType: !2481, size: 384)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2485, file: !2430, line: 64, baseType: !2481, size: 384)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2435, file: !2430, line: 307, baseType: !2490, size: 1088)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2430, line: 79, size: 1088, elements: !2491)
!2491 = !{!2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2538}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2490, file: !2430, line: 80, baseType: !191, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2490, file: !2430, line: 81, baseType: !191, size: 32, offset: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2490, file: !2430, line: 82, baseType: !191, size: 32, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2490, file: !2430, line: 83, baseType: !191, size: 32, offset: 96)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2490, file: !2430, line: 84, baseType: !191, size: 32, offset: 128)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2490, file: !2430, line: 85, baseType: !191, size: 32, offset: 160)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2490, file: !2430, line: 86, baseType: !191, size: 32, offset: 192)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2490, file: !2430, line: 88, baseType: !2448, size: 640, offset: 224)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2490, file: !2430, line: 89, baseType: !169, size: 8, offset: 864)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2490, file: !2430, line: 90, baseType: !169, size: 8, offset: 872)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2490, file: !2430, line: 91, baseType: !169, size: 8, offset: 880)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2490, file: !2430, line: 92, baseType: !169, size: 8, offset: 888)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2490, file: !2430, line: 93, baseType: !169, size: 8, offset: 896)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2490, file: !2430, line: 94, baseType: !169, size: 8, offset: 904)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2490, file: !2430, line: 95, baseType: !2507, size: 64, offset: 960)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2509, line: 11, size: 128, elements: !2510)
!2509 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2510 = !{!2511, !2512}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2508, file: !2509, line: 12, baseType: !545, size: 64)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2508, file: !2509, line: 13, baseType: !2513, size: 64, offset: 64)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2515, line: 56, size: 1344, elements: !2516)
!2515 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2516 = !{!2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2514, file: !2515, line: 61, baseType: !212, size: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2514, file: !2515, line: 62, baseType: !212, size: 64, offset: 64)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2514, file: !2515, line: 63, baseType: !212, size: 64, offset: 128)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2514, file: !2515, line: 64, baseType: !212, size: 64, offset: 192)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2514, file: !2515, line: 65, baseType: !212, size: 64, offset: 256)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2514, file: !2515, line: 66, baseType: !212, size: 64, offset: 320)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2514, file: !2515, line: 68, baseType: !212, size: 64, offset: 384)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2514, file: !2515, line: 69, baseType: !212, size: 64, offset: 448)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2514, file: !2515, line: 70, baseType: !212, size: 64, offset: 512)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2514, file: !2515, line: 71, baseType: !212, size: 64, offset: 576)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2514, file: !2515, line: 72, baseType: !212, size: 64, offset: 640)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2514, file: !2515, line: 73, baseType: !212, size: 64, offset: 704)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2514, file: !2515, line: 74, baseType: !212, size: 64, offset: 768)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2514, file: !2515, line: 75, baseType: !212, size: 64, offset: 832)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2514, file: !2515, line: 76, baseType: !212, size: 64, offset: 896)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2514, file: !2515, line: 81, baseType: !212, size: 64, offset: 960)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2514, file: !2515, line: 83, baseType: !212, size: 64, offset: 1024)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2514, file: !2515, line: 84, baseType: !212, size: 64, offset: 1088)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2514, file: !2515, line: 85, baseType: !212, size: 64, offset: 1152)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2514, file: !2515, line: 86, baseType: !212, size: 64, offset: 1216)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2514, file: !2515, line: 87, baseType: !212, size: 64, offset: 1280)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2490, file: !2430, line: 96, baseType: !191, size: 32, offset: 1024)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2435, file: !2430, line: 308, baseType: !2540, size: 4608, align: 512)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2430, line: 289, size: 4608, align: 512, elements: !2541)
!2541 = !{!2542, !2543, !2550}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2540, file: !2430, line: 290, baseType: !2453, size: 4096, align: 128)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2540, file: !2430, line: 291, baseType: !2544, size: 512, offset: 4096)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2430, line: 268, size: 512, elements: !2545)
!2545 = !{!2546, !2547, !2548}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2544, file: !2430, line: 269, baseType: !298, size: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2544, file: !2430, line: 270, baseType: !298, size: 64, offset: 64)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2544, file: !2430, line: 271, baseType: !2549, size: 384, offset: 128)
!2549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 384, elements: !1571)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2540, file: !2430, line: 292, baseType: !2551, offset: 4608)
!2551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, elements: !1669)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2435, file: !2430, line: 309, baseType: !2553, size: 32768)
!2553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !169, size: 32768, elements: !2554)
!2554 = !{!2555}
!2555 = !DISubrange(count: 4096)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !838, file: !839, line: 16, baseType: !830, size: 128, offset: 448)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !838, file: !839, line: 17, baseType: !591, size: 32, offset: 576)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !410, file: !32, line: 1465, baseType: !160, size: 64, offset: 6400)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !410, file: !32, line: 1468, baseType: !191, size: 32, offset: 6464)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !410, file: !32, line: 1470, baseType: !626, size: 64, offset: 6528)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !410, file: !32, line: 1471, baseType: !626, size: 64, offset: 6592)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !410, file: !32, line: 1473, baseType: !192, size: 32, offset: 6656)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !410, file: !32, line: 1474, baseType: !2564, size: 64, offset: 6720)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 64)
!2565 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !32, line: 603, flags: DIFlagFwdDecl)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !410, file: !32, line: 1477, baseType: !2567, size: 256, offset: 6784)
!2567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 256, elements: !307)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !410, file: !32, line: 1478, baseType: !2569, size: 128, offset: 7040)
!2569 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2570, line: 18, baseType: !2571)
!2570 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2571 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2570, line: 16, size: 128, elements: !2572)
!2572 = !{!2573}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2571, file: !2570, line: 17, baseType: !2574, size: 128)
!2574 = !DICompositeType(tag: DW_TAG_array_type, baseType: !171, size: 128, elements: !1985)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !410, file: !32, line: 1480, baseType: !7, size: 32, offset: 7168)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !410, file: !32, line: 1481, baseType: !1455, size: 32, offset: 7200)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !410, file: !32, line: 1487, baseType: !575, size: 192, offset: 7232)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !410, file: !32, line: 1493, baseType: !357, size: 64, offset: 7424)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !410, file: !32, line: 1495, baseType: !337, size: 64, offset: 7488)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !410, file: !32, line: 1500, baseType: !165, size: 32, offset: 7552)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !410, file: !32, line: 1502, baseType: !2582, size: 448, offset: 7616)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !548, line: 60, size: 448, elements: !2583)
!2583 = !{!2584, !2589, !2590, !2591, !2592, !2593, !2594}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2582, file: !548, line: 61, baseType: !2585, size: 64)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 64)
!2586 = !DISubroutineType(types: !2587)
!2587 = !{!212, !2588, !546}
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 64)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2582, file: !548, line: 63, baseType: !2585, size: 64, offset: 64)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2582, file: !548, line: 66, baseType: !545, size: 64, offset: 128)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2582, file: !548, line: 67, baseType: !165, size: 32, offset: 192)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2582, file: !548, line: 68, baseType: !7, size: 32, offset: 224)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2582, file: !548, line: 71, baseType: !220, size: 128, offset: 256)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2582, file: !548, line: 77, baseType: !2595, size: 64, offset: 384)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !410, file: !32, line: 1505, baseType: !579, size: 64, offset: 8064)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !410, file: !32, line: 1508, baseType: !579, size: 64, offset: 8128)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !410, file: !32, line: 1511, baseType: !165, size: 32, offset: 8192)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !410, file: !32, line: 1514, baseType: !1691, size: 32, offset: 8224)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !410, file: !32, line: 1517, baseType: !2601, size: 64, offset: 8256)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1833, line: 18, flags: DIFlagFwdDecl)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !410, file: !32, line: 1518, baseType: !453, size: 64, offset: 8320)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !410, file: !32, line: 1525, baseType: !1659, size: 64, offset: 8384)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !410, file: !32, line: 1532, baseType: !2606, size: 64, offset: 8448)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2607, line: 52, size: 64, elements: !2608)
!2607 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2608 = !{!2609}
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2606, file: !2607, line: 53, baseType: !2610, size: 64)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2607, line: 40, size: 256, elements: !2612)
!2612 = !{!2613, !2614, !2619}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2611, file: !2607, line: 42, baseType: !320)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2611, file: !2607, line: 44, baseType: !2615, size: 192)
!2615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2607, line: 28, size: 192, elements: !2616)
!2616 = !{!2617, !2618}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2615, file: !2607, line: 29, baseType: !220, size: 128)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2615, file: !2607, line: 31, baseType: !545, size: 64, offset: 128)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2611, file: !2607, line: 49, baseType: !545, size: 64, offset: 192)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !410, file: !32, line: 1533, baseType: !2606, size: 64, offset: 8512)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !410, file: !32, line: 1534, baseType: !849, size: 128, align: 64, offset: 8576)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !410, file: !32, line: 1535, baseType: !1832, size: 256, offset: 8704)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !410, file: !32, line: 1537, baseType: !575, size: 192, offset: 8960)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !410, file: !32, line: 1542, baseType: !165, size: 32, offset: 9152)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !410, file: !32, line: 1545, baseType: !320, offset: 9184)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !410, file: !32, line: 1546, baseType: !220, size: 128, offset: 9216)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !410, file: !32, line: 1548, baseType: !320, offset: 9344)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !410, file: !32, line: 1549, baseType: !220, size: 128, offset: 9344)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !263, file: !264, line: 104, baseType: !212, size: 64, offset: 896)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !263, file: !264, line: 105, baseType: !160, size: 64, offset: 960)
!2631 = !DIDerivedType(tag: DW_TAG_member, scope: !263, file: !264, line: 107, baseType: !2632, size: 128, offset: 1024)
!2632 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !263, file: !264, line: 107, size: 128, elements: !2633)
!2633 = !{!2634, !2635}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !2632, file: !264, line: 108, baseType: !220, size: 128)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !2632, file: !264, line: 109, baseType: !2636, size: 64)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !263, file: !264, line: 111, baseType: !220, size: 128, offset: 1152)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !263, file: !264, line: 112, baseType: !220, size: 128, offset: 1280)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !263, file: !264, line: 120, baseType: !2640, size: 128, offset: 1408)
!2640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !263, file: !264, line: 116, size: 128, elements: !2641)
!2641 = !{!2642, !2643, !2644}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !2640, file: !264, line: 117, baseType: !457, size: 128)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !2640, file: !264, line: 118, baseType: !278, size: 128)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !2640, file: !264, line: 119, baseType: !849, size: 128, align: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !256, file: !32, line: 1866, baseType: !2646, size: 64, offset: 64)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 64)
!2647 = !DISubroutineType(types: !2648)
!2648 = !{!357, !262, !230, !2649}
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 64)
!2650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !2651, line: 10, size: 128, elements: !2652)
!2651 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!2652 = !{!2653, !2657}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2650, file: !2651, line: 11, baseType: !2654, size: 64)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = !DISubroutineType(types: !2656)
!2656 = !{null, !160}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !2650, file: !2651, line: 12, baseType: !160, size: 64, offset: 64)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !256, file: !32, line: 1867, baseType: !2659, size: 64, offset: 128)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!2660 = !DISubroutineType(types: !2661)
!2661 = !{!165, !230, !165}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !256, file: !32, line: 1868, baseType: !2663, size: 64, offset: 192)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!2666, !230, !165}
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !32, line: 581, flags: DIFlagFwdDecl)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !256, file: !32, line: 1870, baseType: !2669, size: 64, offset: 256)
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 64)
!2670 = !DISubroutineType(types: !2671)
!2671 = !{!165, !262, !205, !165}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !256, file: !32, line: 1872, baseType: !2673, size: 64, offset: 320)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = !DISubroutineType(types: !2675)
!2675 = !{!165, !230, !262, !234, !400}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !256, file: !32, line: 1873, baseType: !2677, size: 64, offset: 384)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = !DISubroutineType(types: !2679)
!2679 = !{!165, !262, !230, !262}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !256, file: !32, line: 1874, baseType: !2681, size: 64, offset: 448)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!2682 = !DISubroutineType(types: !2683)
!2683 = !{!165, !230, !262}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !256, file: !32, line: 1875, baseType: !2685, size: 64, offset: 512)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 64)
!2686 = !DISubroutineType(types: !2687)
!2687 = !{!165, !230, !262, !357}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !256, file: !32, line: 1876, baseType: !2689, size: 64, offset: 576)
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = !DISubroutineType(types: !2691)
!2691 = !{!165, !230, !262, !234}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !256, file: !32, line: 1877, baseType: !2681, size: 64, offset: 640)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !256, file: !32, line: 1878, baseType: !2694, size: 64, offset: 704)
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 64)
!2695 = !DISubroutineType(types: !2696)
!2696 = !{!165, !230, !262, !234, !414}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !256, file: !32, line: 1879, baseType: !2698, size: 64, offset: 768)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64)
!2699 = !DISubroutineType(types: !2700)
!2700 = !{!165, !230, !262, !230, !262, !7}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !256, file: !32, line: 1881, baseType: !2702, size: 64, offset: 832)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = !DISubroutineType(types: !2704)
!2704 = !{!165, !262, !2705}
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 64)
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !32, line: 219, size: 640, elements: !2707)
!2707 = !{!2708, !2709, !2710, !2711, !2712, !2713, !2718, !2719, !2720}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !2706, file: !32, line: 220, baseType: !7, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !2706, file: !32, line: 221, baseType: !234, size: 16, offset: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !2706, file: !32, line: 222, baseType: !237, size: 32, offset: 64)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !2706, file: !32, line: 223, baseType: !246, size: 32, offset: 96)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !2706, file: !32, line: 224, baseType: !419, size: 64, offset: 128)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !2706, file: !32, line: 225, baseType: !2714, size: 128, offset: 192)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !627, line: 13, size: 128, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2714, file: !627, line: 14, baseType: !626, size: 64)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2714, file: !627, line: 15, baseType: !545, size: 64, offset: 64)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !2706, file: !32, line: 226, baseType: !2714, size: 128, offset: 320)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !2706, file: !32, line: 227, baseType: !2714, size: 128, offset: 448)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !2706, file: !32, line: 234, baseType: !1158, size: 64, offset: 576)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !256, file: !32, line: 1882, baseType: !2722, size: 64, offset: 896)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{!165, !398, !2725, !191, !7}
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !2727, line: 22, size: 1152, elements: !2728)
!2727 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!2728 = !{!2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !2726, file: !2727, line: 23, baseType: !191, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2726, file: !2727, line: 24, baseType: !234, size: 16, offset: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !2726, file: !2727, line: 25, baseType: !7, size: 32, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !2726, file: !2727, line: 26, baseType: !1549, size: 32, offset: 96)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2726, file: !2727, line: 27, baseType: !298, size: 64, offset: 128)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !2726, file: !2727, line: 28, baseType: !298, size: 64, offset: 192)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2726, file: !2727, line: 37, baseType: !298, size: 64, offset: 256)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2726, file: !2727, line: 38, baseType: !414, size: 32, offset: 320)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !2726, file: !2727, line: 39, baseType: !414, size: 32, offset: 352)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2726, file: !2727, line: 40, baseType: !237, size: 32, offset: 384)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2726, file: !2727, line: 41, baseType: !246, size: 32, offset: 416)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2726, file: !2727, line: 42, baseType: !419, size: 64, offset: 448)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !2726, file: !2727, line: 43, baseType: !2714, size: 128, offset: 512)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !2726, file: !2727, line: 44, baseType: !2714, size: 128, offset: 640)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !2726, file: !2727, line: 45, baseType: !2714, size: 128, offset: 768)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !2726, file: !2727, line: 46, baseType: !2714, size: 128, offset: 896)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2726, file: !2727, line: 47, baseType: !298, size: 64, offset: 1024)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !2726, file: !2727, line: 48, baseType: !298, size: 64, offset: 1088)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !256, file: !32, line: 1883, baseType: !2748, size: 64, offset: 960)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = !DISubroutineType(types: !2750)
!2750 = !{!1187, !262, !205, !1190}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !256, file: !32, line: 1884, baseType: !2752, size: 64, offset: 1024)
!2752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 64)
!2753 = !DISubroutineType(types: !2754)
!2754 = !{!165, !230, !2755, !298, !298}
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !32, line: 50, flags: DIFlagFwdDecl)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !256, file: !32, line: 1886, baseType: !2758, size: 64, offset: 1088)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DISubroutineType(types: !2760)
!2760 = !{!165, !230, !2761, !165}
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !256, file: !32, line: 1887, baseType: !2763, size: 64, offset: 1152)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!2764 = !DISubroutineType(types: !2765)
!2765 = !{!165, !230, !262, !1158, !7, !234}
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !256, file: !32, line: 1890, baseType: !2689, size: 64, offset: 1216)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !256, file: !32, line: 1891, baseType: !2768, size: 64, offset: 1280)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = !DISubroutineType(types: !2770)
!2770 = !{!165, !230, !2666, !165}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !231, file: !32, line: 623, baseType: !409, size: 64, offset: 192)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !231, file: !32, line: 624, baseType: !226, size: 64, offset: 256)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !231, file: !32, line: 631, baseType: !212, size: 64, offset: 320)
!2774 = !DIDerivedType(tag: DW_TAG_member, scope: !231, file: !32, line: 639, baseType: !2775, size: 32, offset: 384)
!2775 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !231, file: !32, line: 639, size: 32, elements: !2776)
!2776 = !{!2777, !2779}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2775, file: !32, line: 640, baseType: !2778, size: 32)
!2778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2775, file: !32, line: 641, baseType: !7, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !231, file: !32, line: 643, baseType: !414, size: 32, offset: 416)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !231, file: !32, line: 644, baseType: !419, size: 64, offset: 448)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !231, file: !32, line: 645, baseType: !2714, size: 128, offset: 512)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !231, file: !32, line: 646, baseType: !2714, size: 128, offset: 640)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !231, file: !32, line: 647, baseType: !2714, size: 128, offset: 768)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !231, file: !32, line: 648, baseType: !320, offset: 896)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !231, file: !32, line: 649, baseType: !183, size: 16, offset: 896)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !231, file: !32, line: 650, baseType: !169, size: 8, offset: 912)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !231, file: !32, line: 651, baseType: !169, size: 8, offset: 920)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !231, file: !32, line: 652, baseType: !740, size: 64, offset: 960)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !231, file: !32, line: 659, baseType: !212, size: 64, offset: 1024)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !231, file: !32, line: 660, baseType: !752, size: 256, offset: 1088)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !231, file: !32, line: 662, baseType: !212, size: 64, offset: 1344)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !231, file: !32, line: 663, baseType: !212, size: 64, offset: 1408)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !231, file: !32, line: 665, baseType: !457, size: 128, offset: 1472)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !231, file: !32, line: 666, baseType: !220, size: 128, offset: 1600)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !231, file: !32, line: 675, baseType: !220, size: 128, offset: 1728)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !231, file: !32, line: 676, baseType: !220, size: 128, offset: 1856)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !231, file: !32, line: 677, baseType: !220, size: 128, offset: 1984)
!2799 = !DIDerivedType(tag: DW_TAG_member, scope: !231, file: !32, line: 678, baseType: !2800, size: 128, offset: 2112)
!2800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !231, file: !32, line: 678, size: 128, elements: !2801)
!2801 = !{!2802, !2803}
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2800, file: !32, line: 679, baseType: !453, size: 64)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2800, file: !32, line: 680, baseType: !849, size: 128, align: 64)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !231, file: !32, line: 682, baseType: !581, size: 64, offset: 2240)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !231, file: !32, line: 683, baseType: !581, size: 64, offset: 2304)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !231, file: !32, line: 684, baseType: !591, size: 32, offset: 2368)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !231, file: !32, line: 685, baseType: !591, size: 32, offset: 2400)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !231, file: !32, line: 686, baseType: !591, size: 32, offset: 2432)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !231, file: !32, line: 688, baseType: !591, size: 32, offset: 2464)
!2810 = !DIDerivedType(tag: DW_TAG_member, scope: !231, file: !32, line: 690, baseType: !2811, size: 64, offset: 2496)
!2811 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !231, file: !32, line: 690, size: 64, elements: !2812)
!2812 = !{!2813, !2814}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2811, file: !32, line: 691, baseType: !1174, size: 64)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2811, file: !32, line: 692, baseType: !484, size: 64)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !231, file: !32, line: 694, baseType: !2816, size: 64, offset: 2560)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !32, line: 1100, size: 384, elements: !2818)
!2818 = !{!2819, !2820, !2821, !2822}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !2817, file: !32, line: 1101, baseType: !320)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !2817, file: !32, line: 1102, baseType: !220, size: 128)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !2817, file: !32, line: 1103, baseType: !220, size: 128, offset: 128)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !2817, file: !32, line: 1104, baseType: !220, size: 128, offset: 256)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !231, file: !32, line: 695, baseType: !227, size: 1216, align: 64, offset: 2624)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !231, file: !32, line: 696, baseType: !220, size: 128, offset: 3840)
!2825 = !DIDerivedType(tag: DW_TAG_member, scope: !231, file: !32, line: 697, baseType: !2826, size: 64, offset: 3968)
!2826 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !231, file: !32, line: 697, size: 64, elements: !2827)
!2827 = !{!2828, !2829, !2830, !2833, !2834}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !2826, file: !32, line: 698, baseType: !1422, size: 64)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !2826, file: !32, line: 699, baseType: !773, size: 64)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !2826, file: !32, line: 700, baseType: !2831, size: 64)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 64)
!2832 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !32, line: 700, flags: DIFlagFwdDecl)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !2826, file: !32, line: 701, baseType: !205, size: 64)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !2826, file: !32, line: 702, baseType: !7, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !231, file: !32, line: 705, baseType: !192, size: 32, offset: 4032)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !231, file: !32, line: 708, baseType: !192, size: 32, offset: 4064)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !231, file: !32, line: 709, baseType: !2564, size: 64, offset: 4096)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !231, file: !32, line: 720, baseType: !160, size: 64, offset: 4160)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !227, file: !32, line: 453, baseType: !2188, size: 128, offset: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !227, file: !32, line: 454, baseType: !158, size: 32, offset: 192)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !227, file: !32, line: 455, baseType: !591, size: 32, offset: 224)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !227, file: !32, line: 460, baseType: !1000, size: 128, offset: 256)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !227, file: !32, line: 461, baseType: !752, size: 256, offset: 384)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !227, file: !32, line: 462, baseType: !212, size: 64, offset: 640)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !227, file: !32, line: 463, baseType: !212, size: 64, offset: 704)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !227, file: !32, line: 464, baseType: !212, size: 64, offset: 768)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !227, file: !32, line: 465, baseType: !2848, size: 64, offset: 832)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2850)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !32, line: 367, size: 1408, elements: !2851)
!2851 = !{!2852, !2856, !2860, !2864, !2868, !2872, !2884, !2888, !2892, !2897, !2901, !2905, !2909, !2910, !2914, !2920, !2921, !2922, !2926, !2931, !2935, !2942}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !2850, file: !32, line: 368, baseType: !2853, size: 64)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 64)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{!165, !207, !496}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !2850, file: !32, line: 369, baseType: !2857, size: 64, offset: 64)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{!165, !1158, !207}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !2850, file: !32, line: 372, baseType: !2861, size: 64, offset: 128)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64)
!2862 = !DISubroutineType(types: !2863)
!2863 = !{!165, !226, !496}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !2850, file: !32, line: 375, baseType: !2865, size: 64, offset: 192)
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2866, size: 64)
!2866 = !DISubroutineType(types: !2867)
!2867 = !{!165, !207}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !2850, file: !32, line: 381, baseType: !2869, size: 64, offset: 256)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{!165, !1158, !226, !223, !7}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !2850, file: !32, line: 383, baseType: !2873, size: 64, offset: 320)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{null, !2876}
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 64)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1222, line: 795, size: 256, elements: !2878)
!2878 = !{!2879, !2880, !2881, !2882, !2883}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2877, file: !1222, line: 796, baseType: !1158, size: 64)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !2877, file: !1222, line: 797, baseType: !226, size: 64, offset: 64)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !2877, file: !1222, line: 799, baseType: !212, size: 64, offset: 128)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !2877, file: !1222, line: 800, baseType: !7, size: 32, offset: 192)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !2877, file: !1222, line: 801, baseType: !7, size: 32, offset: 224)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !2850, file: !32, line: 385, baseType: !2885, size: 64, offset: 384)
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2886 = !DISubroutineType(types: !2887)
!2887 = !{!165, !1158, !226, !419, !7, !7, !2370, !1379}
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !2850, file: !32, line: 388, baseType: !2889, size: 64, offset: 448)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2890, size: 64)
!2890 = !DISubroutineType(types: !2891)
!2891 = !{!165, !1158, !226, !419, !7, !7, !207, !160}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !2850, file: !32, line: 393, baseType: !2893, size: 64, offset: 512)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = !DISubroutineType(types: !2895)
!2895 = !{!2896, !226, !2896}
!2896 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !159, line: 125, baseType: !298)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !2850, file: !32, line: 394, baseType: !2898, size: 64, offset: 576)
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 64)
!2899 = !DISubroutineType(types: !2900)
!2900 = !{null, !207, !7, !7}
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !2850, file: !32, line: 395, baseType: !2902, size: 64, offset: 640)
!2902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2903, size: 64)
!2903 = !DISubroutineType(types: !2904)
!2904 = !{!165, !207, !158}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !2850, file: !32, line: 396, baseType: !2906, size: 64, offset: 704)
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 64)
!2907 = !DISubroutineType(types: !2908)
!2908 = !{null, !207}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !2850, file: !32, line: 397, baseType: !1199, size: 64, offset: 768)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !2850, file: !32, line: 402, baseType: !2911, size: 64, offset: 832)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 64)
!2912 = !DISubroutineType(types: !2913)
!2913 = !{!165, !226, !207, !207, !54}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !2850, file: !32, line: 404, baseType: !2915, size: 64, offset: 896)
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2916, size: 64)
!2916 = !DISubroutineType(types: !2917)
!2917 = !{!400, !207, !2918}
!2918 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !2919, line: 305, baseType: !7)
!2919 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !2850, file: !32, line: 405, baseType: !2906, size: 64, offset: 960)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !2850, file: !32, line: 406, baseType: !2865, size: 64, offset: 1024)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !2850, file: !32, line: 407, baseType: !2923, size: 64, offset: 1088)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = !DISubroutineType(types: !2925)
!2925 = !{!165, !207, !212, !212}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !2850, file: !32, line: 409, baseType: !2927, size: 64, offset: 1152)
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!2928 = !DISubroutineType(types: !2929)
!2929 = !{null, !207, !2930, !2930}
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !2850, file: !32, line: 410, baseType: !2932, size: 64, offset: 1216)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 64)
!2933 = !DISubroutineType(types: !2934)
!2934 = !{!165, !226, !207}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !2850, file: !32, line: 413, baseType: !2936, size: 64, offset: 1280)
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2937, size: 64)
!2937 = !DISubroutineType(types: !2938)
!2938 = !{!165, !2939, !1158, !2941}
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !32, line: 61, flags: DIFlagFwdDecl)
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !2850, file: !32, line: 415, baseType: !2943, size: 64, offset: 1344)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{null, !1158}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !227, file: !32, line: 466, baseType: !212, size: 64, offset: 896)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !227, file: !32, line: 467, baseType: !1691, size: 32, offset: 960)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !227, file: !32, line: 468, baseType: !320, offset: 992)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !227, file: !32, line: 469, baseType: !220, size: 128, offset: 1024)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !227, file: !32, line: 470, baseType: !160, size: 64, offset: 1152)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !217, file: !209, line: 87, baseType: !212, size: 64, offset: 192)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !217, file: !209, line: 94, baseType: !212, size: 64, offset: 256)
!2953 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !209, line: 96, baseType: !2954, size: 64)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !214, file: !209, line: 96, size: 64, elements: !2955)
!2955 = !{!2956}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2954, file: !209, line: 101, baseType: !2957, size: 64)
!2957 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !159, line: 143, baseType: !298)
!2958 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !209, line: 103, baseType: !2959, size: 320)
!2959 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !214, file: !209, line: 103, size: 320, elements: !2960)
!2960 = !{!2961, !2971, !2972, !2973}
!2961 = !DIDerivedType(tag: DW_TAG_member, scope: !2959, file: !209, line: 104, baseType: !2962, size: 128)
!2962 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2959, file: !209, line: 104, size: 128, elements: !2963)
!2963 = !{!2964, !2965}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2962, file: !209, line: 105, baseType: !220, size: 128)
!2965 = !DIDerivedType(tag: DW_TAG_member, scope: !2962, file: !209, line: 106, baseType: !2966, size: 128)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2962, file: !209, line: 106, size: 128, elements: !2967)
!2967 = !{!2968, !2969, !2970}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2966, file: !209, line: 107, baseType: !207, size: 64)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2966, file: !209, line: 109, baseType: !165, size: 32, offset: 64)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2966, file: !209, line: 110, baseType: !165, size: 32, offset: 96)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2959, file: !209, line: 117, baseType: !2207, size: 64, offset: 128)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2959, file: !209, line: 119, baseType: !160, size: 64, offset: 192)
!2973 = !DIDerivedType(tag: DW_TAG_member, scope: !2959, file: !209, line: 120, baseType: !2974, size: 64, offset: 256)
!2974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2959, file: !209, line: 120, size: 64, elements: !2975)
!2975 = !{!2976, !2977, !2978}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2974, file: !209, line: 121, baseType: !160, size: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2974, file: !209, line: 122, baseType: !212, size: 64)
!2978 = !DIDerivedType(tag: DW_TAG_member, scope: !2974, file: !209, line: 123, baseType: !2979, size: 32)
!2979 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2974, file: !209, line: 123, size: 32, elements: !2980)
!2980 = !{!2981, !2982, !2983}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2979, file: !209, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2979, file: !209, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2979, file: !209, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2984 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !209, line: 130, baseType: !2985, size: 192)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !214, file: !209, line: 130, size: 192, elements: !2986)
!2986 = !{!2987, !2988, !2989, !2990, !2991}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2985, file: !209, line: 131, baseType: !212, size: 64)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2985, file: !209, line: 134, baseType: !173, size: 8, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2985, file: !209, line: 135, baseType: !173, size: 8, offset: 72)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2985, file: !209, line: 136, baseType: !591, size: 32, offset: 96)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2985, file: !209, line: 137, baseType: !7, size: 32, offset: 128)
!2992 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !209, line: 139, baseType: !2993, size: 256)
!2993 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !214, file: !209, line: 139, size: 256, elements: !2994)
!2994 = !{!2995, !2996, !2997}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2993, file: !209, line: 140, baseType: !212, size: 64)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2993, file: !209, line: 141, baseType: !591, size: 32, offset: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2993, file: !209, line: 143, baseType: !220, size: 128, offset: 128)
!2998 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !209, line: 145, baseType: !2999, size: 256)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !214, file: !209, line: 145, size: 256, elements: !3000)
!3000 = !{!3001, !3002, !3003, !3004, !3009}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2999, file: !209, line: 146, baseType: !212, size: 64)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2999, file: !209, line: 147, baseType: !1129, size: 64, offset: 64)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2999, file: !209, line: 148, baseType: !212, size: 64, offset: 128)
!3004 = !DIDerivedType(tag: DW_TAG_member, scope: !2999, file: !209, line: 149, baseType: !3005, size: 64, offset: 192)
!3005 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2999, file: !209, line: 149, size: 64, elements: !3006)
!3006 = !{!3007, !3008}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !3005, file: !209, line: 150, baseType: !1037, size: 64)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !3005, file: !209, line: 151, baseType: !591, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2999, file: !209, line: 156, baseType: !320, offset: 256)
!3010 = !DIDerivedType(tag: DW_TAG_member, scope: !214, file: !209, line: 159, baseType: !3011, size: 128)
!3011 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !214, file: !209, line: 159, size: 128, elements: !3012)
!3012 = !{!3013, !3077}
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3011, file: !209, line: 161, baseType: !3014, size: 64)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !62, line: 110, size: 1152, elements: !3016)
!3016 = !{!3017, !3027, !3048, !3049, !3050, !3051, !3052, !3064, !3065, !3066}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3015, file: !62, line: 111, baseType: !3018, size: 384)
!3018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !62, line: 19, size: 384, elements: !3019)
!3019 = !{!3020, !3022, !3023, !3024, !3025, !3026}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3018, file: !62, line: 20, baseType: !3021, size: 64)
!3021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !212)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3018, file: !62, line: 21, baseType: !3021, size: 64, offset: 64)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3018, file: !62, line: 22, baseType: !3021, size: 64, offset: 128)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3018, file: !62, line: 23, baseType: !212, size: 64, offset: 192)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3018, file: !62, line: 24, baseType: !212, size: 64, offset: 256)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3018, file: !62, line: 25, baseType: !212, size: 64, offset: 320)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3015, file: !62, line: 112, baseType: !3028, size: 64, offset: 384)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !3030, line: 105, size: 128, elements: !3031)
!3030 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!3031 = !{!3032, !3033}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !3029, file: !3030, line: 110, baseType: !212, size: 64)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3029, file: !3030, line: 118, baseType: !3034, size: 64, offset: 64)
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 64)
!3035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !3030, line: 95, size: 448, elements: !3036)
!3036 = !{!3037, !3038, !3043, !3044, !3045, !3046, !3047}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3035, file: !3030, line: 96, baseType: !579, size: 64)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3035, file: !3030, line: 97, baseType: !3039, size: 64, offset: 64)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !3030, line: 60, baseType: !3041)
!3041 = !DISubroutineType(types: !3042)
!3042 = !{null, !3028}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !3035, file: !3030, line: 98, baseType: !3039, size: 64, offset: 128)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !3035, file: !3030, line: 99, baseType: !400, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !3035, file: !3030, line: 100, baseType: !400, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3035, file: !3030, line: 101, baseType: !849, size: 128, align: 64, offset: 256)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3035, file: !3030, line: 102, baseType: !3028, size: 64, offset: 384)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3015, file: !62, line: 113, baseType: !3029, size: 128, offset: 448)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3015, file: !62, line: 114, baseType: !1807, size: 192, offset: 576)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3015, file: !62, line: 115, baseType: !61, size: 32, offset: 768)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3015, file: !62, line: 116, baseType: !7, size: 32, offset: 800)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3015, file: !62, line: 117, baseType: !3053, size: 64, offset: 832)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3055)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !62, line: 67, size: 256, elements: !3056)
!3056 = !{!3057, !3058, !3062, !3063}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3055, file: !62, line: 73, baseType: !2906, size: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3055, file: !62, line: 78, baseType: !3059, size: 64, offset: 64)
!3059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3060, size: 64)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{null, !3014}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3055, file: !62, line: 83, baseType: !3059, size: 64, offset: 128)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3055, file: !62, line: 89, baseType: !1090, size: 64, offset: 192)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3015, file: !62, line: 118, baseType: !160, size: 64, offset: 896)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3015, file: !62, line: 119, baseType: !165, size: 32, offset: 960)
!3066 = !DIDerivedType(tag: DW_TAG_member, scope: !3015, file: !62, line: 120, baseType: !3067, size: 128, offset: 1024)
!3067 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3015, file: !62, line: 120, size: 128, elements: !3068)
!3068 = !{!3069, !3075}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3067, file: !62, line: 121, baseType: !3070, size: 128)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3071, line: 6, size: 128, elements: !3072)
!3071 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3072 = !{!3073, !3074}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3070, file: !3071, line: 7, baseType: !298, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3070, file: !3071, line: 8, baseType: !298, size: 64, offset: 64)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3067, file: !62, line: 122, baseType: !3076)
!3076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3070, elements: !1669)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3011, file: !209, line: 162, baseType: !160, size: 64, offset: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !214, file: !209, line: 176, baseType: !849, size: 128, align: 64)
!3079 = !DIDerivedType(tag: DW_TAG_member, scope: !208, file: !209, line: 179, baseType: !3080, size: 32, offset: 384)
!3080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !208, file: !209, line: 179, size: 32, elements: !3081)
!3081 = !{!3082, !3083, !3084, !3085}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3080, file: !209, line: 184, baseType: !591, size: 32)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3080, file: !209, line: 192, baseType: !7, size: 32)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3080, file: !209, line: 194, baseType: !7, size: 32)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3080, file: !209, line: 195, baseType: !165, size: 32)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !208, file: !209, line: 199, baseType: !591, size: 32, offset: 416)
!3087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3088, size: 64)
!3088 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !206)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3092)
!3092 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !165)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64)
!3094 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !223)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3100)
!3100 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !212)
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3102, size: 64)
!3102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3094)
!3103 = !{!3104, !3110, !0}
!3104 = !DIGlobalVariableExpression(var: !3105, expr: !DIExpression())
!3105 = distinct !DIGlobalVariable(name: "agp3_generic_sizes", scope: !2, file: !3, line: 1401, type: !3106, isLocal: false, isDefinition: true)
!3106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3107, size: 1408, elements: !3108)
!3107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!3108 = !{!3109}
!3109 = !DISubrange(count: 11)
!3110 = !DIGlobalVariableExpression(var: !3111, expr: !DIExpression())
!3111 = distinct !DIGlobalVariable(name: "agp_gatt_table", scope: !2, file: !3, line: 47, type: !3112, isLocal: false, isDefinition: true)
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!3113 = !{!"rsp"}
!3114 = !{i32 7, !"Dwarf Version", i32 4}
!3115 = !{i32 2, !"Debug Info Version", i32 3}
!3116 = !{i32 1, !"wchar_size", i32 2}
!3117 = !{i32 1, !"Code Model", i32 2}
!3118 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!3119 = distinct !DISubprogram(name: "agp_free_key", scope: !3, file: !3, line: 61, type: !2123, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!3120 = !DILocalVariable(name: "key", arg: 1, scope: !3119, file: !3, line: 61, type: !165)
!3121 = !DILocation(line: 61, column: 23, scope: !3119)
!3122 = !DILocation(line: 63, column: 6, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 63, column: 6)
!3124 = !DILocation(line: 63, column: 10, scope: !3123)
!3125 = !DILocation(line: 63, column: 6, scope: !3119)
!3126 = !DILocation(line: 64, column: 3, scope: !3123)
!3127 = !DILocation(line: 66, column: 6, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3119, file: !3, line: 66, column: 6)
!3129 = !DILocation(line: 66, column: 10, scope: !3128)
!3130 = !DILocation(line: 66, column: 6, scope: !3119)
!3131 = !DILocation(line: 67, column: 13, scope: !3128)
!3132 = !DILocation(line: 67, column: 18, scope: !3128)
!3133 = !DILocation(line: 67, column: 30, scope: !3128)
!3134 = !DILocation(line: 67, column: 3, scope: !3128)
!3135 = !DILocation(line: 68, column: 1, scope: !3119)
!3136 = distinct !DISubprogram(name: "clear_bit", scope: !3137, file: !3137, line: 39, type: !3138, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!3137 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!3138 = !DISubroutineType(types: !3139)
!3139 = !{null, !545, !3140}
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3141 = !DILocalVariable(name: "nr", arg: 1, scope: !3142, file: !3143, line: 72, type: !545)
!3142 = distinct !DISubprogram(name: "arch_clear_bit", scope: !3143, file: !3143, line: 72, type: !3138, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!3143 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!3144 = !DILocation(line: 72, column: 21, scope: !3142, inlinedAt: !3145)
!3145 = distinct !DILocation(line: 42, column: 2, scope: !3136)
!3146 = !DILocalVariable(name: "addr", arg: 2, scope: !3142, file: !3143, line: 72, type: !3140)
!3147 = !DILocation(line: 72, column: 49, scope: !3142, inlinedAt: !3145)
!3148 = !DILocalVariable(name: "v", arg: 1, scope: !3149, file: !3150, line: 84, type: !3153)
!3149 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !3150, file: !3150, line: 84, type: !3151, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!3150 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!3151 = !DISubroutineType(types: !3152)
!3152 = !{null, !3153, !1190}
!3153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3154, size: 64)
!3154 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3155)
!3155 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!3156 = !DILocation(line: 84, column: 74, scope: !3149, inlinedAt: !3157)
!3157 = distinct !DILocation(line: 41, column: 2, scope: !3136)
!3158 = !DILocalVariable(name: "size", arg: 2, scope: !3149, file: !3150, line: 84, type: !1190)
!3159 = !DILocation(line: 84, column: 84, scope: !3149, inlinedAt: !3157)
!3160 = !DILocalVariable(name: "nr", arg: 1, scope: !3136, file: !3137, line: 39, type: !545)
!3161 = !DILocation(line: 39, column: 35, scope: !3136)
!3162 = !DILocalVariable(name: "addr", arg: 2, scope: !3136, file: !3137, line: 39, type: !3140)
!3163 = !DILocation(line: 39, column: 63, scope: !3136)
!3164 = !DILocation(line: 41, column: 26, scope: !3136)
!3165 = !DILocation(line: 41, column: 33, scope: !3136)
!3166 = !DILocation(line: 41, column: 31, scope: !3136)
!3167 = !DILocation(line: 86, column: 20, scope: !3149, inlinedAt: !3157)
!3168 = !DILocation(line: 86, column: 23, scope: !3149, inlinedAt: !3157)
!3169 = !DILocation(line: 86, column: 2, scope: !3149, inlinedAt: !3157)
!3170 = !DILocation(line: 87, column: 2, scope: !3149, inlinedAt: !3157)
!3171 = !DILocation(line: 42, column: 17, scope: !3136)
!3172 = !DILocation(line: 42, column: 21, scope: !3136)
!3173 = !DILocation(line: 74, column: 27, scope: !3174, inlinedAt: !3145)
!3174 = distinct !DILexicalBlock(scope: !3142, file: !3143, line: 74, column: 6)
!3175 = !DILocation(line: 74, column: 6, scope: !3174, inlinedAt: !3145)
!3176 = !DILocation(line: 74, column: 6, scope: !3142, inlinedAt: !3145)
!3177 = !DILocation(line: 76, column: 6, scope: !3178, inlinedAt: !3145)
!3178 = distinct !DILexicalBlock(scope: !3174, file: !3143, line: 74, column: 32)
!3179 = !DILocation(line: 77, column: 13, scope: !3178, inlinedAt: !3145)
!3180 = !DILocation(line: 77, column: 12, scope: !3178, inlinedAt: !3145)
!3181 = !DILocation(line: 75, column: 3, scope: !3178, inlinedAt: !3145)
!3182 = !{i32 -2147117610}
!3183 = !DILocation(line: 78, column: 2, scope: !3178, inlinedAt: !3145)
!3184 = !DILocation(line: 80, column: 8, scope: !3185, inlinedAt: !3145)
!3185 = distinct !DILexicalBlock(scope: !3174, file: !3143, line: 78, column: 9)
!3186 = !DILocation(line: 80, column: 32, scope: !3185, inlinedAt: !3145)
!3187 = !DILocation(line: 79, column: 3, scope: !3185, inlinedAt: !3145)
!3188 = !{i32 -2147117478}
!3189 = !DILocation(line: 43, column: 1, scope: !3136)
!3190 = distinct !DISubprogram(name: "agp_alloc_page_array", scope: !3, file: !3, line: 90, type: !3191, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!3191 = !DISubroutineType(types: !3192)
!3192 = !{null, !1190, !3193}
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 64)
!3194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "agp_memory", file: !102, line: 69, size: 832, elements: !3195)
!3195 = !{!3196, !3197, !3198, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4353}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3194, file: !102, line: 70, baseType: !3193, size: 64)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3194, file: !102, line: 71, baseType: !3193, size: 64, offset: 64)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !3194, file: !102, line: 72, baseType: !3199, size: 64, offset: 128)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!3200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "agp_bridge_data", file: !6, line: 125, size: 1600, elements: !3201)
!3201 = !{!3202, !3209, !3281, !3282, !3283, !3284, !3285, !4311, !4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4326, !4327, !4328, !4329, !4330, !4331, !4332}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3200, file: !6, line: 126, baseType: !3203, size: 64)
!3203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 64)
!3204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3205)
!3205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "agp_version", file: !102, line: 40, size: 32, elements: !3206)
!3206 = !{!3207, !3208}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3205, file: !102, line: 41, baseType: !181, size: 16)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3205, file: !102, line: 42, baseType: !181, size: 16, offset: 16)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3200, file: !6, line: 127, baseType: !3210, size: 64, offset: 64)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3212)
!3212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "agp_bridge_driver", file: !6, line: 97, size: 1472, elements: !3213)
!3213 = !{!3214, !3215, !3216, !3217, !3218, !3219, !3220, !3227, !3231, !3232, !3236, !3238, !3242, !3246, !3247, !3251, !3252, !3258, !3259, !3263, !3264, !3268, !3272, !3276, !3277}
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3212, file: !6, line: 98, baseType: !448, size: 64)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "aperture_sizes", scope: !3212, file: !6, line: 99, baseType: !2375, size: 64, offset: 64)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "num_aperture_sizes", scope: !3212, file: !6, line: 100, baseType: !165, size: 32, offset: 128)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "size_type", scope: !3212, file: !6, line: 101, baseType: !5, size: 32, offset: 160)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "cant_use_aperture", scope: !3212, file: !6, line: 102, baseType: !400, size: 8, offset: 192)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "needs_scratch_page", scope: !3212, file: !6, line: 103, baseType: !400, size: 8, offset: 200)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "masks", scope: !3212, file: !6, line: 104, baseType: !3221, size: 64, offset: 256)
!3221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3222, size: 64)
!3222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3223)
!3223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gatt_mask", file: !6, line: 53, size: 128, elements: !3224)
!3224 = !{!3225, !3226}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3223, file: !6, line: 54, baseType: !212, size: 64)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3223, file: !6, line: 55, baseType: !191, size: 32, offset: 64)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_size", scope: !3212, file: !6, line: 105, baseType: !3228, size: 64, offset: 320)
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 64)
!3229 = !DISubroutineType(types: !3230)
!3230 = !{!165}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !3212, file: !6, line: 106, baseType: !3228, size: 64, offset: 384)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "agp_enable", scope: !3212, file: !6, line: 107, baseType: !3233, size: 64, offset: 448)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3234 = !DISubroutineType(types: !3235)
!3235 = !{null, !3199, !191}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3212, file: !6, line: 108, baseType: !3237, size: 64, offset: 512)
!3237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush", scope: !3212, file: !6, line: 109, baseType: !3239, size: 64, offset: 576)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 64)
!3240 = !DISubroutineType(types: !3241)
!3241 = !{null, !3193}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "mask_memory", scope: !3212, file: !6, line: 110, baseType: !3243, size: 64, offset: 640)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!3244 = !DISubroutineType(types: !3245)
!3245 = !{!212, !3199, !2957, !165}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "cache_flush", scope: !3212, file: !6, line: 111, baseType: !3237, size: 64, offset: 704)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "create_gatt_table", scope: !3212, file: !6, line: 112, baseType: !3248, size: 64, offset: 768)
!3248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3249, size: 64)
!3249 = !DISubroutineType(types: !3250)
!3250 = !{!165, !3199}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "free_gatt_table", scope: !3212, file: !6, line: 113, baseType: !3248, size: 64, offset: 832)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "insert_memory", scope: !3212, file: !6, line: 114, baseType: !3253, size: 64, offset: 896)
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3254, size: 64)
!3254 = !DISubroutineType(types: !3255)
!3255 = !{!165, !3193, !3256, !165}
!3256 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !159, line: 21, baseType: !3257)
!3257 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_off_t", file: !244, line: 87, baseType: !1189)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "remove_memory", scope: !3212, file: !6, line: 115, baseType: !3253, size: 64, offset: 960)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_by_type", scope: !3212, file: !6, line: 116, baseType: !3260, size: 64, offset: 1024)
!3260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 64)
!3261 = !DISubroutineType(types: !3262)
!3262 = !{!3193, !1190, !165}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "free_by_type", scope: !3212, file: !6, line: 117, baseType: !3239, size: 64, offset: 1088)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "agp_alloc_page", scope: !3212, file: !6, line: 118, baseType: !3265, size: 64, offset: 1152)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3266 = !DISubroutineType(types: !3267)
!3267 = !{!207, !3199}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "agp_alloc_pages", scope: !3212, file: !6, line: 119, baseType: !3269, size: 64, offset: 1216)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = !DISubroutineType(types: !3271)
!3271 = !{!165, !3199, !3193, !1190}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "agp_destroy_page", scope: !3212, file: !6, line: 120, baseType: !3273, size: 64, offset: 1280)
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3274, size: 64)
!3274 = !DISubroutineType(types: !3275)
!3275 = !{null, !207, !165}
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "agp_destroy_pages", scope: !3212, file: !6, line: 121, baseType: !3239, size: 64, offset: 1344)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "agp_type_to_mask_type", scope: !3212, file: !6, line: 122, baseType: !3278, size: 64, offset: 1408)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 64)
!3279 = !DISubroutineType(types: !3280)
!3280 = !{!165, !3199, !165}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3200, file: !6, line: 128, baseType: !1072, size: 64, offset: 128)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "previous_size", scope: !3200, file: !6, line: 129, baseType: !160, size: 64, offset: 192)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "current_size", scope: !3200, file: !6, line: 130, baseType: !160, size: 64, offset: 256)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "dev_private_data", scope: !3200, file: !6, line: 131, baseType: !160, size: 64, offset: 320)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3200, file: !6, line: 132, baseType: !3286, size: 64, offset: 384)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !3288, line: 309, size: 19264, elements: !3289)
!3288 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!3289 = !{!3290, !3291, !4112, !4113, !4114, !4115, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4143, !4208, !4209, !4210, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4284, !4285, !4287, !4288, !4289, !4290, !4292, !4293, !4294, !4297, !4304, !4305, !4306, !4307, !4308, !4309, !4310}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !3287, file: !3288, line: 310, baseType: !220, size: 128)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3287, file: !3288, line: 311, baseType: !3292, size: 64, offset: 128)
!3292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3293, size: 64)
!3293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !3288, line: 605, size: 8064, elements: !3294)
!3294 = !{!3295, !3296, !3297, !3298, !3299, !3300, !3301, !3316, !3317, !3318, !3342, !3345, !3346, !3350, !3351, !3352, !3353, !3354, !3358, !3359, !3361, !4108, !4109, !4110, !4111}
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3293, file: !3288, line: 606, baseType: !220, size: 128)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3293, file: !3288, line: 607, baseType: !3292, size: 64, offset: 128)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3293, file: !3288, line: 608, baseType: !220, size: 128, offset: 192)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !3293, file: !3288, line: 609, baseType: !220, size: 128, offset: 320)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !3293, file: !3288, line: 610, baseType: !3286, size: 64, offset: 448)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !3293, file: !3288, line: 611, baseType: !220, size: 128, offset: 512)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !3293, file: !3288, line: 613, baseType: !3302, size: 256, offset: 640)
!3302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3303, size: 256, elements: !1471)
!3303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3304, size: 64)
!3304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !3305, line: 20, size: 512, elements: !3306)
!3305 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!3306 = !{!3307, !3309, !3310, !3311, !3312, !3313, !3314, !3315}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3304, file: !3305, line: 21, baseType: !3308, size: 64)
!3308 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !159, line: 158, baseType: !2373)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3304, file: !3305, line: 22, baseType: !3308, size: 64, offset: 64)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3304, file: !3305, line: 23, baseType: !357, size: 64, offset: 128)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3304, file: !3305, line: 24, baseType: !212, size: 64, offset: 192)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3304, file: !3305, line: 25, baseType: !212, size: 64, offset: 256)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3304, file: !3305, line: 26, baseType: !3303, size: 64, offset: 320)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3304, file: !3305, line: 26, baseType: !3303, size: 64, offset: 384)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3304, file: !3305, line: 26, baseType: !3303, size: 64, offset: 448)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !3293, file: !3288, line: 614, baseType: !220, size: 128, offset: 896)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !3293, file: !3288, line: 615, baseType: !3304, size: 512, offset: 1024)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3293, file: !3288, line: 617, baseType: !3319, size: 64, offset: 1536)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !3288, line: 731, size: 320, elements: !3321)
!3321 = !{!3322, !3326, !3330, !3334, !3338}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !3320, file: !3288, line: 732, baseType: !3323, size: 64)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{!165, !3292}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !3320, file: !3288, line: 733, baseType: !3327, size: 64, offset: 64)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{null, !3292}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !3320, file: !3288, line: 734, baseType: !3331, size: 64, offset: 128)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{!160, !3292, !7, !165}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3320, file: !3288, line: 735, baseType: !3335, size: 64, offset: 192)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{!165, !3292, !7, !165, !165, !1885}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3320, file: !3288, line: 736, baseType: !3339, size: 64, offset: 256)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 64)
!3340 = !DISubroutineType(types: !3341)
!3341 = !{!165, !3292, !7, !165, !165, !191}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !3293, file: !3288, line: 618, baseType: !3343, size: 64, offset: 1600)
!3343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3344, size: 64)
!3344 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !3288, line: 537, flags: DIFlagFwdDecl)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !3293, file: !3288, line: 619, baseType: !160, size: 64, offset: 1664)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !3293, file: !3288, line: 620, baseType: !3347, size: 64, offset: 1728)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3349, line: 123, flags: DIFlagFwdDecl)
!3349 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !3293, file: !3288, line: 622, baseType: !173, size: 8, offset: 1792)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !3293, file: !3288, line: 623, baseType: !173, size: 8, offset: 1800)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !3293, file: !3288, line: 624, baseType: !173, size: 8, offset: 1808)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !3293, file: !3288, line: 625, baseType: !173, size: 8, offset: 1816)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3293, file: !3288, line: 630, baseType: !3355, size: 384, offset: 1824)
!3355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 384, elements: !3356)
!3356 = !{!3357}
!3357 = !DISubrange(count: 48)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !3293, file: !3288, line: 632, baseType: !183, size: 16, offset: 2208)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !3293, file: !3288, line: 633, baseType: !3360, size: 16, offset: 2224)
!3360 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !3288, line: 237, baseType: !183)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !3293, file: !3288, line: 634, baseType: !3362, size: 64, offset: 2240)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !81, line: 461, size: 5568, elements: !3364)
!3364 = !{!3365, !3662, !3663, !3666, !3667, !3718, !3809, !3810, !3811, !3812, !3813, !3822, !3927, !3940, !3943, !3944, !3948, !3950, !3951, !3952, !3956, !3962, !3963, !3966, !3970, !4060, !4061, !4062, !4063, !4064, !4096, !4097, !4098, !4101, !4104, !4105, !4106, !4107}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3363, file: !81, line: 462, baseType: !3366, size: 512)
!3366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3367, line: 64, size: 512, elements: !3368)
!3367 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3368 = !{!3369, !3370, !3371, !3373, !3413, !3513, !3652, !3657, !3658, !3659, !3660, !3661}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3366, file: !3367, line: 65, baseType: !357, size: 64)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3366, file: !3367, line: 66, baseType: !220, size: 128, offset: 64)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3366, file: !3367, line: 67, baseType: !3372, size: 64, offset: 192)
!3372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 64)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3366, file: !3367, line: 68, baseType: !3374, size: 64, offset: 256)
!3374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3375, size: 64)
!3375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3367, line: 192, size: 704, elements: !3376)
!3376 = !{!3377, !3378, !3379, !3380}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3375, file: !3367, line: 193, baseType: !220, size: 128)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3375, file: !3367, line: 194, baseType: !320, offset: 128)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3375, file: !3367, line: 195, baseType: !3366, size: 512, offset: 128)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3375, file: !3367, line: 196, baseType: !3381, size: 64, offset: 640)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3382, size: 64)
!3382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3383)
!3383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3367, line: 156, size: 192, elements: !3384)
!3384 = !{!3385, !3390, !3395}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3383, file: !3367, line: 157, baseType: !3386, size: 64)
!3386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3387)
!3387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3388, size: 64)
!3388 = !DISubroutineType(types: !3389)
!3389 = !{!165, !3374, !3372}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3383, file: !3367, line: 158, baseType: !3391, size: 64, offset: 64)
!3391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3392)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3393, size: 64)
!3393 = !DISubroutineType(types: !3394)
!3394 = !{!357, !3374, !3372}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3383, file: !3367, line: 159, baseType: !3396, size: 64, offset: 128)
!3396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3397)
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3398, size: 64)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{!165, !3374, !3372, !3400}
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3367, line: 148, size: 20736, elements: !3402)
!3402 = !{!3403, !3405, !3407, !3408, !3412}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3401, file: !3367, line: 149, baseType: !3404, size: 192)
!3404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 192, elements: !469)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3401, file: !3367, line: 150, baseType: !3406, size: 4096, offset: 192)
!3406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 4096, elements: !2133)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3401, file: !3367, line: 151, baseType: !165, size: 32, offset: 4288)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3401, file: !3367, line: 152, baseType: !3409, size: 16384, offset: 4320)
!3409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 16384, elements: !3410)
!3410 = !{!3411}
!3411 = !DISubrange(count: 2048)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3401, file: !3367, line: 153, baseType: !165, size: 32, offset: 20704)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3366, file: !3367, line: 69, baseType: !3414, size: 64, offset: 320)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3367, line: 138, size: 448, elements: !3416)
!3416 = !{!3417, !3421, !3440, !3442, !3475, !3503, !3507}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3415, file: !3367, line: 139, baseType: !3418, size: 64)
!3418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3419, size: 64)
!3419 = !DISubroutineType(types: !3420)
!3420 = !{null, !3372}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3415, file: !3367, line: 140, baseType: !3422, size: 64, offset: 64)
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3423, size: 64)
!3423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3424)
!3424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !3425, line: 230, size: 128, elements: !3426)
!3425 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!3426 = !{!3427, !3436}
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3424, file: !3425, line: 231, baseType: !3428, size: 64)
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = !DISubroutineType(types: !3430)
!3430 = !{!1187, !3372, !3431, !205}
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3432, size: 64)
!3432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !3425, line: 30, size: 128, elements: !3433)
!3433 = !{!3434, !3435}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3432, file: !3425, line: 31, baseType: !357, size: 64)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3432, file: !3425, line: 32, baseType: !234, size: 16, offset: 64)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3424, file: !3425, line: 232, baseType: !3437, size: 64, offset: 64)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DISubroutineType(types: !3439)
!3439 = !{!1187, !3372, !3431, !357, !1190}
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3415, file: !3367, line: 141, baseType: !3441, size: 64, offset: 128)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 64)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3415, file: !3367, line: 142, baseType: !3443, size: 64, offset: 192)
!3443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3444, size: 64)
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3445, size: 64)
!3445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3446)
!3446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !3425, line: 84, size: 320, elements: !3447)
!3447 = !{!3448, !3449, !3453, !3472, !3473}
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3446, file: !3425, line: 85, baseType: !357, size: 64)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !3446, file: !3425, line: 86, baseType: !3450, size: 64, offset: 64)
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = !DISubroutineType(types: !3452)
!3452 = !{!234, !3372, !3431, !165}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !3446, file: !3425, line: 88, baseType: !3454, size: 64, offset: 128)
!3454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3455, size: 64)
!3455 = !DISubroutineType(types: !3456)
!3456 = !{!234, !3372, !3457, !165}
!3457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3458, size: 64)
!3458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !3425, line: 168, size: 448, elements: !3459)
!3459 = !{!3460, !3461, !3462, !3463, !3467, !3468}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3458, file: !3425, line: 169, baseType: !3432, size: 128)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3458, file: !3425, line: 170, baseType: !1190, size: 64, offset: 128)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3458, file: !3425, line: 171, baseType: !160, size: 64, offset: 192)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3458, file: !3425, line: 172, baseType: !3464, size: 64, offset: 256)
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3465, size: 64)
!3465 = !DISubroutineType(types: !3466)
!3466 = !{!1187, !1158, !3372, !3457, !205, !419, !1190}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3458, file: !3425, line: 174, baseType: !3464, size: 64, offset: 320)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3458, file: !3425, line: 176, baseType: !3469, size: 64, offset: 384)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3470 = !DISubroutineType(types: !3471)
!3471 = !{!165, !1158, !3372, !3457, !1044}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3446, file: !3425, line: 90, baseType: !3441, size: 64, offset: 192)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !3446, file: !3425, line: 91, baseType: !3474, size: 64, offset: 256)
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3415, file: !3367, line: 143, baseType: !3476, size: 64, offset: 256)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3477, size: 64)
!3477 = !DISubroutineType(types: !3478)
!3478 = !{!3479, !3372}
!3479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3480, size: 64)
!3480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3481)
!3481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !69, line: 39, size: 384, elements: !3482)
!3482 = !{!3483, !3484, !3488, !3492, !3498, !3502}
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3481, file: !69, line: 40, baseType: !68, size: 32)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3481, file: !69, line: 41, baseType: !3485, size: 64, offset: 64)
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3486, size: 64)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{!400}
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3481, file: !69, line: 42, baseType: !3489, size: 64, offset: 128)
!3489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 64)
!3490 = !DISubroutineType(types: !3491)
!3491 = !{!160}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3481, file: !69, line: 43, baseType: !3493, size: 64, offset: 192)
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!2375, !3496}
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 64)
!3497 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !69, line: 19, flags: DIFlagFwdDecl)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3481, file: !69, line: 44, baseType: !3499, size: 64, offset: 256)
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3500, size: 64)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{!2375}
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3481, file: !69, line: 45, baseType: !2654, size: 64, offset: 320)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3415, file: !3367, line: 144, baseType: !3504, size: 64, offset: 320)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 64)
!3505 = !DISubroutineType(types: !3506)
!3506 = !{!2375, !3372}
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3415, file: !3367, line: 145, baseType: !3508, size: 64, offset: 384)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = !DISubroutineType(types: !3510)
!3510 = !{null, !3372, !3511, !3512}
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3366, file: !3367, line: 70, baseType: !3514, size: 64, offset: 384)
!3514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3515, size: 64)
!3515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !434, line: 123, size: 1024, elements: !3516)
!3516 = !{!3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3645, !3646, !3647, !3648, !3649}
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3515, file: !434, line: 124, baseType: !591, size: 32)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3515, file: !434, line: 125, baseType: !591, size: 32, offset: 32)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3515, file: !434, line: 135, baseType: !3514, size: 64, offset: 64)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3515, file: !434, line: 136, baseType: !357, size: 64, offset: 128)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3515, file: !434, line: 138, baseType: !902, size: 192, align: 64, offset: 192)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3515, file: !434, line: 140, baseType: !2375, size: 64, offset: 384)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3515, file: !434, line: 141, baseType: !7, size: 32, offset: 448)
!3524 = !DIDerivedType(tag: DW_TAG_member, scope: !3515, file: !434, line: 142, baseType: !3525, size: 256, offset: 512)
!3525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3515, file: !434, line: 142, size: 256, elements: !3526)
!3526 = !{!3527, !3573, !3577}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3525, file: !434, line: 143, baseType: !3528, size: 192)
!3528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !434, line: 91, size: 192, elements: !3529)
!3529 = !{!3530, !3531, !3532}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3528, file: !434, line: 92, baseType: !212, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3528, file: !434, line: 94, baseType: !1003, size: 64, offset: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3528, file: !434, line: 100, baseType: !3533, size: 64, offset: 128)
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 64)
!3534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !434, line: 180, size: 704, elements: !3535)
!3535 = !{!3536, !3537, !3538, !3545, !3546, !3547, !3571, !3572}
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3534, file: !434, line: 182, baseType: !3514, size: 64)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3534, file: !434, line: 183, baseType: !7, size: 32, offset: 64)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3534, file: !434, line: 186, baseType: !3539, size: 192, offset: 128)
!3539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3540, line: 19, size: 192, elements: !3541)
!3540 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3541 = !{!3542, !3543, !3544}
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3539, file: !3540, line: 20, baseType: !2188, size: 128)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3539, file: !3540, line: 21, baseType: !7, size: 32, offset: 128)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3539, file: !3540, line: 22, baseType: !7, size: 32, offset: 160)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3534, file: !434, line: 187, baseType: !191, size: 32, offset: 320)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3534, file: !434, line: 188, baseType: !191, size: 32, offset: 352)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3534, file: !434, line: 189, baseType: !3548, size: 64, offset: 384)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !434, line: 168, size: 320, elements: !3550)
!3550 = !{!3551, !3555, !3559, !3563, !3567}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3549, file: !434, line: 169, baseType: !3552, size: 64)
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3553, size: 64)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{!165, !531, !3533}
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3549, file: !434, line: 171, baseType: !3556, size: 64, offset: 64)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = !DISubroutineType(types: !3558)
!3558 = !{!165, !3514, !357, !234}
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3549, file: !434, line: 173, baseType: !3560, size: 64, offset: 128)
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3561, size: 64)
!3561 = !DISubroutineType(types: !3562)
!3562 = !{!165, !3514}
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3549, file: !434, line: 174, baseType: !3564, size: 64, offset: 192)
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3565, size: 64)
!3565 = !DISubroutineType(types: !3566)
!3566 = !{!165, !3514, !3514, !357}
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3549, file: !434, line: 176, baseType: !3568, size: 64, offset: 256)
!3568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3569, size: 64)
!3569 = !DISubroutineType(types: !3570)
!3570 = !{!165, !531, !3514, !3533}
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3534, file: !434, line: 192, baseType: !220, size: 128, offset: 448)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3534, file: !434, line: 194, baseType: !830, size: 128, offset: 576)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3525, file: !434, line: 144, baseType: !3574, size: 64)
!3574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !434, line: 103, size: 64, elements: !3575)
!3575 = !{!3576}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3574, file: !434, line: 104, baseType: !3514, size: 64)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3525, file: !434, line: 145, baseType: !3578, size: 256)
!3578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !434, line: 107, size: 256, elements: !3579)
!3579 = !{!3580, !3640, !3643, !3644}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3578, file: !434, line: 108, baseType: !3581, size: 64)
!3581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3582, size: 64)
!3582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3583)
!3583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !434, line: 217, size: 768, elements: !3584)
!3584 = !{!3585, !3605, !3609, !3613, !3617, !3621, !3625, !3629, !3630, !3631, !3632, !3636}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3583, file: !434, line: 222, baseType: !3586, size: 64)
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3587, size: 64)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{!165, !3589}
!3589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3590, size: 64)
!3590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !434, line: 197, size: 1088, elements: !3591)
!3591 = !{!3592, !3593, !3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3590, file: !434, line: 199, baseType: !3514, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3590, file: !434, line: 200, baseType: !1158, size: 64, offset: 64)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3590, file: !434, line: 201, baseType: !531, size: 64, offset: 128)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3590, file: !434, line: 202, baseType: !160, size: 64, offset: 192)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3590, file: !434, line: 205, baseType: !575, size: 192, offset: 256)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3590, file: !434, line: 206, baseType: !575, size: 192, offset: 448)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3590, file: !434, line: 207, baseType: !165, size: 32, offset: 640)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3590, file: !434, line: 208, baseType: !220, size: 128, offset: 704)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3590, file: !434, line: 209, baseType: !205, size: 64, offset: 832)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3590, file: !434, line: 211, baseType: !1190, size: 64, offset: 896)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3590, file: !434, line: 212, baseType: !400, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3590, file: !434, line: 213, baseType: !400, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3590, file: !434, line: 214, baseType: !1072, size: 64, offset: 1024)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3583, file: !434, line: 223, baseType: !3606, size: 64, offset: 64)
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3607, size: 64)
!3607 = !DISubroutineType(types: !3608)
!3608 = !{null, !3589}
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3583, file: !434, line: 236, baseType: !3610, size: 64, offset: 128)
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 64)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{!165, !531, !160}
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3583, file: !434, line: 238, baseType: !3614, size: 64, offset: 192)
!3614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3615, size: 64)
!3615 = !DISubroutineType(types: !3616)
!3616 = !{!160, !531, !1193}
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3583, file: !434, line: 239, baseType: !3618, size: 64, offset: 256)
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = !DISubroutineType(types: !3620)
!3620 = !{!160, !531, !160, !1193}
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3583, file: !434, line: 240, baseType: !3622, size: 64, offset: 320)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3623, size: 64)
!3623 = !DISubroutineType(types: !3624)
!3624 = !{null, !531, !160}
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3583, file: !434, line: 242, baseType: !3626, size: 64, offset: 384)
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3627, size: 64)
!3627 = !DISubroutineType(types: !3628)
!3628 = !{!1187, !3589, !205, !1190, !419}
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3583, file: !434, line: 252, baseType: !1190, size: 64, offset: 448)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3583, file: !434, line: 259, baseType: !400, size: 8, offset: 512)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3583, file: !434, line: 260, baseType: !3626, size: 64, offset: 576)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3583, file: !434, line: 263, baseType: !3633, size: 64, offset: 640)
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3634, size: 64)
!3634 = !DISubroutineType(types: !3635)
!3635 = !{!1264, !3589, !1266}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3583, file: !434, line: 266, baseType: !3637, size: 64, offset: 704)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{!165, !3589, !1044}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3578, file: !434, line: 109, baseType: !3641, size: 64, offset: 64)
!3641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3642, size: 64)
!3642 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !434, line: 31, flags: DIFlagFwdDecl)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3578, file: !434, line: 110, baseType: !419, size: 64, offset: 128)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3578, file: !434, line: 111, baseType: !3514, size: 64, offset: 192)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3515, file: !434, line: 148, baseType: !160, size: 64, offset: 768)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3515, file: !434, line: 154, baseType: !298, size: 64, offset: 832)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3515, file: !434, line: 156, baseType: !183, size: 16, offset: 896)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3515, file: !434, line: 157, baseType: !234, size: 16, offset: 912)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3515, file: !434, line: 158, baseType: !3650, size: 64, offset: 960)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !434, line: 32, flags: DIFlagFwdDecl)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3366, file: !3367, line: 71, baseType: !3653, size: 32, offset: 448)
!3653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3654, line: 19, size: 32, elements: !3655)
!3654 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3655 = !{!3656}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3653, file: !3654, line: 20, baseType: !877, size: 32)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3366, file: !3367, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3366, file: !3367, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3366, file: !3367, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3366, file: !3367, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3366, file: !3367, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3363, file: !81, line: 463, baseType: !3362, size: 64, offset: 512)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3363, file: !81, line: 465, baseType: !3664, size: 64, offset: 576)
!3664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3665, size: 64)
!3665 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !81, line: 36, flags: DIFlagFwdDecl)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3363, file: !81, line: 467, baseType: !357, size: 64, offset: 640)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3363, file: !81, line: 468, baseType: !3668, size: 64, offset: 704)
!3668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3669, size: 64)
!3669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3670)
!3670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !81, line: 87, size: 384, elements: !3671)
!3671 = !{!3672, !3673, !3674, !3678, !3683, !3687}
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3670, file: !81, line: 88, baseType: !357, size: 64)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3670, file: !81, line: 89, baseType: !3443, size: 64, offset: 64)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3670, file: !81, line: 90, baseType: !3675, size: 64, offset: 128)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3676, size: 64)
!3676 = !DISubroutineType(types: !3677)
!3677 = !{!165, !3362, !3400}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3670, file: !81, line: 91, baseType: !3679, size: 64, offset: 192)
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 64)
!3680 = !DISubroutineType(types: !3681)
!3681 = !{!205, !3362, !3682, !3511, !3512}
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3670, file: !81, line: 93, baseType: !3684, size: 64, offset: 256)
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DISubroutineType(types: !3686)
!3686 = !{null, !3362}
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3670, file: !81, line: 95, baseType: !3688, size: 64, offset: 320)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3690)
!3690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !88, line: 278, size: 1472, elements: !3691)
!3691 = !{!3692, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717}
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3690, file: !88, line: 279, baseType: !3693, size: 64)
!3693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3694, size: 64)
!3694 = !DISubroutineType(types: !3695)
!3695 = !{!165, !3362}
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3690, file: !88, line: 280, baseType: !3684, size: 64, offset: 64)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3690, file: !88, line: 281, baseType: !3693, size: 64, offset: 128)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3690, file: !88, line: 282, baseType: !3693, size: 64, offset: 192)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3690, file: !88, line: 283, baseType: !3693, size: 64, offset: 256)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3690, file: !88, line: 284, baseType: !3693, size: 64, offset: 320)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3690, file: !88, line: 285, baseType: !3693, size: 64, offset: 384)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3690, file: !88, line: 286, baseType: !3693, size: 64, offset: 448)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3690, file: !88, line: 287, baseType: !3693, size: 64, offset: 512)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3690, file: !88, line: 288, baseType: !3693, size: 64, offset: 576)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3690, file: !88, line: 289, baseType: !3693, size: 64, offset: 640)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3690, file: !88, line: 290, baseType: !3693, size: 64, offset: 704)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3690, file: !88, line: 291, baseType: !3693, size: 64, offset: 768)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3690, file: !88, line: 292, baseType: !3693, size: 64, offset: 832)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3690, file: !88, line: 293, baseType: !3693, size: 64, offset: 896)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3690, file: !88, line: 294, baseType: !3693, size: 64, offset: 960)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3690, file: !88, line: 295, baseType: !3693, size: 64, offset: 1024)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3690, file: !88, line: 296, baseType: !3693, size: 64, offset: 1088)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3690, file: !88, line: 297, baseType: !3693, size: 64, offset: 1152)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3690, file: !88, line: 298, baseType: !3693, size: 64, offset: 1216)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3690, file: !88, line: 299, baseType: !3693, size: 64, offset: 1280)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3690, file: !88, line: 300, baseType: !3693, size: 64, offset: 1344)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3690, file: !88, line: 301, baseType: !3693, size: 64, offset: 1408)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3363, file: !81, line: 470, baseType: !3719, size: 64, offset: 768)
!3719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3720, size: 64)
!3720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3721, line: 82, size: 1408, elements: !3722)
!3721 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3722 = !{!3723, !3724, !3725, !3726, !3727, !3728, !3729, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3804, !3807, !3808}
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3720, file: !3721, line: 83, baseType: !357, size: 64)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3720, file: !3721, line: 84, baseType: !357, size: 64, offset: 64)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3720, file: !3721, line: 85, baseType: !3362, size: 64, offset: 128)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3720, file: !3721, line: 86, baseType: !3443, size: 64, offset: 192)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3720, file: !3721, line: 87, baseType: !3443, size: 64, offset: 256)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3720, file: !3721, line: 88, baseType: !3443, size: 64, offset: 320)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3720, file: !3721, line: 90, baseType: !3730, size: 64, offset: 384)
!3730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3731, size: 64)
!3731 = !DISubroutineType(types: !3732)
!3732 = !{!165, !3362, !3733}
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !75, line: 95, size: 1152, elements: !3735)
!3735 = !{!3736, !3737, !3738, !3739, !3740, !3741, !3742, !3755, !3768, !3769, !3770, !3771, !3772, !3780, !3781, !3782, !3783, !3784, !3785}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3734, file: !75, line: 96, baseType: !357, size: 64)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3734, file: !75, line: 97, baseType: !3719, size: 64, offset: 64)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3734, file: !75, line: 99, baseType: !448, size: 64, offset: 128)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3734, file: !75, line: 100, baseType: !357, size: 64, offset: 192)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3734, file: !75, line: 102, baseType: !400, size: 8, offset: 256)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3734, file: !75, line: 103, baseType: !74, size: 32, offset: 288)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3734, file: !75, line: 105, baseType: !3743, size: 64, offset: 320)
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3745)
!3745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3746, line: 262, size: 1600, elements: !3747)
!3746 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3747 = !{!3748, !3749, !3750, !3754}
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3745, file: !3746, line: 263, baseType: !2567, size: 256)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3745, file: !3746, line: 264, baseType: !2567, size: 256, offset: 256)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3745, file: !3746, line: 265, baseType: !3751, size: 1024, offset: 512)
!3751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 1024, elements: !3752)
!3752 = !{!3753}
!3753 = !DISubrange(count: 128)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3745, file: !3746, line: 266, baseType: !2375, size: 64, offset: 1536)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3734, file: !75, line: 106, baseType: !3756, size: 64, offset: 384)
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3758)
!3758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3746, line: 210, size: 256, elements: !3759)
!3759 = !{!3760, !3764, !3766, !3767}
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3758, file: !3746, line: 211, baseType: !3761, size: 72)
!3761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !171, size: 72, elements: !3762)
!3762 = !{!3763}
!3763 = !DISubrange(count: 9)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3758, file: !3746, line: 212, baseType: !3765, size: 64, offset: 128)
!3765 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3746, line: 14, baseType: !212)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3758, file: !3746, line: 213, baseType: !192, size: 32, offset: 192)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3758, file: !3746, line: 214, baseType: !192, size: 32, offset: 224)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3734, file: !75, line: 108, baseType: !3693, size: 64, offset: 448)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3734, file: !75, line: 109, baseType: !3684, size: 64, offset: 512)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3734, file: !75, line: 110, baseType: !3693, size: 64, offset: 576)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3734, file: !75, line: 111, baseType: !3684, size: 64, offset: 640)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3734, file: !75, line: 112, baseType: !3773, size: 64, offset: 704)
!3773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3774, size: 64)
!3774 = !DISubroutineType(types: !3775)
!3775 = !{!165, !3362, !3776}
!3776 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !88, line: 52, baseType: !3777)
!3777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !88, line: 50, size: 32, elements: !3778)
!3778 = !{!3779}
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3777, file: !88, line: 51, baseType: !165, size: 32)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3734, file: !75, line: 113, baseType: !3693, size: 64, offset: 768)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3734, file: !75, line: 114, baseType: !3443, size: 64, offset: 832)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3734, file: !75, line: 115, baseType: !3443, size: 64, offset: 896)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3734, file: !75, line: 117, baseType: !3688, size: 64, offset: 960)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3734, file: !75, line: 118, baseType: !3684, size: 64, offset: 1024)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3734, file: !75, line: 120, baseType: !3786, size: 64, offset: 1088)
!3786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3787, size: 64)
!3787 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !75, line: 120, flags: DIFlagFwdDecl)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3720, file: !3721, line: 91, baseType: !3675, size: 64, offset: 448)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3720, file: !3721, line: 92, baseType: !3693, size: 64, offset: 512)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3720, file: !3721, line: 93, baseType: !3684, size: 64, offset: 576)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3720, file: !3721, line: 94, baseType: !3693, size: 64, offset: 640)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3720, file: !3721, line: 95, baseType: !3684, size: 64, offset: 704)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3720, file: !3721, line: 97, baseType: !3693, size: 64, offset: 768)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3720, file: !3721, line: 98, baseType: !3693, size: 64, offset: 832)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3720, file: !3721, line: 100, baseType: !3773, size: 64, offset: 896)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3720, file: !3721, line: 101, baseType: !3693, size: 64, offset: 960)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3720, file: !3721, line: 103, baseType: !3693, size: 64, offset: 1024)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3720, file: !3721, line: 105, baseType: !3693, size: 64, offset: 1088)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3720, file: !3721, line: 107, baseType: !3688, size: 64, offset: 1152)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3720, file: !3721, line: 109, baseType: !3801, size: 64, offset: 1216)
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3802, size: 64)
!3802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3803)
!3803 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3721, line: 109, flags: DIFlagFwdDecl)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3720, file: !3721, line: 111, baseType: !3805, size: 64, offset: 1280)
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3806, size: 64)
!3806 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3721, line: 111, flags: DIFlagFwdDecl)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3720, file: !3721, line: 112, baseType: !463, offset: 1344)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3720, file: !3721, line: 114, baseType: !400, size: 8, offset: 1344)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3363, file: !81, line: 471, baseType: !3733, size: 64, offset: 832)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3363, file: !81, line: 473, baseType: !160, size: 64, offset: 896)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3363, file: !81, line: 475, baseType: !160, size: 64, offset: 960)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3363, file: !81, line: 480, baseType: !575, size: 192, offset: 1024)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3363, file: !81, line: 484, baseType: !3814, size: 576, offset: 1216)
!3814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !81, line: 361, size: 576, elements: !3815)
!3815 = !{!3816, !3817, !3818, !3819, !3820, !3821}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3814, file: !81, line: 362, baseType: !220, size: 128)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3814, file: !81, line: 363, baseType: !220, size: 128, offset: 128)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3814, file: !81, line: 364, baseType: !220, size: 128, offset: 256)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3814, file: !81, line: 365, baseType: !220, size: 128, offset: 384)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3814, file: !81, line: 366, baseType: !400, size: 8, offset: 512)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3814, file: !81, line: 367, baseType: !80, size: 32, offset: 544)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3363, file: !81, line: 485, baseType: !3823, size: 2304, offset: 1792)
!3823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !88, line: 565, size: 2304, elements: !3824)
!3824 = !{!3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3835, !3836, !3837, !3838, !3839, !3840, !3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3907, !3908, !3909, !3910, !3920, !3924}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3823, file: !88, line: 566, baseType: !3776, size: 32)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3823, file: !88, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3823, file: !88, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3823, file: !88, line: 569, baseType: !400, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3823, file: !88, line: 570, baseType: !400, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3823, file: !88, line: 571, baseType: !400, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3823, file: !88, line: 572, baseType: !400, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3823, file: !88, line: 573, baseType: !400, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3823, file: !88, line: 574, baseType: !400, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3823, file: !88, line: 575, baseType: !400, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3823, file: !88, line: 576, baseType: !400, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3823, file: !88, line: 577, baseType: !191, size: 32, offset: 64)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3823, file: !88, line: 578, baseType: !320, offset: 96)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3823, file: !88, line: 580, baseType: !220, size: 128, offset: 128)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3823, file: !88, line: 581, baseType: !1807, size: 192, offset: 256)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3823, file: !88, line: 582, baseType: !3841, size: 64, offset: 448)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3843, line: 43, size: 1472, elements: !3844)
!3843 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3844 = !{!3845, !3846, !3847, !3848, !3849, !3852, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3876, !3877}
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3842, file: !3843, line: 44, baseType: !357, size: 64)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3842, file: !3843, line: 45, baseType: !165, size: 32, offset: 64)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3842, file: !3843, line: 46, baseType: !220, size: 128, offset: 128)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3842, file: !3843, line: 47, baseType: !320, offset: 256)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3842, file: !3843, line: 48, baseType: !3850, size: 64, offset: 256)
!3850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3851, size: 64)
!3851 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !88, line: 533, flags: DIFlagFwdDecl)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3842, file: !3843, line: 49, baseType: !3853, size: 320, offset: 320)
!3853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3854, line: 11, size: 320, elements: !3855)
!3854 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3855 = !{!3856, !3857, !3858, !3863}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3853, file: !3854, line: 16, baseType: !457, size: 128)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3853, file: !3854, line: 17, baseType: !212, size: 64, offset: 128)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3853, file: !3854, line: 18, baseType: !3859, size: 64, offset: 192)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{null, !3862}
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3853, file: !3854, line: 19, baseType: !191, size: 32, offset: 256)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3842, file: !3843, line: 50, baseType: !212, size: 64, offset: 640)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3842, file: !3843, line: 51, baseType: !954, size: 64, offset: 704)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3842, file: !3843, line: 52, baseType: !954, size: 64, offset: 768)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3842, file: !3843, line: 53, baseType: !954, size: 64, offset: 832)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3842, file: !3843, line: 54, baseType: !954, size: 64, offset: 896)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3842, file: !3843, line: 55, baseType: !954, size: 64, offset: 960)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3842, file: !3843, line: 56, baseType: !212, size: 64, offset: 1024)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3842, file: !3843, line: 57, baseType: !212, size: 64, offset: 1088)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3842, file: !3843, line: 58, baseType: !212, size: 64, offset: 1152)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3842, file: !3843, line: 59, baseType: !212, size: 64, offset: 1216)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3842, file: !3843, line: 60, baseType: !212, size: 64, offset: 1280)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3842, file: !3843, line: 61, baseType: !3362, size: 64, offset: 1344)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3842, file: !3843, line: 62, baseType: !400, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3842, file: !3843, line: 63, baseType: !400, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3823, file: !88, line: 583, baseType: !400, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3823, file: !88, line: 584, baseType: !400, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3823, file: !88, line: 585, baseType: !400, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3823, file: !88, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3823, file: !88, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3823, file: !88, line: 592, baseType: !946, size: 512, offset: 576)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3823, file: !88, line: 593, baseType: !298, size: 64, offset: 1088)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3823, file: !88, line: 594, baseType: !1832, size: 256, offset: 1152)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3823, file: !88, line: 595, baseType: !830, size: 128, offset: 1408)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3823, file: !88, line: 596, baseType: !3850, size: 64, offset: 1536)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3823, file: !88, line: 597, baseType: !591, size: 32, offset: 1600)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3823, file: !88, line: 598, baseType: !591, size: 32, offset: 1632)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3823, file: !88, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3823, file: !88, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3823, file: !88, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3823, file: !88, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3823, file: !88, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3823, file: !88, line: 604, baseType: !400, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3823, file: !88, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3823, file: !88, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3823, file: !88, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3823, file: !88, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3823, file: !88, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3823, file: !88, line: 610, baseType: !7, size: 32, offset: 1696)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3823, file: !88, line: 611, baseType: !87, size: 32, offset: 1728)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3823, file: !88, line: 612, baseType: !95, size: 32, offset: 1760)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3823, file: !88, line: 613, baseType: !165, size: 32, offset: 1792)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3823, file: !88, line: 614, baseType: !165, size: 32, offset: 1824)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3823, file: !88, line: 615, baseType: !298, size: 64, offset: 1856)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3823, file: !88, line: 616, baseType: !298, size: 64, offset: 1920)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3823, file: !88, line: 617, baseType: !298, size: 64, offset: 1984)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3823, file: !88, line: 618, baseType: !298, size: 64, offset: 2048)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3823, file: !88, line: 620, baseType: !3911, size: 64, offset: 2112)
!3911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3912, size: 64)
!3912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !88, line: 536, size: 256, elements: !3913)
!3913 = !{!3914, !3915, !3916, !3917}
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3912, file: !88, line: 537, baseType: !320)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3912, file: !88, line: 538, baseType: !7, size: 32)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3912, file: !88, line: 540, baseType: !220, size: 128, offset: 64)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3912, file: !88, line: 543, baseType: !3918, size: 64, offset: 192)
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3919 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !88, line: 534, flags: DIFlagFwdDecl)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3823, file: !88, line: 621, baseType: !3921, size: 64, offset: 2176)
!3921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3922, size: 64)
!3922 = !DISubroutineType(types: !3923)
!3923 = !{null, !3362, !1527}
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3823, file: !88, line: 622, baseType: !3925, size: 64, offset: 2240)
!3925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3926, size: 64)
!3926 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !88, line: 622, flags: DIFlagFwdDecl)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3363, file: !81, line: 486, baseType: !3928, size: 64, offset: 4096)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !88, line: 642, size: 1792, elements: !3930)
!3930 = !{!3931, !3932, !3933, !3937, !3938, !3939}
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3929, file: !88, line: 643, baseType: !3690, size: 1472)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3929, file: !88, line: 644, baseType: !3693, size: 64, offset: 1472)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3929, file: !88, line: 645, baseType: !3934, size: 64, offset: 1536)
!3934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3935, size: 64)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{null, !3362, !400}
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3929, file: !88, line: 646, baseType: !3693, size: 64, offset: 1600)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3929, file: !88, line: 647, baseType: !3684, size: 64, offset: 1664)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3929, file: !88, line: 648, baseType: !3684, size: 64, offset: 1728)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3363, file: !81, line: 493, baseType: !3941, size: 64, offset: 4160)
!3941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3942, size: 64)
!3942 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !81, line: 493, flags: DIFlagFwdDecl)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3363, file: !81, line: 499, baseType: !220, size: 128, offset: 4224)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3363, file: !81, line: 502, baseType: !3945, size: 64, offset: 4352)
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!3946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3947)
!3947 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !81, line: 502, flags: DIFlagFwdDecl)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3363, file: !81, line: 504, baseType: !3949, size: 64, offset: 4416)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3363, file: !81, line: 505, baseType: !298, size: 64, offset: 4480)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3363, file: !81, line: 510, baseType: !298, size: 64, offset: 4544)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3363, file: !81, line: 511, baseType: !3953, size: 64, offset: 4608)
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3954, size: 64)
!3954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3955)
!3955 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !81, line: 511, flags: DIFlagFwdDecl)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3363, file: !81, line: 513, baseType: !3957, size: 64, offset: 4672)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !81, line: 288, size: 128, elements: !3959)
!3959 = !{!3960, !3961}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3958, file: !81, line: 293, baseType: !7, size: 32)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3958, file: !81, line: 294, baseType: !212, size: 64, offset: 64)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3363, file: !81, line: 515, baseType: !220, size: 128, offset: 4736)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3363, file: !81, line: 526, baseType: !3964, offset: 4864)
!3964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3965, line: 5, elements: !334)
!3965 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3363, file: !81, line: 528, baseType: !3967, size: 64, offset: 4864)
!3967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3968, size: 64)
!3968 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3969, line: 14, flags: DIFlagFwdDecl)
!3969 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3363, file: !81, line: 529, baseType: !3971, size: 64, offset: 4928)
!3971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3972, size: 64)
!3972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3973, line: 17, size: 192, elements: !3974)
!3973 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3974 = !{!3975, !3976, !4059}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3972, file: !3973, line: 18, baseType: !3971, size: 64)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3972, file: !3973, line: 19, baseType: !3977, size: 64, offset: 64)
!3977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3978, size: 64)
!3978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3979)
!3979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3973, line: 110, size: 1152, elements: !3980)
!3980 = !{!3981, !3985, !3989, !3995, !4001, !4005, !4009, !4014, !4018, !4019, !4023, !4027, !4031, !4042, !4043, !4044, !4045, !4055}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3979, file: !3973, line: 111, baseType: !3982, size: 64)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = !DISubroutineType(types: !3984)
!3984 = !{!3971, !3971}
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3979, file: !3973, line: 112, baseType: !3986, size: 64, offset: 64)
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3987, size: 64)
!3987 = !DISubroutineType(types: !3988)
!3988 = !{null, !3971}
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3979, file: !3973, line: 113, baseType: !3990, size: 64, offset: 128)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{!400, !3993}
!3993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 64)
!3994 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3972)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3979, file: !3973, line: 114, baseType: !3996, size: 64, offset: 192)
!3996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3997, size: 64)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{!2375, !3993, !3999}
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 64)
!4000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3363)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3979, file: !3973, line: 116, baseType: !4002, size: 64, offset: 256)
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4003, size: 64)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{!400, !3993, !357}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3979, file: !3973, line: 118, baseType: !4006, size: 64, offset: 320)
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4007, size: 64)
!4007 = !DISubroutineType(types: !4008)
!4008 = !{!165, !3993, !357, !7, !160, !1190}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3979, file: !3973, line: 123, baseType: !4010, size: 64, offset: 384)
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = !DISubroutineType(types: !4012)
!4012 = !{!165, !3993, !357, !4013, !1190}
!4013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3979, file: !3973, line: 126, baseType: !4015, size: 64, offset: 448)
!4015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4016, size: 64)
!4016 = !DISubroutineType(types: !4017)
!4017 = !{!357, !3993}
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3979, file: !3973, line: 127, baseType: !4015, size: 64, offset: 512)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3979, file: !3973, line: 128, baseType: !4020, size: 64, offset: 576)
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4021, size: 64)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{!3971, !3993}
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3979, file: !3973, line: 130, baseType: !4024, size: 64, offset: 640)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{!3971, !3993, !3971}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3979, file: !3973, line: 133, baseType: !4028, size: 64, offset: 704)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 64)
!4029 = !DISubroutineType(types: !4030)
!4030 = !{!3971, !3993, !357}
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3979, file: !3973, line: 135, baseType: !4032, size: 64, offset: 768)
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4033, size: 64)
!4033 = !DISubroutineType(types: !4034)
!4034 = !{!165, !3993, !357, !357, !7, !7, !4035}
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 64)
!4036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3973, line: 43, size: 640, elements: !4037)
!4037 = !{!4038, !4039, !4040}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4036, file: !3973, line: 44, baseType: !3971, size: 64)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4036, file: !3973, line: 45, baseType: !7, size: 32, offset: 64)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4036, file: !3973, line: 46, baseType: !4041, size: 512, offset: 128)
!4041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !298, size: 512, elements: !984)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3979, file: !3973, line: 140, baseType: !4024, size: 64, offset: 832)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3979, file: !3973, line: 143, baseType: !4020, size: 64, offset: 896)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3979, file: !3973, line: 145, baseType: !3982, size: 64, offset: 960)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3979, file: !3973, line: 146, baseType: !4046, size: 64, offset: 1024)
!4046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4047, size: 64)
!4047 = !DISubroutineType(types: !4048)
!4048 = !{!165, !3993, !4049}
!4049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4050, size: 64)
!4050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3973, line: 29, size: 128, elements: !4051)
!4051 = !{!4052, !4053, !4054}
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4050, file: !3973, line: 30, baseType: !7, size: 32)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4050, file: !3973, line: 31, baseType: !7, size: 32, offset: 32)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4050, file: !3973, line: 32, baseType: !3993, size: 64, offset: 64)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3979, file: !3973, line: 148, baseType: !4056, size: 64, offset: 1088)
!4056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4057, size: 64)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{!165, !3993, !3362}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3972, file: !3973, line: 20, baseType: !3362, size: 64, offset: 128)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3363, file: !81, line: 534, baseType: !414, size: 32, offset: 4992)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3363, file: !81, line: 535, baseType: !191, size: 32, offset: 5024)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3363, file: !81, line: 537, baseType: !320, offset: 5056)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3363, file: !81, line: 538, baseType: !220, size: 128, offset: 5056)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3363, file: !81, line: 540, baseType: !4065, size: 64, offset: 5184)
!4065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4066, size: 64)
!4066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4067, line: 54, size: 960, elements: !4068)
!4067 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4068 = !{!4069, !4070, !4071, !4072, !4073, !4074, !4075, !4079, !4083, !4084, !4085, !4086, !4090, !4094, !4095}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4066, file: !4067, line: 55, baseType: !357, size: 64)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4066, file: !4067, line: 56, baseType: !448, size: 64, offset: 64)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4066, file: !4067, line: 58, baseType: !3443, size: 64, offset: 128)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4066, file: !4067, line: 59, baseType: !3443, size: 64, offset: 192)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4066, file: !4067, line: 60, baseType: !3372, size: 64, offset: 256)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4066, file: !4067, line: 62, baseType: !3675, size: 64, offset: 320)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4066, file: !4067, line: 63, baseType: !4076, size: 64, offset: 384)
!4076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4077, size: 64)
!4077 = !DISubroutineType(types: !4078)
!4078 = !{!205, !3362, !3682}
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4066, file: !4067, line: 65, baseType: !4080, size: 64, offset: 448)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{null, !4065}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4066, file: !4067, line: 66, baseType: !3684, size: 64, offset: 512)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4066, file: !4067, line: 68, baseType: !3693, size: 64, offset: 576)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4066, file: !4067, line: 70, baseType: !3479, size: 64, offset: 640)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4066, file: !4067, line: 71, baseType: !4087, size: 64, offset: 704)
!4087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4088, size: 64)
!4088 = !DISubroutineType(types: !4089)
!4089 = !{!2375, !3362}
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4066, file: !4067, line: 73, baseType: !4091, size: 64, offset: 768)
!4091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4092, size: 64)
!4092 = !DISubroutineType(types: !4093)
!4093 = !{null, !3362, !3511, !3512}
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4066, file: !4067, line: 75, baseType: !3688, size: 64, offset: 832)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4066, file: !4067, line: 77, baseType: !3805, size: 64, offset: 896)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3363, file: !81, line: 541, baseType: !3443, size: 64, offset: 5248)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3363, file: !81, line: 543, baseType: !3684, size: 64, offset: 5312)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3363, file: !81, line: 544, baseType: !4099, size: 64, offset: 5376)
!4099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4100, size: 64)
!4100 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !81, line: 45, flags: DIFlagFwdDecl)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3363, file: !81, line: 545, baseType: !4102, size: 64, offset: 5440)
!4102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4103, size: 64)
!4103 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !81, line: 47, flags: DIFlagFwdDecl)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3363, file: !81, line: 547, baseType: !400, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3363, file: !81, line: 548, baseType: !400, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3363, file: !81, line: 549, baseType: !400, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3363, file: !81, line: 550, baseType: !400, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3293, file: !3288, line: 635, baseType: !3363, size: 5568, offset: 2304)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !3293, file: !3288, line: 636, baseType: !3457, size: 64, offset: 7872)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !3293, file: !3288, line: 637, baseType: !3457, size: 64, offset: 7936)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !3293, file: !3288, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !3287, file: !3288, line: 312, baseType: !3292, size: 64, offset: 192)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !3287, file: !3288, line: 314, baseType: !160, size: 64, offset: 256)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !3287, file: !3288, line: 315, baseType: !3347, size: 64, offset: 320)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !3287, file: !3288, line: 316, baseType: !4116, size: 64, offset: 384)
!4116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4117, size: 64)
!4117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !3288, line: 69, size: 832, elements: !4118)
!4118 = !{!4119, !4120, !4121, !4124, !4125}
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4117, file: !3288, line: 70, baseType: !3292, size: 64)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4117, file: !3288, line: 71, baseType: !220, size: 128, offset: 64)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4117, file: !3288, line: 72, baseType: !4122, size: 64, offset: 192)
!4122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4123, size: 64)
!4123 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !3288, line: 72, flags: DIFlagFwdDecl)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4117, file: !3288, line: 73, baseType: !173, size: 8, offset: 256)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4117, file: !3288, line: 74, baseType: !3366, size: 512, offset: 320)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !3287, file: !3288, line: 318, baseType: !7, size: 32, offset: 448)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !3287, file: !3288, line: 319, baseType: !183, size: 16, offset: 480)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !3287, file: !3288, line: 320, baseType: !183, size: 16, offset: 496)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !3287, file: !3288, line: 321, baseType: !183, size: 16, offset: 512)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !3287, file: !3288, line: 322, baseType: !183, size: 16, offset: 528)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3287, file: !3288, line: 323, baseType: !7, size: 32, offset: 544)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !3287, file: !3288, line: 324, baseType: !169, size: 8, offset: 576)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !3287, file: !3288, line: 325, baseType: !169, size: 8, offset: 584)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !3287, file: !3288, line: 330, baseType: !169, size: 8, offset: 592)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !3287, file: !3288, line: 331, baseType: !169, size: 8, offset: 600)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !3287, file: !3288, line: 332, baseType: !169, size: 8, offset: 608)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !3287, file: !3288, line: 333, baseType: !169, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !3287, file: !3288, line: 334, baseType: !169, size: 8, offset: 624)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !3287, file: !3288, line: 335, baseType: !169, size: 8, offset: 632)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !3287, file: !3288, line: 336, baseType: !181, size: 16, offset: 640)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !3287, file: !3288, line: 337, baseType: !4142, size: 64, offset: 704)
!4142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3287, file: !3288, line: 339, baseType: !4144, size: 64, offset: 768)
!4144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4145, size: 64)
!4145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !3288, line: 858, size: 2048, elements: !4146)
!4146 = !{!4147, !4148, !4149, !4161, !4165, !4169, !4173, !4177, !4178, !4182, !4201, !4202, !4203}
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4145, file: !3288, line: 859, baseType: !220, size: 128)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4145, file: !3288, line: 860, baseType: !357, size: 64, offset: 128)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4145, file: !3288, line: 861, baseType: !4150, size: 64, offset: 192)
!4150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4151, size: 64)
!4151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4152)
!4152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3746, line: 38, size: 256, elements: !4153)
!4153 = !{!4154, !4155, !4156, !4157, !4158, !4159, !4160}
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4152, file: !3746, line: 39, baseType: !192, size: 32)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4152, file: !3746, line: 39, baseType: !192, size: 32, offset: 32)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !4152, file: !3746, line: 40, baseType: !192, size: 32, offset: 64)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4152, file: !3746, line: 40, baseType: !192, size: 32, offset: 96)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4152, file: !3746, line: 41, baseType: !192, size: 32, offset: 128)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !4152, file: !3746, line: 41, baseType: !192, size: 32, offset: 160)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4152, file: !3746, line: 42, baseType: !3765, size: 64, offset: 192)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4145, file: !3288, line: 862, baseType: !4162, size: 64, offset: 256)
!4162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4163, size: 64)
!4163 = !DISubroutineType(types: !4164)
!4164 = !{!165, !3286, !4150}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4145, file: !3288, line: 863, baseType: !4166, size: 64, offset: 320)
!4166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4167, size: 64)
!4167 = !DISubroutineType(types: !4168)
!4168 = !{null, !3286}
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4145, file: !3288, line: 864, baseType: !4170, size: 64, offset: 384)
!4170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4171, size: 64)
!4171 = !DISubroutineType(types: !4172)
!4172 = !{!165, !3286, !3776}
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4145, file: !3288, line: 865, baseType: !4174, size: 64, offset: 448)
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 64)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{!165, !3286}
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4145, file: !3288, line: 866, baseType: !4166, size: 64, offset: 512)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !4145, file: !3288, line: 867, baseType: !4179, size: 64, offset: 576)
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{!165, !3286, !165}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !4145, file: !3288, line: 868, baseType: !4183, size: 64, offset: 640)
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4185)
!4185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !3288, line: 795, size: 384, elements: !4186)
!4186 = !{!4187, !4193, !4197, !4198, !4199, !4200}
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4185, file: !3288, line: 797, baseType: !4188, size: 64)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4189, size: 64)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!4191, !3286, !4192}
!4191 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !3288, line: 772, baseType: !7)
!4192 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !3288, line: 180, baseType: !7)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4185, file: !3288, line: 801, baseType: !4194, size: 64, offset: 64)
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4195, size: 64)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{!4191, !3286}
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4185, file: !3288, line: 804, baseType: !4194, size: 64, offset: 128)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4185, file: !3288, line: 807, baseType: !4166, size: 64, offset: 192)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4185, file: !3288, line: 808, baseType: !4166, size: 64, offset: 256)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4185, file: !3288, line: 811, baseType: !4166, size: 64, offset: 320)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4145, file: !3288, line: 869, baseType: !3443, size: 64, offset: 704)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4145, file: !3288, line: 870, baseType: !3734, size: 1152, offset: 768)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4145, file: !3288, line: 871, baseType: !4204, size: 128, offset: 1920)
!4204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !3288, line: 759, size: 128, elements: !4205)
!4205 = !{!4206, !4207}
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4204, file: !3288, line: 760, baseType: !320)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4204, file: !3288, line: 761, baseType: !220, size: 128)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3287, file: !3288, line: 340, baseType: !298, size: 64, offset: 832)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3287, file: !3288, line: 346, baseType: !3958, size: 128, offset: 896)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !3287, file: !3288, line: 348, baseType: !4211, size: 32, offset: 1024)
!4211 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !3288, line: 155, baseType: !165)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !3287, file: !3288, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !3287, file: !3288, line: 352, baseType: !169, size: 8, offset: 1064)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !3287, file: !3288, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !3287, file: !3288, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !3287, file: !3288, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !3287, file: !3288, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !3287, file: !3288, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !3287, file: !3288, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !3287, file: !3288, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !3287, file: !3288, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !3287, file: !3288, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !3287, file: !3288, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !3287, file: !3288, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !3287, file: !3288, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !3287, file: !3288, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !3287, file: !3288, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !3287, file: !3288, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !3287, file: !3288, line: 376, baseType: !7, size: 32, offset: 1120)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !3287, file: !3288, line: 377, baseType: !7, size: 32, offset: 1152)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !3287, file: !3288, line: 380, baseType: !4232, size: 64, offset: 1216)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4233 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !3288, line: 303, flags: DIFlagFwdDecl)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !3287, file: !3288, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !3287, file: !3288, line: 383, baseType: !165, size: 32, offset: 1312)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !3287, file: !3288, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !3287, file: !3288, line: 387, baseType: !4192, size: 32, offset: 1376)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3287, file: !3288, line: 388, baseType: !3363, size: 5568, offset: 1408)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !3287, file: !3288, line: 390, baseType: !165, size: 32, offset: 6976)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !3287, file: !3288, line: 396, baseType: !7, size: 32, offset: 7008)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !3287, file: !3288, line: 397, baseType: !4242, size: 8704, offset: 7040)
!4242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3304, size: 8704, elements: !4243)
!4243 = !{!4244}
!4244 = !DISubrange(count: 17)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !3287, file: !3288, line: 399, baseType: !400, size: 8, offset: 15744)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !3287, file: !3288, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !3287, file: !3288, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !3287, file: !3288, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !3287, file: !3288, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !3287, file: !3288, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !3287, file: !3288, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !3287, file: !3288, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !3287, file: !3288, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !3287, file: !3288, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !3287, file: !3288, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !3287, file: !3288, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !3287, file: !3288, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !3287, file: !3288, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !3287, file: !3288, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !3287, file: !3288, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !3287, file: !3288, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !3287, file: !3288, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !3287, file: !3288, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !3287, file: !3288, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !3287, file: !3288, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !3287, file: !3288, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !3287, file: !3288, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !3287, file: !3288, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !3287, file: !3288, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !3287, file: !3288, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !3287, file: !3288, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !3287, file: !3288, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !3287, file: !3288, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !3287, file: !3288, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !3287, file: !3288, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !3287, file: !3288, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !3287, file: !3288, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !3287, file: !3288, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !3287, file: !3288, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !3287, file: !3288, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !3287, file: !3288, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !3287, file: !3288, line: 450, baseType: !4283, size: 16, offset: 15792)
!4283 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !3288, line: 206, baseType: !183)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !3287, file: !3288, line: 451, baseType: !591, size: 32, offset: 15808)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !3287, file: !3288, line: 453, baseType: !4286, size: 512, offset: 15840)
!4286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 512, elements: !1985)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !3287, file: !3288, line: 454, baseType: !453, size: 64, offset: 16384)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !3287, file: !3288, line: 455, baseType: !3457, size: 64, offset: 16448)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !3287, file: !3288, line: 456, baseType: !165, size: 32, offset: 16512)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !3287, file: !3288, line: 457, baseType: !4291, size: 1088, offset: 16576)
!4291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3457, size: 1088, elements: !4243)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !3287, file: !3288, line: 458, baseType: !4291, size: 1088, offset: 17664)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !3287, file: !3288, line: 469, baseType: !3443, size: 64, offset: 18752)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !3287, file: !3288, line: 471, baseType: !4295, size: 64, offset: 18816)
!4295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4296, size: 64)
!4296 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !3288, line: 304, flags: DIFlagFwdDecl)
!4297 = !DIDerivedType(tag: DW_TAG_member, scope: !3287, file: !3288, line: 478, baseType: !4298, size: 64, offset: 18880)
!4298 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3287, file: !3288, line: 478, size: 64, elements: !4299)
!4299 = !{!4300, !4303}
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4298, file: !3288, line: 479, baseType: !4301, size: 64)
!4301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4302, size: 64)
!4302 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !3288, line: 305, flags: DIFlagFwdDecl)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4298, file: !3288, line: 480, baseType: !3286, size: 64)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !3287, file: !3288, line: 482, baseType: !181, size: 16, offset: 18944)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !3287, file: !3288, line: 483, baseType: !169, size: 8, offset: 18960)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !3287, file: !3288, line: 497, baseType: !181, size: 16, offset: 18976)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !3287, file: !3288, line: 498, baseType: !2373, size: 64, offset: 19008)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !3287, file: !3288, line: 499, baseType: !1190, size: 64, offset: 19072)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !3287, file: !3288, line: 500, baseType: !205, size: 64, offset: 19136)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !3287, file: !3288, line: 502, baseType: !212, size: 64, offset: 19200)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "gatt_table", scope: !3200, file: !6, line: 133, baseType: !1885, size: 64, offset: 448)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "gatt_table_real", scope: !3200, file: !6, line: 134, baseType: !1885, size: 64, offset: 512)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "scratch_page", scope: !3200, file: !6, line: 135, baseType: !212, size: 64, offset: 576)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "scratch_page_page", scope: !3200, file: !6, line: 136, baseType: !207, size: 64, offset: 640)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "scratch_page_dma", scope: !3200, file: !6, line: 137, baseType: !2957, size: 64, offset: 704)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "gart_bus_addr", scope: !3200, file: !6, line: 138, baseType: !212, size: 64, offset: 768)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "gatt_bus_addr", scope: !3200, file: !6, line: 139, baseType: !212, size: 64, offset: 832)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3200, file: !6, line: 140, baseType: !191, size: 32, offset: 896)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3200, file: !6, line: 141, baseType: !101, size: 32, offset: 928)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "key_list", scope: !3200, file: !6, line: 142, baseType: !4142, size: 64, offset: 960)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "current_memory_agp", scope: !3200, file: !6, line: 143, baseType: !591, size: 32, offset: 1024)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "agp_in_use", scope: !3200, file: !6, line: 144, baseType: !591, size: 32, offset: 1056)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "max_memory_agp", scope: !3200, file: !6, line: 145, baseType: !165, size: 32, offset: 1088)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "aperture_size_idx", scope: !3200, file: !6, line: 146, baseType: !165, size: 32, offset: 1120)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "capndx", scope: !3200, file: !6, line: 147, baseType: !165, size: 32, offset: 1152)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3200, file: !6, line: 148, baseType: !165, size: 32, offset: 1184)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "major_version", scope: !3200, file: !6, line: 149, baseType: !206, size: 8, offset: 1216)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "minor_version", scope: !3200, file: !6, line: 150, baseType: !206, size: 8, offset: 1224)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3200, file: !6, line: 151, baseType: !220, size: 128, offset: 1280)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "apbase_config", scope: !3200, file: !6, line: 152, baseType: !191, size: 32, offset: 1408)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "mapped_list", scope: !3200, file: !6, line: 154, baseType: !220, size: 128, offset: 1472)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "mapped_lock", scope: !3200, file: !6, line: 155, baseType: !320, offset: 1600)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3194, file: !102, line: 73, baseType: !2370, size: 64, offset: 192)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "page_count", scope: !3194, file: !102, line: 74, baseType: !1190, size: 64, offset: 256)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3194, file: !102, line: 75, baseType: !165, size: 32, offset: 320)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "num_scratch_pages", scope: !3194, file: !102, line: 76, baseType: !165, size: 32, offset: 352)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "pg_start", scope: !3194, file: !102, line: 77, baseType: !3256, size: 64, offset: 384)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3194, file: !102, line: 78, baseType: !191, size: 32, offset: 448)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "physical", scope: !3194, file: !102, line: 79, baseType: !191, size: 32, offset: 480)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "is_bound", scope: !3194, file: !102, line: 80, baseType: !400, size: 8, offset: 512)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "is_flushed", scope: !3194, file: !102, line: 81, baseType: !400, size: 8, offset: 520)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "mapped_list", scope: !3194, file: !102, line: 83, baseType: !220, size: 128, offset: 576)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "sg_list", scope: !3194, file: !102, line: 85, baseType: !4344, size: 64, offset: 704)
!4344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4345, size: 64)
!4345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4346, line: 11, size: 256, elements: !4347)
!4346 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4347 = !{!4348, !4349, !4350, !4351, !4352}
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4345, file: !4346, line: 12, baseType: !212, size: 64)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4345, file: !4346, line: 13, baseType: !7, size: 32, offset: 64)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4345, file: !4346, line: 14, baseType: !7, size: 32, offset: 96)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4345, file: !4346, line: 15, baseType: !2957, size: 64, offset: 128)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4345, file: !4346, line: 17, baseType: !7, size: 32, offset: 192)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "num_sg", scope: !3194, file: !102, line: 86, baseType: !165, size: 32, offset: 768)
!4354 = !DILocalVariable(name: "size", arg: 1, scope: !3190, file: !3, line: 90, type: !1190)
!4355 = !DILocation(line: 90, column: 34, scope: !3190)
!4356 = !DILocalVariable(name: "mem", arg: 2, scope: !3190, file: !3, line: 90, type: !3193)
!4357 = !DILocation(line: 90, column: 59, scope: !3190)
!4358 = !DILocation(line: 92, column: 24, scope: !3190)
!4359 = !DILocation(line: 92, column: 15, scope: !3190)
!4360 = !DILocation(line: 92, column: 2, scope: !3190)
!4361 = !DILocation(line: 92, column: 7, scope: !3190)
!4362 = !DILocation(line: 92, column: 13, scope: !3190)
!4363 = !DILocation(line: 93, column: 1, scope: !3190)
!4364 = distinct !DISubprogram(name: "kvmalloc", scope: !26, file: !26, line: 763, type: !4365, scopeLine: 764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4365 = !DISubroutineType(types: !4366)
!4366 = !{!160, !1190, !158}
!4367 = !DILocalVariable(name: "size", arg: 1, scope: !4364, file: !26, line: 763, type: !1190)
!4368 = !DILocation(line: 763, column: 37, scope: !4364)
!4369 = !DILocalVariable(name: "flags", arg: 2, scope: !4364, file: !26, line: 763, type: !158)
!4370 = !DILocation(line: 763, column: 49, scope: !4364)
!4371 = !DILocation(line: 765, column: 23, scope: !4364)
!4372 = !DILocation(line: 765, column: 29, scope: !4364)
!4373 = !DILocation(line: 765, column: 9, scope: !4364)
!4374 = !DILocation(line: 765, column: 2, scope: !4364)
!4375 = distinct !DISubprogram(name: "agp_create_memory", scope: !3, file: !3, line: 126, type: !4376, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!3193, !165}
!4378 = !DILocalVariable(name: "scratch_pages", arg: 1, scope: !4375, file: !3, line: 126, type: !165)
!4379 = !DILocation(line: 126, column: 42, scope: !4375)
!4380 = !DILocalVariable(name: "new", scope: !4375, file: !3, line: 128, type: !3193)
!4381 = !DILocation(line: 128, column: 21, scope: !4375)
!4382 = !DILocation(line: 130, column: 8, scope: !4375)
!4383 = !DILocation(line: 130, column: 6, scope: !4375)
!4384 = !DILocation(line: 131, column: 6, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 131, column: 6)
!4386 = !DILocation(line: 131, column: 10, scope: !4385)
!4387 = !DILocation(line: 131, column: 6, scope: !4375)
!4388 = !DILocation(line: 132, column: 3, scope: !4385)
!4389 = !DILocation(line: 134, column: 13, scope: !4375)
!4390 = !DILocation(line: 134, column: 2, scope: !4375)
!4391 = !DILocation(line: 134, column: 7, scope: !4375)
!4392 = !DILocation(line: 134, column: 11, scope: !4375)
!4393 = !DILocation(line: 136, column: 6, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 136, column: 6)
!4395 = !DILocation(line: 136, column: 11, scope: !4394)
!4396 = !DILocation(line: 136, column: 15, scope: !4394)
!4397 = !DILocation(line: 136, column: 6, scope: !4375)
!4398 = !DILocation(line: 137, column: 9, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 136, column: 20)
!4400 = !DILocation(line: 137, column: 3, scope: !4399)
!4401 = !DILocation(line: 138, column: 3, scope: !4399)
!4402 = !DILocation(line: 141, column: 35, scope: !4375)
!4403 = !DILocation(line: 141, column: 33, scope: !4375)
!4404 = !DILocation(line: 141, column: 50, scope: !4375)
!4405 = !DILocation(line: 141, column: 2, scope: !4375)
!4406 = !DILocation(line: 143, column: 6, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 143, column: 6)
!4408 = !DILocation(line: 143, column: 11, scope: !4407)
!4409 = !DILocation(line: 143, column: 17, scope: !4407)
!4410 = !DILocation(line: 143, column: 6, scope: !4375)
!4411 = !DILocation(line: 144, column: 16, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 143, column: 26)
!4413 = !DILocation(line: 144, column: 21, scope: !4412)
!4414 = !DILocation(line: 144, column: 3, scope: !4412)
!4415 = !DILocation(line: 145, column: 9, scope: !4412)
!4416 = !DILocation(line: 145, column: 3, scope: !4412)
!4417 = !DILocation(line: 146, column: 3, scope: !4412)
!4418 = !DILocation(line: 148, column: 27, scope: !4375)
!4419 = !DILocation(line: 148, column: 2, scope: !4375)
!4420 = !DILocation(line: 148, column: 7, scope: !4375)
!4421 = !DILocation(line: 148, column: 25, scope: !4375)
!4422 = !DILocation(line: 149, column: 2, scope: !4375)
!4423 = !DILocation(line: 149, column: 7, scope: !4375)
!4424 = !DILocation(line: 149, column: 12, scope: !4375)
!4425 = !DILocation(line: 150, column: 9, scope: !4375)
!4426 = !DILocation(line: 150, column: 2, scope: !4375)
!4427 = !DILocation(line: 151, column: 1, scope: !4375)
!4428 = distinct !DISubprogram(name: "kzalloc", scope: !112, file: !112, line: 662, type: !4365, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4429 = !DILocalVariable(name: "s", arg: 1, scope: !4430, file: !112, line: 445, type: !2207)
!4430 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !112, file: !112, line: 445, type: !4431, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{!160, !2207, !158, !1190}
!4433 = !DILocation(line: 445, column: 72, scope: !4430, inlinedAt: !4434)
!4434 = distinct !DILocation(line: 552, column: 10, scope: !4435, inlinedAt: !4438)
!4435 = distinct !DILexicalBlock(scope: !4436, file: !112, line: 540, column: 34)
!4436 = distinct !DILexicalBlock(scope: !4437, file: !112, line: 540, column: 6)
!4437 = distinct !DISubprogram(name: "kmalloc", scope: !112, file: !112, line: 538, type: !4365, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4438 = distinct !DILocation(line: 664, column: 9, scope: !4428)
!4439 = !DILocalVariable(name: "flags", arg: 2, scope: !4430, file: !112, line: 446, type: !158)
!4440 = !DILocation(line: 446, column: 9, scope: !4430, inlinedAt: !4434)
!4441 = !DILocalVariable(name: "size", arg: 3, scope: !4430, file: !112, line: 446, type: !1190)
!4442 = !DILocation(line: 446, column: 23, scope: !4430, inlinedAt: !4434)
!4443 = !DILocalVariable(name: "ret", scope: !4430, file: !112, line: 448, type: !160)
!4444 = !DILocation(line: 448, column: 8, scope: !4430, inlinedAt: !4434)
!4445 = !DILocalVariable(name: "flags", arg: 1, scope: !4446, file: !112, line: 318, type: !158)
!4446 = distinct !DISubprogram(name: "kmalloc_type", scope: !112, file: !112, line: 318, type: !4447, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4447 = !DISubroutineType(types: !4448)
!4448 = !{!111, !158}
!4449 = !DILocation(line: 318, column: 67, scope: !4446, inlinedAt: !4450)
!4450 = distinct !DILocation(line: 553, column: 20, scope: !4435, inlinedAt: !4438)
!4451 = !DILocalVariable(name: "size", arg: 1, scope: !4452, file: !112, line: 346, type: !1190)
!4452 = distinct !DISubprogram(name: "kmalloc_index", scope: !112, file: !112, line: 346, type: !4453, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4453 = !DISubroutineType(types: !4454)
!4454 = !{!7, !1190}
!4455 = !DILocation(line: 346, column: 58, scope: !4452, inlinedAt: !4456)
!4456 = distinct !DILocation(line: 547, column: 11, scope: !4435, inlinedAt: !4438)
!4457 = !DILocalVariable(name: "size", arg: 1, scope: !4458, file: !112, line: 472, type: !1190)
!4458 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !112, file: !112, line: 472, type: !4459, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4459 = !DISubroutineType(types: !4460)
!4460 = !{!160, !1190, !158, !7}
!4461 = !DILocation(line: 472, column: 28, scope: !4458, inlinedAt: !4462)
!4462 = distinct !DILocation(line: 481, column: 9, scope: !4463, inlinedAt: !4464)
!4463 = distinct !DISubprogram(name: "kmalloc_large", scope: !112, file: !112, line: 478, type: !4365, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4464 = distinct !DILocation(line: 545, column: 11, scope: !4465, inlinedAt: !4438)
!4465 = distinct !DILexicalBlock(scope: !4435, file: !112, line: 544, column: 7)
!4466 = !DILocalVariable(name: "flags", arg: 2, scope: !4458, file: !112, line: 472, type: !158)
!4467 = !DILocation(line: 472, column: 40, scope: !4458, inlinedAt: !4462)
!4468 = !DILocalVariable(name: "order", arg: 3, scope: !4458, file: !112, line: 472, type: !7)
!4469 = !DILocation(line: 472, column: 60, scope: !4458, inlinedAt: !4462)
!4470 = !DILocalVariable(name: "size", arg: 1, scope: !4463, file: !112, line: 478, type: !1190)
!4471 = !DILocation(line: 478, column: 51, scope: !4463, inlinedAt: !4464)
!4472 = !DILocalVariable(name: "flags", arg: 2, scope: !4463, file: !112, line: 478, type: !158)
!4473 = !DILocation(line: 478, column: 63, scope: !4463, inlinedAt: !4464)
!4474 = !DILocalVariable(name: "order", scope: !4463, file: !112, line: 480, type: !7)
!4475 = !DILocation(line: 480, column: 15, scope: !4463, inlinedAt: !4464)
!4476 = !DILocalVariable(name: "size", arg: 1, scope: !4437, file: !112, line: 538, type: !1190)
!4477 = !DILocation(line: 538, column: 45, scope: !4437, inlinedAt: !4438)
!4478 = !DILocalVariable(name: "flags", arg: 2, scope: !4437, file: !112, line: 538, type: !158)
!4479 = !DILocation(line: 538, column: 57, scope: !4437, inlinedAt: !4438)
!4480 = !DILocalVariable(name: "index", scope: !4435, file: !112, line: 542, type: !7)
!4481 = !DILocation(line: 542, column: 16, scope: !4435, inlinedAt: !4438)
!4482 = !DILocalVariable(name: "size", arg: 1, scope: !4428, file: !112, line: 662, type: !1190)
!4483 = !DILocation(line: 662, column: 36, scope: !4428)
!4484 = !DILocalVariable(name: "flags", arg: 2, scope: !4428, file: !112, line: 662, type: !158)
!4485 = !DILocation(line: 662, column: 48, scope: !4428)
!4486 = !DILocation(line: 664, column: 17, scope: !4428)
!4487 = !DILocation(line: 664, column: 23, scope: !4428)
!4488 = !DILocation(line: 664, column: 29, scope: !4428)
!4489 = !DILocation(line: 540, column: 27, scope: !4436, inlinedAt: !4438)
!4490 = !DILocation(line: 540, column: 6, scope: !4436, inlinedAt: !4438)
!4491 = !DILocation(line: 540, column: 6, scope: !4437, inlinedAt: !4438)
!4492 = !DILocation(line: 544, column: 7, scope: !4465, inlinedAt: !4438)
!4493 = !DILocation(line: 544, column: 12, scope: !4465, inlinedAt: !4438)
!4494 = !DILocation(line: 544, column: 7, scope: !4435, inlinedAt: !4438)
!4495 = !DILocation(line: 545, column: 25, scope: !4465, inlinedAt: !4438)
!4496 = !DILocation(line: 545, column: 31, scope: !4465, inlinedAt: !4438)
!4497 = !DILocation(line: 480, column: 33, scope: !4463, inlinedAt: !4464)
!4498 = !DILocation(line: 480, column: 23, scope: !4463, inlinedAt: !4464)
!4499 = !DILocation(line: 481, column: 29, scope: !4463, inlinedAt: !4464)
!4500 = !DILocation(line: 481, column: 35, scope: !4463, inlinedAt: !4464)
!4501 = !DILocation(line: 481, column: 42, scope: !4463, inlinedAt: !4464)
!4502 = !DILocation(line: 474, column: 23, scope: !4458, inlinedAt: !4462)
!4503 = !DILocation(line: 474, column: 29, scope: !4458, inlinedAt: !4462)
!4504 = !DILocation(line: 474, column: 36, scope: !4458, inlinedAt: !4462)
!4505 = !DILocation(line: 474, column: 9, scope: !4458, inlinedAt: !4462)
!4506 = !DILocation(line: 545, column: 4, scope: !4465, inlinedAt: !4438)
!4507 = !DILocation(line: 547, column: 25, scope: !4435, inlinedAt: !4438)
!4508 = !DILocation(line: 348, column: 7, scope: !4509, inlinedAt: !4456)
!4509 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 348, column: 6)
!4510 = !DILocation(line: 348, column: 6, scope: !4452, inlinedAt: !4456)
!4511 = !DILocation(line: 349, column: 3, scope: !4509, inlinedAt: !4456)
!4512 = !DILocation(line: 351, column: 6, scope: !4513, inlinedAt: !4456)
!4513 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 351, column: 6)
!4514 = !DILocation(line: 351, column: 11, scope: !4513, inlinedAt: !4456)
!4515 = !DILocation(line: 351, column: 6, scope: !4452, inlinedAt: !4456)
!4516 = !DILocation(line: 352, column: 3, scope: !4513, inlinedAt: !4456)
!4517 = !DILocation(line: 354, column: 32, scope: !4518, inlinedAt: !4456)
!4518 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 354, column: 6)
!4519 = !DILocation(line: 354, column: 37, scope: !4518, inlinedAt: !4456)
!4520 = !DILocation(line: 354, column: 42, scope: !4518, inlinedAt: !4456)
!4521 = !DILocation(line: 354, column: 45, scope: !4518, inlinedAt: !4456)
!4522 = !DILocation(line: 354, column: 50, scope: !4518, inlinedAt: !4456)
!4523 = !DILocation(line: 354, column: 6, scope: !4452, inlinedAt: !4456)
!4524 = !DILocation(line: 355, column: 3, scope: !4518, inlinedAt: !4456)
!4525 = !DILocation(line: 356, column: 32, scope: !4526, inlinedAt: !4456)
!4526 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 356, column: 6)
!4527 = !DILocation(line: 356, column: 37, scope: !4526, inlinedAt: !4456)
!4528 = !DILocation(line: 356, column: 43, scope: !4526, inlinedAt: !4456)
!4529 = !DILocation(line: 356, column: 46, scope: !4526, inlinedAt: !4456)
!4530 = !DILocation(line: 356, column: 51, scope: !4526, inlinedAt: !4456)
!4531 = !DILocation(line: 356, column: 6, scope: !4452, inlinedAt: !4456)
!4532 = !DILocation(line: 357, column: 3, scope: !4526, inlinedAt: !4456)
!4533 = !DILocation(line: 358, column: 6, scope: !4534, inlinedAt: !4456)
!4534 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 358, column: 6)
!4535 = !DILocation(line: 358, column: 11, scope: !4534, inlinedAt: !4456)
!4536 = !DILocation(line: 358, column: 6, scope: !4452, inlinedAt: !4456)
!4537 = !DILocation(line: 358, column: 26, scope: !4534, inlinedAt: !4456)
!4538 = !DILocation(line: 359, column: 6, scope: !4539, inlinedAt: !4456)
!4539 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 359, column: 6)
!4540 = !DILocation(line: 359, column: 11, scope: !4539, inlinedAt: !4456)
!4541 = !DILocation(line: 359, column: 6, scope: !4452, inlinedAt: !4456)
!4542 = !DILocation(line: 359, column: 26, scope: !4539, inlinedAt: !4456)
!4543 = !DILocation(line: 360, column: 6, scope: !4544, inlinedAt: !4456)
!4544 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 360, column: 6)
!4545 = !DILocation(line: 360, column: 11, scope: !4544, inlinedAt: !4456)
!4546 = !DILocation(line: 360, column: 6, scope: !4452, inlinedAt: !4456)
!4547 = !DILocation(line: 360, column: 26, scope: !4544, inlinedAt: !4456)
!4548 = !DILocation(line: 361, column: 6, scope: !4549, inlinedAt: !4456)
!4549 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 361, column: 6)
!4550 = !DILocation(line: 361, column: 11, scope: !4549, inlinedAt: !4456)
!4551 = !DILocation(line: 361, column: 6, scope: !4452, inlinedAt: !4456)
!4552 = !DILocation(line: 361, column: 26, scope: !4549, inlinedAt: !4456)
!4553 = !DILocation(line: 362, column: 6, scope: !4554, inlinedAt: !4456)
!4554 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 362, column: 6)
!4555 = !DILocation(line: 362, column: 11, scope: !4554, inlinedAt: !4456)
!4556 = !DILocation(line: 362, column: 6, scope: !4452, inlinedAt: !4456)
!4557 = !DILocation(line: 362, column: 26, scope: !4554, inlinedAt: !4456)
!4558 = !DILocation(line: 363, column: 6, scope: !4559, inlinedAt: !4456)
!4559 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 363, column: 6)
!4560 = !DILocation(line: 363, column: 11, scope: !4559, inlinedAt: !4456)
!4561 = !DILocation(line: 363, column: 6, scope: !4452, inlinedAt: !4456)
!4562 = !DILocation(line: 363, column: 26, scope: !4559, inlinedAt: !4456)
!4563 = !DILocation(line: 364, column: 6, scope: !4564, inlinedAt: !4456)
!4564 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 364, column: 6)
!4565 = !DILocation(line: 364, column: 11, scope: !4564, inlinedAt: !4456)
!4566 = !DILocation(line: 364, column: 6, scope: !4452, inlinedAt: !4456)
!4567 = !DILocation(line: 364, column: 26, scope: !4564, inlinedAt: !4456)
!4568 = !DILocation(line: 365, column: 6, scope: !4569, inlinedAt: !4456)
!4569 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 365, column: 6)
!4570 = !DILocation(line: 365, column: 11, scope: !4569, inlinedAt: !4456)
!4571 = !DILocation(line: 365, column: 6, scope: !4452, inlinedAt: !4456)
!4572 = !DILocation(line: 365, column: 26, scope: !4569, inlinedAt: !4456)
!4573 = !DILocation(line: 366, column: 6, scope: !4574, inlinedAt: !4456)
!4574 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 366, column: 6)
!4575 = !DILocation(line: 366, column: 11, scope: !4574, inlinedAt: !4456)
!4576 = !DILocation(line: 366, column: 6, scope: !4452, inlinedAt: !4456)
!4577 = !DILocation(line: 366, column: 26, scope: !4574, inlinedAt: !4456)
!4578 = !DILocation(line: 367, column: 6, scope: !4579, inlinedAt: !4456)
!4579 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 367, column: 6)
!4580 = !DILocation(line: 367, column: 11, scope: !4579, inlinedAt: !4456)
!4581 = !DILocation(line: 367, column: 6, scope: !4452, inlinedAt: !4456)
!4582 = !DILocation(line: 367, column: 26, scope: !4579, inlinedAt: !4456)
!4583 = !DILocation(line: 368, column: 6, scope: !4584, inlinedAt: !4456)
!4584 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 368, column: 6)
!4585 = !DILocation(line: 368, column: 11, scope: !4584, inlinedAt: !4456)
!4586 = !DILocation(line: 368, column: 6, scope: !4452, inlinedAt: !4456)
!4587 = !DILocation(line: 368, column: 26, scope: !4584, inlinedAt: !4456)
!4588 = !DILocation(line: 369, column: 6, scope: !4589, inlinedAt: !4456)
!4589 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 369, column: 6)
!4590 = !DILocation(line: 369, column: 11, scope: !4589, inlinedAt: !4456)
!4591 = !DILocation(line: 369, column: 6, scope: !4452, inlinedAt: !4456)
!4592 = !DILocation(line: 369, column: 26, scope: !4589, inlinedAt: !4456)
!4593 = !DILocation(line: 370, column: 6, scope: !4594, inlinedAt: !4456)
!4594 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 370, column: 6)
!4595 = !DILocation(line: 370, column: 11, scope: !4594, inlinedAt: !4456)
!4596 = !DILocation(line: 370, column: 6, scope: !4452, inlinedAt: !4456)
!4597 = !DILocation(line: 370, column: 26, scope: !4594, inlinedAt: !4456)
!4598 = !DILocation(line: 371, column: 6, scope: !4599, inlinedAt: !4456)
!4599 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 371, column: 6)
!4600 = !DILocation(line: 371, column: 11, scope: !4599, inlinedAt: !4456)
!4601 = !DILocation(line: 371, column: 6, scope: !4452, inlinedAt: !4456)
!4602 = !DILocation(line: 371, column: 26, scope: !4599, inlinedAt: !4456)
!4603 = !DILocation(line: 372, column: 6, scope: !4604, inlinedAt: !4456)
!4604 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 372, column: 6)
!4605 = !DILocation(line: 372, column: 11, scope: !4604, inlinedAt: !4456)
!4606 = !DILocation(line: 372, column: 6, scope: !4452, inlinedAt: !4456)
!4607 = !DILocation(line: 372, column: 26, scope: !4604, inlinedAt: !4456)
!4608 = !DILocation(line: 373, column: 6, scope: !4609, inlinedAt: !4456)
!4609 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 373, column: 6)
!4610 = !DILocation(line: 373, column: 11, scope: !4609, inlinedAt: !4456)
!4611 = !DILocation(line: 373, column: 6, scope: !4452, inlinedAt: !4456)
!4612 = !DILocation(line: 373, column: 26, scope: !4609, inlinedAt: !4456)
!4613 = !DILocation(line: 374, column: 6, scope: !4614, inlinedAt: !4456)
!4614 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 374, column: 6)
!4615 = !DILocation(line: 374, column: 11, scope: !4614, inlinedAt: !4456)
!4616 = !DILocation(line: 374, column: 6, scope: !4452, inlinedAt: !4456)
!4617 = !DILocation(line: 374, column: 26, scope: !4614, inlinedAt: !4456)
!4618 = !DILocation(line: 375, column: 6, scope: !4619, inlinedAt: !4456)
!4619 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 375, column: 6)
!4620 = !DILocation(line: 375, column: 11, scope: !4619, inlinedAt: !4456)
!4621 = !DILocation(line: 375, column: 6, scope: !4452, inlinedAt: !4456)
!4622 = !DILocation(line: 375, column: 27, scope: !4619, inlinedAt: !4456)
!4623 = !DILocation(line: 376, column: 6, scope: !4624, inlinedAt: !4456)
!4624 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 376, column: 6)
!4625 = !DILocation(line: 376, column: 11, scope: !4624, inlinedAt: !4456)
!4626 = !DILocation(line: 376, column: 6, scope: !4452, inlinedAt: !4456)
!4627 = !DILocation(line: 376, column: 32, scope: !4624, inlinedAt: !4456)
!4628 = !DILocation(line: 377, column: 6, scope: !4629, inlinedAt: !4456)
!4629 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 377, column: 6)
!4630 = !DILocation(line: 377, column: 11, scope: !4629, inlinedAt: !4456)
!4631 = !DILocation(line: 377, column: 6, scope: !4452, inlinedAt: !4456)
!4632 = !DILocation(line: 377, column: 32, scope: !4629, inlinedAt: !4456)
!4633 = !DILocation(line: 378, column: 6, scope: !4634, inlinedAt: !4456)
!4634 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 378, column: 6)
!4635 = !DILocation(line: 378, column: 11, scope: !4634, inlinedAt: !4456)
!4636 = !DILocation(line: 378, column: 6, scope: !4452, inlinedAt: !4456)
!4637 = !DILocation(line: 378, column: 32, scope: !4634, inlinedAt: !4456)
!4638 = !DILocation(line: 379, column: 6, scope: !4639, inlinedAt: !4456)
!4639 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 379, column: 6)
!4640 = !DILocation(line: 379, column: 11, scope: !4639, inlinedAt: !4456)
!4641 = !DILocation(line: 379, column: 6, scope: !4452, inlinedAt: !4456)
!4642 = !DILocation(line: 379, column: 33, scope: !4639, inlinedAt: !4456)
!4643 = !DILocation(line: 380, column: 6, scope: !4644, inlinedAt: !4456)
!4644 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 380, column: 6)
!4645 = !DILocation(line: 380, column: 11, scope: !4644, inlinedAt: !4456)
!4646 = !DILocation(line: 380, column: 6, scope: !4452, inlinedAt: !4456)
!4647 = !DILocation(line: 380, column: 33, scope: !4644, inlinedAt: !4456)
!4648 = !DILocation(line: 381, column: 6, scope: !4649, inlinedAt: !4456)
!4649 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 381, column: 6)
!4650 = !DILocation(line: 381, column: 11, scope: !4649, inlinedAt: !4456)
!4651 = !DILocation(line: 381, column: 6, scope: !4452, inlinedAt: !4456)
!4652 = !DILocation(line: 381, column: 33, scope: !4649, inlinedAt: !4456)
!4653 = !DILocation(line: 382, column: 2, scope: !4654, inlinedAt: !4456)
!4654 = distinct !DILexicalBlock(scope: !4655, file: !112, line: 382, column: 2)
!4655 = distinct !DILexicalBlock(scope: !4452, file: !112, line: 382, column: 2)
!4656 = !{i32 -2143243569, i32 -2143243540, i32 -2143243494, i32 -2143243436, i32 -2143243382, i32 -2143243328, i32 -2143243273, i32 -2143243242}
!4657 = !DILocation(line: 382, column: 2, scope: !4658, inlinedAt: !4456)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !112, line: 382, column: 2)
!4659 = distinct !DILexicalBlock(scope: !4655, file: !112, line: 382, column: 2)
!4660 = !{i32 -2143242799, i32 -2143242792, i32 -2143242738, i32 -2143242707, i32 -2143242677}
!4661 = !DILocation(line: 382, column: 2, scope: !4659, inlinedAt: !4456)
!4662 = !DILocation(line: 386, column: 1, scope: !4452, inlinedAt: !4456)
!4663 = !DILocation(line: 547, column: 9, scope: !4435, inlinedAt: !4438)
!4664 = !DILocation(line: 549, column: 8, scope: !4665, inlinedAt: !4438)
!4665 = distinct !DILexicalBlock(scope: !4435, file: !112, line: 549, column: 7)
!4666 = !DILocation(line: 549, column: 7, scope: !4435, inlinedAt: !4438)
!4667 = !DILocation(line: 550, column: 4, scope: !4665, inlinedAt: !4438)
!4668 = !DILocation(line: 553, column: 33, scope: !4435, inlinedAt: !4438)
!4669 = !DILocation(line: 325, column: 6, scope: !4670, inlinedAt: !4450)
!4670 = distinct !DILexicalBlock(scope: !4446, file: !112, line: 325, column: 6)
!4671 = !DILocation(line: 325, column: 6, scope: !4446, inlinedAt: !4450)
!4672 = !DILocation(line: 326, column: 3, scope: !4670, inlinedAt: !4450)
!4673 = !DILocation(line: 332, column: 9, scope: !4446, inlinedAt: !4450)
!4674 = !DILocation(line: 332, column: 15, scope: !4446, inlinedAt: !4450)
!4675 = !DILocation(line: 332, column: 2, scope: !4446, inlinedAt: !4450)
!4676 = !DILocation(line: 336, column: 1, scope: !4446, inlinedAt: !4450)
!4677 = !DILocation(line: 553, column: 5, scope: !4435, inlinedAt: !4438)
!4678 = !DILocation(line: 553, column: 41, scope: !4435, inlinedAt: !4438)
!4679 = !DILocation(line: 554, column: 5, scope: !4435, inlinedAt: !4438)
!4680 = !DILocation(line: 554, column: 12, scope: !4435, inlinedAt: !4438)
!4681 = !DILocation(line: 448, column: 31, scope: !4430, inlinedAt: !4434)
!4682 = !DILocation(line: 448, column: 34, scope: !4430, inlinedAt: !4434)
!4683 = !DILocation(line: 448, column: 14, scope: !4430, inlinedAt: !4434)
!4684 = !DILocation(line: 450, column: 22, scope: !4430, inlinedAt: !4434)
!4685 = !DILocation(line: 450, column: 25, scope: !4430, inlinedAt: !4434)
!4686 = !DILocation(line: 450, column: 30, scope: !4430, inlinedAt: !4434)
!4687 = !DILocation(line: 450, column: 36, scope: !4430, inlinedAt: !4434)
!4688 = !DILocation(line: 450, column: 8, scope: !4430, inlinedAt: !4434)
!4689 = !DILocation(line: 450, column: 6, scope: !4430, inlinedAt: !4434)
!4690 = !DILocation(line: 451, column: 9, scope: !4430, inlinedAt: !4434)
!4691 = !DILocation(line: 552, column: 3, scope: !4435, inlinedAt: !4438)
!4692 = !DILocation(line: 557, column: 19, scope: !4437, inlinedAt: !4438)
!4693 = !DILocation(line: 557, column: 25, scope: !4437, inlinedAt: !4438)
!4694 = !DILocation(line: 557, column: 9, scope: !4437, inlinedAt: !4438)
!4695 = !DILocation(line: 557, column: 2, scope: !4437, inlinedAt: !4438)
!4696 = !DILocation(line: 558, column: 1, scope: !4437, inlinedAt: !4438)
!4697 = !DILocation(line: 664, column: 2, scope: !4428)
!4698 = distinct !DISubprogram(name: "agp_get_key", scope: !3, file: !3, line: 72, type: !3229, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4699 = !DILocalVariable(name: "bit", scope: !4698, file: !3, line: 74, type: !165)
!4700 = !DILocation(line: 74, column: 6, scope: !4698)
!4701 = !DILocation(line: 76, column: 28, scope: !4698)
!4702 = !DILocation(line: 76, column: 40, scope: !4698)
!4703 = !DILocation(line: 76, column: 8, scope: !4698)
!4704 = !DILocation(line: 76, column: 6, scope: !4698)
!4705 = !DILocation(line: 77, column: 6, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4698, file: !3, line: 77, column: 6)
!4707 = !DILocation(line: 77, column: 10, scope: !4706)
!4708 = !DILocation(line: 77, column: 6, scope: !4698)
!4709 = !DILocation(line: 78, column: 11, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 77, column: 20)
!4711 = !DILocation(line: 78, column: 16, scope: !4710)
!4712 = !DILocation(line: 78, column: 28, scope: !4710)
!4713 = !DILocation(line: 78, column: 3, scope: !4710)
!4714 = !DILocation(line: 79, column: 10, scope: !4710)
!4715 = !DILocation(line: 79, column: 3, scope: !4710)
!4716 = !DILocation(line: 81, column: 2, scope: !4698)
!4717 = !DILocation(line: 82, column: 1, scope: !4698)
!4718 = distinct !DISubprogram(name: "agp_free_memory", scope: !3, file: !3, line: 162, type: !3240, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4719 = !DILocalVariable(name: "curr", arg: 1, scope: !4718, file: !3, line: 162, type: !3193)
!4720 = !DILocation(line: 162, column: 41, scope: !4718)
!4721 = !DILocalVariable(name: "i", scope: !4718, file: !3, line: 164, type: !1190)
!4722 = !DILocation(line: 164, column: 9, scope: !4718)
!4723 = !DILocation(line: 166, column: 6, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 166, column: 6)
!4725 = !DILocation(line: 166, column: 11, scope: !4724)
!4726 = !DILocation(line: 166, column: 6, scope: !4718)
!4727 = !DILocation(line: 167, column: 3, scope: !4724)
!4728 = !DILocation(line: 169, column: 6, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 169, column: 6)
!4730 = !DILocation(line: 169, column: 12, scope: !4729)
!4731 = !DILocation(line: 169, column: 6, scope: !4718)
!4732 = !DILocation(line: 170, column: 21, scope: !4729)
!4733 = !DILocation(line: 170, column: 3, scope: !4729)
!4734 = !DILocation(line: 172, column: 6, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 172, column: 6)
!4736 = !DILocation(line: 172, column: 12, scope: !4735)
!4737 = !DILocation(line: 172, column: 17, scope: !4735)
!4738 = !DILocation(line: 172, column: 6, scope: !4718)
!4739 = !DILocation(line: 173, column: 28, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 172, column: 36)
!4741 = !DILocation(line: 173, column: 3, scope: !4740)
!4742 = !DILocation(line: 174, column: 3, scope: !4740)
!4743 = !DILocation(line: 177, column: 6, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 177, column: 6)
!4745 = !DILocation(line: 177, column: 12, scope: !4744)
!4746 = !DILocation(line: 177, column: 17, scope: !4744)
!4747 = !DILocation(line: 177, column: 6, scope: !4718)
!4748 = !DILocation(line: 178, column: 3, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 177, column: 23)
!4750 = !DILocation(line: 178, column: 9, scope: !4749)
!4751 = !DILocation(line: 178, column: 17, scope: !4749)
!4752 = !DILocation(line: 178, column: 25, scope: !4749)
!4753 = !DILocation(line: 178, column: 38, scope: !4749)
!4754 = !DILocation(line: 179, column: 3, scope: !4749)
!4755 = !DILocation(line: 181, column: 6, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 181, column: 6)
!4757 = !DILocation(line: 181, column: 12, scope: !4756)
!4758 = !DILocation(line: 181, column: 23, scope: !4756)
!4759 = !DILocation(line: 181, column: 6, scope: !4718)
!4760 = !DILocation(line: 182, column: 7, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 182, column: 7)
!4762 = distinct !DILexicalBlock(scope: !4756, file: !3, line: 181, column: 29)
!4763 = !DILocation(line: 182, column: 13, scope: !4761)
!4764 = !DILocation(line: 182, column: 21, scope: !4761)
!4765 = !DILocation(line: 182, column: 29, scope: !4761)
!4766 = !DILocation(line: 182, column: 7, scope: !4762)
!4767 = !DILocation(line: 183, column: 4, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 182, column: 48)
!4769 = !DILocation(line: 183, column: 10, scope: !4768)
!4770 = !DILocation(line: 183, column: 18, scope: !4768)
!4771 = !DILocation(line: 183, column: 26, scope: !4768)
!4772 = !DILocation(line: 183, column: 44, scope: !4768)
!4773 = !DILocation(line: 184, column: 3, scope: !4768)
!4774 = !DILocation(line: 186, column: 11, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 186, column: 4)
!4776 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 184, column: 10)
!4777 = !DILocation(line: 186, column: 9, scope: !4775)
!4778 = !DILocation(line: 186, column: 16, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4775, file: !3, line: 186, column: 4)
!4780 = !DILocation(line: 186, column: 20, scope: !4779)
!4781 = !DILocation(line: 186, column: 26, scope: !4779)
!4782 = !DILocation(line: 186, column: 18, scope: !4779)
!4783 = !DILocation(line: 186, column: 4, scope: !4775)
!4784 = !DILocation(line: 187, column: 5, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 186, column: 43)
!4786 = !DILocation(line: 187, column: 11, scope: !4785)
!4787 = !DILocation(line: 187, column: 19, scope: !4785)
!4788 = !DILocation(line: 187, column: 27, scope: !4785)
!4789 = !DILocation(line: 188, column: 6, scope: !4785)
!4790 = !DILocation(line: 188, column: 12, scope: !4785)
!4791 = !DILocation(line: 188, column: 18, scope: !4785)
!4792 = !DILocation(line: 190, column: 4, scope: !4785)
!4793 = !DILocation(line: 186, column: 39, scope: !4779)
!4794 = !DILocation(line: 186, column: 4, scope: !4779)
!4795 = distinct !{!4795, !4783, !4796}
!4796 = !DILocation(line: 190, column: 4, scope: !4775)
!4797 = !DILocation(line: 191, column: 11, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 191, column: 4)
!4799 = !DILocation(line: 191, column: 9, scope: !4798)
!4800 = !DILocation(line: 191, column: 16, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4798, file: !3, line: 191, column: 4)
!4802 = !DILocation(line: 191, column: 20, scope: !4801)
!4803 = !DILocation(line: 191, column: 26, scope: !4801)
!4804 = !DILocation(line: 191, column: 18, scope: !4801)
!4805 = !DILocation(line: 191, column: 4, scope: !4798)
!4806 = !DILocation(line: 192, column: 5, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4801, file: !3, line: 191, column: 43)
!4808 = !DILocation(line: 192, column: 11, scope: !4807)
!4809 = !DILocation(line: 192, column: 19, scope: !4807)
!4810 = !DILocation(line: 192, column: 27, scope: !4807)
!4811 = !DILocation(line: 193, column: 6, scope: !4807)
!4812 = !DILocation(line: 193, column: 12, scope: !4807)
!4813 = !DILocation(line: 193, column: 18, scope: !4807)
!4814 = !DILocation(line: 195, column: 4, scope: !4807)
!4815 = !DILocation(line: 191, column: 39, scope: !4801)
!4816 = !DILocation(line: 191, column: 4, scope: !4801)
!4817 = distinct !{!4817, !4805, !4818}
!4818 = !DILocation(line: 195, column: 4, scope: !4798)
!4819 = !DILocation(line: 197, column: 2, scope: !4762)
!4820 = !DILocation(line: 198, column: 15, scope: !4718)
!4821 = !DILocation(line: 198, column: 21, scope: !4718)
!4822 = !DILocation(line: 198, column: 2, scope: !4718)
!4823 = !DILocation(line: 199, column: 22, scope: !4718)
!4824 = !DILocation(line: 199, column: 2, scope: !4718)
!4825 = !DILocation(line: 200, column: 8, scope: !4718)
!4826 = !DILocation(line: 200, column: 2, scope: !4718)
!4827 = !DILocation(line: 201, column: 1, scope: !4718)
!4828 = distinct !DISubprogram(name: "agp_unbind_memory", scope: !3, file: !3, line: 448, type: !4829, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4829 = !DISubroutineType(types: !4830)
!4830 = !{!165, !3193}
!4831 = !DILocalVariable(name: "lock", arg: 1, scope: !4832, file: !4833, line: 392, type: !1127)
!4832 = distinct !DISubprogram(name: "spin_unlock", scope: !4833, file: !4833, line: 392, type: !4834, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4833 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!4834 = !DISubroutineType(types: !4835)
!4835 = !{null, !1127}
!4836 = !DILocation(line: 392, column: 53, scope: !4832, inlinedAt: !4837)
!4837 = distinct !DILocation(line: 469, column: 2, scope: !4828)
!4838 = !DILocalVariable(name: "lock", arg: 1, scope: !4839, file: !4833, line: 352, type: !1127)
!4839 = distinct !DISubprogram(name: "spin_lock", scope: !4833, file: !4833, line: 352, type: !4834, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4840 = !DILocation(line: 352, column: 51, scope: !4839, inlinedAt: !4841)
!4841 = distinct !DILocation(line: 467, column: 2, scope: !4828)
!4842 = !DILocalVariable(name: "curr", arg: 1, scope: !4828, file: !3, line: 448, type: !3193)
!4843 = !DILocation(line: 448, column: 42, scope: !4828)
!4844 = !DILocalVariable(name: "ret_val", scope: !4828, file: !3, line: 450, type: !165)
!4845 = !DILocation(line: 450, column: 6, scope: !4828)
!4846 = !DILocation(line: 452, column: 6, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 452, column: 6)
!4848 = !DILocation(line: 452, column: 11, scope: !4847)
!4849 = !DILocation(line: 452, column: 6, scope: !4828)
!4850 = !DILocation(line: 453, column: 3, scope: !4847)
!4851 = !DILocation(line: 455, column: 7, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 455, column: 6)
!4853 = !DILocation(line: 455, column: 13, scope: !4852)
!4854 = !DILocation(line: 455, column: 6, scope: !4828)
!4855 = !DILocation(line: 456, column: 54, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4852, file: !3, line: 455, column: 23)
!4857 = !DILocation(line: 456, column: 3, scope: !4856)
!4858 = !DILocation(line: 457, column: 3, scope: !4856)
!4859 = !DILocation(line: 460, column: 12, scope: !4828)
!4860 = !DILocation(line: 460, column: 18, scope: !4828)
!4861 = !DILocation(line: 460, column: 26, scope: !4828)
!4862 = !DILocation(line: 460, column: 34, scope: !4828)
!4863 = !DILocation(line: 460, column: 48, scope: !4828)
!4864 = !DILocation(line: 460, column: 54, scope: !4828)
!4865 = !DILocation(line: 460, column: 60, scope: !4828)
!4866 = !DILocation(line: 460, column: 70, scope: !4828)
!4867 = !DILocation(line: 460, column: 76, scope: !4828)
!4868 = !DILocation(line: 460, column: 10, scope: !4828)
!4869 = !DILocation(line: 462, column: 6, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 462, column: 6)
!4871 = !DILocation(line: 462, column: 14, scope: !4870)
!4872 = !DILocation(line: 462, column: 6, scope: !4828)
!4873 = !DILocation(line: 463, column: 10, scope: !4870)
!4874 = !DILocation(line: 463, column: 3, scope: !4870)
!4875 = !DILocation(line: 465, column: 2, scope: !4828)
!4876 = !DILocation(line: 465, column: 8, scope: !4828)
!4877 = !DILocation(line: 465, column: 17, scope: !4828)
!4878 = !DILocation(line: 466, column: 2, scope: !4828)
!4879 = !DILocation(line: 466, column: 8, scope: !4828)
!4880 = !DILocation(line: 466, column: 17, scope: !4828)
!4881 = !DILocation(line: 467, column: 13, scope: !4828)
!4882 = !DILocation(line: 467, column: 19, scope: !4828)
!4883 = !DILocation(line: 467, column: 27, scope: !4828)
!4884 = !DILocation(line: 354, column: 2, scope: !4885, inlinedAt: !4841)
!4885 = distinct !DILexicalBlock(scope: !4839, file: !4833, line: 354, column: 2)
!4886 = !{i32 -2145445420}
!4887 = !DILocation(line: 354, column: 2, scope: !4888, inlinedAt: !4841)
!4888 = distinct !DILexicalBlock(scope: !4885, file: !4833, line: 354, column: 2)
!4889 = !DILocation(line: 468, column: 12, scope: !4828)
!4890 = !DILocation(line: 468, column: 18, scope: !4828)
!4891 = !DILocation(line: 468, column: 2, scope: !4828)
!4892 = !DILocation(line: 469, column: 15, scope: !4828)
!4893 = !DILocation(line: 469, column: 21, scope: !4828)
!4894 = !DILocation(line: 469, column: 29, scope: !4828)
!4895 = !DILocation(line: 394, column: 2, scope: !4896, inlinedAt: !4837)
!4896 = distinct !DILexicalBlock(scope: !4832, file: !4833, line: 394, column: 2)
!4897 = !{i32 -2145443059}
!4898 = !DILocation(line: 394, column: 2, scope: !4899, inlinedAt: !4837)
!4899 = distinct !DILexicalBlock(scope: !4896, file: !4833, line: 394, column: 2)
!4900 = !DILocation(line: 470, column: 2, scope: !4828)
!4901 = !DILocation(line: 471, column: 1, scope: !4828)
!4902 = distinct !DISubprogram(name: "agp_generic_free_by_type", scope: !3, file: !3, line: 1151, type: !3240, scopeLine: 1152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4903 = !DILocalVariable(name: "curr", arg: 1, scope: !4902, file: !3, line: 1151, type: !3193)
!4904 = !DILocation(line: 1151, column: 50, scope: !4902)
!4905 = !DILocation(line: 1153, column: 22, scope: !4902)
!4906 = !DILocation(line: 1153, column: 2, scope: !4902)
!4907 = !DILocation(line: 1154, column: 15, scope: !4902)
!4908 = !DILocation(line: 1154, column: 21, scope: !4902)
!4909 = !DILocation(line: 1154, column: 2, scope: !4902)
!4910 = !DILocation(line: 1155, column: 8, scope: !4902)
!4911 = !DILocation(line: 1155, column: 2, scope: !4902)
!4912 = !DILocation(line: 1156, column: 1, scope: !4902)
!4913 = distinct !DISubprogram(name: "agp_free_page_array", scope: !6, file: !6, line: 222, type: !3240, scopeLine: 223, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4914 = !DILocalVariable(name: "mem", arg: 1, scope: !4913, file: !6, line: 222, type: !3193)
!4915 = !DILocation(line: 222, column: 59, scope: !4913)
!4916 = !DILocation(line: 224, column: 9, scope: !4913)
!4917 = !DILocation(line: 224, column: 14, scope: !4913)
!4918 = !DILocation(line: 224, column: 2, scope: !4913)
!4919 = !DILocation(line: 225, column: 1, scope: !4913)
!4920 = distinct !DISubprogram(name: "agp_allocate_memory", scope: !3, file: !3, line: 218, type: !4921, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4921 = !DISubroutineType(types: !4922)
!4922 = !{!3193, !3199, !1190, !191}
!4923 = !DILocalVariable(name: "v", arg: 1, scope: !4924, file: !4925, line: 23, type: !4928)
!4924 = distinct !DISubprogram(name: "arch_atomic_read", scope: !4925, file: !4925, line: 23, type: !4926, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4925 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!4926 = !DISubroutineType(types: !4927)
!4927 = !{!165, !4928}
!4928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4929, size: 64)
!4929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !591)
!4930 = !DILocation(line: 23, column: 61, scope: !4924, inlinedAt: !4931)
!4931 = distinct !DILocation(line: 28, column: 9, scope: !4932, inlinedAt: !4934)
!4932 = distinct !DISubprogram(name: "atomic_read", scope: !4933, file: !4933, line: 25, type: !4926, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4933 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!4934 = distinct !DILocation(line: 229, column: 15, scope: !4920)
!4935 = !DILocalVariable(name: "v", arg: 1, scope: !4936, file: !3150, line: 69, type: !3153)
!4936 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !3150, file: !3150, line: 69, type: !3151, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!4937 = !DILocation(line: 69, column: 73, scope: !4936, inlinedAt: !4938)
!4938 = distinct !DILocation(line: 27, column: 2, scope: !4932, inlinedAt: !4934)
!4939 = !DILocalVariable(name: "size", arg: 2, scope: !4936, file: !3150, line: 69, type: !1190)
!4940 = !DILocation(line: 69, column: 83, scope: !4936, inlinedAt: !4938)
!4941 = !DILocalVariable(name: "v", arg: 1, scope: !4932, file: !4933, line: 25, type: !4928)
!4942 = !DILocation(line: 25, column: 29, scope: !4932, inlinedAt: !4934)
!4943 = !DILocalVariable(name: "bridge", arg: 1, scope: !4920, file: !3, line: 218, type: !3199)
!4944 = !DILocation(line: 218, column: 64, scope: !4920)
!4945 = !DILocalVariable(name: "page_count", arg: 2, scope: !4920, file: !3, line: 219, type: !1190)
!4946 = !DILocation(line: 219, column: 13, scope: !4920)
!4947 = !DILocalVariable(name: "type", arg: 3, scope: !4920, file: !3, line: 219, type: !191)
!4948 = !DILocation(line: 219, column: 29, scope: !4920)
!4949 = !DILocalVariable(name: "scratch_pages", scope: !4920, file: !3, line: 221, type: !165)
!4950 = !DILocation(line: 221, column: 6, scope: !4920)
!4951 = !DILocalVariable(name: "new", scope: !4920, file: !3, line: 222, type: !3193)
!4952 = !DILocation(line: 222, column: 21, scope: !4920)
!4953 = !DILocalVariable(name: "i", scope: !4920, file: !3, line: 223, type: !1190)
!4954 = !DILocation(line: 223, column: 9, scope: !4920)
!4955 = !DILocalVariable(name: "cur_memory", scope: !4920, file: !3, line: 224, type: !165)
!4956 = !DILocation(line: 224, column: 6, scope: !4920)
!4957 = !DILocation(line: 226, column: 7, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 226, column: 6)
!4959 = !DILocation(line: 226, column: 6, scope: !4920)
!4960 = !DILocation(line: 227, column: 3, scope: !4958)
!4961 = !DILocation(line: 229, column: 28, scope: !4920)
!4962 = !DILocation(line: 229, column: 36, scope: !4920)
!4963 = !DILocation(line: 27, column: 25, scope: !4932, inlinedAt: !4934)
!4964 = !DILocation(line: 71, column: 19, scope: !4936, inlinedAt: !4938)
!4965 = !DILocation(line: 71, column: 22, scope: !4936, inlinedAt: !4938)
!4966 = !DILocation(line: 71, column: 2, scope: !4936, inlinedAt: !4938)
!4967 = !DILocation(line: 72, column: 2, scope: !4936, inlinedAt: !4938)
!4968 = !DILocation(line: 28, column: 26, scope: !4932, inlinedAt: !4934)
!4969 = !DILocation(line: 29, column: 9, scope: !4924, inlinedAt: !4931)
!4970 = !DILocation(line: 229, column: 13, scope: !4920)
!4971 = !DILocation(line: 230, column: 7, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 230, column: 6)
!4973 = !DILocation(line: 230, column: 20, scope: !4972)
!4974 = !DILocation(line: 230, column: 18, scope: !4972)
!4975 = !DILocation(line: 230, column: 33, scope: !4972)
!4976 = !DILocation(line: 230, column: 41, scope: !4972)
!4977 = !DILocation(line: 230, column: 31, scope: !4972)
!4978 = !DILocation(line: 230, column: 57, scope: !4972)
!4979 = !DILocation(line: 231, column: 7, scope: !4972)
!4980 = !DILocation(line: 231, column: 20, scope: !4972)
!4981 = !DILocation(line: 231, column: 18, scope: !4972)
!4982 = !DILocation(line: 231, column: 33, scope: !4972)
!4983 = !DILocation(line: 231, column: 31, scope: !4972)
!4984 = !DILocation(line: 230, column: 6, scope: !4920)
!4985 = !DILocation(line: 232, column: 3, scope: !4972)
!4986 = !DILocation(line: 234, column: 6, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 234, column: 6)
!4988 = !DILocation(line: 234, column: 11, scope: !4987)
!4989 = !DILocation(line: 234, column: 6, scope: !4920)
!4990 = !DILocation(line: 235, column: 32, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 234, column: 30)
!4992 = !DILocation(line: 235, column: 44, scope: !4991)
!4993 = !DILocation(line: 235, column: 9, scope: !4991)
!4994 = !DILocation(line: 235, column: 7, scope: !4991)
!4995 = !DILocation(line: 236, column: 7, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 236, column: 7)
!4997 = !DILocation(line: 236, column: 7, scope: !4991)
!4998 = !DILocation(line: 237, column: 18, scope: !4996)
!4999 = !DILocation(line: 237, column: 4, scope: !4996)
!5000 = !DILocation(line: 237, column: 9, scope: !4996)
!5001 = !DILocation(line: 237, column: 16, scope: !4996)
!5002 = !DILocation(line: 238, column: 10, scope: !4991)
!5003 = !DILocation(line: 238, column: 3, scope: !4991)
!5004 = !DILocation(line: 241, column: 6, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 241, column: 6)
!5006 = !DILocation(line: 241, column: 11, scope: !5005)
!5007 = !DILocation(line: 241, column: 6, scope: !4920)
!5008 = !DILocation(line: 242, column: 9, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 241, column: 17)
!5010 = !DILocation(line: 242, column: 17, scope: !5009)
!5011 = !DILocation(line: 242, column: 25, scope: !5009)
!5012 = !DILocation(line: 242, column: 39, scope: !5009)
!5013 = !DILocation(line: 242, column: 51, scope: !5009)
!5014 = !DILocation(line: 242, column: 7, scope: !5009)
!5015 = !DILocation(line: 243, column: 7, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 243, column: 7)
!5017 = !DILocation(line: 243, column: 7, scope: !5009)
!5018 = !DILocation(line: 244, column: 18, scope: !5016)
!5019 = !DILocation(line: 244, column: 4, scope: !5016)
!5020 = !DILocation(line: 244, column: 9, scope: !5016)
!5021 = !DILocation(line: 244, column: 16, scope: !5016)
!5022 = !DILocation(line: 245, column: 10, scope: !5009)
!5023 = !DILocation(line: 245, column: 3, scope: !5009)
!5024 = !DILocation(line: 248, column: 19, scope: !4920)
!5025 = !DILocation(line: 248, column: 30, scope: !4920)
!5026 = !DILocation(line: 248, column: 49, scope: !4920)
!5027 = !DILocation(line: 248, column: 54, scope: !4920)
!5028 = !DILocation(line: 248, column: 18, scope: !4920)
!5029 = !DILocation(line: 248, column: 16, scope: !4920)
!5030 = !DILocation(line: 250, column: 26, scope: !4920)
!5031 = !DILocation(line: 250, column: 8, scope: !4920)
!5032 = !DILocation(line: 250, column: 6, scope: !4920)
!5033 = !DILocation(line: 252, column: 6, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 252, column: 6)
!5035 = !DILocation(line: 252, column: 10, scope: !5034)
!5036 = !DILocation(line: 252, column: 6, scope: !4920)
!5037 = !DILocation(line: 253, column: 3, scope: !5034)
!5038 = !DILocation(line: 255, column: 6, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 255, column: 6)
!5040 = !DILocation(line: 255, column: 14, scope: !5039)
!5041 = !DILocation(line: 255, column: 22, scope: !5039)
!5042 = !DILocation(line: 255, column: 6, scope: !4920)
!5043 = !DILocation(line: 256, column: 7, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 256, column: 7)
!5045 = distinct !DILexicalBlock(scope: !5039, file: !3, line: 255, column: 39)
!5046 = !DILocation(line: 256, column: 15, scope: !5044)
!5047 = !DILocation(line: 256, column: 23, scope: !5044)
!5048 = !DILocation(line: 256, column: 39, scope: !5044)
!5049 = !DILocation(line: 256, column: 47, scope: !5044)
!5050 = !DILocation(line: 256, column: 52, scope: !5044)
!5051 = !DILocation(line: 256, column: 7, scope: !5045)
!5052 = !DILocation(line: 257, column: 20, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5044, file: !3, line: 256, column: 65)
!5054 = !DILocation(line: 257, column: 4, scope: !5053)
!5055 = !DILocation(line: 258, column: 4, scope: !5053)
!5056 = !DILocation(line: 260, column: 17, scope: !5045)
!5057 = !DILocation(line: 260, column: 3, scope: !5045)
!5058 = !DILocation(line: 260, column: 8, scope: !5045)
!5059 = !DILocation(line: 260, column: 15, scope: !5045)
!5060 = !DILocation(line: 261, column: 10, scope: !5045)
!5061 = !DILocation(line: 261, column: 3, scope: !5045)
!5062 = !DILocation(line: 264, column: 9, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 264, column: 2)
!5064 = !DILocation(line: 264, column: 7, scope: !5063)
!5065 = !DILocation(line: 264, column: 14, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 264, column: 2)
!5067 = !DILocation(line: 264, column: 18, scope: !5066)
!5068 = !DILocation(line: 264, column: 16, scope: !5066)
!5069 = !DILocation(line: 264, column: 2, scope: !5063)
!5070 = !DILocalVariable(name: "page", scope: !5071, file: !3, line: 265, type: !207)
!5071 = distinct !DILexicalBlock(scope: !5066, file: !3, line: 264, column: 35)
!5072 = !DILocation(line: 265, column: 16, scope: !5071)
!5073 = !DILocation(line: 265, column: 23, scope: !5071)
!5074 = !DILocation(line: 265, column: 31, scope: !5071)
!5075 = !DILocation(line: 265, column: 39, scope: !5071)
!5076 = !DILocation(line: 265, column: 54, scope: !5071)
!5077 = !DILocation(line: 267, column: 7, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 267, column: 7)
!5079 = !DILocation(line: 267, column: 12, scope: !5078)
!5080 = !DILocation(line: 267, column: 7, scope: !5071)
!5081 = !DILocation(line: 268, column: 20, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 267, column: 21)
!5083 = !DILocation(line: 268, column: 4, scope: !5082)
!5084 = !DILocation(line: 269, column: 4, scope: !5082)
!5085 = !DILocation(line: 271, column: 19, scope: !5071)
!5086 = !DILocation(line: 271, column: 3, scope: !5071)
!5087 = !DILocation(line: 271, column: 8, scope: !5071)
!5088 = !DILocation(line: 271, column: 14, scope: !5071)
!5089 = !DILocation(line: 271, column: 17, scope: !5071)
!5090 = !DILocation(line: 272, column: 3, scope: !5071)
!5091 = !DILocation(line: 272, column: 8, scope: !5071)
!5092 = !DILocation(line: 272, column: 18, scope: !5071)
!5093 = !DILocation(line: 273, column: 2, scope: !5071)
!5094 = !DILocation(line: 264, column: 31, scope: !5066)
!5095 = !DILocation(line: 264, column: 2, scope: !5066)
!5096 = distinct !{!5096, !5069, !5097}
!5097 = !DILocation(line: 273, column: 2, scope: !5063)
!5098 = !DILocation(line: 274, column: 16, scope: !4920)
!5099 = !DILocation(line: 274, column: 2, scope: !4920)
!5100 = !DILocation(line: 274, column: 7, scope: !4920)
!5101 = !DILocation(line: 274, column: 14, scope: !4920)
!5102 = !DILocation(line: 276, column: 9, scope: !4920)
!5103 = !DILocation(line: 276, column: 2, scope: !4920)
!5104 = !DILocation(line: 277, column: 1, scope: !4920)
!5105 = distinct !DISubprogram(name: "agp_generic_alloc_user", scope: !3, file: !3, line: 1159, type: !3261, scopeLine: 1160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!5106 = !DILocalVariable(name: "page_count", arg: 1, scope: !5105, file: !3, line: 1159, type: !1190)
!5107 = !DILocation(line: 1159, column: 50, scope: !5105)
!5108 = !DILocalVariable(name: "type", arg: 2, scope: !5105, file: !3, line: 1159, type: !165)
!5109 = !DILocation(line: 1159, column: 66, scope: !5105)
!5110 = !DILocalVariable(name: "new", scope: !5105, file: !3, line: 1161, type: !3193)
!5111 = !DILocation(line: 1161, column: 21, scope: !5105)
!5112 = !DILocalVariable(name: "i", scope: !5105, file: !3, line: 1162, type: !165)
!5113 = !DILocation(line: 1162, column: 6, scope: !5105)
!5114 = !DILocalVariable(name: "pages", scope: !5105, file: !3, line: 1163, type: !165)
!5115 = !DILocation(line: 1163, column: 6, scope: !5105)
!5116 = !DILocation(line: 1165, column: 11, scope: !5105)
!5117 = !DILocation(line: 1165, column: 22, scope: !5105)
!5118 = !DILocation(line: 1165, column: 41, scope: !5105)
!5119 = !DILocation(line: 1165, column: 46, scope: !5105)
!5120 = !DILocation(line: 1165, column: 10, scope: !5105)
!5121 = !DILocation(line: 1165, column: 8, scope: !5105)
!5122 = !DILocation(line: 1166, column: 31, scope: !5105)
!5123 = !DILocation(line: 1166, column: 8, scope: !5105)
!5124 = !DILocation(line: 1166, column: 6, scope: !5105)
!5125 = !DILocation(line: 1167, column: 6, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1167, column: 6)
!5127 = !DILocation(line: 1167, column: 10, scope: !5126)
!5128 = !DILocation(line: 1167, column: 6, scope: !5105)
!5129 = !DILocation(line: 1168, column: 3, scope: !5126)
!5130 = !DILocation(line: 1170, column: 9, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1170, column: 2)
!5132 = !DILocation(line: 1170, column: 7, scope: !5131)
!5133 = !DILocation(line: 1170, column: 14, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 1170, column: 2)
!5135 = !DILocation(line: 1170, column: 18, scope: !5134)
!5136 = !DILocation(line: 1170, column: 16, scope: !5134)
!5137 = !DILocation(line: 1170, column: 2, scope: !5131)
!5138 = !DILocation(line: 1171, column: 3, scope: !5134)
!5139 = !DILocation(line: 1171, column: 8, scope: !5134)
!5140 = !DILocation(line: 1171, column: 14, scope: !5134)
!5141 = !DILocation(line: 1171, column: 17, scope: !5134)
!5142 = !DILocation(line: 1170, column: 31, scope: !5134)
!5143 = !DILocation(line: 1170, column: 2, scope: !5134)
!5144 = distinct !{!5144, !5137, !5145}
!5145 = !DILocation(line: 1171, column: 19, scope: !5131)
!5146 = !DILocation(line: 1172, column: 2, scope: !5105)
!5147 = !DILocation(line: 1172, column: 7, scope: !5105)
!5148 = !DILocation(line: 1172, column: 18, scope: !5105)
!5149 = !DILocation(line: 1173, column: 14, scope: !5105)
!5150 = !DILocation(line: 1173, column: 2, scope: !5105)
!5151 = !DILocation(line: 1173, column: 7, scope: !5105)
!5152 = !DILocation(line: 1173, column: 12, scope: !5105)
!5153 = !DILocation(line: 1174, column: 27, scope: !5105)
!5154 = !DILocation(line: 1174, column: 2, scope: !5105)
!5155 = !DILocation(line: 1174, column: 7, scope: !5105)
!5156 = !DILocation(line: 1174, column: 25, scope: !5105)
!5157 = !DILocation(line: 1176, column: 9, scope: !5105)
!5158 = !DILocation(line: 1176, column: 2, scope: !5105)
!5159 = !DILocation(line: 1177, column: 1, scope: !5105)
!5160 = distinct !DISubprogram(name: "agp_num_entries", scope: !3, file: !3, line: 319, type: !3229, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!5161 = !DILocalVariable(name: "num_entries", scope: !5160, file: !3, line: 321, type: !165)
!5162 = !DILocation(line: 321, column: 6, scope: !5160)
!5163 = !DILocalVariable(name: "temp", scope: !5160, file: !3, line: 322, type: !160)
!5164 = !DILocation(line: 322, column: 8, scope: !5160)
!5165 = !DILocation(line: 324, column: 9, scope: !5160)
!5166 = !DILocation(line: 324, column: 21, scope: !5160)
!5167 = !DILocation(line: 324, column: 7, scope: !5160)
!5168 = !DILocation(line: 326, column: 10, scope: !5160)
!5169 = !DILocation(line: 326, column: 22, scope: !5160)
!5170 = !DILocation(line: 326, column: 30, scope: !5160)
!5171 = !DILocation(line: 326, column: 2, scope: !5160)
!5172 = !DILocation(line: 328, column: 17, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 326, column: 41)
!5174 = !DILocation(line: 328, column: 33, scope: !5173)
!5175 = !DILocation(line: 328, column: 15, scope: !5173)
!5176 = !DILocation(line: 329, column: 3, scope: !5173)
!5177 = !DILocation(line: 331, column: 17, scope: !5173)
!5178 = !DILocation(line: 331, column: 34, scope: !5173)
!5179 = !DILocation(line: 331, column: 15, scope: !5173)
!5180 = !DILocation(line: 332, column: 3, scope: !5173)
!5181 = !DILocation(line: 334, column: 17, scope: !5173)
!5182 = !DILocation(line: 334, column: 34, scope: !5173)
!5183 = !DILocation(line: 334, column: 15, scope: !5173)
!5184 = !DILocation(line: 335, column: 3, scope: !5173)
!5185 = !DILocation(line: 337, column: 17, scope: !5173)
!5186 = !DILocation(line: 337, column: 36, scope: !5173)
!5187 = !DILocation(line: 337, column: 15, scope: !5173)
!5188 = !DILocation(line: 338, column: 3, scope: !5173)
!5189 = !DILocation(line: 340, column: 17, scope: !5173)
!5190 = !DILocation(line: 340, column: 35, scope: !5173)
!5191 = !DILocation(line: 340, column: 15, scope: !5173)
!5192 = !DILocation(line: 341, column: 3, scope: !5173)
!5193 = !DILocation(line: 343, column: 15, scope: !5173)
!5194 = !DILocation(line: 344, column: 3, scope: !5173)
!5195 = !DILocation(line: 347, column: 17, scope: !5160)
!5196 = !DILocation(line: 347, column: 36, scope: !5160)
!5197 = !DILocation(line: 347, column: 14, scope: !5160)
!5198 = !DILocation(line: 348, column: 6, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5160, file: !3, line: 348, column: 6)
!5200 = !DILocation(line: 348, column: 17, scope: !5199)
!5201 = !DILocation(line: 348, column: 6, scope: !5160)
!5202 = !DILocation(line: 349, column: 15, scope: !5199)
!5203 = !DILocation(line: 349, column: 3, scope: !5199)
!5204 = !DILocation(line: 350, column: 9, scope: !5160)
!5205 = !DILocation(line: 350, column: 2, scope: !5160)
!5206 = distinct !DISubprogram(name: "agp_copy_info", scope: !3, file: !3, line: 364, type: !5207, scopeLine: 365, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!5207 = !DISubroutineType(types: !5208)
!5208 = !{!165, !3199, !5209}
!5209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5210, size: 64)
!5210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "agp_kern_info", file: !102, line: 45, size: 640, elements: !5211)
!5211 = !{!5212, !5213, !5214, !5215, !5216, !5217, !5218, !5219, !5220, !5221, !5222}
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5210, file: !102, line: 46, baseType: !3205, size: 32)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5210, file: !102, line: 47, baseType: !3286, size: 64, offset: 64)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "chipset", scope: !5210, file: !102, line: 48, baseType: !101, size: 32, offset: 128)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5210, file: !102, line: 49, baseType: !212, size: 64, offset: 192)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "aper_base", scope: !5210, file: !102, line: 50, baseType: !212, size: 64, offset: 256)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "aper_size", scope: !5210, file: !102, line: 51, baseType: !1190, size: 64, offset: 320)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "max_memory", scope: !5210, file: !102, line: 52, baseType: !165, size: 32, offset: 384)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "current_memory", scope: !5210, file: !102, line: 53, baseType: !165, size: 32, offset: 416)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "cant_use_aperture", scope: !5210, file: !102, line: 54, baseType: !400, size: 8, offset: 448)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "page_mask", scope: !5210, file: !102, line: 55, baseType: !212, size: 64, offset: 512)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !5210, file: !102, line: 56, baseType: !1072, size: 64, offset: 576)
!5223 = !DILocation(line: 23, column: 61, scope: !4924, inlinedAt: !5224)
!5224 = distinct !DILocation(line: 28, column: 9, scope: !4932, inlinedAt: !5225)
!5225 = distinct !DILocation(line: 383, column: 25, scope: !5206)
!5226 = !DILocation(line: 69, column: 73, scope: !4936, inlinedAt: !5227)
!5227 = distinct !DILocation(line: 27, column: 2, scope: !4932, inlinedAt: !5225)
!5228 = !DILocation(line: 69, column: 83, scope: !4936, inlinedAt: !5227)
!5229 = !DILocation(line: 25, column: 29, scope: !4932, inlinedAt: !5225)
!5230 = !DILocalVariable(name: "bridge", arg: 1, scope: !5206, file: !3, line: 364, type: !3199)
!5231 = !DILocation(line: 364, column: 43, scope: !5206)
!5232 = !DILocalVariable(name: "info", arg: 2, scope: !5206, file: !3, line: 364, type: !5209)
!5233 = !DILocation(line: 364, column: 73, scope: !5206)
!5234 = !DILocation(line: 366, column: 9, scope: !5206)
!5235 = !DILocation(line: 366, column: 2, scope: !5206)
!5236 = !DILocation(line: 367, column: 7, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 367, column: 6)
!5238 = !DILocation(line: 367, column: 6, scope: !5206)
!5239 = !DILocation(line: 368, column: 3, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 367, column: 15)
!5241 = !DILocation(line: 368, column: 9, scope: !5240)
!5242 = !DILocation(line: 368, column: 17, scope: !5240)
!5243 = !DILocation(line: 369, column: 3, scope: !5240)
!5244 = !DILocation(line: 372, column: 24, scope: !5206)
!5245 = !DILocation(line: 372, column: 32, scope: !5206)
!5246 = !DILocation(line: 372, column: 41, scope: !5206)
!5247 = !DILocation(line: 372, column: 2, scope: !5206)
!5248 = !DILocation(line: 372, column: 8, scope: !5206)
!5249 = !DILocation(line: 372, column: 16, scope: !5206)
!5250 = !DILocation(line: 372, column: 22, scope: !5206)
!5251 = !DILocation(line: 373, column: 24, scope: !5206)
!5252 = !DILocation(line: 373, column: 32, scope: !5206)
!5253 = !DILocation(line: 373, column: 41, scope: !5206)
!5254 = !DILocation(line: 373, column: 2, scope: !5206)
!5255 = !DILocation(line: 373, column: 8, scope: !5206)
!5256 = !DILocation(line: 373, column: 16, scope: !5206)
!5257 = !DILocation(line: 373, column: 22, scope: !5206)
!5258 = !DILocation(line: 374, column: 2, scope: !5206)
!5259 = !DILocation(line: 374, column: 8, scope: !5206)
!5260 = !DILocation(line: 374, column: 16, scope: !5206)
!5261 = !DILocation(line: 375, column: 17, scope: !5206)
!5262 = !DILocation(line: 375, column: 25, scope: !5206)
!5263 = !DILocation(line: 375, column: 2, scope: !5206)
!5264 = !DILocation(line: 375, column: 8, scope: !5206)
!5265 = !DILocation(line: 375, column: 15, scope: !5206)
!5266 = !DILocation(line: 376, column: 6, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5206, file: !3, line: 376, column: 6)
!5268 = !DILocation(line: 376, column: 14, scope: !5267)
!5269 = !DILocation(line: 376, column: 19, scope: !5267)
!5270 = !DILocation(line: 376, column: 6, scope: !5206)
!5271 = !DILocation(line: 377, column: 16, scope: !5267)
!5272 = !DILocation(line: 377, column: 24, scope: !5267)
!5273 = !DILocation(line: 377, column: 29, scope: !5267)
!5274 = !DILocation(line: 377, column: 3, scope: !5267)
!5275 = !DILocation(line: 377, column: 9, scope: !5267)
!5276 = !DILocation(line: 377, column: 14, scope: !5267)
!5277 = !DILocation(line: 379, column: 16, scope: !5267)
!5278 = !DILocation(line: 379, column: 24, scope: !5267)
!5279 = !DILocation(line: 379, column: 29, scope: !5267)
!5280 = !DILocation(line: 379, column: 3, scope: !5267)
!5281 = !DILocation(line: 379, column: 9, scope: !5267)
!5282 = !DILocation(line: 379, column: 14, scope: !5267)
!5283 = !DILocation(line: 380, column: 20, scope: !5206)
!5284 = !DILocation(line: 380, column: 28, scope: !5206)
!5285 = !DILocation(line: 380, column: 2, scope: !5206)
!5286 = !DILocation(line: 380, column: 8, scope: !5206)
!5287 = !DILocation(line: 380, column: 18, scope: !5206)
!5288 = !DILocation(line: 381, column: 20, scope: !5206)
!5289 = !DILocation(line: 381, column: 2, scope: !5206)
!5290 = !DILocation(line: 381, column: 8, scope: !5206)
!5291 = !DILocation(line: 381, column: 18, scope: !5206)
!5292 = !DILocation(line: 382, column: 21, scope: !5206)
!5293 = !DILocation(line: 382, column: 29, scope: !5206)
!5294 = !DILocation(line: 382, column: 2, scope: !5206)
!5295 = !DILocation(line: 382, column: 8, scope: !5206)
!5296 = !DILocation(line: 382, column: 19, scope: !5206)
!5297 = !DILocation(line: 383, column: 38, scope: !5206)
!5298 = !DILocation(line: 383, column: 46, scope: !5206)
!5299 = !DILocation(line: 27, column: 25, scope: !4932, inlinedAt: !5225)
!5300 = !DILocation(line: 71, column: 19, scope: !4936, inlinedAt: !5227)
!5301 = !DILocation(line: 71, column: 22, scope: !4936, inlinedAt: !5227)
!5302 = !DILocation(line: 71, column: 2, scope: !4936, inlinedAt: !5227)
!5303 = !DILocation(line: 72, column: 2, scope: !4936, inlinedAt: !5227)
!5304 = !DILocation(line: 28, column: 26, scope: !4932, inlinedAt: !5225)
!5305 = !DILocation(line: 29, column: 9, scope: !4924, inlinedAt: !5224)
!5306 = !DILocation(line: 383, column: 2, scope: !5206)
!5307 = !DILocation(line: 383, column: 8, scope: !5206)
!5308 = !DILocation(line: 383, column: 23, scope: !5206)
!5309 = !DILocation(line: 384, column: 28, scope: !5206)
!5310 = !DILocation(line: 384, column: 36, scope: !5206)
!5311 = !DILocation(line: 384, column: 44, scope: !5206)
!5312 = !DILocation(line: 384, column: 2, scope: !5206)
!5313 = !DILocation(line: 384, column: 8, scope: !5206)
!5314 = !DILocation(line: 384, column: 26, scope: !5206)
!5315 = !DILocation(line: 385, column: 17, scope: !5206)
!5316 = !DILocation(line: 385, column: 25, scope: !5206)
!5317 = !DILocation(line: 385, column: 2, scope: !5206)
!5318 = !DILocation(line: 385, column: 8, scope: !5206)
!5319 = !DILocation(line: 385, column: 15, scope: !5206)
!5320 = !DILocation(line: 386, column: 2, scope: !5206)
!5321 = !DILocation(line: 386, column: 8, scope: !5206)
!5322 = !DILocation(line: 386, column: 18, scope: !5206)
!5323 = !DILocation(line: 387, column: 2, scope: !5206)
!5324 = !DILocation(line: 388, column: 1, scope: !5206)
!5325 = distinct !DISubprogram(name: "agp_return_size", scope: !3, file: !3, line: 284, type: !3229, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!5326 = !DILocalVariable(name: "current_size", scope: !5325, file: !3, line: 286, type: !165)
!5327 = !DILocation(line: 286, column: 6, scope: !5325)
!5328 = !DILocalVariable(name: "temp", scope: !5325, file: !3, line: 287, type: !160)
!5329 = !DILocation(line: 287, column: 8, scope: !5325)
!5330 = !DILocation(line: 289, column: 9, scope: !5325)
!5331 = !DILocation(line: 289, column: 21, scope: !5325)
!5332 = !DILocation(line: 289, column: 7, scope: !5325)
!5333 = !DILocation(line: 291, column: 10, scope: !5325)
!5334 = !DILocation(line: 291, column: 22, scope: !5325)
!5335 = !DILocation(line: 291, column: 30, scope: !5325)
!5336 = !DILocation(line: 291, column: 2, scope: !5325)
!5337 = !DILocation(line: 293, column: 18, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 291, column: 41)
!5339 = !DILocation(line: 293, column: 34, scope: !5338)
!5340 = !DILocation(line: 293, column: 16, scope: !5338)
!5341 = !DILocation(line: 294, column: 3, scope: !5338)
!5342 = !DILocation(line: 296, column: 18, scope: !5338)
!5343 = !DILocation(line: 296, column: 35, scope: !5338)
!5344 = !DILocation(line: 296, column: 16, scope: !5338)
!5345 = !DILocation(line: 297, column: 3, scope: !5338)
!5346 = !DILocation(line: 299, column: 18, scope: !5338)
!5347 = !DILocation(line: 299, column: 35, scope: !5338)
!5348 = !DILocation(line: 299, column: 16, scope: !5338)
!5349 = !DILocation(line: 300, column: 3, scope: !5338)
!5350 = !DILocation(line: 302, column: 18, scope: !5338)
!5351 = !DILocation(line: 302, column: 37, scope: !5338)
!5352 = !DILocation(line: 302, column: 16, scope: !5338)
!5353 = !DILocation(line: 303, column: 3, scope: !5338)
!5354 = !DILocation(line: 305, column: 18, scope: !5338)
!5355 = !DILocation(line: 305, column: 36, scope: !5338)
!5356 = !DILocation(line: 305, column: 16, scope: !5338)
!5357 = !DILocation(line: 306, column: 3, scope: !5338)
!5358 = !DILocation(line: 308, column: 16, scope: !5338)
!5359 = !DILocation(line: 309, column: 3, scope: !5338)
!5360 = !DILocation(line: 312, column: 19, scope: !5325)
!5361 = !DILocation(line: 312, column: 39, scope: !5325)
!5362 = !DILocation(line: 312, column: 15, scope: !5325)
!5363 = !DILocation(line: 313, column: 6, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5325, file: !3, line: 313, column: 6)
!5365 = !DILocation(line: 313, column: 19, scope: !5364)
!5366 = !DILocation(line: 313, column: 6, scope: !5325)
!5367 = !DILocation(line: 314, column: 16, scope: !5364)
!5368 = !DILocation(line: 314, column: 3, scope: !5364)
!5369 = !DILocation(line: 315, column: 9, scope: !5325)
!5370 = !DILocation(line: 315, column: 2, scope: !5325)
!5371 = distinct !DISubprogram(name: "agp_bind_memory", scope: !3, file: !3, line: 408, type: !5372, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!5372 = !DISubroutineType(types: !5373)
!5373 = !{!165, !3193, !3256}
!5374 = !DILocation(line: 392, column: 53, scope: !4832, inlinedAt: !5375)
!5375 = distinct !DILocation(line: 433, column: 2, scope: !5371)
!5376 = !DILocation(line: 352, column: 51, scope: !4839, inlinedAt: !5377)
!5377 = distinct !DILocation(line: 431, column: 2, scope: !5371)
!5378 = !DILocalVariable(name: "curr", arg: 1, scope: !5371, file: !3, line: 408, type: !3193)
!5379 = !DILocation(line: 408, column: 40, scope: !5371)
!5380 = !DILocalVariable(name: "pg_start", arg: 2, scope: !5371, file: !3, line: 408, type: !3256)
!5381 = !DILocation(line: 408, column: 52, scope: !5371)
!5382 = !DILocalVariable(name: "ret_val", scope: !5371, file: !3, line: 410, type: !165)
!5383 = !DILocation(line: 410, column: 6, scope: !5371)
!5384 = !DILocation(line: 412, column: 6, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 412, column: 6)
!5386 = !DILocation(line: 412, column: 11, scope: !5385)
!5387 = !DILocation(line: 412, column: 6, scope: !5371)
!5388 = !DILocation(line: 413, column: 3, scope: !5385)
!5389 = !DILocation(line: 415, column: 6, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 415, column: 6)
!5391 = !DILocation(line: 415, column: 12, scope: !5390)
!5392 = !DILocation(line: 415, column: 6, scope: !5371)
!5393 = !DILocation(line: 416, column: 57, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5390, file: !3, line: 415, column: 22)
!5395 = !DILocation(line: 416, column: 3, scope: !5394)
!5396 = !DILocation(line: 417, column: 3, scope: !5394)
!5397 = !DILocation(line: 419, column: 7, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 419, column: 6)
!5399 = !DILocation(line: 419, column: 13, scope: !5398)
!5400 = !DILocation(line: 419, column: 6, scope: !5371)
!5401 = !DILocation(line: 420, column: 3, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5398, file: !3, line: 419, column: 25)
!5403 = !DILocation(line: 420, column: 9, scope: !5402)
!5404 = !DILocation(line: 420, column: 17, scope: !5402)
!5405 = !DILocation(line: 420, column: 25, scope: !5402)
!5406 = !DILocation(line: 421, column: 3, scope: !5402)
!5407 = !DILocation(line: 421, column: 9, scope: !5402)
!5408 = !DILocation(line: 421, column: 20, scope: !5402)
!5409 = !DILocation(line: 422, column: 2, scope: !5402)
!5410 = !DILocation(line: 424, column: 12, scope: !5371)
!5411 = !DILocation(line: 424, column: 18, scope: !5371)
!5412 = !DILocation(line: 424, column: 26, scope: !5371)
!5413 = !DILocation(line: 424, column: 34, scope: !5371)
!5414 = !DILocation(line: 424, column: 48, scope: !5371)
!5415 = !DILocation(line: 424, column: 54, scope: !5371)
!5416 = !DILocation(line: 424, column: 64, scope: !5371)
!5417 = !DILocation(line: 424, column: 70, scope: !5371)
!5418 = !DILocation(line: 424, column: 10, scope: !5371)
!5419 = !DILocation(line: 426, column: 6, scope: !5420)
!5420 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 426, column: 6)
!5421 = !DILocation(line: 426, column: 14, scope: !5420)
!5422 = !DILocation(line: 426, column: 6, scope: !5371)
!5423 = !DILocation(line: 427, column: 10, scope: !5420)
!5424 = !DILocation(line: 427, column: 3, scope: !5420)
!5425 = !DILocation(line: 429, column: 2, scope: !5371)
!5426 = !DILocation(line: 429, column: 8, scope: !5371)
!5427 = !DILocation(line: 429, column: 17, scope: !5371)
!5428 = !DILocation(line: 430, column: 19, scope: !5371)
!5429 = !DILocation(line: 430, column: 2, scope: !5371)
!5430 = !DILocation(line: 430, column: 8, scope: !5371)
!5431 = !DILocation(line: 430, column: 17, scope: !5371)
!5432 = !DILocation(line: 431, column: 13, scope: !5371)
!5433 = !DILocation(line: 431, column: 25, scope: !5371)
!5434 = !DILocation(line: 354, column: 2, scope: !4885, inlinedAt: !5377)
!5435 = !DILocation(line: 354, column: 2, scope: !4888, inlinedAt: !5377)
!5436 = !DILocation(line: 432, column: 12, scope: !5371)
!5437 = !DILocation(line: 432, column: 18, scope: !5371)
!5438 = !DILocation(line: 432, column: 32, scope: !5371)
!5439 = !DILocation(line: 432, column: 44, scope: !5371)
!5440 = !DILocation(line: 432, column: 2, scope: !5371)
!5441 = !DILocation(line: 433, column: 15, scope: !5371)
!5442 = !DILocation(line: 433, column: 27, scope: !5371)
!5443 = !DILocation(line: 394, column: 2, scope: !4896, inlinedAt: !5375)
!5444 = !DILocation(line: 394, column: 2, scope: !4899, inlinedAt: !5375)
!5445 = !DILocation(line: 435, column: 2, scope: !5371)
!5446 = !DILocation(line: 436, column: 1, scope: !5371)
!5447 = distinct !DISubprogram(name: "list_add", scope: !5448, file: !5448, line: 84, type: !5449, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!5448 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!5449 = !DISubroutineType(types: !5450)
!5450 = !{null, !223, !223}
!5451 = !DILocalVariable(name: "new", arg: 1, scope: !5447, file: !5448, line: 84, type: !223)
!5452 = !DILocation(line: 84, column: 47, scope: !5447)
!5453 = !DILocalVariable(name: "head", arg: 2, scope: !5447, file: !5448, line: 84, type: !223)
!5454 = !DILocation(line: 84, column: 70, scope: !5447)
!5455 = !DILocation(line: 86, column: 13, scope: !5447)
!5456 = !DILocation(line: 86, column: 18, scope: !5447)
!5457 = !DILocation(line: 86, column: 24, scope: !5447)
!5458 = !DILocation(line: 86, column: 30, scope: !5447)
!5459 = !DILocation(line: 86, column: 2, scope: !5447)
!5460 = !DILocation(line: 87, column: 1, scope: !5447)
!5461 = distinct !DISubprogram(name: "list_del", scope: !5448, file: !5448, line: 144, type: !5462, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!5462 = !DISubroutineType(types: !5463)
!5463 = !{null, !223}
!5464 = !DILocalVariable(name: "entry", arg: 1, scope: !5461, file: !5448, line: 144, type: !223)
!5465 = !DILocation(line: 144, column: 47, scope: !5461)
!5466 = !DILocation(line: 146, column: 19, scope: !5461)
!5467 = !DILocation(line: 146, column: 2, scope: !5461)
!5468 = !DILocation(line: 147, column: 2, scope: !5461)
!5469 = !DILocation(line: 147, column: 9, scope: !5461)
!5470 = !DILocation(line: 147, column: 14, scope: !5461)
!5471 = !DILocation(line: 148, column: 2, scope: !5461)
!5472 = !DILocation(line: 148, column: 9, scope: !5461)
!5473 = !DILocation(line: 148, column: 14, scope: !5461)
!5474 = !DILocation(line: 149, column: 1, scope: !5461)
!5475 = distinct !DISubprogram(name: "agp_collect_device_status", scope: !3, file: !3, line: 721, type: !5476, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!5476 = !DISubroutineType(types: !5477)
!5477 = !{!191, !3199, !191, !191}
!5478 = !DILocalVariable(name: "bridge", arg: 1, scope: !5475, file: !3, line: 721, type: !3199)
!5479 = !DILocation(line: 721, column: 55, scope: !5475)
!5480 = !DILocalVariable(name: "requested_mode", arg: 2, scope: !5475, file: !3, line: 721, type: !191)
!5481 = !DILocation(line: 721, column: 67, scope: !5475)
!5482 = !DILocalVariable(name: "bridge_agpstat", arg: 3, scope: !5475, file: !3, line: 721, type: !191)
!5483 = !DILocation(line: 721, column: 87, scope: !5475)
!5484 = !DILocalVariable(name: "device", scope: !5475, file: !3, line: 723, type: !3286)
!5485 = !DILocation(line: 723, column: 18, scope: !5475)
!5486 = !DILocalVariable(name: "vga_agpstat", scope: !5475, file: !3, line: 724, type: !191)
!5487 = !DILocation(line: 724, column: 6, scope: !5475)
!5488 = !DILocalVariable(name: "cap_ptr", scope: !5475, file: !3, line: 725, type: !169)
!5489 = !DILocation(line: 725, column: 5, scope: !5475)
!5490 = !DILocation(line: 727, column: 2, scope: !5475)
!5491 = !DILocation(line: 728, column: 54, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 727, column: 11)
!5493 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 727, column: 2)
!5494 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 727, column: 2)
!5495 = !DILocation(line: 728, column: 12, scope: !5492)
!5496 = !DILocation(line: 728, column: 10, scope: !5492)
!5497 = !DILocation(line: 729, column: 8, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 729, column: 7)
!5499 = !DILocation(line: 729, column: 7, scope: !5492)
!5500 = !DILocation(line: 730, column: 4, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 729, column: 16)
!5502 = !DILocation(line: 731, column: 4, scope: !5501)
!5503 = !DILocation(line: 733, column: 33, scope: !5492)
!5504 = !DILocation(line: 733, column: 13, scope: !5492)
!5505 = !DILocation(line: 733, column: 11, scope: !5492)
!5506 = !DILocation(line: 734, column: 7, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 734, column: 7)
!5508 = !DILocation(line: 734, column: 7, scope: !5492)
!5509 = !DILocation(line: 735, column: 4, scope: !5507)
!5510 = !DILocation(line: 727, column: 2, scope: !5493)
!5511 = distinct !{!5511, !5512, !5513}
!5512 = !DILocation(line: 727, column: 2, scope: !5494)
!5513 = !DILocation(line: 736, column: 2, scope: !5494)
!5514 = !DILocation(line: 742, column: 24, scope: !5475)
!5515 = !DILocation(line: 742, column: 32, scope: !5475)
!5516 = !DILocation(line: 742, column: 39, scope: !5475)
!5517 = !DILocation(line: 742, column: 2, scope: !5475)
!5518 = !DILocation(line: 745, column: 21, scope: !5475)
!5519 = !DILocation(line: 745, column: 36, scope: !5475)
!5520 = !DILocalVariable(name: "__UNIQUE_ID___x252", scope: !5521, file: !3, line: 746, type: !191)
!5521 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 746, column: 7)
!5522 = !DILocation(line: 746, column: 7, scope: !5521)
!5523 = !DILocalVariable(name: "__UNIQUE_ID___y253", scope: !5521, file: !3, line: 746, type: !191)
!5524 = !DILocalVariable(name: "__UNIQUE_ID___x250", scope: !5525, file: !3, line: 746, type: !191)
!5525 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 746, column: 7)
!5526 = !DILocation(line: 746, column: 7, scope: !5525)
!5527 = !DILocalVariable(name: "__UNIQUE_ID___y251", scope: !5525, file: !3, line: 746, type: !191)
!5528 = !DILocation(line: 745, column: 57, scope: !5475)
!5529 = !DILocation(line: 745, column: 17, scope: !5475)
!5530 = !DILocation(line: 750, column: 9, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 750, column: 6)
!5532 = !DILocation(line: 750, column: 24, scope: !5531)
!5533 = !DILocation(line: 750, column: 38, scope: !5531)
!5534 = !DILocation(line: 751, column: 5, scope: !5531)
!5535 = !DILocation(line: 751, column: 17, scope: !5531)
!5536 = !DILocation(line: 751, column: 31, scope: !5531)
!5537 = !DILocation(line: 752, column: 5, scope: !5531)
!5538 = !DILocation(line: 752, column: 20, scope: !5531)
!5539 = !DILocation(line: 750, column: 6, scope: !5475)
!5540 = !DILocation(line: 753, column: 18, scope: !5531)
!5541 = !DILocation(line: 753, column: 3, scope: !5531)
!5542 = !DILocation(line: 756, column: 6, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 756, column: 6)
!5544 = !DILocation(line: 756, column: 18, scope: !5543)
!5545 = !DILocation(line: 756, column: 23, scope: !5543)
!5546 = !DILocation(line: 756, column: 6, scope: !5475)
!5547 = !DILocation(line: 757, column: 3, scope: !5543)
!5548 = !DILocation(line: 759, column: 3, scope: !5543)
!5549 = !DILocation(line: 761, column: 14, scope: !5475)
!5550 = !DILocation(line: 761, column: 2, scope: !5475)
!5551 = !DILocation(line: 762, column: 9, scope: !5475)
!5552 = !DILocation(line: 762, column: 2, scope: !5475)
!5553 = !DILocation(line: 763, column: 1, scope: !5475)
!5554 = distinct !DISubprogram(name: "agp_v3_parse_one", scope: !3, file: !3, line: 582, type: !5555, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!5555 = !DISubroutineType(types: !5556)
!5556 = !{null, !1885, !1885, !1885}
!5557 = !DILocalVariable(name: "pscr_ret__", scope: !5558, file: !5559, line: 15, type: !864)
!5558 = distinct !DILexicalBlock(scope: !5560, file: !5559, line: 15, column: 9)
!5559 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!5560 = distinct !DISubprogram(name: "get_current", scope: !5559, file: !5559, line: 13, type: !5561, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!5561 = !DISubroutineType(types: !5562)
!5562 = !{!864}
!5563 = !DILocation(line: 15, column: 9, scope: !5558, inlinedAt: !5564)
!5564 = distinct !DILocation(line: 656, column: 79, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 653, column: 38)
!5566 = distinct !DILexicalBlock(scope: !5567, file: !3, line: 653, column: 7)
!5567 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 646, column: 37)
!5568 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 646, column: 6)
!5569 = !DILocalVariable(name: "__vpp_verify", scope: !5570, file: !5559, line: 15, type: !2375)
!5570 = distinct !DILexicalBlock(scope: !5558, file: !5559, line: 15, column: 9)
!5571 = !DILocation(line: 15, column: 9, scope: !5570, inlinedAt: !5564)
!5572 = !DILocalVariable(name: "pfo_val__", scope: !5573, file: !5559, line: 15, type: !298)
!5573 = distinct !DILexicalBlock(scope: !5558, file: !5559, line: 15, column: 9)
!5574 = !DILocation(line: 15, column: 9, scope: !5573, inlinedAt: !5564)
!5575 = !DILocation(line: 15, column: 9, scope: !5558, inlinedAt: !5576)
!5576 = distinct !DILocation(line: 650, column: 73, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5578, file: !3, line: 647, column: 41)
!5578 = distinct !DILexicalBlock(scope: !5567, file: !3, line: 647, column: 7)
!5579 = !DILocation(line: 15, column: 9, scope: !5570, inlinedAt: !5576)
!5580 = !DILocation(line: 15, column: 9, scope: !5573, inlinedAt: !5576)
!5581 = !DILocation(line: 15, column: 9, scope: !5558, inlinedAt: !5582)
!5582 = distinct !DILocation(line: 641, column: 6, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 634, column: 9)
!5584 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 622, column: 6)
!5585 = !DILocation(line: 15, column: 9, scope: !5570, inlinedAt: !5582)
!5586 = !DILocation(line: 15, column: 9, scope: !5573, inlinedAt: !5582)
!5587 = !DILocation(line: 15, column: 9, scope: !5558, inlinedAt: !5588)
!5588 = distinct !DILocation(line: 630, column: 7, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 628, column: 38)
!5590 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 628, column: 7)
!5591 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 622, column: 42)
!5592 = !DILocation(line: 15, column: 9, scope: !5570, inlinedAt: !5588)
!5593 = !DILocation(line: 15, column: 9, scope: !5573, inlinedAt: !5588)
!5594 = !DILocation(line: 15, column: 9, scope: !5558, inlinedAt: !5595)
!5595 = distinct !DILocation(line: 600, column: 80, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5597, file: !3, line: 599, column: 16)
!5597 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 599, column: 6)
!5598 = !DILocation(line: 15, column: 9, scope: !5570, inlinedAt: !5595)
!5599 = !DILocation(line: 15, column: 9, scope: !5573, inlinedAt: !5595)
!5600 = !DILocation(line: 15, column: 9, scope: !5558, inlinedAt: !5601)
!5601 = distinct !DILocation(line: 596, column: 79, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 595, column: 16)
!5603 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 595, column: 6)
!5604 = !DILocation(line: 15, column: 9, scope: !5570, inlinedAt: !5601)
!5605 = !DILocation(line: 15, column: 9, scope: !5573, inlinedAt: !5601)
!5606 = !DILocalVariable(name: "requested_mode", arg: 1, scope: !5554, file: !3, line: 582, type: !1885)
!5607 = !DILocation(line: 582, column: 35, scope: !5554)
!5608 = !DILocalVariable(name: "bridge_agpstat", arg: 2, scope: !5554, file: !3, line: 582, type: !1885)
!5609 = !DILocation(line: 582, column: 56, scope: !5554)
!5610 = !DILocalVariable(name: "vga_agpstat", arg: 3, scope: !5554, file: !3, line: 582, type: !1885)
!5611 = !DILocation(line: 582, column: 77, scope: !5554)
!5612 = !DILocalVariable(name: "origbridge", scope: !5554, file: !3, line: 584, type: !191)
!5613 = !DILocation(line: 584, column: 6, scope: !5554)
!5614 = !DILocation(line: 584, column: 18, scope: !5554)
!5615 = !DILocation(line: 584, column: 17, scope: !5554)
!5616 = !DILocalVariable(name: "origvga", scope: !5554, file: !3, line: 584, type: !191)
!5617 = !DILocation(line: 584, column: 34, scope: !5554)
!5618 = !DILocation(line: 584, column: 43, scope: !5554)
!5619 = !DILocation(line: 584, column: 42, scope: !5554)
!5620 = !DILocalVariable(name: "tmp", scope: !5554, file: !3, line: 585, type: !191)
!5621 = !DILocation(line: 585, column: 6, scope: !5554)
!5622 = !DILocation(line: 587, column: 7, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 587, column: 6)
!5624 = !DILocation(line: 587, column: 6, scope: !5623)
!5625 = !DILocation(line: 587, column: 22, scope: !5623)
!5626 = !DILocation(line: 587, column: 6, scope: !5554)
!5627 = !DILocation(line: 589, column: 5, scope: !5628)
!5628 = distinct !DILexicalBlock(scope: !5623, file: !3, line: 587, column: 44)
!5629 = !DILocation(line: 589, column: 4, scope: !5628)
!5630 = !DILocation(line: 589, column: 20, scope: !5628)
!5631 = !DILocation(line: 589, column: 43, scope: !5628)
!5632 = !DILocation(line: 589, column: 42, scope: !5628)
!5633 = !DILocation(line: 588, column: 3, scope: !5628)
!5634 = !DILocation(line: 590, column: 4, scope: !5628)
!5635 = !DILocation(line: 590, column: 19, scope: !5628)
!5636 = !DILocation(line: 591, column: 2, scope: !5628)
!5637 = !DILocation(line: 594, column: 9, scope: !5554)
!5638 = !DILocation(line: 594, column: 8, scope: !5554)
!5639 = !DILocation(line: 594, column: 24, scope: !5554)
!5640 = !DILocation(line: 594, column: 6, scope: !5554)
!5641 = !DILocation(line: 595, column: 6, scope: !5603)
!5642 = !DILocation(line: 595, column: 10, scope: !5603)
!5643 = !DILocation(line: 595, column: 6, scope: !5554)
!5644 = !{i32 -2146195154}
!5645 = !DILocation(line: 596, column: 88, scope: !5602)
!5646 = !DILocation(line: 596, column: 79, scope: !5602)
!5647 = !DILocation(line: 596, column: 3, scope: !5602)
!5648 = !DILocation(line: 597, column: 4, scope: !5602)
!5649 = !DILocation(line: 597, column: 19, scope: !5602)
!5650 = !DILocation(line: 598, column: 2, scope: !5602)
!5651 = !DILocation(line: 599, column: 6, scope: !5597)
!5652 = !DILocation(line: 599, column: 10, scope: !5597)
!5653 = !DILocation(line: 599, column: 6, scope: !5554)
!5654 = !DILocation(line: 600, column: 89, scope: !5596)
!5655 = !DILocation(line: 600, column: 80, scope: !5596)
!5656 = !DILocation(line: 600, column: 95, scope: !5596)
!5657 = !DILocation(line: 600, column: 99, scope: !5596)
!5658 = !DILocation(line: 600, column: 3, scope: !5596)
!5659 = !DILocation(line: 601, column: 23, scope: !5596)
!5660 = !DILocation(line: 601, column: 22, scope: !5596)
!5661 = !DILocation(line: 601, column: 38, scope: !5596)
!5662 = !DILocation(line: 601, column: 44, scope: !5596)
!5663 = !DILocation(line: 601, column: 4, scope: !5596)
!5664 = !DILocation(line: 601, column: 19, scope: !5596)
!5665 = !DILocation(line: 602, column: 2, scope: !5596)
!5666 = !DILocation(line: 606, column: 23, scope: !5554)
!5667 = !DILocation(line: 606, column: 22, scope: !5554)
!5668 = !DILocation(line: 606, column: 38, scope: !5554)
!5669 = !DILocalVariable(name: "__UNIQUE_ID___x246", scope: !5670, file: !3, line: 607, type: !191)
!5670 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 607, column: 3)
!5671 = !DILocation(line: 607, column: 3, scope: !5670)
!5672 = !DILocalVariable(name: "__UNIQUE_ID___y247", scope: !5670, file: !3, line: 607, type: !191)
!5673 = !DILocation(line: 606, column: 56, scope: !5554)
!5674 = !DILocation(line: 606, column: 3, scope: !5554)
!5675 = !DILocation(line: 606, column: 18, scope: !5554)
!5676 = !DILocation(line: 611, column: 23, scope: !5554)
!5677 = !DILocation(line: 611, column: 22, scope: !5554)
!5678 = !DILocation(line: 611, column: 38, scope: !5554)
!5679 = !DILocalVariable(name: "__UNIQUE_ID___x248", scope: !5680, file: !3, line: 612, type: !191)
!5680 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 612, column: 3)
!5681 = !DILocation(line: 612, column: 3, scope: !5680)
!5682 = !DILocalVariable(name: "__UNIQUE_ID___y249", scope: !5680, file: !3, line: 612, type: !191)
!5683 = !DILocation(line: 611, column: 59, scope: !5554)
!5684 = !DILocation(line: 611, column: 3, scope: !5554)
!5685 = !DILocation(line: 611, column: 18, scope: !5554)
!5686 = !DILocation(line: 615, column: 3, scope: !5554)
!5687 = !DILocation(line: 615, column: 18, scope: !5554)
!5688 = !DILocation(line: 622, column: 7, scope: !5584)
!5689 = !DILocation(line: 622, column: 6, scope: !5584)
!5690 = !DILocation(line: 622, column: 22, scope: !5584)
!5691 = !DILocation(line: 622, column: 6, scope: !5554)
!5692 = !DILocation(line: 628, column: 8, scope: !5590)
!5693 = !DILocation(line: 628, column: 7, scope: !5590)
!5694 = !DILocation(line: 628, column: 23, scope: !5590)
!5695 = !DILocation(line: 628, column: 7, scope: !5591)
!5696 = !DILocation(line: 630, column: 16, scope: !5589)
!5697 = !DILocation(line: 630, column: 7, scope: !5589)
!5698 = !DILocation(line: 630, column: 23, scope: !5589)
!5699 = !DILocation(line: 630, column: 22, scope: !5589)
!5700 = !DILocation(line: 629, column: 4, scope: !5589)
!5701 = !DILocation(line: 631, column: 5, scope: !5589)
!5702 = !DILocation(line: 631, column: 20, scope: !5589)
!5703 = !DILocation(line: 632, column: 5, scope: !5589)
!5704 = !DILocation(line: 632, column: 20, scope: !5589)
!5705 = !DILocation(line: 633, column: 3, scope: !5589)
!5706 = !DILocation(line: 634, column: 2, scope: !5591)
!5707 = !DILocation(line: 641, column: 15, scope: !5583)
!5708 = !DILocation(line: 641, column: 6, scope: !5583)
!5709 = !DILocation(line: 641, column: 22, scope: !5583)
!5710 = !DILocation(line: 641, column: 21, scope: !5583)
!5711 = !DILocation(line: 640, column: 3, scope: !5583)
!5712 = !DILocation(line: 642, column: 4, scope: !5583)
!5713 = !DILocation(line: 642, column: 19, scope: !5583)
!5714 = !DILocation(line: 643, column: 4, scope: !5583)
!5715 = !DILocation(line: 643, column: 19, scope: !5583)
!5716 = !DILocation(line: 646, column: 7, scope: !5568)
!5717 = !DILocation(line: 646, column: 6, scope: !5568)
!5718 = !DILocation(line: 646, column: 22, scope: !5568)
!5719 = !DILocation(line: 646, column: 6, scope: !5554)
!5720 = !DILocation(line: 647, column: 10, scope: !5578)
!5721 = !DILocation(line: 647, column: 9, scope: !5578)
!5722 = !DILocation(line: 647, column: 25, scope: !5578)
!5723 = !DILocation(line: 647, column: 7, scope: !5567)
!5724 = !DILocation(line: 648, column: 5, scope: !5577)
!5725 = !DILocation(line: 648, column: 20, scope: !5577)
!5726 = !DILocation(line: 649, column: 5, scope: !5577)
!5727 = !DILocation(line: 649, column: 20, scope: !5577)
!5728 = !DILocation(line: 650, column: 82, scope: !5577)
!5729 = !DILocation(line: 650, column: 73, scope: !5577)
!5730 = !DILocation(line: 650, column: 4, scope: !5577)
!5731 = !DILocation(line: 651, column: 4, scope: !5577)
!5732 = !DILocation(line: 653, column: 10, scope: !5566)
!5733 = !DILocation(line: 653, column: 9, scope: !5566)
!5734 = !DILocation(line: 653, column: 22, scope: !5566)
!5735 = !DILocation(line: 653, column: 7, scope: !5567)
!5736 = !DILocation(line: 654, column: 5, scope: !5565)
!5737 = !DILocation(line: 654, column: 20, scope: !5565)
!5738 = !DILocation(line: 655, column: 5, scope: !5565)
!5739 = !DILocation(line: 655, column: 20, scope: !5565)
!5740 = !DILocation(line: 656, column: 88, scope: !5565)
!5741 = !DILocation(line: 656, column: 79, scope: !5565)
!5742 = !DILocation(line: 656, column: 4, scope: !5565)
!5743 = !DILocation(line: 657, column: 4, scope: !5565)
!5744 = !DILocation(line: 660, column: 4, scope: !5567)
!5745 = !DILocation(line: 660, column: 19, scope: !5567)
!5746 = !DILocation(line: 661, column: 3, scope: !5567)
!5747 = !DILocation(line: 663, column: 14, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 663, column: 13)
!5749 = !DILocation(line: 663, column: 13, scope: !5748)
!5750 = !DILocation(line: 663, column: 29, scope: !5748)
!5751 = !DILocation(line: 663, column: 13, scope: !5568)
!5752 = !DILocation(line: 664, column: 4, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 663, column: 44)
!5754 = !DILocation(line: 664, column: 19, scope: !5753)
!5755 = !DILocation(line: 665, column: 4, scope: !5753)
!5756 = !DILocation(line: 665, column: 19, scope: !5753)
!5757 = !DILocation(line: 666, column: 3, scope: !5753)
!5758 = !DILocation(line: 675, column: 9, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5760, file: !3, line: 675, column: 7)
!5760 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 668, column: 9)
!5761 = !DILocation(line: 675, column: 8, scope: !5759)
!5762 = !DILocation(line: 675, column: 24, scope: !5759)
!5763 = !DILocation(line: 675, column: 39, scope: !5759)
!5764 = !DILocation(line: 675, column: 44, scope: !5759)
!5765 = !DILocation(line: 675, column: 43, scope: !5759)
!5766 = !DILocation(line: 675, column: 56, scope: !5759)
!5767 = !DILocation(line: 675, column: 7, scope: !5760)
!5768 = !DILocation(line: 676, column: 4, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 675, column: 72)
!5770 = !DILocation(line: 678, column: 5, scope: !5769)
!5771 = !DILocation(line: 678, column: 20, scope: !5769)
!5772 = !DILocation(line: 679, column: 5, scope: !5769)
!5773 = !DILocation(line: 679, column: 17, scope: !5769)
!5774 = !DILocation(line: 680, column: 3, scope: !5769)
!5775 = !DILocation(line: 681, column: 4, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 680, column: 10)
!5777 = !DILocation(line: 682, column: 11, scope: !5778)
!5778 = distinct !DILexicalBlock(scope: !5776, file: !3, line: 682, column: 8)
!5779 = !DILocation(line: 682, column: 10, scope: !5778)
!5780 = !DILocation(line: 682, column: 26, scope: !5778)
!5781 = !DILocation(line: 682, column: 8, scope: !5776)
!5782 = !DILocation(line: 684, column: 7, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5778, file: !3, line: 682, column: 42)
!5784 = !DILocation(line: 684, column: 6, scope: !5783)
!5785 = !DILocation(line: 684, column: 23, scope: !5783)
!5786 = !DILocation(line: 683, column: 5, scope: !5783)
!5787 = !DILocation(line: 685, column: 6, scope: !5783)
!5788 = !DILocation(line: 685, column: 21, scope: !5783)
!5789 = !DILocation(line: 686, column: 6, scope: !5783)
!5790 = !DILocation(line: 686, column: 21, scope: !5783)
!5791 = !DILocation(line: 687, column: 4, scope: !5783)
!5792 = !DILocation(line: 688, column: 11, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5776, file: !3, line: 688, column: 8)
!5794 = !DILocation(line: 688, column: 10, scope: !5793)
!5795 = !DILocation(line: 688, column: 23, scope: !5793)
!5796 = !DILocation(line: 688, column: 8, scope: !5776)
!5797 = !DILocation(line: 690, column: 7, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 688, column: 39)
!5799 = !DILocation(line: 690, column: 6, scope: !5798)
!5800 = !DILocation(line: 690, column: 20, scope: !5798)
!5801 = !DILocation(line: 689, column: 5, scope: !5798)
!5802 = !DILocation(line: 691, column: 6, scope: !5798)
!5803 = !DILocation(line: 691, column: 18, scope: !5798)
!5804 = !DILocation(line: 692, column: 6, scope: !5798)
!5805 = !DILocation(line: 692, column: 18, scope: !5798)
!5806 = !DILocation(line: 693, column: 4, scope: !5798)
!5807 = !DILocation(line: 646, column: 24, scope: !5568)
!5808 = !DILabel(scope: !5554, name: "done", file: !3, line: 697)
!5809 = !DILocation(line: 697, column: 1, scope: !5554)
!5810 = !DILocation(line: 699, column: 6, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 699, column: 6)
!5812 = !DILocation(line: 699, column: 18, scope: !5811)
!5813 = !DILocation(line: 699, column: 24, scope: !5811)
!5814 = !DILocation(line: 699, column: 6, scope: !5554)
!5815 = !DILocation(line: 700, column: 4, scope: !5811)
!5816 = !DILocation(line: 700, column: 19, scope: !5811)
!5817 = !DILocation(line: 700, column: 3, scope: !5811)
!5818 = !DILocation(line: 702, column: 6, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 702, column: 6)
!5820 = !DILocation(line: 702, column: 18, scope: !5819)
!5821 = !DILocation(line: 702, column: 24, scope: !5819)
!5822 = !DILocation(line: 702, column: 6, scope: !5554)
!5823 = !DILocation(line: 703, column: 4, scope: !5819)
!5824 = !DILocation(line: 703, column: 19, scope: !5819)
!5825 = !DILocation(line: 703, column: 3, scope: !5819)
!5826 = !DILocation(line: 705, column: 6, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 705, column: 6)
!5828 = !DILocation(line: 705, column: 18, scope: !5827)
!5829 = !DILocation(line: 705, column: 24, scope: !5827)
!5830 = !DILocation(line: 705, column: 6, scope: !5554)
!5831 = !DILocation(line: 706, column: 4, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 705, column: 41)
!5833 = !DILocation(line: 706, column: 19, scope: !5832)
!5834 = !DILocation(line: 707, column: 4, scope: !5832)
!5835 = !DILocation(line: 707, column: 19, scope: !5832)
!5836 = !DILocation(line: 708, column: 2, scope: !5832)
!5837 = !DILocation(line: 709, column: 1, scope: !5554)
!5838 = distinct !DISubprogram(name: "agp_v2_parse_one", scope: !3, file: !3, line: 479, type: !5555, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!5839 = !DILocation(line: 15, column: 9, scope: !5558, inlinedAt: !5840)
!5840 = distinct !DILocation(line: 518, column: 75, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 516, column: 15)
!5842 = !DILocation(line: 15, column: 9, scope: !5570, inlinedAt: !5840)
!5843 = !DILocation(line: 15, column: 9, scope: !5573, inlinedAt: !5840)
!5844 = !DILocalVariable(name: "requested_mode", arg: 1, scope: !5838, file: !3, line: 479, type: !1885)
!5845 = !DILocation(line: 479, column: 35, scope: !5838)
!5846 = !DILocalVariable(name: "bridge_agpstat", arg: 2, scope: !5838, file: !3, line: 479, type: !1885)
!5847 = !DILocation(line: 479, column: 56, scope: !5838)
!5848 = !DILocalVariable(name: "vga_agpstat", arg: 3, scope: !5838, file: !3, line: 479, type: !1885)
!5849 = !DILocation(line: 479, column: 77, scope: !5838)
!5850 = !DILocalVariable(name: "tmp", scope: !5838, file: !3, line: 481, type: !191)
!5851 = !DILocation(line: 481, column: 6, scope: !5838)
!5852 = !DILocation(line: 483, column: 7, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 483, column: 6)
!5854 = !DILocation(line: 483, column: 6, scope: !5853)
!5855 = !DILocation(line: 483, column: 22, scope: !5853)
!5856 = !DILocation(line: 483, column: 6, scope: !5838)
!5857 = !DILocation(line: 485, column: 5, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 483, column: 44)
!5859 = !DILocation(line: 485, column: 4, scope: !5858)
!5860 = !DILocation(line: 485, column: 20, scope: !5858)
!5861 = !DILocation(line: 485, column: 43, scope: !5858)
!5862 = !DILocation(line: 485, column: 42, scope: !5858)
!5863 = !DILocation(line: 484, column: 3, scope: !5858)
!5864 = !DILocation(line: 486, column: 4, scope: !5858)
!5865 = !DILocation(line: 486, column: 19, scope: !5858)
!5866 = !DILocation(line: 487, column: 2, scope: !5858)
!5867 = !DILocation(line: 499, column: 11, scope: !5838)
!5868 = !DILocation(line: 499, column: 10, scope: !5838)
!5869 = !DILocation(line: 499, column: 26, scope: !5838)
!5870 = !DILocation(line: 499, column: 2, scope: !5838)
!5871 = !DILocation(line: 501, column: 4, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 499, column: 31)
!5873 = !DILocation(line: 501, column: 19, scope: !5872)
!5874 = !DILocation(line: 502, column: 3, scope: !5872)
!5875 = !DILocation(line: 504, column: 3, scope: !5872)
!5876 = !DILocation(line: 506, column: 4, scope: !5872)
!5877 = !DILocation(line: 506, column: 19, scope: !5872)
!5878 = !DILocation(line: 507, column: 3, scope: !5872)
!5879 = !DILocation(line: 509, column: 3, scope: !5872)
!5880 = !DILocation(line: 511, column: 3, scope: !5872)
!5881 = !DILocation(line: 515, column: 9, scope: !5838)
!5882 = !DILocation(line: 515, column: 8, scope: !5838)
!5883 = !DILocation(line: 515, column: 24, scope: !5838)
!5884 = !DILocation(line: 515, column: 6, scope: !5838)
!5885 = !DILocation(line: 516, column: 10, scope: !5838)
!5886 = !DILocation(line: 516, column: 2, scope: !5838)
!5887 = !DILocation(line: 518, column: 84, scope: !5841)
!5888 = !DILocation(line: 518, column: 75, scope: !5841)
!5889 = !DILocation(line: 518, column: 4, scope: !5841)
!5890 = !DILocation(line: 519, column: 5, scope: !5841)
!5891 = !DILocation(line: 519, column: 20, scope: !5841)
!5892 = !DILocation(line: 520, column: 4, scope: !5841)
!5893 = !DILocation(line: 523, column: 4, scope: !5841)
!5894 = !DILocation(line: 525, column: 5, scope: !5841)
!5895 = !DILocation(line: 525, column: 20, scope: !5841)
!5896 = !DILocation(line: 526, column: 4, scope: !5841)
!5897 = !DILocation(line: 528, column: 4, scope: !5841)
!5898 = !DILocation(line: 532, column: 5, scope: !5841)
!5899 = !DILocation(line: 532, column: 20, scope: !5841)
!5900 = !DILocation(line: 533, column: 4, scope: !5841)
!5901 = !DILocation(line: 537, column: 10, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 537, column: 6)
!5903 = !DILocation(line: 537, column: 9, scope: !5902)
!5904 = !DILocation(line: 537, column: 25, scope: !5902)
!5905 = !DILocation(line: 537, column: 40, scope: !5902)
!5906 = !DILocation(line: 537, column: 45, scope: !5902)
!5907 = !DILocation(line: 537, column: 44, scope: !5902)
!5908 = !DILocation(line: 537, column: 57, scope: !5902)
!5909 = !DILocation(line: 537, column: 72, scope: !5902)
!5910 = !DILocation(line: 537, column: 77, scope: !5902)
!5911 = !DILocation(line: 537, column: 76, scope: !5902)
!5912 = !DILocation(line: 537, column: 92, scope: !5902)
!5913 = !DILocation(line: 537, column: 6, scope: !5838)
!5914 = !DILocation(line: 538, column: 4, scope: !5902)
!5915 = !DILocation(line: 538, column: 19, scope: !5902)
!5916 = !DILocation(line: 538, column: 3, scope: !5902)
!5917 = !DILocation(line: 541, column: 10, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 541, column: 6)
!5919 = !DILocation(line: 541, column: 9, scope: !5918)
!5920 = !DILocation(line: 541, column: 25, scope: !5918)
!5921 = !DILocation(line: 541, column: 40, scope: !5918)
!5922 = !DILocation(line: 541, column: 45, scope: !5918)
!5923 = !DILocation(line: 541, column: 44, scope: !5918)
!5924 = !DILocation(line: 541, column: 57, scope: !5918)
!5925 = !DILocation(line: 541, column: 72, scope: !5918)
!5926 = !DILocation(line: 541, column: 77, scope: !5918)
!5927 = !DILocation(line: 541, column: 76, scope: !5918)
!5928 = !DILocation(line: 541, column: 92, scope: !5918)
!5929 = !DILocation(line: 541, column: 6, scope: !5838)
!5930 = !DILocation(line: 542, column: 4, scope: !5918)
!5931 = !DILocation(line: 542, column: 19, scope: !5918)
!5932 = !DILocation(line: 542, column: 3, scope: !5918)
!5933 = !DILocation(line: 544, column: 10, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 544, column: 6)
!5935 = !DILocation(line: 544, column: 9, scope: !5934)
!5936 = !DILocation(line: 544, column: 25, scope: !5934)
!5937 = !DILocation(line: 544, column: 40, scope: !5934)
!5938 = !DILocation(line: 544, column: 45, scope: !5934)
!5939 = !DILocation(line: 544, column: 44, scope: !5934)
!5940 = !DILocation(line: 544, column: 57, scope: !5934)
!5941 = !DILocation(line: 544, column: 72, scope: !5934)
!5942 = !DILocation(line: 544, column: 77, scope: !5934)
!5943 = !DILocation(line: 544, column: 76, scope: !5934)
!5944 = !DILocation(line: 544, column: 92, scope: !5934)
!5945 = !DILocation(line: 544, column: 6, scope: !5838)
!5946 = !DILocation(line: 545, column: 4, scope: !5934)
!5947 = !DILocation(line: 545, column: 19, scope: !5934)
!5948 = !DILocation(line: 545, column: 3, scope: !5934)
!5949 = !DILocation(line: 547, column: 10, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 547, column: 6)
!5951 = !DILocation(line: 547, column: 9, scope: !5950)
!5952 = !DILocation(line: 547, column: 25, scope: !5950)
!5953 = !DILocation(line: 547, column: 40, scope: !5950)
!5954 = !DILocation(line: 547, column: 45, scope: !5950)
!5955 = !DILocation(line: 547, column: 44, scope: !5950)
!5956 = !DILocation(line: 547, column: 57, scope: !5950)
!5957 = !DILocation(line: 547, column: 72, scope: !5950)
!5958 = !DILocation(line: 547, column: 77, scope: !5950)
!5959 = !DILocation(line: 547, column: 76, scope: !5950)
!5960 = !DILocation(line: 547, column: 92, scope: !5950)
!5961 = !DILocation(line: 547, column: 6, scope: !5838)
!5962 = !DILocation(line: 548, column: 4, scope: !5950)
!5963 = !DILocation(line: 548, column: 19, scope: !5950)
!5964 = !DILocation(line: 548, column: 3, scope: !5950)
!5965 = !DILocation(line: 551, column: 7, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 551, column: 6)
!5967 = !DILocation(line: 551, column: 6, scope: !5966)
!5968 = !DILocation(line: 551, column: 22, scope: !5966)
!5969 = !DILocation(line: 551, column: 6, scope: !5838)
!5970 = !DILocation(line: 552, column: 4, scope: !5966)
!5971 = !DILocation(line: 552, column: 19, scope: !5966)
!5972 = !DILocation(line: 552, column: 3, scope: !5966)
!5973 = !DILocation(line: 554, column: 7, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 554, column: 6)
!5975 = !DILocation(line: 554, column: 6, scope: !5974)
!5976 = !DILocation(line: 554, column: 22, scope: !5974)
!5977 = !DILocation(line: 554, column: 6, scope: !5838)
!5978 = !DILocation(line: 555, column: 4, scope: !5974)
!5979 = !DILocation(line: 555, column: 19, scope: !5974)
!5980 = !DILocation(line: 555, column: 3, scope: !5974)
!5981 = !DILocation(line: 557, column: 7, scope: !5982)
!5982 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 557, column: 6)
!5983 = !DILocation(line: 557, column: 6, scope: !5982)
!5984 = !DILocation(line: 557, column: 22, scope: !5982)
!5985 = !DILocation(line: 557, column: 6, scope: !5838)
!5986 = !DILocation(line: 558, column: 4, scope: !5982)
!5987 = !DILocation(line: 558, column: 19, scope: !5982)
!5988 = !DILocation(line: 558, column: 3, scope: !5982)
!5989 = !DILocation(line: 561, column: 6, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 561, column: 6)
!5991 = !DILocation(line: 561, column: 18, scope: !5990)
!5992 = !DILocation(line: 561, column: 24, scope: !5990)
!5993 = !DILocation(line: 561, column: 6, scope: !5838)
!5994 = !DILocation(line: 562, column: 4, scope: !5990)
!5995 = !DILocation(line: 562, column: 19, scope: !5990)
!5996 = !DILocation(line: 562, column: 3, scope: !5990)
!5997 = !DILocation(line: 564, column: 6, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 564, column: 6)
!5999 = !DILocation(line: 564, column: 18, scope: !5998)
!6000 = !DILocation(line: 564, column: 24, scope: !5998)
!6001 = !DILocation(line: 564, column: 6, scope: !5838)
!6002 = !DILocation(line: 565, column: 4, scope: !5998)
!6003 = !DILocation(line: 565, column: 19, scope: !5998)
!6004 = !DILocation(line: 565, column: 3, scope: !5998)
!6005 = !DILocation(line: 567, column: 6, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 567, column: 6)
!6007 = !DILocation(line: 567, column: 18, scope: !6006)
!6008 = !DILocation(line: 567, column: 24, scope: !6006)
!6009 = !DILocation(line: 567, column: 6, scope: !5838)
!6010 = !DILocation(line: 568, column: 4, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6006, file: !3, line: 567, column: 41)
!6012 = !DILocation(line: 568, column: 19, scope: !6011)
!6013 = !DILocation(line: 569, column: 4, scope: !6011)
!6014 = !DILocation(line: 569, column: 19, scope: !6011)
!6015 = !DILocation(line: 570, column: 2, scope: !6011)
!6016 = !DILocation(line: 573, column: 7, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 573, column: 6)
!6018 = !DILocation(line: 573, column: 6, scope: !6017)
!6019 = !DILocation(line: 573, column: 22, scope: !6017)
!6020 = !DILocation(line: 573, column: 6, scope: !5838)
!6021 = !DILocation(line: 574, column: 4, scope: !6017)
!6022 = !DILocation(line: 574, column: 19, scope: !6017)
!6023 = !DILocation(line: 574, column: 3, scope: !6017)
!6024 = !DILocation(line: 575, column: 1, scope: !5838)
!6025 = distinct !DISubprogram(name: "agp_device_command", scope: !3, file: !3, line: 767, type: !6026, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6026 = !DISubroutineType(types: !6027)
!6027 = !{null, !191, !400}
!6028 = !DILocalVariable(name: "bridge_agpstat", arg: 1, scope: !6025, file: !3, line: 767, type: !191)
!6029 = !DILocation(line: 767, column: 29, scope: !6025)
!6030 = !DILocalVariable(name: "agp_v3", arg: 2, scope: !6025, file: !3, line: 767, type: !400)
!6031 = !DILocation(line: 767, column: 50, scope: !6025)
!6032 = !DILocalVariable(name: "device", scope: !6025, file: !3, line: 769, type: !3286)
!6033 = !DILocation(line: 769, column: 18, scope: !6025)
!6034 = !DILocalVariable(name: "mode", scope: !6025, file: !3, line: 770, type: !165)
!6035 = !DILocation(line: 770, column: 6, scope: !6025)
!6036 = !DILocation(line: 772, column: 9, scope: !6025)
!6037 = !DILocation(line: 772, column: 24, scope: !6025)
!6038 = !DILocation(line: 772, column: 7, scope: !6025)
!6039 = !DILocation(line: 773, column: 6, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 773, column: 6)
!6041 = !DILocation(line: 773, column: 6, scope: !6025)
!6042 = !DILocation(line: 774, column: 8, scope: !6040)
!6043 = !DILocation(line: 774, column: 3, scope: !6040)
!6044 = !DILocation(line: 776, column: 2, scope: !6025)
!6045 = !DILocalVariable(name: "agp", scope: !6046, file: !3, line: 777, type: !169)
!6046 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 776, column: 27)
!6047 = !DILocation(line: 777, column: 6, scope: !6046)
!6048 = !DILocation(line: 777, column: 32, scope: !6046)
!6049 = !DILocation(line: 777, column: 12, scope: !6046)
!6050 = !DILocation(line: 778, column: 8, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 778, column: 7)
!6052 = !DILocation(line: 778, column: 7, scope: !6046)
!6053 = !DILocation(line: 779, column: 4, scope: !6051)
!6054 = distinct !{!6054, !6044, !6055}
!6055 = !DILocation(line: 784, column: 2, scope: !6025)
!6056 = !DILocation(line: 781, column: 3, scope: !6046)
!6057 = !DILocation(line: 783, column: 26, scope: !6046)
!6058 = !DILocation(line: 783, column: 34, scope: !6046)
!6059 = !DILocation(line: 783, column: 38, scope: !6046)
!6060 = !DILocation(line: 783, column: 57, scope: !6046)
!6061 = !DILocation(line: 783, column: 3, scope: !6046)
!6062 = !DILocation(line: 785, column: 1, scope: !6025)
!6063 = distinct !DISubprogram(name: "get_agp_version", scope: !3, file: !3, line: 789, type: !6064, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6064 = !DISubroutineType(types: !6065)
!6065 = !{null, !3199}
!6066 = !DILocalVariable(name: "bridge", arg: 1, scope: !6063, file: !3, line: 789, type: !3199)
!6067 = !DILocation(line: 789, column: 46, scope: !6063)
!6068 = !DILocalVariable(name: "ncapid", scope: !6063, file: !3, line: 791, type: !191)
!6069 = !DILocation(line: 791, column: 6, scope: !6063)
!6070 = !DILocation(line: 794, column: 6, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 794, column: 6)
!6072 = !DILocation(line: 794, column: 14, scope: !6071)
!6073 = !DILocation(line: 794, column: 28, scope: !6071)
!6074 = !DILocation(line: 794, column: 6, scope: !6063)
!6075 = !DILocation(line: 795, column: 3, scope: !6071)
!6076 = !DILocation(line: 797, column: 24, scope: !6063)
!6077 = !DILocation(line: 797, column: 32, scope: !6063)
!6078 = !DILocation(line: 797, column: 37, scope: !6063)
!6079 = !DILocation(line: 797, column: 45, scope: !6063)
!6080 = !DILocation(line: 797, column: 2, scope: !6063)
!6081 = !DILocation(line: 798, column: 27, scope: !6063)
!6082 = !DILocation(line: 798, column: 34, scope: !6063)
!6083 = !DILocation(line: 798, column: 62, scope: !6063)
!6084 = !DILocation(line: 798, column: 26, scope: !6063)
!6085 = !DILocation(line: 798, column: 2, scope: !6063)
!6086 = !DILocation(line: 798, column: 10, scope: !6063)
!6087 = !DILocation(line: 798, column: 24, scope: !6063)
!6088 = !DILocation(line: 799, column: 27, scope: !6063)
!6089 = !DILocation(line: 799, column: 34, scope: !6063)
!6090 = !DILocation(line: 799, column: 62, scope: !6063)
!6091 = !DILocation(line: 799, column: 26, scope: !6063)
!6092 = !DILocation(line: 799, column: 2, scope: !6063)
!6093 = !DILocation(line: 799, column: 10, scope: !6063)
!6094 = !DILocation(line: 799, column: 24, scope: !6063)
!6095 = !DILocation(line: 800, column: 1, scope: !6063)
!6096 = distinct !DISubprogram(name: "agp_generic_enable", scope: !3, file: !3, line: 804, type: !3234, scopeLine: 805, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6097 = !DILocalVariable(name: "bridge", arg: 1, scope: !6096, file: !3, line: 804, type: !3199)
!6098 = !DILocation(line: 804, column: 49, scope: !6096)
!6099 = !DILocalVariable(name: "requested_mode", arg: 2, scope: !6096, file: !3, line: 804, type: !191)
!6100 = !DILocation(line: 804, column: 61, scope: !6096)
!6101 = !DILocalVariable(name: "bridge_agpstat", scope: !6096, file: !3, line: 806, type: !191)
!6102 = !DILocation(line: 806, column: 6, scope: !6096)
!6103 = !DILocalVariable(name: "temp", scope: !6096, file: !3, line: 806, type: !191)
!6104 = !DILocation(line: 806, column: 22, scope: !6096)
!6105 = !DILocation(line: 808, column: 18, scope: !6096)
!6106 = !DILocation(line: 808, column: 2, scope: !6096)
!6107 = !DILocation(line: 810, column: 2, scope: !6096)
!6108 = !DILocation(line: 813, column: 24, scope: !6096)
!6109 = !DILocation(line: 813, column: 36, scope: !6096)
!6110 = !DILocation(line: 814, column: 9, scope: !6096)
!6111 = !DILocation(line: 814, column: 21, scope: !6096)
!6112 = !DILocation(line: 814, column: 28, scope: !6096)
!6113 = !DILocation(line: 813, column: 2, scope: !6096)
!6114 = !DILocation(line: 816, column: 45, scope: !6096)
!6115 = !DILocation(line: 816, column: 57, scope: !6096)
!6116 = !DILocation(line: 816, column: 73, scope: !6096)
!6117 = !DILocation(line: 816, column: 19, scope: !6096)
!6118 = !DILocation(line: 816, column: 17, scope: !6096)
!6119 = !DILocation(line: 817, column: 6, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 817, column: 6)
!6121 = !DILocation(line: 817, column: 21, scope: !6120)
!6122 = !DILocation(line: 817, column: 6, scope: !6096)
!6123 = !DILocation(line: 819, column: 3, scope: !6120)
!6124 = !DILocation(line: 821, column: 17, scope: !6096)
!6125 = !DILocation(line: 824, column: 6, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 824, column: 6)
!6127 = !DILocation(line: 824, column: 14, scope: !6126)
!6128 = !DILocation(line: 824, column: 28, scope: !6126)
!6129 = !DILocation(line: 824, column: 6, scope: !6096)
!6130 = !DILocation(line: 825, column: 7, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 825, column: 7)
!6132 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 824, column: 34)
!6133 = !DILocation(line: 825, column: 15, scope: !6131)
!6134 = !DILocation(line: 825, column: 20, scope: !6131)
!6135 = !DILocation(line: 825, column: 7, scope: !6132)
!6136 = !DILocation(line: 827, column: 8, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6138, file: !3, line: 827, column: 8)
!6138 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 825, column: 40)
!6139 = !DILocation(line: 827, column: 16, scope: !6137)
!6140 = !DILocation(line: 827, column: 30, scope: !6137)
!6141 = !DILocation(line: 827, column: 8, scope: !6138)
!6142 = !DILocation(line: 828, column: 20, scope: !6137)
!6143 = !DILocation(line: 828, column: 5, scope: !6137)
!6144 = !DILocation(line: 829, column: 23, scope: !6138)
!6145 = !DILocation(line: 829, column: 4, scope: !6138)
!6146 = !DILocation(line: 830, column: 4, scope: !6138)
!6147 = !DILocation(line: 833, column: 22, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 831, column: 10)
!6149 = !DILocation(line: 834, column: 29, scope: !6148)
!6150 = !DILocation(line: 834, column: 37, scope: !6148)
!6151 = !DILocation(line: 835, column: 6, scope: !6148)
!6152 = !DILocation(line: 835, column: 14, scope: !6148)
!6153 = !DILocation(line: 835, column: 20, scope: !6148)
!6154 = !DILocation(line: 834, column: 7, scope: !6148)
!6155 = !DILocation(line: 836, column: 12, scope: !6148)
!6156 = !DILocation(line: 837, column: 30, scope: !6148)
!6157 = !DILocation(line: 837, column: 38, scope: !6148)
!6158 = !DILocation(line: 838, column: 6, scope: !6148)
!6159 = !DILocation(line: 838, column: 14, scope: !6148)
!6160 = !DILocation(line: 838, column: 20, scope: !6148)
!6161 = !DILocation(line: 838, column: 30, scope: !6148)
!6162 = !DILocation(line: 837, column: 7, scope: !6148)
!6163 = !DILocation(line: 840, column: 7, scope: !6148)
!6164 = !DILocation(line: 842, column: 2, scope: !6132)
!6165 = !DILocation(line: 845, column: 21, scope: !6096)
!6166 = !DILocation(line: 845, column: 2, scope: !6096)
!6167 = !DILocation(line: 846, column: 1, scope: !6096)
!6168 = distinct !DISubprogram(name: "agp_generic_create_gatt_table", scope: !3, file: !3, line: 850, type: !3249, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6169 = !DILocalVariable(name: "page", arg: 1, scope: !6170, file: !119, line: 354, type: !207)
!6170 = distinct !DISubprogram(name: "ClearPageReserved", scope: !119, file: !119, line: 354, type: !2907, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6171 = !DILocation(line: 354, column: 1, scope: !6170, inlinedAt: !6172)
!6172 = distinct !DILocation(line: 950, column: 4, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 949, column: 3)
!6174 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 949, column: 3)
!6175 = distinct !DILexicalBlock(scope: !6176, file: !3, line: 948, column: 34)
!6176 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 948, column: 6)
!6177 = !DILocalVariable(name: "page", arg: 1, scope: !6178, file: !119, line: 354, type: !207)
!6178 = distinct !DISubprogram(name: "SetPageReserved", scope: !119, file: !119, line: 354, type: !2907, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6179 = !DILocation(line: 354, column: 1, scope: !6178, inlinedAt: !6180)
!6180 = distinct !DILocation(line: 931, column: 3, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6182, file: !3, line: 930, column: 2)
!6182 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 930, column: 2)
!6183 = !DILocalVariable(name: "bridge", arg: 1, scope: !6168, file: !3, line: 850, type: !3199)
!6184 = !DILocation(line: 850, column: 59, scope: !6168)
!6185 = !DILocalVariable(name: "table", scope: !6168, file: !3, line: 852, type: !205)
!6186 = !DILocation(line: 852, column: 8, scope: !6168)
!6187 = !DILocalVariable(name: "table_end", scope: !6168, file: !3, line: 853, type: !205)
!6188 = !DILocation(line: 853, column: 8, scope: !6168)
!6189 = !DILocalVariable(name: "page_order", scope: !6168, file: !3, line: 854, type: !165)
!6190 = !DILocation(line: 854, column: 6, scope: !6168)
!6191 = !DILocalVariable(name: "num_entries", scope: !6168, file: !3, line: 855, type: !165)
!6192 = !DILocation(line: 855, column: 6, scope: !6168)
!6193 = !DILocalVariable(name: "i", scope: !6168, file: !3, line: 856, type: !165)
!6194 = !DILocation(line: 856, column: 6, scope: !6168)
!6195 = !DILocalVariable(name: "temp", scope: !6168, file: !3, line: 857, type: !160)
!6196 = !DILocation(line: 857, column: 8, scope: !6168)
!6197 = !DILocalVariable(name: "page", scope: !6168, file: !3, line: 858, type: !207)
!6198 = !DILocation(line: 858, column: 15, scope: !6168)
!6199 = !DILocation(line: 861, column: 6, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 861, column: 6)
!6201 = !DILocation(line: 861, column: 14, scope: !6200)
!6202 = !DILocation(line: 861, column: 22, scope: !6200)
!6203 = !DILocation(line: 861, column: 32, scope: !6200)
!6204 = !DILocation(line: 861, column: 6, scope: !6168)
!6205 = !DILocation(line: 862, column: 3, scope: !6200)
!6206 = !DILocation(line: 864, column: 8, scope: !6168)
!6207 = !DILocation(line: 865, column: 6, scope: !6168)
!6208 = !DILocation(line: 865, column: 14, scope: !6168)
!6209 = !DILocation(line: 865, column: 4, scope: !6168)
!6210 = !DILocation(line: 866, column: 9, scope: !6168)
!6211 = !DILocation(line: 866, column: 17, scope: !6168)
!6212 = !DILocation(line: 866, column: 7, scope: !6168)
!6213 = !DILocation(line: 867, column: 27, scope: !6168)
!6214 = !DILocation(line: 867, column: 13, scope: !6168)
!6215 = !DILocation(line: 869, column: 6, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 869, column: 6)
!6217 = !DILocation(line: 869, column: 14, scope: !6216)
!6218 = !DILocation(line: 869, column: 22, scope: !6216)
!6219 = !DILocation(line: 869, column: 32, scope: !6216)
!6220 = !DILocation(line: 869, column: 6, scope: !6168)
!6221 = !DILocation(line: 870, column: 3, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 869, column: 52)
!6223 = !DILocation(line: 871, column: 12, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6222, file: !3, line: 870, column: 6)
!6225 = !DILocation(line: 871, column: 20, scope: !6224)
!6226 = !DILocation(line: 871, column: 28, scope: !6224)
!6227 = !DILocation(line: 871, column: 4, scope: !6224)
!6228 = !DILocation(line: 874, column: 9, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 871, column: 39)
!6230 = !DILocation(line: 874, column: 25, scope: !6229)
!6231 = !DILocation(line: 873, column: 16, scope: !6229)
!6232 = !DILocation(line: 876, column: 9, scope: !6229)
!6233 = !DILocation(line: 876, column: 25, scope: !6229)
!6234 = !DILocation(line: 875, column: 17, scope: !6229)
!6235 = !DILocation(line: 877, column: 5, scope: !6229)
!6236 = !DILocation(line: 879, column: 18, scope: !6229)
!6237 = !DILocation(line: 879, column: 35, scope: !6229)
!6238 = !DILocation(line: 879, column: 16, scope: !6229)
!6239 = !DILocation(line: 880, column: 19, scope: !6229)
!6240 = !DILocation(line: 880, column: 36, scope: !6229)
!6241 = !DILocation(line: 880, column: 17, scope: !6229)
!6242 = !DILocation(line: 881, column: 5, scope: !6229)
!6243 = !DILocation(line: 883, column: 18, scope: !6229)
!6244 = !DILocation(line: 883, column: 35, scope: !6229)
!6245 = !DILocation(line: 883, column: 16, scope: !6229)
!6246 = !DILocation(line: 884, column: 19, scope: !6229)
!6247 = !DILocation(line: 884, column: 36, scope: !6229)
!6248 = !DILocation(line: 884, column: 17, scope: !6229)
!6249 = !DILocation(line: 885, column: 5, scope: !6229)
!6250 = !DILocation(line: 890, column: 30, scope: !6229)
!6251 = !DILocation(line: 890, column: 16, scope: !6229)
!6252 = !DILocation(line: 891, column: 5, scope: !6229)
!6253 = !DILocation(line: 894, column: 12, scope: !6224)
!6254 = !DILocation(line: 894, column: 10, scope: !6224)
!6255 = !DILocation(line: 896, column: 8, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 896, column: 8)
!6257 = !DILocation(line: 896, column: 14, scope: !6256)
!6258 = !DILocation(line: 896, column: 8, scope: !6224)
!6259 = !DILocation(line: 897, column: 6, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 896, column: 23)
!6261 = !DILocation(line: 898, column: 13, scope: !6260)
!6262 = !DILocation(line: 898, column: 21, scope: !6260)
!6263 = !DILocation(line: 898, column: 29, scope: !6260)
!6264 = !DILocation(line: 898, column: 5, scope: !6260)
!6265 = !DILocation(line: 900, column: 29, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 898, column: 40)
!6267 = !DILocation(line: 900, column: 6, scope: !6266)
!6268 = !DILocation(line: 900, column: 14, scope: !6266)
!6269 = !DILocation(line: 900, column: 27, scope: !6266)
!6270 = !DILocation(line: 901, column: 6, scope: !6266)
!6271 = !DILocation(line: 903, column: 29, scope: !6266)
!6272 = !DILocation(line: 903, column: 6, scope: !6266)
!6273 = !DILocation(line: 903, column: 14, scope: !6266)
!6274 = !DILocation(line: 903, column: 27, scope: !6266)
!6275 = !DILocation(line: 904, column: 6, scope: !6266)
!6276 = !DILocation(line: 906, column: 29, scope: !6266)
!6277 = !DILocation(line: 906, column: 6, scope: !6266)
!6278 = !DILocation(line: 906, column: 14, scope: !6266)
!6279 = !DILocation(line: 906, column: 27, scope: !6266)
!6280 = !DILocation(line: 907, column: 6, scope: !6266)
!6281 = !DILocation(line: 912, column: 6, scope: !6266)
!6282 = !DILocation(line: 914, column: 12, scope: !6260)
!6283 = !DILocation(line: 914, column: 20, scope: !6260)
!6284 = !DILocation(line: 914, column: 10, scope: !6260)
!6285 = !DILocation(line: 915, column: 4, scope: !6260)
!6286 = !DILocation(line: 916, column: 33, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 915, column: 11)
!6288 = !DILocation(line: 916, column: 5, scope: !6287)
!6289 = !DILocation(line: 916, column: 13, scope: !6287)
!6290 = !DILocation(line: 916, column: 31, scope: !6287)
!6291 = !DILocation(line: 918, column: 3, scope: !6224)
!6292 = !DILocation(line: 918, column: 13, scope: !6222)
!6293 = !DILocation(line: 918, column: 19, scope: !6222)
!6294 = !DILocation(line: 918, column: 23, scope: !6222)
!6295 = !DILocation(line: 918, column: 27, scope: !6222)
!6296 = !DILocation(line: 918, column: 35, scope: !6222)
!6297 = !DILocation(line: 918, column: 43, scope: !6222)
!6298 = !DILocation(line: 918, column: 25, scope: !6222)
!6299 = !DILocation(line: 0, scope: !6222)
!6300 = distinct !{!6300, !6221, !6301}
!6301 = !DILocation(line: 918, column: 62, scope: !6222)
!6302 = !DILocation(line: 919, column: 2, scope: !6222)
!6303 = !DILocation(line: 920, column: 49, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 919, column: 9)
!6305 = !DILocation(line: 920, column: 17, scope: !6304)
!6306 = !DILocation(line: 920, column: 56, scope: !6304)
!6307 = !DILocation(line: 920, column: 14, scope: !6304)
!6308 = !DILocation(line: 921, column: 50, scope: !6304)
!6309 = !DILocation(line: 921, column: 18, scope: !6304)
!6310 = !DILocation(line: 921, column: 57, scope: !6304)
!6311 = !DILocation(line: 921, column: 15, scope: !6304)
!6312 = !DILocation(line: 922, column: 11, scope: !6304)
!6313 = !DILocation(line: 922, column: 9, scope: !6304)
!6314 = !DILocation(line: 925, column: 6, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 925, column: 6)
!6316 = !DILocation(line: 925, column: 12, scope: !6315)
!6317 = !DILocation(line: 925, column: 6, scope: !6168)
!6318 = !DILocation(line: 926, column: 3, scope: !6315)
!6319 = !DILocation(line: 928, column: 14, scope: !6168)
!6320 = !DILocation(line: 928, column: 42, scope: !6168)
!6321 = !DILocation(line: 928, column: 39, scope: !6168)
!6322 = !DILocation(line: 928, column: 36, scope: !6168)
!6323 = !DILocation(line: 928, column: 34, scope: !6168)
!6324 = !DILocation(line: 928, column: 55, scope: !6168)
!6325 = !DILocation(line: 928, column: 20, scope: !6168)
!6326 = !DILocation(line: 928, column: 12, scope: !6168)
!6327 = !DILocation(line: 930, column: 14, scope: !6182)
!6328 = !DILocation(line: 930, column: 12, scope: !6182)
!6329 = !DILocation(line: 930, column: 7, scope: !6182)
!6330 = !DILocation(line: 930, column: 35, scope: !6181)
!6331 = !DILocation(line: 930, column: 43, scope: !6181)
!6332 = !DILocation(line: 930, column: 40, scope: !6181)
!6333 = !DILocation(line: 930, column: 2, scope: !6182)
!6334 = !DILocation(line: 931, column: 19, scope: !6181)
!6335 = !DILocation(line: 354, column: 1, scope: !6336, inlinedAt: !6180)
!6336 = distinct !DILexicalBlock(scope: !6337, file: !119, line: 354, column: 1)
!6337 = distinct !DILexicalBlock(scope: !6178, file: !119, line: 354, column: 1)
!6338 = !DILocation(line: 354, column: 1, scope: !6337, inlinedAt: !6180)
!6339 = !DILocation(line: 931, column: 3, scope: !6181)
!6340 = !DILocation(line: 930, column: 72, scope: !6181)
!6341 = !DILocation(line: 930, column: 2, scope: !6181)
!6342 = distinct !{!6342, !6333, !6343}
!6343 = !DILocation(line: 931, column: 23, scope: !6182)
!6344 = !DILocation(line: 933, column: 36, scope: !6168)
!6345 = !DILocation(line: 933, column: 28, scope: !6168)
!6346 = !DILocation(line: 933, column: 2, scope: !6168)
!6347 = !DILocation(line: 933, column: 10, scope: !6168)
!6348 = !DILocation(line: 933, column: 26, scope: !6168)
!6349 = !DILocation(line: 934, column: 27, scope: !6168)
!6350 = !DILocation(line: 934, column: 19, scope: !6168)
!6351 = !DILocation(line: 934, column: 17, scope: !6168)
!6352 = !DILocation(line: 936, column: 2, scope: !6168)
!6353 = !DILocation(line: 936, column: 10, scope: !6168)
!6354 = !DILocation(line: 936, column: 18, scope: !6168)
!6355 = !DILocation(line: 938, column: 35, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 938, column: 6)
!6357 = !DILocation(line: 938, column: 20, scope: !6356)
!6358 = !DILocation(line: 938, column: 47, scope: !6356)
!6359 = !DILocation(line: 938, column: 44, scope: !6356)
!6360 = !DILocation(line: 938, column: 6, scope: !6356)
!6361 = !DILocation(line: 938, column: 6, scope: !6168)
!6362 = !DILocation(line: 939, column: 3, scope: !6356)
!6363 = !DILocation(line: 941, column: 38, scope: !6168)
!6364 = !DILocation(line: 941, column: 23, scope: !6168)
!6365 = !DILocation(line: 941, column: 2, scope: !6168)
!6366 = !DILocation(line: 941, column: 10, scope: !6168)
!6367 = !DILocation(line: 941, column: 21, scope: !6168)
!6368 = !DILocation(line: 948, column: 6, scope: !6176)
!6369 = !DILocation(line: 948, column: 14, scope: !6176)
!6370 = !DILocation(line: 948, column: 25, scope: !6176)
!6371 = !DILocation(line: 948, column: 6, scope: !6168)
!6372 = !DILocation(line: 949, column: 15, scope: !6174)
!6373 = !DILocation(line: 949, column: 13, scope: !6174)
!6374 = !DILocation(line: 949, column: 8, scope: !6174)
!6375 = !DILocation(line: 949, column: 36, scope: !6173)
!6376 = !DILocation(line: 949, column: 44, scope: !6173)
!6377 = !DILocation(line: 949, column: 41, scope: !6173)
!6378 = !DILocation(line: 949, column: 3, scope: !6174)
!6379 = !DILocation(line: 950, column: 22, scope: !6173)
!6380 = !DILocation(line: 354, column: 1, scope: !6381, inlinedAt: !6172)
!6381 = distinct !DILexicalBlock(scope: !6382, file: !119, line: 354, column: 1)
!6382 = distinct !DILexicalBlock(scope: !6170, file: !119, line: 354, column: 1)
!6383 = !DILocation(line: 354, column: 1, scope: !6382, inlinedAt: !6172)
!6384 = !DILocation(line: 950, column: 4, scope: !6173)
!6385 = !DILocation(line: 949, column: 73, scope: !6173)
!6386 = !DILocation(line: 949, column: 3, scope: !6173)
!6387 = distinct !{!6387, !6378, !6388}
!6388 = !DILocation(line: 950, column: 26, scope: !6174)
!6389 = !DILocation(line: 952, column: 3, scope: !6175)
!6390 = !DILocation(line: 954, column: 3, scope: !6175)
!6391 = !DILocation(line: 956, column: 39, scope: !6168)
!6392 = !DILocation(line: 956, column: 47, scope: !6168)
!6393 = !DILocation(line: 956, column: 26, scope: !6168)
!6394 = !DILocation(line: 956, column: 2, scope: !6168)
!6395 = !DILocation(line: 956, column: 10, scope: !6168)
!6396 = !DILocation(line: 956, column: 24, scope: !6168)
!6397 = !DILocation(line: 959, column: 9, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 959, column: 2)
!6399 = !DILocation(line: 959, column: 7, scope: !6398)
!6400 = !DILocation(line: 959, column: 14, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 959, column: 2)
!6402 = !DILocation(line: 959, column: 18, scope: !6401)
!6403 = !DILocation(line: 959, column: 16, scope: !6401)
!6404 = !DILocation(line: 959, column: 2, scope: !6398)
!6405 = !DILocation(line: 960, column: 10, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 959, column: 36)
!6407 = !DILocation(line: 960, column: 18, scope: !6406)
!6408 = !DILocation(line: 960, column: 32, scope: !6406)
!6409 = !DILocation(line: 960, column: 40, scope: !6406)
!6410 = !DILocation(line: 960, column: 51, scope: !6406)
!6411 = !DILocation(line: 960, column: 50, scope: !6406)
!6412 = !DILocation(line: 960, column: 3, scope: !6406)
!6413 = !DILocation(line: 961, column: 9, scope: !6406)
!6414 = !DILocation(line: 961, column: 17, scope: !6406)
!6415 = !DILocation(line: 961, column: 28, scope: !6406)
!6416 = !DILocation(line: 961, column: 27, scope: !6406)
!6417 = !DILocation(line: 961, column: 3, scope: !6406)
!6418 = !DILocation(line: 962, column: 2, scope: !6406)
!6419 = !DILocation(line: 959, column: 32, scope: !6401)
!6420 = !DILocation(line: 959, column: 2, scope: !6401)
!6421 = distinct !{!6421, !6404, !6422}
!6422 = !DILocation(line: 962, column: 2, scope: !6398)
!6423 = !DILocation(line: 964, column: 2, scope: !6168)
!6424 = !DILocation(line: 965, column: 1, scope: !6168)
!6425 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !6426, file: !6426, line: 18, type: !6427, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6426 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!6427 = !DISubroutineType(types: !6428)
!6428 = !{!212, !212}
!6429 = !DILocalVariable(name: "x", arg: 1, scope: !6425, file: !6426, line: 18, type: !212)
!6430 = !DILocation(line: 18, column: 63, scope: !6425)
!6431 = !DILocalVariable(name: "y", scope: !6425, file: !6426, line: 20, type: !212)
!6432 = !DILocation(line: 20, column: 16, scope: !6425)
!6433 = !DILocation(line: 20, column: 20, scope: !6425)
!6434 = !DILocation(line: 20, column: 22, scope: !6425)
!6435 = !DILocation(line: 23, column: 6, scope: !6425)
!6436 = !DILocation(line: 23, column: 12, scope: !6425)
!6437 = !DILocation(line: 23, column: 16, scope: !6425)
!6438 = !DILocation(line: 23, column: 14, scope: !6425)
!6439 = !DILocation(line: 23, column: 11, scope: !6425)
!6440 = !DILocation(line: 23, column: 21, scope: !6425)
!6441 = !DILocation(line: 23, column: 55, scope: !6425)
!6442 = !DILocation(line: 23, column: 53, scope: !6425)
!6443 = !DILocation(line: 23, column: 8, scope: !6425)
!6444 = !DILocation(line: 23, column: 4, scope: !6425)
!6445 = !DILocation(line: 25, column: 9, scope: !6425)
!6446 = !DILocation(line: 25, column: 2, scope: !6425)
!6447 = distinct !DISubprogram(name: "virt_to_phys", scope: !6448, file: !6448, line: 129, type: !6449, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6448 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!6449 = !DISubroutineType(types: !6450)
!6450 = !{!2373, !6451}
!6451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64)
!6452 = !DILocalVariable(name: "address", arg: 1, scope: !6447, file: !6448, line: 129, type: !6451)
!6453 = !DILocation(line: 129, column: 55, scope: !6447)
!6454 = !DILocation(line: 131, column: 9, scope: !6447)
!6455 = !DILocation(line: 131, column: 2, scope: !6447)
!6456 = distinct !DISubprogram(name: "writel", scope: !6448, file: !6448, line: 67, type: !6457, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6457 = !DISubroutineType(types: !6458)
!6458 = !{null, !7, !6451}
!6459 = !DILocalVariable(name: "val", arg: 1, scope: !6456, file: !6448, line: 67, type: !7)
!6460 = !DILocation(line: 67, column: 1, scope: !6456)
!6461 = !DILocalVariable(name: "addr", arg: 2, scope: !6456, file: !6448, line: 67, type: !6451)
!6462 = !{i32 -2143397159}
!6463 = distinct !DISubprogram(name: "readl", scope: !6448, file: !6448, line: 59, type: !6464, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6464 = !DISubroutineType(types: !6465)
!6465 = !{!7, !3153}
!6466 = !DILocalVariable(name: "addr", arg: 1, scope: !6463, file: !6448, line: 59, type: !3153)
!6467 = !DILocation(line: 59, column: 1, scope: !6463)
!6468 = !DILocalVariable(name: "ret", scope: !6463, file: !6448, line: 59, type: !7)
!6469 = !{i32 -2143399552}
!6470 = distinct !DISubprogram(name: "agp_generic_free_gatt_table", scope: !3, file: !3, line: 968, type: !3249, scopeLine: 969, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6471 = !DILocation(line: 354, column: 1, scope: !6170, inlinedAt: !6472)
!6472 = distinct !DILocation(line: 1011, column: 3, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 1010, column: 2)
!6474 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 1010, column: 2)
!6475 = !DILocalVariable(name: "bridge", arg: 1, scope: !6470, file: !3, line: 968, type: !3199)
!6476 = !DILocation(line: 968, column: 57, scope: !6470)
!6477 = !DILocalVariable(name: "page_order", scope: !6470, file: !3, line: 970, type: !165)
!6478 = !DILocation(line: 970, column: 6, scope: !6470)
!6479 = !DILocalVariable(name: "table", scope: !6470, file: !3, line: 971, type: !205)
!6480 = !DILocation(line: 971, column: 8, scope: !6470)
!6481 = !DILocalVariable(name: "table_end", scope: !6470, file: !3, line: 971, type: !205)
!6482 = !DILocation(line: 971, column: 16, scope: !6470)
!6483 = !DILocalVariable(name: "temp", scope: !6470, file: !3, line: 972, type: !160)
!6484 = !DILocation(line: 972, column: 8, scope: !6470)
!6485 = !DILocalVariable(name: "page", scope: !6470, file: !3, line: 973, type: !207)
!6486 = !DILocation(line: 973, column: 15, scope: !6470)
!6487 = !DILocation(line: 975, column: 9, scope: !6470)
!6488 = !DILocation(line: 975, column: 17, scope: !6470)
!6489 = !DILocation(line: 975, column: 7, scope: !6470)
!6490 = !DILocation(line: 977, column: 10, scope: !6470)
!6491 = !DILocation(line: 977, column: 18, scope: !6470)
!6492 = !DILocation(line: 977, column: 26, scope: !6470)
!6493 = !DILocation(line: 977, column: 2, scope: !6470)
!6494 = !DILocation(line: 979, column: 16, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6470, file: !3, line: 977, column: 37)
!6496 = !DILocation(line: 979, column: 32, scope: !6495)
!6497 = !DILocation(line: 979, column: 14, scope: !6495)
!6498 = !DILocation(line: 980, column: 3, scope: !6495)
!6499 = !DILocation(line: 982, column: 16, scope: !6495)
!6500 = !DILocation(line: 982, column: 33, scope: !6495)
!6501 = !DILocation(line: 982, column: 14, scope: !6495)
!6502 = !DILocation(line: 983, column: 3, scope: !6495)
!6503 = !DILocation(line: 985, column: 16, scope: !6495)
!6504 = !DILocation(line: 985, column: 33, scope: !6495)
!6505 = !DILocation(line: 985, column: 14, scope: !6495)
!6506 = !DILocation(line: 986, column: 3, scope: !6495)
!6507 = !DILocation(line: 988, column: 16, scope: !6495)
!6508 = !DILocation(line: 988, column: 34, scope: !6495)
!6509 = !DILocation(line: 988, column: 14, scope: !6495)
!6510 = !DILocation(line: 989, column: 3, scope: !6495)
!6511 = !DILocation(line: 992, column: 3, scope: !6495)
!6512 = !DILocation(line: 994, column: 14, scope: !6495)
!6513 = !DILocation(line: 995, column: 3, scope: !6495)
!6514 = !DILocation(line: 1003, column: 31, scope: !6470)
!6515 = !DILocation(line: 1003, column: 39, scope: !6470)
!6516 = !DILocation(line: 1003, column: 16, scope: !6470)
!6517 = !DILocation(line: 1003, column: 56, scope: !6470)
!6518 = !DILocation(line: 1003, column: 53, scope: !6470)
!6519 = !DILocation(line: 1003, column: 2, scope: !6470)
!6520 = !DILocation(line: 1007, column: 19, scope: !6470)
!6521 = !DILocation(line: 1007, column: 27, scope: !6470)
!6522 = !DILocation(line: 1007, column: 10, scope: !6470)
!6523 = !DILocation(line: 1007, column: 8, scope: !6470)
!6524 = !DILocation(line: 1008, column: 14, scope: !6470)
!6525 = !DILocation(line: 1008, column: 42, scope: !6470)
!6526 = !DILocation(line: 1008, column: 39, scope: !6470)
!6527 = !DILocation(line: 1008, column: 36, scope: !6470)
!6528 = !DILocation(line: 1008, column: 34, scope: !6470)
!6529 = !DILocation(line: 1008, column: 55, scope: !6470)
!6530 = !DILocation(line: 1008, column: 20, scope: !6470)
!6531 = !DILocation(line: 1008, column: 12, scope: !6470)
!6532 = !DILocation(line: 1010, column: 14, scope: !6474)
!6533 = !DILocation(line: 1010, column: 12, scope: !6474)
!6534 = !DILocation(line: 1010, column: 7, scope: !6474)
!6535 = !DILocation(line: 1010, column: 35, scope: !6473)
!6536 = !DILocation(line: 1010, column: 43, scope: !6473)
!6537 = !DILocation(line: 1010, column: 40, scope: !6473)
!6538 = !DILocation(line: 1010, column: 2, scope: !6474)
!6539 = !DILocation(line: 1011, column: 21, scope: !6473)
!6540 = !DILocation(line: 354, column: 1, scope: !6381, inlinedAt: !6472)
!6541 = !DILocation(line: 354, column: 1, scope: !6382, inlinedAt: !6472)
!6542 = !DILocation(line: 1011, column: 3, scope: !6473)
!6543 = !DILocation(line: 1010, column: 72, scope: !6473)
!6544 = !DILocation(line: 1010, column: 2, scope: !6473)
!6545 = distinct !{!6545, !6538, !6546}
!6546 = !DILocation(line: 1011, column: 25, scope: !6474)
!6547 = !DILocation(line: 1013, column: 2, scope: !6470)
!6548 = !DILocation(line: 1015, column: 17, scope: !6470)
!6549 = !DILocation(line: 1016, column: 2, scope: !6470)
!6550 = !DILocation(line: 1016, column: 10, scope: !6470)
!6551 = !DILocation(line: 1016, column: 21, scope: !6470)
!6552 = !DILocation(line: 1017, column: 2, scope: !6470)
!6553 = !DILocation(line: 1017, column: 10, scope: !6470)
!6554 = !DILocation(line: 1017, column: 26, scope: !6470)
!6555 = !DILocation(line: 1018, column: 2, scope: !6470)
!6556 = !DILocation(line: 1018, column: 10, scope: !6470)
!6557 = !DILocation(line: 1018, column: 24, scope: !6470)
!6558 = !DILocation(line: 1020, column: 2, scope: !6470)
!6559 = !DILocation(line: 1021, column: 1, scope: !6470)
!6560 = distinct !DISubprogram(name: "agp_generic_insert_memory", scope: !3, file: !3, line: 1025, type: !3254, scopeLine: 1026, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6561 = !DILocalVariable(name: "mem", arg: 1, scope: !6560, file: !3, line: 1025, type: !3193)
!6562 = !DILocation(line: 1025, column: 51, scope: !6560)
!6563 = !DILocalVariable(name: "pg_start", arg: 2, scope: !6560, file: !3, line: 1025, type: !3256)
!6564 = !DILocation(line: 1025, column: 62, scope: !6560)
!6565 = !DILocalVariable(name: "type", arg: 3, scope: !6560, file: !3, line: 1025, type: !165)
!6566 = !DILocation(line: 1025, column: 76, scope: !6560)
!6567 = !DILocalVariable(name: "num_entries", scope: !6560, file: !3, line: 1027, type: !165)
!6568 = !DILocation(line: 1027, column: 6, scope: !6560)
!6569 = !DILocalVariable(name: "i", scope: !6560, file: !3, line: 1028, type: !1190)
!6570 = !DILocation(line: 1028, column: 9, scope: !6560)
!6571 = !DILocalVariable(name: "j", scope: !6560, file: !3, line: 1029, type: !3256)
!6572 = !DILocation(line: 1029, column: 8, scope: !6560)
!6573 = !DILocalVariable(name: "temp", scope: !6560, file: !3, line: 1030, type: !160)
!6574 = !DILocation(line: 1030, column: 8, scope: !6560)
!6575 = !DILocalVariable(name: "bridge", scope: !6560, file: !3, line: 1031, type: !3199)
!6576 = !DILocation(line: 1031, column: 26, scope: !6560)
!6577 = !DILocalVariable(name: "mask_type", scope: !6560, file: !3, line: 1032, type: !165)
!6578 = !DILocation(line: 1032, column: 6, scope: !6560)
!6579 = !DILocation(line: 1034, column: 11, scope: !6560)
!6580 = !DILocation(line: 1034, column: 16, scope: !6560)
!6581 = !DILocation(line: 1034, column: 9, scope: !6560)
!6582 = !DILocation(line: 1035, column: 7, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1035, column: 6)
!6584 = !DILocation(line: 1035, column: 6, scope: !6560)
!6585 = !DILocation(line: 1036, column: 3, scope: !6583)
!6586 = !DILocation(line: 1038, column: 6, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1038, column: 6)
!6588 = !DILocation(line: 1038, column: 11, scope: !6587)
!6589 = !DILocation(line: 1038, column: 22, scope: !6587)
!6590 = !DILocation(line: 1038, column: 6, scope: !6560)
!6591 = !DILocation(line: 1039, column: 3, scope: !6587)
!6592 = !DILocation(line: 1041, column: 9, scope: !6560)
!6593 = !DILocation(line: 1041, column: 17, scope: !6560)
!6594 = !DILocation(line: 1041, column: 7, scope: !6560)
!6595 = !DILocation(line: 1043, column: 10, scope: !6560)
!6596 = !DILocation(line: 1043, column: 18, scope: !6560)
!6597 = !DILocation(line: 1043, column: 26, scope: !6560)
!6598 = !DILocation(line: 1043, column: 2, scope: !6560)
!6599 = !DILocation(line: 1045, column: 17, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1043, column: 37)
!6601 = !DILocation(line: 1045, column: 33, scope: !6600)
!6602 = !DILocation(line: 1045, column: 15, scope: !6600)
!6603 = !DILocation(line: 1046, column: 3, scope: !6600)
!6604 = !DILocation(line: 1048, column: 17, scope: !6600)
!6605 = !DILocation(line: 1048, column: 34, scope: !6600)
!6606 = !DILocation(line: 1048, column: 15, scope: !6600)
!6607 = !DILocation(line: 1049, column: 3, scope: !6600)
!6608 = !DILocation(line: 1051, column: 17, scope: !6600)
!6609 = !DILocation(line: 1051, column: 34, scope: !6600)
!6610 = !DILocation(line: 1051, column: 15, scope: !6600)
!6611 = !DILocation(line: 1052, column: 3, scope: !6600)
!6612 = !DILocation(line: 1054, column: 17, scope: !6600)
!6613 = !DILocation(line: 1054, column: 35, scope: !6600)
!6614 = !DILocation(line: 1054, column: 15, scope: !6600)
!6615 = !DILocation(line: 1055, column: 3, scope: !6600)
!6616 = !DILocation(line: 1058, column: 3, scope: !6600)
!6617 = !DILocation(line: 1060, column: 15, scope: !6600)
!6618 = !DILocation(line: 1061, column: 3, scope: !6600)
!6619 = !DILocation(line: 1064, column: 17, scope: !6560)
!6620 = !DILocation(line: 1064, column: 36, scope: !6560)
!6621 = !DILocation(line: 1064, column: 14, scope: !6560)
!6622 = !DILocation(line: 1065, column: 6, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1065, column: 6)
!6624 = !DILocation(line: 1065, column: 18, scope: !6623)
!6625 = !DILocation(line: 1065, column: 6, scope: !6560)
!6626 = !DILocation(line: 1065, column: 35, scope: !6623)
!6627 = !DILocation(line: 1065, column: 23, scope: !6623)
!6628 = !DILocation(line: 1067, column: 6, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1067, column: 6)
!6630 = !DILocation(line: 1067, column: 14, scope: !6629)
!6631 = !DILocation(line: 1067, column: 19, scope: !6629)
!6632 = !DILocation(line: 1067, column: 11, scope: !6629)
!6633 = !DILocation(line: 1067, column: 6, scope: !6560)
!6634 = !DILocation(line: 1068, column: 3, scope: !6629)
!6635 = !DILocation(line: 1070, column: 14, scope: !6560)
!6636 = !DILocation(line: 1070, column: 22, scope: !6560)
!6637 = !DILocation(line: 1070, column: 30, scope: !6560)
!6638 = !DILocation(line: 1070, column: 52, scope: !6560)
!6639 = !DILocation(line: 1070, column: 60, scope: !6560)
!6640 = !DILocation(line: 1070, column: 12, scope: !6560)
!6641 = !DILocation(line: 1071, column: 6, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1071, column: 6)
!6643 = !DILocation(line: 1071, column: 16, scope: !6642)
!6644 = !DILocation(line: 1071, column: 6, scope: !6560)
!6645 = !DILocation(line: 1073, column: 3, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6642, file: !3, line: 1071, column: 22)
!6647 = !DILocation(line: 1076, column: 8, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1076, column: 6)
!6649 = !DILocation(line: 1076, column: 19, scope: !6648)
!6650 = !DILocation(line: 1076, column: 24, scope: !6648)
!6651 = !DILocation(line: 1076, column: 17, scope: !6648)
!6652 = !DILocation(line: 1076, column: 38, scope: !6648)
!6653 = !DILocation(line: 1076, column: 36, scope: !6648)
!6654 = !DILocation(line: 1076, column: 51, scope: !6648)
!6655 = !DILocation(line: 1077, column: 8, scope: !6648)
!6656 = !DILocation(line: 1077, column: 19, scope: !6648)
!6657 = !DILocation(line: 1077, column: 24, scope: !6648)
!6658 = !DILocation(line: 1077, column: 17, scope: !6648)
!6659 = !DILocation(line: 1077, column: 38, scope: !6648)
!6660 = !DILocation(line: 1077, column: 36, scope: !6648)
!6661 = !DILocation(line: 1076, column: 6, scope: !6560)
!6662 = !DILocation(line: 1078, column: 3, scope: !6648)
!6663 = !DILocation(line: 1080, column: 6, scope: !6560)
!6664 = !DILocation(line: 1080, column: 4, scope: !6560)
!6665 = !DILocation(line: 1082, column: 2, scope: !6560)
!6666 = !DILocation(line: 1082, column: 9, scope: !6560)
!6667 = !DILocation(line: 1082, column: 14, scope: !6560)
!6668 = !DILocation(line: 1082, column: 25, scope: !6560)
!6669 = !DILocation(line: 1082, column: 30, scope: !6560)
!6670 = !DILocation(line: 1082, column: 23, scope: !6560)
!6671 = !DILocation(line: 1082, column: 11, scope: !6560)
!6672 = !DILocation(line: 1083, column: 8, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 1083, column: 7)
!6674 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1082, column: 43)
!6675 = !DILocation(line: 1083, column: 7, scope: !6674)
!6676 = !DILocation(line: 1084, column: 4, scope: !6673)
!6677 = !DILocation(line: 1085, column: 4, scope: !6674)
!6678 = distinct !{!6678, !6665, !6679}
!6679 = !DILocation(line: 1086, column: 2, scope: !6560)
!6680 = !DILocation(line: 1088, column: 7, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1088, column: 6)
!6682 = !DILocation(line: 1088, column: 12, scope: !6681)
!6683 = !DILocation(line: 1088, column: 6, scope: !6560)
!6684 = !DILocation(line: 1089, column: 3, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6681, file: !3, line: 1088, column: 24)
!6686 = !DILocation(line: 1089, column: 11, scope: !6685)
!6687 = !DILocation(line: 1089, column: 19, scope: !6685)
!6688 = !DILocation(line: 1090, column: 3, scope: !6685)
!6689 = !DILocation(line: 1090, column: 8, scope: !6685)
!6690 = !DILocation(line: 1090, column: 19, scope: !6685)
!6691 = !DILocation(line: 1091, column: 2, scope: !6685)
!6692 = !DILocation(line: 1093, column: 9, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1093, column: 2)
!6694 = !DILocation(line: 1093, column: 18, scope: !6693)
!6695 = !DILocation(line: 1093, column: 16, scope: !6693)
!6696 = !DILocation(line: 1093, column: 7, scope: !6693)
!6697 = !DILocation(line: 1093, column: 28, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 1093, column: 2)
!6699 = !DILocation(line: 1093, column: 32, scope: !6698)
!6700 = !DILocation(line: 1093, column: 37, scope: !6698)
!6701 = !DILocation(line: 1093, column: 30, scope: !6698)
!6702 = !DILocation(line: 1093, column: 2, scope: !6693)
!6703 = !DILocation(line: 1094, column: 10, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 1093, column: 59)
!6705 = !DILocation(line: 1094, column: 18, scope: !6704)
!6706 = !DILocation(line: 1094, column: 26, scope: !6704)
!6707 = !DILocation(line: 1094, column: 38, scope: !6704)
!6708 = !DILocation(line: 1095, column: 10, scope: !6704)
!6709 = !DILocation(line: 1096, column: 10, scope: !6704)
!6710 = !DILocation(line: 1097, column: 10, scope: !6704)
!6711 = !DILocation(line: 1097, column: 18, scope: !6704)
!6712 = !DILocation(line: 1097, column: 29, scope: !6704)
!6713 = !DILocation(line: 1097, column: 28, scope: !6704)
!6714 = !DILocation(line: 1094, column: 3, scope: !6704)
!6715 = !DILocation(line: 1098, column: 2, scope: !6704)
!6716 = !DILocation(line: 1093, column: 50, scope: !6698)
!6717 = !DILocation(line: 1093, column: 55, scope: !6698)
!6718 = !DILocation(line: 1093, column: 2, scope: !6698)
!6719 = distinct !{!6719, !6702, !6720}
!6720 = !DILocation(line: 1098, column: 2, scope: !6693)
!6721 = !DILocation(line: 1099, column: 8, scope: !6560)
!6722 = !DILocation(line: 1099, column: 16, scope: !6560)
!6723 = !DILocation(line: 1099, column: 27, scope: !6560)
!6724 = !DILocation(line: 1099, column: 26, scope: !6560)
!6725 = !DILocation(line: 1099, column: 28, scope: !6560)
!6726 = !DILocation(line: 1099, column: 2, scope: !6560)
!6727 = !DILocation(line: 1101, column: 2, scope: !6560)
!6728 = !DILocation(line: 1101, column: 10, scope: !6560)
!6729 = !DILocation(line: 1101, column: 18, scope: !6560)
!6730 = !DILocation(line: 1101, column: 28, scope: !6560)
!6731 = !DILocation(line: 1102, column: 2, scope: !6560)
!6732 = !DILocation(line: 1103, column: 1, scope: !6560)
!6733 = distinct !DISubprogram(name: "agp_generic_remove_memory", scope: !3, file: !3, line: 1107, type: !3254, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6734 = !DILocalVariable(name: "mem", arg: 1, scope: !6733, file: !3, line: 1107, type: !3193)
!6735 = !DILocation(line: 1107, column: 50, scope: !6733)
!6736 = !DILocalVariable(name: "pg_start", arg: 2, scope: !6733, file: !3, line: 1107, type: !3256)
!6737 = !DILocation(line: 1107, column: 61, scope: !6733)
!6738 = !DILocalVariable(name: "type", arg: 3, scope: !6733, file: !3, line: 1107, type: !165)
!6739 = !DILocation(line: 1107, column: 75, scope: !6733)
!6740 = !DILocalVariable(name: "i", scope: !6733, file: !3, line: 1109, type: !1190)
!6741 = !DILocation(line: 1109, column: 9, scope: !6733)
!6742 = !DILocalVariable(name: "bridge", scope: !6733, file: !3, line: 1110, type: !3199)
!6743 = !DILocation(line: 1110, column: 26, scope: !6733)
!6744 = !DILocalVariable(name: "mask_type", scope: !6733, file: !3, line: 1111, type: !165)
!6745 = !DILocation(line: 1111, column: 6, scope: !6733)
!6746 = !DILocalVariable(name: "num_entries", scope: !6733, file: !3, line: 1111, type: !165)
!6747 = !DILocation(line: 1111, column: 17, scope: !6733)
!6748 = !DILocation(line: 1113, column: 11, scope: !6733)
!6749 = !DILocation(line: 1113, column: 16, scope: !6733)
!6750 = !DILocation(line: 1113, column: 9, scope: !6733)
!6751 = !DILocation(line: 1114, column: 7, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 1114, column: 6)
!6753 = !DILocation(line: 1114, column: 6, scope: !6733)
!6754 = !DILocation(line: 1115, column: 3, scope: !6752)
!6755 = !DILocation(line: 1117, column: 6, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 1117, column: 6)
!6757 = !DILocation(line: 1117, column: 11, scope: !6756)
!6758 = !DILocation(line: 1117, column: 22, scope: !6756)
!6759 = !DILocation(line: 1117, column: 6, scope: !6733)
!6760 = !DILocation(line: 1118, column: 3, scope: !6756)
!6761 = !DILocation(line: 1120, column: 6, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 1120, column: 6)
!6763 = !DILocation(line: 1120, column: 14, scope: !6762)
!6764 = !DILocation(line: 1120, column: 19, scope: !6762)
!6765 = !DILocation(line: 1120, column: 11, scope: !6762)
!6766 = !DILocation(line: 1120, column: 6, scope: !6733)
!6767 = !DILocation(line: 1121, column: 3, scope: !6762)
!6768 = !DILocation(line: 1123, column: 16, scope: !6733)
!6769 = !DILocation(line: 1123, column: 14, scope: !6733)
!6770 = !DILocation(line: 1124, column: 8, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 1124, column: 6)
!6772 = !DILocation(line: 1124, column: 19, scope: !6771)
!6773 = !DILocation(line: 1124, column: 24, scope: !6771)
!6774 = !DILocation(line: 1124, column: 17, scope: !6771)
!6775 = !DILocation(line: 1124, column: 38, scope: !6771)
!6776 = !DILocation(line: 1124, column: 36, scope: !6771)
!6777 = !DILocation(line: 1124, column: 51, scope: !6771)
!6778 = !DILocation(line: 1125, column: 8, scope: !6771)
!6779 = !DILocation(line: 1125, column: 19, scope: !6771)
!6780 = !DILocation(line: 1125, column: 24, scope: !6771)
!6781 = !DILocation(line: 1125, column: 17, scope: !6771)
!6782 = !DILocation(line: 1125, column: 38, scope: !6771)
!6783 = !DILocation(line: 1125, column: 36, scope: !6771)
!6784 = !DILocation(line: 1124, column: 6, scope: !6733)
!6785 = !DILocation(line: 1126, column: 3, scope: !6771)
!6786 = !DILocation(line: 1128, column: 14, scope: !6733)
!6787 = !DILocation(line: 1128, column: 22, scope: !6733)
!6788 = !DILocation(line: 1128, column: 30, scope: !6733)
!6789 = !DILocation(line: 1128, column: 52, scope: !6733)
!6790 = !DILocation(line: 1128, column: 60, scope: !6733)
!6791 = !DILocation(line: 1128, column: 12, scope: !6733)
!6792 = !DILocation(line: 1129, column: 6, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 1129, column: 6)
!6794 = !DILocation(line: 1129, column: 16, scope: !6793)
!6795 = !DILocation(line: 1129, column: 6, scope: !6733)
!6796 = !DILocation(line: 1131, column: 3, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 1129, column: 22)
!6798 = !DILocation(line: 1135, column: 11, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 1135, column: 2)
!6800 = !DILocation(line: 1135, column: 9, scope: !6799)
!6801 = !DILocation(line: 1135, column: 7, scope: !6799)
!6802 = !DILocation(line: 1135, column: 21, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6799, file: !3, line: 1135, column: 2)
!6804 = !DILocation(line: 1135, column: 26, scope: !6803)
!6805 = !DILocation(line: 1135, column: 31, scope: !6803)
!6806 = !DILocation(line: 1135, column: 44, scope: !6803)
!6807 = !DILocation(line: 1135, column: 42, scope: !6803)
!6808 = !DILocation(line: 1135, column: 23, scope: !6803)
!6809 = !DILocation(line: 1135, column: 2, scope: !6799)
!6810 = !DILocation(line: 1136, column: 10, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 1135, column: 60)
!6812 = !DILocation(line: 1136, column: 18, scope: !6811)
!6813 = !DILocation(line: 1136, column: 32, scope: !6811)
!6814 = !DILocation(line: 1136, column: 40, scope: !6811)
!6815 = !DILocation(line: 1136, column: 51, scope: !6811)
!6816 = !DILocation(line: 1136, column: 50, scope: !6811)
!6817 = !DILocation(line: 1136, column: 3, scope: !6811)
!6818 = !DILocation(line: 1137, column: 2, scope: !6811)
!6819 = !DILocation(line: 1135, column: 56, scope: !6803)
!6820 = !DILocation(line: 1135, column: 2, scope: !6803)
!6821 = distinct !{!6821, !6809, !6822}
!6822 = !DILocation(line: 1137, column: 2, scope: !6799)
!6823 = !DILocation(line: 1138, column: 8, scope: !6733)
!6824 = !DILocation(line: 1138, column: 16, scope: !6733)
!6825 = !DILocation(line: 1138, column: 27, scope: !6733)
!6826 = !DILocation(line: 1138, column: 26, scope: !6733)
!6827 = !DILocation(line: 1138, column: 28, scope: !6733)
!6828 = !DILocation(line: 1138, column: 2, scope: !6733)
!6829 = !DILocation(line: 1140, column: 2, scope: !6733)
!6830 = !DILocation(line: 1140, column: 10, scope: !6733)
!6831 = !DILocation(line: 1140, column: 18, scope: !6733)
!6832 = !DILocation(line: 1140, column: 28, scope: !6733)
!6833 = !DILocation(line: 1141, column: 2, scope: !6733)
!6834 = !DILocation(line: 1142, column: 1, scope: !6733)
!6835 = distinct !DISubprogram(name: "agp_generic_alloc_by_type", scope: !3, file: !3, line: 1145, type: !3261, scopeLine: 1146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6836 = !DILocalVariable(name: "page_count", arg: 1, scope: !6835, file: !3, line: 1145, type: !1190)
!6837 = !DILocation(line: 1145, column: 53, scope: !6835)
!6838 = !DILocalVariable(name: "type", arg: 2, scope: !6835, file: !3, line: 1145, type: !165)
!6839 = !DILocation(line: 1145, column: 69, scope: !6835)
!6840 = !DILocation(line: 1147, column: 2, scope: !6835)
!6841 = distinct !DISubprogram(name: "agp_create_user_memory", scope: !3, file: !3, line: 96, type: !6842, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6842 = !DISubroutineType(types: !6843)
!6843 = !{!3193, !212}
!6844 = !DILocalVariable(name: "num_agp_pages", arg: 1, scope: !6841, file: !3, line: 96, type: !212)
!6845 = !DILocation(line: 96, column: 64, scope: !6841)
!6846 = !DILocalVariable(name: "new", scope: !6841, file: !3, line: 98, type: !3193)
!6847 = !DILocation(line: 98, column: 21, scope: !6841)
!6848 = !DILocalVariable(name: "alloc_size", scope: !6841, file: !3, line: 99, type: !212)
!6849 = !DILocation(line: 99, column: 16, scope: !6841)
!6850 = !DILocation(line: 99, column: 29, scope: !6841)
!6851 = !DILocation(line: 99, column: 42, scope: !6841)
!6852 = !DILocation(line: 101, column: 38, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6841, file: !3, line: 101, column: 6)
!6854 = !DILocation(line: 101, column: 36, scope: !6853)
!6855 = !DILocation(line: 101, column: 6, scope: !6841)
!6856 = !DILocation(line: 102, column: 3, scope: !6853)
!6857 = !DILocation(line: 104, column: 8, scope: !6841)
!6858 = !DILocation(line: 104, column: 6, scope: !6841)
!6859 = !DILocation(line: 105, column: 6, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6841, file: !3, line: 105, column: 6)
!6861 = !DILocation(line: 105, column: 10, scope: !6860)
!6862 = !DILocation(line: 105, column: 6, scope: !6841)
!6863 = !DILocation(line: 106, column: 3, scope: !6860)
!6864 = !DILocation(line: 108, column: 13, scope: !6841)
!6865 = !DILocation(line: 108, column: 2, scope: !6841)
!6866 = !DILocation(line: 108, column: 7, scope: !6841)
!6867 = !DILocation(line: 108, column: 11, scope: !6841)
!6868 = !DILocation(line: 110, column: 6, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6841, file: !3, line: 110, column: 6)
!6870 = !DILocation(line: 110, column: 11, scope: !6869)
!6871 = !DILocation(line: 110, column: 15, scope: !6869)
!6872 = !DILocation(line: 110, column: 6, scope: !6841)
!6873 = !DILocation(line: 111, column: 9, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 110, column: 20)
!6875 = !DILocation(line: 111, column: 3, scope: !6874)
!6876 = !DILocation(line: 112, column: 3, scope: !6874)
!6877 = !DILocation(line: 115, column: 23, scope: !6841)
!6878 = !DILocation(line: 115, column: 35, scope: !6841)
!6879 = !DILocation(line: 115, column: 2, scope: !6841)
!6880 = !DILocation(line: 117, column: 6, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6841, file: !3, line: 117, column: 6)
!6882 = !DILocation(line: 117, column: 11, scope: !6881)
!6883 = !DILocation(line: 117, column: 17, scope: !6881)
!6884 = !DILocation(line: 117, column: 6, scope: !6841)
!6885 = !DILocation(line: 118, column: 16, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6881, file: !3, line: 117, column: 26)
!6887 = !DILocation(line: 118, column: 21, scope: !6886)
!6888 = !DILocation(line: 118, column: 3, scope: !6886)
!6889 = !DILocation(line: 119, column: 9, scope: !6886)
!6890 = !DILocation(line: 119, column: 3, scope: !6886)
!6891 = !DILocation(line: 120, column: 3, scope: !6886)
!6892 = !DILocation(line: 122, column: 2, scope: !6841)
!6893 = !DILocation(line: 122, column: 7, scope: !6841)
!6894 = !DILocation(line: 122, column: 25, scope: !6841)
!6895 = !DILocation(line: 123, column: 9, scope: !6841)
!6896 = !DILocation(line: 123, column: 2, scope: !6841)
!6897 = !DILocation(line: 124, column: 1, scope: !6841)
!6898 = distinct !DISubprogram(name: "agp_generic_alloc_pages", scope: !3, file: !3, line: 1187, type: !3270, scopeLine: 1188, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6899 = !DILocalVariable(name: "v", arg: 1, scope: !6900, file: !4925, line: 93, type: !6903)
!6900 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !4925, file: !4925, line: 93, type: !6901, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6901 = !DISubroutineType(types: !6902)
!6902 = !{null, !6903}
!6903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!6904 = !DILocation(line: 93, column: 55, scope: !6900, inlinedAt: !6905)
!6905 = distinct !DILocation(line: 241, column: 2, scope: !6906, inlinedAt: !6907)
!6906 = distinct !DISubprogram(name: "atomic_inc", scope: !4933, file: !4933, line: 238, type: !6901, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6907 = distinct !DILocation(line: 1202, column: 3, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 1192, column: 34)
!6909 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 1192, column: 2)
!6910 = distinct !DILexicalBlock(scope: !6898, file: !3, line: 1192, column: 2)
!6911 = !DILocalVariable(name: "v", arg: 1, scope: !6912, file: !3150, line: 99, type: !3153)
!6912 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !3150, file: !3150, line: 99, type: !3151, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6913 = !DILocation(line: 99, column: 79, scope: !6912, inlinedAt: !6914)
!6914 = distinct !DILocation(line: 240, column: 2, scope: !6906, inlinedAt: !6907)
!6915 = !DILocalVariable(name: "size", arg: 2, scope: !6912, file: !3150, line: 99, type: !1190)
!6916 = !DILocation(line: 99, column: 89, scope: !6912, inlinedAt: !6914)
!6917 = !DILocalVariable(name: "v", arg: 1, scope: !6906, file: !4933, line: 238, type: !6903)
!6918 = !DILocation(line: 238, column: 22, scope: !6906, inlinedAt: !6907)
!6919 = !DILocalVariable(name: "bridge", arg: 1, scope: !6898, file: !3, line: 1187, type: !3199)
!6920 = !DILocation(line: 1187, column: 53, scope: !6898)
!6921 = !DILocalVariable(name: "mem", arg: 2, scope: !6898, file: !3, line: 1187, type: !3193)
!6922 = !DILocation(line: 1187, column: 80, scope: !6898)
!6923 = !DILocalVariable(name: "num_pages", arg: 3, scope: !6898, file: !3, line: 1187, type: !1190)
!6924 = !DILocation(line: 1187, column: 92, scope: !6898)
!6925 = !DILocalVariable(name: "page", scope: !6898, file: !3, line: 1189, type: !207)
!6926 = !DILocation(line: 1189, column: 16, scope: !6898)
!6927 = !DILocalVariable(name: "i", scope: !6898, file: !3, line: 1190, type: !165)
!6928 = !DILocation(line: 1190, column: 6, scope: !6898)
!6929 = !DILocalVariable(name: "ret", scope: !6898, file: !3, line: 1190, type: !165)
!6930 = !DILocation(line: 1190, column: 9, scope: !6898)
!6931 = !DILocation(line: 1192, column: 9, scope: !6910)
!6932 = !DILocation(line: 1192, column: 7, scope: !6910)
!6933 = !DILocation(line: 1192, column: 14, scope: !6909)
!6934 = !DILocation(line: 1192, column: 18, scope: !6909)
!6935 = !DILocation(line: 1192, column: 16, scope: !6909)
!6936 = !DILocation(line: 1192, column: 2, scope: !6910)
!6937 = !DILocation(line: 1193, column: 10, scope: !6908)
!6938 = !DILocation(line: 1193, column: 8, scope: !6908)
!6939 = !DILocation(line: 1195, column: 7, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 1195, column: 7)
!6941 = !DILocation(line: 1195, column: 12, scope: !6940)
!6942 = !DILocation(line: 1195, column: 7, scope: !6908)
!6943 = !DILocation(line: 1196, column: 4, scope: !6940)
!6944 = !DILocation(line: 1201, column: 12, scope: !6908)
!6945 = !DILocation(line: 1201, column: 3, scope: !6908)
!6946 = !DILocation(line: 1202, column: 15, scope: !6908)
!6947 = !DILocation(line: 1202, column: 27, scope: !6908)
!6948 = !DILocation(line: 240, column: 31, scope: !6906, inlinedAt: !6907)
!6949 = !DILocation(line: 101, column: 20, scope: !6912, inlinedAt: !6914)
!6950 = !DILocation(line: 101, column: 23, scope: !6912, inlinedAt: !6914)
!6951 = !DILocation(line: 101, column: 2, scope: !6912, inlinedAt: !6914)
!6952 = !DILocation(line: 102, column: 2, scope: !6912, inlinedAt: !6914)
!6953 = !DILocation(line: 241, column: 18, scope: !6906, inlinedAt: !6907)
!6954 = !DILocation(line: 96, column: 16, scope: !6900, inlinedAt: !6905)
!6955 = !DILocation(line: 96, column: 19, scope: !6900, inlinedAt: !6905)
!6956 = !DILocation(line: 95, column: 2, scope: !6900, inlinedAt: !6905)
!6957 = !{i32 -2146594440}
!6958 = !DILocation(line: 1204, column: 19, scope: !6908)
!6959 = !DILocation(line: 1204, column: 3, scope: !6908)
!6960 = !DILocation(line: 1204, column: 8, scope: !6908)
!6961 = !DILocation(line: 1204, column: 14, scope: !6908)
!6962 = !DILocation(line: 1204, column: 17, scope: !6908)
!6963 = !DILocation(line: 1205, column: 3, scope: !6908)
!6964 = !DILocation(line: 1205, column: 8, scope: !6908)
!6965 = !DILocation(line: 1205, column: 18, scope: !6908)
!6966 = !DILocation(line: 1206, column: 2, scope: !6908)
!6967 = !DILocation(line: 1192, column: 30, scope: !6909)
!6968 = !DILocation(line: 1192, column: 2, scope: !6909)
!6969 = distinct !{!6969, !6936, !6970}
!6970 = !DILocation(line: 1206, column: 2, scope: !6910)
!6971 = !DILocation(line: 1209, column: 21, scope: !6898)
!6972 = !DILocation(line: 1209, column: 26, scope: !6898)
!6973 = !DILocation(line: 1209, column: 33, scope: !6898)
!6974 = !DILocation(line: 1209, column: 2, scope: !6898)
!6975 = !DILocation(line: 1211, column: 6, scope: !6898)
!6976 = !DILocation(line: 1211, column: 2, scope: !6898)
!6977 = !DILabel(scope: !6898, name: "out", file: !3, line: 1212)
!6978 = !DILocation(line: 1212, column: 1, scope: !6898)
!6979 = !DILocation(line: 1213, column: 9, scope: !6898)
!6980 = !DILocation(line: 1213, column: 2, scope: !6898)
!6981 = distinct !DISubprogram(name: "alloc_pages", scope: !6982, file: !6982, line: 555, type: !6983, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6982 = !DIFile(filename: "./include/linux/gfp.h", directory: "/home/lizy2001/genbc/linux")
!6983 = !DISubroutineType(types: !6984)
!6984 = !{!207, !158, !7}
!6985 = !DILocalVariable(name: "gfp_mask", arg: 1, scope: !6981, file: !6982, line: 555, type: !158)
!6986 = !DILocation(line: 555, column: 46, scope: !6981)
!6987 = !DILocalVariable(name: "order", arg: 2, scope: !6981, file: !6982, line: 555, type: !7)
!6988 = !DILocation(line: 555, column: 69, scope: !6981)
!6989 = !DILocation(line: 557, column: 26, scope: !6981)
!6990 = !DILocation(line: 557, column: 42, scope: !6981)
!6991 = !DILocation(line: 557, column: 52, scope: !6981)
!6992 = !DILocation(line: 557, column: 9, scope: !6981)
!6993 = !DILocation(line: 557, column: 2, scope: !6981)
!6994 = distinct !DISubprogram(name: "get_page", scope: !26, file: !26, line: 1156, type: !2907, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!6995 = !DILocalVariable(name: "page", arg: 1, scope: !6994, file: !26, line: 1156, type: !207)
!6996 = !DILocation(line: 1156, column: 42, scope: !6994)
!6997 = !DILocation(line: 1158, column: 23, scope: !6994)
!6998 = !DILocation(line: 1158, column: 9, scope: !6994)
!6999 = !DILocation(line: 1158, column: 7, scope: !6994)
!7000 = !DILocation(line: 1164, column: 15, scope: !6994)
!7001 = !DILocation(line: 1164, column: 2, scope: !6994)
!7002 = !DILocation(line: 1165, column: 1, scope: !6994)
!7003 = distinct !DISubprogram(name: "agp_generic_alloc_page", scope: !3, file: !3, line: 1217, type: !3266, scopeLine: 1218, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7004 = !DILocation(line: 93, column: 55, scope: !6900, inlinedAt: !7005)
!7005 = distinct !DILocation(line: 241, column: 2, scope: !6906, inlinedAt: !7006)
!7006 = distinct !DILocation(line: 1228, column: 2, scope: !7003)
!7007 = !DILocation(line: 99, column: 79, scope: !6912, inlinedAt: !7008)
!7008 = distinct !DILocation(line: 240, column: 2, scope: !6906, inlinedAt: !7006)
!7009 = !DILocation(line: 99, column: 89, scope: !6912, inlinedAt: !7008)
!7010 = !DILocation(line: 238, column: 22, scope: !6906, inlinedAt: !7006)
!7011 = !DILocalVariable(name: "bridge", arg: 1, scope: !7003, file: !3, line: 1217, type: !3199)
!7012 = !DILocation(line: 1217, column: 61, scope: !7003)
!7013 = !DILocalVariable(name: "page", scope: !7003, file: !3, line: 1219, type: !207)
!7014 = !DILocation(line: 1219, column: 16, scope: !7003)
!7015 = !DILocation(line: 1221, column: 9, scope: !7003)
!7016 = !DILocation(line: 1221, column: 7, scope: !7003)
!7017 = !DILocation(line: 1222, column: 6, scope: !7018)
!7018 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1222, column: 6)
!7019 = !DILocation(line: 1222, column: 11, scope: !7018)
!7020 = !DILocation(line: 1222, column: 6, scope: !7003)
!7021 = !DILocation(line: 1223, column: 3, scope: !7018)
!7022 = !DILocation(line: 1225, column: 2, scope: !7003)
!7023 = !DILocation(line: 1227, column: 11, scope: !7003)
!7024 = !DILocation(line: 1227, column: 2, scope: !7003)
!7025 = !DILocation(line: 1228, column: 14, scope: !7003)
!7026 = !DILocation(line: 1228, column: 26, scope: !7003)
!7027 = !DILocation(line: 240, column: 31, scope: !6906, inlinedAt: !7006)
!7028 = !DILocation(line: 101, column: 20, scope: !6912, inlinedAt: !7008)
!7029 = !DILocation(line: 101, column: 23, scope: !6912, inlinedAt: !7008)
!7030 = !DILocation(line: 101, column: 2, scope: !6912, inlinedAt: !7008)
!7031 = !DILocation(line: 102, column: 2, scope: !6912, inlinedAt: !7008)
!7032 = !DILocation(line: 241, column: 18, scope: !6906, inlinedAt: !7006)
!7033 = !DILocation(line: 96, column: 16, scope: !6900, inlinedAt: !7005)
!7034 = !DILocation(line: 96, column: 19, scope: !6900, inlinedAt: !7005)
!7035 = !DILocation(line: 95, column: 2, scope: !6900, inlinedAt: !7005)
!7036 = !DILocation(line: 1229, column: 9, scope: !7003)
!7037 = !DILocation(line: 1229, column: 2, scope: !7003)
!7038 = !DILocation(line: 1230, column: 1, scope: !7003)
!7039 = distinct !DISubprogram(name: "agp_generic_destroy_pages", scope: !3, file: !3, line: 1233, type: !3240, scopeLine: 1234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7040 = !DILocalVariable(name: "v", arg: 1, scope: !7041, file: !4925, line: 106, type: !6903)
!7041 = distinct !DISubprogram(name: "arch_atomic_dec", scope: !4925, file: !4925, line: 106, type: !6901, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7042 = !DILocation(line: 106, column: 55, scope: !7041, inlinedAt: !7043)
!7043 = distinct !DILocation(line: 331, column: 2, scope: !7044, inlinedAt: !7045)
!7044 = distinct !DISubprogram(name: "atomic_dec", scope: !4933, file: !4933, line: 328, type: !6901, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7045 = distinct !DILocation(line: 1253, column: 3, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 1245, column: 40)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 1245, column: 2)
!7048 = distinct !DILexicalBlock(scope: !7039, file: !3, line: 1245, column: 2)
!7049 = !DILocation(line: 99, column: 79, scope: !6912, inlinedAt: !7050)
!7050 = distinct !DILocation(line: 330, column: 2, scope: !7044, inlinedAt: !7045)
!7051 = !DILocation(line: 99, column: 89, scope: !6912, inlinedAt: !7050)
!7052 = !DILocalVariable(name: "v", arg: 1, scope: !7044, file: !4933, line: 328, type: !6903)
!7053 = !DILocation(line: 328, column: 22, scope: !7044, inlinedAt: !7045)
!7054 = !DILocalVariable(name: "mem", arg: 1, scope: !7039, file: !3, line: 1233, type: !3193)
!7055 = !DILocation(line: 1233, column: 51, scope: !7039)
!7056 = !DILocalVariable(name: "i", scope: !7039, file: !3, line: 1235, type: !165)
!7057 = !DILocation(line: 1235, column: 6, scope: !7039)
!7058 = !DILocalVariable(name: "page", scope: !7039, file: !3, line: 1236, type: !207)
!7059 = !DILocation(line: 1236, column: 15, scope: !7039)
!7060 = !DILocation(line: 1238, column: 7, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7039, file: !3, line: 1238, column: 6)
!7062 = !DILocation(line: 1238, column: 6, scope: !7039)
!7063 = !DILocation(line: 1239, column: 3, scope: !7061)
!7064 = !DILocation(line: 1242, column: 21, scope: !7039)
!7065 = !DILocation(line: 1242, column: 26, scope: !7039)
!7066 = !DILocation(line: 1242, column: 33, scope: !7039)
!7067 = !DILocation(line: 1242, column: 38, scope: !7039)
!7068 = !DILocation(line: 1242, column: 2, scope: !7039)
!7069 = !DILocation(line: 1245, column: 9, scope: !7048)
!7070 = !DILocation(line: 1245, column: 7, scope: !7048)
!7071 = !DILocation(line: 1245, column: 14, scope: !7047)
!7072 = !DILocation(line: 1245, column: 18, scope: !7047)
!7073 = !DILocation(line: 1245, column: 23, scope: !7047)
!7074 = !DILocation(line: 1245, column: 16, scope: !7047)
!7075 = !DILocation(line: 1245, column: 2, scope: !7048)
!7076 = !DILocation(line: 1246, column: 10, scope: !7046)
!7077 = !DILocation(line: 1246, column: 15, scope: !7046)
!7078 = !DILocation(line: 1246, column: 21, scope: !7046)
!7079 = !DILocation(line: 1246, column: 8, scope: !7046)
!7080 = !DILocation(line: 1251, column: 12, scope: !7046)
!7081 = !DILocation(line: 1251, column: 3, scope: !7046)
!7082 = !DILocation(line: 1252, column: 3, scope: !7046)
!7083 = !DILocation(line: 1253, column: 15, scope: !7046)
!7084 = !DILocation(line: 1253, column: 27, scope: !7046)
!7085 = !DILocation(line: 330, column: 31, scope: !7044, inlinedAt: !7045)
!7086 = !DILocation(line: 101, column: 20, scope: !6912, inlinedAt: !7050)
!7087 = !DILocation(line: 101, column: 23, scope: !6912, inlinedAt: !7050)
!7088 = !DILocation(line: 101, column: 2, scope: !6912, inlinedAt: !7050)
!7089 = !DILocation(line: 102, column: 2, scope: !6912, inlinedAt: !7050)
!7090 = !DILocation(line: 331, column: 18, scope: !7044, inlinedAt: !7045)
!7091 = !DILocation(line: 109, column: 16, scope: !7041, inlinedAt: !7043)
!7092 = !DILocation(line: 109, column: 19, scope: !7041, inlinedAt: !7043)
!7093 = !DILocation(line: 108, column: 2, scope: !7041, inlinedAt: !7043)
!7094 = !{i32 -2146594230}
!7095 = !DILocation(line: 1254, column: 3, scope: !7046)
!7096 = !DILocation(line: 1254, column: 8, scope: !7046)
!7097 = !DILocation(line: 1254, column: 14, scope: !7046)
!7098 = !DILocation(line: 1254, column: 17, scope: !7046)
!7099 = !DILocation(line: 1255, column: 2, scope: !7046)
!7100 = !DILocation(line: 1245, column: 36, scope: !7047)
!7101 = !DILocation(line: 1245, column: 2, scope: !7047)
!7102 = distinct !{!7102, !7075, !7103}
!7103 = !DILocation(line: 1255, column: 2, scope: !7048)
!7104 = !DILocation(line: 1256, column: 1, scope: !7039)
!7105 = distinct !DISubprogram(name: "put_page", scope: !26, file: !26, line: 1178, type: !2907, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7106 = !DILocalVariable(name: "page", arg: 1, scope: !7105, file: !26, line: 1178, type: !207)
!7107 = !DILocation(line: 1178, column: 42, scope: !7105)
!7108 = !DILocation(line: 1180, column: 23, scope: !7105)
!7109 = !DILocation(line: 1180, column: 9, scope: !7105)
!7110 = !DILocation(line: 1180, column: 7, scope: !7105)
!7111 = !DILocation(line: 1188, column: 29, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7105, file: !26, line: 1188, column: 6)
!7113 = !DILocation(line: 1188, column: 6, scope: !7112)
!7114 = !DILocation(line: 1188, column: 6, scope: !7105)
!7115 = !DILocation(line: 1189, column: 27, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7112, file: !26, line: 1188, column: 36)
!7117 = !DILocation(line: 1189, column: 3, scope: !7116)
!7118 = !DILocation(line: 1190, column: 3, scope: !7116)
!7119 = !DILocation(line: 1193, column: 24, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7105, file: !26, line: 1193, column: 6)
!7121 = !DILocation(line: 1193, column: 6, scope: !7120)
!7122 = !DILocation(line: 1193, column: 6, scope: !7105)
!7123 = !DILocation(line: 1194, column: 14, scope: !7120)
!7124 = !DILocation(line: 1194, column: 3, scope: !7120)
!7125 = !DILocation(line: 1195, column: 1, scope: !7105)
!7126 = distinct !DISubprogram(name: "agp_generic_destroy_page", scope: !3, file: !3, line: 1259, type: !3274, scopeLine: 1260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7127 = !DILocation(line: 106, column: 55, scope: !7041, inlinedAt: !7128)
!7128 = distinct !DILocation(line: 331, column: 2, scope: !7044, inlinedAt: !7129)
!7129 = distinct !DILocation(line: 1270, column: 3, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7131, file: !3, line: 1267, column: 37)
!7131 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 1267, column: 6)
!7132 = !DILocation(line: 99, column: 79, scope: !6912, inlinedAt: !7133)
!7133 = distinct !DILocation(line: 330, column: 2, scope: !7044, inlinedAt: !7129)
!7134 = !DILocation(line: 99, column: 89, scope: !6912, inlinedAt: !7133)
!7135 = !DILocation(line: 328, column: 22, scope: !7044, inlinedAt: !7129)
!7136 = !DILocalVariable(name: "page", arg: 1, scope: !7126, file: !3, line: 1259, type: !207)
!7137 = !DILocation(line: 1259, column: 44, scope: !7126)
!7138 = !DILocalVariable(name: "flags", arg: 2, scope: !7126, file: !3, line: 1259, type: !165)
!7139 = !DILocation(line: 1259, column: 54, scope: !7126)
!7140 = !DILocation(line: 1261, column: 6, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 1261, column: 6)
!7142 = !DILocation(line: 1261, column: 11, scope: !7141)
!7143 = !DILocation(line: 1261, column: 6, scope: !7126)
!7144 = !DILocation(line: 1262, column: 3, scope: !7141)
!7145 = !DILocation(line: 1264, column: 6, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 1264, column: 6)
!7147 = !DILocation(line: 1264, column: 12, scope: !7146)
!7148 = !DILocation(line: 1264, column: 6, scope: !7126)
!7149 = !DILocation(line: 1265, column: 3, scope: !7146)
!7150 = !DILocation(line: 1267, column: 6, scope: !7131)
!7151 = !DILocation(line: 1267, column: 12, scope: !7131)
!7152 = !DILocation(line: 1267, column: 6, scope: !7126)
!7153 = !DILocation(line: 1268, column: 12, scope: !7130)
!7154 = !DILocation(line: 1268, column: 3, scope: !7130)
!7155 = !DILocation(line: 1269, column: 3, scope: !7130)
!7156 = !DILocation(line: 1270, column: 15, scope: !7130)
!7157 = !DILocation(line: 1270, column: 27, scope: !7130)
!7158 = !DILocation(line: 330, column: 31, scope: !7044, inlinedAt: !7129)
!7159 = !DILocation(line: 101, column: 20, scope: !6912, inlinedAt: !7133)
!7160 = !DILocation(line: 101, column: 23, scope: !6912, inlinedAt: !7133)
!7161 = !DILocation(line: 101, column: 2, scope: !6912, inlinedAt: !7133)
!7162 = !DILocation(line: 102, column: 2, scope: !6912, inlinedAt: !7133)
!7163 = !DILocation(line: 331, column: 18, scope: !7044, inlinedAt: !7129)
!7164 = !DILocation(line: 109, column: 16, scope: !7041, inlinedAt: !7128)
!7165 = !DILocation(line: 109, column: 19, scope: !7041, inlinedAt: !7128)
!7166 = !DILocation(line: 108, column: 2, scope: !7041, inlinedAt: !7128)
!7167 = !DILocation(line: 1271, column: 2, scope: !7130)
!7168 = !DILocation(line: 1272, column: 1, scope: !7126)
!7169 = distinct !DISubprogram(name: "agp_enable", scope: !3, file: !3, line: 1284, type: !3234, scopeLine: 1285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7170 = !DILocalVariable(name: "bridge", arg: 1, scope: !7169, file: !3, line: 1284, type: !3199)
!7171 = !DILocation(line: 1284, column: 41, scope: !7169)
!7172 = !DILocalVariable(name: "mode", arg: 2, scope: !7169, file: !3, line: 1284, type: !191)
!7173 = !DILocation(line: 1284, column: 53, scope: !7169)
!7174 = !DILocation(line: 1286, column: 7, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 1286, column: 6)
!7176 = !DILocation(line: 1286, column: 6, scope: !7169)
!7177 = !DILocation(line: 1287, column: 3, scope: !7175)
!7178 = !DILocation(line: 1288, column: 2, scope: !7169)
!7179 = !DILocation(line: 1288, column: 10, scope: !7169)
!7180 = !DILocation(line: 1288, column: 18, scope: !7169)
!7181 = !DILocation(line: 1288, column: 29, scope: !7169)
!7182 = !DILocation(line: 1288, column: 37, scope: !7169)
!7183 = !DILocation(line: 1289, column: 1, scope: !7169)
!7184 = distinct !DISubprogram(name: "agp_generic_find_bridge", scope: !3, file: !3, line: 1296, type: !7185, scopeLine: 1297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7185 = !DISubroutineType(types: !7186)
!7186 = !{!3199, !3286}
!7187 = !DILocalVariable(name: "pdev", arg: 1, scope: !7184, file: !3, line: 1296, type: !3286)
!7188 = !DILocation(line: 1296, column: 65, scope: !7184)
!7189 = !DILocation(line: 1298, column: 6, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7184, file: !3, line: 1298, column: 6)
!7191 = !DILocation(line: 1298, column: 6, scope: !7184)
!7192 = !DILocation(line: 1299, column: 3, scope: !7190)
!7193 = !DILocation(line: 1301, column: 9, scope: !7184)
!7194 = !DILocation(line: 1301, column: 2, scope: !7184)
!7195 = !DILocation(line: 1302, column: 1, scope: !7184)
!7196 = distinct !DISubprogram(name: "list_empty", scope: !5448, file: !5448, line: 280, type: !7197, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7197 = !DISubroutineType(types: !7198)
!7198 = !{!165, !7199}
!7199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7200, size: 64)
!7200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !220)
!7201 = !DILocalVariable(name: "head", arg: 1, scope: !7196, file: !5448, line: 280, type: !7199)
!7202 = !DILocation(line: 280, column: 54, scope: !7196)
!7203 = !DILocation(line: 282, column: 9, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7196, file: !5448, line: 282, column: 9)
!7205 = !DILocation(line: 282, column: 9, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7204, file: !5448, line: 282, column: 9)
!7207 = !DILocation(line: 282, column: 34, scope: !7196)
!7208 = !DILocation(line: 282, column: 31, scope: !7196)
!7209 = !DILocation(line: 282, column: 2, scope: !7196)
!7210 = distinct !DISubprogram(name: "global_cache_flush", scope: !3, file: !3, line: 1309, type: !2130, scopeLine: 1310, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7211 = !DILocation(line: 1311, column: 2, scope: !7210)
!7212 = !DILocation(line: 1312, column: 1, scope: !7210)
!7213 = distinct !DISubprogram(name: "ipi_handler", scope: !3, file: !3, line: 1304, type: !2655, scopeLine: 1305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7214 = !DILocalVariable(name: "null", arg: 1, scope: !7213, file: !3, line: 1304, type: !160)
!7215 = !DILocation(line: 1304, column: 31, scope: !7213)
!7216 = !DILocation(line: 1306, column: 2, scope: !7213)
!7217 = !DILocation(line: 1307, column: 1, scope: !7213)
!7218 = distinct !DISubprogram(name: "agp_generic_mask_memory", scope: !3, file: !3, line: 1315, type: !3244, scopeLine: 1317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7219 = !DILocalVariable(name: "bridge", arg: 1, scope: !7218, file: !3, line: 1315, type: !3199)
!7220 = !DILocation(line: 1315, column: 63, scope: !7218)
!7221 = !DILocalVariable(name: "addr", arg: 2, scope: !7218, file: !3, line: 1316, type: !2957)
!7222 = !DILocation(line: 1316, column: 22, scope: !7218)
!7223 = !DILocalVariable(name: "type", arg: 3, scope: !7218, file: !3, line: 1316, type: !165)
!7224 = !DILocation(line: 1316, column: 32, scope: !7218)
!7225 = !DILocation(line: 1319, column: 6, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 1319, column: 6)
!7227 = !DILocation(line: 1319, column: 14, scope: !7226)
!7228 = !DILocation(line: 1319, column: 22, scope: !7226)
!7229 = !DILocation(line: 1319, column: 6, scope: !7218)
!7230 = !DILocation(line: 1320, column: 10, scope: !7226)
!7231 = !DILocation(line: 1320, column: 17, scope: !7226)
!7232 = !DILocation(line: 1320, column: 25, scope: !7226)
!7233 = !DILocation(line: 1320, column: 33, scope: !7226)
!7234 = !DILocation(line: 1320, column: 42, scope: !7226)
!7235 = !DILocation(line: 1320, column: 15, scope: !7226)
!7236 = !DILocation(line: 1320, column: 3, scope: !7226)
!7237 = !DILocation(line: 1322, column: 10, scope: !7226)
!7238 = !DILocation(line: 1322, column: 3, scope: !7226)
!7239 = !DILocation(line: 1323, column: 1, scope: !7218)
!7240 = distinct !DISubprogram(name: "agp_generic_type_to_mask_type", scope: !3, file: !3, line: 1326, type: !3279, scopeLine: 1328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7241 = !DILocalVariable(name: "bridge", arg: 1, scope: !7240, file: !3, line: 1326, type: !3199)
!7242 = !DILocation(line: 1326, column: 59, scope: !7240)
!7243 = !DILocalVariable(name: "type", arg: 2, scope: !7240, file: !3, line: 1327, type: !165)
!7244 = !DILocation(line: 1327, column: 11, scope: !7240)
!7245 = !DILocation(line: 1329, column: 6, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 1329, column: 6)
!7247 = !DILocation(line: 1329, column: 11, scope: !7246)
!7248 = !DILocation(line: 1329, column: 6, scope: !7240)
!7249 = !DILocation(line: 1330, column: 3, scope: !7246)
!7250 = !DILocation(line: 1331, column: 9, scope: !7240)
!7251 = !DILocation(line: 1331, column: 2, scope: !7240)
!7252 = !DILocation(line: 1332, column: 1, scope: !7240)
!7253 = distinct !DISubprogram(name: "agp3_generic_fetch_size", scope: !3, file: !3, line: 1341, type: !3229, scopeLine: 1342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7254 = !DILocalVariable(name: "temp_size", scope: !7253, file: !3, line: 1343, type: !181)
!7255 = !DILocation(line: 1343, column: 6, scope: !7253)
!7256 = !DILocalVariable(name: "i", scope: !7253, file: !3, line: 1344, type: !165)
!7257 = !DILocation(line: 1344, column: 6, scope: !7253)
!7258 = !DILocalVariable(name: "values", scope: !7253, file: !3, line: 1345, type: !174)
!7259 = !DILocation(line: 1345, column: 28, scope: !7253)
!7260 = !DILocation(line: 1347, column: 23, scope: !7253)
!7261 = !DILocation(line: 1347, column: 35, scope: !7253)
!7262 = !DILocation(line: 1347, column: 40, scope: !7253)
!7263 = !DILocation(line: 1347, column: 52, scope: !7253)
!7264 = !DILocation(line: 1347, column: 58, scope: !7253)
!7265 = !DILocation(line: 1347, column: 2, scope: !7253)
!7266 = !DILocation(line: 1348, column: 11, scope: !7253)
!7267 = !DILocation(line: 1348, column: 9, scope: !7253)
!7268 = !DILocation(line: 1350, column: 9, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7253, file: !3, line: 1350, column: 2)
!7270 = !DILocation(line: 1350, column: 7, scope: !7269)
!7271 = !DILocation(line: 1350, column: 14, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 1350, column: 2)
!7273 = !DILocation(line: 1350, column: 18, scope: !7272)
!7274 = !DILocation(line: 1350, column: 30, scope: !7272)
!7275 = !DILocation(line: 1350, column: 38, scope: !7272)
!7276 = !DILocation(line: 1350, column: 16, scope: !7272)
!7277 = !DILocation(line: 1350, column: 2, scope: !7269)
!7278 = !DILocation(line: 1351, column: 7, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !3, line: 1351, column: 7)
!7280 = distinct !DILexicalBlock(scope: !7272, file: !3, line: 1350, column: 63)
!7281 = !DILocation(line: 1351, column: 20, scope: !7279)
!7282 = !DILocation(line: 1351, column: 27, scope: !7279)
!7283 = !DILocation(line: 1351, column: 30, scope: !7279)
!7284 = !DILocation(line: 1351, column: 17, scope: !7279)
!7285 = !DILocation(line: 1351, column: 7, scope: !7280)
!7286 = !DILocation(line: 1353, column: 42, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 1351, column: 42)
!7288 = !DILocation(line: 1353, column: 51, scope: !7287)
!7289 = !DILocation(line: 1353, column: 49, scope: !7287)
!7290 = !DILocation(line: 1353, column: 32, scope: !7287)
!7291 = !DILocation(line: 1353, column: 5, scope: !7287)
!7292 = !DILocation(line: 1353, column: 17, scope: !7287)
!7293 = !DILocation(line: 1353, column: 30, scope: !7287)
!7294 = !DILocation(line: 1352, column: 4, scope: !7287)
!7295 = !DILocation(line: 1352, column: 16, scope: !7287)
!7296 = !DILocation(line: 1352, column: 30, scope: !7287)
!7297 = !DILocation(line: 1355, column: 36, scope: !7287)
!7298 = !DILocation(line: 1355, column: 4, scope: !7287)
!7299 = !DILocation(line: 1355, column: 16, scope: !7287)
!7300 = !DILocation(line: 1355, column: 34, scope: !7287)
!7301 = !DILocation(line: 1356, column: 11, scope: !7287)
!7302 = !DILocation(line: 1356, column: 18, scope: !7287)
!7303 = !DILocation(line: 1356, column: 21, scope: !7287)
!7304 = !DILocation(line: 1356, column: 4, scope: !7287)
!7305 = !DILocation(line: 1358, column: 2, scope: !7280)
!7306 = !DILocation(line: 1350, column: 59, scope: !7272)
!7307 = !DILocation(line: 1350, column: 2, scope: !7272)
!7308 = distinct !{!7308, !7277, !7309}
!7309 = !DILocation(line: 1358, column: 2, scope: !7269)
!7310 = !DILocation(line: 1359, column: 2, scope: !7253)
!7311 = !DILocation(line: 1360, column: 1, scope: !7253)
!7312 = distinct !DISubprogram(name: "agp3_generic_tlbflush", scope: !3, file: !3, line: 1363, type: !3240, scopeLine: 1364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7313 = !DILocalVariable(name: "mem", arg: 1, scope: !7312, file: !3, line: 1363, type: !3193)
!7314 = !DILocation(line: 1363, column: 47, scope: !7312)
!7315 = !DILocalVariable(name: "ctrl", scope: !7312, file: !3, line: 1365, type: !191)
!7316 = !DILocation(line: 1365, column: 6, scope: !7312)
!7317 = !DILocation(line: 1366, column: 24, scope: !7312)
!7318 = !DILocation(line: 1366, column: 36, scope: !7312)
!7319 = !DILocation(line: 1366, column: 41, scope: !7312)
!7320 = !DILocation(line: 1366, column: 53, scope: !7312)
!7321 = !DILocation(line: 1366, column: 59, scope: !7312)
!7322 = !DILocation(line: 1366, column: 2, scope: !7312)
!7323 = !DILocation(line: 1367, column: 25, scope: !7312)
!7324 = !DILocation(line: 1367, column: 37, scope: !7312)
!7325 = !DILocation(line: 1367, column: 42, scope: !7312)
!7326 = !DILocation(line: 1367, column: 54, scope: !7312)
!7327 = !DILocation(line: 1367, column: 60, scope: !7312)
!7328 = !DILocation(line: 1367, column: 70, scope: !7312)
!7329 = !DILocation(line: 1367, column: 75, scope: !7312)
!7330 = !DILocation(line: 1367, column: 2, scope: !7312)
!7331 = !DILocation(line: 1368, column: 25, scope: !7312)
!7332 = !DILocation(line: 1368, column: 37, scope: !7312)
!7333 = !DILocation(line: 1368, column: 42, scope: !7312)
!7334 = !DILocation(line: 1368, column: 54, scope: !7312)
!7335 = !DILocation(line: 1368, column: 60, scope: !7312)
!7336 = !DILocation(line: 1368, column: 70, scope: !7312)
!7337 = !DILocation(line: 1368, column: 2, scope: !7312)
!7338 = !DILocation(line: 1369, column: 1, scope: !7312)
!7339 = distinct !DISubprogram(name: "agp3_generic_configure", scope: !3, file: !3, line: 1372, type: !3229, scopeLine: 1373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7340 = !DILocalVariable(name: "temp", scope: !7339, file: !3, line: 1374, type: !191)
!7341 = !DILocation(line: 1374, column: 6, scope: !7339)
!7342 = !DILocalVariable(name: "current_size", scope: !7339, file: !3, line: 1375, type: !174)
!7343 = !DILocation(line: 1375, column: 28, scope: !7339)
!7344 = !DILocation(line: 1377, column: 17, scope: !7339)
!7345 = !DILocation(line: 1377, column: 15, scope: !7339)
!7346 = !DILocation(line: 1379, column: 46, scope: !7339)
!7347 = !DILocation(line: 1379, column: 58, scope: !7339)
!7348 = !DILocation(line: 1379, column: 30, scope: !7339)
!7349 = !DILocation(line: 1379, column: 2, scope: !7339)
!7350 = !DILocation(line: 1379, column: 14, scope: !7339)
!7351 = !DILocation(line: 1379, column: 28, scope: !7339)
!7352 = !DILocation(line: 1383, column: 24, scope: !7339)
!7353 = !DILocation(line: 1383, column: 36, scope: !7339)
!7354 = !DILocation(line: 1383, column: 41, scope: !7339)
!7355 = !DILocation(line: 1383, column: 53, scope: !7339)
!7356 = !DILocation(line: 1383, column: 59, scope: !7339)
!7357 = !DILocation(line: 1383, column: 71, scope: !7339)
!7358 = !DILocation(line: 1383, column: 85, scope: !7339)
!7359 = !DILocation(line: 1383, column: 2, scope: !7339)
!7360 = !DILocation(line: 1385, column: 25, scope: !7339)
!7361 = !DILocation(line: 1385, column: 37, scope: !7339)
!7362 = !DILocation(line: 1385, column: 42, scope: !7339)
!7363 = !DILocation(line: 1385, column: 54, scope: !7339)
!7364 = !DILocation(line: 1385, column: 60, scope: !7339)
!7365 = !DILocation(line: 1385, column: 72, scope: !7339)
!7366 = !DILocation(line: 1385, column: 84, scope: !7339)
!7367 = !DILocation(line: 1385, column: 2, scope: !7339)
!7368 = !DILocation(line: 1387, column: 24, scope: !7339)
!7369 = !DILocation(line: 1387, column: 36, scope: !7339)
!7370 = !DILocation(line: 1387, column: 41, scope: !7339)
!7371 = !DILocation(line: 1387, column: 53, scope: !7339)
!7372 = !DILocation(line: 1387, column: 59, scope: !7339)
!7373 = !DILocation(line: 1387, column: 2, scope: !7339)
!7374 = !DILocation(line: 1388, column: 25, scope: !7339)
!7375 = !DILocation(line: 1388, column: 37, scope: !7339)
!7376 = !DILocation(line: 1388, column: 42, scope: !7339)
!7377 = !DILocation(line: 1388, column: 54, scope: !7339)
!7378 = !DILocation(line: 1388, column: 60, scope: !7339)
!7379 = !DILocation(line: 1388, column: 70, scope: !7339)
!7380 = !DILocation(line: 1388, column: 75, scope: !7339)
!7381 = !DILocation(line: 1388, column: 93, scope: !7339)
!7382 = !DILocation(line: 1388, column: 2, scope: !7339)
!7383 = !DILocation(line: 1389, column: 2, scope: !7339)
!7384 = distinct !DISubprogram(name: "pci_bus_address", scope: !3288, file: !3288, line: 1364, type: !7385, scopeLine: 1365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7385 = !DISubroutineType(types: !7386)
!7386 = !{!7387, !3286, !165}
!7387 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_addr_t", file: !3288, line: 749, baseType: !298)
!7388 = !DILocalVariable(name: "pdev", arg: 1, scope: !7384, file: !3288, line: 1364, type: !3286)
!7389 = !DILocation(line: 1364, column: 62, scope: !7384)
!7390 = !DILocalVariable(name: "bar", arg: 2, scope: !7384, file: !3288, line: 1364, type: !165)
!7391 = !DILocation(line: 1364, column: 72, scope: !7384)
!7392 = !DILocalVariable(name: "region", scope: !7384, file: !3288, line: 1366, type: !7393)
!7393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus_region", file: !3288, line: 754, size: 128, elements: !7394)
!7394 = !{!7395, !7396}
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7393, file: !3288, line: 755, baseType: !7387, size: 64)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7393, file: !3288, line: 756, baseType: !7387, size: 64, offset: 64)
!7397 = !DILocation(line: 1366, column: 24, scope: !7384)
!7398 = !DILocation(line: 1368, column: 26, scope: !7384)
!7399 = !DILocation(line: 1368, column: 32, scope: !7384)
!7400 = !DILocation(line: 1368, column: 47, scope: !7384)
!7401 = !DILocation(line: 1368, column: 53, scope: !7384)
!7402 = !DILocation(line: 1368, column: 62, scope: !7384)
!7403 = !DILocation(line: 1368, column: 2, scope: !7384)
!7404 = !DILocation(line: 1369, column: 16, scope: !7384)
!7405 = !DILocation(line: 1369, column: 2, scope: !7384)
!7406 = distinct !DISubprogram(name: "agp3_generic_cleanup", scope: !3, file: !3, line: 1393, type: !2130, scopeLine: 1394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7407 = !DILocalVariable(name: "ctrl", scope: !7406, file: !3, line: 1395, type: !191)
!7408 = !DILocation(line: 1395, column: 6, scope: !7406)
!7409 = !DILocation(line: 1396, column: 24, scope: !7406)
!7410 = !DILocation(line: 1396, column: 36, scope: !7406)
!7411 = !DILocation(line: 1396, column: 41, scope: !7406)
!7412 = !DILocation(line: 1396, column: 53, scope: !7406)
!7413 = !DILocation(line: 1396, column: 59, scope: !7406)
!7414 = !DILocation(line: 1396, column: 2, scope: !7406)
!7415 = !DILocation(line: 1397, column: 25, scope: !7406)
!7416 = !DILocation(line: 1397, column: 37, scope: !7406)
!7417 = !DILocation(line: 1397, column: 42, scope: !7406)
!7418 = !DILocation(line: 1397, column: 54, scope: !7406)
!7419 = !DILocation(line: 1397, column: 60, scope: !7406)
!7420 = !DILocation(line: 1397, column: 70, scope: !7406)
!7421 = !DILocation(line: 1397, column: 75, scope: !7406)
!7422 = !DILocation(line: 1397, column: 2, scope: !7406)
!7423 = !DILocation(line: 1398, column: 1, scope: !7406)
!7424 = distinct !DISubprogram(name: "kasan_check_write", scope: !7425, file: !7425, line: 38, type: !7426, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7425 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7426 = !DISubroutineType(types: !7427)
!7427 = !{!400, !3153, !7}
!7428 = !DILocalVariable(name: "p", arg: 1, scope: !7424, file: !7425, line: 38, type: !3153)
!7429 = !DILocation(line: 38, column: 59, scope: !7424)
!7430 = !DILocalVariable(name: "size", arg: 2, scope: !7424, file: !7425, line: 38, type: !7)
!7431 = !DILocation(line: 38, column: 75, scope: !7424)
!7432 = !DILocation(line: 40, column: 2, scope: !7424)
!7433 = distinct !DISubprogram(name: "kcsan_check_access", scope: !7434, file: !7434, line: 178, type: !7435, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7434 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7435 = !DISubroutineType(types: !7436)
!7436 = !{null, !3153, !1190, !165}
!7437 = !DILocalVariable(name: "ptr", arg: 1, scope: !7433, file: !7434, line: 178, type: !3153)
!7438 = !DILocation(line: 178, column: 60, scope: !7433)
!7439 = !DILocalVariable(name: "size", arg: 2, scope: !7433, file: !7434, line: 178, type: !1190)
!7440 = !DILocation(line: 178, column: 72, scope: !7433)
!7441 = !DILocalVariable(name: "type", arg: 3, scope: !7433, file: !7434, line: 179, type: !165)
!7442 = !DILocation(line: 179, column: 15, scope: !7433)
!7443 = !DILocation(line: 179, column: 23, scope: !7433)
!7444 = distinct !DISubprogram(name: "get_order", scope: !7445, file: !7445, line: 29, type: !7446, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7445 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!7446 = !DISubroutineType(types: !7447)
!7447 = !{!165, !212}
!7448 = !DILocalVariable(name: "x", arg: 1, scope: !7449, file: !3143, line: 366, type: !299)
!7449 = distinct !DISubprogram(name: "fls64", scope: !3143, file: !3143, line: 366, type: !7450, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7450 = !DISubroutineType(types: !7451)
!7451 = !{!165, !299}
!7452 = !DILocation(line: 366, column: 40, scope: !7449, inlinedAt: !7453)
!7453 = distinct !DILocation(line: 46, column: 9, scope: !7444)
!7454 = !DILocalVariable(name: "bitpos", scope: !7449, file: !3143, line: 368, type: !165)
!7455 = !DILocation(line: 368, column: 6, scope: !7449, inlinedAt: !7453)
!7456 = !DILocalVariable(name: "size", arg: 1, scope: !7444, file: !7445, line: 29, type: !212)
!7457 = !DILocation(line: 29, column: 63, scope: !7444)
!7458 = !DILocation(line: 31, column: 27, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7444, file: !7445, line: 31, column: 6)
!7460 = !DILocation(line: 31, column: 6, scope: !7459)
!7461 = !DILocation(line: 31, column: 6, scope: !7444)
!7462 = !DILocation(line: 32, column: 8, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7464, file: !7445, line: 32, column: 7)
!7464 = distinct !DILexicalBlock(scope: !7459, file: !7445, line: 31, column: 34)
!7465 = !DILocation(line: 32, column: 7, scope: !7464)
!7466 = !DILocation(line: 33, column: 4, scope: !7463)
!7467 = !DILocation(line: 35, column: 7, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7464, file: !7445, line: 35, column: 7)
!7469 = !DILocation(line: 35, column: 12, scope: !7468)
!7470 = !DILocation(line: 35, column: 7, scope: !7464)
!7471 = !DILocation(line: 36, column: 4, scope: !7468)
!7472 = !DILocation(line: 38, column: 10, scope: !7464)
!7473 = !DILocation(line: 38, column: 28, scope: !7464)
!7474 = !DILocation(line: 38, column: 41, scope: !7464)
!7475 = !DILocation(line: 38, column: 3, scope: !7464)
!7476 = !DILocation(line: 41, column: 6, scope: !7444)
!7477 = !DILocation(line: 42, column: 7, scope: !7444)
!7478 = !DILocation(line: 46, column: 15, scope: !7444)
!7479 = !DILocation(line: 374, column: 2, scope: !7449, inlinedAt: !7453)
!7480 = !DILocation(line: 376, column: 14, scope: !7449, inlinedAt: !7453)
!7481 = !{i32 333657}
!7482 = !DILocation(line: 377, column: 9, scope: !7449, inlinedAt: !7453)
!7483 = !DILocation(line: 377, column: 16, scope: !7449, inlinedAt: !7453)
!7484 = !DILocation(line: 46, column: 2, scope: !7444)
!7485 = !DILocation(line: 48, column: 1, scope: !7444)
!7486 = distinct !DISubprogram(name: "__ilog2_u64", scope: !7487, file: !7487, line: 30, type: !7488, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7487 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!7488 = !DISubroutineType(types: !7489)
!7489 = !{!165, !298}
!7490 = !DILocation(line: 366, column: 40, scope: !7449, inlinedAt: !7491)
!7491 = distinct !DILocation(line: 32, column: 9, scope: !7486)
!7492 = !DILocation(line: 368, column: 6, scope: !7449, inlinedAt: !7491)
!7493 = !DILocalVariable(name: "n", arg: 1, scope: !7486, file: !7487, line: 30, type: !298)
!7494 = !DILocation(line: 30, column: 21, scope: !7486)
!7495 = !DILocation(line: 32, column: 15, scope: !7486)
!7496 = !DILocation(line: 374, column: 2, scope: !7449, inlinedAt: !7491)
!7497 = !DILocation(line: 376, column: 14, scope: !7449, inlinedAt: !7491)
!7498 = !DILocation(line: 377, column: 9, scope: !7449, inlinedAt: !7491)
!7499 = !DILocation(line: 377, column: 16, scope: !7449, inlinedAt: !7491)
!7500 = !DILocation(line: 32, column: 18, scope: !7486)
!7501 = !DILocation(line: 32, column: 2, scope: !7486)
!7502 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !7503, file: !7503, line: 137, type: !7504, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7503 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!7504 = !DISubroutineType(types: !7505)
!7505 = !{!160, !2207, !2375, !1190, !158}
!7506 = !DILocalVariable(name: "s", arg: 1, scope: !7502, file: !7503, line: 137, type: !2207)
!7507 = !DILocation(line: 137, column: 54, scope: !7502)
!7508 = !DILocalVariable(name: "object", arg: 2, scope: !7502, file: !7503, line: 137, type: !2375)
!7509 = !DILocation(line: 137, column: 69, scope: !7502)
!7510 = !DILocalVariable(name: "size", arg: 3, scope: !7502, file: !7503, line: 138, type: !1190)
!7511 = !DILocation(line: 138, column: 12, scope: !7502)
!7512 = !DILocalVariable(name: "flags", arg: 4, scope: !7502, file: !7503, line: 138, type: !158)
!7513 = !DILocation(line: 138, column: 24, scope: !7502)
!7514 = !DILocation(line: 140, column: 17, scope: !7502)
!7515 = !DILocation(line: 140, column: 2, scope: !7502)
!7516 = distinct !DISubprogram(name: "set_bit", scope: !3137, file: !3137, line: 26, type: !3138, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7517 = !DILocalVariable(name: "nr", arg: 1, scope: !7518, file: !3143, line: 52, type: !545)
!7518 = distinct !DISubprogram(name: "arch_set_bit", scope: !3143, file: !3143, line: 52, type: !3138, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7519 = !DILocation(line: 52, column: 19, scope: !7518, inlinedAt: !7520)
!7520 = distinct !DILocation(line: 29, column: 2, scope: !7516)
!7521 = !DILocalVariable(name: "addr", arg: 2, scope: !7518, file: !3143, line: 52, type: !3140)
!7522 = !DILocation(line: 52, column: 47, scope: !7518, inlinedAt: !7520)
!7523 = !DILocation(line: 84, column: 74, scope: !3149, inlinedAt: !7524)
!7524 = distinct !DILocation(line: 28, column: 2, scope: !7516)
!7525 = !DILocation(line: 84, column: 84, scope: !3149, inlinedAt: !7524)
!7526 = !DILocalVariable(name: "nr", arg: 1, scope: !7516, file: !3137, line: 26, type: !545)
!7527 = !DILocation(line: 26, column: 33, scope: !7516)
!7528 = !DILocalVariable(name: "addr", arg: 2, scope: !7516, file: !3137, line: 26, type: !3140)
!7529 = !DILocation(line: 26, column: 61, scope: !7516)
!7530 = !DILocation(line: 28, column: 26, scope: !7516)
!7531 = !DILocation(line: 28, column: 33, scope: !7516)
!7532 = !DILocation(line: 28, column: 31, scope: !7516)
!7533 = !DILocation(line: 86, column: 20, scope: !3149, inlinedAt: !7524)
!7534 = !DILocation(line: 86, column: 23, scope: !3149, inlinedAt: !7524)
!7535 = !DILocation(line: 86, column: 2, scope: !3149, inlinedAt: !7524)
!7536 = !DILocation(line: 87, column: 2, scope: !3149, inlinedAt: !7524)
!7537 = !DILocation(line: 29, column: 15, scope: !7516)
!7538 = !DILocation(line: 29, column: 19, scope: !7516)
!7539 = !DILocation(line: 54, column: 27, scope: !7540, inlinedAt: !7520)
!7540 = distinct !DILexicalBlock(scope: !7518, file: !3143, line: 54, column: 6)
!7541 = !DILocation(line: 54, column: 6, scope: !7540, inlinedAt: !7520)
!7542 = !DILocation(line: 54, column: 6, scope: !7518, inlinedAt: !7520)
!7543 = !DILocation(line: 56, column: 6, scope: !7544, inlinedAt: !7520)
!7544 = distinct !DILexicalBlock(scope: !7540, file: !3143, line: 54, column: 32)
!7545 = !DILocation(line: 57, column: 12, scope: !7544, inlinedAt: !7520)
!7546 = !DILocation(line: 55, column: 3, scope: !7544, inlinedAt: !7520)
!7547 = !{i32 -2147118564}
!7548 = !DILocation(line: 59, column: 2, scope: !7544, inlinedAt: !7520)
!7549 = !DILocation(line: 61, column: 8, scope: !7550, inlinedAt: !7520)
!7550 = distinct !DILexicalBlock(scope: !7540, file: !3143, line: 59, column: 9)
!7551 = !DILocation(line: 61, column: 32, scope: !7550, inlinedAt: !7520)
!7552 = !DILocation(line: 60, column: 3, scope: !7550, inlinedAt: !7520)
!7553 = !{i32 -2147118432}
!7554 = !DILocation(line: 30, column: 1, scope: !7516)
!7555 = distinct !DISubprogram(name: "kasan_check_read", scope: !7425, file: !7425, line: 34, type: !7426, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7556 = !DILocalVariable(name: "p", arg: 1, scope: !7555, file: !7425, line: 34, type: !3153)
!7557 = !DILocation(line: 34, column: 58, scope: !7555)
!7558 = !DILocalVariable(name: "size", arg: 2, scope: !7555, file: !7425, line: 34, type: !7)
!7559 = !DILocation(line: 34, column: 74, scope: !7555)
!7560 = !DILocation(line: 36, column: 2, scope: !7555)
!7561 = distinct !DISubprogram(name: "__list_add", scope: !5448, file: !5448, line: 63, type: !7562, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7562 = !DISubroutineType(types: !7563)
!7563 = !{null, !223, !223, !223}
!7564 = !DILocalVariable(name: "new", arg: 1, scope: !7561, file: !5448, line: 63, type: !223)
!7565 = !DILocation(line: 63, column: 49, scope: !7561)
!7566 = !DILocalVariable(name: "prev", arg: 2, scope: !7561, file: !5448, line: 64, type: !223)
!7567 = !DILocation(line: 64, column: 28, scope: !7561)
!7568 = !DILocalVariable(name: "next", arg: 3, scope: !7561, file: !5448, line: 65, type: !223)
!7569 = !DILocation(line: 65, column: 28, scope: !7561)
!7570 = !DILocation(line: 67, column: 24, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7561, file: !5448, line: 67, column: 6)
!7572 = !DILocation(line: 67, column: 29, scope: !7571)
!7573 = !DILocation(line: 67, column: 35, scope: !7571)
!7574 = !DILocation(line: 67, column: 7, scope: !7571)
!7575 = !DILocation(line: 67, column: 6, scope: !7561)
!7576 = !DILocation(line: 68, column: 3, scope: !7571)
!7577 = !DILocation(line: 70, column: 15, scope: !7561)
!7578 = !DILocation(line: 70, column: 2, scope: !7561)
!7579 = !DILocation(line: 70, column: 8, scope: !7561)
!7580 = !DILocation(line: 70, column: 13, scope: !7561)
!7581 = !DILocation(line: 71, column: 14, scope: !7561)
!7582 = !DILocation(line: 71, column: 2, scope: !7561)
!7583 = !DILocation(line: 71, column: 7, scope: !7561)
!7584 = !DILocation(line: 71, column: 12, scope: !7561)
!7585 = !DILocation(line: 72, column: 14, scope: !7561)
!7586 = !DILocation(line: 72, column: 2, scope: !7561)
!7587 = !DILocation(line: 72, column: 7, scope: !7561)
!7588 = !DILocation(line: 72, column: 12, scope: !7561)
!7589 = !DILocation(line: 73, column: 2, scope: !7561)
!7590 = !DILocation(line: 73, column: 2, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7561, file: !5448, line: 73, column: 2)
!7592 = !DILocation(line: 73, column: 2, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7591, file: !5448, line: 73, column: 2)
!7594 = !DILocation(line: 73, column: 2, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7591, file: !5448, line: 73, column: 2)
!7596 = !DILocation(line: 74, column: 1, scope: !7561)
!7597 = distinct !DISubprogram(name: "__list_add_valid", scope: !5448, file: !5448, line: 45, type: !7598, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7598 = !DISubroutineType(types: !7599)
!7599 = !{!400, !223, !223, !223}
!7600 = !DILocalVariable(name: "new", arg: 1, scope: !7597, file: !5448, line: 45, type: !223)
!7601 = !DILocation(line: 45, column: 55, scope: !7597)
!7602 = !DILocalVariable(name: "prev", arg: 2, scope: !7597, file: !5448, line: 46, type: !223)
!7603 = !DILocation(line: 46, column: 23, scope: !7597)
!7604 = !DILocalVariable(name: "next", arg: 3, scope: !7597, file: !5448, line: 47, type: !223)
!7605 = !DILocation(line: 47, column: 23, scope: !7597)
!7606 = !DILocation(line: 49, column: 2, scope: !7597)
!7607 = distinct !DISubprogram(name: "__list_del_entry", scope: !5448, file: !5448, line: 130, type: !5462, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7608 = !DILocalVariable(name: "entry", arg: 1, scope: !7607, file: !5448, line: 130, type: !223)
!7609 = !DILocation(line: 130, column: 55, scope: !7607)
!7610 = !DILocation(line: 132, column: 30, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7607, file: !5448, line: 132, column: 6)
!7612 = !DILocation(line: 132, column: 7, scope: !7611)
!7613 = !DILocation(line: 132, column: 6, scope: !7607)
!7614 = !DILocation(line: 133, column: 3, scope: !7611)
!7615 = !DILocation(line: 135, column: 13, scope: !7607)
!7616 = !DILocation(line: 135, column: 20, scope: !7607)
!7617 = !DILocation(line: 135, column: 26, scope: !7607)
!7618 = !DILocation(line: 135, column: 33, scope: !7607)
!7619 = !DILocation(line: 135, column: 2, scope: !7607)
!7620 = !DILocation(line: 136, column: 1, scope: !7607)
!7621 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !5448, file: !5448, line: 51, type: !7622, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7622 = !DISubroutineType(types: !7623)
!7623 = !{!400, !223}
!7624 = !DILocalVariable(name: "entry", arg: 1, scope: !7621, file: !5448, line: 51, type: !223)
!7625 = !DILocation(line: 51, column: 61, scope: !7621)
!7626 = !DILocation(line: 53, column: 2, scope: !7621)
!7627 = distinct !DISubprogram(name: "__list_del", scope: !5448, file: !5448, line: 110, type: !5449, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7628 = !DILocalVariable(name: "prev", arg: 1, scope: !7627, file: !5448, line: 110, type: !223)
!7629 = !DILocation(line: 110, column: 50, scope: !7627)
!7630 = !DILocalVariable(name: "next", arg: 2, scope: !7627, file: !5448, line: 110, type: !223)
!7631 = !DILocation(line: 110, column: 75, scope: !7627)
!7632 = !DILocation(line: 112, column: 15, scope: !7627)
!7633 = !DILocation(line: 112, column: 2, scope: !7627)
!7634 = !DILocation(line: 112, column: 8, scope: !7627)
!7635 = !DILocation(line: 112, column: 13, scope: !7627)
!7636 = !DILocation(line: 113, column: 2, scope: !7627)
!7637 = !DILocation(line: 113, column: 2, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7627, file: !5448, line: 113, column: 2)
!7639 = !DILocation(line: 113, column: 2, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7638, file: !5448, line: 113, column: 2)
!7641 = !DILocation(line: 113, column: 2, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7638, file: !5448, line: 113, column: 2)
!7643 = !DILocation(line: 114, column: 1, scope: !7627)
!7644 = distinct !DISubprogram(name: "alloc_pages_node", scope: !6982, file: !6982, line: 532, type: !7645, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7645 = !DISubroutineType(types: !7646)
!7646 = !{!207, !165, !158, !7}
!7647 = !DILocalVariable(name: "nid", arg: 1, scope: !7644, file: !6982, line: 532, type: !165)
!7648 = !DILocation(line: 532, column: 49, scope: !7644)
!7649 = !DILocalVariable(name: "gfp_mask", arg: 2, scope: !7644, file: !6982, line: 532, type: !158)
!7650 = !DILocation(line: 532, column: 60, scope: !7644)
!7651 = !DILocalVariable(name: "order", arg: 3, scope: !7644, file: !6982, line: 533, type: !7)
!7652 = !DILocation(line: 533, column: 20, scope: !7644)
!7653 = !DILocation(line: 535, column: 6, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7644, file: !6982, line: 535, column: 6)
!7655 = !DILocation(line: 535, column: 10, scope: !7654)
!7656 = !DILocation(line: 535, column: 6, scope: !7644)
!7657 = !DILocation(line: 536, column: 9, scope: !7654)
!7658 = !DILocation(line: 536, column: 7, scope: !7654)
!7659 = !DILocation(line: 536, column: 3, scope: !7654)
!7660 = !DILocation(line: 538, column: 28, scope: !7644)
!7661 = !DILocation(line: 538, column: 33, scope: !7644)
!7662 = !DILocation(line: 538, column: 43, scope: !7644)
!7663 = !DILocation(line: 538, column: 9, scope: !7644)
!7664 = !DILocation(line: 538, column: 2, scope: !7644)
!7665 = distinct !DISubprogram(name: "numa_node_id", scope: !7666, file: !7666, line: 85, type: !3229, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7666 = !DIFile(filename: "./arch/x86/include/asm/topology.h", directory: "/home/lizy2001/genbc/linux")
!7667 = !DILocation(line: 87, column: 2, scope: !7665)
!7668 = distinct !DISubprogram(name: "numa_mem_id", scope: !7669, file: !7669, line: 167, type: !3229, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7669 = !DIFile(filename: "./include/linux/topology.h", directory: "/home/lizy2001/genbc/linux")
!7670 = !DILocation(line: 169, column: 9, scope: !7668)
!7671 = !DILocation(line: 169, column: 2, scope: !7668)
!7672 = distinct !DISubprogram(name: "__alloc_pages_node", scope: !6982, file: !6982, line: 519, type: !7645, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7673 = !DILocalVariable(name: "nid", arg: 1, scope: !7672, file: !6982, line: 519, type: !165)
!7674 = !DILocation(line: 519, column: 24, scope: !7672)
!7675 = !DILocalVariable(name: "gfp_mask", arg: 2, scope: !7672, file: !6982, line: 519, type: !158)
!7676 = !DILocation(line: 519, column: 35, scope: !7672)
!7677 = !DILocalVariable(name: "order", arg: 3, scope: !7672, file: !6982, line: 519, type: !7)
!7678 = !DILocation(line: 519, column: 58, scope: !7672)
!7679 = !DILocation(line: 524, column: 23, scope: !7672)
!7680 = !DILocation(line: 524, column: 33, scope: !7672)
!7681 = !DILocation(line: 524, column: 40, scope: !7672)
!7682 = !DILocation(line: 524, column: 9, scope: !7672)
!7683 = !DILocation(line: 524, column: 2, scope: !7672)
!7684 = distinct !DISubprogram(name: "__alloc_pages", scope: !6982, file: !6982, line: 509, type: !7685, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7685 = !DISubroutineType(types: !7686)
!7686 = !{!207, !158, !7, !165}
!7687 = !DILocalVariable(name: "gfp_mask", arg: 1, scope: !7684, file: !6982, line: 509, type: !158)
!7688 = !DILocation(line: 509, column: 21, scope: !7684)
!7689 = !DILocalVariable(name: "order", arg: 2, scope: !7684, file: !6982, line: 509, type: !7)
!7690 = !DILocation(line: 509, column: 44, scope: !7684)
!7691 = !DILocalVariable(name: "preferred_nid", arg: 3, scope: !7684, file: !6982, line: 509, type: !165)
!7692 = !DILocation(line: 509, column: 55, scope: !7684)
!7693 = !DILocation(line: 511, column: 32, scope: !7684)
!7694 = !DILocation(line: 511, column: 42, scope: !7684)
!7695 = !DILocation(line: 511, column: 49, scope: !7684)
!7696 = !DILocation(line: 511, column: 9, scope: !7684)
!7697 = !DILocation(line: 511, column: 2, scope: !7684)
!7698 = distinct !DISubprogram(name: "compound_head", scope: !119, file: !119, line: 183, type: !7699, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7699 = !DISubroutineType(types: !7700)
!7700 = !{!207, !207}
!7701 = !DILocalVariable(name: "page", arg: 1, scope: !7698, file: !119, line: 183, type: !207)
!7702 = !DILocation(line: 183, column: 55, scope: !7698)
!7703 = !DILocalVariable(name: "head", scope: !7698, file: !119, line: 185, type: !212)
!7704 = !DILocation(line: 185, column: 16, scope: !7698)
!7705 = !DILocation(line: 185, column: 23, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7698, file: !119, line: 185, column: 23)
!7707 = !DILocation(line: 185, column: 23, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7706, file: !119, line: 185, column: 23)
!7709 = !DILocation(line: 187, column: 6, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7698, file: !119, line: 187, column: 6)
!7711 = !DILocation(line: 187, column: 6, scope: !7698)
!7712 = !DILocation(line: 188, column: 27, scope: !7710)
!7713 = !DILocation(line: 188, column: 32, scope: !7710)
!7714 = !DILocation(line: 188, column: 10, scope: !7710)
!7715 = !DILocation(line: 188, column: 3, scope: !7710)
!7716 = !DILocation(line: 189, column: 9, scope: !7698)
!7717 = !DILocation(line: 189, column: 2, scope: !7698)
!7718 = !DILocation(line: 190, column: 1, scope: !7698)
!7719 = distinct !DISubprogram(name: "page_ref_inc", scope: !7720, file: !7720, line: 114, type: !2907, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7720 = !DIFile(filename: "./include/linux/page_ref.h", directory: "/home/lizy2001/genbc/linux")
!7721 = !DILocation(line: 93, column: 55, scope: !6900, inlinedAt: !7722)
!7722 = distinct !DILocation(line: 241, column: 2, scope: !6906, inlinedAt: !7723)
!7723 = distinct !DILocation(line: 116, column: 2, scope: !7719)
!7724 = !DILocation(line: 99, column: 79, scope: !6912, inlinedAt: !7725)
!7725 = distinct !DILocation(line: 240, column: 2, scope: !6906, inlinedAt: !7723)
!7726 = !DILocation(line: 99, column: 89, scope: !6912, inlinedAt: !7725)
!7727 = !DILocation(line: 238, column: 22, scope: !6906, inlinedAt: !7723)
!7728 = !DILocalVariable(name: "page", arg: 1, scope: !7719, file: !7720, line: 114, type: !207)
!7729 = !DILocation(line: 114, column: 46, scope: !7719)
!7730 = !DILocation(line: 116, column: 14, scope: !7719)
!7731 = !DILocation(line: 116, column: 20, scope: !7719)
!7732 = !DILocation(line: 240, column: 31, scope: !6906, inlinedAt: !7723)
!7733 = !DILocation(line: 101, column: 20, scope: !6912, inlinedAt: !7725)
!7734 = !DILocation(line: 101, column: 23, scope: !6912, inlinedAt: !7725)
!7735 = !DILocation(line: 101, column: 2, scope: !6912, inlinedAt: !7725)
!7736 = !DILocation(line: 102, column: 2, scope: !6912, inlinedAt: !7725)
!7737 = !DILocation(line: 241, column: 18, scope: !6906, inlinedAt: !7723)
!7738 = !DILocation(line: 96, column: 16, scope: !6900, inlinedAt: !7722)
!7739 = !DILocation(line: 96, column: 19, scope: !6900, inlinedAt: !7722)
!7740 = !DILocation(line: 95, column: 2, scope: !6900, inlinedAt: !7722)
!7741 = !DILocation(line: 119, column: 1, scope: !7719)
!7742 = distinct !DISubprogram(name: "page_is_devmap_managed", scope: !26, file: !26, line: 1126, type: !7743, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7743 = !DISubroutineType(types: !7744)
!7744 = !{!400, !207}
!7745 = !DILocalVariable(name: "page", arg: 1, scope: !7742, file: !26, line: 1126, type: !207)
!7746 = !DILocation(line: 1126, column: 56, scope: !7742)
!7747 = !DILocation(line: 1128, column: 2, scope: !7742)
!7748 = distinct !DISubprogram(name: "put_devmap_managed_page", scope: !26, file: !26, line: 1131, type: !2907, scopeLine: 1132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7749 = !DILocalVariable(name: "page", arg: 1, scope: !7748, file: !26, line: 1131, type: !207)
!7750 = !DILocation(line: 1131, column: 57, scope: !7748)
!7751 = !DILocation(line: 1133, column: 1, scope: !7748)
!7752 = distinct !DISubprogram(name: "put_page_testzero", scope: !26, file: !26, line: 705, type: !2866, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7753 = !DILocalVariable(name: "page", arg: 1, scope: !7752, file: !26, line: 705, type: !207)
!7754 = !DILocation(line: 705, column: 50, scope: !7752)
!7755 = !DILocation(line: 708, column: 31, scope: !7752)
!7756 = !DILocation(line: 708, column: 9, scope: !7752)
!7757 = !DILocation(line: 708, column: 2, scope: !7752)
!7758 = distinct !DISubprogram(name: "page_ref_dec_and_test", scope: !7720, file: !7720, line: 146, type: !2866, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7759 = !DILocalVariable(name: "v", arg: 1, scope: !7760, file: !4925, line: 121, type: !6903)
!7760 = distinct !DISubprogram(name: "arch_atomic_dec_and_test", scope: !4925, file: !4925, line: 121, type: !7761, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7761 = !DISubroutineType(types: !7762)
!7762 = !{!400, !6903}
!7763 = !DILocation(line: 121, column: 64, scope: !7760, inlinedAt: !7764)
!7764 = distinct !DILocation(line: 749, column: 9, scope: !7765, inlinedAt: !7766)
!7765 = distinct !DISubprogram(name: "atomic_dec_and_test", scope: !4933, file: !4933, line: 746, type: !7761, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7766 = distinct !DILocation(line: 148, column: 12, scope: !7758)
!7767 = !DILocalVariable(name: "c", scope: !7768, file: !4925, line: 123, type: !400)
!7768 = distinct !DILexicalBlock(scope: !7760, file: !4925, line: 123, column: 9)
!7769 = !DILocation(line: 123, column: 9, scope: !7768, inlinedAt: !7764)
!7770 = !DILocation(line: 99, column: 79, scope: !6912, inlinedAt: !7771)
!7771 = distinct !DILocation(line: 748, column: 2, scope: !7765, inlinedAt: !7766)
!7772 = !DILocation(line: 99, column: 89, scope: !6912, inlinedAt: !7771)
!7773 = !DILocalVariable(name: "v", arg: 1, scope: !7765, file: !4933, line: 746, type: !6903)
!7774 = !DILocation(line: 746, column: 31, scope: !7765, inlinedAt: !7766)
!7775 = !DILocalVariable(name: "page", arg: 1, scope: !7758, file: !7720, line: 146, type: !207)
!7776 = !DILocation(line: 146, column: 54, scope: !7758)
!7777 = !DILocalVariable(name: "ret", scope: !7758, file: !7720, line: 148, type: !165)
!7778 = !DILocation(line: 148, column: 6, scope: !7758)
!7779 = !DILocation(line: 148, column: 33, scope: !7758)
!7780 = !DILocation(line: 148, column: 39, scope: !7758)
!7781 = !DILocation(line: 748, column: 31, scope: !7765, inlinedAt: !7766)
!7782 = !DILocation(line: 101, column: 20, scope: !6912, inlinedAt: !7771)
!7783 = !DILocation(line: 101, column: 23, scope: !6912, inlinedAt: !7771)
!7784 = !DILocation(line: 101, column: 2, scope: !6912, inlinedAt: !7771)
!7785 = !DILocation(line: 102, column: 2, scope: !6912, inlinedAt: !7771)
!7786 = !DILocation(line: 749, column: 34, scope: !7765, inlinedAt: !7766)
!7787 = !{i32 -2146593430, i32 -2146593363}
!7788 = !DILocation(line: 148, column: 12, scope: !7758)
!7789 = !DILocation(line: 152, column: 9, scope: !7758)
!7790 = !DILocation(line: 152, column: 2, scope: !7758)
!7791 = distinct !DISubprogram(name: "wbinvd", scope: !7792, file: !7792, line: 158, type: !2130, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !334)
!7792 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!7793 = !DILocalVariable(name: "__edi", scope: !7794, file: !7792, line: 160, type: !212)
!7794 = distinct !DILexicalBlock(scope: !7791, file: !7792, line: 160, column: 2)
!7795 = !DILocation(line: 160, column: 2, scope: !7794)
!7796 = !DILocalVariable(name: "__esi", scope: !7794, file: !7792, line: 160, type: !212)
!7797 = !DILocalVariable(name: "__edx", scope: !7794, file: !7792, line: 160, type: !212)
!7798 = !DILocalVariable(name: "__ecx", scope: !7794, file: !7792, line: 160, type: !212)
!7799 = !DILocalVariable(name: "__eax", scope: !7794, file: !7792, line: 160, type: !212)
!7800 = !{i32 -2145958942, i32 -2145958060, i32 -2145957826, i32 -2145957775, i32 -2145957747, i32 -2145957722, i32 -2145958038, i32 -2145958025, i32 -2145957587, i32 -2145957468, i32 -2145957933, i32 -2145957906, i32 -2145957878, i32 -2145957848}
!7801 = !DILocation(line: 161, column: 1, scope: !7791)
