; ModuleID = '../bcout/drivers/char/random.llvm.bc'
source_filename = "drivers/char/random.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.obs_kernel_param = type { i8*, i32 (i8*)*, i32 }
%struct.entropy_store = type { %struct.poolinfo*, i32*, i8*, %struct.spinlock, i16, i16, i32, i8, [10 x i8] }
%struct.poolinfo = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.timer_rand_state = type { i64, i64, i64 }
%struct.fast_pool = type { [4 x i32], i64, i16, i8 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.crng_state = type { [16 x i32], i64, %struct.spinlock }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.90, %struct.list_head, %struct.list_head, %union.anon.91 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.88 }
%union.anon.88 = type { %struct.anon.89 }
%struct.anon.89 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.3, %union.anon.80, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.80 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.81, i32 }
%union.anon.81 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic_t = type { i32 }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.92, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.92 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.73, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.kmem_cache = type opaque
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type { %struct.kref, %struct.new_utsname, %struct.user_namespace*, %struct.ucounts*, %struct.ns_common }
%struct.new_utsname = type { [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8] }
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.36, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.36 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.37, %union.anon.38, i32 }
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.93, %union.anon.94, %union.anon.95, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.98, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.93 = type { %struct.hlist_node }
%union.anon.94 = type { %struct.rb_node }
%union.anon.95 = type { %struct.anon.97 }
%struct.anon.97 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.98 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.99, void (i8*)*, i8* }
%union.anon.99 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.65, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.65 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%union.anon.37 = type { %struct.list_head }
%union.anon.38 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.39 }
%struct.anon.39 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.43 }
%struct.anon.43 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type { %struct.pmu*, %struct.raw_spinlock, %struct.mutex, %struct.list_head, %struct.perf_event_groups, %struct.perf_event_groups, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, i32, i32, %struct.refcount_struct, %struct.task_struct*, i64, i64, %struct.perf_event_context*, i64, i64, i32, i8*, %struct.callback_head }
%struct.pmu = type { %struct.list_head, %struct.module*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, i8*, i32, i32, i32*, %struct.perf_cpu_context*, %struct.atomic_t, i32, i32, i32, void (%struct.pmu*)*, void (%struct.pmu*)*, i32 (%struct.perf_event*)*, void (%struct.perf_event*, %struct.mm_struct*)*, void (%struct.perf_event*, %struct.mm_struct*)*, i32 (%struct.perf_event*, i32)*, void (%struct.perf_event*, i32)*, void (%struct.perf_event*, i32)*, void (%struct.perf_event*, i32)*, void (%struct.perf_event*)*, void (%struct.pmu*, i32)*, i32 (%struct.pmu*)*, void (%struct.pmu*)*, i32 (%struct.perf_event*)*, void (%struct.perf_event_context*, i1)*, %struct.kmem_cache*, void (%struct.perf_event_context*, %struct.perf_event_context*)*, i8* (%struct.perf_event*, i8**, i32, i1)*, void (i8*)*, i64 (%struct.perf_event*, %struct.perf_output_handle*, i64)*, i32 (%struct.list_head*)*, void (%struct.perf_event*)*, i32 (%struct.perf_event*)*, i32 (%struct.perf_event*)*, i32 (%struct.perf_event*, i64)* }
%struct.perf_cpu_context = type { %struct.perf_event_context, %struct.perf_event_context*, i32, i32, %struct.raw_spinlock, %struct.hrtimer, i64, i32, i32, i32, i32, %struct.perf_event**, [2 x %struct.perf_event*] }
%struct.perf_event = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.rb_node, i64, %struct.list_head, %struct.hlist_node, %struct.list_head, i32, i32, i32, %struct.perf_event*, %struct.pmu*, i8*, i32, i32, %struct.local64_t, %struct.atomic64_t, i64, i64, i64, i64, %struct.perf_event_attr, i16, i16, i16, %struct.hw_perf_event, %struct.perf_event_context*, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.mutex, %struct.list_head, %struct.perf_event*, i32, i32, %struct.list_head, %struct.task_struct*, %struct.mutex, %struct.atomic_t, %struct.perf_buffer*, %struct.list_head, i64, i32, %struct.wait_queue_head, %struct.fasync_struct*, i32, i32, i32, %struct.irq_work, %struct.atomic_t, %struct.perf_addr_filters_head, %struct.perf_addr_filter_range*, i64, %struct.perf_event*, void (%struct.perf_event*)*, %struct.callback_head, %struct.pid_namespace*, i64, i64 ()*, void (%struct.perf_event*, %struct.perf_sample_data*, %struct.pt_regs*)*, i8*, %struct.list_head }
%struct.local64_t = type { %struct.local_t }
%struct.local_t = type { %struct.atomic64_t }
%struct.perf_event_attr = type { i32, i32, i64, %union.anon.50, i64, i64, i64, %union.anon.51, i32, %union.anon.52, %union.anon.53, i64, i64, i32, i32, i64, i32, i16, i16, i32, i32 }
%union.anon.50 = type { i64 }
%union.anon.51 = type { i32 }
%union.anon.52 = type { i64 }
%union.anon.53 = type { i64 }
%struct.hw_perf_event = type { %union.anon.54, %struct.task_struct*, i8*, i64, i32, %struct.local64_t, i64, %union.anon.61, i64, i64, i64, i64 }
%union.anon.54 = type { %struct.anon.55 }
%struct.anon.55 = type { i64, i64, i64, i64, i32, i32, i32, i32, %struct.hw_perf_event_extra, %struct.hw_perf_event_extra }
%struct.hw_perf_event_extra = type { i64, i32, i32, i32 }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type { i64, %struct.local64_t }
%struct.perf_buffer = type opaque
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.irq_work = type { %union.anon.64, void (%struct.irq_work*)* }
%union.anon.64 = type { %struct.__call_single_node }
%struct.perf_addr_filters_head = type { %struct.list_head, %struct.raw_spinlock, i32 }
%struct.perf_addr_filter_range = type { i64, i64 }
%struct.perf_sample_data = type { i64, %struct.perf_raw_record*, %struct.perf_branch_stack*, i64, i64, i64, %union.perf_mem_data_src, i64, i64, %struct.anon.69, i64, i64, i64, %struct.anon.70, %struct.perf_callchain_entry*, i64, %struct.perf_regs, %struct.perf_regs, i64, i64, i64, [8 x i8] }
%struct.perf_raw_record = type { %struct.perf_raw_frag, i32 }
%struct.perf_raw_frag = type <{ %union.anon.67, i64 (i8*, i8*, i64, i64)*, i8*, i32 }>
%union.anon.67 = type { %struct.perf_raw_frag* }
%struct.perf_branch_stack = type { i64, i64, [0 x %struct.perf_branch_entry] }
%struct.perf_branch_entry = type { i64, i64, i64 }
%union.perf_mem_data_src = type { i64 }
%struct.anon.69 = type { i32, i32 }
%struct.anon.70 = type { i32, i32 }
%struct.perf_callchain_entry = type { i64, [0 x i64] }
%struct.perf_regs = type { i64, %struct.pt_regs* }
%struct.pt_regs = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.perf_output_handle = type { %struct.perf_event*, %struct.perf_buffer*, i64, i64, i64, %union.anon.71, i32 }
%union.anon.71 = type { i8* }
%struct.perf_event_groups = type { %struct.rb_root, i64 }
%struct.rseq = type { i32, i32, %union.anon.72, i32, [12 x i8] }
%union.anon.72 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.73 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.74, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.77 }
%union.anon.74 = type { %struct.anon.75 }
%struct.anon.75 = type { i64, i64 }
%union.anon.77 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type opaque
%struct.acpi_device_id = type opaque
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, {}*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.23 }
%union.anon.23 = type { %struct.anon.24, [48 x i8] }
%struct.anon.24 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.33, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.33 = type { %struct.anon.34 }
%struct.anon.34 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.90 = type { %struct.list_head }
%union.anon.91 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.82, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.83, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.84, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.87, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.82 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.83 = type { %struct.callback_head }
%union.anon.84 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.swap_info_struct = type opaque
%union.anon.87 = type { %struct.pipe_inode_info* }
%struct.atomic64_t = type { i64 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.35 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.35 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type opaque
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.85 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.85 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.batched_entropy = type { %union.anon.101, i32, %struct.spinlock }
%union.anon.101 = type { [8 x i64] }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.cpuinfo_x86 = type { i8, i8, i8, i8, i32, [3 x i32], i8, i8, i8, i8, i32, i32, %union.anon.103, [16 x i8], [64 x i8], i32, i32, i32, i32, i32, i32, i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i8, i8 }
%union.anon.103 = type { i64, [72 x i8] }
%struct.anon.102 = type { i64, i32, i32 }
%struct.anon.106 = type { i64, %struct.timer_list }
%struct.random_ready_callback = type { %struct.list_head, void (%struct.random_ready_callback*)*, %struct.module* }
%union.anon.104 = type { [8 x i32], [32 x i8] }
%union.anon.105 = type { [3 x i64] }

@__param_str_ratelimit_disable = internal constant [25 x i8] c"random.ratelimit_disable\00", align 16, !dbg !0
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@ratelimit_disable = internal global i32 0, section ".data..read_mostly", align 4, !dbg !5499
@__param_ratelimit_disable = internal constant %struct.kernel_param { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__param_str_ratelimit_disable, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @ratelimit_disable to i8*) } }, section "__param", align 8, !dbg !5399
@__UNIQUE_ID_ratelimit_disabletype304 = internal constant [38 x i8] c"random.parmtype=ratelimit_disable:int\00", section ".modinfo", align 1, !dbg !5451
@__UNIQUE_ID_ratelimit_disable305 = internal constant [67 x i8] c"random.parm=ratelimit_disable:Disable random ratelimit suppression\00", section ".modinfo", align 1, !dbg !5456
@__setup_str_parse_trust_cpu = internal constant [17 x i8] c"random.trust_cpu\00", section ".init.rodata", align 1, !dbg !5507
@__setup_parse_trust_cpu = internal global %struct.obs_kernel_param { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__setup_str_parse_trust_cpu, i32 0, i32 0), i32 (i8*)* @parse_trust_cpu, i32 1 }, section ".init.setup", align 8, !dbg !5461
@jiffies = external dso_local global i64, align 8
@crng_init = internal global i32 0, align 4, !dbg !5514
@input_pool = internal global %struct.entropy_store { %struct.poolinfo* getelementptr inbounds ([1 x %struct.poolinfo], [1 x %struct.poolinfo]* @poolinfo_table, i32 0, i32 0), i32* getelementptr inbounds ([128 x i32], [128 x i32]* @input_pool_data, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), %struct.spinlock undef, i16 0, i16 0, i32 0, i8 0, [10 x i8] zeroinitializer }, align 8, !dbg !5521
@add_input_randomness.last_value = internal global i8 0, align 1, !dbg !5472
@input_timer_state = internal global %struct.timer_rand_state { i64 4294892296, i64 0, i64 0 }, align 8, !dbg !5561
@irq_randomness = internal global %struct.fast_pool zeroinitializer, section ".data", align 8, !dbg !5501
@get_random_bytes.previous = internal global i8* null, align 8, !dbg !5477
@__func__.get_random_bytes = private unnamed_addr constant [17 x i8] c"get_random_bytes\00", align 1
@crng_init_wait = internal global %struct.wait_queue_head { %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (%struct.wait_queue_head* @crng_init_wait to %struct.list_head*), %struct.list_head* bitcast (%struct.wait_queue_head* @crng_init_wait to %struct.list_head*) } }, align 8, !dbg !5572
@random_ready_list_lock = internal global %struct.spinlock undef, align 1, !dbg !5574
@random_ready_list = internal global %struct.list_head { %struct.list_head* @random_ready_list, %struct.list_head* @random_ready_list }, align 8, !dbg !5576
@primary_crng = internal global %struct.crng_state { [16 x i32] zeroinitializer, i64 0, %struct.spinlock undef }, align 8, !dbg !5578
@crng_global_init_time = internal global i64 0, align 8, !dbg !5586
@urandom_warning = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 250, i32 3, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !5588
@unseeded_warning = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 250, i32 3, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !5590
@random_fops = dso_local constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @noop_llseek, i64 (%struct.file*, i8*, i64, i64*)* @random_read, i64 (%struct.file*, i8*, i64, i64*)* @random_write, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* @random_poll, i64 (%struct.file*, i32, i64)* @random_ioctl, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i64 0, i32 (%struct.inode*, %struct.file*)* null, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* null, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* @random_fasync, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !5482
@urandom_fops = dso_local constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @noop_llseek, i64 (%struct.file*, i8*, i64, i64*)* @urandom_read, i64 (%struct.file*, i8*, i64, i64*)* @random_write, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* null, i64 (%struct.file*, i32, i64)* @random_ioctl, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i64 0, i32 (%struct.inode*, %struct.file*)* null, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* null, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* @random_fasync, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !5484
@.str = private unnamed_addr constant [9 x i8] c"poolsize\00", align 1
@sysctl_poolsize = internal global i32 4096, align 4, !dbg !5595
@.str.1 = private unnamed_addr constant [14 x i8] c"entropy_avail\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"write_wakeup_threshold\00", align 1
@random_write_wakeup_bits = internal global i32 896, align 4, !dbg !5597
@min_write_thresh = internal global i32 0, align 4, !dbg !5503
@max_write_thresh = internal global i32 4096, align 4, !dbg !5599
@.str.3 = private unnamed_addr constant [24 x i8] c"urandom_min_reseed_secs\00", align 1
@random_min_urandom_seed = internal global i32 60, align 4, !dbg !5601
@.str.4 = private unnamed_addr constant [8 x i8] c"boot_id\00", align 1
@sysctl_bootid = internal global [16 x i8] zeroinitializer, align 16, !dbg !5505
@.str.5 = private unnamed_addr constant [5 x i8] c"uuid\00", align 1
@random_table = dso_local global [7 x %struct.ctl_table] [%struct.ctl_table { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i8* bitcast (i32* @sysctl_poolsize to i8*), i32 4, i16 292, %struct.ctl_table* null, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)* @proc_dointvec, %struct.ctl_table_poll* null, i8* null, i8* null }, %struct.ctl_table { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr (i8, i8* bitcast (%struct.entropy_store* @input_pool to i8*), i64 28), i32 4, i16 292, %struct.ctl_table* null, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)* @proc_do_entropy, %struct.ctl_table_poll* null, i8* null, i8* null }, %struct.ctl_table { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0), i8* bitcast (i32* @random_write_wakeup_bits to i8*), i32 4, i16 420, %struct.ctl_table* null, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)* @proc_dointvec_minmax, %struct.ctl_table_poll* null, i8* bitcast (i32* @min_write_thresh to i8*), i8* bitcast (i32* @max_write_thresh to i8*) }, %struct.ctl_table { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i32 0, i32 0), i8* bitcast (i32* @random_min_urandom_seed to i8*), i32 4, i16 420, %struct.ctl_table* null, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)* @proc_dointvec, %struct.ctl_table_poll* null, i8* null, i8* null }, %struct.ctl_table { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @sysctl_bootid, i32 0, i32 0), i32 16, i16 292, %struct.ctl_table* null, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)* @proc_do_uuid, %struct.ctl_table_poll* null, i8* null, i8* null }, %struct.ctl_table { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* null, i32 16, i16 292, %struct.ctl_table* null, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)* @proc_do_uuid, %struct.ctl_table_poll* null, i8* null, i8* null }, %struct.ctl_table zeroinitializer], align 16, !dbg !5486
@get_random_u64.previous = internal global i8* null, align 8, !dbg !5491
@__func__.get_random_u64 = private unnamed_addr constant [15 x i8] c"get_random_u64\00", align 1
@batched_entropy_u64 = internal global %struct.batched_entropy { %union.anon.101 zeroinitializer, i32 0, %struct.spinlock undef }, section ".data", align 8, !dbg !5606
@get_random_u32.previous = internal global i8* null, align 8, !dbg !5494
@__func__.get_random_u32 = private unnamed_addr constant [15 x i8] c"get_random_u32\00", align 1
@batched_entropy_u32 = internal global %struct.batched_entropy { %union.anon.101 zeroinitializer, i32 0, %struct.spinlock undef }, section ".data", align 8, !dbg !5608
@random_write_wait = internal global %struct.wait_queue_head { %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (%struct.wait_queue_head* @random_write_wait to %struct.list_head*), %struct.list_head* bitcast (%struct.wait_queue_head* @random_write_wait to %struct.list_head*) } }, align 8, !dbg !5610
@trust_cpu = internal global i8 0, section ".data..ro_after_init", align 1, !dbg !5512
@crng_slow_load.lfsr = internal global i8 1, align 1, !dbg !5516
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@poolinfo_table = internal constant [1 x %struct.poolinfo] [%struct.poolinfo { i32 12, i32 128, i32 512, i32 32768, i32 104, i32 76, i32 51, i32 25, i32 1 }], align 16, !dbg !5549
@input_pool_data = internal global [128 x i32] zeroinitializer, align 16, !dbg !5552
@.str.6 = private unnamed_addr constant [6 x i8] c"input\00", align 1
@twist_table = internal constant [8 x i32] [i32 0, i32 997073096, i32 1994146192, i32 1303535960, i32 -306674912, i32 -690576408, i32 -1687895376, i32 -1609899400], align 16, !dbg !5557
@.str.7 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@__irq_regs = external dso_local global %struct.pt_regs*, section ".data", align 8
@crng_init_cnt = internal global i32 0, align 4, !dbg !5563
@.str.8 = private unnamed_addr constant [26 x i8] c"\015random: fast init done\0A\00", align 1
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 8
@boot_cpu_data = external dso_local global %struct.cpuinfo_x86, align 8
@.str.9 = private unnamed_addr constant [22 x i8] c"drivers/char/random.c\00", align 1
@.str.10 = private unnamed_addr constant [55 x i8] c"\014random: negative entropy/overflow: pool %s count %d\0A\00", align 1
@fasync = internal global %struct.fasync_struct* null, align 8, !dbg !5565
@.str.11 = private unnamed_addr constant [26 x i8] c"\015random: crng init done\0A\00", align 1
@.str.12 = private unnamed_addr constant [66 x i8] c"\015random: %d get_random_xx warning(s) missed due to ratelimiting\0A\00", align 1
@.str.13 = private unnamed_addr constant [60 x i8] c"\015random: %d urandom warning(s) missed due to ratelimiting\0A\00", align 1
@.str.14 = private unnamed_addr constant [52 x i8] c"\014random: negative entropy count: pool %s count %d\0A\00", align 1
@.str.15 = private unnamed_addr constant [33 x i8] c"Hardware RNG duplicated output!\0A\00", align 1
@_warn_unseeded_randomness.print_once = internal global i8 0, section ".data..read_mostly", align 1, !dbg !5567
@__func__._warn_unseeded_randomness = private unnamed_addr constant [26 x i8] c"_warn_unseeded_randomness\00", align 1
@.str.16 = private unnamed_addr constant [48 x i8] c"\015random: %s called from %pS with crng_init=%d\0A\00", align 1
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@.str.17 = private unnamed_addr constant [17 x i8] c"expand 32-byte k\00", align 1
@.str.18 = private unnamed_addr constant [51 x i8] c"\015random: crng done (trusting CPU's manufacturer)\0A\00", align 1
@system_state = external dso_local global i32, align 4
@.str.19 = private unnamed_addr constant [23 x i8] c"include/linux/random.h\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.20 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.22 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@urandom_read.maxwarn = internal global i32 10, align 4, !dbg !5592
@__func__.urandom_read = private unnamed_addr constant [13 x i8] c"urandom_read\00", align 1
@.str.23 = private unnamed_addr constant [59 x i8] c"\015random: %s: uninitialized urandom read (%zd bytes read)\0A\00", align 1
@proc_do_uuid.bootid_spinlock = internal global %struct.spinlock undef, align 1, !dbg !5603
@.str.24 = private unnamed_addr constant [4 x i8] c"%pU\00", align 1
@llvm.used = appending global [4 x i8*] [i8* bitcast (%struct.kernel_param* @__param_ratelimit_disable to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_ratelimit_disabletype304, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__UNIQUE_ID_ratelimit_disable305, i32 0, i32 0), i8* bitcast (%struct.obs_kernel_param* @__setup_parse_trust_cpu to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @parse_trust_cpu(i8* %arg) #0 section ".init.text" !dbg !5621 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !5622, metadata !DIExpression()), !dbg !5623
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !5624
  %call = call i32 @kstrtobool(i8* %0, i8* @trust_cpu) #13, !dbg !5625
  ret i32 %call, !dbg !5626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @add_device_randomness(i8* %buf, i32 %size) #1 !dbg !5627 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !5630, metadata !DIExpression()), !dbg !5635
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !5638
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5639, metadata !DIExpression()), !dbg !5644
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %time = alloca i64, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy11 = alloca i64, align 8
  %__dummy212 = alloca i64, align 8
  %tmp15 = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5651, metadata !DIExpression()), !dbg !5652
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !5653, metadata !DIExpression()), !dbg !5654
  call void @llvm.dbg.declare(metadata i64* %time, metadata !5655, metadata !DIExpression()), !dbg !5656
  %call = call i64 @get_cycles() #13, !dbg !5657
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !5658
  %xor = xor i64 %call, %0, !dbg !5659
  store i64 %xor, i64* %time, align 8, !dbg !5656
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5660, metadata !DIExpression()), !dbg !5661
  %1 = load i32, i32* @crng_init, align 4, !dbg !5662
  %cmp = icmp sgt i32 %1, 1, !dbg !5662
  %lnot = xor i1 %cmp, true, !dbg !5662
  %lnot1 = xor i1 %lnot, true, !dbg !5662
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !5662
  %conv = sext i32 %lnot.ext to i64, !dbg !5662
  %tobool = icmp ne i64 %conv, 0, !dbg !5662
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5664

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %size.addr, align 4, !dbg !5665
  %tobool2 = icmp ne i32 %2, 0, !dbg !5665
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5666

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !5667
  %4 = load i32, i32* %size.addr, align 4, !dbg !5668
  %conv3 = zext i32 %4 to i64, !dbg !5668
  %call4 = call i32 @crng_slow_load(i8* %3, i64 %conv3) #13, !dbg !5669
  br label %if.end, !dbg !5669

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load i32, i32* %size.addr, align 4, !dbg !5670
  %6 = call i8* @llvm.returnaddress(i32 0), !dbg !5671
  %7 = ptrtoint i8* %6 to i64, !dbg !5671
  call void @trace_add_device_randomness(i32 %5, i64 %7) #13, !dbg !5672
  br label %do.body, !dbg !5673

do.body:                                          ; preds = %if.end
  br label %do.body5, !dbg !5674

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5675, metadata !DIExpression()), !dbg !5677
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5678, metadata !DIExpression()), !dbg !5677
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !5677
  %conv7 = zext i1 %cmp6 to i32, !dbg !5677
  store i32 1, i32* %tmp, align 4, !dbg !5677
  %8 = load i32, i32* %tmp, align 4, !dbg !5677
  br label %do.body8, !dbg !5679

do.body8:                                         ; preds = %do.body5
  br label %do.body9, !dbg !5680

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !5681

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy11, metadata !5683, metadata !DIExpression()), !dbg !5686
  call void @llvm.dbg.declare(metadata i64* %__dummy212, metadata !5687, metadata !DIExpression()), !dbg !5686
  %cmp13 = icmp eq i64* %__dummy11, %__dummy212, !dbg !5686
  %conv14 = zext i1 %cmp13 to i32, !dbg !5686
  store i32 1, i32* %tmp15, align 4, !dbg !5686
  %9 = load i32, i32* %tmp15, align 4, !dbg !5686
  %call16 = call i64 @arch_local_irq_save() #13, !dbg !5688
  store i64 %call16, i64* %flags, align 8, !dbg !5688
  br label %do.end, !dbg !5688

do.end:                                           ; preds = %do.body10
  br label %do.end17, !dbg !5681

do.end17:                                         ; preds = %do.end
  br label %do.body18, !dbg !5680

do.body18:                                        ; preds = %do.end17
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5689, !srcloc !5690
  br label %do.body19, !dbg !5689

do.body19:                                        ; preds = %do.body18
  store %struct.spinlock* getelementptr inbounds (%struct.entropy_store, %struct.entropy_store* @input_pool, i32 0, i32 3), %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5691
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !5692
  %rlock.i = bitcast %union.anon.0* %11 to %struct.raw_spinlock*, !dbg !5692
  br label %do.end21, !dbg !5693

do.end21:                                         ; preds = %do.body19
  br label %do.end22, !dbg !5689

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !5680

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !5679

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !5674

do.end25:                                         ; preds = %do.end24
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !5694
  %13 = load i32, i32* %size.addr, align 4, !dbg !5695
  call void @_mix_pool_bytes(%struct.entropy_store* @input_pool, i8* %12, i32 %13) #13, !dbg !5696
  %14 = bitcast i64* %time to i8*, !dbg !5697
  call void @_mix_pool_bytes(%struct.entropy_store* @input_pool, i8* %14, i32 8) #13, !dbg !5698
  %15 = load i64, i64* %flags, align 8, !dbg !5699
  store %struct.spinlock* getelementptr inbounds (%struct.entropy_store, %struct.entropy_store* @input_pool, i32 0, i32 3), %struct.spinlock** %lock.addr.i26, align 8
  store i64 %15, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !5703
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !5703
  store i32 1, i32* %tmp.i, align 4, !dbg !5703
  %16 = load i32, i32* %tmp.i, align 4, !dbg !5703
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !5710
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !5710
  store i32 1, i32* %tmp8.i, align 4, !dbg !5710
  %17 = load i32, i32* %tmp8.i, align 4, !dbg !5710
  %18 = load i64, i64* %flags.addr.i, align 8, !dbg !5712
  call void @arch_local_irq_restore(i64 %18) #14, !dbg !5712
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5713, !srcloc !5715
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !5716
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !5716
  %rlock.i27 = bitcast %union.anon.0* %20 to %struct.raw_spinlock*, !dbg !5716
  ret void, !dbg !5718
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @get_cycles() #1 !dbg !5719 {
entry:
  %low.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %low.i, metadata !5722, metadata !DIExpression()), !dbg !5727
  %high.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %high.i, metadata !5729, metadata !DIExpression()), !dbg !5727
  %0 = call { i64, i64 } asm sideeffect "rdtsc", "={ax},={dx},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5730, !srcloc !5731
  %asmresult.i = extractvalue { i64, i64 } %0, 0, !dbg !5730
  %asmresult1.i = extractvalue { i64, i64 } %0, 1, !dbg !5730
  store i64 %asmresult.i, i64* %low.i, align 8, !dbg !5730
  store i64 %asmresult1.i, i64* %high.i, align 8, !dbg !5730
  %1 = load i64, i64* %low.i, align 8, !dbg !5732
  %2 = load i64, i64* %high.i, align 8, !dbg !5732
  %shl.i = shl i64 %2, 32, !dbg !5732
  %or.i = or i64 %1, %shl.i, !dbg !5732
  ret i64 %or.i, !dbg !5733
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @crng_slow_load(i8* %cp, i64 %len) #1 !dbg !5518 {
entry:
  %lock.addr.i62 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i62, metadata !5630, metadata !DIExpression()), !dbg !5734
  %flags.addr.i63 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i63, metadata !5637, metadata !DIExpression()), !dbg !5738
  %tmp.i64 = alloca i32, align 4
  %tmp8.i65 = alloca i32, align 4
  %lock.addr.i60 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i60, metadata !5630, metadata !DIExpression()), !dbg !5739
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !5741
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5639, metadata !DIExpression()), !dbg !5742
  %retval = alloca i32, align 4
  %cp.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %flags = alloca i64, align 8
  %tmp = alloca i8, align 1
  %i = alloca i32, align 4
  %max = alloca i32, align 4
  %src_buf = alloca i8*, align 8
  %dest_buf = alloca i8*, align 8
  %tmp1 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %tmp5 = alloca i32, align 4
  %tmp11 = alloca i32, align 4
  %__dummy14 = alloca i64, align 8
  %__dummy215 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  %tmp21 = alloca i32, align 4
  store i8* %cp, i8** %cp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cp.addr, metadata !5750, metadata !DIExpression()), !dbg !5751
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !5752, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5754, metadata !DIExpression()), !dbg !5755
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !5756, metadata !DIExpression()), !dbg !5757
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5758, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.declare(metadata i32* %max, metadata !5760, metadata !DIExpression()), !dbg !5761
  store i32 32, i32* %max, align 4, !dbg !5761
  call void @llvm.dbg.declare(metadata i8** %src_buf, metadata !5762, metadata !DIExpression()), !dbg !5763
  %0 = load i8*, i8** %cp.addr, align 8, !dbg !5764
  store i8* %0, i8** %src_buf, align 8, !dbg !5763
  call void @llvm.dbg.declare(metadata i8** %dest_buf, metadata !5765, metadata !DIExpression()), !dbg !5766
  store i8* bitcast (i32* getelementptr inbounds (%struct.crng_state, %struct.crng_state* @primary_crng, i32 0, i32 0, i64 4) to i8*), i8** %dest_buf, align 8, !dbg !5766
  br label %do.body, !dbg !5767

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !5768

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5770, metadata !DIExpression()), !dbg !5773
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5774, metadata !DIExpression()), !dbg !5773
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5773
  %conv = zext i1 %cmp to i32, !dbg !5773
  store i32 1, i32* %tmp3, align 4, !dbg !5773
  %1 = load i32, i32* %tmp3, align 4, !dbg !5773
  %call = call i64 @arch_local_irq_save() #13, !dbg !5775
  store i64 %call, i64* %flags, align 8, !dbg !5775
  br label %do.end, !dbg !5775

do.end:                                           ; preds = %do.body2
  br label %do.end4, !dbg !5768

do.end4:                                          ; preds = %do.end
  br label %do.body6, !dbg !5776

do.body6:                                         ; preds = %do.end4
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5777, !srcloc !5778
  br label %do.body7, !dbg !5777

do.body7:                                         ; preds = %do.body6
  store %struct.spinlock* getelementptr inbounds (%struct.crng_state, %struct.crng_state* @primary_crng, i32 0, i32 2), %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5779
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !5780
  %rlock.i = bitcast %union.anon.0* %3 to %struct.raw_spinlock*, !dbg !5780
  br label %do.end9, !dbg !5781

do.end9:                                          ; preds = %do.body7
  br label %do.end10, !dbg !5777

do.end10:                                         ; preds = %do.end9
  store i32 1, i32* %tmp11, align 4, !dbg !5777
  %4 = load i32, i32* %tmp11, align 4, !dbg !5776
  %tobool = icmp ne i32 %4, 0, !dbg !5767
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5767

cond.true:                                        ; preds = %do.end10
  br label %cond.end, !dbg !5767

cond.false:                                       ; preds = %do.end10
  br label %do.body12, !dbg !5782

do.body12:                                        ; preds = %cond.false
  br label %do.body13, !dbg !5784

do.body13:                                        ; preds = %do.body12
  call void @llvm.dbg.declare(metadata i64* %__dummy14, metadata !5786, metadata !DIExpression()), !dbg !5789
  call void @llvm.dbg.declare(metadata i64* %__dummy215, metadata !5790, metadata !DIExpression()), !dbg !5789
  %cmp16 = icmp eq i64* %__dummy14, %__dummy215, !dbg !5789
  %conv17 = zext i1 %cmp16 to i32, !dbg !5789
  store i32 1, i32* %tmp18, align 4, !dbg !5789
  %5 = load i32, i32* %tmp18, align 4, !dbg !5789
  %6 = load i64, i64* %flags, align 8, !dbg !5791
  call void @arch_local_irq_restore(i64 %6) #13, !dbg !5791
  br label %do.end19, !dbg !5791

do.end19:                                         ; preds = %do.body13
  br label %do.end20, !dbg !5784

do.end20:                                         ; preds = %do.end19
  store i32 0, i32* %tmp21, align 4, !dbg !5784
  %7 = load i32, i32* %tmp21, align 4, !dbg !5782
  br label %cond.end, !dbg !5767

cond.end:                                         ; preds = %do.end20, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %7, %do.end20 ], !dbg !5767
  store i32 %cond, i32* %tmp5, align 4, !dbg !5768
  %8 = load i32, i32* %tmp5, align 4, !dbg !5767
  store i32 %8, i32* %tmp1, align 4, !dbg !5792
  %9 = load i32, i32* %tmp1, align 4, !dbg !5793
  %tobool22 = icmp ne i32 %9, 0, !dbg !5792
  br i1 %tobool22, label %if.end, label %if.then, !dbg !5794

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !5795
  br label %return, !dbg !5795

if.end:                                           ; preds = %cond.end
  %10 = load i32, i32* @crng_init, align 4, !dbg !5796
  %cmp23 = icmp ne i32 %10, 0, !dbg !5797
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !5798

if.then25:                                        ; preds = %if.end
  %11 = load i64, i64* %flags, align 8, !dbg !5799
  store %struct.spinlock* getelementptr inbounds (%struct.crng_state, %struct.crng_state* @primary_crng, i32 0, i32 2), %struct.spinlock** %lock.addr.i62, align 8
  store i64 %11, i64* %flags.addr.i63, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !5800
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !5800
  store i32 1, i32* %tmp.i64, align 4, !dbg !5800
  %12 = load i32, i32* %tmp.i64, align 4, !dbg !5800
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !5801
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !5801
  store i32 1, i32* %tmp8.i65, align 4, !dbg !5801
  %13 = load i32, i32* %tmp8.i65, align 4, !dbg !5801
  %14 = load i64, i64* %flags.addr.i63, align 8, !dbg !5802
  call void @arch_local_irq_restore(i64 %14) #14, !dbg !5802
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5803, !srcloc !5715
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i62, align 8, !dbg !5804
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !5804
  %rlock.i66 = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !5804
  store i32 0, i32* %retval, align 4, !dbg !5805
  br label %return, !dbg !5805

if.end26:                                         ; preds = %if.end
  %17 = load i64, i64* %len.addr, align 8, !dbg !5806
  %18 = load i32, i32* %max, align 4, !dbg !5808
  %conv27 = zext i32 %18 to i64, !dbg !5808
  %cmp28 = icmp ugt i64 %17, %conv27, !dbg !5809
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !5810

if.then30:                                        ; preds = %if.end26
  %19 = load i64, i64* %len.addr, align 8, !dbg !5811
  %conv31 = trunc i64 %19 to i32, !dbg !5811
  store i32 %conv31, i32* %max, align 4, !dbg !5812
  br label %if.end32, !dbg !5813

if.end32:                                         ; preds = %if.then30, %if.end26
  store i32 0, i32* %i, align 4, !dbg !5814
  br label %for.cond, !dbg !5816

for.cond:                                         ; preds = %for.inc, %if.end32
  %20 = load i32, i32* %i, align 4, !dbg !5817
  %21 = load i32, i32* %max, align 4, !dbg !5819
  %cmp33 = icmp ult i32 %20, %21, !dbg !5820
  br i1 %cmp33, label %for.body, label %for.end, !dbg !5821

for.body:                                         ; preds = %for.cond
  %22 = load i8, i8* @crng_slow_load.lfsr, align 1, !dbg !5822
  store i8 %22, i8* %tmp, align 1, !dbg !5824
  %23 = load i8, i8* @crng_slow_load.lfsr, align 1, !dbg !5825
  %conv35 = zext i8 %23 to i32, !dbg !5825
  %shr = ashr i32 %conv35, 1, !dbg !5825
  %conv36 = trunc i32 %shr to i8, !dbg !5825
  store i8 %conv36, i8* @crng_slow_load.lfsr, align 1, !dbg !5825
  %24 = load i8, i8* %tmp, align 1, !dbg !5826
  %conv37 = zext i8 %24 to i32, !dbg !5826
  %and = and i32 %conv37, 1, !dbg !5828
  %tobool38 = icmp ne i32 %and, 0, !dbg !5828
  br i1 %tobool38, label %if.then39, label %if.end42, !dbg !5829

if.then39:                                        ; preds = %for.body
  %25 = load i8, i8* @crng_slow_load.lfsr, align 1, !dbg !5830
  %conv40 = zext i8 %25 to i32, !dbg !5830
  %xor = xor i32 %conv40, 225, !dbg !5830
  %conv41 = trunc i32 %xor to i8, !dbg !5830
  store i8 %conv41, i8* @crng_slow_load.lfsr, align 1, !dbg !5830
  br label %if.end42, !dbg !5831

if.end42:                                         ; preds = %if.then39, %for.body
  %26 = load i8*, i8** %dest_buf, align 8, !dbg !5832
  %27 = load i32, i32* %i, align 4, !dbg !5833
  %rem = urem i32 %27, 32, !dbg !5834
  %idxprom = zext i32 %rem to i64, !dbg !5832
  %arrayidx = getelementptr i8, i8* %26, i64 %idxprom, !dbg !5832
  %28 = load i8, i8* %arrayidx, align 1, !dbg !5832
  store i8 %28, i8* %tmp, align 1, !dbg !5835
  %29 = load i8*, i8** %src_buf, align 8, !dbg !5836
  %30 = load i32, i32* %i, align 4, !dbg !5837
  %conv43 = zext i32 %30 to i64, !dbg !5837
  %31 = load i64, i64* %len.addr, align 8, !dbg !5838
  %rem44 = urem i64 %conv43, %31, !dbg !5839
  %arrayidx45 = getelementptr i8, i8* %29, i64 %rem44, !dbg !5836
  %32 = load i8, i8* %arrayidx45, align 1, !dbg !5836
  %conv46 = sext i8 %32 to i32, !dbg !5836
  %33 = load i8, i8* @crng_slow_load.lfsr, align 1, !dbg !5840
  %conv47 = zext i8 %33 to i32, !dbg !5840
  %xor48 = xor i32 %conv46, %conv47, !dbg !5841
  %34 = load i8*, i8** %dest_buf, align 8, !dbg !5842
  %35 = load i32, i32* %i, align 4, !dbg !5843
  %rem49 = urem i32 %35, 32, !dbg !5844
  %idxprom50 = zext i32 %rem49 to i64, !dbg !5842
  %arrayidx51 = getelementptr i8, i8* %34, i64 %idxprom50, !dbg !5842
  %36 = load i8, i8* %arrayidx51, align 1, !dbg !5845
  %conv52 = sext i8 %36 to i32, !dbg !5845
  %xor53 = xor i32 %conv52, %xor48, !dbg !5845
  %conv54 = trunc i32 %xor53 to i8, !dbg !5845
  store i8 %conv54, i8* %arrayidx51, align 1, !dbg !5845
  %37 = load i8, i8* %tmp, align 1, !dbg !5846
  %conv55 = zext i8 %37 to i32, !dbg !5846
  %shl = shl i32 %conv55, 3, !dbg !5847
  %38 = load i8, i8* %tmp, align 1, !dbg !5848
  %conv56 = zext i8 %38 to i32, !dbg !5848
  %shr57 = ashr i32 %conv56, 5, !dbg !5849
  %or = or i32 %shl, %shr57, !dbg !5850
  %39 = load i8, i8* @crng_slow_load.lfsr, align 1, !dbg !5851
  %conv58 = zext i8 %39 to i32, !dbg !5851
  %add = add i32 %conv58, %or, !dbg !5851
  %conv59 = trunc i32 %add to i8, !dbg !5851
  store i8 %conv59, i8* @crng_slow_load.lfsr, align 1, !dbg !5851
  br label %for.inc, !dbg !5852

for.inc:                                          ; preds = %if.end42
  %40 = load i32, i32* %i, align 4, !dbg !5853
  %inc = add i32 %40, 1, !dbg !5853
  store i32 %inc, i32* %i, align 4, !dbg !5853
  br label %for.cond, !dbg !5854, !llvm.loop !5855

for.end:                                          ; preds = %for.cond
  %41 = load i64, i64* %flags, align 8, !dbg !5857
  store %struct.spinlock* getelementptr inbounds (%struct.crng_state, %struct.crng_state* @primary_crng, i32 0, i32 2), %struct.spinlock** %lock.addr.i60, align 8
  store i64 %41, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !5858
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !5858
  store i32 1, i32* %tmp.i, align 4, !dbg !5858
  %42 = load i32, i32* %tmp.i, align 4, !dbg !5858
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !5859
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !5859
  store i32 1, i32* %tmp8.i, align 4, !dbg !5859
  %43 = load i32, i32* %tmp8.i, align 4, !dbg !5859
  %44 = load i64, i64* %flags.addr.i, align 8, !dbg !5860
  call void @arch_local_irq_restore(i64 %44) #14, !dbg !5860
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5861, !srcloc !5715
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i60, align 8, !dbg !5862
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !5862
  %rlock.i61 = bitcast %union.anon.0* %46 to %struct.raw_spinlock*, !dbg !5862
  store i32 1, i32* %retval, align 4, !dbg !5863
  br label %return, !dbg !5863

return:                                           ; preds = %for.end, %if.then25, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !5864
  ret i32 %47, !dbg !5864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_add_device_randomness(i32 %bytes, i64 %IP) #1 !dbg !5865 {
entry:
  %bytes.addr = alloca i32, align 4
  %IP.addr = alloca i64, align 8
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !5869, metadata !DIExpression()), !dbg !5870
  store i64 %IP, i64* %IP.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %IP.addr, metadata !5871, metadata !DIExpression()), !dbg !5870
  ret void, !dbg !5870
}

; Function Attrs: nounwind readnone
declare i8* @llvm.returnaddress(i32 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #1 !dbg !5872 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !5876, metadata !DIExpression()), !dbg !5877
  %call = call i64 @arch_local_save_flags() #13, !dbg !5878
  store i64 %call, i64* %f, align 8, !dbg !5879
  call void @arch_local_irq_disable() #13, !dbg !5880
  %0 = load i64, i64* %f, align 8, !dbg !5881
  ret i64 %0, !dbg !5882
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_mix_pool_bytes(%struct.entropy_store* %r, i8* %in, i32 %nbytes) #1 !dbg !5883 {
entry:
  %r.addr = alloca %struct.entropy_store*, align 8
  %in.addr = alloca i8*, align 8
  %nbytes.addr = alloca i32, align 4
  %i = alloca i64, align 8
  %tap1 = alloca i64, align 8
  %tap2 = alloca i64, align 8
  %tap3 = alloca i64, align 8
  %tap4 = alloca i64, align 8
  %tap5 = alloca i64, align 8
  %input_rotate = alloca i32, align 4
  %wordmask = alloca i32, align 4
  %bytes = alloca i8*, align 8
  %w = alloca i32, align 4
  store %struct.entropy_store* %r, %struct.entropy_store** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.entropy_store** %r.addr, metadata !5887, metadata !DIExpression()), !dbg !5888
  store i8* %in, i8** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in.addr, metadata !5889, metadata !DIExpression()), !dbg !5890
  store i32 %nbytes, i32* %nbytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbytes.addr, metadata !5891, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.declare(metadata i64* %i, metadata !5893, metadata !DIExpression()), !dbg !5894
  call void @llvm.dbg.declare(metadata i64* %tap1, metadata !5895, metadata !DIExpression()), !dbg !5896
  call void @llvm.dbg.declare(metadata i64* %tap2, metadata !5897, metadata !DIExpression()), !dbg !5898
  call void @llvm.dbg.declare(metadata i64* %tap3, metadata !5899, metadata !DIExpression()), !dbg !5900
  call void @llvm.dbg.declare(metadata i64* %tap4, metadata !5901, metadata !DIExpression()), !dbg !5902
  call void @llvm.dbg.declare(metadata i64* %tap5, metadata !5903, metadata !DIExpression()), !dbg !5904
  call void @llvm.dbg.declare(metadata i32* %input_rotate, metadata !5905, metadata !DIExpression()), !dbg !5906
  call void @llvm.dbg.declare(metadata i32* %wordmask, metadata !5907, metadata !DIExpression()), !dbg !5908
  %0 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !5909
  %poolinfo = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %0, i32 0, i32 0, !dbg !5910
  %1 = load %struct.poolinfo*, %struct.poolinfo** %poolinfo, align 8, !dbg !5910
  %poolwords = getelementptr inbounds %struct.poolinfo, %struct.poolinfo* %1, i32 0, i32 1, !dbg !5911
  %2 = load i32, i32* %poolwords, align 4, !dbg !5911
  %sub = sub i32 %2, 1, !dbg !5912
  store i32 %sub, i32* %wordmask, align 4, !dbg !5908
  call void @llvm.dbg.declare(metadata i8** %bytes, metadata !5913, metadata !DIExpression()), !dbg !5914
  %3 = load i8*, i8** %in.addr, align 8, !dbg !5915
  store i8* %3, i8** %bytes, align 8, !dbg !5914
  call void @llvm.dbg.declare(metadata i32* %w, metadata !5916, metadata !DIExpression()), !dbg !5917
  %4 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !5918
  %poolinfo1 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %4, i32 0, i32 0, !dbg !5919
  %5 = load %struct.poolinfo*, %struct.poolinfo** %poolinfo1, align 8, !dbg !5919
  %tap12 = getelementptr inbounds %struct.poolinfo, %struct.poolinfo* %5, i32 0, i32 4, !dbg !5920
  %6 = load i32, i32* %tap12, align 4, !dbg !5920
  %conv = sext i32 %6 to i64, !dbg !5918
  store i64 %conv, i64* %tap1, align 8, !dbg !5921
  %7 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !5922
  %poolinfo3 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %7, i32 0, i32 0, !dbg !5923
  %8 = load %struct.poolinfo*, %struct.poolinfo** %poolinfo3, align 8, !dbg !5923
  %tap24 = getelementptr inbounds %struct.poolinfo, %struct.poolinfo* %8, i32 0, i32 5, !dbg !5924
  %9 = load i32, i32* %tap24, align 4, !dbg !5924
  %conv5 = sext i32 %9 to i64, !dbg !5922
  store i64 %conv5, i64* %tap2, align 8, !dbg !5925
  %10 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !5926
  %poolinfo6 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %10, i32 0, i32 0, !dbg !5927
  %11 = load %struct.poolinfo*, %struct.poolinfo** %poolinfo6, align 8, !dbg !5927
  %tap37 = getelementptr inbounds %struct.poolinfo, %struct.poolinfo* %11, i32 0, i32 6, !dbg !5928
  %12 = load i32, i32* %tap37, align 4, !dbg !5928
  %conv8 = sext i32 %12 to i64, !dbg !5926
  store i64 %conv8, i64* %tap3, align 8, !dbg !5929
  %13 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !5930
  %poolinfo9 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %13, i32 0, i32 0, !dbg !5931
  %14 = load %struct.poolinfo*, %struct.poolinfo** %poolinfo9, align 8, !dbg !5931
  %tap410 = getelementptr inbounds %struct.poolinfo, %struct.poolinfo* %14, i32 0, i32 7, !dbg !5932
  %15 = load i32, i32* %tap410, align 4, !dbg !5932
  %conv11 = sext i32 %15 to i64, !dbg !5930
  store i64 %conv11, i64* %tap4, align 8, !dbg !5933
  %16 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !5934
  %poolinfo12 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %16, i32 0, i32 0, !dbg !5935
  %17 = load %struct.poolinfo*, %struct.poolinfo** %poolinfo12, align 8, !dbg !5935
  %tap513 = getelementptr inbounds %struct.poolinfo, %struct.poolinfo* %17, i32 0, i32 8, !dbg !5936
  %18 = load i32, i32* %tap513, align 4, !dbg !5936
  %conv14 = sext i32 %18 to i64, !dbg !5934
  store i64 %conv14, i64* %tap5, align 8, !dbg !5937
  %19 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !5938
  %input_rotate15 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %19, i32 0, i32 5, !dbg !5939
  %20 = load i16, i16* %input_rotate15, align 2, !dbg !5939
  %conv16 = zext i16 %20 to i32, !dbg !5938
  store i32 %conv16, i32* %input_rotate, align 4, !dbg !5940
  %21 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !5941
  %add_ptr = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %21, i32 0, i32 4, !dbg !5942
  %22 = load i16, i16* %add_ptr, align 8, !dbg !5942
  %conv17 = zext i16 %22 to i64, !dbg !5941
  store i64 %conv17, i64* %i, align 8, !dbg !5943
  br label %while.cond, !dbg !5944

while.cond:                                       ; preds = %while.body, %entry
  %23 = load i32, i32* %nbytes.addr, align 4, !dbg !5945
  %dec = add i32 %23, -1, !dbg !5945
  store i32 %dec, i32* %nbytes.addr, align 4, !dbg !5945
  %tobool = icmp ne i32 %23, 0, !dbg !5944
  br i1 %tobool, label %while.body, label %while.end, !dbg !5944

while.body:                                       ; preds = %while.cond
  %24 = load i8*, i8** %bytes, align 8, !dbg !5946
  %incdec.ptr = getelementptr i8, i8* %24, i32 1, !dbg !5946
  store i8* %incdec.ptr, i8** %bytes, align 8, !dbg !5946
  %25 = load i8, i8* %24, align 1, !dbg !5948
  %conv18 = sext i8 %25 to i32, !dbg !5948
  %26 = load i32, i32* %input_rotate, align 4, !dbg !5949
  %call = call i32 @rol32(i32 %conv18, i32 %26) #13, !dbg !5950
  store i32 %call, i32* %w, align 4, !dbg !5951
  %27 = load i64, i64* %i, align 8, !dbg !5952
  %sub19 = sub i64 %27, 1, !dbg !5953
  %28 = load i32, i32* %wordmask, align 4, !dbg !5954
  %conv20 = sext i32 %28 to i64, !dbg !5954
  %and = and i64 %sub19, %conv20, !dbg !5955
  store i64 %and, i64* %i, align 8, !dbg !5956
  %29 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !5957
  %pool = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %29, i32 0, i32 1, !dbg !5958
  %30 = load i32*, i32** %pool, align 8, !dbg !5958
  %31 = load i64, i64* %i, align 8, !dbg !5959
  %arrayidx = getelementptr i32, i32* %30, i64 %31, !dbg !5957
  %32 = load i32, i32* %arrayidx, align 4, !dbg !5957
  %33 = load i32, i32* %w, align 4, !dbg !5960
  %xor = xor i32 %33, %32, !dbg !5960
  store i32 %xor, i32* %w, align 4, !dbg !5960
  %34 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !5961
  %pool21 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %34, i32 0, i32 1, !dbg !5962
  %35 = load i32*, i32** %pool21, align 8, !dbg !5962
  %36 = load i64, i64* %i, align 8, !dbg !5963
  %37 = load i64, i64* %tap1, align 8, !dbg !5964
  %add = add i64 %36, %37, !dbg !5965
  %38 = load i32, i32* %wordmask, align 4, !dbg !5966
  %conv22 = sext i32 %38 to i64, !dbg !5966
  %and23 = and i64 %add, %conv22, !dbg !5967
  %arrayidx24 = getelementptr i32, i32* %35, i64 %and23, !dbg !5961
  %39 = load i32, i32* %arrayidx24, align 4, !dbg !5961
  %40 = load i32, i32* %w, align 4, !dbg !5968
  %xor25 = xor i32 %40, %39, !dbg !5968
  store i32 %xor25, i32* %w, align 4, !dbg !5968
  %41 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !5969
  %pool26 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %41, i32 0, i32 1, !dbg !5970
  %42 = load i32*, i32** %pool26, align 8, !dbg !5970
  %43 = load i64, i64* %i, align 8, !dbg !5971
  %44 = load i64, i64* %tap2, align 8, !dbg !5972
  %add27 = add i64 %43, %44, !dbg !5973
  %45 = load i32, i32* %wordmask, align 4, !dbg !5974
  %conv28 = sext i32 %45 to i64, !dbg !5974
  %and29 = and i64 %add27, %conv28, !dbg !5975
  %arrayidx30 = getelementptr i32, i32* %42, i64 %and29, !dbg !5969
  %46 = load i32, i32* %arrayidx30, align 4, !dbg !5969
  %47 = load i32, i32* %w, align 4, !dbg !5976
  %xor31 = xor i32 %47, %46, !dbg !5976
  store i32 %xor31, i32* %w, align 4, !dbg !5976
  %48 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !5977
  %pool32 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %48, i32 0, i32 1, !dbg !5978
  %49 = load i32*, i32** %pool32, align 8, !dbg !5978
  %50 = load i64, i64* %i, align 8, !dbg !5979
  %51 = load i64, i64* %tap3, align 8, !dbg !5980
  %add33 = add i64 %50, %51, !dbg !5981
  %52 = load i32, i32* %wordmask, align 4, !dbg !5982
  %conv34 = sext i32 %52 to i64, !dbg !5982
  %and35 = and i64 %add33, %conv34, !dbg !5983
  %arrayidx36 = getelementptr i32, i32* %49, i64 %and35, !dbg !5977
  %53 = load i32, i32* %arrayidx36, align 4, !dbg !5977
  %54 = load i32, i32* %w, align 4, !dbg !5984
  %xor37 = xor i32 %54, %53, !dbg !5984
  store i32 %xor37, i32* %w, align 4, !dbg !5984
  %55 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !5985
  %pool38 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %55, i32 0, i32 1, !dbg !5986
  %56 = load i32*, i32** %pool38, align 8, !dbg !5986
  %57 = load i64, i64* %i, align 8, !dbg !5987
  %58 = load i64, i64* %tap4, align 8, !dbg !5988
  %add39 = add i64 %57, %58, !dbg !5989
  %59 = load i32, i32* %wordmask, align 4, !dbg !5990
  %conv40 = sext i32 %59 to i64, !dbg !5990
  %and41 = and i64 %add39, %conv40, !dbg !5991
  %arrayidx42 = getelementptr i32, i32* %56, i64 %and41, !dbg !5985
  %60 = load i32, i32* %arrayidx42, align 4, !dbg !5985
  %61 = load i32, i32* %w, align 4, !dbg !5992
  %xor43 = xor i32 %61, %60, !dbg !5992
  store i32 %xor43, i32* %w, align 4, !dbg !5992
  %62 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !5993
  %pool44 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %62, i32 0, i32 1, !dbg !5994
  %63 = load i32*, i32** %pool44, align 8, !dbg !5994
  %64 = load i64, i64* %i, align 8, !dbg !5995
  %65 = load i64, i64* %tap5, align 8, !dbg !5996
  %add45 = add i64 %64, %65, !dbg !5997
  %66 = load i32, i32* %wordmask, align 4, !dbg !5998
  %conv46 = sext i32 %66 to i64, !dbg !5998
  %and47 = and i64 %add45, %conv46, !dbg !5999
  %arrayidx48 = getelementptr i32, i32* %63, i64 %and47, !dbg !5993
  %67 = load i32, i32* %arrayidx48, align 4, !dbg !5993
  %68 = load i32, i32* %w, align 4, !dbg !6000
  %xor49 = xor i32 %68, %67, !dbg !6000
  store i32 %xor49, i32* %w, align 4, !dbg !6000
  %69 = load i32, i32* %w, align 4, !dbg !6001
  %shr = lshr i32 %69, 3, !dbg !6002
  %70 = load i32, i32* %w, align 4, !dbg !6003
  %and50 = and i32 %70, 7, !dbg !6004
  %idxprom = zext i32 %and50 to i64, !dbg !6005
  %arrayidx51 = getelementptr [8 x i32], [8 x i32]* @twist_table, i64 0, i64 %idxprom, !dbg !6005
  %71 = load i32, i32* %arrayidx51, align 4, !dbg !6005
  %xor52 = xor i32 %shr, %71, !dbg !6006
  %72 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !6007
  %pool53 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %72, i32 0, i32 1, !dbg !6008
  %73 = load i32*, i32** %pool53, align 8, !dbg !6008
  %74 = load i64, i64* %i, align 8, !dbg !6009
  %arrayidx54 = getelementptr i32, i32* %73, i64 %74, !dbg !6007
  store i32 %xor52, i32* %arrayidx54, align 4, !dbg !6010
  %75 = load i32, i32* %input_rotate, align 4, !dbg !6011
  %76 = load i64, i64* %i, align 8, !dbg !6012
  %tobool55 = icmp ne i64 %76, 0, !dbg !6012
  %77 = zext i1 %tobool55 to i64, !dbg !6012
  %cond = select i1 %tobool55, i32 7, i32 14, !dbg !6012
  %add56 = add i32 %75, %cond, !dbg !6013
  %and57 = and i32 %add56, 31, !dbg !6014
  store i32 %and57, i32* %input_rotate, align 4, !dbg !6015
  br label %while.cond, !dbg !5944, !llvm.loop !6016

while.end:                                        ; preds = %while.cond
  %78 = load i32, i32* %input_rotate, align 4, !dbg !6018
  %conv58 = trunc i32 %78 to i16, !dbg !6018
  %79 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !6019
  %input_rotate59 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %79, i32 0, i32 5, !dbg !6020
  store i16 %conv58, i16* %input_rotate59, align 2, !dbg !6021
  %80 = load i64, i64* %i, align 8, !dbg !6022
  %conv60 = trunc i64 %80 to i16, !dbg !6022
  %81 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !6023
  %add_ptr61 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %81, i32 0, i32 4, !dbg !6024
  store i16 %conv60, i16* %add_ptr61, align 8, !dbg !6025
  ret void, !dbg !6026
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @add_input_randomness(i32 %type, i32 %code, i32 %value) #1 !dbg !5474 {
entry:
  %type.addr = alloca i32, align 4
  %code.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6027, metadata !DIExpression()), !dbg !6028
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !6029, metadata !DIExpression()), !dbg !6030
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !6031, metadata !DIExpression()), !dbg !6032
  %0 = load i32, i32* %value.addr, align 4, !dbg !6033
  %1 = load i8, i8* @add_input_randomness.last_value, align 1, !dbg !6035
  %conv = zext i8 %1 to i32, !dbg !6035
  %cmp = icmp eq i32 %0, %conv, !dbg !6036
  br i1 %cmp, label %if.then, label %if.end, !dbg !6037

if.then:                                          ; preds = %entry
  br label %return, !dbg !6038

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %value.addr, align 4, !dbg !6039
  %conv2 = trunc i32 %2 to i8, !dbg !6039
  store i8 %conv2, i8* @add_input_randomness.last_value, align 1, !dbg !6040
  %3 = load i32, i32* %type.addr, align 4, !dbg !6041
  %shl = shl i32 %3, 4, !dbg !6042
  %4 = load i32, i32* %code.addr, align 4, !dbg !6043
  %xor = xor i32 %shl, %4, !dbg !6044
  %5 = load i32, i32* %code.addr, align 4, !dbg !6045
  %shr = lshr i32 %5, 4, !dbg !6046
  %xor3 = xor i32 %xor, %shr, !dbg !6047
  %6 = load i32, i32* %value.addr, align 4, !dbg !6048
  %xor4 = xor i32 %xor3, %6, !dbg !6049
  call void @add_timer_randomness(%struct.timer_rand_state* @input_timer_state, i32 %xor4) #13, !dbg !6050
  %7 = load i32, i32* getelementptr inbounds (%struct.entropy_store, %struct.entropy_store* @input_pool, i32 0, i32 6), align 4, !dbg !6051
  %shr5 = ashr i32 %7, 3, !dbg !6051
  call void @trace_add_input_randomness(i32 %shr5) #13, !dbg !6052
  br label %return, !dbg !6053

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6053
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @add_timer_randomness(%struct.timer_rand_state* %state, i32 %num) #1 !dbg !6054 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !6057, metadata !DIExpression()), !dbg !6062
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !6065, metadata !DIExpression()), !dbg !6066
  %state.addr = alloca %struct.timer_rand_state*, align 8
  %num.addr = alloca i32, align 4
  %r = alloca %struct.entropy_store*, align 8
  %sample = alloca %struct.anon.102, align 8
  %delta = alloca i64, align 8
  %delta2 = alloca i64, align 8
  %delta3 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp13 = alloca i64, align 8
  %tmp24 = alloca i64, align 8
  %__UNIQUE_ID___x323 = alloca i32, align 4
  %__UNIQUE_ID___y324 = alloca i32, align 4
  %tmp55 = alloca i32, align 4
  store %struct.timer_rand_state* %state, %struct.timer_rand_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_rand_state** %state.addr, metadata !6067, metadata !DIExpression()), !dbg !6068
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !6069, metadata !DIExpression()), !dbg !6070
  call void @llvm.dbg.declare(metadata %struct.entropy_store** %r, metadata !6071, metadata !DIExpression()), !dbg !6072
  call void @llvm.dbg.declare(metadata %struct.anon.102* %sample, metadata !6073, metadata !DIExpression()), !dbg !6079
  call void @llvm.dbg.declare(metadata i64* %delta, metadata !6080, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.declare(metadata i64* %delta2, metadata !6082, metadata !DIExpression()), !dbg !6083
  call void @llvm.dbg.declare(metadata i64* %delta3, metadata !6084, metadata !DIExpression()), !dbg !6085
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !6086
  %jiffies = getelementptr inbounds %struct.anon.102, %struct.anon.102* %sample, i32 0, i32 0, !dbg !6087
  store i64 %0, i64* %jiffies, align 8, !dbg !6088
  %call = call i64 @get_cycles() #13, !dbg !6089
  %conv = trunc i64 %call to i32, !dbg !6089
  %cycles = getelementptr inbounds %struct.anon.102, %struct.anon.102* %sample, i32 0, i32 1, !dbg !6090
  store i32 %conv, i32* %cycles, align 8, !dbg !6091
  %1 = load i32, i32* %num.addr, align 4, !dbg !6092
  %num1 = getelementptr inbounds %struct.anon.102, %struct.anon.102* %sample, i32 0, i32 2, !dbg !6093
  store i32 %1, i32* %num1, align 4, !dbg !6094
  store %struct.entropy_store* @input_pool, %struct.entropy_store** %r, align 8, !dbg !6095
  %2 = load %struct.entropy_store*, %struct.entropy_store** %r, align 8, !dbg !6096
  %3 = bitcast %struct.anon.102* %sample to i8*, !dbg !6097
  call void @mix_pool_bytes(%struct.entropy_store* %2, i8* %3, i32 16) #13, !dbg !6098
  %jiffies2 = getelementptr inbounds %struct.anon.102, %struct.anon.102* %sample, i32 0, i32 0, !dbg !6099
  %4 = load i64, i64* %jiffies2, align 8, !dbg !6099
  br label %do.body, !dbg !6100

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6102

do.end:                                           ; preds = %do.body
  %5 = load %struct.timer_rand_state*, %struct.timer_rand_state** %state.addr, align 8, !dbg !6100
  %last_time = getelementptr inbounds %struct.timer_rand_state, %struct.timer_rand_state* %5, i32 0, i32 0, !dbg !6100
  %6 = load volatile i64, i64* %last_time, align 8, !dbg !6100
  store i64 %6, i64* %tmp, align 8, !dbg !6102
  %7 = load i64, i64* %tmp, align 8, !dbg !6100
  %sub = sub i64 %4, %7, !dbg !6104
  store i64 %sub, i64* %delta, align 8, !dbg !6105
  br label %do.body3, !dbg !6106

do.body3:                                         ; preds = %do.end
  br label %do.body4, !dbg !6107

do.body4:                                         ; preds = %do.body3
  br label %do.end5, !dbg !6109

do.end5:                                          ; preds = %do.body4
  br label %do.body6, !dbg !6107

do.body6:                                         ; preds = %do.end5
  %jiffies7 = getelementptr inbounds %struct.anon.102, %struct.anon.102* %sample, i32 0, i32 0, !dbg !6111
  %8 = load i64, i64* %jiffies7, align 8, !dbg !6111
  %9 = load %struct.timer_rand_state*, %struct.timer_rand_state** %state.addr, align 8, !dbg !6111
  %last_time8 = getelementptr inbounds %struct.timer_rand_state, %struct.timer_rand_state* %9, i32 0, i32 0, !dbg !6111
  store volatile i64 %8, i64* %last_time8, align 8, !dbg !6111
  br label %do.end9, !dbg !6111

do.end9:                                          ; preds = %do.body6
  br label %do.end10, !dbg !6107

do.end10:                                         ; preds = %do.end9
  %10 = load i64, i64* %delta, align 8, !dbg !6113
  br label %do.body11, !dbg !6114

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !6116

do.end12:                                         ; preds = %do.body11
  %11 = load %struct.timer_rand_state*, %struct.timer_rand_state** %state.addr, align 8, !dbg !6114
  %last_delta = getelementptr inbounds %struct.timer_rand_state, %struct.timer_rand_state* %11, i32 0, i32 1, !dbg !6114
  %12 = load volatile i64, i64* %last_delta, align 8, !dbg !6114
  store i64 %12, i64* %tmp13, align 8, !dbg !6116
  %13 = load i64, i64* %tmp13, align 8, !dbg !6114
  %sub14 = sub i64 %10, %13, !dbg !6118
  store i64 %sub14, i64* %delta2, align 8, !dbg !6119
  br label %do.body15, !dbg !6120

do.body15:                                        ; preds = %do.end12
  br label %do.body16, !dbg !6121

do.body16:                                        ; preds = %do.body15
  br label %do.end17, !dbg !6123

do.end17:                                         ; preds = %do.body16
  br label %do.body18, !dbg !6121

do.body18:                                        ; preds = %do.end17
  %14 = load i64, i64* %delta, align 8, !dbg !6125
  %15 = load %struct.timer_rand_state*, %struct.timer_rand_state** %state.addr, align 8, !dbg !6125
  %last_delta19 = getelementptr inbounds %struct.timer_rand_state, %struct.timer_rand_state* %15, i32 0, i32 1, !dbg !6125
  store volatile i64 %14, i64* %last_delta19, align 8, !dbg !6125
  br label %do.end20, !dbg !6125

do.end20:                                         ; preds = %do.body18
  br label %do.end21, !dbg !6121

do.end21:                                         ; preds = %do.end20
  %16 = load i64, i64* %delta2, align 8, !dbg !6127
  br label %do.body22, !dbg !6128

do.body22:                                        ; preds = %do.end21
  br label %do.end23, !dbg !6130

do.end23:                                         ; preds = %do.body22
  %17 = load %struct.timer_rand_state*, %struct.timer_rand_state** %state.addr, align 8, !dbg !6128
  %last_delta2 = getelementptr inbounds %struct.timer_rand_state, %struct.timer_rand_state* %17, i32 0, i32 2, !dbg !6128
  %18 = load volatile i64, i64* %last_delta2, align 8, !dbg !6128
  store i64 %18, i64* %tmp24, align 8, !dbg !6130
  %19 = load i64, i64* %tmp24, align 8, !dbg !6128
  %sub25 = sub i64 %16, %19, !dbg !6132
  store i64 %sub25, i64* %delta3, align 8, !dbg !6133
  br label %do.body26, !dbg !6134

do.body26:                                        ; preds = %do.end23
  br label %do.body27, !dbg !6135

do.body27:                                        ; preds = %do.body26
  br label %do.end28, !dbg !6137

do.end28:                                         ; preds = %do.body27
  br label %do.body29, !dbg !6135

do.body29:                                        ; preds = %do.end28
  %20 = load i64, i64* %delta2, align 8, !dbg !6139
  %21 = load %struct.timer_rand_state*, %struct.timer_rand_state** %state.addr, align 8, !dbg !6139
  %last_delta230 = getelementptr inbounds %struct.timer_rand_state, %struct.timer_rand_state* %21, i32 0, i32 2, !dbg !6139
  store volatile i64 %20, i64* %last_delta230, align 8, !dbg !6139
  br label %do.end31, !dbg !6139

do.end31:                                         ; preds = %do.body29
  br label %do.end32, !dbg !6135

do.end32:                                         ; preds = %do.end31
  %22 = load i64, i64* %delta, align 8, !dbg !6141
  %cmp = icmp slt i64 %22, 0, !dbg !6143
  br i1 %cmp, label %if.then, label %if.end, !dbg !6144

if.then:                                          ; preds = %do.end32
  %23 = load i64, i64* %delta, align 8, !dbg !6145
  %sub34 = sub i64 0, %23, !dbg !6146
  store i64 %sub34, i64* %delta, align 8, !dbg !6147
  br label %if.end, !dbg !6148

if.end:                                           ; preds = %if.then, %do.end32
  %24 = load i64, i64* %delta2, align 8, !dbg !6149
  %cmp35 = icmp slt i64 %24, 0, !dbg !6151
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !6152

if.then37:                                        ; preds = %if.end
  %25 = load i64, i64* %delta2, align 8, !dbg !6153
  %sub38 = sub i64 0, %25, !dbg !6154
  store i64 %sub38, i64* %delta2, align 8, !dbg !6155
  br label %if.end39, !dbg !6156

if.end39:                                         ; preds = %if.then37, %if.end
  %26 = load i64, i64* %delta3, align 8, !dbg !6157
  %cmp40 = icmp slt i64 %26, 0, !dbg !6159
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !6160

if.then42:                                        ; preds = %if.end39
  %27 = load i64, i64* %delta3, align 8, !dbg !6161
  %sub43 = sub i64 0, %27, !dbg !6162
  store i64 %sub43, i64* %delta3, align 8, !dbg !6163
  br label %if.end44, !dbg !6164

if.end44:                                         ; preds = %if.then42, %if.end39
  %28 = load i64, i64* %delta, align 8, !dbg !6165
  %29 = load i64, i64* %delta2, align 8, !dbg !6167
  %cmp45 = icmp sgt i64 %28, %29, !dbg !6168
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !6169

if.then47:                                        ; preds = %if.end44
  %30 = load i64, i64* %delta2, align 8, !dbg !6170
  store i64 %30, i64* %delta, align 8, !dbg !6171
  br label %if.end48, !dbg !6172

if.end48:                                         ; preds = %if.then47, %if.end44
  %31 = load i64, i64* %delta, align 8, !dbg !6173
  %32 = load i64, i64* %delta3, align 8, !dbg !6175
  %cmp49 = icmp sgt i64 %31, %32, !dbg !6176
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !6177

if.then51:                                        ; preds = %if.end48
  %33 = load i64, i64* %delta3, align 8, !dbg !6178
  store i64 %33, i64* %delta, align 8, !dbg !6179
  br label %if.end52, !dbg !6180

if.end52:                                         ; preds = %if.then51, %if.end48
  %34 = load %struct.entropy_store*, %struct.entropy_store** %r, align 8, !dbg !6181
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x323, metadata !6182, metadata !DIExpression()), !dbg !6183
  %35 = load i64, i64* %delta, align 8, !dbg !6183
  %shr = ashr i64 %35, 1, !dbg !6183
  %conv53 = trunc i64 %shr to i32, !dbg !6183
  store i32 %conv53, i32* %x.addr.i, align 4
  %36 = load i32, i32* %x.addr.i, align 4, !dbg !6184
  %37 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %36, i32 -1) #6, !dbg !6185, !srcloc !6186
  store i32 %37, i32* %r.i, align 4, !dbg !6185
  %38 = load i32, i32* %r.i, align 4, !dbg !6187
  %add.i = add i32 %38, 1, !dbg !6188
  store i32 %add.i, i32* %__UNIQUE_ID___x323, align 4, !dbg !6183
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y324, metadata !6189, metadata !DIExpression()), !dbg !6183
  store i32 11, i32* %__UNIQUE_ID___y324, align 4, !dbg !6183
  %39 = load i32, i32* %__UNIQUE_ID___x323, align 4, !dbg !6183
  %40 = load i32, i32* %__UNIQUE_ID___y324, align 4, !dbg !6183
  %cmp56 = icmp slt i32 %39, %40, !dbg !6183
  br i1 %cmp56, label %cond.true, label %cond.false, !dbg !6183

cond.true:                                        ; preds = %if.end52
  %41 = load i32, i32* %__UNIQUE_ID___x323, align 4, !dbg !6183
  br label %cond.end, !dbg !6183

cond.false:                                       ; preds = %if.end52
  %42 = load i32, i32* %__UNIQUE_ID___y324, align 4, !dbg !6183
  br label %cond.end, !dbg !6183

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %41, %cond.true ], [ %42, %cond.false ], !dbg !6183
  store i32 %cond, i32* %tmp55, align 4, !dbg !6183
  %43 = load i32, i32* %tmp55, align 4, !dbg !6183
  call void @credit_entropy_bits(%struct.entropy_store* %34, i32 %43) #13, !dbg !6190
  ret void, !dbg !6191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_add_input_randomness(i32 %input_bits) #1 !dbg !6192 {
entry:
  %input_bits.addr = alloca i32, align 4
  store i32 %input_bits, i32* %input_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %input_bits.addr, metadata !6193, metadata !DIExpression()), !dbg !6194
  ret void, !dbg !6194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @add_interrupt_randomness(i32 %irq, i32 %irq_flags) #1 !dbg !6195 {
entry:
  %lock.addr.i70 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i70, metadata !6198, metadata !DIExpression()), !dbg !6202
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6204, metadata !DIExpression()), !dbg !6208
  %tmp.i = alloca i32, align 4
  %irq.addr = alloca i32, align 4
  %irq_flags.addr = alloca i32, align 4
  %r = alloca %struct.entropy_store*, align 8
  %fast_pool = alloca %struct.fast_pool*, align 8
  %tmp = alloca %struct.fast_pool*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca %struct.fast_pool*, align 8
  %regs = alloca %struct.pt_regs*, align 8
  %now = alloca i64, align 8
  %cycles = alloca i64, align 8
  %c_high = alloca i32, align 4
  %j_high = alloca i32, align 4
  %ip = alloca i64, align 8
  %seed = alloca i64, align 8
  %credit = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !6211, metadata !DIExpression()), !dbg !6212
  store i32 %irq_flags, i32* %irq_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq_flags.addr, metadata !6213, metadata !DIExpression()), !dbg !6214
  call void @llvm.dbg.declare(metadata %struct.entropy_store** %r, metadata !6215, metadata !DIExpression()), !dbg !6216
  call void @llvm.dbg.declare(metadata %struct.fast_pool** %fast_pool, metadata !6217, metadata !DIExpression()), !dbg !6218
  br label %do.body, !dbg !6219

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !6222, metadata !DIExpression()), !dbg !6224
  store i8* null, i8** %__vpp_verify, align 8, !dbg !6224
  %0 = load i8*, i8** %__vpp_verify, align 8, !dbg !6224
  br label %do.end, !dbg !6224

do.end:                                           ; preds = %do.body
  store %struct.fast_pool* @irq_randomness, %struct.fast_pool** %tmp1, align 8, !dbg !6224
  %1 = load %struct.fast_pool*, %struct.fast_pool** %tmp1, align 8, !dbg !6219
  store %struct.fast_pool* %1, %struct.fast_pool** %tmp, align 8, !dbg !6225
  %2 = load %struct.fast_pool*, %struct.fast_pool** %tmp, align 8, !dbg !6225
  store %struct.fast_pool* %2, %struct.fast_pool** %fast_pool, align 8, !dbg !6218
  call void @llvm.dbg.declare(metadata %struct.pt_regs** %regs, metadata !6226, metadata !DIExpression()), !dbg !6227
  %call = call %struct.pt_regs* @get_irq_regs() #13, !dbg !6228
  store %struct.pt_regs* %call, %struct.pt_regs** %regs, align 8, !dbg !6227
  call void @llvm.dbg.declare(metadata i64* %now, metadata !6229, metadata !DIExpression()), !dbg !6230
  %3 = load volatile i64, i64* @jiffies, align 8, !dbg !6231
  store i64 %3, i64* %now, align 8, !dbg !6230
  call void @llvm.dbg.declare(metadata i64* %cycles, metadata !6232, metadata !DIExpression()), !dbg !6233
  %call2 = call i64 @get_cycles() #13, !dbg !6234
  store i64 %call2, i64* %cycles, align 8, !dbg !6233
  call void @llvm.dbg.declare(metadata i32* %c_high, metadata !6235, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.declare(metadata i32* %j_high, metadata !6237, metadata !DIExpression()), !dbg !6238
  call void @llvm.dbg.declare(metadata i64* %ip, metadata !6239, metadata !DIExpression()), !dbg !6240
  call void @llvm.dbg.declare(metadata i64* %seed, metadata !6241, metadata !DIExpression()), !dbg !6242
  call void @llvm.dbg.declare(metadata i32* %credit, metadata !6243, metadata !DIExpression()), !dbg !6244
  store i32 0, i32* %credit, align 4, !dbg !6244
  %4 = load i64, i64* %cycles, align 8, !dbg !6245
  %cmp = icmp eq i64 %4, 0, !dbg !6247
  br i1 %cmp, label %if.then, label %if.end, !dbg !6248

if.then:                                          ; preds = %do.end
  %5 = load %struct.fast_pool*, %struct.fast_pool** %fast_pool, align 8, !dbg !6249
  %6 = load %struct.pt_regs*, %struct.pt_regs** %regs, align 8, !dbg !6250
  %call3 = call i32 @get_reg(%struct.fast_pool* %5, %struct.pt_regs* %6) #13, !dbg !6251
  %conv = zext i32 %call3 to i64, !dbg !6251
  store i64 %conv, i64* %cycles, align 8, !dbg !6252
  br label %if.end, !dbg !6253

if.end:                                           ; preds = %if.then, %do.end
  %7 = load i64, i64* %cycles, align 8, !dbg !6254
  %shr = lshr i64 %7, 32, !dbg !6255
  %conv4 = trunc i64 %shr to i32, !dbg !6256
  store i32 %conv4, i32* %c_high, align 4, !dbg !6257
  %8 = load i64, i64* %now, align 8, !dbg !6258
  %shr5 = lshr i64 %8, 32, !dbg !6259
  %conv6 = trunc i64 %shr5 to i32, !dbg !6260
  store i32 %conv6, i32* %j_high, align 4, !dbg !6261
  %9 = load i64, i64* %cycles, align 8, !dbg !6262
  %10 = load i32, i32* %j_high, align 4, !dbg !6263
  %conv7 = zext i32 %10 to i64, !dbg !6263
  %xor = xor i64 %9, %conv7, !dbg !6264
  %11 = load i32, i32* %irq.addr, align 4, !dbg !6265
  %conv8 = sext i32 %11 to i64, !dbg !6265
  %xor9 = xor i64 %xor, %conv8, !dbg !6266
  %12 = load %struct.fast_pool*, %struct.fast_pool** %fast_pool, align 8, !dbg !6267
  %pool = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %12, i32 0, i32 0, !dbg !6268
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %pool, i64 0, i64 0, !dbg !6267
  %13 = load i32, i32* %arrayidx, align 8, !dbg !6269
  %conv10 = zext i32 %13 to i64, !dbg !6269
  %xor11 = xor i64 %conv10, %xor9, !dbg !6269
  %conv12 = trunc i64 %xor11 to i32, !dbg !6269
  store i32 %conv12, i32* %arrayidx, align 8, !dbg !6269
  %14 = load i64, i64* %now, align 8, !dbg !6270
  %15 = load i32, i32* %c_high, align 4, !dbg !6271
  %conv13 = zext i32 %15 to i64, !dbg !6271
  %xor14 = xor i64 %14, %conv13, !dbg !6272
  %16 = load %struct.fast_pool*, %struct.fast_pool** %fast_pool, align 8, !dbg !6273
  %pool15 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %16, i32 0, i32 0, !dbg !6274
  %arrayidx16 = getelementptr [4 x i32], [4 x i32]* %pool15, i64 0, i64 1, !dbg !6273
  %17 = load i32, i32* %arrayidx16, align 4, !dbg !6275
  %conv17 = zext i32 %17 to i64, !dbg !6275
  %xor18 = xor i64 %conv17, %xor14, !dbg !6275
  %conv19 = trunc i64 %xor18 to i32, !dbg !6275
  store i32 %conv19, i32* %arrayidx16, align 4, !dbg !6275
  %18 = load %struct.pt_regs*, %struct.pt_regs** %regs, align 8, !dbg !6276
  %tobool = icmp ne %struct.pt_regs* %18, null, !dbg !6276
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6276

cond.true:                                        ; preds = %if.end
  %19 = load %struct.pt_regs*, %struct.pt_regs** %regs, align 8, !dbg !6277
  %call20 = call i64 @instruction_pointer(%struct.pt_regs* %19) #13, !dbg !6278
  br label %cond.end, !dbg !6276

cond.false:                                       ; preds = %if.end
  %20 = call i8* @llvm.returnaddress(i32 0), !dbg !6279
  %21 = ptrtoint i8* %20 to i64, !dbg !6279
  br label %cond.end, !dbg !6276

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call20, %cond.true ], [ %21, %cond.false ], !dbg !6276
  store i64 %cond, i64* %ip, align 8, !dbg !6280
  %22 = load i64, i64* %ip, align 8, !dbg !6281
  %23 = load %struct.fast_pool*, %struct.fast_pool** %fast_pool, align 8, !dbg !6282
  %pool21 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %23, i32 0, i32 0, !dbg !6283
  %arrayidx22 = getelementptr [4 x i32], [4 x i32]* %pool21, i64 0, i64 2, !dbg !6282
  %24 = load i32, i32* %arrayidx22, align 8, !dbg !6284
  %conv23 = zext i32 %24 to i64, !dbg !6284
  %xor24 = xor i64 %conv23, %22, !dbg !6284
  %conv25 = trunc i64 %xor24 to i32, !dbg !6284
  store i32 %conv25, i32* %arrayidx22, align 8, !dbg !6284
  %25 = load i64, i64* %ip, align 8, !dbg !6285
  %shr26 = lshr i64 %25, 32, !dbg !6286
  %26 = load %struct.fast_pool*, %struct.fast_pool** %fast_pool, align 8, !dbg !6287
  %pool27 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %26, i32 0, i32 0, !dbg !6288
  %arrayidx28 = getelementptr [4 x i32], [4 x i32]* %pool27, i64 0, i64 3, !dbg !6287
  %27 = load i32, i32* %arrayidx28, align 4, !dbg !6289
  %conv29 = zext i32 %27 to i64, !dbg !6289
  %xor30 = xor i64 %conv29, %shr26, !dbg !6289
  %conv31 = trunc i64 %xor30 to i32, !dbg !6289
  store i32 %conv31, i32* %arrayidx28, align 4, !dbg !6289
  %28 = load %struct.fast_pool*, %struct.fast_pool** %fast_pool, align 8, !dbg !6290
  call void @fast_mix(%struct.fast_pool* %28) #13, !dbg !6291
  %29 = load i32, i32* @crng_init, align 4, !dbg !6292
  %cmp32 = icmp eq i32 %29, 0, !dbg !6292
  %lnot = xor i1 %cmp32, true, !dbg !6292
  %lnot34 = xor i1 %lnot, true, !dbg !6292
  %lnot.ext = zext i1 %lnot34 to i32, !dbg !6292
  %conv35 = sext i32 %lnot.ext to i64, !dbg !6292
  %tobool36 = icmp ne i64 %conv35, 0, !dbg !6292
  br i1 %tobool36, label %if.then37, label %if.end47, !dbg !6294

if.then37:                                        ; preds = %cond.end
  %30 = load %struct.fast_pool*, %struct.fast_pool** %fast_pool, align 8, !dbg !6295
  %count = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %30, i32 0, i32 3, !dbg !6298
  %31 = load i8, i8* %count, align 2, !dbg !6298
  %conv38 = zext i8 %31 to i32, !dbg !6295
  %cmp39 = icmp sge i32 %conv38, 64, !dbg !6299
  br i1 %cmp39, label %land.lhs.true, label %if.end46, !dbg !6300

land.lhs.true:                                    ; preds = %if.then37
  %32 = load %struct.fast_pool*, %struct.fast_pool** %fast_pool, align 8, !dbg !6301
  %pool41 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %32, i32 0, i32 0, !dbg !6302
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %pool41, i64 0, i64 0, !dbg !6301
  %33 = bitcast i32* %arraydecay to i8*, !dbg !6303
  %call42 = call i32 @crng_fast_load(i8* %33, i64 16) #13, !dbg !6304
  %tobool43 = icmp ne i32 %call42, 0, !dbg !6304
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !6305

if.then44:                                        ; preds = %land.lhs.true
  %34 = load %struct.fast_pool*, %struct.fast_pool** %fast_pool, align 8, !dbg !6306
  %count45 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %34, i32 0, i32 3, !dbg !6308
  store i8 0, i8* %count45, align 2, !dbg !6309
  %35 = load i64, i64* %now, align 8, !dbg !6310
  %36 = load %struct.fast_pool*, %struct.fast_pool** %fast_pool, align 8, !dbg !6311
  %last = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %36, i32 0, i32 1, !dbg !6312
  store i64 %35, i64* %last, align 8, !dbg !6313
  br label %if.end46, !dbg !6314

if.end46:                                         ; preds = %if.then44, %land.lhs.true, %if.then37
  br label %return, !dbg !6315

if.end47:                                         ; preds = %cond.end
  %37 = load %struct.fast_pool*, %struct.fast_pool** %fast_pool, align 8, !dbg !6316
  %count48 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %37, i32 0, i32 3, !dbg !6318
  %38 = load i8, i8* %count48, align 2, !dbg !6318
  %conv49 = zext i8 %38 to i32, !dbg !6316
  %cmp50 = icmp slt i32 %conv49, 64, !dbg !6319
  br i1 %cmp50, label %land.lhs.true52, label %if.end57, !dbg !6320

land.lhs.true52:                                  ; preds = %if.end47
  %39 = load %struct.fast_pool*, %struct.fast_pool** %fast_pool, align 8, !dbg !6321
  %last53 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %39, i32 0, i32 1, !dbg !6321
  %40 = load i64, i64* %last53, align 8, !dbg !6321
  %add = add i64 %40, 250, !dbg !6321
  %41 = load i64, i64* %now, align 8, !dbg !6321
  %sub = sub i64 %add, %41, !dbg !6321
  %cmp54 = icmp slt i64 %sub, 0, !dbg !6321
  br i1 %cmp54, label %if.end57, label %if.then56, !dbg !6322

if.then56:                                        ; preds = %land.lhs.true52
  br label %return, !dbg !6323

if.end57:                                         ; preds = %land.lhs.true52, %if.end47
  store %struct.entropy_store* @input_pool, %struct.entropy_store** %r, align 8, !dbg !6324
  %42 = load %struct.entropy_store*, %struct.entropy_store** %r, align 8, !dbg !6325
  %lock = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %42, i32 0, i32 3, !dbg !6326
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6327, !srcloc !6330
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6331
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !6331
  %rlock.i = bitcast %union.anon.0* %44 to %struct.raw_spinlock*, !dbg !6331
  store i32 1, i32* %tmp.i, align 4, !dbg !6327
  %45 = load i32, i32* %tmp.i, align 4, !dbg !6333
  %tobool59 = icmp ne i32 %45, 0, !dbg !6334
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !6335

if.then60:                                        ; preds = %if.end57
  br label %return, !dbg !6336

if.end61:                                         ; preds = %if.end57
  %46 = load i64, i64* %now, align 8, !dbg !6337
  %47 = load %struct.fast_pool*, %struct.fast_pool** %fast_pool, align 8, !dbg !6338
  %last62 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %47, i32 0, i32 1, !dbg !6339
  store i64 %46, i64* %last62, align 8, !dbg !6340
  %48 = load %struct.entropy_store*, %struct.entropy_store** %r, align 8, !dbg !6341
  %49 = load %struct.fast_pool*, %struct.fast_pool** %fast_pool, align 8, !dbg !6342
  %pool63 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %49, i32 0, i32 0, !dbg !6343
  %50 = bitcast [4 x i32]* %pool63 to i8*, !dbg !6344
  call void @__mix_pool_bytes(%struct.entropy_store* %48, i8* %50, i32 16) #13, !dbg !6345
  %call64 = call zeroext i1 @arch_get_random_seed_long(i64* %seed) #13, !dbg !6346
  br i1 %call64, label %if.then65, label %if.end66, !dbg !6348

if.then65:                                        ; preds = %if.end61
  %51 = load %struct.entropy_store*, %struct.entropy_store** %r, align 8, !dbg !6349
  %52 = bitcast i64* %seed to i8*, !dbg !6351
  call void @__mix_pool_bytes(%struct.entropy_store* %51, i8* %52, i32 8) #13, !dbg !6352
  store i32 1, i32* %credit, align 4, !dbg !6353
  br label %if.end66, !dbg !6354

if.end66:                                         ; preds = %if.then65, %if.end61
  %53 = load %struct.entropy_store*, %struct.entropy_store** %r, align 8, !dbg !6355
  %lock67 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %53, i32 0, i32 3, !dbg !6356
  store %struct.spinlock* %lock67, %struct.spinlock** %lock.addr.i70, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6357, !srcloc !6359
  %54 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i70, align 8, !dbg !6360
  %55 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %54, i32 0, i32 0, !dbg !6360
  %rlock.i71 = bitcast %union.anon.0* %55 to %struct.raw_spinlock*, !dbg !6360
  %56 = load %struct.fast_pool*, %struct.fast_pool** %fast_pool, align 8, !dbg !6362
  %count68 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %56, i32 0, i32 3, !dbg !6363
  store i8 0, i8* %count68, align 2, !dbg !6364
  %57 = load %struct.entropy_store*, %struct.entropy_store** %r, align 8, !dbg !6365
  %58 = load i32, i32* %credit, align 4, !dbg !6366
  %add69 = add i32 %58, 1, !dbg !6367
  call void @credit_entropy_bits(%struct.entropy_store* %57, i32 %add69) #13, !dbg !6368
  br label %return, !dbg !6369

return:                                           ; preds = %if.end66, %if.then60, %if.then56, %if.end46
  ret void, !dbg !6369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pt_regs* @get_irq_regs() #1 !dbg !6370 {
entry:
  %tmp = alloca %struct.pt_regs*, align 8
  %pscr_ret__ = alloca %struct.pt_regs*, align 8
  %__vpp_verify = alloca i8*, align 8
  %pfo_val__ = alloca i64, align 8
  %tmp1 = alloca %struct.pt_regs*, align 8
  %tmp2 = alloca %struct.pt_regs*, align 8
  call void @__this_cpu_preempt_check(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0)) #13, !dbg !6374
  call void @llvm.dbg.declare(metadata %struct.pt_regs** %pscr_ret__, metadata !6376, metadata !DIExpression()), !dbg !6378
  br label %do.body, !dbg !6378

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !6379, metadata !DIExpression()), !dbg !6381
  store i8* null, i8** %__vpp_verify, align 8, !dbg !6381
  %0 = load i8*, i8** %__vpp_verify, align 8, !dbg !6381
  br label %do.end, !dbg !6381

do.end:                                           ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %pfo_val__, metadata !6382, metadata !DIExpression()), !dbg !6384
  %1 = call i64 asm "movq $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(%struct.pt_regs** @__irq_regs) #6, !dbg !6384, !srcloc !6385
  store i64 %1, i64* %pfo_val__, align 8, !dbg !6384
  %2 = load i64, i64* %pfo_val__, align 8, !dbg !6384
  %3 = inttoptr i64 %2 to %struct.pt_regs*, !dbg !6384
  store %struct.pt_regs* %3, %struct.pt_regs** %tmp1, align 8, !dbg !6384
  %4 = load %struct.pt_regs*, %struct.pt_regs** %tmp1, align 8, !dbg !6384
  store %struct.pt_regs* %4, %struct.pt_regs** %pscr_ret__, align 8, !dbg !6378
  %5 = load %struct.pt_regs*, %struct.pt_regs** %pscr_ret__, align 8, !dbg !6378
  store %struct.pt_regs* %5, %struct.pt_regs** %tmp2, align 8, !dbg !6378
  %6 = load %struct.pt_regs*, %struct.pt_regs** %tmp2, align 8, !dbg !6378
  store %struct.pt_regs* %6, %struct.pt_regs** %tmp, align 8, !dbg !6374
  %7 = load %struct.pt_regs*, %struct.pt_regs** %tmp, align 8, !dbg !6374
  ret %struct.pt_regs* %7, !dbg !6386
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_reg(%struct.fast_pool* %f, %struct.pt_regs* %regs) #1 !dbg !6387 {
entry:
  %retval = alloca i32, align 4
  %f.addr = alloca %struct.fast_pool*, align 8
  %regs.addr = alloca %struct.pt_regs*, align 8
  %ptr = alloca i32*, align 8
  %idx = alloca i32, align 4
  %tmp = alloca i16, align 2
  store %struct.fast_pool* %f, %struct.fast_pool** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fast_pool** %f.addr, metadata !6390, metadata !DIExpression()), !dbg !6391
  store %struct.pt_regs* %regs, %struct.pt_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_regs** %regs.addr, metadata !6392, metadata !DIExpression()), !dbg !6393
  call void @llvm.dbg.declare(metadata i32** %ptr, metadata !6394, metadata !DIExpression()), !dbg !6395
  %0 = load %struct.pt_regs*, %struct.pt_regs** %regs.addr, align 8, !dbg !6396
  %1 = bitcast %struct.pt_regs* %0 to i32*, !dbg !6397
  store i32* %1, i32** %ptr, align 8, !dbg !6395
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6398, metadata !DIExpression()), !dbg !6399
  %2 = load %struct.pt_regs*, %struct.pt_regs** %regs.addr, align 8, !dbg !6400
  %cmp = icmp eq %struct.pt_regs* %2, null, !dbg !6402
  br i1 %cmp, label %if.then, label %if.end, !dbg !6403

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6404
  br label %return, !dbg !6404

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !6405

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !6407

do.end:                                           ; preds = %do.body
  %3 = load %struct.fast_pool*, %struct.fast_pool** %f.addr, align 8, !dbg !6405
  %reg_idx = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %3, i32 0, i32 2, !dbg !6405
  %4 = load volatile i16, i16* %reg_idx, align 8, !dbg !6405
  store i16 %4, i16* %tmp, align 2, !dbg !6407
  %5 = load i16, i16* %tmp, align 2, !dbg !6405
  %conv = zext i16 %5 to i32, !dbg !6409
  store i32 %conv, i32* %idx, align 4, !dbg !6410
  %6 = load i32, i32* %idx, align 4, !dbg !6411
  %conv1 = zext i32 %6 to i64, !dbg !6411
  %cmp2 = icmp uge i64 %conv1, 42, !dbg !6413
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !6414

if.then4:                                         ; preds = %do.end
  store i32 0, i32* %idx, align 4, !dbg !6415
  br label %if.end5, !dbg !6416

if.end5:                                          ; preds = %if.then4, %do.end
  %7 = load i32, i32* %idx, align 4, !dbg !6417
  %inc = add i32 %7, 1, !dbg !6417
  store i32 %inc, i32* %idx, align 4, !dbg !6417
  %8 = load i32*, i32** %ptr, align 8, !dbg !6418
  %idx.ext = zext i32 %7 to i64, !dbg !6418
  %add.ptr = getelementptr i32, i32* %8, i64 %idx.ext, !dbg !6418
  store i32* %add.ptr, i32** %ptr, align 8, !dbg !6418
  br label %do.body6, !dbg !6419

do.body6:                                         ; preds = %if.end5
  br label %do.body7, !dbg !6420

do.body7:                                         ; preds = %do.body6
  br label %do.end8, !dbg !6422

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !6420

do.body9:                                         ; preds = %do.end8
  %9 = load i32, i32* %idx, align 4, !dbg !6424
  %conv10 = trunc i32 %9 to i16, !dbg !6424
  %10 = load %struct.fast_pool*, %struct.fast_pool** %f.addr, align 8, !dbg !6424
  %reg_idx11 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %10, i32 0, i32 2, !dbg !6424
  store volatile i16 %conv10, i16* %reg_idx11, align 8, !dbg !6424
  br label %do.end12, !dbg !6424

do.end12:                                         ; preds = %do.body9
  br label %do.end13, !dbg !6420

do.end13:                                         ; preds = %do.end12
  %11 = load i32*, i32** %ptr, align 8, !dbg !6426
  %12 = load i32, i32* %11, align 4, !dbg !6427
  store i32 %12, i32* %retval, align 4, !dbg !6428
  br label %return, !dbg !6428

return:                                           ; preds = %do.end13, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !6429
  ret i32 %13, !dbg !6429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @instruction_pointer(%struct.pt_regs* %regs) #1 !dbg !6430 {
entry:
  %regs.addr = alloca %struct.pt_regs*, align 8
  store %struct.pt_regs* %regs, %struct.pt_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_regs** %regs.addr, metadata !6433, metadata !DIExpression()), !dbg !6434
  %0 = load %struct.pt_regs*, %struct.pt_regs** %regs.addr, align 8, !dbg !6435
  %ip = getelementptr inbounds %struct.pt_regs, %struct.pt_regs* %0, i32 0, i32 16, !dbg !6436
  %1 = load i64, i64* %ip, align 8, !dbg !6436
  ret i64 %1, !dbg !6437
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fast_mix(%struct.fast_pool* %f) #1 !dbg !6438 {
entry:
  %f.addr = alloca %struct.fast_pool*, align 8
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  store %struct.fast_pool* %f, %struct.fast_pool** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fast_pool** %f.addr, metadata !6441, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.declare(metadata i32* %a, metadata !6443, metadata !DIExpression()), !dbg !6444
  %0 = load %struct.fast_pool*, %struct.fast_pool** %f.addr, align 8, !dbg !6445
  %pool = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %0, i32 0, i32 0, !dbg !6446
  %arrayidx = getelementptr [4 x i32], [4 x i32]* %pool, i64 0, i64 0, !dbg !6445
  %1 = load i32, i32* %arrayidx, align 8, !dbg !6445
  store i32 %1, i32* %a, align 4, !dbg !6444
  call void @llvm.dbg.declare(metadata i32* %b, metadata !6447, metadata !DIExpression()), !dbg !6448
  %2 = load %struct.fast_pool*, %struct.fast_pool** %f.addr, align 8, !dbg !6449
  %pool1 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %2, i32 0, i32 0, !dbg !6450
  %arrayidx2 = getelementptr [4 x i32], [4 x i32]* %pool1, i64 0, i64 1, !dbg !6449
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !6449
  store i32 %3, i32* %b, align 4, !dbg !6448
  call void @llvm.dbg.declare(metadata i32* %c, metadata !6451, metadata !DIExpression()), !dbg !6452
  %4 = load %struct.fast_pool*, %struct.fast_pool** %f.addr, align 8, !dbg !6453
  %pool3 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %4, i32 0, i32 0, !dbg !6454
  %arrayidx4 = getelementptr [4 x i32], [4 x i32]* %pool3, i64 0, i64 2, !dbg !6453
  %5 = load i32, i32* %arrayidx4, align 8, !dbg !6453
  store i32 %5, i32* %c, align 4, !dbg !6452
  call void @llvm.dbg.declare(metadata i32* %d, metadata !6455, metadata !DIExpression()), !dbg !6456
  %6 = load %struct.fast_pool*, %struct.fast_pool** %f.addr, align 8, !dbg !6457
  %pool5 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %6, i32 0, i32 0, !dbg !6458
  %arrayidx6 = getelementptr [4 x i32], [4 x i32]* %pool5, i64 0, i64 3, !dbg !6457
  %7 = load i32, i32* %arrayidx6, align 4, !dbg !6457
  store i32 %7, i32* %d, align 4, !dbg !6456
  %8 = load i32, i32* %b, align 4, !dbg !6459
  %9 = load i32, i32* %a, align 4, !dbg !6460
  %add = add i32 %9, %8, !dbg !6460
  store i32 %add, i32* %a, align 4, !dbg !6460
  %10 = load i32, i32* %d, align 4, !dbg !6461
  %11 = load i32, i32* %c, align 4, !dbg !6462
  %add7 = add i32 %11, %10, !dbg !6462
  store i32 %add7, i32* %c, align 4, !dbg !6462
  %12 = load i32, i32* %b, align 4, !dbg !6463
  %call = call i32 @rol32(i32 %12, i32 6) #13, !dbg !6464
  store i32 %call, i32* %b, align 4, !dbg !6465
  %13 = load i32, i32* %d, align 4, !dbg !6466
  %call8 = call i32 @rol32(i32 %13, i32 27) #13, !dbg !6467
  store i32 %call8, i32* %d, align 4, !dbg !6468
  %14 = load i32, i32* %a, align 4, !dbg !6469
  %15 = load i32, i32* %d, align 4, !dbg !6470
  %xor = xor i32 %15, %14, !dbg !6470
  store i32 %xor, i32* %d, align 4, !dbg !6470
  %16 = load i32, i32* %c, align 4, !dbg !6471
  %17 = load i32, i32* %b, align 4, !dbg !6472
  %xor9 = xor i32 %17, %16, !dbg !6472
  store i32 %xor9, i32* %b, align 4, !dbg !6472
  %18 = load i32, i32* %b, align 4, !dbg !6473
  %19 = load i32, i32* %a, align 4, !dbg !6474
  %add10 = add i32 %19, %18, !dbg !6474
  store i32 %add10, i32* %a, align 4, !dbg !6474
  %20 = load i32, i32* %d, align 4, !dbg !6475
  %21 = load i32, i32* %c, align 4, !dbg !6476
  %add11 = add i32 %21, %20, !dbg !6476
  store i32 %add11, i32* %c, align 4, !dbg !6476
  %22 = load i32, i32* %b, align 4, !dbg !6477
  %call12 = call i32 @rol32(i32 %22, i32 16) #13, !dbg !6478
  store i32 %call12, i32* %b, align 4, !dbg !6479
  %23 = load i32, i32* %d, align 4, !dbg !6480
  %call13 = call i32 @rol32(i32 %23, i32 14) #13, !dbg !6481
  store i32 %call13, i32* %d, align 4, !dbg !6482
  %24 = load i32, i32* %a, align 4, !dbg !6483
  %25 = load i32, i32* %d, align 4, !dbg !6484
  %xor14 = xor i32 %25, %24, !dbg !6484
  store i32 %xor14, i32* %d, align 4, !dbg !6484
  %26 = load i32, i32* %c, align 4, !dbg !6485
  %27 = load i32, i32* %b, align 4, !dbg !6486
  %xor15 = xor i32 %27, %26, !dbg !6486
  store i32 %xor15, i32* %b, align 4, !dbg !6486
  %28 = load i32, i32* %b, align 4, !dbg !6487
  %29 = load i32, i32* %a, align 4, !dbg !6488
  %add16 = add i32 %29, %28, !dbg !6488
  store i32 %add16, i32* %a, align 4, !dbg !6488
  %30 = load i32, i32* %d, align 4, !dbg !6489
  %31 = load i32, i32* %c, align 4, !dbg !6490
  %add17 = add i32 %31, %30, !dbg !6490
  store i32 %add17, i32* %c, align 4, !dbg !6490
  %32 = load i32, i32* %b, align 4, !dbg !6491
  %call18 = call i32 @rol32(i32 %32, i32 6) #13, !dbg !6492
  store i32 %call18, i32* %b, align 4, !dbg !6493
  %33 = load i32, i32* %d, align 4, !dbg !6494
  %call19 = call i32 @rol32(i32 %33, i32 27) #13, !dbg !6495
  store i32 %call19, i32* %d, align 4, !dbg !6496
  %34 = load i32, i32* %a, align 4, !dbg !6497
  %35 = load i32, i32* %d, align 4, !dbg !6498
  %xor20 = xor i32 %35, %34, !dbg !6498
  store i32 %xor20, i32* %d, align 4, !dbg !6498
  %36 = load i32, i32* %c, align 4, !dbg !6499
  %37 = load i32, i32* %b, align 4, !dbg !6500
  %xor21 = xor i32 %37, %36, !dbg !6500
  store i32 %xor21, i32* %b, align 4, !dbg !6500
  %38 = load i32, i32* %b, align 4, !dbg !6501
  %39 = load i32, i32* %a, align 4, !dbg !6502
  %add22 = add i32 %39, %38, !dbg !6502
  store i32 %add22, i32* %a, align 4, !dbg !6502
  %40 = load i32, i32* %d, align 4, !dbg !6503
  %41 = load i32, i32* %c, align 4, !dbg !6504
  %add23 = add i32 %41, %40, !dbg !6504
  store i32 %add23, i32* %c, align 4, !dbg !6504
  %42 = load i32, i32* %b, align 4, !dbg !6505
  %call24 = call i32 @rol32(i32 %42, i32 16) #13, !dbg !6506
  store i32 %call24, i32* %b, align 4, !dbg !6507
  %43 = load i32, i32* %d, align 4, !dbg !6508
  %call25 = call i32 @rol32(i32 %43, i32 14) #13, !dbg !6509
  store i32 %call25, i32* %d, align 4, !dbg !6510
  %44 = load i32, i32* %a, align 4, !dbg !6511
  %45 = load i32, i32* %d, align 4, !dbg !6512
  %xor26 = xor i32 %45, %44, !dbg !6512
  store i32 %xor26, i32* %d, align 4, !dbg !6512
  %46 = load i32, i32* %c, align 4, !dbg !6513
  %47 = load i32, i32* %b, align 4, !dbg !6514
  %xor27 = xor i32 %47, %46, !dbg !6514
  store i32 %xor27, i32* %b, align 4, !dbg !6514
  %48 = load i32, i32* %a, align 4, !dbg !6515
  %49 = load %struct.fast_pool*, %struct.fast_pool** %f.addr, align 8, !dbg !6516
  %pool28 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %49, i32 0, i32 0, !dbg !6517
  %arrayidx29 = getelementptr [4 x i32], [4 x i32]* %pool28, i64 0, i64 0, !dbg !6516
  store i32 %48, i32* %arrayidx29, align 8, !dbg !6518
  %50 = load i32, i32* %b, align 4, !dbg !6519
  %51 = load %struct.fast_pool*, %struct.fast_pool** %f.addr, align 8, !dbg !6520
  %pool30 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %51, i32 0, i32 0, !dbg !6521
  %arrayidx31 = getelementptr [4 x i32], [4 x i32]* %pool30, i64 0, i64 1, !dbg !6520
  store i32 %50, i32* %arrayidx31, align 4, !dbg !6522
  %52 = load i32, i32* %c, align 4, !dbg !6523
  %53 = load %struct.fast_pool*, %struct.fast_pool** %f.addr, align 8, !dbg !6524
  %pool32 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %53, i32 0, i32 0, !dbg !6525
  %arrayidx33 = getelementptr [4 x i32], [4 x i32]* %pool32, i64 0, i64 2, !dbg !6524
  store i32 %52, i32* %arrayidx33, align 8, !dbg !6526
  %54 = load i32, i32* %d, align 4, !dbg !6527
  %55 = load %struct.fast_pool*, %struct.fast_pool** %f.addr, align 8, !dbg !6528
  %pool34 = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %55, i32 0, i32 0, !dbg !6529
  %arrayidx35 = getelementptr [4 x i32], [4 x i32]* %pool34, i64 0, i64 3, !dbg !6528
  store i32 %54, i32* %arrayidx35, align 4, !dbg !6530
  %56 = load %struct.fast_pool*, %struct.fast_pool** %f.addr, align 8, !dbg !6531
  %count = getelementptr inbounds %struct.fast_pool, %struct.fast_pool* %56, i32 0, i32 3, !dbg !6532
  %57 = load i8, i8* %count, align 2, !dbg !6533
  %inc = add i8 %57, 1, !dbg !6533
  store i8 %inc, i8* %count, align 2, !dbg !6533
  ret void, !dbg !6534
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @crng_fast_load(i8* %cp, i64 %len) #1 !dbg !6535 {
entry:
  %lock.addr.i40 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i40, metadata !5630, metadata !DIExpression()), !dbg !6536
  %flags.addr.i41 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i41, metadata !5637, metadata !DIExpression()), !dbg !6538
  %tmp.i42 = alloca i32, align 4
  %tmp8.i43 = alloca i32, align 4
  %lock.addr.i38 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i38, metadata !5630, metadata !DIExpression()), !dbg !6539
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !6543
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5639, metadata !DIExpression()), !dbg !6544
  %retval = alloca i32, align 4
  %cp.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %flags = alloca i64, align 8
  %p = alloca i8*, align 8
  %tmp = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp2 = alloca i32, align 4
  %tmp4 = alloca i32, align 4
  %tmp10 = alloca i32, align 4
  %__dummy13 = alloca i64, align 8
  %__dummy214 = alloca i64, align 8
  %tmp17 = alloca i32, align 4
  %tmp20 = alloca i32, align 4
  store i8* %cp, i8** %cp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cp.addr, metadata !6552, metadata !DIExpression()), !dbg !6553
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !6554, metadata !DIExpression()), !dbg !6555
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6556, metadata !DIExpression()), !dbg !6557
  call void @llvm.dbg.declare(metadata i8** %p, metadata !6558, metadata !DIExpression()), !dbg !6559
  br label %do.body, !dbg !6560

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6561

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6563, metadata !DIExpression()), !dbg !6566
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6567, metadata !DIExpression()), !dbg !6566
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6566
  %conv = zext i1 %cmp to i32, !dbg !6566
  store i32 1, i32* %tmp2, align 4, !dbg !6566
  %0 = load i32, i32* %tmp2, align 4, !dbg !6566
  %call = call i64 @arch_local_irq_save() #13, !dbg !6568
  store i64 %call, i64* %flags, align 8, !dbg !6568
  br label %do.end, !dbg !6568

do.end:                                           ; preds = %do.body1
  br label %do.end3, !dbg !6561

do.end3:                                          ; preds = %do.end
  br label %do.body5, !dbg !6569

do.body5:                                         ; preds = %do.end3
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6570, !srcloc !6571
  br label %do.body6, !dbg !6570

do.body6:                                         ; preds = %do.body5
  store %struct.spinlock* getelementptr inbounds (%struct.crng_state, %struct.crng_state* @primary_crng, i32 0, i32 2), %struct.spinlock** %lock.addr.i, align 8
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6572
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !6573
  %rlock.i = bitcast %union.anon.0* %2 to %struct.raw_spinlock*, !dbg !6573
  br label %do.end8, !dbg !6574

do.end8:                                          ; preds = %do.body6
  br label %do.end9, !dbg !6570

do.end9:                                          ; preds = %do.end8
  store i32 1, i32* %tmp10, align 4, !dbg !6570
  %3 = load i32, i32* %tmp10, align 4, !dbg !6569
  %tobool = icmp ne i32 %3, 0, !dbg !6560
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6560

cond.true:                                        ; preds = %do.end9
  br label %cond.end, !dbg !6560

cond.false:                                       ; preds = %do.end9
  br label %do.body11, !dbg !6575

do.body11:                                        ; preds = %cond.false
  br label %do.body12, !dbg !6577

do.body12:                                        ; preds = %do.body11
  call void @llvm.dbg.declare(metadata i64* %__dummy13, metadata !6579, metadata !DIExpression()), !dbg !6582
  call void @llvm.dbg.declare(metadata i64* %__dummy214, metadata !6583, metadata !DIExpression()), !dbg !6582
  %cmp15 = icmp eq i64* %__dummy13, %__dummy214, !dbg !6582
  %conv16 = zext i1 %cmp15 to i32, !dbg !6582
  store i32 1, i32* %tmp17, align 4, !dbg !6582
  %4 = load i32, i32* %tmp17, align 4, !dbg !6582
  %5 = load i64, i64* %flags, align 8, !dbg !6584
  call void @arch_local_irq_restore(i64 %5) #13, !dbg !6584
  br label %do.end18, !dbg !6584

do.end18:                                         ; preds = %do.body12
  br label %do.end19, !dbg !6577

do.end19:                                         ; preds = %do.end18
  store i32 0, i32* %tmp20, align 4, !dbg !6577
  %6 = load i32, i32* %tmp20, align 4, !dbg !6575
  br label %cond.end, !dbg !6560

cond.end:                                         ; preds = %do.end19, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %6, %do.end19 ], !dbg !6560
  store i32 %cond, i32* %tmp4, align 4, !dbg !6561
  %7 = load i32, i32* %tmp4, align 4, !dbg !6560
  store i32 %7, i32* %tmp, align 4, !dbg !6585
  %8 = load i32, i32* %tmp, align 4, !dbg !6586
  %tobool21 = icmp ne i32 %8, 0, !dbg !6585
  br i1 %tobool21, label %if.end, label %if.then, !dbg !6587

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !6588
  br label %return, !dbg !6588

if.end:                                           ; preds = %cond.end
  %9 = load i32, i32* @crng_init, align 4, !dbg !6589
  %cmp22 = icmp ne i32 %9, 0, !dbg !6590
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !6591

if.then24:                                        ; preds = %if.end
  %10 = load i64, i64* %flags, align 8, !dbg !6592
  store %struct.spinlock* getelementptr inbounds (%struct.crng_state, %struct.crng_state* @primary_crng, i32 0, i32 2), %struct.spinlock** %lock.addr.i38, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !6593
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !6593
  store i32 1, i32* %tmp.i, align 4, !dbg !6593
  %11 = load i32, i32* %tmp.i, align 4, !dbg !6593
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !6594
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !6594
  store i32 1, i32* %tmp8.i, align 4, !dbg !6594
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !6594
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !6595
  call void @arch_local_irq_restore(i64 %13) #14, !dbg !6595
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6596, !srcloc !5715
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i38, align 8, !dbg !6597
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !6597
  %rlock.i39 = bitcast %union.anon.0* %15 to %struct.raw_spinlock*, !dbg !6597
  store i32 0, i32* %retval, align 4, !dbg !6598
  br label %return, !dbg !6598

if.end25:                                         ; preds = %if.end
  store i8* bitcast (i32* getelementptr inbounds (%struct.crng_state, %struct.crng_state* @primary_crng, i32 0, i32 0, i64 4) to i8*), i8** %p, align 8, !dbg !6599
  br label %while.cond, !dbg !6600

while.cond:                                       ; preds = %while.body, %if.end25
  %16 = load i64, i64* %len.addr, align 8, !dbg !6601
  %cmp26 = icmp ugt i64 %16, 0, !dbg !6602
  br i1 %cmp26, label %land.rhs, label %land.end, !dbg !6603

land.rhs:                                         ; preds = %while.cond
  %17 = load i32, i32* @crng_init_cnt, align 4, !dbg !6604
  %cmp28 = icmp slt i32 %17, 64, !dbg !6605
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %18 = phi i1 [ false, %while.cond ], [ %cmp28, %land.rhs ], !dbg !6606
  br i1 %18, label %while.body, label %while.end, !dbg !6600

while.body:                                       ; preds = %land.end
  %19 = load i8*, i8** %cp.addr, align 8, !dbg !6607
  %20 = load i8, i8* %19, align 1, !dbg !6609
  %conv30 = sext i8 %20 to i32, !dbg !6609
  %21 = load i8*, i8** %p, align 8, !dbg !6610
  %22 = load i32, i32* @crng_init_cnt, align 4, !dbg !6611
  %rem = srem i32 %22, 32, !dbg !6612
  %idxprom = sext i32 %rem to i64, !dbg !6610
  %arrayidx = getelementptr i8, i8* %21, i64 %idxprom, !dbg !6610
  %23 = load i8, i8* %arrayidx, align 1, !dbg !6613
  %conv31 = sext i8 %23 to i32, !dbg !6613
  %xor = xor i32 %conv31, %conv30, !dbg !6613
  %conv32 = trunc i32 %xor to i8, !dbg !6613
  store i8 %conv32, i8* %arrayidx, align 1, !dbg !6613
  %24 = load i8*, i8** %cp.addr, align 8, !dbg !6614
  %incdec.ptr = getelementptr i8, i8* %24, i32 1, !dbg !6614
  store i8* %incdec.ptr, i8** %cp.addr, align 8, !dbg !6614
  %25 = load i32, i32* @crng_init_cnt, align 4, !dbg !6615
  %inc = add i32 %25, 1, !dbg !6615
  store i32 %inc, i32* @crng_init_cnt, align 4, !dbg !6615
  %26 = load i64, i64* %len.addr, align 8, !dbg !6616
  %dec = add i64 %26, -1, !dbg !6616
  store i64 %dec, i64* %len.addr, align 8, !dbg !6616
  br label %while.cond, !dbg !6600, !llvm.loop !6617

while.end:                                        ; preds = %land.end
  %27 = load i64, i64* %flags, align 8, !dbg !6619
  store %struct.spinlock* getelementptr inbounds (%struct.crng_state, %struct.crng_state* @primary_crng, i32 0, i32 2), %struct.spinlock** %lock.addr.i40, align 8
  store i64 %27, i64* %flags.addr.i41, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !6620
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !6620
  store i32 1, i32* %tmp.i42, align 4, !dbg !6620
  %28 = load i32, i32* %tmp.i42, align 4, !dbg !6620
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !6621
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !6621
  store i32 1, i32* %tmp8.i43, align 4, !dbg !6621
  %29 = load i32, i32* %tmp8.i43, align 4, !dbg !6621
  %30 = load i64, i64* %flags.addr.i41, align 8, !dbg !6622
  call void @arch_local_irq_restore(i64 %30) #14, !dbg !6622
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6623, !srcloc !5715
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i40, align 8, !dbg !6624
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !6624
  %rlock.i44 = bitcast %union.anon.0* %32 to %struct.raw_spinlock*, !dbg !6624
  %33 = load i32, i32* @crng_init_cnt, align 4, !dbg !6625
  %cmp33 = icmp sge i32 %33, 64, !dbg !6627
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !6628

if.then35:                                        ; preds = %while.end
  call void @invalidate_batched_entropy() #13, !dbg !6629
  store i32 1, i32* @crng_init, align 4, !dbg !6631
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0)) #15, !dbg !6632
  br label %if.end37, !dbg !6633

if.end37:                                         ; preds = %if.then35, %while.end
  store i32 1, i32* %retval, align 4, !dbg !6634
  br label %return, !dbg !6634

return:                                           ; preds = %if.end37, %if.then24, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !6635
  ret i32 %34, !dbg !6635
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mix_pool_bytes(%struct.entropy_store* %r, i8* %in, i32 %nbytes) #1 !dbg !6636 {
entry:
  %r.addr = alloca %struct.entropy_store*, align 8
  %in.addr = alloca i8*, align 8
  %nbytes.addr = alloca i32, align 4
  store %struct.entropy_store* %r, %struct.entropy_store** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.entropy_store** %r.addr, metadata !6637, metadata !DIExpression()), !dbg !6638
  store i8* %in, i8** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in.addr, metadata !6639, metadata !DIExpression()), !dbg !6640
  store i32 %nbytes, i32* %nbytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbytes.addr, metadata !6641, metadata !DIExpression()), !dbg !6642
  %0 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !6643
  %name = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %0, i32 0, i32 2, !dbg !6644
  %1 = load i8*, i8** %name, align 8, !dbg !6644
  %2 = load i32, i32* %nbytes.addr, align 4, !dbg !6645
  %3 = call i8* @llvm.returnaddress(i32 0), !dbg !6646
  %4 = ptrtoint i8* %3 to i64, !dbg !6646
  call void @trace_mix_pool_bytes_nolock(i8* %1, i32 %2, i64 %4) #13, !dbg !6647
  %5 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !6648
  %6 = load i8*, i8** %in.addr, align 8, !dbg !6649
  %7 = load i32, i32* %nbytes.addr, align 4, !dbg !6650
  call void @_mix_pool_bytes(%struct.entropy_store* %5, i8* %6, i32 %7) #13, !dbg !6651
  ret void, !dbg !6652
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @arch_get_random_seed_long(i64* %v) #1 !dbg !6653 {
entry:
  %retval.i = alloca i1, align 1
  %bit.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %bit.addr.i, metadata !6657, metadata !DIExpression()), !dbg !6662
  %v.addr = alloca i64*, align 8
  store i64* %v, i64** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %v.addr, metadata !6664, metadata !DIExpression()), !dbg !6665
  br i1 false, label %cond.true, label %cond.false2, !dbg !6666

cond.true:                                        ; preds = %entry
  br i1 false, label %cond.true1, label %cond.false, !dbg !6666

cond.true1:                                       ; preds = %cond.true
  br i1 true, label %cond.true4, label %cond.false6, !dbg !6666

cond.false:                                       ; preds = %cond.true
  %call = call zeroext i1 @test_bit(i64 306, i64* getelementptr inbounds (%struct.cpuinfo_x86, %struct.cpuinfo_x86* @boot_cpu_data, i32 0, i32 12, i32 0)) #13, !dbg !6666
  br i1 %call, label %cond.true4, label %cond.false6, !dbg !6666

cond.false2:                                      ; preds = %entry
  store i16 306, i16* %bit.addr.i, align 2
  %0 = load i16, i16* %bit.addr.i, align 2, !dbg !6667
  %1 = load i16, i16* %bit.addr.i, align 2, !dbg !6667
  %conv.i = zext i16 %1 to i32, !dbg !6667
  %and.i = and i32 %conv.i, 7, !dbg !6667
  %shl.i = shl i32 1, %and.i, !dbg !6667
  %2 = load i16, i16* %bit.addr.i, align 2, !dbg !6667
  %conv1.i = zext i16 %2 to i32, !dbg !6667
  %shr.i = ashr i32 %conv1.i, 3, !dbg !6667
  %idxprom.i = sext i32 %shr.i to i64, !dbg !6667
  %arrayidx.i = getelementptr i8, i8* bitcast (%union.anon.103* getelementptr inbounds (%struct.cpuinfo_x86, %struct.cpuinfo_x86* @boot_cpu_data, i32 0, i32 12) to i8*), i64 %idxprom.i, !dbg !6667
  callbr void asm sideeffect "1: jmp 6f\0A2:\0A.skip -(((5f-4f) - (2b-1b)) > 0) * ((5f-4f) - (2b-1b)),0x90\0A3:\0A.section .altinstructions,\22a\22\0A .long 1b - .\0A .long 4f - .\0A .word ${1:P}\0A .byte 3b - 1b\0A .byte 5f - 4f\0A .byte 3b - 2b\0A.previous\0A.section .altinstr_replacement,\22ax\22\0A4: jmp ${5:l}\0A5:\0A.previous\0A.section .altinstructions,\22a\22\0A .long 1b - .\0A .long 0\0A .word ${0:P}\0A .byte 3b - 1b\0A .byte 0\0A .byte 0\0A.previous\0A.section .altinstr_aux,\22ax\22\0A6:\0A testb $2,$3\0A jnz ${4:l}\0A jmp ${5:l}\0A.previous\0A", "i,i,i,*m,X,X,~{dirflag},~{fpsr},~{flags}"(i16 %0, i32 117, i32 %shl.i, i8* %arrayidx.i, i8* blockaddress(@arch_get_random_seed_long, %t_yes.i), i8* blockaddress(@arch_get_random_seed_long, %t_no.i)) #7
          to label %asm.fallthrough.i [label %t_yes.i, label %t_no.i], !dbg !6667, !srcloc !6668

asm.fallthrough.i:                                ; preds = %cond.false2
  br label %t_yes.i, !dbg !6667

t_yes.i:                                          ; preds = %asm.fallthrough.i, %cond.false2
  call void @llvm.dbg.label(metadata !6669), !dbg !6670
  store i1 true, i1* %retval.i, align 1, !dbg !6671
  br label %_static_cpu_has.exit, !dbg !6671

t_no.i:                                           ; preds = %cond.false2
  call void @llvm.dbg.label(metadata !6672), !dbg !6673
  store i1 false, i1* %retval.i, align 1, !dbg !6674
  br label %_static_cpu_has.exit, !dbg !6674

_static_cpu_has.exit:                             ; preds = %t_yes.i, %t_no.i
  %3 = load i1, i1* %retval.i, align 1, !dbg !6675
  br i1 %3, label %cond.true4, label %cond.false6, !dbg !6666

cond.true4:                                       ; preds = %_static_cpu_has.exit, %cond.false, %cond.true1
  %4 = load i64*, i64** %v.addr, align 8, !dbg !6676
  %call5 = call zeroext i1 @rdseed_long(i64* %4) #13, !dbg !6677
  %conv = zext i1 %call5 to i32, !dbg !6677
  br label %cond.end, !dbg !6666

cond.false6:                                      ; preds = %_static_cpu_has.exit, %cond.false, %cond.true1
  br label %cond.end, !dbg !6666

cond.end:                                         ; preds = %cond.false6, %cond.true4
  %cond = phi i32 [ %conv, %cond.true4 ], [ 0, %cond.false6 ], !dbg !6666
  %tobool = icmp ne i32 %cond, 0, !dbg !6666
  ret i1 %tobool, !dbg !6678
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @credit_entropy_bits(%struct.entropy_store* %r, i32 %nbits) #1 !dbg !6679 {
entry:
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6682, metadata !DIExpression()), !dbg !6690
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6694, metadata !DIExpression()), !dbg !6695
  %r.addr = alloca %struct.entropy_store*, align 8
  %nbits.addr = alloca i32, align 4
  %entropy_count = alloca i32, align 4
  %orig = alloca i32, align 4
  %has_initialized = alloca i32, align 4
  %pool_size = alloca i32, align 4
  %nfrac = alloca i32, align 4
  %tmp = alloca i32, align 4
  %pnfrac = alloca i32, align 4
  %s = alloca i32, align 4
  %anfrac = alloca i32, align 4
  %__UNIQUE_ID___x310 = alloca i32, align 4
  %__UNIQUE_ID___y311 = alloca i32, align 4
  %tmp7 = alloca i32, align 4
  %add9 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp47 = alloca i64, align 8
  %__ai_ptr = alloca i32*, align 8
  %tmp63 = alloca i32, align 4
  %__ret = alloca i32, align 4
  %__old = alloca i32, align 4
  %__new = alloca i32, align 4
  %__ptr = alloca i32*, align 8
  %tmp64 = alloca i32, align 4
  %entropy_bits = alloca i32, align 4
  store %struct.entropy_store* %r, %struct.entropy_store** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.entropy_store** %r.addr, metadata !6696, metadata !DIExpression()), !dbg !6697
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !6698, metadata !DIExpression()), !dbg !6699
  call void @llvm.dbg.declare(metadata i32* %entropy_count, metadata !6700, metadata !DIExpression()), !dbg !6701
  call void @llvm.dbg.declare(metadata i32* %orig, metadata !6702, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.declare(metadata i32* %has_initialized, metadata !6704, metadata !DIExpression()), !dbg !6705
  store i32 0, i32* %has_initialized, align 4, !dbg !6705
  call void @llvm.dbg.declare(metadata i32* %pool_size, metadata !6706, metadata !DIExpression()), !dbg !6708
  %0 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !6709
  %poolinfo = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %0, i32 0, i32 0, !dbg !6710
  %1 = load %struct.poolinfo*, %struct.poolinfo** %poolinfo, align 8, !dbg !6710
  %poolfracbits = getelementptr inbounds %struct.poolinfo, %struct.poolinfo* %1, i32 0, i32 3, !dbg !6711
  %2 = load i32, i32* %poolfracbits, align 4, !dbg !6711
  store i32 %2, i32* %pool_size, align 4, !dbg !6708
  call void @llvm.dbg.declare(metadata i32* %nfrac, metadata !6712, metadata !DIExpression()), !dbg !6713
  %3 = load i32, i32* %nbits.addr, align 4, !dbg !6714
  %shl = shl i32 %3, 3, !dbg !6715
  store i32 %shl, i32* %nfrac, align 4, !dbg !6713
  %4 = load i32, i32* %nbits.addr, align 4, !dbg !6716
  %tobool = icmp ne i32 %4, 0, !dbg !6716
  br i1 %tobool, label %if.end, label %if.then, !dbg !6718

if.then:                                          ; preds = %entry
  br label %if.end88, !dbg !6719

if.end:                                           ; preds = %entry
  br label %retry, !dbg !6716

retry:                                            ; preds = %if.then67, %if.end
  call void @llvm.dbg.label(metadata !6720), !dbg !6721
  br label %do.body, !dbg !6722

do.body:                                          ; preds = %retry
  br label %do.end, !dbg !6724

do.end:                                           ; preds = %do.body
  %5 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !6722
  %entropy_count1 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %5, i32 0, i32 6, !dbg !6722
  %6 = load volatile i32, i32* %entropy_count1, align 4, !dbg !6722
  store i32 %6, i32* %tmp, align 4, !dbg !6724
  %7 = load i32, i32* %tmp, align 4, !dbg !6722
  store i32 %7, i32* %orig, align 4, !dbg !6726
  store i32 %7, i32* %entropy_count, align 4, !dbg !6727
  %8 = load i32, i32* %nfrac, align 4, !dbg !6728
  %cmp = icmp slt i32 %8, 0, !dbg !6730
  br i1 %cmp, label %if.then2, label %if.else, !dbg !6731

if.then2:                                         ; preds = %do.end
  %9 = load i32, i32* %nfrac, align 4, !dbg !6732
  %10 = load i32, i32* %entropy_count, align 4, !dbg !6734
  %add = add i32 %10, %9, !dbg !6734
  store i32 %add, i32* %entropy_count, align 4, !dbg !6734
  br label %if.end19, !dbg !6735

if.else:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %pnfrac, metadata !6736, metadata !DIExpression()), !dbg !6738
  %11 = load i32, i32* %nfrac, align 4, !dbg !6739
  store i32 %11, i32* %pnfrac, align 4, !dbg !6738
  call void @llvm.dbg.declare(metadata i32* %s, metadata !6740, metadata !DIExpression()), !dbg !6741
  %12 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !6742
  %poolinfo3 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %12, i32 0, i32 0, !dbg !6743
  %13 = load %struct.poolinfo*, %struct.poolinfo** %poolinfo3, align 8, !dbg !6743
  %poolbitshift = getelementptr inbounds %struct.poolinfo, %struct.poolinfo* %13, i32 0, i32 0, !dbg !6744
  %14 = load i32, i32* %poolbitshift, align 4, !dbg !6744
  %add4 = add i32 %14, 3, !dbg !6745
  %add5 = add i32 %add4, 2, !dbg !6746
  store i32 %add5, i32* %s, align 4, !dbg !6741
  br label %do.body6, !dbg !6747

do.body6:                                         ; preds = %land.end, %if.else
  call void @llvm.dbg.declare(metadata i32* %anfrac, metadata !6748, metadata !DIExpression()), !dbg !6750
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x310, metadata !6751, metadata !DIExpression()), !dbg !6753
  %15 = load i32, i32* %pnfrac, align 4, !dbg !6753
  store i32 %15, i32* %__UNIQUE_ID___x310, align 4, !dbg !6753
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y311, metadata !6754, metadata !DIExpression()), !dbg !6753
  %16 = load i32, i32* %pool_size, align 4, !dbg !6753
  %div = sdiv i32 %16, 2, !dbg !6753
  store i32 %div, i32* %__UNIQUE_ID___y311, align 4, !dbg !6753
  %17 = load i32, i32* %__UNIQUE_ID___x310, align 4, !dbg !6753
  %18 = load i32, i32* %__UNIQUE_ID___y311, align 4, !dbg !6753
  %cmp8 = icmp slt i32 %17, %18, !dbg !6753
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !6753

cond.true:                                        ; preds = %do.body6
  %19 = load i32, i32* %__UNIQUE_ID___x310, align 4, !dbg !6753
  br label %cond.end, !dbg !6753

cond.false:                                       ; preds = %do.body6
  %20 = load i32, i32* %__UNIQUE_ID___y311, align 4, !dbg !6753
  br label %cond.end, !dbg !6753

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %19, %cond.true ], [ %20, %cond.false ], !dbg !6753
  store i32 %cond, i32* %tmp7, align 4, !dbg !6753
  %21 = load i32, i32* %tmp7, align 4, !dbg !6753
  store i32 %21, i32* %anfrac, align 4, !dbg !6750
  call void @llvm.dbg.declare(metadata i32* %add9, metadata !6755, metadata !DIExpression()), !dbg !6756
  %22 = load i32, i32* %pool_size, align 4, !dbg !6757
  %23 = load i32, i32* %entropy_count, align 4, !dbg !6758
  %sub = sub i32 %22, %23, !dbg !6759
  %24 = load i32, i32* %anfrac, align 4, !dbg !6760
  %mul = mul i32 %sub, %24, !dbg !6761
  %mul10 = mul i32 %mul, 3, !dbg !6762
  %25 = load i32, i32* %s, align 4, !dbg !6763
  %shr = lshr i32 %mul10, %25, !dbg !6764
  store i32 %shr, i32* %add9, align 4, !dbg !6756
  %26 = load i32, i32* %add9, align 4, !dbg !6765
  %27 = load i32, i32* %entropy_count, align 4, !dbg !6766
  %add11 = add i32 %27, %26, !dbg !6766
  store i32 %add11, i32* %entropy_count, align 4, !dbg !6766
  %28 = load i32, i32* %anfrac, align 4, !dbg !6767
  %29 = load i32, i32* %pnfrac, align 4, !dbg !6768
  %sub12 = sub i32 %29, %28, !dbg !6768
  store i32 %sub12, i32* %pnfrac, align 4, !dbg !6768
  br label %do.cond, !dbg !6769

do.cond:                                          ; preds = %cond.end
  %30 = load i32, i32* %entropy_count, align 4, !dbg !6770
  %31 = load i32, i32* %pool_size, align 4, !dbg !6770
  %sub13 = sub i32 %31, 2, !dbg !6770
  %cmp14 = icmp slt i32 %30, %sub13, !dbg !6770
  br i1 %cmp14, label %land.rhs, label %land.end, !dbg !6770

land.rhs:                                         ; preds = %do.cond
  %32 = load i32, i32* %pnfrac, align 4, !dbg !6770
  %tobool15 = icmp ne i32 %32, 0, !dbg !6770
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %33 = phi i1 [ false, %do.cond ], [ %tobool15, %land.rhs ], !dbg !6771
  %lnot = xor i1 %33, true, !dbg !6770
  %lnot16 = xor i1 %lnot, true, !dbg !6770
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !6770
  %conv = sext i32 %lnot.ext to i64, !dbg !6770
  %tobool17 = icmp ne i64 %conv, 0, !dbg !6769
  br i1 %tobool17, label %do.body6, label %do.end18, !dbg !6769, !llvm.loop !6772

do.end18:                                         ; preds = %land.end
  br label %if.end19

if.end19:                                         ; preds = %do.end18, %if.then2
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6774, metadata !DIExpression()), !dbg !6777
  %34 = load i32, i32* %entropy_count, align 4, !dbg !6777
  %cmp20 = icmp slt i32 %34, 0, !dbg !6777
  %lnot22 = xor i1 %cmp20, true, !dbg !6777
  %lnot24 = xor i1 %lnot22, true, !dbg !6777
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !6777
  store i32 %lnot.ext25, i32* %__ret_warn_on, align 4, !dbg !6777
  %35 = load i32, i32* %__ret_warn_on, align 4, !dbg !6778
  %tobool26 = icmp ne i32 %35, 0, !dbg !6778
  %lnot27 = xor i1 %tobool26, true, !dbg !6778
  %lnot29 = xor i1 %lnot27, true, !dbg !6778
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !6778
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !6778
  %tobool32 = icmp ne i64 %conv31, 0, !dbg !6778
  br i1 %tobool32, label %if.then33, label %if.end46, !dbg !6777

if.then33:                                        ; preds = %if.end19
  br label %do.body34, !dbg !6778

do.body34:                                        ; preds = %if.then33
  br label %do.body35, !dbg !6780

do.body35:                                        ; preds = %do.body34
  br label %do.end37, !dbg !6782

do.end37:                                         ; preds = %do.body35
  br label %do.body38, !dbg !6780

do.body38:                                        ; preds = %do.end37
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i32 711, i32 2305, i64 12) #7, !dbg !6784, !srcloc !6786
  br label %do.end40, !dbg !6784

do.end40:                                         ; preds = %do.body38
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 312) #7, !dbg !6787, !srcloc !6789
  br label %do.body41, !dbg !6780

do.body41:                                        ; preds = %do.end40
  br label %do.end43, !dbg !6790

do.end43:                                         ; preds = %do.body41
  br label %do.end45, !dbg !6780

do.end45:                                         ; preds = %do.end43
  br label %if.end46, !dbg !6780

if.end46:                                         ; preds = %do.end45, %if.end19
  %36 = load i32, i32* %__ret_warn_on, align 4, !dbg !6777
  %tobool48 = icmp ne i32 %36, 0, !dbg !6777
  %lnot49 = xor i1 %tobool48, true, !dbg !6777
  %lnot51 = xor i1 %lnot49, true, !dbg !6777
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !6777
  %conv53 = sext i32 %lnot.ext52 to i64, !dbg !6777
  store i64 %conv53, i64* %tmp47, align 8, !dbg !6778
  %37 = load i64, i64* %tmp47, align 8, !dbg !6777
  %tobool54 = icmp ne i64 %37, 0, !dbg !6792
  br i1 %tobool54, label %if.then55, label %if.else56, !dbg !6793

if.then55:                                        ; preds = %if.end46
  %38 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !6794
  %name = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %38, i32 0, i32 2, !dbg !6794
  %39 = load i8*, i8** %name, align 8, !dbg !6794
  %40 = load i32, i32* %entropy_count, align 4, !dbg !6794
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i8* %39, i32 %40) #15, !dbg !6794
  store i32 0, i32* %entropy_count, align 4, !dbg !6796
  br label %if.end61, !dbg !6797

if.else56:                                        ; preds = %if.end46
  %41 = load i32, i32* %entropy_count, align 4, !dbg !6798
  %42 = load i32, i32* %pool_size, align 4, !dbg !6800
  %cmp57 = icmp sgt i32 %41, %42, !dbg !6801
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !6802

if.then59:                                        ; preds = %if.else56
  %43 = load i32, i32* %pool_size, align 4, !dbg !6803
  store i32 %43, i32* %entropy_count, align 4, !dbg !6804
  br label %if.end60, !dbg !6805

if.end60:                                         ; preds = %if.then59, %if.else56
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then55
  call void @llvm.dbg.declare(metadata i32** %__ai_ptr, metadata !6806, metadata !DIExpression()), !dbg !6807
  %44 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !6807
  %entropy_count62 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %44, i32 0, i32 6, !dbg !6807
  store i32* %entropy_count62, i32** %__ai_ptr, align 8, !dbg !6807
  %45 = load i32*, i32** %__ai_ptr, align 8, !dbg !6807
  %46 = bitcast i32* %45 to i8*, !dbg !6807
  store i8* %46, i8** %v.addr.i, align 8
  store i64 4, i64* %size.addr.i, align 8
  %47 = load i8*, i8** %v.addr.i, align 8, !dbg !6808
  %48 = load i64, i64* %size.addr.i, align 8, !dbg !6809
  %conv.i = trunc i64 %48 to i32, !dbg !6809
  %call.i = call zeroext i1 @kasan_check_write(i8* %47, i32 %conv.i) #14, !dbg !6810
  %49 = load i8*, i8** %v.addr.i, align 8, !dbg !6811
  %50 = load i64, i64* %size.addr.i, align 8, !dbg !6811
  call void @kcsan_check_access(i8* %49, i64 %50, i32 5) #14, !dbg !6811
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !6812, metadata !DIExpression()), !dbg !6814
  call void @llvm.dbg.declare(metadata i32* %__old, metadata !6815, metadata !DIExpression()), !dbg !6814
  %51 = load i32, i32* %orig, align 4, !dbg !6814
  store i32 %51, i32* %__old, align 4, !dbg !6814
  call void @llvm.dbg.declare(metadata i32* %__new, metadata !6816, metadata !DIExpression()), !dbg !6814
  %52 = load i32, i32* %entropy_count, align 4, !dbg !6814
  store i32 %52, i32* %__new, align 4, !dbg !6814
  call void @llvm.dbg.declare(metadata i32** %__ptr, metadata !6817, metadata !DIExpression()), !dbg !6814
  %53 = load i32*, i32** %__ai_ptr, align 8, !dbg !6814
  store i32* %53, i32** %__ptr, align 8, !dbg !6814
  %54 = load i32*, i32** %__ptr, align 8, !dbg !6814
  %55 = load i32, i32* %__new, align 4, !dbg !6814
  %56 = load i32, i32* %__old, align 4, !dbg !6814
  %57 = call i32 asm sideeffect "cmpxchgl $2,$1", "={ax},=*m,r,0,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %54, i32 %55, i32 %56, i32* %54) #7, !dbg !6814, !srcloc !6818
  store i32 %57, i32* %__ret, align 4, !dbg !6814
  %58 = load i32, i32* %__ret, align 4, !dbg !6814
  store i32 %58, i32* %tmp64, align 4, !dbg !6814
  %59 = load i32, i32* %tmp64, align 4, !dbg !6814
  store i32 %59, i32* %tmp63, align 4, !dbg !6807
  %60 = load i32, i32* %tmp63, align 4, !dbg !6807
  %61 = load i32, i32* %orig, align 4, !dbg !6819
  %cmp65 = icmp ne i32 %60, %61, !dbg !6820
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !6821

if.then67:                                        ; preds = %if.end61
  br label %retry, !dbg !6822

if.end68:                                         ; preds = %if.end61
  %62 = load i32, i32* %has_initialized, align 4, !dbg !6823
  %tobool69 = icmp ne i32 %62, 0, !dbg !6823
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !6825

if.then70:                                        ; preds = %if.end68
  %63 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !6826
  %initialized = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %63, i32 0, i32 7, !dbg !6828
  %bf.load = load i8, i8* %initialized, align 8, !dbg !6829
  %bf.clear = and i8 %bf.load, -2, !dbg !6829
  %bf.set = or i8 %bf.clear, 1, !dbg !6829
  store i8 %bf.set, i8* %initialized, align 8, !dbg !6829
  call void @kill_fasync(%struct.fasync_struct** @fasync, i32 29, i32 1) #13, !dbg !6830
  br label %if.end71, !dbg !6831

if.end71:                                         ; preds = %if.then70, %if.end68
  %64 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !6832
  %name72 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %64, i32 0, i32 2, !dbg !6833
  %65 = load i8*, i8** %name72, align 8, !dbg !6833
  %66 = load i32, i32* %nbits.addr, align 4, !dbg !6834
  %67 = load i32, i32* %entropy_count, align 4, !dbg !6835
  %shr73 = ashr i32 %67, 3, !dbg !6836
  %68 = call i8* @llvm.returnaddress(i32 0), !dbg !6837
  %69 = ptrtoint i8* %68 to i64, !dbg !6837
  call void @trace_credit_entropy_bits(i8* %65, i32 %66, i32 %shr73, i64 %69) #13, !dbg !6838
  %70 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !6839
  %cmp74 = icmp eq %struct.entropy_store* %70, @input_pool, !dbg !6841
  br i1 %cmp74, label %if.then76, label %if.end88, !dbg !6842

if.then76:                                        ; preds = %if.end71
  call void @llvm.dbg.declare(metadata i32* %entropy_bits, metadata !6843, metadata !DIExpression()), !dbg !6845
  %71 = load i32, i32* %entropy_count, align 4, !dbg !6846
  %shr77 = ashr i32 %71, 3, !dbg !6847
  store i32 %shr77, i32* %entropy_bits, align 4, !dbg !6845
  %72 = load i32, i32* @crng_init, align 4, !dbg !6848
  %cmp78 = icmp slt i32 %72, 2, !dbg !6850
  br i1 %cmp78, label %if.then80, label %if.end87, !dbg !6851

if.then80:                                        ; preds = %if.then76
  %73 = load i32, i32* %entropy_bits, align 4, !dbg !6852
  %cmp81 = icmp slt i32 %73, 128, !dbg !6855
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !6856

if.then83:                                        ; preds = %if.then80
  br label %if.end88, !dbg !6857

if.end84:                                         ; preds = %if.then80
  %74 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !6858
  call void @crng_reseed(%struct.crng_state* @primary_crng, %struct.entropy_store* %74) #13, !dbg !6859
  %75 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !6860
  %entropy_count85 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %75, i32 0, i32 6, !dbg !6860
  %76 = load i32, i32* %entropy_count85, align 4, !dbg !6860
  %shr86 = ashr i32 %76, 3, !dbg !6860
  store i32 %shr86, i32* %entropy_bits, align 4, !dbg !6861
  br label %if.end87, !dbg !6862

if.end87:                                         ; preds = %if.end84, %if.then76
  br label %if.end88, !dbg !6863

if.end88:                                         ; preds = %if.then, %if.then83, %if.end87, %if.end71
  ret void, !dbg !6864
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @add_disk_randomness(%struct.gendisk* %disk) #1 !dbg !6865 {
entry:
  %disk.addr = alloca %struct.gendisk*, align 8
  store %struct.gendisk* %disk, %struct.gendisk** %disk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gendisk** %disk.addr, metadata !6866, metadata !DIExpression()), !dbg !6867
  %0 = load %struct.gendisk*, %struct.gendisk** %disk.addr, align 8, !dbg !6868
  %tobool = icmp ne %struct.gendisk* %0, null, !dbg !6868
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6870

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.gendisk*, %struct.gendisk** %disk.addr, align 8, !dbg !6871
  %random = getelementptr inbounds %struct.gendisk, %struct.gendisk* %1, i32 0, i32 15, !dbg !6872
  %2 = load %struct.timer_rand_state*, %struct.timer_rand_state** %random, align 8, !dbg !6872
  %tobool1 = icmp ne %struct.timer_rand_state* %2, null, !dbg !6871
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6873

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !6874

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.gendisk*, %struct.gendisk** %disk.addr, align 8, !dbg !6875
  %random2 = getelementptr inbounds %struct.gendisk, %struct.gendisk* %3, i32 0, i32 15, !dbg !6876
  %4 = load %struct.timer_rand_state*, %struct.timer_rand_state** %random2, align 8, !dbg !6876
  %5 = load %struct.gendisk*, %struct.gendisk** %disk.addr, align 8, !dbg !6877
  %call = call i32 @disk_devt(%struct.gendisk* %5) #13, !dbg !6878
  %add = add i32 256, %call, !dbg !6879
  call void @add_timer_randomness(%struct.timer_rand_state* %4, i32 %add) #13, !dbg !6880
  %6 = load %struct.gendisk*, %struct.gendisk** %disk.addr, align 8, !dbg !6881
  %call3 = call i32 @disk_devt(%struct.gendisk* %6) #13, !dbg !6882
  %7 = load i32, i32* getelementptr inbounds (%struct.entropy_store, %struct.entropy_store* @input_pool, i32 0, i32 6), align 4, !dbg !6883
  %shr = ashr i32 %7, 3, !dbg !6883
  call void @trace_add_disk_randomness(i32 %call3, i32 %shr) #13, !dbg !6884
  br label %return, !dbg !6885

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6885
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @disk_devt(%struct.gendisk* %disk) #1 !dbg !6886 {
entry:
  %disk.addr = alloca %struct.gendisk*, align 8
  store %struct.gendisk* %disk, %struct.gendisk** %disk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gendisk** %disk.addr, metadata !6889, metadata !DIExpression()), !dbg !6890
  %0 = load %struct.gendisk*, %struct.gendisk** %disk.addr, align 8, !dbg !6891
  %major = getelementptr inbounds %struct.gendisk, %struct.gendisk* %0, i32 0, i32 0, !dbg !6891
  %1 = load i32, i32* %major, align 8, !dbg !6891
  %shl = shl i32 %1, 20, !dbg !6891
  %2 = load %struct.gendisk*, %struct.gendisk** %disk.addr, align 8, !dbg !6891
  %first_minor = getelementptr inbounds %struct.gendisk, %struct.gendisk* %2, i32 0, i32 1, !dbg !6891
  %3 = load i32, i32* %first_minor, align 4, !dbg !6891
  %or = or i32 %shl, %3, !dbg !6891
  ret i32 %or, !dbg !6892
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_add_disk_randomness(i32 %dev, i32 %input_bits) #1 !dbg !6893 {
entry:
  %dev.addr = alloca i32, align 4
  %input_bits.addr = alloca i32, align 4
  store i32 %dev, i32* %dev.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dev.addr, metadata !6896, metadata !DIExpression()), !dbg !6897
  store i32 %input_bits, i32* %input_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %input_bits.addr, metadata !6898, metadata !DIExpression()), !dbg !6897
  ret void, !dbg !6897
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @get_random_bytes(i8* %buf, i32 %nbytes) #1 !dbg !5479 {
entry:
  %buf.addr = alloca i8*, align 8
  %nbytes.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6899, metadata !DIExpression()), !dbg !6900
  store i32 %nbytes, i32* %nbytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbytes.addr, metadata !6901, metadata !DIExpression()), !dbg !6902
  %0 = call i8* @llvm.returnaddress(i32 0), !dbg !6903
  %1 = ptrtoint i8* %0 to i64, !dbg !6903
  %2 = inttoptr i64 %1 to i8*, !dbg !6903
  call void @_warn_unseeded_randomness(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.get_random_bytes, i64 0, i64 0), i8* %2, i8** @get_random_bytes.previous) #13, !dbg !6903
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !6904
  %4 = load i32, i32* %nbytes.addr, align 4, !dbg !6905
  call void @_get_random_bytes(i8* %3, i32 %4) #13, !dbg !6906
  ret void, !dbg !6907
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_warn_unseeded_randomness(i8* %func_name, i8* %caller, i8** %previous) #1 !dbg !5569 {
entry:
  %func_name.addr = alloca i8*, align 8
  %caller.addr = alloca i8*, align 8
  %previous.addr = alloca i8**, align 8
  %tmp = alloca i8*, align 8
  store i8* %func_name, i8** %func_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %func_name.addr, metadata !6908, metadata !DIExpression()), !dbg !6909
  store i8* %caller, i8** %caller.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %caller.addr, metadata !6910, metadata !DIExpression()), !dbg !6911
  store i8** %previous, i8*** %previous.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %previous.addr, metadata !6912, metadata !DIExpression()), !dbg !6913
  %0 = load i8, i8* @_warn_unseeded_randomness.print_once, align 1, !dbg !6914
  %tobool = trunc i8 %0 to i1, !dbg !6914
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6916

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @crng_init, align 4, !dbg !6917
  %cmp = icmp sgt i32 %1, 1, !dbg !6917
  %lnot = xor i1 %cmp, true, !dbg !6917
  %lnot1 = xor i1 %lnot, true, !dbg !6917
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6917
  %conv = sext i32 %lnot.ext to i64, !dbg !6917
  %tobool2 = icmp ne i64 %conv, 0, !dbg !6917
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !6918

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %2 = load i8**, i8*** %previous.addr, align 8, !dbg !6919
  %tobool4 = icmp ne i8** %2, null, !dbg !6919
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !6920

land.lhs.true:                                    ; preds = %lor.lhs.false3
  %3 = load i8*, i8** %caller.addr, align 8, !dbg !6921
  br label %do.body, !dbg !6922

do.body:                                          ; preds = %land.lhs.true
  br label %do.end, !dbg !6924

do.end:                                           ; preds = %do.body
  %4 = load i8**, i8*** %previous.addr, align 8, !dbg !6922
  %5 = load volatile i8*, i8** %4, align 8, !dbg !6922
  store i8* %5, i8** %tmp, align 8, !dbg !6924
  %6 = load i8*, i8** %tmp, align 8, !dbg !6922
  %cmp5 = icmp eq i8* %3, %6, !dbg !6926
  br i1 %cmp5, label %if.then, label %if.end, !dbg !6927

if.then:                                          ; preds = %do.end, %lor.lhs.false, %entry
  br label %if.end16, !dbg !6928

if.end:                                           ; preds = %do.end, %lor.lhs.false3
  br label %do.body7, !dbg !6929

do.body7:                                         ; preds = %if.end
  br label %do.body8, !dbg !6930

do.body8:                                         ; preds = %do.body7
  br label %do.end9, !dbg !6932

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !6930

do.body10:                                        ; preds = %do.end9
  %7 = load i8*, i8** %caller.addr, align 8, !dbg !6934
  %8 = load i8**, i8*** %previous.addr, align 8, !dbg !6934
  store volatile i8* %7, i8** %8, align 8, !dbg !6934
  br label %do.end11, !dbg !6934

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !6930

do.end12:                                         ; preds = %do.end11
  store i8 1, i8* @_warn_unseeded_randomness.print_once, align 1, !dbg !6936
  %call = call i32 @___ratelimit(%struct.ratelimit_state* @unseeded_warning, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__._warn_unseeded_randomness, i64 0, i64 0)) #13, !dbg !6937
  %tobool13 = icmp ne i32 %call, 0, !dbg !6937
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !6939

if.then14:                                        ; preds = %do.end12
  %9 = load i8*, i8** %func_name.addr, align 8, !dbg !6940
  %10 = load i8*, i8** %caller.addr, align 8, !dbg !6941
  %11 = load i32, i32* @crng_init, align 4, !dbg !6942
  %call15 = call i32 (i8*, ...) @printk_deferred(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.16, i64 0, i64 0), i8* %9, i8* %10, i32 %11) #15, !dbg !6943
  br label %if.end16, !dbg !6943

if.end16:                                         ; preds = %if.then, %if.then14, %do.end12
  ret void, !dbg !6944
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_get_random_bytes(i8* %buf, i32 %nbytes) #1 !dbg !6945 {
entry:
  %buf.addr = alloca i8*, align 8
  %nbytes.addr = alloca i32, align 4
  %tmp = alloca [64 x i8], align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6946, metadata !DIExpression()), !dbg !6947
  store i32 %nbytes, i32* %nbytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbytes.addr, metadata !6948, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.declare(metadata [64 x i8]* %tmp, metadata !6950, metadata !DIExpression()), !dbg !6952
  %0 = load i32, i32* %nbytes.addr, align 4, !dbg !6953
  %1 = call i8* @llvm.returnaddress(i32 0), !dbg !6954
  %2 = ptrtoint i8* %1 to i64, !dbg !6954
  call void @trace_get_random_bytes(i32 %0, i64 %2) #13, !dbg !6955
  br label %while.cond, !dbg !6956

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i32, i32* %nbytes.addr, align 4, !dbg !6957
  %cmp = icmp sge i32 %3, 64, !dbg !6958
  br i1 %cmp, label %while.body, label %while.end, !dbg !6956

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !6959
  call void @extract_crng(i8* %4) #13, !dbg !6961
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !6962
  %add.ptr = getelementptr i8, i8* %5, i64 64, !dbg !6962
  store i8* %add.ptr, i8** %buf.addr, align 8, !dbg !6962
  %6 = load i32, i32* %nbytes.addr, align 4, !dbg !6963
  %sub = sub i32 %6, 64, !dbg !6963
  store i32 %sub, i32* %nbytes.addr, align 4, !dbg !6963
  br label %while.cond, !dbg !6956, !llvm.loop !6964

while.end:                                        ; preds = %while.cond
  %7 = load i32, i32* %nbytes.addr, align 4, !dbg !6966
  %cmp1 = icmp sgt i32 %7, 0, !dbg !6968
  br i1 %cmp1, label %if.then, label %if.else, !dbg !6969

if.then:                                          ; preds = %while.end
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %tmp, i64 0, i64 0, !dbg !6970
  call void @extract_crng(i8* %arraydecay) #13, !dbg !6972
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !6973
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %tmp, i64 0, i64 0, !dbg !6974
  %9 = load i32, i32* %nbytes.addr, align 4, !dbg !6975
  %conv = sext i32 %9 to i64, !dbg !6975
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 4 %arraydecay2, i64 %conv, i1 false), !dbg !6974
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %tmp, i64 0, i64 0, !dbg !6976
  %10 = load i32, i32* %nbytes.addr, align 4, !dbg !6977
  call void @crng_backtrack_protect(i8* %arraydecay3, i32 %10) #13, !dbg !6978
  br label %if.end, !dbg !6979

if.else:                                          ; preds = %while.end
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %tmp, i64 0, i64 0, !dbg !6980
  call void @crng_backtrack_protect(i8* %arraydecay4, i32 64) #13, !dbg !6981
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %tmp, i64 0, i64 0, !dbg !6982
  call void @memzero_explicit(i8* %arraydecay5, i64 64) #13, !dbg !6983
  ret void, !dbg !6984
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @wait_for_random_bytes() #1 !dbg !6985 {
entry:
  %retval = alloca i32, align 4
  %ret = alloca i32, align 4
  %__ret = alloca i64, align 8
  %__cond = alloca i8, align 1
  %tmp = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret31 = alloca i64, align 8
  %__int = alloca i64, align 8
  %__cond32 = alloca i8, align 1
  %tmp48 = alloca i32, align 4
  %tmp64 = alloca i64, align 8
  %tmp66 = alloca i64, align 8
  %0 = load i32, i32* @crng_init, align 4, !dbg !6988
  %cmp = icmp sgt i32 %0, 1, !dbg !6988
  %lnot = xor i1 %cmp, true, !dbg !6988
  %lnot1 = xor i1 %lnot, true, !dbg !6988
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6988
  %conv = sext i32 %lnot.ext to i64, !dbg !6988
  %tobool = icmp ne i64 %conv, 0, !dbg !6988
  %lnot2 = xor i1 %tobool, true, !dbg !6988
  %lnot4 = xor i1 %lnot2, true, !dbg !6988
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !6988
  %conv6 = sext i32 %lnot.ext5 to i64, !dbg !6988
  %tobool7 = icmp ne i64 %conv6, 0, !dbg !6988
  br i1 %tobool7, label %if.then, label %if.end, !dbg !6990

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6991
  br label %return, !dbg !6991

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !6992

do.body:                                          ; preds = %do.cond, %if.end
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6993, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !6996, metadata !DIExpression()), !dbg !6998
  store i64 250, i64* %__ret, align 8, !dbg !6998
  br label %do.body8, !dbg !6998

do.body8:                                         ; preds = %do.body
  br label %do.body9, !dbg !6999

do.body9:                                         ; preds = %do.body8
  br label %do.end, !dbg !7001

do.end:                                           ; preds = %do.body9
  br label %do.end10, !dbg !6999

do.end10:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8* %__cond, metadata !7003, metadata !DIExpression()), !dbg !7006
  %1 = load i32, i32* @crng_init, align 4, !dbg !7006
  %cmp11 = icmp sgt i32 %1, 1, !dbg !7006
  %lnot13 = xor i1 %cmp11, true, !dbg !7006
  %lnot15 = xor i1 %lnot13, true, !dbg !7006
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !7006
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !7006
  %tobool18 = icmp ne i64 %conv17, 0, !dbg !7006
  %frombool = zext i1 %tobool18 to i8, !dbg !7006
  store i8 %frombool, i8* %__cond, align 1, !dbg !7006
  %2 = load i8, i8* %__cond, align 1, !dbg !7007
  %tobool19 = trunc i8 %2 to i1, !dbg !7007
  br i1 %tobool19, label %land.lhs.true, label %if.end23, !dbg !7007

land.lhs.true:                                    ; preds = %do.end10
  %3 = load i64, i64* %__ret, align 8, !dbg !7007
  %tobool21 = icmp ne i64 %3, 0, !dbg !7007
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !7006

if.then22:                                        ; preds = %land.lhs.true
  store i64 1, i64* %__ret, align 8, !dbg !7007
  br label %if.end23, !dbg !7007

if.end23:                                         ; preds = %if.then22, %land.lhs.true, %do.end10
  %4 = load i8, i8* %__cond, align 1, !dbg !7006
  %tobool24 = trunc i8 %4 to i1, !dbg !7006
  br i1 %tobool24, label %lor.end, label %lor.rhs, !dbg !7006

lor.rhs:                                          ; preds = %if.end23
  %5 = load i64, i64* %__ret, align 8, !dbg !7006
  %tobool26 = icmp ne i64 %5, 0, !dbg !7006
  %lnot27 = xor i1 %tobool26, true, !dbg !7006
  br label %lor.end, !dbg !7006

lor.end:                                          ; preds = %lor.rhs, %if.end23
  %6 = phi i1 [ true, %if.end23 ], [ %lnot27, %lor.rhs ]
  %lor.ext = zext i1 %6 to i32, !dbg !7006
  store i32 %lor.ext, i32* %tmp, align 4, !dbg !7007
  %7 = load i32, i32* %tmp, align 4, !dbg !7006
  %tobool29 = icmp ne i32 %7, 0, !dbg !7009
  br i1 %tobool29, label %if.end65, label %if.then30, !dbg !6998

if.then30:                                        ; preds = %lor.end
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !7010, metadata !DIExpression()), !dbg !7012
  call void @llvm.dbg.declare(metadata i64* %__ret31, metadata !7013, metadata !DIExpression()), !dbg !7012
  store i64 250, i64* %__ret31, align 8, !dbg !7012
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #13, !dbg !7012
  br label %for.cond, !dbg !7012

for.cond:                                         ; preds = %if.end62, %if.then30
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !7014, metadata !DIExpression()), !dbg !7018
  %call = call i64 @prepare_to_wait_event(%struct.wait_queue_head* @crng_init_wait, %struct.wait_queue_entry* %__wq_entry, i32 1) #13, !dbg !7018
  store i64 %call, i64* %__int, align 8, !dbg !7018
  call void @llvm.dbg.declare(metadata i8* %__cond32, metadata !7019, metadata !DIExpression()), !dbg !7022
  %8 = load i32, i32* @crng_init, align 4, !dbg !7022
  %cmp33 = icmp sgt i32 %8, 1, !dbg !7022
  %lnot35 = xor i1 %cmp33, true, !dbg !7022
  %lnot37 = xor i1 %lnot35, true, !dbg !7022
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !7022
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !7022
  %tobool40 = icmp ne i64 %conv39, 0, !dbg !7022
  %frombool41 = zext i1 %tobool40 to i8, !dbg !7022
  store i8 %frombool41, i8* %__cond32, align 1, !dbg !7022
  %9 = load i8, i8* %__cond32, align 1, !dbg !7023
  %tobool42 = trunc i8 %9 to i1, !dbg !7023
  br i1 %tobool42, label %land.lhs.true44, label %if.end47, !dbg !7023

land.lhs.true44:                                  ; preds = %for.cond
  %10 = load i64, i64* %__ret31, align 8, !dbg !7023
  %tobool45 = icmp ne i64 %10, 0, !dbg !7023
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !7022

if.then46:                                        ; preds = %land.lhs.true44
  store i64 1, i64* %__ret31, align 8, !dbg !7023
  br label %if.end47, !dbg !7023

if.end47:                                         ; preds = %if.then46, %land.lhs.true44, %for.cond
  %11 = load i8, i8* %__cond32, align 1, !dbg !7022
  %tobool49 = trunc i8 %11 to i1, !dbg !7022
  br i1 %tobool49, label %lor.end55, label %lor.rhs51, !dbg !7022

lor.rhs51:                                        ; preds = %if.end47
  %12 = load i64, i64* %__ret31, align 8, !dbg !7022
  %tobool52 = icmp ne i64 %12, 0, !dbg !7022
  %lnot53 = xor i1 %tobool52, true, !dbg !7022
  br label %lor.end55, !dbg !7022

lor.end55:                                        ; preds = %lor.rhs51, %if.end47
  %13 = phi i1 [ true, %if.end47 ], [ %lnot53, %lor.rhs51 ]
  %lor.ext56 = zext i1 %13 to i32, !dbg !7022
  store i32 %lor.ext56, i32* %tmp48, align 4, !dbg !7023
  %14 = load i32, i32* %tmp48, align 4, !dbg !7022
  %tobool57 = icmp ne i32 %14, 0, !dbg !7025
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !7018

if.then58:                                        ; preds = %lor.end55
  br label %for.end, !dbg !7025

if.end59:                                         ; preds = %lor.end55
  %15 = load i64, i64* %__int, align 8, !dbg !7026
  %tobool60 = icmp ne i64 %15, 0, !dbg !7026
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !7018

if.then61:                                        ; preds = %if.end59
  %16 = load i64, i64* %__int, align 8, !dbg !7028
  store i64 %16, i64* %__ret31, align 8, !dbg !7028
  br label %__out, !dbg !7028

if.end62:                                         ; preds = %if.end59
  %17 = load i64, i64* %__ret31, align 8, !dbg !7018
  %call63 = call i64 @schedule_timeout(i64 %17) #13, !dbg !7018
  store i64 %call63, i64* %__ret31, align 8, !dbg !7018
  br label %for.cond, !dbg !7030, !llvm.loop !7031

for.end:                                          ; preds = %if.then58
  call void @finish_wait(%struct.wait_queue_head* @crng_init_wait, %struct.wait_queue_entry* %__wq_entry) #13, !dbg !7012
  br label %__out, !dbg !7012

__out:                                            ; preds = %for.end, %if.then61
  call void @llvm.dbg.label(metadata !7033), !dbg !7012
  %18 = load i64, i64* %__ret31, align 8, !dbg !7012
  store i64 %18, i64* %tmp64, align 8, !dbg !7012
  %19 = load i64, i64* %tmp64, align 8, !dbg !7012
  store i64 %19, i64* %__ret, align 8, !dbg !7009
  br label %if.end65, !dbg !7009

if.end65:                                         ; preds = %__out, %lor.end
  %20 = load i64, i64* %__ret, align 8, !dbg !6998
  store i64 %20, i64* %tmp66, align 8, !dbg !7009
  %21 = load i64, i64* %tmp66, align 8, !dbg !6998
  %conv67 = trunc i64 %21 to i32, !dbg !7034
  store i32 %conv67, i32* %ret, align 4, !dbg !7035
  %22 = load i32, i32* %ret, align 4, !dbg !7036
  %tobool68 = icmp ne i32 %22, 0, !dbg !7036
  br i1 %tobool68, label %if.then69, label %if.end72, !dbg !7038

if.then69:                                        ; preds = %if.end65
  %23 = load i32, i32* %ret, align 4, !dbg !7039
  %cmp70 = icmp sgt i32 %23, 0, !dbg !7040
  br i1 %cmp70, label %cond.true, label %cond.false, !dbg !7039

cond.true:                                        ; preds = %if.then69
  br label %cond.end, !dbg !7039

cond.false:                                       ; preds = %if.then69
  %24 = load i32, i32* %ret, align 4, !dbg !7041
  br label %cond.end, !dbg !7039

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %24, %cond.false ], !dbg !7039
  store i32 %cond, i32* %retval, align 4, !dbg !7042
  br label %return, !dbg !7042

if.end72:                                         ; preds = %if.end65
  call void @try_to_generate_entropy() #13, !dbg !7043
  br label %do.cond, !dbg !7044

do.cond:                                          ; preds = %if.end72
  %25 = load i32, i32* @crng_init, align 4, !dbg !7045
  %cmp73 = icmp sgt i32 %25, 1, !dbg !7045
  %lnot75 = xor i1 %cmp73, true, !dbg !7045
  %lnot77 = xor i1 %lnot75, true, !dbg !7045
  %lnot.ext78 = zext i1 %lnot77 to i32, !dbg !7045
  %conv79 = sext i32 %lnot.ext78 to i64, !dbg !7045
  %tobool80 = icmp ne i64 %conv79, 0, !dbg !7046
  %lnot81 = xor i1 %tobool80, true, !dbg !7046
  br i1 %lnot81, label %do.body, label %do.end83, !dbg !7044, !llvm.loop !7047

do.end83:                                         ; preds = %do.cond
  store i32 0, i32* %retval, align 4, !dbg !7049
  br label %return, !dbg !7049

return:                                           ; preds = %do.end83, %cond.end, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !7050
  ret i32 %26, !dbg !7050
}

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #4

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #4

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout(i64) #4

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #4

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @try_to_generate_entropy() #1 !dbg !7051 {
entry:
  %stack = alloca %struct.anon.106, align 8
  call void @llvm.dbg.declare(metadata %struct.anon.106* %stack, metadata !7052, metadata !DIExpression()), !dbg !7057
  %call = call i64 @get_cycles() #13, !dbg !7058
  %now = getelementptr inbounds %struct.anon.106, %struct.anon.106* %stack, i32 0, i32 0, !dbg !7059
  store i64 %call, i64* %now, align 8, !dbg !7060
  %now1 = getelementptr inbounds %struct.anon.106, %struct.anon.106* %stack, i32 0, i32 0, !dbg !7061
  %0 = load i64, i64* %now1, align 8, !dbg !7061
  %call2 = call i64 @get_cycles() #13, !dbg !7063
  %cmp = icmp eq i64 %0, %call2, !dbg !7064
  br i1 %cmp, label %if.then, label %if.end, !dbg !7065

if.then:                                          ; preds = %entry
  br label %return, !dbg !7066

if.end:                                           ; preds = %entry
  %timer = getelementptr inbounds %struct.anon.106, %struct.anon.106* %stack, i32 0, i32 1, !dbg !7067
  call void @init_timer_on_stack_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @entropy_timer, i32 0, i8* null, %struct.lock_class_key* null) #13, !dbg !7067
  br label %while.cond, !dbg !7068

while.cond:                                       ; preds = %if.end13, %if.end
  %1 = load i32, i32* @crng_init, align 4, !dbg !7069
  %cmp3 = icmp sgt i32 %1, 1, !dbg !7069
  %lnot = xor i1 %cmp3, true, !dbg !7069
  %lnot4 = xor i1 %lnot, true, !dbg !7069
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !7069
  %conv = sext i32 %lnot.ext to i64, !dbg !7069
  %tobool = icmp ne i64 %conv, 0, !dbg !7070
  %lnot5 = xor i1 %tobool, true, !dbg !7070
  br i1 %lnot5, label %while.body, label %while.end, !dbg !7068

while.body:                                       ; preds = %while.cond
  %timer7 = getelementptr inbounds %struct.anon.106, %struct.anon.106* %stack, i32 0, i32 1, !dbg !7071
  %call8 = call i32 @timer_pending(%struct.timer_list* %timer7) #13, !dbg !7074
  %tobool9 = icmp ne i32 %call8, 0, !dbg !7074
  br i1 %tobool9, label %if.end13, label %if.then10, !dbg !7075

if.then10:                                        ; preds = %while.body
  %timer11 = getelementptr inbounds %struct.anon.106, %struct.anon.106* %stack, i32 0, i32 1, !dbg !7076
  %2 = load volatile i64, i64* @jiffies, align 8, !dbg !7077
  %add = add i64 %2, 1, !dbg !7078
  %call12 = call i32 @mod_timer(%struct.timer_list* %timer11, i64 %add) #13, !dbg !7079
  br label %if.end13, !dbg !7079

if.end13:                                         ; preds = %if.then10, %while.body
  %now14 = getelementptr inbounds %struct.anon.106, %struct.anon.106* %stack, i32 0, i32 0, !dbg !7080
  %3 = bitcast i64* %now14 to i8*, !dbg !7081
  call void @mix_pool_bytes(%struct.entropy_store* @input_pool, i8* %3, i32 8) #13, !dbg !7082
  call void @schedule() #13, !dbg !7083
  %call15 = call i64 @get_cycles() #13, !dbg !7084
  %now16 = getelementptr inbounds %struct.anon.106, %struct.anon.106* %stack, i32 0, i32 0, !dbg !7085
  store i64 %call15, i64* %now16, align 8, !dbg !7086
  br label %while.cond, !dbg !7068, !llvm.loop !7087

while.end:                                        ; preds = %while.cond
  %timer17 = getelementptr inbounds %struct.anon.106, %struct.anon.106* %stack, i32 0, i32 1, !dbg !7089
  %call18 = call i32 @del_timer(%struct.timer_list* %timer17) #13, !dbg !7089
  %timer19 = getelementptr inbounds %struct.anon.106, %struct.anon.106* %stack, i32 0, i32 1, !dbg !7090
  call void @destroy_timer_on_stack(%struct.timer_list* %timer19) #13, !dbg !7091
  %now20 = getelementptr inbounds %struct.anon.106, %struct.anon.106* %stack, i32 0, i32 0, !dbg !7092
  %4 = bitcast i64* %now20 to i8*, !dbg !7093
  call void @mix_pool_bytes(%struct.entropy_store* @input_pool, i8* %4, i32 8) #13, !dbg !7094
  br label %return, !dbg !7095

return:                                           ; preds = %while.end, %if.then
  ret void, !dbg !7095
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @rng_is_initialized() #1 !dbg !7096 {
entry:
  %0 = load i32, i32* @crng_init, align 4, !dbg !7097
  %cmp = icmp sgt i32 %0, 1, !dbg !7097
  %lnot = xor i1 %cmp, true, !dbg !7097
  %lnot1 = xor i1 %lnot, true, !dbg !7097
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7097
  %conv = sext i32 %lnot.ext to i64, !dbg !7097
  %tobool = icmp ne i64 %conv, 0, !dbg !7097
  ret i1 %tobool, !dbg !7098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @add_random_ready_callback(%struct.random_ready_callback* %rdy) #1 !dbg !7099 {
entry:
  %lock.addr.i36 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i36, metadata !5630, metadata !DIExpression()), !dbg !7102
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !7104
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5639, metadata !DIExpression()), !dbg !7105
  %retval = alloca i32, align 4
  %rdy.addr = alloca %struct.random_ready_callback*, align 8
  %owner = alloca %struct.module*, align 8
  %flags = alloca i64, align 8
  %err = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy11 = alloca i64, align 8
  %__dummy212 = alloca i64, align 8
  %tmp15 = alloca i32, align 4
  store %struct.random_ready_callback* %rdy, %struct.random_ready_callback** %rdy.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.random_ready_callback** %rdy.addr, metadata !7112, metadata !DIExpression()), !dbg !7113
  call void @llvm.dbg.declare(metadata %struct.module** %owner, metadata !7114, metadata !DIExpression()), !dbg !7115
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7116, metadata !DIExpression()), !dbg !7117
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7118, metadata !DIExpression()), !dbg !7119
  store i32 -114, i32* %err, align 4, !dbg !7119
  %0 = load i32, i32* @crng_init, align 4, !dbg !7120
  %cmp = icmp sgt i32 %0, 1, !dbg !7120
  %lnot = xor i1 %cmp, true, !dbg !7120
  %lnot1 = xor i1 %lnot, true, !dbg !7120
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7120
  %conv = sext i32 %lnot.ext to i64, !dbg !7120
  %tobool = icmp ne i64 %conv, 0, !dbg !7120
  br i1 %tobool, label %if.then, label %if.end, !dbg !7122

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %err, align 4, !dbg !7123
  store i32 %1, i32* %retval, align 4, !dbg !7124
  br label %return, !dbg !7124

if.end:                                           ; preds = %entry
  %2 = load %struct.random_ready_callback*, %struct.random_ready_callback** %rdy.addr, align 8, !dbg !7125
  %owner2 = getelementptr inbounds %struct.random_ready_callback, %struct.random_ready_callback* %2, i32 0, i32 2, !dbg !7126
  %3 = load %struct.module*, %struct.module** %owner2, align 8, !dbg !7126
  store %struct.module* %3, %struct.module** %owner, align 8, !dbg !7127
  %4 = load %struct.module*, %struct.module** %owner, align 8, !dbg !7128
  %call = call zeroext i1 @try_module_get(%struct.module* %4) #13, !dbg !7130
  br i1 %call, label %if.end4, label %if.then3, !dbg !7131

if.then3:                                         ; preds = %if.end
  store i32 -2, i32* %retval, align 4, !dbg !7132
  br label %return, !dbg !7132

if.end4:                                          ; preds = %if.end
  br label %do.body, !dbg !7133

do.body:                                          ; preds = %if.end4
  br label %do.body5, !dbg !7134

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7135, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7138, metadata !DIExpression()), !dbg !7137
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !7137
  %conv7 = zext i1 %cmp6 to i32, !dbg !7137
  store i32 1, i32* %tmp, align 4, !dbg !7137
  %5 = load i32, i32* %tmp, align 4, !dbg !7137
  br label %do.body8, !dbg !7139

do.body8:                                         ; preds = %do.body5
  br label %do.body9, !dbg !7140

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !7141

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy11, metadata !7143, metadata !DIExpression()), !dbg !7146
  call void @llvm.dbg.declare(metadata i64* %__dummy212, metadata !7147, metadata !DIExpression()), !dbg !7146
  %cmp13 = icmp eq i64* %__dummy11, %__dummy212, !dbg !7146
  %conv14 = zext i1 %cmp13 to i32, !dbg !7146
  store i32 1, i32* %tmp15, align 4, !dbg !7146
  %6 = load i32, i32* %tmp15, align 4, !dbg !7146
  %call16 = call i64 @arch_local_irq_save() #13, !dbg !7148
  store i64 %call16, i64* %flags, align 8, !dbg !7148
  br label %do.end, !dbg !7148

do.end:                                           ; preds = %do.body10
  br label %do.end17, !dbg !7141

do.end17:                                         ; preds = %do.end
  br label %do.body18, !dbg !7140

do.body18:                                        ; preds = %do.end17
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7149, !srcloc !7150
  br label %do.body19, !dbg !7149

do.body19:                                        ; preds = %do.body18
  store %struct.spinlock* @random_ready_list_lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7151
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !7152
  %rlock.i = bitcast %union.anon.0* %8 to %struct.raw_spinlock*, !dbg !7152
  br label %do.end21, !dbg !7153

do.end21:                                         ; preds = %do.body19
  br label %do.end22, !dbg !7149

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !7140

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !7139

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !7134

do.end25:                                         ; preds = %do.end24
  %9 = load i32, i32* @crng_init, align 4, !dbg !7154
  %cmp26 = icmp sgt i32 %9, 1, !dbg !7154
  %lnot28 = xor i1 %cmp26, true, !dbg !7154
  %lnot30 = xor i1 %lnot28, true, !dbg !7154
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !7154
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !7154
  %tobool33 = icmp ne i64 %conv32, 0, !dbg !7154
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !7156

if.then34:                                        ; preds = %do.end25
  br label %out, !dbg !7157

if.end35:                                         ; preds = %do.end25
  store %struct.module* null, %struct.module** %owner, align 8, !dbg !7158
  %10 = load %struct.random_ready_callback*, %struct.random_ready_callback** %rdy.addr, align 8, !dbg !7159
  %list = getelementptr inbounds %struct.random_ready_callback, %struct.random_ready_callback* %10, i32 0, i32 0, !dbg !7160
  call void @list_add(%struct.list_head* %list, %struct.list_head* @random_ready_list) #13, !dbg !7161
  store i32 0, i32* %err, align 4, !dbg !7162
  br label %out, !dbg !7163

out:                                              ; preds = %if.end35, %if.then34
  call void @llvm.dbg.label(metadata !7164), !dbg !7165
  %11 = load i64, i64* %flags, align 8, !dbg !7166
  store %struct.spinlock* @random_ready_list_lock, %struct.spinlock** %lock.addr.i36, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !7167
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !7167
  store i32 1, i32* %tmp.i, align 4, !dbg !7167
  %12 = load i32, i32* %tmp.i, align 4, !dbg !7167
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !7168
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !7168
  store i32 1, i32* %tmp8.i, align 4, !dbg !7168
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !7168
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !7169
  call void @arch_local_irq_restore(i64 %14) #14, !dbg !7169
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7170, !srcloc !5715
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i36, align 8, !dbg !7171
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !7171
  %rlock.i37 = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !7171
  %17 = load %struct.module*, %struct.module** %owner, align 8, !dbg !7172
  call void @module_put(%struct.module* %17) #13, !dbg !7173
  %18 = load i32, i32* %err, align 4, !dbg !7174
  store i32 %18, i32* %retval, align 4, !dbg !7175
  br label %return, !dbg !7175

return:                                           ; preds = %out, %if.then3, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !7176
  ret i32 %19, !dbg !7176
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_module_get(%struct.module* %module) #1 !dbg !7177 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !7181, metadata !DIExpression()), !dbg !7182
  ret i1 true, !dbg !7183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #1 !dbg !7184 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !7188, metadata !DIExpression()), !dbg !7189
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7190, metadata !DIExpression()), !dbg !7191
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !7192
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7193
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7194
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !7195
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7195
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #13, !dbg !7196
  ret void, !dbg !7197
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #1 !dbg !7198 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !7201, metadata !DIExpression()), !dbg !7202
  ret void, !dbg !7203
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @del_random_ready_callback(%struct.random_ready_callback* %rdy) #1 !dbg !7204 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5630, metadata !DIExpression()), !dbg !7205
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !7207
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5639, metadata !DIExpression()), !dbg !7208
  %rdy.addr = alloca %struct.random_ready_callback*, align 8
  %flags = alloca i64, align 8
  %owner = alloca %struct.module*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.random_ready_callback* %rdy, %struct.random_ready_callback** %rdy.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.random_ready_callback** %rdy.addr, metadata !7215, metadata !DIExpression()), !dbg !7216
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7217, metadata !DIExpression()), !dbg !7218
  call void @llvm.dbg.declare(metadata %struct.module** %owner, metadata !7219, metadata !DIExpression()), !dbg !7220
  store %struct.module* null, %struct.module** %owner, align 8, !dbg !7220
  br label %do.body, !dbg !7221

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7222

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7223, metadata !DIExpression()), !dbg !7225
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7226, metadata !DIExpression()), !dbg !7225
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7225
  %conv = zext i1 %cmp to i32, !dbg !7225
  store i32 1, i32* %tmp, align 4, !dbg !7225
  %0 = load i32, i32* %tmp, align 4, !dbg !7225
  br label %do.body2, !dbg !7227

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7228

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7229

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7231, metadata !DIExpression()), !dbg !7234
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7235, metadata !DIExpression()), !dbg !7234
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7234
  %conv8 = zext i1 %cmp7 to i32, !dbg !7234
  store i32 1, i32* %tmp9, align 4, !dbg !7234
  %1 = load i32, i32* %tmp9, align 4, !dbg !7234
  %call = call i64 @arch_local_irq_save() #13, !dbg !7236
  store i64 %call, i64* %flags, align 8, !dbg !7236
  br label %do.end, !dbg !7236

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7229

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7228

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7237, !srcloc !7238
  br label %do.body12, !dbg !7237

do.body12:                                        ; preds = %do.body11
  store %struct.spinlock* @random_ready_list_lock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7239
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !7240
  %rlock.i = bitcast %union.anon.0* %3 to %struct.raw_spinlock*, !dbg !7240
  br label %do.end14, !dbg !7241

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7237

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7228

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7227

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7222

do.end18:                                         ; preds = %do.end17
  %4 = load %struct.random_ready_callback*, %struct.random_ready_callback** %rdy.addr, align 8, !dbg !7242
  %list = getelementptr inbounds %struct.random_ready_callback, %struct.random_ready_callback* %4, i32 0, i32 0, !dbg !7244
  %call19 = call i32 @list_empty(%struct.list_head* %list) #13, !dbg !7245
  %tobool = icmp ne i32 %call19, 0, !dbg !7245
  br i1 %tobool, label %if.end, label %if.then, !dbg !7246

if.then:                                          ; preds = %do.end18
  %5 = load %struct.random_ready_callback*, %struct.random_ready_callback** %rdy.addr, align 8, !dbg !7247
  %list20 = getelementptr inbounds %struct.random_ready_callback, %struct.random_ready_callback* %5, i32 0, i32 0, !dbg !7249
  call void @list_del_init(%struct.list_head* %list20) #13, !dbg !7250
  %6 = load %struct.random_ready_callback*, %struct.random_ready_callback** %rdy.addr, align 8, !dbg !7251
  %owner21 = getelementptr inbounds %struct.random_ready_callback, %struct.random_ready_callback* %6, i32 0, i32 2, !dbg !7252
  %7 = load %struct.module*, %struct.module** %owner21, align 8, !dbg !7252
  store %struct.module* %7, %struct.module** %owner, align 8, !dbg !7253
  br label %if.end, !dbg !7254

if.end:                                           ; preds = %if.then, %do.end18
  %8 = load i64, i64* %flags, align 8, !dbg !7255
  store %struct.spinlock* @random_ready_list_lock, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %8, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !7256
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !7256
  store i32 1, i32* %tmp.i, align 4, !dbg !7256
  %9 = load i32, i32* %tmp.i, align 4, !dbg !7256
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !7257
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !7257
  store i32 1, i32* %tmp8.i, align 4, !dbg !7257
  %10 = load i32, i32* %tmp8.i, align 4, !dbg !7257
  %11 = load i64, i64* %flags.addr.i, align 8, !dbg !7258
  call void @arch_local_irq_restore(i64 %11) #14, !dbg !7258
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7259, !srcloc !5715
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !7260
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !7260
  %rlock.i23 = bitcast %union.anon.0* %13 to %struct.raw_spinlock*, !dbg !7260
  %14 = load %struct.module*, %struct.module** %owner, align 8, !dbg !7261
  call void @module_put(%struct.module* %14) #13, !dbg !7262
  ret void, !dbg !7263
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #1 !dbg !7264 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !7269, metadata !DIExpression()), !dbg !7270
  br label %do.body, !dbg !7271

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7273

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7271
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !7271
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7271
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !7273
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !7271
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !7275
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !7276
  %conv = zext i1 %cmp to i32, !dbg !7276
  ret i32 %conv, !dbg !7277
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #1 !dbg !7278 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7281, metadata !DIExpression()), !dbg !7282
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7283
  call void @__list_del_entry(%struct.list_head* %0) #13, !dbg !7284
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7285
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #13, !dbg !7286
  ret void, !dbg !7287
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @get_random_bytes_arch(i8* %buf, i32 %nbytes) #1 !dbg !7288 {
entry:
  %buf.addr = alloca i8*, align 8
  %nbytes.addr = alloca i32, align 4
  %left = alloca i32, align 4
  %p = alloca i8*, align 8
  %v = alloca i64, align 8
  %chunk = alloca i32, align 4
  %__UNIQUE_ID___x336 = alloca i32, align 4
  %__UNIQUE_ID___y337 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7291, metadata !DIExpression()), !dbg !7292
  store i32 %nbytes, i32* %nbytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbytes.addr, metadata !7293, metadata !DIExpression()), !dbg !7294
  call void @llvm.dbg.declare(metadata i32* %left, metadata !7295, metadata !DIExpression()), !dbg !7296
  %0 = load i32, i32* %nbytes.addr, align 4, !dbg !7297
  store i32 %0, i32* %left, align 4, !dbg !7296
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7298, metadata !DIExpression()), !dbg !7299
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !7300
  store i8* %1, i8** %p, align 8, !dbg !7299
  %2 = load i32, i32* %left, align 4, !dbg !7301
  %3 = call i8* @llvm.returnaddress(i32 0), !dbg !7302
  %4 = ptrtoint i8* %3 to i64, !dbg !7302
  call void @trace_get_random_bytes_arch(i32 %2, i64 %4) #13, !dbg !7303
  br label %while.cond, !dbg !7304

while.cond:                                       ; preds = %if.end, %entry
  %5 = load i32, i32* %left, align 4, !dbg !7305
  %tobool = icmp ne i32 %5, 0, !dbg !7304
  br i1 %tobool, label %while.body, label %while.end, !dbg !7304

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %v, metadata !7306, metadata !DIExpression()), !dbg !7308
  call void @llvm.dbg.declare(metadata i32* %chunk, metadata !7309, metadata !DIExpression()), !dbg !7310
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x336, metadata !7311, metadata !DIExpression()), !dbg !7313
  %6 = load i32, i32* %left, align 4, !dbg !7313
  store i32 %6, i32* %__UNIQUE_ID___x336, align 4, !dbg !7313
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y337, metadata !7314, metadata !DIExpression()), !dbg !7313
  store i32 8, i32* %__UNIQUE_ID___y337, align 4, !dbg !7313
  %7 = load i32, i32* %__UNIQUE_ID___x336, align 4, !dbg !7313
  %8 = load i32, i32* %__UNIQUE_ID___y337, align 4, !dbg !7313
  %cmp = icmp slt i32 %7, %8, !dbg !7313
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7313

cond.true:                                        ; preds = %while.body
  %9 = load i32, i32* %__UNIQUE_ID___x336, align 4, !dbg !7313
  br label %cond.end, !dbg !7313

cond.false:                                       ; preds = %while.body
  %10 = load i32, i32* %__UNIQUE_ID___y337, align 4, !dbg !7313
  br label %cond.end, !dbg !7313

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ %10, %cond.false ], !dbg !7313
  store i32 %cond, i32* %tmp, align 4, !dbg !7313
  %11 = load i32, i32* %tmp, align 4, !dbg !7313
  store i32 %11, i32* %chunk, align 4, !dbg !7310
  %call = call zeroext i1 @arch_get_random_long(i64* %v) #13, !dbg !7315
  br i1 %call, label %if.end, label %if.then, !dbg !7317

if.then:                                          ; preds = %cond.end
  br label %while.end, !dbg !7318

if.end:                                           ; preds = %cond.end
  %12 = load i8*, i8** %p, align 8, !dbg !7319
  %13 = bitcast i64* %v to i8*, !dbg !7320
  %14 = load i32, i32* %chunk, align 4, !dbg !7321
  %conv = sext i32 %14 to i64, !dbg !7321
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 8 %13, i64 %conv, i1 false), !dbg !7320
  %15 = load i32, i32* %chunk, align 4, !dbg !7322
  %16 = load i8*, i8** %p, align 8, !dbg !7323
  %idx.ext = sext i32 %15 to i64, !dbg !7323
  %add.ptr = getelementptr i8, i8* %16, i64 %idx.ext, !dbg !7323
  store i8* %add.ptr, i8** %p, align 8, !dbg !7323
  %17 = load i32, i32* %chunk, align 4, !dbg !7324
  %18 = load i32, i32* %left, align 4, !dbg !7325
  %sub = sub i32 %18, %17, !dbg !7325
  store i32 %sub, i32* %left, align 4, !dbg !7325
  br label %while.cond, !dbg !7304, !llvm.loop !7326

while.end:                                        ; preds = %if.then, %while.cond
  %19 = load i32, i32* %nbytes.addr, align 4, !dbg !7328
  %20 = load i32, i32* %left, align 4, !dbg !7329
  %sub1 = sub i32 %19, %20, !dbg !7330
  ret i32 %sub1, !dbg !7331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_get_random_bytes_arch(i32 %nbytes, i64 %IP) #1 !dbg !7332 {
entry:
  %nbytes.addr = alloca i32, align 4
  %IP.addr = alloca i64, align 8
  store i32 %nbytes, i32* %nbytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbytes.addr, metadata !7333, metadata !DIExpression()), !dbg !7334
  store i64 %IP, i64* %IP.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %IP.addr, metadata !7335, metadata !DIExpression()), !dbg !7334
  ret void, !dbg !7334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @arch_get_random_long(i64* %v) #1 !dbg !7336 {
entry:
  %retval.i = alloca i1, align 1
  %bit.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %bit.addr.i, metadata !6657, metadata !DIExpression()), !dbg !7337
  %v.addr = alloca i64*, align 8
  store i64* %v, i64** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %v.addr, metadata !7339, metadata !DIExpression()), !dbg !7340
  br i1 false, label %cond.true, label %cond.false2, !dbg !7341

cond.true:                                        ; preds = %entry
  br i1 false, label %cond.true1, label %cond.false, !dbg !7341

cond.true1:                                       ; preds = %cond.true
  br i1 true, label %cond.true4, label %cond.false6, !dbg !7341

cond.false:                                       ; preds = %cond.true
  %call = call zeroext i1 @test_bit(i64 158, i64* getelementptr inbounds (%struct.cpuinfo_x86, %struct.cpuinfo_x86* @boot_cpu_data, i32 0, i32 12, i32 0)) #13, !dbg !7341
  br i1 %call, label %cond.true4, label %cond.false6, !dbg !7341

cond.false2:                                      ; preds = %entry
  store i16 158, i16* %bit.addr.i, align 2
  %0 = load i16, i16* %bit.addr.i, align 2, !dbg !7342
  %1 = load i16, i16* %bit.addr.i, align 2, !dbg !7342
  %conv.i = zext i16 %1 to i32, !dbg !7342
  %and.i = and i32 %conv.i, 7, !dbg !7342
  %shl.i = shl i32 1, %and.i, !dbg !7342
  %2 = load i16, i16* %bit.addr.i, align 2, !dbg !7342
  %conv1.i = zext i16 %2 to i32, !dbg !7342
  %shr.i = ashr i32 %conv1.i, 3, !dbg !7342
  %idxprom.i = sext i32 %shr.i to i64, !dbg !7342
  %arrayidx.i = getelementptr i8, i8* bitcast (%union.anon.103* getelementptr inbounds (%struct.cpuinfo_x86, %struct.cpuinfo_x86* @boot_cpu_data, i32 0, i32 12) to i8*), i64 %idxprom.i, !dbg !7342
  callbr void asm sideeffect "1: jmp 6f\0A2:\0A.skip -(((5f-4f) - (2b-1b)) > 0) * ((5f-4f) - (2b-1b)),0x90\0A3:\0A.section .altinstructions,\22a\22\0A .long 1b - .\0A .long 4f - .\0A .word ${1:P}\0A .byte 3b - 1b\0A .byte 5f - 4f\0A .byte 3b - 2b\0A.previous\0A.section .altinstr_replacement,\22ax\22\0A4: jmp ${5:l}\0A5:\0A.previous\0A.section .altinstructions,\22a\22\0A .long 1b - .\0A .long 0\0A .word ${0:P}\0A .byte 3b - 1b\0A .byte 0\0A .byte 0\0A.previous\0A.section .altinstr_aux,\22ax\22\0A6:\0A testb $2,$3\0A jnz ${4:l}\0A jmp ${5:l}\0A.previous\0A", "i,i,i,*m,X,X,~{dirflag},~{fpsr},~{flags}"(i16 %0, i32 117, i32 %shl.i, i8* %arrayidx.i, i8* blockaddress(@arch_get_random_long, %t_yes.i), i8* blockaddress(@arch_get_random_long, %t_no.i)) #7
          to label %asm.fallthrough.i [label %t_yes.i, label %t_no.i], !dbg !7342, !srcloc !6668

asm.fallthrough.i:                                ; preds = %cond.false2
  br label %t_yes.i, !dbg !7342

t_yes.i:                                          ; preds = %asm.fallthrough.i, %cond.false2
  call void @llvm.dbg.label(metadata !6669), !dbg !7343
  store i1 true, i1* %retval.i, align 1, !dbg !7344
  br label %_static_cpu_has.exit, !dbg !7344

t_no.i:                                           ; preds = %cond.false2
  call void @llvm.dbg.label(metadata !6672), !dbg !7345
  store i1 false, i1* %retval.i, align 1, !dbg !7346
  br label %_static_cpu_has.exit, !dbg !7346

_static_cpu_has.exit:                             ; preds = %t_yes.i, %t_no.i
  %3 = load i1, i1* %retval.i, align 1, !dbg !7347
  br i1 %3, label %cond.true4, label %cond.false6, !dbg !7341

cond.true4:                                       ; preds = %_static_cpu_has.exit, %cond.false, %cond.true1
  %4 = load i64*, i64** %v.addr, align 8, !dbg !7348
  %call5 = call zeroext i1 @rdrand_long(i64* %4) #13, !dbg !7349
  %conv = zext i1 %call5 to i32, !dbg !7349
  br label %cond.end, !dbg !7341

cond.false6:                                      ; preds = %_static_cpu_has.exit, %cond.false, %cond.true1
  br label %cond.end, !dbg !7341

cond.end:                                         ; preds = %cond.false6, %cond.true4
  %cond = phi i32 [ %conv, %cond.true4 ], [ 0, %cond.false6 ], !dbg !7341
  %tobool = icmp ne i32 %cond, 0, !dbg !7341
  ret i1 %tobool, !dbg !7350
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local i32 @rand_initialize() #0 section ".init.text" !dbg !7351 {
entry:
  call void @init_std_data(%struct.entropy_store* @input_pool) #15, !dbg !7352
  call void @crng_initialize_primary(%struct.crng_state* @primary_crng) #15, !dbg !7353
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !7354
  store i64 %0, i64* @crng_global_init_time, align 8, !dbg !7355
  %1 = load i32, i32* @ratelimit_disable, align 4, !dbg !7356
  %tobool = icmp ne i32 %1, 0, !dbg !7356
  br i1 %tobool, label %if.then, label %if.end, !dbg !7358

if.then:                                          ; preds = %entry
  store i32 0, i32* getelementptr inbounds (%struct.ratelimit_state, %struct.ratelimit_state* @urandom_warning, i32 0, i32 1), align 8, !dbg !7359
  store i32 0, i32* getelementptr inbounds (%struct.ratelimit_state, %struct.ratelimit_state* @unseeded_warning, i32 0, i32 1), align 8, !dbg !7361
  br label %if.end, !dbg !7362

if.end:                                           ; preds = %if.then, %entry
  ret i32 0, !dbg !7363
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @init_std_data(%struct.entropy_store* %r) #0 section ".init.text" !dbg !7364 {
entry:
  %r.addr = alloca %struct.entropy_store*, align 8
  %i = alloca i32, align 4
  %now = alloca i64, align 8
  %rv = alloca i64, align 8
  store %struct.entropy_store* %r, %struct.entropy_store** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.entropy_store** %r.addr, metadata !7367, metadata !DIExpression()), !dbg !7368
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7369, metadata !DIExpression()), !dbg !7370
  call void @llvm.dbg.declare(metadata i64* %now, metadata !7371, metadata !DIExpression()), !dbg !7372
  %call = call i64 @ktime_get_real() #13, !dbg !7373
  store i64 %call, i64* %now, align 8, !dbg !7372
  call void @llvm.dbg.declare(metadata i64* %rv, metadata !7374, metadata !DIExpression()), !dbg !7375
  %0 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !7376
  %1 = bitcast i64* %now to i8*, !dbg !7377
  call void @mix_pool_bytes(%struct.entropy_store* %0, i8* %1, i32 8) #13, !dbg !7378
  %2 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !7379
  %poolinfo = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %2, i32 0, i32 0, !dbg !7381
  %3 = load %struct.poolinfo*, %struct.poolinfo** %poolinfo, align 8, !dbg !7381
  %poolbytes = getelementptr inbounds %struct.poolinfo, %struct.poolinfo* %3, i32 0, i32 2, !dbg !7382
  %4 = load i32, i32* %poolbytes, align 4, !dbg !7382
  store i32 %4, i32* %i, align 4, !dbg !7383
  br label %for.cond, !dbg !7384

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !7385
  %cmp = icmp sgt i32 %5, 0, !dbg !7387
  br i1 %cmp, label %for.body, label %for.end, !dbg !7388

for.body:                                         ; preds = %for.cond
  %call1 = call zeroext i1 @arch_get_random_seed_long(i64* %rv) #13, !dbg !7389
  br i1 %call1, label %if.end, label %land.lhs.true, !dbg !7392

land.lhs.true:                                    ; preds = %for.body
  %call2 = call zeroext i1 @arch_get_random_long(i64* %rv) #13, !dbg !7393
  br i1 %call2, label %if.end, label %if.then, !dbg !7394

if.then:                                          ; preds = %land.lhs.true
  %call3 = call i64 @get_cycles() #13, !dbg !7395
  store i64 %call3, i64* %rv, align 8, !dbg !7396
  br label %if.end, !dbg !7397

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %6 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !7398
  %7 = bitcast i64* %rv to i8*, !dbg !7399
  call void @mix_pool_bytes(%struct.entropy_store* %6, i8* %7, i32 8) #13, !dbg !7400
  br label %for.inc, !dbg !7401

for.inc:                                          ; preds = %if.end
  %8 = load i32, i32* %i, align 4, !dbg !7402
  %conv = sext i32 %8 to i64, !dbg !7402
  %sub = sub i64 %conv, 8, !dbg !7402
  %conv4 = trunc i64 %sub to i32, !dbg !7402
  store i32 %conv4, i32* %i, align 4, !dbg !7402
  br label %for.cond, !dbg !7403, !llvm.loop !7404

for.end:                                          ; preds = %for.cond
  %9 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !7406
  %call5 = call %struct.new_utsname* @utsname() #13, !dbg !7407
  %10 = bitcast %struct.new_utsname* %call5 to i8*, !dbg !7407
  call void @mix_pool_bytes(%struct.entropy_store* %9, i8* %10, i32 390) #13, !dbg !7408
  ret void, !dbg !7409
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @crng_initialize_primary(%struct.crng_state* %crng) #0 section ".init.text" !dbg !7410 {
entry:
  %crng.addr = alloca %struct.crng_state*, align 8
  store %struct.crng_state* %crng, %struct.crng_state** %crng.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.crng_state** %crng.addr, metadata !7414, metadata !DIExpression()), !dbg !7415
  %0 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !7416
  %state = getelementptr inbounds %struct.crng_state, %struct.crng_state* %0, i32 0, i32 0, !dbg !7417
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %state, i64 0, i64 0, !dbg !7416
  %1 = bitcast i32* %arrayidx to i8*, !dbg !7418
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i64 0, i64 0), i64 16, i1 false), !dbg !7418
  %2 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !7419
  %state1 = getelementptr inbounds %struct.crng_state, %struct.crng_state* %2, i32 0, i32 0, !dbg !7420
  %arrayidx2 = getelementptr [16 x i32], [16 x i32]* %state1, i64 0, i64 4, !dbg !7419
  %3 = bitcast i32* %arrayidx2 to i8*, !dbg !7421
  %call = call i64 @_extract_entropy(%struct.entropy_store* @input_pool, i8* %3, i64 48, i32 0) #13, !dbg !7422
  %4 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !7423
  %call3 = call zeroext i1 @crng_init_try_arch_early(%struct.crng_state* %4) #15, !dbg !7425
  br i1 %call3, label %land.lhs.true, label %if.end, !dbg !7426

land.lhs.true:                                    ; preds = %entry
  %5 = load i8, i8* @trust_cpu, align 1, !dbg !7427
  %tobool = trunc i8 %5 to i1, !dbg !7427
  br i1 %tobool, label %if.then, label %if.end, !dbg !7428

if.then:                                          ; preds = %land.lhs.true
  call void @invalidate_batched_entropy() #13, !dbg !7429
  call void @numa_crng_init() #13, !dbg !7431
  store i32 2, i32* @crng_init, align 4, !dbg !7432
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18, i64 0, i64 0)) #15, !dbg !7433
  br label %if.end, !dbg !7434

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load volatile i64, i64* @jiffies, align 8, !dbg !7435
  %sub = sub i64 %6, 75000, !dbg !7436
  %sub5 = sub i64 %sub, 1, !dbg !7437
  %7 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !7438
  %init_time = getelementptr inbounds %struct.crng_state, %struct.crng_state* %7, i32 0, i32 1, !dbg !7439
  store i64 %sub5, i64* %init_time, align 8, !dbg !7440
  ret void, !dbg !7441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @rand_initialize_disk(%struct.gendisk* %disk) #1 !dbg !7442 {
entry:
  %disk.addr = alloca %struct.gendisk*, align 8
  %state = alloca %struct.timer_rand_state*, align 8
  store %struct.gendisk* %disk, %struct.gendisk** %disk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.gendisk** %disk.addr, metadata !7443, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.declare(metadata %struct.timer_rand_state** %state, metadata !7445, metadata !DIExpression()), !dbg !7446
  %call = call i8* @kzalloc(i64 24, i32 3264) #13, !dbg !7447
  %0 = bitcast i8* %call to %struct.timer_rand_state*, !dbg !7447
  store %struct.timer_rand_state* %0, %struct.timer_rand_state** %state, align 8, !dbg !7448
  %1 = load %struct.timer_rand_state*, %struct.timer_rand_state** %state, align 8, !dbg !7449
  %tobool = icmp ne %struct.timer_rand_state* %1, null, !dbg !7449
  br i1 %tobool, label %if.then, label %if.end, !dbg !7451

if.then:                                          ; preds = %entry
  %2 = load %struct.timer_rand_state*, %struct.timer_rand_state** %state, align 8, !dbg !7452
  %last_time = getelementptr inbounds %struct.timer_rand_state, %struct.timer_rand_state* %2, i32 0, i32 0, !dbg !7454
  store i64 4294892296, i64* %last_time, align 8, !dbg !7455
  %3 = load %struct.timer_rand_state*, %struct.timer_rand_state** %state, align 8, !dbg !7456
  %4 = load %struct.gendisk*, %struct.gendisk** %disk.addr, align 8, !dbg !7457
  %random = getelementptr inbounds %struct.gendisk, %struct.gendisk* %4, i32 0, i32 15, !dbg !7458
  store %struct.timer_rand_state* %3, %struct.timer_rand_state** %random, align 8, !dbg !7459
  br label %if.end, !dbg !7460

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #1 !dbg !7462 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7465, metadata !DIExpression()), !dbg !7469
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7475, metadata !DIExpression()), !dbg !7476
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7477, metadata !DIExpression()), !dbg !7478
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7479, metadata !DIExpression()), !dbg !7480
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7481, metadata !DIExpression()), !dbg !7485
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7487, metadata !DIExpression()), !dbg !7491
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7493, metadata !DIExpression()), !dbg !7497
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7502, metadata !DIExpression()), !dbg !7503
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7504, metadata !DIExpression()), !dbg !7505
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7506, metadata !DIExpression()), !dbg !7507
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7508, metadata !DIExpression()), !dbg !7509
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7510, metadata !DIExpression()), !dbg !7511
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7512, metadata !DIExpression()), !dbg !7513
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7514, metadata !DIExpression()), !dbg !7515
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7516, metadata !DIExpression()), !dbg !7517
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7518, metadata !DIExpression()), !dbg !7519
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7520, metadata !DIExpression()), !dbg !7521
  %0 = load i64, i64* %size.addr, align 8, !dbg !7522
  %1 = load i32, i32* %flags.addr, align 4, !dbg !7523
  %or = or i32 %1, 256, !dbg !7524
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !7525
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !7526
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !7527

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7528
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !7529
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7530

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !7531
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !7532
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7533
  %call.i.i = call i32 @get_order(i64 %7) #16, !dbg !7534
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7511
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !7535
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7536
  %10 = load i32, i32* %order.i.i, align 4, !dbg !7537
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7538
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7539
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7540
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !7541
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7541
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7541
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7541
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !7541
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7542
  br label %kmalloc.exit, !dbg !7542

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !7543
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7544
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !7544
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7546

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7547
  br label %kmalloc_index.exit.i, !dbg !7547

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7548
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !7550
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7551

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7552
  br label %kmalloc_index.exit.i, !dbg !7552

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7553
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !7555
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7556

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7557
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !7558
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7559

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7560
  br label %kmalloc_index.exit.i, !dbg !7560

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7561
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !7563
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7564

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7565
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !7566
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7567

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7568
  br label %kmalloc_index.exit.i, !dbg !7568

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7569
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !7571
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7572

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7573
  br label %kmalloc_index.exit.i, !dbg !7573

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7574
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !7576
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7577

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7578
  br label %kmalloc_index.exit.i, !dbg !7578

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7579
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !7581
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7582

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7583
  br label %kmalloc_index.exit.i, !dbg !7583

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7584
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !7586
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7587

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7588
  br label %kmalloc_index.exit.i, !dbg !7588

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7589
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !7591
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7592

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7593
  br label %kmalloc_index.exit.i, !dbg !7593

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7594
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !7596
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7597

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7598
  br label %kmalloc_index.exit.i, !dbg !7598

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7599
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !7601
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7602

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7603
  br label %kmalloc_index.exit.i, !dbg !7603

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7604
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !7606
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7607

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7608
  br label %kmalloc_index.exit.i, !dbg !7608

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7609
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !7611
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7612

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7613
  br label %kmalloc_index.exit.i, !dbg !7613

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7614
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !7616
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7617

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7618
  br label %kmalloc_index.exit.i, !dbg !7618

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7619
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !7621
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7622

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7623
  br label %kmalloc_index.exit.i, !dbg !7623

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7624
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !7626
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7627

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7628
  br label %kmalloc_index.exit.i, !dbg !7628

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7629
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !7631
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7632

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7633
  br label %kmalloc_index.exit.i, !dbg !7633

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7634
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !7636
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7637

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7638
  br label %kmalloc_index.exit.i, !dbg !7638

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7639
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !7641
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7642

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7643
  br label %kmalloc_index.exit.i, !dbg !7643

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7644
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !7646
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7647

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7648
  br label %kmalloc_index.exit.i, !dbg !7648

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7649
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !7651
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7652

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7653
  br label %kmalloc_index.exit.i, !dbg !7653

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7654
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !7656
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7657

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7658
  br label %kmalloc_index.exit.i, !dbg !7658

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7659
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !7661
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7662

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7663
  br label %kmalloc_index.exit.i, !dbg !7663

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7664
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !7666
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7667

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7668
  br label %kmalloc_index.exit.i, !dbg !7668

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7669
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !7671
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7672

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7673
  br label %kmalloc_index.exit.i, !dbg !7673

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7674
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !7676
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7677

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7678
  br label %kmalloc_index.exit.i, !dbg !7678

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7679
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !7681
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7682

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7683
  br label %kmalloc_index.exit.i, !dbg !7683

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7684
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !7686
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7687

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7688
  br label %kmalloc_index.exit.i, !dbg !7688

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !7689, !srcloc !7692
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 159) #7, !dbg !7693, !srcloc !7696
  unreachable, !dbg !7697

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !7698
  store i32 %45, i32* %index.i, align 4, !dbg !7699
  %46 = load i32, i32* %index.i, align 4, !dbg !7700
  %tobool.i = icmp ne i32 %46, 0, !dbg !7700
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7702

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7703
  br label %kmalloc.exit, !dbg !7703

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !7704
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7705
  %and.i.i = and i32 %48, 17, !dbg !7705
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7705
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7705
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7705
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7705
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7707

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7708
  br label %kmalloc_type.exit.i, !dbg !7708

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7709
  %and2.i.i = and i32 %49, 1, !dbg !7710
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7709
  %50 = zext i1 %tobool3.i.i to i64, !dbg !7709
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7709
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7711
  br label %kmalloc_type.exit.i, !dbg !7711

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !7712
  %idxprom.i = zext i32 %51 to i64, !dbg !7713
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7713
  %52 = load i32, i32* %index.i, align 4, !dbg !7714
  %idxprom6.i = zext i32 %52 to i64, !dbg !7713
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7713
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7713
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !7715
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !7716
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7717
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7718
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !7719
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7719
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7719
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7719
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !7719
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7480
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7720
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !7721
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7722
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7723
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !7724
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7725
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !7726
  store i8* %62, i8** %retval.i, align 8, !dbg !7727
  br label %kmalloc.exit, !dbg !7727

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !7728
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !7729
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !7730
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7730
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7730
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7730
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !7730
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7731
  br label %kmalloc.exit, !dbg !7731

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !7732
  ret i8* %65, !dbg !7733
}

; Function Attrs: noredzone
declare dso_local i64 @noop_llseek(%struct.file*, i64, i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @random_read(%struct.file* %file, i8* %buf, i64 %nbytes, i64* %ppos) #1 !dbg !7734 {
entry:
  %retval = alloca i64, align 8
  %file.addr = alloca %struct.file*, align 8
  %buf.addr = alloca i8*, align 8
  %nbytes.addr = alloca i64, align 8
  %ppos.addr = alloca i64*, align 8
  %ret = alloca i32, align 4
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !7735, metadata !DIExpression()), !dbg !7736
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7737, metadata !DIExpression()), !dbg !7738
  store i64 %nbytes, i64* %nbytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !7739, metadata !DIExpression()), !dbg !7740
  store i64* %ppos, i64** %ppos.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %ppos.addr, metadata !7741, metadata !DIExpression()), !dbg !7742
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7743, metadata !DIExpression()), !dbg !7744
  %call = call i32 @wait_for_random_bytes() #13, !dbg !7745
  store i32 %call, i32* %ret, align 4, !dbg !7746
  %0 = load i32, i32* %ret, align 4, !dbg !7747
  %cmp = icmp ne i32 %0, 0, !dbg !7749
  br i1 %cmp, label %if.then, label %if.end, !dbg !7750

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ret, align 4, !dbg !7751
  %conv = sext i32 %1 to i64, !dbg !7751
  store i64 %conv, i64* %retval, align 8, !dbg !7752
  br label %return, !dbg !7752

if.end:                                           ; preds = %entry
  %2 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7753
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !7754
  %4 = load i64, i64* %nbytes.addr, align 8, !dbg !7755
  %5 = load i64*, i64** %ppos.addr, align 8, !dbg !7756
  %call1 = call i64 @urandom_read_nowarn(%struct.file* %2, i8* %3, i64 %4, i64* %5) #13, !dbg !7757
  store i64 %call1, i64* %retval, align 8, !dbg !7758
  br label %return, !dbg !7758

return:                                           ; preds = %if.end, %if.then
  %6 = load i64, i64* %retval, align 8, !dbg !7759
  ret i64 %6, !dbg !7759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @random_write(%struct.file* %file, i8* %buffer, i64 %count, i64* %ppos) #1 !dbg !7760 {
entry:
  %retval = alloca i64, align 8
  %file.addr = alloca %struct.file*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %ppos.addr = alloca i64*, align 8
  %ret = alloca i64, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !7761, metadata !DIExpression()), !dbg !7762
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !7763, metadata !DIExpression()), !dbg !7764
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !7765, metadata !DIExpression()), !dbg !7766
  store i64* %ppos, i64** %ppos.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %ppos.addr, metadata !7767, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !7769, metadata !DIExpression()), !dbg !7770
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !7771
  %1 = load i64, i64* %count.addr, align 8, !dbg !7772
  %call = call i32 @write_pool(%struct.entropy_store* @input_pool, i8* %0, i64 %1) #13, !dbg !7773
  %conv = sext i32 %call to i64, !dbg !7773
  store i64 %conv, i64* %ret, align 8, !dbg !7774
  %2 = load i64, i64* %ret, align 8, !dbg !7775
  %tobool = icmp ne i64 %2, 0, !dbg !7775
  br i1 %tobool, label %if.then, label %if.end, !dbg !7777

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %ret, align 8, !dbg !7778
  store i64 %3, i64* %retval, align 8, !dbg !7779
  br label %return, !dbg !7779

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %count.addr, align 8, !dbg !7780
  store i64 %4, i64* %retval, align 8, !dbg !7781
  br label %return, !dbg !7781

return:                                           ; preds = %if.end, %if.then
  %5 = load i64, i64* %retval, align 8, !dbg !7782
  ret i64 %5, !dbg !7782
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @random_poll(%struct.file* %file, %struct.poll_table_struct* %wait) #1 !dbg !7783 {
entry:
  %file.addr = alloca %struct.file*, align 8
  %wait.addr = alloca %struct.poll_table_struct*, align 8
  %mask = alloca i32, align 4
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !7788, metadata !DIExpression()), !dbg !7789
  store %struct.poll_table_struct* %wait, %struct.poll_table_struct** %wait.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %wait.addr, metadata !7790, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !7792, metadata !DIExpression()), !dbg !7793
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7794
  %1 = load %struct.poll_table_struct*, %struct.poll_table_struct** %wait.addr, align 8, !dbg !7795
  call void @poll_wait(%struct.file* %0, %struct.wait_queue_head* @crng_init_wait, %struct.poll_table_struct* %1) #13, !dbg !7796
  %2 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !7797
  %3 = load %struct.poll_table_struct*, %struct.poll_table_struct** %wait.addr, align 8, !dbg !7798
  call void @poll_wait(%struct.file* %2, %struct.wait_queue_head* @random_write_wait, %struct.poll_table_struct* %3) #13, !dbg !7799
  store i32 0, i32* %mask, align 4, !dbg !7800
  %4 = load i32, i32* @crng_init, align 4, !dbg !7801
  %cmp = icmp sgt i32 %4, 1, !dbg !7801
  %lnot = xor i1 %cmp, true, !dbg !7801
  %lnot1 = xor i1 %lnot, true, !dbg !7801
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7801
  %conv = sext i32 %lnot.ext to i64, !dbg !7801
  %tobool = icmp ne i64 %conv, 0, !dbg !7801
  br i1 %tobool, label %if.then, label %if.end, !dbg !7803

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %mask, align 4, !dbg !7804
  %or = or i32 %5, 65, !dbg !7804
  store i32 %or, i32* %mask, align 4, !dbg !7804
  br label %if.end, !dbg !7805

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* getelementptr inbounds (%struct.entropy_store, %struct.entropy_store* @input_pool, i32 0, i32 6), align 4, !dbg !7806
  %shr = ashr i32 %6, 3, !dbg !7806
  %7 = load i32, i32* @random_write_wakeup_bits, align 4, !dbg !7808
  %cmp2 = icmp slt i32 %shr, %7, !dbg !7809
  br i1 %cmp2, label %if.then4, label %if.end6, !dbg !7810

if.then4:                                         ; preds = %if.end
  %8 = load i32, i32* %mask, align 4, !dbg !7811
  %or5 = or i32 %8, 260, !dbg !7811
  store i32 %or5, i32* %mask, align 4, !dbg !7811
  br label %if.end6, !dbg !7812

if.end6:                                          ; preds = %if.then4, %if.end
  %9 = load i32, i32* %mask, align 4, !dbg !7813
  ret i32 %9, !dbg !7814
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @random_ioctl(%struct.file* %f, i32 %cmd, i64 %arg) #1 !dbg !7815 {
entry:
  %retval = alloca i64, align 8
  %f.addr = alloca %struct.file*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %size = alloca i32, align 4
  %ent_count = alloca i32, align 4
  %p = alloca i32*, align 8
  %retval1 = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp3 = alloca i64, align 8
  %tmp7 = alloca i64, align 8
  %__ret_gu = alloca i32, align 4
  %__val_gu = alloca i32, align 4
  %tmp11 = alloca i64, align 8
  %tmp22 = alloca i64, align 8
  %__ret_gu23 = alloca i32, align 4
  %__val_gu24 = alloca i32, align 4
  %tmp28 = alloca i64, align 8
  %tmp36 = alloca i64, align 8
  %__ret_gu37 = alloca i32, align 4
  %__val_gu38 = alloca i32, align 4
  %tmp43 = alloca i64, align 8
  store %struct.file* %f, %struct.file** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %f.addr, metadata !7816, metadata !DIExpression()), !dbg !7817
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !7818, metadata !DIExpression()), !dbg !7819
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !7820, metadata !DIExpression()), !dbg !7821
  call void @llvm.dbg.declare(metadata i32* %size, metadata !7822, metadata !DIExpression()), !dbg !7823
  call void @llvm.dbg.declare(metadata i32* %ent_count, metadata !7824, metadata !DIExpression()), !dbg !7825
  call void @llvm.dbg.declare(metadata i32** %p, metadata !7826, metadata !DIExpression()), !dbg !7827
  %0 = load i64, i64* %arg.addr, align 8, !dbg !7828
  %1 = inttoptr i64 %0 to i32*, !dbg !7829
  store i32* %1, i32** %p, align 8, !dbg !7827
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !7830, metadata !DIExpression()), !dbg !7831
  %2 = load i32, i32* %cmd.addr, align 4, !dbg !7832
  switch i32 %2, label %sw.default [
    i32 -2147200512, label %sw.bb
    i32 1074024961, label %sw.bb4
    i32 1074287107, label %sw.bb18
    i32 20996, label %sw.bb57
    i32 20998, label %sw.bb57
    i32 20999, label %sw.bb61
  ], !dbg !7833

sw.bb:                                            ; preds = %entry
  %3 = load i32, i32* getelementptr inbounds (%struct.entropy_store, %struct.entropy_store* @input_pool, i32 0, i32 6), align 4, !dbg !7834
  %shr = ashr i32 %3, 3, !dbg !7834
  store i32 %shr, i32* %ent_count, align 4, !dbg !7836
  call void @might_fault() #13, !dbg !7837
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !7840, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !7843, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !7844, metadata !DIExpression()), !dbg !7842
  %4 = load i32*, i32** %p, align 8, !dbg !7842
  %5 = bitcast i32* %4 to i8*, !dbg !7842
  store i8* %5, i8** %__ptr_pu, align 8, !dbg !7842
  %6 = load i32, i32* %ent_count, align 4, !dbg !7842
  store i32 %6, i32* %__val_pu, align 4, !dbg !7842
  %7 = call i64 @llvm.read_register.i64(metadata !5615), !dbg !7842
  %8 = load i8*, i8** %__ptr_pu, align 8, !dbg !7842
  %9 = load i32, i32* %__val_pu, align 4, !dbg !7842
  %10 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %8, i32 %9, i64 4, i64 %7) #7, !dbg !7842, !srcloc !7845
  %asmresult = extractvalue { i8*, i64 } %10, 0, !dbg !7842
  %asmresult2 = extractvalue { i8*, i64 } %10, 1, !dbg !7842
  %11 = ptrtoint i8* %asmresult to i64, !dbg !7842
  %12 = trunc i64 %11 to i32, !dbg !7842
  store i32 %12, i32* %__ret_pu, align 4, !dbg !7842
  call void @llvm.write_register.i64(metadata !5615, i64 %asmresult2), !dbg !7842
  %13 = load i32, i32* %__ret_pu, align 4, !dbg !7842
  %conv = sext i32 %13 to i64, !dbg !7842
  store i64 %conv, i64* %tmp3, align 8, !dbg !7842
  %14 = load i64, i64* %tmp3, align 8, !dbg !7842
  store i64 %14, i64* %tmp, align 8, !dbg !7837
  %15 = load i64, i64* %tmp, align 8, !dbg !7837
  %tobool = icmp ne i64 %15, 0, !dbg !7846
  br i1 %tobool, label %if.then, label %if.end, !dbg !7847

if.then:                                          ; preds = %sw.bb
  store i64 -14, i64* %retval, align 8, !dbg !7848
  br label %return, !dbg !7848

if.end:                                           ; preds = %sw.bb
  store i64 0, i64* %retval, align 8, !dbg !7849
  br label %return, !dbg !7849

sw.bb4:                                           ; preds = %entry
  %call = call zeroext i1 @capable(i32 21) #13, !dbg !7850
  br i1 %call, label %if.end6, label %if.then5, !dbg !7852

if.then5:                                         ; preds = %sw.bb4
  store i64 -1, i64* %retval, align 8, !dbg !7853
  br label %return, !dbg !7853

if.end6:                                          ; preds = %sw.bb4
  call void @might_fault() #13, !dbg !7854
  call void @llvm.dbg.declare(metadata i32* %__ret_gu, metadata !7857, metadata !DIExpression()), !dbg !7859
  call void @llvm.dbg.declare(metadata i32* %__val_gu, metadata !7860, metadata !DIExpression()), !dbg !7859
  %16 = call i64 @llvm.read_register.i64(metadata !5615), !dbg !7859
  %17 = load i32*, i32** %p, align 8, !dbg !7859
  %18 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %17, i64 4, i64 %16) #7, !dbg !7859, !srcloc !7861
  %asmresult8 = extractvalue { i32*, i32, i64 } %18, 0, !dbg !7859
  %asmresult9 = extractvalue { i32*, i32, i64 } %18, 1, !dbg !7859
  %asmresult10 = extractvalue { i32*, i32, i64 } %18, 2, !dbg !7859
  %19 = ptrtoint i32* %asmresult8 to i64, !dbg !7859
  %20 = trunc i64 %19 to i32, !dbg !7859
  store i32 %20, i32* %__ret_gu, align 4, !dbg !7859
  store i32 %asmresult9, i32* %__val_gu, align 4, !dbg !7859
  call void @llvm.write_register.i64(metadata !5615, i64 %asmresult10), !dbg !7859
  %21 = load i32, i32* %__val_gu, align 4, !dbg !7859
  store i32 %21, i32* %ent_count, align 4, !dbg !7859
  %22 = load i32, i32* %__ret_gu, align 4, !dbg !7859
  %conv12 = sext i32 %22 to i64, !dbg !7859
  store i64 %conv12, i64* %tmp11, align 8, !dbg !7859
  %23 = load i64, i64* %tmp11, align 8, !dbg !7859
  store i64 %23, i64* %tmp7, align 8, !dbg !7854
  %24 = load i64, i64* %tmp7, align 8, !dbg !7854
  %tobool13 = icmp ne i64 %24, 0, !dbg !7862
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !7863

if.then14:                                        ; preds = %if.end6
  store i64 -14, i64* %retval, align 8, !dbg !7864
  br label %return, !dbg !7864

if.end15:                                         ; preds = %if.end6
  %25 = load i32, i32* %ent_count, align 4, !dbg !7865
  %call16 = call i32 @credit_entropy_bits_safe(%struct.entropy_store* @input_pool, i32 %25) #13, !dbg !7866
  %conv17 = sext i32 %call16 to i64, !dbg !7866
  store i64 %conv17, i64* %retval, align 8, !dbg !7867
  br label %return, !dbg !7867

sw.bb18:                                          ; preds = %entry
  %call19 = call zeroext i1 @capable(i32 21) #13, !dbg !7868
  br i1 %call19, label %if.end21, label %if.then20, !dbg !7870

if.then20:                                        ; preds = %sw.bb18
  store i64 -1, i64* %retval, align 8, !dbg !7871
  br label %return, !dbg !7871

if.end21:                                         ; preds = %sw.bb18
  call void @might_fault() #13, !dbg !7872
  call void @llvm.dbg.declare(metadata i32* %__ret_gu23, metadata !7875, metadata !DIExpression()), !dbg !7877
  call void @llvm.dbg.declare(metadata i32* %__val_gu24, metadata !7878, metadata !DIExpression()), !dbg !7877
  %26 = call i64 @llvm.read_register.i64(metadata !5615), !dbg !7877
  %27 = load i32*, i32** %p, align 8, !dbg !7877
  %incdec.ptr = getelementptr i32, i32* %27, i32 1, !dbg !7877
  store i32* %incdec.ptr, i32** %p, align 8, !dbg !7877
  %28 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %27, i64 4, i64 %26) #7, !dbg !7877, !srcloc !7879
  %asmresult25 = extractvalue { i32*, i32, i64 } %28, 0, !dbg !7877
  %asmresult26 = extractvalue { i32*, i32, i64 } %28, 1, !dbg !7877
  %asmresult27 = extractvalue { i32*, i32, i64 } %28, 2, !dbg !7877
  %29 = ptrtoint i32* %asmresult25 to i64, !dbg !7877
  %30 = trunc i64 %29 to i32, !dbg !7877
  store i32 %30, i32* %__ret_gu23, align 4, !dbg !7877
  store i32 %asmresult26, i32* %__val_gu24, align 4, !dbg !7877
  call void @llvm.write_register.i64(metadata !5615, i64 %asmresult27), !dbg !7877
  %31 = load i32, i32* %__val_gu24, align 4, !dbg !7877
  store i32 %31, i32* %ent_count, align 4, !dbg !7877
  %32 = load i32, i32* %__ret_gu23, align 4, !dbg !7877
  %conv29 = sext i32 %32 to i64, !dbg !7877
  store i64 %conv29, i64* %tmp28, align 8, !dbg !7877
  %33 = load i64, i64* %tmp28, align 8, !dbg !7877
  store i64 %33, i64* %tmp22, align 8, !dbg !7872
  %34 = load i64, i64* %tmp22, align 8, !dbg !7872
  %tobool30 = icmp ne i64 %34, 0, !dbg !7880
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !7881

if.then31:                                        ; preds = %if.end21
  store i64 -14, i64* %retval, align 8, !dbg !7882
  br label %return, !dbg !7882

if.end32:                                         ; preds = %if.end21
  %35 = load i32, i32* %ent_count, align 4, !dbg !7883
  %cmp = icmp slt i32 %35, 0, !dbg !7885
  br i1 %cmp, label %if.then34, label %if.end35, !dbg !7886

if.then34:                                        ; preds = %if.end32
  store i64 -22, i64* %retval, align 8, !dbg !7887
  br label %return, !dbg !7887

if.end35:                                         ; preds = %if.end32
  call void @might_fault() #13, !dbg !7888
  call void @llvm.dbg.declare(metadata i32* %__ret_gu37, metadata !7891, metadata !DIExpression()), !dbg !7893
  call void @llvm.dbg.declare(metadata i32* %__val_gu38, metadata !7894, metadata !DIExpression()), !dbg !7893
  %36 = call i64 @llvm.read_register.i64(metadata !5615), !dbg !7893
  %37 = load i32*, i32** %p, align 8, !dbg !7893
  %incdec.ptr39 = getelementptr i32, i32* %37, i32 1, !dbg !7893
  store i32* %incdec.ptr39, i32** %p, align 8, !dbg !7893
  %38 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %37, i64 4, i64 %36) #7, !dbg !7893, !srcloc !7895
  %asmresult40 = extractvalue { i32*, i32, i64 } %38, 0, !dbg !7893
  %asmresult41 = extractvalue { i32*, i32, i64 } %38, 1, !dbg !7893
  %asmresult42 = extractvalue { i32*, i32, i64 } %38, 2, !dbg !7893
  %39 = ptrtoint i32* %asmresult40 to i64, !dbg !7893
  %40 = trunc i64 %39 to i32, !dbg !7893
  store i32 %40, i32* %__ret_gu37, align 4, !dbg !7893
  store i32 %asmresult41, i32* %__val_gu38, align 4, !dbg !7893
  call void @llvm.write_register.i64(metadata !5615, i64 %asmresult42), !dbg !7893
  %41 = load i32, i32* %__val_gu38, align 4, !dbg !7893
  store i32 %41, i32* %size, align 4, !dbg !7893
  %42 = load i32, i32* %__ret_gu37, align 4, !dbg !7893
  %conv44 = sext i32 %42 to i64, !dbg !7893
  store i64 %conv44, i64* %tmp43, align 8, !dbg !7893
  %43 = load i64, i64* %tmp43, align 8, !dbg !7893
  store i64 %43, i64* %tmp36, align 8, !dbg !7888
  %44 = load i64, i64* %tmp36, align 8, !dbg !7888
  %tobool45 = icmp ne i64 %44, 0, !dbg !7896
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !7897

if.then46:                                        ; preds = %if.end35
  store i64 -14, i64* %retval, align 8, !dbg !7898
  br label %return, !dbg !7898

if.end47:                                         ; preds = %if.end35
  %45 = load i32*, i32** %p, align 8, !dbg !7899
  %46 = bitcast i32* %45 to i8*, !dbg !7900
  %47 = load i32, i32* %size, align 4, !dbg !7901
  %conv48 = sext i32 %47 to i64, !dbg !7901
  %call49 = call i32 @write_pool(%struct.entropy_store* @input_pool, i8* %46, i64 %conv48) #13, !dbg !7902
  store i32 %call49, i32* %retval1, align 4, !dbg !7903
  %48 = load i32, i32* %retval1, align 4, !dbg !7904
  %cmp50 = icmp slt i32 %48, 0, !dbg !7906
  br i1 %cmp50, label %if.then52, label %if.end54, !dbg !7907

if.then52:                                        ; preds = %if.end47
  %49 = load i32, i32* %retval1, align 4, !dbg !7908
  %conv53 = sext i32 %49 to i64, !dbg !7908
  store i64 %conv53, i64* %retval, align 8, !dbg !7909
  br label %return, !dbg !7909

if.end54:                                         ; preds = %if.end47
  %50 = load i32, i32* %ent_count, align 4, !dbg !7910
  %call55 = call i32 @credit_entropy_bits_safe(%struct.entropy_store* @input_pool, i32 %50) #13, !dbg !7911
  %conv56 = sext i32 %call55 to i64, !dbg !7911
  store i64 %conv56, i64* %retval, align 8, !dbg !7912
  br label %return, !dbg !7912

sw.bb57:                                          ; preds = %entry, %entry
  %call58 = call zeroext i1 @capable(i32 21) #13, !dbg !7913
  br i1 %call58, label %if.end60, label %if.then59, !dbg !7915

if.then59:                                        ; preds = %sw.bb57
  store i64 -1, i64* %retval, align 8, !dbg !7916
  br label %return, !dbg !7916

if.end60:                                         ; preds = %sw.bb57
  store i32 0, i32* getelementptr inbounds (%struct.entropy_store, %struct.entropy_store* @input_pool, i32 0, i32 6), align 4, !dbg !7917
  store i64 0, i64* %retval, align 8, !dbg !7918
  br label %return, !dbg !7918

sw.bb61:                                          ; preds = %entry
  %call62 = call zeroext i1 @capable(i32 21) #13, !dbg !7919
  br i1 %call62, label %if.end64, label %if.then63, !dbg !7921

if.then63:                                        ; preds = %sw.bb61
  store i64 -1, i64* %retval, align 8, !dbg !7922
  br label %return, !dbg !7922

if.end64:                                         ; preds = %sw.bb61
  %51 = load i32, i32* @crng_init, align 4, !dbg !7923
  %cmp65 = icmp slt i32 %51, 2, !dbg !7925
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !7926

if.then67:                                        ; preds = %if.end64
  store i64 -61, i64* %retval, align 8, !dbg !7927
  br label %return, !dbg !7927

if.end68:                                         ; preds = %if.end64
  call void @crng_reseed(%struct.crng_state* @primary_crng, %struct.entropy_store* null) #13, !dbg !7928
  %52 = load volatile i64, i64* @jiffies, align 8, !dbg !7929
  %sub = sub i64 %52, 1, !dbg !7930
  store i64 %sub, i64* @crng_global_init_time, align 8, !dbg !7931
  store i64 0, i64* %retval, align 8, !dbg !7932
  br label %return, !dbg !7932

sw.default:                                       ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !7933
  br label %return, !dbg !7933

return:                                           ; preds = %sw.default, %if.end68, %if.then67, %if.then63, %if.end60, %if.then59, %if.end54, %if.then52, %if.then46, %if.then34, %if.then31, %if.then20, %if.end15, %if.then14, %if.then5, %if.end, %if.then
  %53 = load i64, i64* %retval, align 8, !dbg !7934
  ret i64 %53, !dbg !7934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @random_fasync(i32 %fd, %struct.file* %filp, i32 %on) #1 !dbg !7935 {
entry:
  %fd.addr = alloca i32, align 4
  %filp.addr = alloca %struct.file*, align 8
  %on.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !7936, metadata !DIExpression()), !dbg !7937
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !7938, metadata !DIExpression()), !dbg !7939
  store i32 %on, i32* %on.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %on.addr, metadata !7940, metadata !DIExpression()), !dbg !7941
  %0 = load i32, i32* %fd.addr, align 4, !dbg !7942
  %1 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !7943
  %2 = load i32, i32* %on.addr, align 4, !dbg !7944
  %call = call i32 @fasync_helper(i32 %0, %struct.file* %1, i32 %2, %struct.fasync_struct** @fasync) #13, !dbg !7945
  ret i32 %call, !dbg !7946
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @urandom_read(%struct.file* %file, i8* %buf, i64 %nbytes, i64* %ppos) #1 !dbg !5594 {
entry:
  %lock.addr.i31 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i31, metadata !5630, metadata !DIExpression()), !dbg !7947
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !7951
  %tmp.i32 = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5639, metadata !DIExpression()), !dbg !7952
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !7959, metadata !DIExpression()), !dbg !7965
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !7968, metadata !DIExpression()), !dbg !7970
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !7971, metadata !DIExpression()), !dbg !7973
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %file.addr = alloca %struct.file*, align 8
  %buf.addr = alloca i8*, align 8
  %nbytes.addr = alloca i64, align 8
  %ppos.addr = alloca i64*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy14 = alloca i64, align 8
  %__dummy215 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !7974, metadata !DIExpression()), !dbg !7975
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7976, metadata !DIExpression()), !dbg !7977
  store i64 %nbytes, i64* %nbytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !7978, metadata !DIExpression()), !dbg !7979
  store i64* %ppos, i64** %ppos.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %ppos.addr, metadata !7980, metadata !DIExpression()), !dbg !7981
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7982, metadata !DIExpression()), !dbg !7983
  %0 = load i32, i32* @crng_init, align 4, !dbg !7984
  %cmp = icmp sgt i32 %0, 1, !dbg !7984
  %lnot = xor i1 %cmp, true, !dbg !7984
  %lnot1 = xor i1 %lnot, true, !dbg !7984
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7984
  %conv = sext i32 %lnot.ext to i64, !dbg !7984
  %tobool = icmp ne i64 %conv, 0, !dbg !7984
  br i1 %tobool, label %if.end29, label %land.lhs.true, !dbg !7985

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @urandom_read.maxwarn, align 4, !dbg !7986
  %cmp2 = icmp sgt i32 %1, 0, !dbg !7987
  br i1 %cmp2, label %if.then, label %if.end29, !dbg !7988

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* @urandom_read.maxwarn, align 4, !dbg !7989
  %dec = add i32 %2, -1, !dbg !7989
  store i32 %dec, i32* @urandom_read.maxwarn, align 4, !dbg !7989
  %call = call i32 @___ratelimit(%struct.ratelimit_state* @urandom_warning, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.urandom_read, i64 0, i64 0)) #13, !dbg !7990
  %tobool4 = icmp ne i32 %call, 0, !dbg !7990
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !7991

if.then5:                                         ; preds = %if.then
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !7970
  %3 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !7970
  %4 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !dbg !7973, !srcloc !7992
  store i64 %4, i64* %pfo_val__.i, align 8, !dbg !7973
  %5 = load i64, i64* %pfo_val__.i, align 8, !dbg !7973
  %6 = inttoptr i64 %5 to %struct.task_struct*, !dbg !7973
  store %struct.task_struct* %6, %struct.task_struct** %tmp.i, align 8, !dbg !7973
  %7 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !7973
  store %struct.task_struct* %7, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !7965
  %8 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !7965
  store %struct.task_struct* %8, %struct.task_struct** %tmp1.i, align 8, !dbg !7965
  %9 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !7965
  %comm = getelementptr inbounds %struct.task_struct, %struct.task_struct* %9, i32 0, i32 68, !dbg !7993
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %comm, i64 0, i64 0, !dbg !7993
  %10 = load i64, i64* %nbytes.addr, align 8, !dbg !7993
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.23, i64 0, i64 0), i8* %arraydecay, i64 %10) #15, !dbg !7993
  br label %if.end, !dbg !7993

if.end:                                           ; preds = %if.then5, %if.then
  br label %do.body, !dbg !7994

do.body:                                          ; preds = %if.end
  br label %do.body8, !dbg !7995

do.body8:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7996, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7999, metadata !DIExpression()), !dbg !7998
  %cmp9 = icmp eq i64* %__dummy, %__dummy2, !dbg !7998
  %conv10 = zext i1 %cmp9 to i32, !dbg !7998
  store i32 1, i32* %tmp, align 4, !dbg !7998
  %11 = load i32, i32* %tmp, align 4, !dbg !7998
  br label %do.body11, !dbg !8000

do.body11:                                        ; preds = %do.body8
  br label %do.body12, !dbg !8001

do.body12:                                        ; preds = %do.body11
  br label %do.body13, !dbg !8002

do.body13:                                        ; preds = %do.body12
  call void @llvm.dbg.declare(metadata i64* %__dummy14, metadata !8004, metadata !DIExpression()), !dbg !8007
  call void @llvm.dbg.declare(metadata i64* %__dummy215, metadata !8008, metadata !DIExpression()), !dbg !8007
  %cmp16 = icmp eq i64* %__dummy14, %__dummy215, !dbg !8007
  %conv17 = zext i1 %cmp16 to i32, !dbg !8007
  store i32 1, i32* %tmp18, align 4, !dbg !8007
  %12 = load i32, i32* %tmp18, align 4, !dbg !8007
  %call19 = call i64 @arch_local_irq_save() #13, !dbg !8009
  store i64 %call19, i64* %flags, align 8, !dbg !8009
  br label %do.end, !dbg !8009

do.end:                                           ; preds = %do.body13
  br label %do.end20, !dbg !8002

do.end20:                                         ; preds = %do.end
  br label %do.body21, !dbg !8001

do.body21:                                        ; preds = %do.end20
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8010, !srcloc !8011
  br label %do.body22, !dbg !8010

do.body22:                                        ; preds = %do.body21
  store %struct.spinlock* getelementptr inbounds (%struct.crng_state, %struct.crng_state* @primary_crng, i32 0, i32 2), %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8012
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !8013
  %rlock.i = bitcast %union.anon.0* %14 to %struct.raw_spinlock*, !dbg !8013
  br label %do.end24, !dbg !8014

do.end24:                                         ; preds = %do.body22
  br label %do.end25, !dbg !8010

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !8001

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !8000

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !7995

do.end28:                                         ; preds = %do.end27
  store i32 0, i32* @crng_init_cnt, align 4, !dbg !8015
  %15 = load i64, i64* %flags, align 8, !dbg !8016
  store %struct.spinlock* getelementptr inbounds (%struct.crng_state, %struct.crng_state* @primary_crng, i32 0, i32 2), %struct.spinlock** %lock.addr.i31, align 8
  store i64 %15, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !8017
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !8017
  store i32 1, i32* %tmp.i32, align 4, !dbg !8017
  %16 = load i32, i32* %tmp.i32, align 4, !dbg !8017
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !8018
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !8018
  store i32 1, i32* %tmp8.i, align 4, !dbg !8018
  %17 = load i32, i32* %tmp8.i, align 4, !dbg !8018
  %18 = load i64, i64* %flags.addr.i, align 8, !dbg !8019
  call void @arch_local_irq_restore(i64 %18) #14, !dbg !8019
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8020, !srcloc !5715
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i31, align 8, !dbg !8021
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !8021
  %rlock.i33 = bitcast %union.anon.0* %20 to %struct.raw_spinlock*, !dbg !8021
  br label %if.end29, !dbg !8022

if.end29:                                         ; preds = %do.end28, %land.lhs.true, %entry
  %21 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8023
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !8024
  %23 = load i64, i64* %nbytes.addr, align 8, !dbg !8025
  %24 = load i64*, i64** %ppos.addr, align 8, !dbg !8026
  %call30 = call i64 @urandom_read_nowarn(%struct.file* %21, i8* %22, i64 %23, i64* %24) #13, !dbg !8027
  ret i64 %call30, !dbg !8028
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @__x64_sys_getrandom(%struct.pt_regs* %regs) #1 !dbg !8029 {
entry:
  %regs.addr = alloca %struct.pt_regs*, align 8
  store %struct.pt_regs* %regs, %struct.pt_regs** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pt_regs** %regs.addr, metadata !8034, metadata !DIExpression()), !dbg !8035
  %0 = load %struct.pt_regs*, %struct.pt_regs** %regs.addr, align 8, !dbg !8035
  %di = getelementptr inbounds %struct.pt_regs, %struct.pt_regs* %0, i32 0, i32 14, !dbg !8035
  %1 = load i64, i64* %di, align 8, !dbg !8035
  %2 = load %struct.pt_regs*, %struct.pt_regs** %regs.addr, align 8, !dbg !8035
  %si = getelementptr inbounds %struct.pt_regs, %struct.pt_regs* %2, i32 0, i32 13, !dbg !8035
  %3 = load i64, i64* %si, align 8, !dbg !8035
  %4 = load %struct.pt_regs*, %struct.pt_regs** %regs.addr, align 8, !dbg !8035
  %dx = getelementptr inbounds %struct.pt_regs, %struct.pt_regs* %4, i32 0, i32 12, !dbg !8035
  %5 = load i64, i64* %dx, align 8, !dbg !8035
  %call = call i64 @__se_sys_getrandom(i64 %1, i64 %3, i64 %5) #13, !dbg !8035
  ret i64 %call, !dbg !8035
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__se_sys_getrandom(i64 %buf, i64 %count, i64 %flags) #1 !dbg !8036 {
entry:
  %buf.addr = alloca i64, align 8
  %count.addr = alloca i64, align 8
  %flags.addr = alloca i64, align 8
  %ret = alloca i64, align 8
  store i64 %buf, i64* %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf.addr, metadata !8039, metadata !DIExpression()), !dbg !8040
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !8041, metadata !DIExpression()), !dbg !8040
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !8042, metadata !DIExpression()), !dbg !8040
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !8043, metadata !DIExpression()), !dbg !8040
  %0 = load i64, i64* %buf.addr, align 8, !dbg !8040
  %1 = inttoptr i64 %0 to i8*, !dbg !8040
  %2 = load i64, i64* %count.addr, align 8, !dbg !8040
  %3 = load i64, i64* %flags.addr, align 8, !dbg !8040
  %conv = trunc i64 %3 to i32, !dbg !8040
  %call = call i64 @__do_sys_getrandom(i8* %1, i64 %2, i32 %conv) #13, !dbg !8040
  store i64 %call, i64* %ret, align 8, !dbg !8040
  br label %do.body, !dbg !8040

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8044

do.end:                                           ; preds = %do.body
  %4 = load i64, i64* %ret, align 8, !dbg !8040
  ret i64 %4, !dbg !8040
}

; Function Attrs: noredzone
declare dso_local i32 @proc_dointvec(%struct.ctl_table*, i32, i8*, i64*, i64*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_do_entropy(%struct.ctl_table* %table, i32 %write, i8* %buffer, i64* %lenp, i64* %ppos) #1 !dbg !8046 {
entry:
  %table.addr = alloca %struct.ctl_table*, align 8
  %write.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %lenp.addr = alloca i64*, align 8
  %ppos.addr = alloca i64*, align 8
  %fake_table = alloca %struct.ctl_table, align 8
  %entropy_count = alloca i32, align 4
  store %struct.ctl_table* %table, %struct.ctl_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ctl_table** %table.addr, metadata !8047, metadata !DIExpression()), !dbg !8048
  store i32 %write, i32* %write.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %write.addr, metadata !8049, metadata !DIExpression()), !dbg !8050
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !8051, metadata !DIExpression()), !dbg !8052
  store i64* %lenp, i64** %lenp.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %lenp.addr, metadata !8053, metadata !DIExpression()), !dbg !8054
  store i64* %ppos, i64** %ppos.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %ppos.addr, metadata !8055, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.declare(metadata %struct.ctl_table* %fake_table, metadata !8057, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.declare(metadata i32* %entropy_count, metadata !8059, metadata !DIExpression()), !dbg !8060
  %0 = load %struct.ctl_table*, %struct.ctl_table** %table.addr, align 8, !dbg !8061
  %data = getelementptr inbounds %struct.ctl_table, %struct.ctl_table* %0, i32 0, i32 1, !dbg !8062
  %1 = load i8*, i8** %data, align 8, !dbg !8062
  %2 = bitcast i8* %1 to i32*, !dbg !8063
  %3 = load i32, i32* %2, align 4, !dbg !8064
  %shr = ashr i32 %3, 3, !dbg !8065
  store i32 %shr, i32* %entropy_count, align 4, !dbg !8066
  %4 = bitcast i32* %entropy_count to i8*, !dbg !8067
  %data1 = getelementptr inbounds %struct.ctl_table, %struct.ctl_table* %fake_table, i32 0, i32 1, !dbg !8068
  store i8* %4, i8** %data1, align 8, !dbg !8069
  %maxlen = getelementptr inbounds %struct.ctl_table, %struct.ctl_table* %fake_table, i32 0, i32 2, !dbg !8070
  store i32 4, i32* %maxlen, align 8, !dbg !8071
  %5 = load i32, i32* %write.addr, align 4, !dbg !8072
  %6 = load i8*, i8** %buffer.addr, align 8, !dbg !8073
  %7 = load i64*, i64** %lenp.addr, align 8, !dbg !8074
  %8 = load i64*, i64** %ppos.addr, align 8, !dbg !8075
  %call = call i32 @proc_dointvec(%struct.ctl_table* %fake_table, i32 %5, i8* %6, i64* %7, i64* %8) #13, !dbg !8076
  ret i32 %call, !dbg !8077
}

; Function Attrs: noredzone
declare dso_local i32 @proc_dointvec_minmax(%struct.ctl_table*, i32, i8*, i64*, i64*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_do_uuid(%struct.ctl_table* %table, i32 %write, i8* %buffer, i64* %lenp, i64* %ppos) #1 !dbg !5605 {
entry:
  %lock.addr.i8 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i8, metadata !6198, metadata !DIExpression()), !dbg !8078
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !8082, metadata !DIExpression()), !dbg !8084
  %table.addr = alloca %struct.ctl_table*, align 8
  %write.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %lenp.addr = alloca i64*, align 8
  %ppos.addr = alloca i64*, align 8
  %fake_table = alloca %struct.ctl_table, align 8
  %buf = alloca [64 x i8], align 16
  %tmp_uuid = alloca [16 x i8], align 16
  %uuid = alloca i8*, align 8
  store %struct.ctl_table* %table, %struct.ctl_table** %table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ctl_table** %table.addr, metadata !8086, metadata !DIExpression()), !dbg !8087
  store i32 %write, i32* %write.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %write.addr, metadata !8088, metadata !DIExpression()), !dbg !8089
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !8090, metadata !DIExpression()), !dbg !8091
  store i64* %lenp, i64** %lenp.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %lenp.addr, metadata !8092, metadata !DIExpression()), !dbg !8093
  store i64* %ppos, i64** %ppos.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %ppos.addr, metadata !8094, metadata !DIExpression()), !dbg !8095
  call void @llvm.dbg.declare(metadata %struct.ctl_table* %fake_table, metadata !8096, metadata !DIExpression()), !dbg !8097
  call void @llvm.dbg.declare(metadata [64 x i8]* %buf, metadata !8098, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.declare(metadata [16 x i8]* %tmp_uuid, metadata !8101, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.declare(metadata i8** %uuid, metadata !8104, metadata !DIExpression()), !dbg !8105
  %0 = load %struct.ctl_table*, %struct.ctl_table** %table.addr, align 8, !dbg !8106
  %data = getelementptr inbounds %struct.ctl_table, %struct.ctl_table* %0, i32 0, i32 1, !dbg !8107
  %1 = load i8*, i8** %data, align 8, !dbg !8107
  store i8* %1, i8** %uuid, align 8, !dbg !8108
  %2 = load i8*, i8** %uuid, align 8, !dbg !8109
  %tobool = icmp ne i8* %2, null, !dbg !8109
  br i1 %tobool, label %if.else, label %if.then, !dbg !8110

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %tmp_uuid, i64 0, i64 0, !dbg !8111
  store i8* %arraydecay, i8** %uuid, align 8, !dbg !8113
  %3 = load i8*, i8** %uuid, align 8, !dbg !8114
  call void @generate_random_uuid(i8* %3) #13, !dbg !8115
  br label %if.end3, !dbg !8116

if.else:                                          ; preds = %entry
  store %struct.spinlock* @proc_do_uuid.bootid_spinlock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8117, !srcloc !8119
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8120
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !8120
  %rlock.i = bitcast %union.anon.0* %5 to %struct.raw_spinlock*, !dbg !8120
  %6 = load i8*, i8** %uuid, align 8, !dbg !8122
  %arrayidx = getelementptr i8, i8* %6, i64 8, !dbg !8122
  %7 = load i8, i8* %arrayidx, align 1, !dbg !8122
  %tobool1 = icmp ne i8 %7, 0, !dbg !8122
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !8124

if.then2:                                         ; preds = %if.else
  %8 = load i8*, i8** %uuid, align 8, !dbg !8125
  call void @generate_random_uuid(i8* %8) #13, !dbg !8126
  br label %if.end, !dbg !8126

if.end:                                           ; preds = %if.then2, %if.else
  store %struct.spinlock* @proc_do_uuid.bootid_spinlock, %struct.spinlock** %lock.addr.i8, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8127, !srcloc !6359
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i8, align 8, !dbg !8128
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !8128
  %rlock.i9 = bitcast %union.anon.0* %10 to %struct.raw_spinlock*, !dbg !8128
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !8129
  %11 = load i8*, i8** %uuid, align 8, !dbg !8130
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0), i8* %11) #13, !dbg !8131
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !8132
  %data6 = getelementptr inbounds %struct.ctl_table, %struct.ctl_table* %fake_table, i32 0, i32 1, !dbg !8133
  store i8* %arraydecay5, i8** %data6, align 8, !dbg !8134
  %maxlen = getelementptr inbounds %struct.ctl_table, %struct.ctl_table* %fake_table, i32 0, i32 2, !dbg !8135
  store i32 64, i32* %maxlen, align 8, !dbg !8136
  %12 = load i32, i32* %write.addr, align 4, !dbg !8137
  %13 = load i8*, i8** %buffer.addr, align 8, !dbg !8138
  %14 = load i64*, i64** %lenp.addr, align 8, !dbg !8139
  %15 = load i64*, i64** %ppos.addr, align 8, !dbg !8140
  %call7 = call i32 @proc_dostring(%struct.ctl_table* %fake_table, i32 %12, i8* %13, i64* %14, i64* %15) #13, !dbg !8141
  ret i32 %call7, !dbg !8142
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @get_random_u64() #1 !dbg !5493 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !5630, metadata !DIExpression()), !dbg !8143
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !8145
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5639, metadata !DIExpression()), !dbg !8146
  %ret = alloca i64, align 8
  %flags = alloca i64, align 8
  %batch = alloca %struct.batched_entropy*, align 8
  %tmp = alloca %struct.batched_entropy*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca %struct.batched_entropy*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !8153, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8155, metadata !DIExpression()), !dbg !8156
  call void @llvm.dbg.declare(metadata %struct.batched_entropy** %batch, metadata !8157, metadata !DIExpression()), !dbg !8158
  %0 = call i8* @llvm.returnaddress(i32 0), !dbg !8159
  %1 = ptrtoint i8* %0 to i64, !dbg !8159
  %2 = inttoptr i64 %1 to i8*, !dbg !8159
  call void @_warn_unseeded_randomness(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.get_random_u64, i64 0, i64 0), i8* %2, i8** @get_random_u64.previous) #13, !dbg !8159
  br label %do.body, !dbg !8160

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !8163, metadata !DIExpression()), !dbg !8165
  store i8* null, i8** %__vpp_verify, align 8, !dbg !8165
  %3 = load i8*, i8** %__vpp_verify, align 8, !dbg !8165
  br label %do.end, !dbg !8165

do.end:                                           ; preds = %do.body
  store %struct.batched_entropy* @batched_entropy_u64, %struct.batched_entropy** %tmp1, align 8, !dbg !8165
  %4 = load %struct.batched_entropy*, %struct.batched_entropy** %tmp1, align 8, !dbg !8160
  store %struct.batched_entropy* %4, %struct.batched_entropy** %tmp, align 8, !dbg !8166
  %5 = load %struct.batched_entropy*, %struct.batched_entropy** %tmp, align 8, !dbg !8166
  store %struct.batched_entropy* %5, %struct.batched_entropy** %batch, align 8, !dbg !8167
  br label %do.body2, !dbg !8168

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !8169

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8170, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8173, metadata !DIExpression()), !dbg !8172
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8172
  %conv = zext i1 %cmp to i32, !dbg !8172
  store i32 1, i32* %tmp4, align 4, !dbg !8172
  %6 = load i32, i32* %tmp4, align 4, !dbg !8172
  br label %do.body5, !dbg !8174

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !8175

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !8176

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !8178, metadata !DIExpression()), !dbg !8181
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !8182, metadata !DIExpression()), !dbg !8181
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !8181
  %conv11 = zext i1 %cmp10 to i32, !dbg !8181
  store i32 1, i32* %tmp12, align 4, !dbg !8181
  %7 = load i32, i32* %tmp12, align 4, !dbg !8181
  %call = call i64 @arch_local_irq_save() #13, !dbg !8183
  store i64 %call, i64* %flags, align 8, !dbg !8183
  br label %do.end13, !dbg !8183

do.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !8176

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !8175

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8184, !srcloc !8185
  br label %do.body16, !dbg !8184

do.body16:                                        ; preds = %do.body15
  %8 = load %struct.batched_entropy*, %struct.batched_entropy** %batch, align 8, !dbg !8186
  %batch_lock = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %8, i32 0, i32 2, !dbg !8186
  store %struct.spinlock* %batch_lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8187
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !8188
  %rlock.i = bitcast %union.anon.0* %10 to %struct.raw_spinlock*, !dbg !8188
  br label %do.end18, !dbg !8186

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !8184

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !8175

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !8174

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !8169

do.end22:                                         ; preds = %do.end21
  %11 = load %struct.batched_entropy*, %struct.batched_entropy** %batch, align 8, !dbg !8189
  %position = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %11, i32 0, i32 1, !dbg !8191
  %12 = load i32, i32* %position, align 8, !dbg !8191
  %conv23 = zext i32 %12 to i64, !dbg !8189
  %rem = urem i64 %conv23, 8, !dbg !8192
  %cmp24 = icmp eq i64 %rem, 0, !dbg !8193
  br i1 %cmp24, label %if.then, label %if.end, !dbg !8194

if.then:                                          ; preds = %do.end22
  %13 = load %struct.batched_entropy*, %struct.batched_entropy** %batch, align 8, !dbg !8195
  %14 = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %13, i32 0, i32 0, !dbg !8197
  %entropy_u64 = bitcast %union.anon.101* %14 to [8 x i64]*, !dbg !8197
  %arraydecay = getelementptr inbounds [8 x i64], [8 x i64]* %entropy_u64, i64 0, i64 0, !dbg !8195
  %15 = bitcast i64* %arraydecay to i8*, !dbg !8198
  call void @extract_crng(i8* %15) #13, !dbg !8199
  %16 = load %struct.batched_entropy*, %struct.batched_entropy** %batch, align 8, !dbg !8200
  %position26 = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %16, i32 0, i32 1, !dbg !8201
  store i32 0, i32* %position26, align 8, !dbg !8202
  br label %if.end, !dbg !8203

if.end:                                           ; preds = %if.then, %do.end22
  %17 = load %struct.batched_entropy*, %struct.batched_entropy** %batch, align 8, !dbg !8204
  %18 = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %17, i32 0, i32 0, !dbg !8205
  %entropy_u6427 = bitcast %union.anon.101* %18 to [8 x i64]*, !dbg !8205
  %19 = load %struct.batched_entropy*, %struct.batched_entropy** %batch, align 8, !dbg !8206
  %position28 = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %19, i32 0, i32 1, !dbg !8207
  %20 = load i32, i32* %position28, align 8, !dbg !8208
  %inc = add i32 %20, 1, !dbg !8208
  store i32 %inc, i32* %position28, align 8, !dbg !8208
  %idxprom = zext i32 %20 to i64, !dbg !8204
  %arrayidx = getelementptr [8 x i64], [8 x i64]* %entropy_u6427, i64 0, i64 %idxprom, !dbg !8204
  %21 = load i64, i64* %arrayidx, align 8, !dbg !8204
  store i64 %21, i64* %ret, align 8, !dbg !8209
  %22 = load %struct.batched_entropy*, %struct.batched_entropy** %batch, align 8, !dbg !8210
  %batch_lock29 = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %22, i32 0, i32 2, !dbg !8211
  %23 = load i64, i64* %flags, align 8, !dbg !8212
  store %struct.spinlock* %batch_lock29, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %23, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !8213
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !8213
  store i32 1, i32* %tmp.i, align 4, !dbg !8213
  %24 = load i32, i32* %tmp.i, align 4, !dbg !8213
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !8214
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !8214
  store i32 1, i32* %tmp8.i, align 4, !dbg !8214
  %25 = load i32, i32* %tmp8.i, align 4, !dbg !8214
  %26 = load i64, i64* %flags.addr.i, align 8, !dbg !8215
  call void @arch_local_irq_restore(i64 %26) #14, !dbg !8215
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8216, !srcloc !5715
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !8217
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !8217
  %rlock.i31 = bitcast %union.anon.0* %28 to %struct.raw_spinlock*, !dbg !8217
  %29 = load i64, i64* %ret, align 8, !dbg !8218
  ret i64 %29, !dbg !8219
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @extract_crng(i8* %out) #1 !dbg !8220 {
entry:
  %out.addr = alloca i8*, align 8
  %crng = alloca %struct.crng_state*, align 8
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !8223, metadata !DIExpression()), !dbg !8224
  call void @llvm.dbg.declare(metadata %struct.crng_state** %crng, metadata !8225, metadata !DIExpression()), !dbg !8226
  store %struct.crng_state* null, %struct.crng_state** %crng, align 8, !dbg !8226
  store %struct.crng_state* @primary_crng, %struct.crng_state** %crng, align 8, !dbg !8227
  %0 = load %struct.crng_state*, %struct.crng_state** %crng, align 8, !dbg !8228
  %1 = load i8*, i8** %out.addr, align 8, !dbg !8229
  call void @_extract_crng(%struct.crng_state* %0, i8* %1) #13, !dbg !8230
  ret void, !dbg !8231
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @get_random_u32() #1 !dbg !5496 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !5630, metadata !DIExpression()), !dbg !8232
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !8234
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5639, metadata !DIExpression()), !dbg !8235
  %ret = alloca i32, align 4
  %flags = alloca i64, align 8
  %batch = alloca %struct.batched_entropy*, align 8
  %tmp = alloca %struct.batched_entropy*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca %struct.batched_entropy*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8242, metadata !DIExpression()), !dbg !8243
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8244, metadata !DIExpression()), !dbg !8245
  call void @llvm.dbg.declare(metadata %struct.batched_entropy** %batch, metadata !8246, metadata !DIExpression()), !dbg !8247
  %0 = call i8* @llvm.returnaddress(i32 0), !dbg !8248
  %1 = ptrtoint i8* %0 to i64, !dbg !8248
  %2 = inttoptr i64 %1 to i8*, !dbg !8248
  call void @_warn_unseeded_randomness(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.get_random_u32, i64 0, i64 0), i8* %2, i8** @get_random_u32.previous) #13, !dbg !8248
  br label %do.body, !dbg !8249

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !8252, metadata !DIExpression()), !dbg !8254
  store i8* null, i8** %__vpp_verify, align 8, !dbg !8254
  %3 = load i8*, i8** %__vpp_verify, align 8, !dbg !8254
  br label %do.end, !dbg !8254

do.end:                                           ; preds = %do.body
  store %struct.batched_entropy* @batched_entropy_u32, %struct.batched_entropy** %tmp1, align 8, !dbg !8254
  %4 = load %struct.batched_entropy*, %struct.batched_entropy** %tmp1, align 8, !dbg !8249
  store %struct.batched_entropy* %4, %struct.batched_entropy** %tmp, align 8, !dbg !8255
  %5 = load %struct.batched_entropy*, %struct.batched_entropy** %tmp, align 8, !dbg !8255
  store %struct.batched_entropy* %5, %struct.batched_entropy** %batch, align 8, !dbg !8256
  br label %do.body2, !dbg !8257

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !8258

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8259, metadata !DIExpression()), !dbg !8261
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8262, metadata !DIExpression()), !dbg !8261
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8261
  %conv = zext i1 %cmp to i32, !dbg !8261
  store i32 1, i32* %tmp4, align 4, !dbg !8261
  %6 = load i32, i32* %tmp4, align 4, !dbg !8261
  br label %do.body5, !dbg !8263

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !8264

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !8265

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !8267, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !8271, metadata !DIExpression()), !dbg !8270
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !8270
  %conv11 = zext i1 %cmp10 to i32, !dbg !8270
  store i32 1, i32* %tmp12, align 4, !dbg !8270
  %7 = load i32, i32* %tmp12, align 4, !dbg !8270
  %call = call i64 @arch_local_irq_save() #13, !dbg !8272
  store i64 %call, i64* %flags, align 8, !dbg !8272
  br label %do.end13, !dbg !8272

do.end13:                                         ; preds = %do.body7
  br label %do.end14, !dbg !8265

do.end14:                                         ; preds = %do.end13
  br label %do.body15, !dbg !8264

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8273, !srcloc !8274
  br label %do.body16, !dbg !8273

do.body16:                                        ; preds = %do.body15
  %8 = load %struct.batched_entropy*, %struct.batched_entropy** %batch, align 8, !dbg !8275
  %batch_lock = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %8, i32 0, i32 2, !dbg !8275
  store %struct.spinlock* %batch_lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8276
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !8277
  %rlock.i = bitcast %union.anon.0* %10 to %struct.raw_spinlock*, !dbg !8277
  br label %do.end18, !dbg !8275

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !8273

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !8264

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !8263

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !8258

do.end22:                                         ; preds = %do.end21
  %11 = load %struct.batched_entropy*, %struct.batched_entropy** %batch, align 8, !dbg !8278
  %position = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %11, i32 0, i32 1, !dbg !8280
  %12 = load i32, i32* %position, align 8, !dbg !8280
  %conv23 = zext i32 %12 to i64, !dbg !8278
  %rem = urem i64 %conv23, 16, !dbg !8281
  %cmp24 = icmp eq i64 %rem, 0, !dbg !8282
  br i1 %cmp24, label %if.then, label %if.end, !dbg !8283

if.then:                                          ; preds = %do.end22
  %13 = load %struct.batched_entropy*, %struct.batched_entropy** %batch, align 8, !dbg !8284
  %14 = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %13, i32 0, i32 0, !dbg !8286
  %entropy_u32 = bitcast %union.anon.101* %14 to [16 x i32]*, !dbg !8286
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %entropy_u32, i64 0, i64 0, !dbg !8284
  %15 = bitcast i32* %arraydecay to i8*, !dbg !8287
  call void @extract_crng(i8* %15) #13, !dbg !8288
  %16 = load %struct.batched_entropy*, %struct.batched_entropy** %batch, align 8, !dbg !8289
  %position26 = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %16, i32 0, i32 1, !dbg !8290
  store i32 0, i32* %position26, align 8, !dbg !8291
  br label %if.end, !dbg !8292

if.end:                                           ; preds = %if.then, %do.end22
  %17 = load %struct.batched_entropy*, %struct.batched_entropy** %batch, align 8, !dbg !8293
  %18 = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %17, i32 0, i32 0, !dbg !8294
  %entropy_u3227 = bitcast %union.anon.101* %18 to [16 x i32]*, !dbg !8294
  %19 = load %struct.batched_entropy*, %struct.batched_entropy** %batch, align 8, !dbg !8295
  %position28 = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %19, i32 0, i32 1, !dbg !8296
  %20 = load i32, i32* %position28, align 8, !dbg !8297
  %inc = add i32 %20, 1, !dbg !8297
  store i32 %inc, i32* %position28, align 8, !dbg !8297
  %idxprom = zext i32 %20 to i64, !dbg !8293
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %entropy_u3227, i64 0, i64 %idxprom, !dbg !8293
  %21 = load i32, i32* %arrayidx, align 4, !dbg !8293
  store i32 %21, i32* %ret, align 4, !dbg !8298
  %22 = load %struct.batched_entropy*, %struct.batched_entropy** %batch, align 8, !dbg !8299
  %batch_lock29 = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %22, i32 0, i32 2, !dbg !8300
  %23 = load i64, i64* %flags, align 8, !dbg !8301
  store %struct.spinlock* %batch_lock29, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %23, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !8302
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !8302
  store i32 1, i32* %tmp.i, align 4, !dbg !8302
  %24 = load i32, i32* %tmp.i, align 4, !dbg !8302
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !8303
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !8303
  store i32 1, i32* %tmp8.i, align 4, !dbg !8303
  %25 = load i32, i32* %tmp8.i, align 4, !dbg !8303
  %26 = load i64, i64* %flags.addr.i, align 8, !dbg !8304
  call void @arch_local_irq_restore(i64 %26) #14, !dbg !8304
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8305, !srcloc !5715
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !8306
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !8306
  %rlock.i31 = bitcast %union.anon.0* %28 to %struct.raw_spinlock*, !dbg !8306
  %29 = load i32, i32* %ret, align 4, !dbg !8307
  ret i32 %29, !dbg !8308
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @randomize_page(i64 %start, i64 %range) #1 !dbg !8309 {
entry:
  %retval = alloca i64, align 8
  %start.addr = alloca i64, align 8
  %range.addr = alloca i64, align 8
  store i64 %start, i64* %start.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %start.addr, metadata !8312, metadata !DIExpression()), !dbg !8313
  store i64 %range, i64* %range.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %range.addr, metadata !8314, metadata !DIExpression()), !dbg !8315
  %0 = load i64, i64* %start.addr, align 8, !dbg !8316
  %and = and i64 %0, 4095, !dbg !8316
  %cmp = icmp eq i64 %and, 0, !dbg !8316
  br i1 %cmp, label %if.end, label %if.then, !dbg !8318

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %start.addr, align 8, !dbg !8319
  %add = add i64 %1, 4095, !dbg !8319
  %and1 = and i64 %add, -4096, !dbg !8319
  %2 = load i64, i64* %start.addr, align 8, !dbg !8321
  %sub = sub i64 %and1, %2, !dbg !8322
  %3 = load i64, i64* %range.addr, align 8, !dbg !8323
  %sub2 = sub i64 %3, %sub, !dbg !8323
  store i64 %sub2, i64* %range.addr, align 8, !dbg !8323
  %4 = load i64, i64* %start.addr, align 8, !dbg !8324
  %add3 = add i64 %4, 4095, !dbg !8324
  %and4 = and i64 %add3, -4096, !dbg !8324
  store i64 %and4, i64* %start.addr, align 8, !dbg !8325
  br label %if.end, !dbg !8326

if.end:                                           ; preds = %if.then, %entry
  %5 = load i64, i64* %start.addr, align 8, !dbg !8327
  %6 = load i64, i64* %range.addr, align 8, !dbg !8329
  %sub5 = sub i64 -1, %6, !dbg !8330
  %cmp6 = icmp ugt i64 %5, %sub5, !dbg !8331
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !8332

if.then7:                                         ; preds = %if.end
  %7 = load i64, i64* %start.addr, align 8, !dbg !8333
  %sub8 = sub i64 -1, %7, !dbg !8334
  store i64 %sub8, i64* %range.addr, align 8, !dbg !8335
  br label %if.end9, !dbg !8336

if.end9:                                          ; preds = %if.then7, %if.end
  %8 = load i64, i64* %range.addr, align 8, !dbg !8337
  %shr = lshr i64 %8, 12, !dbg !8337
  store i64 %shr, i64* %range.addr, align 8, !dbg !8337
  %9 = load i64, i64* %range.addr, align 8, !dbg !8338
  %cmp10 = icmp eq i64 %9, 0, !dbg !8340
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !8341

if.then11:                                        ; preds = %if.end9
  %10 = load i64, i64* %start.addr, align 8, !dbg !8342
  store i64 %10, i64* %retval, align 8, !dbg !8343
  br label %return, !dbg !8343

if.end12:                                         ; preds = %if.end9
  %11 = load i64, i64* %start.addr, align 8, !dbg !8344
  %call = call i64 @get_random_long() #13, !dbg !8345
  %12 = load i64, i64* %range.addr, align 8, !dbg !8346
  %rem = urem i64 %call, %12, !dbg !8347
  %shl = shl i64 %rem, 12, !dbg !8348
  %add13 = add i64 %11, %shl, !dbg !8349
  store i64 %add13, i64* %retval, align 8, !dbg !8350
  br label %return, !dbg !8350

return:                                           ; preds = %if.end12, %if.then11
  %13 = load i64, i64* %retval, align 8, !dbg !8351
  ret i64 %13, !dbg !8351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @get_random_long() #1 !dbg !8352 {
entry:
  %call = call i64 @get_random_u64() #13, !dbg !8353
  ret i64 %call, !dbg !8354
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @add_hwgenerator_randomness(i8* %buffer, i64 %count, i64 %entropy) #1 !dbg !8355 {
entry:
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %entropy.addr = alloca i64, align 8
  %poolp = alloca %struct.entropy_store*, align 8
  %__ret = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret9 = alloca i64, align 8
  %__int = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp24 = alloca i32, align 4
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !8358, metadata !DIExpression()), !dbg !8359
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !8360, metadata !DIExpression()), !dbg !8361
  store i64 %entropy, i64* %entropy.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %entropy.addr, metadata !8362, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.declare(metadata %struct.entropy_store** %poolp, metadata !8364, metadata !DIExpression()), !dbg !8365
  store %struct.entropy_store* @input_pool, %struct.entropy_store** %poolp, align 8, !dbg !8365
  %0 = load i32, i32* @crng_init, align 4, !dbg !8366
  %cmp = icmp eq i32 %0, 0, !dbg !8366
  %lnot = xor i1 %cmp, true, !dbg !8366
  %lnot1 = xor i1 %lnot, true, !dbg !8366
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8366
  %conv = sext i32 %lnot.ext to i64, !dbg !8366
  %tobool = icmp ne i64 %conv, 0, !dbg !8366
  br i1 %tobool, label %if.then, label %if.end, !dbg !8368

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %buffer.addr, align 8, !dbg !8369
  %2 = load i64, i64* %count.addr, align 8, !dbg !8371
  %call = call i32 @crng_fast_load(i8* %1, i64 %2) #13, !dbg !8372
  br label %return, !dbg !8373

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !8374, metadata !DIExpression()), !dbg !8376
  store i32 0, i32* %__ret, align 4, !dbg !8376
  br label %do.body, !dbg !8376

do.body:                                          ; preds = %if.end
  br label %do.body2, !dbg !8377

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !8379

do.end:                                           ; preds = %do.body2
  br label %do.end3, !dbg !8377

do.end3:                                          ; preds = %do.end
  %call4 = call zeroext i1 @kthread_should_stop() #13, !dbg !8381
  br i1 %call4, label %if.end23, label %lor.lhs.false, !dbg !8381

lor.lhs.false:                                    ; preds = %do.end3
  %3 = load i32, i32* getelementptr inbounds (%struct.entropy_store, %struct.entropy_store* @input_pool, i32 0, i32 6), align 4, !dbg !8381
  %shr = ashr i32 %3, 3, !dbg !8381
  %4 = load i32, i32* @random_write_wakeup_bits, align 4, !dbg !8381
  %cmp6 = icmp sle i32 %shr, %4, !dbg !8381
  br i1 %cmp6, label %if.end23, label %if.then8, !dbg !8376

if.then8:                                         ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !8383, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.declare(metadata i64* %__ret9, metadata !8386, metadata !DIExpression()), !dbg !8385
  store i64 0, i64* %__ret9, align 8, !dbg !8385
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #13, !dbg !8385
  br label %for.cond, !dbg !8385

for.cond:                                         ; preds = %if.end21, %if.then8
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !8387, metadata !DIExpression()), !dbg !8391
  %call10 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* @random_write_wait, %struct.wait_queue_entry* %__wq_entry, i32 1) #13, !dbg !8391
  store i64 %call10, i64* %__int, align 8, !dbg !8391
  %call11 = call zeroext i1 @kthread_should_stop() #13, !dbg !8392
  br i1 %call11, label %if.then17, label %lor.lhs.false13, !dbg !8392

lor.lhs.false13:                                  ; preds = %for.cond
  %5 = load i32, i32* getelementptr inbounds (%struct.entropy_store, %struct.entropy_store* @input_pool, i32 0, i32 6), align 4, !dbg !8392
  %shr14 = ashr i32 %5, 3, !dbg !8392
  %6 = load i32, i32* @random_write_wakeup_bits, align 4, !dbg !8392
  %cmp15 = icmp sle i32 %shr14, %6, !dbg !8392
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !8391

if.then17:                                        ; preds = %lor.lhs.false13, %for.cond
  br label %for.end, !dbg !8392

if.end18:                                         ; preds = %lor.lhs.false13
  %7 = load i64, i64* %__int, align 8, !dbg !8394
  %tobool19 = icmp ne i64 %7, 0, !dbg !8394
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !8391

if.then20:                                        ; preds = %if.end18
  %8 = load i64, i64* %__int, align 8, !dbg !8396
  store i64 %8, i64* %__ret9, align 8, !dbg !8396
  br label %__out, !dbg !8396

if.end21:                                         ; preds = %if.end18
  call void @schedule() #13, !dbg !8391
  br label %for.cond, !dbg !8398, !llvm.loop !8399

for.end:                                          ; preds = %if.then17
  call void @finish_wait(%struct.wait_queue_head* @random_write_wait, %struct.wait_queue_entry* %__wq_entry) #13, !dbg !8385
  br label %__out, !dbg !8385

__out:                                            ; preds = %for.end, %if.then20
  call void @llvm.dbg.label(metadata !8401), !dbg !8385
  %9 = load i64, i64* %__ret9, align 8, !dbg !8385
  store i64 %9, i64* %tmp, align 8, !dbg !8385
  %10 = load i64, i64* %tmp, align 8, !dbg !8385
  %conv22 = trunc i64 %10 to i32, !dbg !8381
  store i32 %conv22, i32* %__ret, align 4, !dbg !8381
  br label %if.end23, !dbg !8381

if.end23:                                         ; preds = %__out, %lor.lhs.false, %do.end3
  %11 = load i32, i32* %__ret, align 4, !dbg !8376
  store i32 %11, i32* %tmp24, align 4, !dbg !8381
  %12 = load i32, i32* %tmp24, align 4, !dbg !8376
  %13 = load %struct.entropy_store*, %struct.entropy_store** %poolp, align 8, !dbg !8402
  %14 = load i8*, i8** %buffer.addr, align 8, !dbg !8403
  %15 = load i64, i64* %count.addr, align 8, !dbg !8404
  %conv25 = trunc i64 %15 to i32, !dbg !8404
  call void @mix_pool_bytes(%struct.entropy_store* %13, i8* %14, i32 %conv25) #13, !dbg !8405
  %16 = load %struct.entropy_store*, %struct.entropy_store** %poolp, align 8, !dbg !8406
  %17 = load i64, i64* %entropy.addr, align 8, !dbg !8407
  %conv26 = trunc i64 %17 to i32, !dbg !8407
  call void @credit_entropy_bits(%struct.entropy_store* %16, i32 %conv26) #13, !dbg !8408
  br label %return, !dbg !8409

return:                                           ; preds = %if.end23, %if.then
  ret void, !dbg !8409
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @kthread_should_stop() #4

; Function Attrs: noredzone
declare dso_local void @schedule() #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mix_pool_bytes(%struct.entropy_store* %r, i8* %in, i32 %nbytes) #1 !dbg !8410 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !5630, metadata !DIExpression()), !dbg !8411
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !8413
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5639, metadata !DIExpression()), !dbg !8414
  %r.addr = alloca %struct.entropy_store*, align 8
  %in.addr = alloca i8*, align 8
  %nbytes.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.entropy_store* %r, %struct.entropy_store** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.entropy_store** %r.addr, metadata !8421, metadata !DIExpression()), !dbg !8422
  store i8* %in, i8** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in.addr, metadata !8423, metadata !DIExpression()), !dbg !8424
  store i32 %nbytes, i32* %nbytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbytes.addr, metadata !8425, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8427, metadata !DIExpression()), !dbg !8428
  %0 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !8429
  %name = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %0, i32 0, i32 2, !dbg !8430
  %1 = load i8*, i8** %name, align 8, !dbg !8430
  %2 = load i32, i32* %nbytes.addr, align 4, !dbg !8431
  %3 = call i8* @llvm.returnaddress(i32 0), !dbg !8432
  %4 = ptrtoint i8* %3 to i64, !dbg !8432
  call void @trace_mix_pool_bytes(i8* %1, i32 %2, i64 %4) #13, !dbg !8433
  br label %do.body, !dbg !8434

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8435

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8436, metadata !DIExpression()), !dbg !8438
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8439, metadata !DIExpression()), !dbg !8438
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8438
  %conv = zext i1 %cmp to i32, !dbg !8438
  store i32 1, i32* %tmp, align 4, !dbg !8438
  %5 = load i32, i32* %tmp, align 4, !dbg !8438
  br label %do.body2, !dbg !8440

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8441

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8442

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8444, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8448, metadata !DIExpression()), !dbg !8447
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8447
  %conv8 = zext i1 %cmp7 to i32, !dbg !8447
  store i32 1, i32* %tmp9, align 4, !dbg !8447
  %6 = load i32, i32* %tmp9, align 4, !dbg !8447
  %call = call i64 @arch_local_irq_save() #13, !dbg !8449
  store i64 %call, i64* %flags, align 8, !dbg !8449
  br label %do.end, !dbg !8449

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8442

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8441

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8450, !srcloc !8451
  br label %do.body12, !dbg !8450

do.body12:                                        ; preds = %do.body11
  %7 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !8452
  %lock = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %7, i32 0, i32 3, !dbg !8452
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8453
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !8454
  %rlock.i = bitcast %union.anon.0* %9 to %struct.raw_spinlock*, !dbg !8454
  br label %do.end14, !dbg !8452

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8450

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8441

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8440

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8435

do.end18:                                         ; preds = %do.end17
  %10 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !8455
  %11 = load i8*, i8** %in.addr, align 8, !dbg !8456
  %12 = load i32, i32* %nbytes.addr, align 4, !dbg !8457
  call void @_mix_pool_bytes(%struct.entropy_store* %10, i8* %11, i32 %12) #13, !dbg !8458
  %13 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !8459
  %lock19 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %13, i32 0, i32 3, !dbg !8460
  %14 = load i64, i64* %flags, align 8, !dbg !8461
  store %struct.spinlock* %lock19, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !8462
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !8462
  store i32 1, i32* %tmp.i, align 4, !dbg !8462
  %15 = load i32, i32* %tmp.i, align 4, !dbg !8462
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !8463
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !8463
  store i32 1, i32* %tmp8.i, align 4, !dbg !8463
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !8463
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !8464
  call void @arch_local_irq_restore(i64 %17) #14, !dbg !8464
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8465, !srcloc !5715
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !8466
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !8466
  %rlock.i21 = bitcast %union.anon.0* %19 to %struct.raw_spinlock*, !dbg !8466
  ret void, !dbg !8467
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @add_bootloader_randomness(i8* %buf, i32 %size) #1 !dbg !8468 {
entry:
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8469, metadata !DIExpression()), !dbg !8470
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8471, metadata !DIExpression()), !dbg !8472
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !8473
  %1 = load i32, i32* %size.addr, align 4, !dbg !8475
  call void @add_device_randomness(i8* %0, i32 %1) #13, !dbg !8476
  ret void, !dbg !8477
}

; Function Attrs: noredzone
declare dso_local i32 @kstrtobool(i8*, i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #1 !dbg !8478 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !8481, metadata !DIExpression()), !dbg !8482
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8483, metadata !DIExpression()), !dbg !8485
  %0 = load i64, i64* %__edi, align 8, !dbg !8485
  store i64 %0, i64* %__edi, align 8, !dbg !8485
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8486, metadata !DIExpression()), !dbg !8485
  %1 = load i64, i64* %__esi, align 8, !dbg !8485
  store i64 %1, i64* %__esi, align 8, !dbg !8485
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8487, metadata !DIExpression()), !dbg !8485
  %2 = load i64, i64* %__edx, align 8, !dbg !8485
  store i64 %2, i64* %__edx, align 8, !dbg !8485
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8488, metadata !DIExpression()), !dbg !8485
  %3 = load i64, i64* %__ecx, align 8, !dbg !8485
  store i64 %3, i64* %__ecx, align 8, !dbg !8485
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8489, metadata !DIExpression()), !dbg !8485
  %4 = load i64, i64* %__eax, align 8, !dbg !8485
  store i64 %4, i64* %__eax, align 8, !dbg !8485
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !8485
  %6 = call i64 @llvm.read_register.i64(metadata !5615), !dbg !8485
  %7 = load i64, i64* %f.addr, align 8, !dbg !8485
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !8485, !srcloc !8490
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !8485
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !8485
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8485
  call void @llvm.write_register.i64(metadata !5615, i64 %asmresult1), !dbg !8485
  ret void, !dbg !8491
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #1 !dbg !8492 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !8493, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8496, metadata !DIExpression()), !dbg !8495
  %0 = load i64, i64* %__edi, align 8, !dbg !8495
  store i64 %0, i64* %__edi, align 8, !dbg !8495
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8497, metadata !DIExpression()), !dbg !8495
  %1 = load i64, i64* %__esi, align 8, !dbg !8495
  store i64 %1, i64* %__esi, align 8, !dbg !8495
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8498, metadata !DIExpression()), !dbg !8495
  %2 = load i64, i64* %__edx, align 8, !dbg !8495
  store i64 %2, i64* %__edx, align 8, !dbg !8495
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8499, metadata !DIExpression()), !dbg !8495
  %3 = load i64, i64* %__ecx, align 8, !dbg !8495
  store i64 %3, i64* %__ecx, align 8, !dbg !8495
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8500, metadata !DIExpression()), !dbg !8495
  %4 = load i64, i64* %__eax, align 8, !dbg !8495
  store i64 %4, i64* %__eax, align 8, !dbg !8495
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !8495
  %6 = call i64 @llvm.read_register.i64(metadata !5615), !dbg !8501
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !8501, !srcloc !8504
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8501
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8501
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8501
  call void @llvm.write_register.i64(metadata !5615, i64 %asmresult1), !dbg !8501
  %8 = load i64, i64* %__eax, align 8, !dbg !8501
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !8505, metadata !DIExpression()), !dbg !8507
  store i64 -1, i64* %__mask, align 8, !dbg !8507
  %9 = load i64, i64* %__mask, align 8, !dbg !8507
  store i64 %9, i64* %tmp, align 8, !dbg !8507
  %10 = load i64, i64* %tmp, align 8, !dbg !8507
  %and = and i64 %8, %10, !dbg !8501
  store i64 %and, i64* %__ret, align 8, !dbg !8501
  %11 = load i64, i64* %__ret, align 8, !dbg !8495
  store i64 %11, i64* %tmp2, align 8, !dbg !8508
  %12 = load i64, i64* %tmp2, align 8, !dbg !8495
  ret i64 %12, !dbg !8509
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #1 !dbg !8510 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8511, metadata !DIExpression()), !dbg !8513
  %0 = load i64, i64* %__edi, align 8, !dbg !8513
  store i64 %0, i64* %__edi, align 8, !dbg !8513
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8514, metadata !DIExpression()), !dbg !8513
  %1 = load i64, i64* %__esi, align 8, !dbg !8513
  store i64 %1, i64* %__esi, align 8, !dbg !8513
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8515, metadata !DIExpression()), !dbg !8513
  %2 = load i64, i64* %__edx, align 8, !dbg !8513
  store i64 %2, i64* %__edx, align 8, !dbg !8513
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8516, metadata !DIExpression()), !dbg !8513
  %3 = load i64, i64* %__ecx, align 8, !dbg !8513
  store i64 %3, i64* %__ecx, align 8, !dbg !8513
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8517, metadata !DIExpression()), !dbg !8513
  %4 = load i64, i64* %__eax, align 8, !dbg !8513
  store i64 %4, i64* %__eax, align 8, !dbg !8513
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !8513
  %6 = call i64 @llvm.read_register.i64(metadata !5615), !dbg !8513
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !8513, !srcloc !8518
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8513
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8513
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8513
  call void @llvm.write_register.i64(metadata !5615, i64 %asmresult1), !dbg !8513
  ret void, !dbg !8519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rol32(i32 %word, i32 %shift) #1 !dbg !8520 {
entry:
  %word.addr = alloca i32, align 4
  %shift.addr = alloca i32, align 4
  store i32 %word, i32* %word.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %word.addr, metadata !8524, metadata !DIExpression()), !dbg !8525
  store i32 %shift, i32* %shift.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr, metadata !8526, metadata !DIExpression()), !dbg !8527
  %0 = load i32, i32* %word.addr, align 4, !dbg !8528
  %1 = load i32, i32* %shift.addr, align 4, !dbg !8529
  %and = and i32 %1, 31, !dbg !8530
  %shl = shl i32 %0, %and, !dbg !8531
  %2 = load i32, i32* %word.addr, align 4, !dbg !8532
  %3 = load i32, i32* %shift.addr, align 4, !dbg !8533
  %sub = sub i32 0, %3, !dbg !8534
  %and1 = and i32 %sub, 31, !dbg !8535
  %shr = lshr i32 %2, %and1, !dbg !8536
  %or = or i32 %shl, %shr, !dbg !8537
  ret i32 %or, !dbg !8538
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__this_cpu_preempt_check(i8* %op) #1 !dbg !8539 {
entry:
  %op.addr = alloca i8*, align 8
  store i8* %op, i8** %op.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %op.addr, metadata !8543, metadata !DIExpression()), !dbg !8544
  ret void, !dbg !8545
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @invalidate_batched_entropy() #1 !dbg !8546 {
entry:
  %lock.addr.i37 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i37, metadata !8082, metadata !DIExpression()), !dbg !8547
  %lock.addr.i35 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i35, metadata !6198, metadata !DIExpression()), !dbg !8552
  %lock.addr.i33 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i33, metadata !5630, metadata !DIExpression()), !dbg !8554
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !8556
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5639, metadata !DIExpression()), !dbg !8557
  %cpu = alloca i32, align 4
  %flags = alloca i64, align 8
  %batched_entropy = alloca %struct.batched_entropy*, align 8
  %tmp = alloca %struct.batched_entropy*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca %struct.batched_entropy*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp5 = alloca i32, align 4
  %__dummy9 = alloca i64, align 8
  %__dummy210 = alloca i64, align 8
  %tmp13 = alloca i32, align 4
  %tmp25 = alloca %struct.batched_entropy*, align 8
  %__vpp_verify27 = alloca i8*, align 8
  %tmp29 = alloca %struct.batched_entropy*, align 8
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !8564, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8566, metadata !DIExpression()), !dbg !8567
  store i32 0, i32* %cpu, align 4, !dbg !8568
  br label %for.cond, !dbg !8568

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %cpu, align 4, !dbg !8569
  %cmp = icmp slt i32 %0, 1, !dbg !8569
  br i1 %cmp, label %for.body, label %for.end, !dbg !8568

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.batched_entropy** %batched_entropy, metadata !8570, metadata !DIExpression()), !dbg !8571
  %1 = load i32, i32* %cpu, align 4, !dbg !8572
  br label %do.body, !dbg !8574

do.body:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !8576, metadata !DIExpression()), !dbg !8578
  store i8* null, i8** %__vpp_verify, align 8, !dbg !8578
  %2 = load i8*, i8** %__vpp_verify, align 8, !dbg !8578
  br label %do.end, !dbg !8578

do.end:                                           ; preds = %do.body
  store %struct.batched_entropy* @batched_entropy_u32, %struct.batched_entropy** %tmp1, align 8, !dbg !8578
  %3 = load %struct.batched_entropy*, %struct.batched_entropy** %tmp1, align 8, !dbg !8574
  store %struct.batched_entropy* %3, %struct.batched_entropy** %tmp, align 8, !dbg !8572
  %4 = load %struct.batched_entropy*, %struct.batched_entropy** %tmp, align 8, !dbg !8572
  store %struct.batched_entropy* %4, %struct.batched_entropy** %batched_entropy, align 8, !dbg !8579
  br label %do.body2, !dbg !8580

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !8581

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8582, metadata !DIExpression()), !dbg !8584
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8585, metadata !DIExpression()), !dbg !8584
  %cmp4 = icmp eq i64* %__dummy, %__dummy2, !dbg !8584
  %conv = zext i1 %cmp4 to i32, !dbg !8584
  store i32 1, i32* %tmp5, align 4, !dbg !8584
  %5 = load i32, i32* %tmp5, align 4, !dbg !8584
  br label %do.body6, !dbg !8586

do.body6:                                         ; preds = %do.body3
  br label %do.body7, !dbg !8587

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !8588

do.body8:                                         ; preds = %do.body7
  call void @llvm.dbg.declare(metadata i64* %__dummy9, metadata !8590, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.declare(metadata i64* %__dummy210, metadata !8594, metadata !DIExpression()), !dbg !8593
  %cmp11 = icmp eq i64* %__dummy9, %__dummy210, !dbg !8593
  %conv12 = zext i1 %cmp11 to i32, !dbg !8593
  store i32 1, i32* %tmp13, align 4, !dbg !8593
  %6 = load i32, i32* %tmp13, align 4, !dbg !8593
  %call = call i64 @arch_local_irq_save() #13, !dbg !8595
  store i64 %call, i64* %flags, align 8, !dbg !8595
  br label %do.end14, !dbg !8595

do.end14:                                         ; preds = %do.body8
  br label %do.end15, !dbg !8588

do.end15:                                         ; preds = %do.end14
  br label %do.body16, !dbg !8587

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8596, !srcloc !8597
  br label %do.body17, !dbg !8596

do.body17:                                        ; preds = %do.body16
  %7 = load %struct.batched_entropy*, %struct.batched_entropy** %batched_entropy, align 8, !dbg !8598
  %batch_lock = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %7, i32 0, i32 2, !dbg !8598
  store %struct.spinlock* %batch_lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8599
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !8600
  %rlock.i = bitcast %union.anon.0* %9 to %struct.raw_spinlock*, !dbg !8600
  br label %do.end19, !dbg !8598

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !8596

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !8587

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !8586

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !8581

do.end23:                                         ; preds = %do.end22
  %10 = load %struct.batched_entropy*, %struct.batched_entropy** %batched_entropy, align 8, !dbg !8601
  %position = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %10, i32 0, i32 1, !dbg !8602
  store i32 0, i32* %position, align 8, !dbg !8603
  %11 = load %struct.batched_entropy*, %struct.batched_entropy** %batched_entropy, align 8, !dbg !8604
  %batch_lock24 = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %11, i32 0, i32 2, !dbg !8605
  store %struct.spinlock* %batch_lock24, %struct.spinlock** %lock.addr.i35, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8606, !srcloc !6359
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i35, align 8, !dbg !8607
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !8607
  %rlock.i36 = bitcast %union.anon.0* %13 to %struct.raw_spinlock*, !dbg !8607
  %14 = load i32, i32* %cpu, align 4, !dbg !8608
  br label %do.body26, !dbg !8610

do.body26:                                        ; preds = %do.end23
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify27, metadata !8612, metadata !DIExpression()), !dbg !8614
  store i8* null, i8** %__vpp_verify27, align 8, !dbg !8614
  %15 = load i8*, i8** %__vpp_verify27, align 8, !dbg !8614
  br label %do.end28, !dbg !8614

do.end28:                                         ; preds = %do.body26
  store %struct.batched_entropy* @batched_entropy_u64, %struct.batched_entropy** %tmp29, align 8, !dbg !8614
  %16 = load %struct.batched_entropy*, %struct.batched_entropy** %tmp29, align 8, !dbg !8610
  store %struct.batched_entropy* %16, %struct.batched_entropy** %tmp25, align 8, !dbg !8608
  %17 = load %struct.batched_entropy*, %struct.batched_entropy** %tmp25, align 8, !dbg !8608
  store %struct.batched_entropy* %17, %struct.batched_entropy** %batched_entropy, align 8, !dbg !8615
  %18 = load %struct.batched_entropy*, %struct.batched_entropy** %batched_entropy, align 8, !dbg !8616
  %batch_lock30 = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %18, i32 0, i32 2, !dbg !8617
  store %struct.spinlock* %batch_lock30, %struct.spinlock** %lock.addr.i37, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8618, !srcloc !8119
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i37, align 8, !dbg !8619
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !8619
  %rlock.i38 = bitcast %union.anon.0* %20 to %struct.raw_spinlock*, !dbg !8619
  %21 = load %struct.batched_entropy*, %struct.batched_entropy** %batched_entropy, align 8, !dbg !8620
  %position31 = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %21, i32 0, i32 1, !dbg !8621
  store i32 0, i32* %position31, align 8, !dbg !8622
  %22 = load %struct.batched_entropy*, %struct.batched_entropy** %batched_entropy, align 8, !dbg !8623
  %batch_lock32 = getelementptr inbounds %struct.batched_entropy, %struct.batched_entropy* %22, i32 0, i32 2, !dbg !8624
  %23 = load i64, i64* %flags, align 8, !dbg !8625
  store %struct.spinlock* %batch_lock32, %struct.spinlock** %lock.addr.i33, align 8
  store i64 %23, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !8626
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !8626
  store i32 1, i32* %tmp.i, align 4, !dbg !8626
  %24 = load i32, i32* %tmp.i, align 4, !dbg !8626
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !8627
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !8627
  store i32 1, i32* %tmp8.i, align 4, !dbg !8627
  %25 = load i32, i32* %tmp8.i, align 4, !dbg !8627
  %26 = load i64, i64* %flags.addr.i, align 8, !dbg !8628
  call void @arch_local_irq_restore(i64 %26) #14, !dbg !8628
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8629, !srcloc !5715
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i33, align 8, !dbg !8630
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !8630
  %rlock.i34 = bitcast %union.anon.0* %28 to %struct.raw_spinlock*, !dbg !8630
  br label %for.inc, !dbg !8631

for.inc:                                          ; preds = %do.end28
  %29 = load i32, i32* %cpu, align 4, !dbg !8569
  %inc = add i32 %29, 1, !dbg !8569
  store i32 %inc, i32* %cpu, align 4, !dbg !8569
  br label %for.cond, !dbg !8569, !llvm.loop !8632

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8634
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_mix_pool_bytes_nolock(i8* %pool_name, i32 %bytes, i64 %IP) #1 !dbg !8635 {
entry:
  %pool_name.addr = alloca i8*, align 8
  %bytes.addr = alloca i32, align 4
  %IP.addr = alloca i64, align 8
  store i8* %pool_name, i8** %pool_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pool_name.addr, metadata !8638, metadata !DIExpression()), !dbg !8639
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !8640, metadata !DIExpression()), !dbg !8639
  store i64 %IP, i64* %IP.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %IP.addr, metadata !8641, metadata !DIExpression()), !dbg !8639
  ret void, !dbg !8639
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #1 !dbg !8642 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !8649, metadata !DIExpression()), !dbg !8651
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !8653, metadata !DIExpression()), !dbg !8654
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !8655, metadata !DIExpression()), !dbg !8656
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8657, metadata !DIExpression()), !dbg !8659
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8661, metadata !DIExpression()), !dbg !8662
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8663, metadata !DIExpression()), !dbg !8665
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8667, metadata !DIExpression()), !dbg !8668
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8669, metadata !DIExpression()), !dbg !8670
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8671, metadata !DIExpression()), !dbg !8672
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8673
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8674
  %div = sdiv i64 %1, 64, !dbg !8674
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8675
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8673
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8676
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8677
  %conv.i = trunc i64 %4 to i32, !dbg !8677
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #14, !dbg !8678
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8679
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8679
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !8679
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8680
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !8680
  br i1 %8, label %cond.true, label %cond.false, !dbg !8680

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !8680
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !8680
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !8681
  %and.i = and i64 %11, 63, !dbg !8682
  %shl.i = shl i64 1, %and.i, !dbg !8683
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !8684
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !8685
  %shr.i = ashr i64 %13, 6, !dbg !8686
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !8684
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !8684
  %and1.i = and i64 %shl.i, %14, !dbg !8687
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !8688
  %conv = zext i1 %cmp.i to i32, !dbg !8680
  br label %cond.end, !dbg !8680

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !8680
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !8680
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !8689
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !8690
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #7, !dbg !8691, !srcloc !8692
  store i8 %19, i8* %oldbit.i, align 1, !dbg !8691
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !8693
  %tobool.i = trunc i8 %20 to i1, !dbg !8693
  %conv2 = zext i1 %tobool.i to i32, !dbg !8680
  br label %cond.end, !dbg !8680

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !8680
  %tobool = icmp ne i32 %cond, 0, !dbg !8680
  ret i1 %tobool, !dbg !8694
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @rdseed_long(i64* %v) #1 !dbg !8695 {
entry:
  %v.addr = alloca i64*, align 8
  %ok = alloca i8, align 1
  store i64* %v, i64** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %v.addr, metadata !8696, metadata !DIExpression()), !dbg !8697
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !8698, metadata !DIExpression()), !dbg !8699
  %0 = load i64*, i64** %v.addr, align 8, !dbg !8700
  %1 = call { i8, i64 } asm sideeffect "rdseed $1\0A\09/* output condition code c*/\0A", "={@ccc},=r,~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8701, !srcloc !8702
  %asmresult = extractvalue { i8, i64 } %1, 0, !dbg !8701
  %asmresult1 = extractvalue { i8, i64 } %1, 1, !dbg !8701
  store i8 %asmresult, i8* %ok, align 1, !dbg !8701
  store i64 %asmresult1, i64* %0, align 8, !dbg !8701
  %2 = load i8, i8* %ok, align 1, !dbg !8703
  %tobool = trunc i8 %2 to i1, !dbg !8703
  ret i1 %tobool, !dbg !8704
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #9

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #1 !dbg !8705 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8709, metadata !DIExpression()), !dbg !8710
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8711, metadata !DIExpression()), !dbg !8712
  ret i1 true, !dbg !8713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #1 !dbg !8714 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8718, metadata !DIExpression()), !dbg !8719
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8720, metadata !DIExpression()), !dbg !8721
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8722, metadata !DIExpression()), !dbg !8723
  ret void, !dbg !8724
}

; Function Attrs: noredzone
declare dso_local void @kill_fasync(%struct.fasync_struct**, i32, i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_credit_entropy_bits(i8* %pool_name, i32 %bits, i32 %entropy_count, i64 %IP) #1 !dbg !8725 {
entry:
  %pool_name.addr = alloca i8*, align 8
  %bits.addr = alloca i32, align 4
  %entropy_count.addr = alloca i32, align 4
  %IP.addr = alloca i64, align 8
  store i8* %pool_name, i8** %pool_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pool_name.addr, metadata !8728, metadata !DIExpression()), !dbg !8729
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !8730, metadata !DIExpression()), !dbg !8729
  store i32 %entropy_count, i32* %entropy_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %entropy_count.addr, metadata !8731, metadata !DIExpression()), !dbg !8729
  store i64 %IP, i64* %IP.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %IP.addr, metadata !8732, metadata !DIExpression()), !dbg !8729
  ret void, !dbg !8729
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @crng_reseed(%struct.crng_state* %crng, %struct.entropy_store* %r) #1 !dbg !8733 {
entry:
  %lock.addr.i57 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i57, metadata !5639, metadata !DIExpression()), !dbg !8736
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5630, metadata !DIExpression()), !dbg !8743
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !8745
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %crng.addr = alloca %struct.crng_state*, align 8
  %r.addr = alloca %struct.entropy_store*, align 8
  %flags = alloca i64, align 8
  %i = alloca i32, align 4
  %num = alloca i32, align 4
  %buf = alloca %union.anon.104, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy12 = alloca i64, align 8
  %__dummy213 = alloca i64, align 8
  %tmp16 = alloca i32, align 4
  %rv = alloca i64, align 8
  store %struct.crng_state* %crng, %struct.crng_state** %crng.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.crng_state** %crng.addr, metadata !8746, metadata !DIExpression()), !dbg !8747
  store %struct.entropy_store* %r, %struct.entropy_store** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.entropy_store** %r.addr, metadata !8748, metadata !DIExpression()), !dbg !8749
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8750, metadata !DIExpression()), !dbg !8751
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8752, metadata !DIExpression()), !dbg !8753
  call void @llvm.dbg.declare(metadata i32* %num, metadata !8754, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.declare(metadata %union.anon.104* %buf, metadata !8756, metadata !DIExpression()), !dbg !8762
  %0 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !8763
  %tobool = icmp ne %struct.entropy_store* %0, null, !dbg !8763
  br i1 %tobool, label %if.then, label %if.else, !dbg !8765

if.then:                                          ; preds = %entry
  %1 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !8766
  %2 = bitcast %union.anon.104* %buf to i8*, !dbg !8768
  %call = call i64 @extract_entropy(%struct.entropy_store* %1, i8* %2, i64 32, i32 16, i32 0) #13, !dbg !8769
  %conv = trunc i64 %call to i32, !dbg !8769
  store i32 %conv, i32* %num, align 4, !dbg !8770
  %3 = load i32, i32* %num, align 4, !dbg !8771
  %cmp = icmp eq i32 %3, 0, !dbg !8773
  br i1 %cmp, label %if.then2, label %if.end, !dbg !8774

if.then2:                                         ; preds = %if.then
  br label %if.end56, !dbg !8775

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !8776

if.else:                                          ; preds = %entry
  %block = bitcast %union.anon.104* %buf to [64 x i8]*, !dbg !8777
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %block, i64 0, i64 0, !dbg !8779
  call void @_extract_crng(%struct.crng_state* @primary_crng, i8* %arraydecay) #13, !dbg !8780
  %block3 = bitcast %union.anon.104* %buf to [64 x i8]*, !dbg !8781
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %block3, i64 0, i64 0, !dbg !8782
  call void @_crng_backtrack_protect(%struct.crng_state* @primary_crng, i8* %arraydecay4, i32 32) #13, !dbg !8783
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.end
  br label %do.body, !dbg !8784

do.body:                                          ; preds = %if.end5
  br label %do.body6, !dbg !8785

do.body6:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8786, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8789, metadata !DIExpression()), !dbg !8788
  %cmp7 = icmp eq i64* %__dummy, %__dummy2, !dbg !8788
  %conv8 = zext i1 %cmp7 to i32, !dbg !8788
  store i32 1, i32* %tmp, align 4, !dbg !8788
  %4 = load i32, i32* %tmp, align 4, !dbg !8788
  br label %do.body9, !dbg !8790

do.body9:                                         ; preds = %do.body6
  br label %do.body10, !dbg !8791

do.body10:                                        ; preds = %do.body9
  br label %do.body11, !dbg !8792

do.body11:                                        ; preds = %do.body10
  call void @llvm.dbg.declare(metadata i64* %__dummy12, metadata !8794, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.declare(metadata i64* %__dummy213, metadata !8798, metadata !DIExpression()), !dbg !8797
  %cmp14 = icmp eq i64* %__dummy12, %__dummy213, !dbg !8797
  %conv15 = zext i1 %cmp14 to i32, !dbg !8797
  store i32 1, i32* %tmp16, align 4, !dbg !8797
  %5 = load i32, i32* %tmp16, align 4, !dbg !8797
  %call17 = call i64 @arch_local_irq_save() #13, !dbg !8799
  store i64 %call17, i64* %flags, align 8, !dbg !8799
  br label %do.end, !dbg !8799

do.end:                                           ; preds = %do.body11
  br label %do.end18, !dbg !8792

do.end18:                                         ; preds = %do.end
  br label %do.body19, !dbg !8791

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8800, !srcloc !8801
  br label %do.body20, !dbg !8800

do.body20:                                        ; preds = %do.body19
  %6 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !8802
  %lock = getelementptr inbounds %struct.crng_state, %struct.crng_state* %6, i32 0, i32 2, !dbg !8802
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i57, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i57, align 8, !dbg !8803
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !8804
  %rlock.i58 = bitcast %union.anon.0* %8 to %struct.raw_spinlock*, !dbg !8804
  br label %do.end22, !dbg !8802

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !8800

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !8791

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !8790

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !8785

do.end26:                                         ; preds = %do.end25
  store i32 0, i32* %i, align 4, !dbg !8805
  br label %for.cond, !dbg !8807

for.cond:                                         ; preds = %for.inc, %do.end26
  %9 = load i32, i32* %i, align 4, !dbg !8808
  %cmp27 = icmp slt i32 %9, 8, !dbg !8810
  br i1 %cmp27, label %for.body, label %for.end, !dbg !8811

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %rv, metadata !8812, metadata !DIExpression()), !dbg !8814
  %call29 = call zeroext i1 @arch_get_random_seed_long(i64* %rv) #13, !dbg !8815
  br i1 %call29, label %if.end33, label %land.lhs.true, !dbg !8817

land.lhs.true:                                    ; preds = %for.body
  %call30 = call zeroext i1 @arch_get_random_long(i64* %rv) #13, !dbg !8818
  br i1 %call30, label %if.end33, label %if.then31, !dbg !8819

if.then31:                                        ; preds = %land.lhs.true
  %call32 = call i64 @get_cycles() #13, !dbg !8820
  store i64 %call32, i64* %rv, align 8, !dbg !8821
  br label %if.end33, !dbg !8822

if.end33:                                         ; preds = %if.then31, %land.lhs.true, %for.body
  %key = bitcast %union.anon.104* %buf to [8 x i32]*, !dbg !8823
  %10 = load i32, i32* %i, align 4, !dbg !8824
  %idxprom = sext i32 %10 to i64, !dbg !8825
  %arrayidx = getelementptr [8 x i32], [8 x i32]* %key, i64 0, i64 %idxprom, !dbg !8825
  %11 = load i32, i32* %arrayidx, align 4, !dbg !8825
  %conv34 = zext i32 %11 to i64, !dbg !8825
  %12 = load i64, i64* %rv, align 8, !dbg !8826
  %xor = xor i64 %conv34, %12, !dbg !8827
  %13 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !8828
  %state = getelementptr inbounds %struct.crng_state, %struct.crng_state* %13, i32 0, i32 0, !dbg !8829
  %14 = load i32, i32* %i, align 4, !dbg !8830
  %add = add i32 %14, 4, !dbg !8831
  %idxprom35 = sext i32 %add to i64, !dbg !8828
  %arrayidx36 = getelementptr [16 x i32], [16 x i32]* %state, i64 0, i64 %idxprom35, !dbg !8828
  %15 = load i32, i32* %arrayidx36, align 4, !dbg !8832
  %conv37 = zext i32 %15 to i64, !dbg !8832
  %xor38 = xor i64 %conv37, %xor, !dbg !8832
  %conv39 = trunc i64 %xor38 to i32, !dbg !8832
  store i32 %conv39, i32* %arrayidx36, align 4, !dbg !8832
  br label %for.inc, !dbg !8833

for.inc:                                          ; preds = %if.end33
  %16 = load i32, i32* %i, align 4, !dbg !8834
  %inc = add i32 %16, 1, !dbg !8834
  store i32 %inc, i32* %i, align 4, !dbg !8834
  br label %for.cond, !dbg !8835, !llvm.loop !8836

for.end:                                          ; preds = %for.cond
  %17 = bitcast %union.anon.104* %buf to i8*, !dbg !8838
  call void @memzero_explicit(i8* %17, i64 64) #13, !dbg !8839
  %18 = load volatile i64, i64* @jiffies, align 8, !dbg !8840
  %19 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !8841
  %init_time = getelementptr inbounds %struct.crng_state, %struct.crng_state* %19, i32 0, i32 1, !dbg !8842
  store i64 %18, i64* %init_time, align 8, !dbg !8843
  %20 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !8844
  %lock40 = getelementptr inbounds %struct.crng_state, %struct.crng_state* %20, i32 0, i32 2, !dbg !8845
  %21 = load i64, i64* %flags, align 8, !dbg !8846
  store %struct.spinlock* %lock40, %struct.spinlock** %lock.addr.i, align 8
  store i64 %21, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !8847
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !8847
  store i32 1, i32* %tmp.i, align 4, !dbg !8847
  %22 = load i32, i32* %tmp.i, align 4, !dbg !8847
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !8848
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !8848
  store i32 1, i32* %tmp8.i, align 4, !dbg !8848
  %23 = load i32, i32* %tmp8.i, align 4, !dbg !8848
  %24 = load i64, i64* %flags.addr.i, align 8, !dbg !8849
  call void @arch_local_irq_restore(i64 %24) #14, !dbg !8849
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8850, !srcloc !5715
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8851
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !8851
  %rlock.i = bitcast %union.anon.0* %26 to %struct.raw_spinlock*, !dbg !8851
  %27 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !8852
  %cmp41 = icmp eq %struct.crng_state* %27, @primary_crng, !dbg !8854
  br i1 %cmp41, label %land.lhs.true43, label %if.end56, !dbg !8855

land.lhs.true43:                                  ; preds = %for.end
  %28 = load i32, i32* @crng_init, align 4, !dbg !8856
  %cmp44 = icmp slt i32 %28, 2, !dbg !8857
  br i1 %cmp44, label %if.then46, label %if.end56, !dbg !8858

if.then46:                                        ; preds = %land.lhs.true43
  call void @invalidate_batched_entropy() #13, !dbg !8859
  call void @numa_crng_init() #13, !dbg !8861
  store i32 2, i32* @crng_init, align 4, !dbg !8862
  call void @process_random_ready_list() #13, !dbg !8863
  call void @__wake_up(%struct.wait_queue_head* @crng_init_wait, i32 1, i32 1, i8* null) #13, !dbg !8864
  call void @kill_fasync(%struct.fasync_struct** @fasync, i32 29, i32 1) #13, !dbg !8865
  %call47 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0)) #15, !dbg !8866
  %29 = load i32, i32* getelementptr inbounds (%struct.ratelimit_state, %struct.ratelimit_state* @unseeded_warning, i32 0, i32 4), align 4, !dbg !8867
  %tobool48 = icmp ne i32 %29, 0, !dbg !8869
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !8870

if.then49:                                        ; preds = %if.then46
  %30 = load i32, i32* getelementptr inbounds (%struct.ratelimit_state, %struct.ratelimit_state* @unseeded_warning, i32 0, i32 4), align 4, !dbg !8871
  %call50 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.12, i64 0, i64 0), i32 %30) #15, !dbg !8871
  store i32 0, i32* getelementptr inbounds (%struct.ratelimit_state, %struct.ratelimit_state* @unseeded_warning, i32 0, i32 4), align 4, !dbg !8873
  br label %if.end51, !dbg !8874

if.end51:                                         ; preds = %if.then49, %if.then46
  %31 = load i32, i32* getelementptr inbounds (%struct.ratelimit_state, %struct.ratelimit_state* @urandom_warning, i32 0, i32 4), align 4, !dbg !8875
  %tobool52 = icmp ne i32 %31, 0, !dbg !8877
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !8878

if.then53:                                        ; preds = %if.end51
  %32 = load i32, i32* getelementptr inbounds (%struct.ratelimit_state, %struct.ratelimit_state* @urandom_warning, i32 0, i32 4), align 4, !dbg !8879
  %call54 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13, i64 0, i64 0), i32 %32) #15, !dbg !8879
  store i32 0, i32* getelementptr inbounds (%struct.ratelimit_state, %struct.ratelimit_state* @urandom_warning, i32 0, i32 4), align 4, !dbg !8881
  br label %if.end55, !dbg !8882

if.end55:                                         ; preds = %if.then53, %if.end51
  br label %if.end56, !dbg !8883

if.end56:                                         ; preds = %if.then2, %if.end55, %land.lhs.true43, %for.end
  ret void, !dbg !8884
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #1 !dbg !8885 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8886, metadata !DIExpression()), !dbg !8887
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8888, metadata !DIExpression()), !dbg !8889
  ret i1 true, !dbg !8890
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @extract_entropy(%struct.entropy_store* %r, i8* %buf, i64 %nbytes, i32 %min, i32 %reserved) #1 !dbg !8891 {
entry:
  %r.addr = alloca %struct.entropy_store*, align 8
  %buf.addr = alloca i8*, align 8
  %nbytes.addr = alloca i64, align 8
  %min.addr = alloca i32, align 4
  %reserved.addr = alloca i32, align 4
  %tmp = alloca [10 x i8], align 1
  %flags = alloca i64, align 8
  store %struct.entropy_store* %r, %struct.entropy_store** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.entropy_store** %r.addr, metadata !8894, metadata !DIExpression()), !dbg !8895
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8896, metadata !DIExpression()), !dbg !8897
  store i64 %nbytes, i64* %nbytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !8898, metadata !DIExpression()), !dbg !8899
  store i32 %min, i32* %min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min.addr, metadata !8900, metadata !DIExpression()), !dbg !8901
  store i32 %reserved, i32* %reserved.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reserved.addr, metadata !8902, metadata !DIExpression()), !dbg !8903
  call void @llvm.dbg.declare(metadata [10 x i8]* %tmp, metadata !8904, metadata !DIExpression()), !dbg !8905
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8906, metadata !DIExpression()), !dbg !8907
  %0 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !8908
  %name = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %0, i32 0, i32 2, !dbg !8909
  %1 = load i8*, i8** %name, align 8, !dbg !8909
  %2 = load i64, i64* %nbytes.addr, align 8, !dbg !8910
  %conv = trunc i64 %2 to i32, !dbg !8910
  %3 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !8911
  %entropy_count = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %3, i32 0, i32 6, !dbg !8911
  %4 = load i32, i32* %entropy_count, align 4, !dbg !8911
  %shr = ashr i32 %4, 3, !dbg !8911
  %5 = call i8* @llvm.returnaddress(i32 0), !dbg !8912
  %6 = ptrtoint i8* %5 to i64, !dbg !8912
  call void @trace_extract_entropy(i8* %1, i32 %conv, i32 %shr, i64 %6) #13, !dbg !8913
  %7 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !8914
  %8 = load i64, i64* %nbytes.addr, align 8, !dbg !8915
  %9 = load i32, i32* %min.addr, align 4, !dbg !8916
  %10 = load i32, i32* %reserved.addr, align 4, !dbg !8917
  %call = call i64 @account(%struct.entropy_store* %7, i64 %8, i32 %9, i32 %10) #13, !dbg !8918
  store i64 %call, i64* %nbytes.addr, align 8, !dbg !8919
  %11 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !8920
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !8921
  %13 = load i64, i64* %nbytes.addr, align 8, !dbg !8922
  %call1 = call i64 @_extract_entropy(%struct.entropy_store* %11, i8* %12, i64 %13, i32 0) #13, !dbg !8923
  ret i64 %call1, !dbg !8924
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_extract_crng(%struct.crng_state* %crng, i8* %out) #1 !dbg !8925 {
entry:
  %lock.addr.i46 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i46, metadata !5630, metadata !DIExpression()), !dbg !8928
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !8930
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5639, metadata !DIExpression()), !dbg !8931
  %crng.addr = alloca %struct.crng_state*, align 8
  %out.addr = alloca i8*, align 8
  %v = alloca i64, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy16 = alloca i64, align 8
  %__dummy217 = alloca i64, align 8
  %tmp20 = alloca i32, align 4
  store %struct.crng_state* %crng, %struct.crng_state** %crng.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.crng_state** %crng.addr, metadata !8938, metadata !DIExpression()), !dbg !8939
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !8940, metadata !DIExpression()), !dbg !8941
  call void @llvm.dbg.declare(metadata i64* %v, metadata !8942, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8944, metadata !DIExpression()), !dbg !8945
  %0 = load i32, i32* @crng_init, align 4, !dbg !8946
  %cmp = icmp sgt i32 %0, 1, !dbg !8946
  %lnot = xor i1 %cmp, true, !dbg !8946
  %lnot1 = xor i1 %lnot, true, !dbg !8946
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8946
  %conv = sext i32 %lnot.ext to i64, !dbg !8946
  %tobool = icmp ne i64 %conv, 0, !dbg !8946
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8948

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !8949
  %init_time = getelementptr inbounds %struct.crng_state, %struct.crng_state* %1, i32 0, i32 1, !dbg !8949
  %2 = load i64, i64* %init_time, align 8, !dbg !8949
  %3 = load i64, i64* @crng_global_init_time, align 8, !dbg !8949
  %sub = sub i64 %2, %3, !dbg !8949
  %cmp2 = icmp slt i64 %sub, 0, !dbg !8949
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !8950

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !8951
  %init_time4 = getelementptr inbounds %struct.crng_state, %struct.crng_state* %4, i32 0, i32 1, !dbg !8951
  %5 = load i64, i64* %init_time4, align 8, !dbg !8951
  %add = add i64 %5, 75000, !dbg !8951
  %6 = load volatile i64, i64* @jiffies, align 8, !dbg !8951
  %sub5 = sub i64 %add, %6, !dbg !8951
  %cmp6 = icmp slt i64 %sub5, 0, !dbg !8951
  br i1 %cmp6, label %if.then, label %if.end, !dbg !8952

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %7 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !8953
  %8 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !8954
  %cmp8 = icmp eq %struct.crng_state* %8, @primary_crng, !dbg !8955
  %9 = zext i1 %cmp8 to i64, !dbg !8954
  %cond = select i1 %cmp8, %struct.entropy_store* @input_pool, %struct.entropy_store* null, !dbg !8954
  call void @crng_reseed(%struct.crng_state* %7, %struct.entropy_store* %cond) #13, !dbg !8956
  br label %if.end, !dbg !8956

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  br label %do.body, !dbg !8957

do.body:                                          ; preds = %if.end
  br label %do.body10, !dbg !8958

do.body10:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8959, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8962, metadata !DIExpression()), !dbg !8961
  %cmp11 = icmp eq i64* %__dummy, %__dummy2, !dbg !8961
  %conv12 = zext i1 %cmp11 to i32, !dbg !8961
  store i32 1, i32* %tmp, align 4, !dbg !8961
  %10 = load i32, i32* %tmp, align 4, !dbg !8961
  br label %do.body13, !dbg !8963

do.body13:                                        ; preds = %do.body10
  br label %do.body14, !dbg !8964

do.body14:                                        ; preds = %do.body13
  br label %do.body15, !dbg !8965

do.body15:                                        ; preds = %do.body14
  call void @llvm.dbg.declare(metadata i64* %__dummy16, metadata !8967, metadata !DIExpression()), !dbg !8970
  call void @llvm.dbg.declare(metadata i64* %__dummy217, metadata !8971, metadata !DIExpression()), !dbg !8970
  %cmp18 = icmp eq i64* %__dummy16, %__dummy217, !dbg !8970
  %conv19 = zext i1 %cmp18 to i32, !dbg !8970
  store i32 1, i32* %tmp20, align 4, !dbg !8970
  %11 = load i32, i32* %tmp20, align 4, !dbg !8970
  %call = call i64 @arch_local_irq_save() #13, !dbg !8972
  store i64 %call, i64* %flags, align 8, !dbg !8972
  br label %do.end, !dbg !8972

do.end:                                           ; preds = %do.body15
  br label %do.end21, !dbg !8965

do.end21:                                         ; preds = %do.end
  br label %do.body22, !dbg !8964

do.body22:                                        ; preds = %do.end21
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8973, !srcloc !8974
  br label %do.body23, !dbg !8973

do.body23:                                        ; preds = %do.body22
  %12 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !8975
  %lock = getelementptr inbounds %struct.crng_state, %struct.crng_state* %12, i32 0, i32 2, !dbg !8975
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8976
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !8977
  %rlock.i = bitcast %union.anon.0* %14 to %struct.raw_spinlock*, !dbg !8977
  br label %do.end25, !dbg !8975

do.end25:                                         ; preds = %do.body23
  br label %do.end26, !dbg !8973

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !8964

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !8963

do.end28:                                         ; preds = %do.end27
  br label %do.end29, !dbg !8958

do.end29:                                         ; preds = %do.end28
  %call30 = call zeroext i1 @arch_get_random_long(i64* %v) #13, !dbg !8978
  br i1 %call30, label %if.then31, label %if.end34, !dbg !8980

if.then31:                                        ; preds = %do.end29
  %15 = load i64, i64* %v, align 8, !dbg !8981
  %16 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !8982
  %state = getelementptr inbounds %struct.crng_state, %struct.crng_state* %16, i32 0, i32 0, !dbg !8983
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %state, i64 0, i64 14, !dbg !8982
  %17 = load i32, i32* %arrayidx, align 8, !dbg !8984
  %conv32 = zext i32 %17 to i64, !dbg !8984
  %xor = xor i64 %conv32, %15, !dbg !8984
  %conv33 = trunc i64 %xor to i32, !dbg !8984
  store i32 %conv33, i32* %arrayidx, align 8, !dbg !8984
  br label %if.end34, !dbg !8982

if.end34:                                         ; preds = %if.then31, %do.end29
  %18 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !8985
  %state35 = getelementptr inbounds %struct.crng_state, %struct.crng_state* %18, i32 0, i32 0, !dbg !8986
  %arrayidx36 = getelementptr [16 x i32], [16 x i32]* %state35, i64 0, i64 0, !dbg !8985
  %19 = load i8*, i8** %out.addr, align 8, !dbg !8987
  call void @chacha20_block(i32* %arrayidx36, i8* %19) #13, !dbg !8988
  %20 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !8989
  %state37 = getelementptr inbounds %struct.crng_state, %struct.crng_state* %20, i32 0, i32 0, !dbg !8991
  %arrayidx38 = getelementptr [16 x i32], [16 x i32]* %state37, i64 0, i64 12, !dbg !8989
  %21 = load i32, i32* %arrayidx38, align 8, !dbg !8989
  %cmp39 = icmp eq i32 %21, 0, !dbg !8992
  br i1 %cmp39, label %if.then41, label %if.end44, !dbg !8993

if.then41:                                        ; preds = %if.end34
  %22 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !8994
  %state42 = getelementptr inbounds %struct.crng_state, %struct.crng_state* %22, i32 0, i32 0, !dbg !8995
  %arrayidx43 = getelementptr [16 x i32], [16 x i32]* %state42, i64 0, i64 13, !dbg !8994
  %23 = load i32, i32* %arrayidx43, align 4, !dbg !8996
  %inc = add i32 %23, 1, !dbg !8996
  store i32 %inc, i32* %arrayidx43, align 4, !dbg !8996
  br label %if.end44, !dbg !8994

if.end44:                                         ; preds = %if.then41, %if.end34
  %24 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !8997
  %lock45 = getelementptr inbounds %struct.crng_state, %struct.crng_state* %24, i32 0, i32 2, !dbg !8998
  %25 = load i64, i64* %flags, align 8, !dbg !8999
  store %struct.spinlock* %lock45, %struct.spinlock** %lock.addr.i46, align 8
  store i64 %25, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !9000
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !9000
  store i32 1, i32* %tmp.i, align 4, !dbg !9000
  %26 = load i32, i32* %tmp.i, align 4, !dbg !9000
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !9001
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !9001
  store i32 1, i32* %tmp8.i, align 4, !dbg !9001
  %27 = load i32, i32* %tmp8.i, align 4, !dbg !9001
  %28 = load i64, i64* %flags.addr.i, align 8, !dbg !9002
  call void @arch_local_irq_restore(i64 %28) #14, !dbg !9002
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9003, !srcloc !5715
  %29 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i46, align 8, !dbg !9004
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0, !dbg !9004
  %rlock.i47 = bitcast %union.anon.0* %30 to %struct.raw_spinlock*, !dbg !9004
  ret void, !dbg !9005
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_crng_backtrack_protect(%struct.crng_state* %crng, i8* %tmp, i32 %used) #1 !dbg !9006 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !5630, metadata !DIExpression()), !dbg !9009
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !9011
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5639, metadata !DIExpression()), !dbg !9012
  %crng.addr = alloca %struct.crng_state*, align 8
  %tmp.addr = alloca i8*, align 8
  %used.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %s = alloca i32*, align 8
  %d = alloca i32*, align 8
  %i = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.crng_state* %crng, %struct.crng_state** %crng.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.crng_state** %crng.addr, metadata !9019, metadata !DIExpression()), !dbg !9020
  store i8* %tmp, i8** %tmp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmp.addr, metadata !9021, metadata !DIExpression()), !dbg !9022
  store i32 %used, i32* %used.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %used.addr, metadata !9023, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9025, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.declare(metadata i32** %s, metadata !9027, metadata !DIExpression()), !dbg !9028
  call void @llvm.dbg.declare(metadata i32** %d, metadata !9029, metadata !DIExpression()), !dbg !9030
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9031, metadata !DIExpression()), !dbg !9032
  %0 = load i32, i32* %used.addr, align 4, !dbg !9033
  %sub = sub i32 %0, 1, !dbg !9033
  %or = or i32 %sub, 3, !dbg !9033
  %add = add i32 %or, 1, !dbg !9033
  store i32 %add, i32* %used.addr, align 4, !dbg !9034
  %1 = load i32, i32* %used.addr, align 4, !dbg !9035
  %add1 = add i32 %1, 32, !dbg !9037
  %cmp = icmp sgt i32 %add1, 64, !dbg !9038
  br i1 %cmp, label %if.then, label %if.end, !dbg !9039

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %tmp.addr, align 8, !dbg !9040
  call void @extract_crng(i8* %2) #13, !dbg !9042
  store i32 0, i32* %used.addr, align 4, !dbg !9043
  br label %if.end, !dbg !9044

if.end:                                           ; preds = %if.then, %entry
  br label %do.body, !dbg !9045

do.body:                                          ; preds = %if.end
  br label %do.body2, !dbg !9046

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9047, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9050, metadata !DIExpression()), !dbg !9049
  %cmp3 = icmp eq i64* %__dummy, %__dummy2, !dbg !9049
  %conv = zext i1 %cmp3 to i32, !dbg !9049
  store i32 1, i32* %tmp4, align 4, !dbg !9049
  %3 = load i32, i32* %tmp4, align 4, !dbg !9049
  br label %do.body5, !dbg !9051

do.body5:                                         ; preds = %do.body2
  br label %do.body6, !dbg !9052

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !9053

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !9055, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !9059, metadata !DIExpression()), !dbg !9058
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !9058
  %conv11 = zext i1 %cmp10 to i32, !dbg !9058
  store i32 1, i32* %tmp12, align 4, !dbg !9058
  %4 = load i32, i32* %tmp12, align 4, !dbg !9058
  %call = call i64 @arch_local_irq_save() #13, !dbg !9060
  store i64 %call, i64* %flags, align 8, !dbg !9060
  br label %do.end, !dbg !9060

do.end:                                           ; preds = %do.body7
  br label %do.end13, !dbg !9053

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !9052

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9061, !srcloc !9062
  br label %do.body15, !dbg !9061

do.body15:                                        ; preds = %do.body14
  %5 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !9063
  %lock = getelementptr inbounds %struct.crng_state, %struct.crng_state* %5, i32 0, i32 2, !dbg !9063
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9064
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !9065
  %rlock.i = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !9065
  br label %do.end17, !dbg !9063

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !9061

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9052

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !9051

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9046

do.end21:                                         ; preds = %do.end20
  %8 = load i8*, i8** %tmp.addr, align 8, !dbg !9066
  %9 = load i32, i32* %used.addr, align 4, !dbg !9067
  %idxprom = sext i32 %9 to i64, !dbg !9066
  %arrayidx = getelementptr i8, i8* %8, i64 %idxprom, !dbg !9066
  %10 = bitcast i8* %arrayidx to i32*, !dbg !9068
  store i32* %10, i32** %s, align 8, !dbg !9069
  %11 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !9070
  %state = getelementptr inbounds %struct.crng_state, %struct.crng_state* %11, i32 0, i32 0, !dbg !9071
  %arrayidx22 = getelementptr [16 x i32], [16 x i32]* %state, i64 0, i64 4, !dbg !9070
  store i32* %arrayidx22, i32** %d, align 8, !dbg !9072
  store i32 0, i32* %i, align 4, !dbg !9073
  br label %for.cond, !dbg !9075

for.cond:                                         ; preds = %for.inc, %do.end21
  %12 = load i32, i32* %i, align 4, !dbg !9076
  %cmp23 = icmp slt i32 %12, 8, !dbg !9078
  br i1 %cmp23, label %for.body, label %for.end, !dbg !9079

for.body:                                         ; preds = %for.cond
  %13 = load i32*, i32** %s, align 8, !dbg !9080
  %incdec.ptr = getelementptr i32, i32* %13, i32 1, !dbg !9080
  store i32* %incdec.ptr, i32** %s, align 8, !dbg !9080
  %14 = load i32, i32* %13, align 4, !dbg !9081
  %15 = load i32*, i32** %d, align 8, !dbg !9082
  %incdec.ptr25 = getelementptr i32, i32* %15, i32 1, !dbg !9082
  store i32* %incdec.ptr25, i32** %d, align 8, !dbg !9082
  %16 = load i32, i32* %15, align 4, !dbg !9083
  %xor = xor i32 %16, %14, !dbg !9083
  store i32 %xor, i32* %15, align 4, !dbg !9083
  br label %for.inc, !dbg !9084

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !9085
  %inc = add i32 %17, 1, !dbg !9085
  store i32 %inc, i32* %i, align 4, !dbg !9085
  br label %for.cond, !dbg !9086, !llvm.loop !9087

for.end:                                          ; preds = %for.cond
  %18 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !9089
  %lock26 = getelementptr inbounds %struct.crng_state, %struct.crng_state* %18, i32 0, i32 2, !dbg !9090
  %19 = load i64, i64* %flags, align 8, !dbg !9091
  store %struct.spinlock* %lock26, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !9092
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !9092
  store i32 1, i32* %tmp.i, align 4, !dbg !9092
  %20 = load i32, i32* %tmp.i, align 4, !dbg !9092
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !9093
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !9093
  store i32 1, i32* %tmp8.i, align 4, !dbg !9093
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !9093
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !9094
  call void @arch_local_irq_restore(i64 %22) #14, !dbg !9094
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9095, !srcloc !5715
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !9096
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !9096
  %rlock.i28 = bitcast %union.anon.0* %24 to %struct.raw_spinlock*, !dbg !9096
  ret void, !dbg !9097
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @memzero_explicit(i8* %s, i64 %count) #1 !dbg !9098 {
entry:
  %s.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !9102, metadata !DIExpression()), !dbg !9103
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !9104, metadata !DIExpression()), !dbg !9105
  %0 = load i8*, i8** %s.addr, align 8, !dbg !9106
  %1 = load i64, i64* %count.addr, align 8, !dbg !9107
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %1, i1 false), !dbg !9108
  %2 = load i8*, i8** %s.addr, align 8, !dbg !9109
  call void asm sideeffect "", "r,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %2) #7, !dbg !9109, !srcloc !9110
  ret void, !dbg !9111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @numa_crng_init() #1 !dbg !9112 {
entry:
  ret void, !dbg !9113
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @process_random_ready_list() #1 !dbg !9114 {
entry:
  %lock.addr.i40 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i40, metadata !5630, metadata !DIExpression()), !dbg !9115
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !9117
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5639, metadata !DIExpression()), !dbg !9118
  %flags = alloca i64, align 8
  %rdy = alloca %struct.random_ready_callback*, align 8
  %tmp = alloca %struct.random_ready_callback*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp2 = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp22 = alloca %struct.random_ready_callback*, align 8
  %__mptr23 = alloca i8*, align 8
  %tmp26 = alloca %struct.random_ready_callback*, align 8
  %owner = alloca %struct.module*, align 8
  %__mptr33 = alloca i8*, align 8
  %tmp38 = alloca %struct.random_ready_callback*, align 8
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9125, metadata !DIExpression()), !dbg !9126
  call void @llvm.dbg.declare(metadata %struct.random_ready_callback** %rdy, metadata !9127, metadata !DIExpression()), !dbg !9128
  call void @llvm.dbg.declare(metadata %struct.random_ready_callback** %tmp, metadata !9129, metadata !DIExpression()), !dbg !9130
  br label %do.body, !dbg !9131

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9132

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9133, metadata !DIExpression()), !dbg !9135
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9136, metadata !DIExpression()), !dbg !9135
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9135
  %conv = zext i1 %cmp to i32, !dbg !9135
  store i32 1, i32* %tmp2, align 4, !dbg !9135
  %0 = load i32, i32* %tmp2, align 4, !dbg !9135
  br label %do.body3, !dbg !9137

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !9138

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !9139

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !9141, metadata !DIExpression()), !dbg !9144
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !9145, metadata !DIExpression()), !dbg !9144
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !9144
  %conv9 = zext i1 %cmp8 to i32, !dbg !9144
  store i32 1, i32* %tmp10, align 4, !dbg !9144
  %1 = load i32, i32* %tmp10, align 4, !dbg !9144
  %call = call i64 @arch_local_irq_save() #13, !dbg !9146
  store i64 %call, i64* %flags, align 8, !dbg !9146
  br label %do.end, !dbg !9146

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !9139

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !9138

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9147, !srcloc !9148
  br label %do.body13, !dbg !9147

do.body13:                                        ; preds = %do.body12
  store %struct.spinlock* @random_ready_list_lock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9149
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !9150
  %rlock.i = bitcast %union.anon.0* %3 to %struct.raw_spinlock*, !dbg !9150
  br label %do.end15, !dbg !9151

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !9147

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9138

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9137

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9132

do.end19:                                         ; preds = %do.end18
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9152, metadata !DIExpression()), !dbg !9155
  %4 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @random_ready_list, i32 0, i32 0), align 8, !dbg !9155
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !9155
  store i8* %5, i8** %__mptr, align 8, !dbg !9155
  br label %do.body20, !dbg !9155

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !9156

do.end21:                                         ; preds = %do.body20
  %6 = load i8*, i8** %__mptr, align 8, !dbg !9155
  %add.ptr = getelementptr i8, i8* %6, i64 0, !dbg !9155
  %7 = bitcast i8* %add.ptr to %struct.random_ready_callback*, !dbg !9155
  store %struct.random_ready_callback* %7, %struct.random_ready_callback** %tmp22, align 8, !dbg !9156
  %8 = load %struct.random_ready_callback*, %struct.random_ready_callback** %tmp22, align 8, !dbg !9155
  store %struct.random_ready_callback* %8, %struct.random_ready_callback** %rdy, align 8, !dbg !9158
  call void @llvm.dbg.declare(metadata i8** %__mptr23, metadata !9159, metadata !DIExpression()), !dbg !9161
  %9 = load %struct.random_ready_callback*, %struct.random_ready_callback** %rdy, align 8, !dbg !9161
  %list = getelementptr inbounds %struct.random_ready_callback, %struct.random_ready_callback* %9, i32 0, i32 0, !dbg !9161
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !9161
  %10 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9161
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !9161
  store i8* %11, i8** %__mptr23, align 8, !dbg !9161
  br label %do.body24, !dbg !9161

do.body24:                                        ; preds = %do.end21
  br label %do.end25, !dbg !9162

do.end25:                                         ; preds = %do.body24
  %12 = load i8*, i8** %__mptr23, align 8, !dbg !9161
  %add.ptr27 = getelementptr i8, i8* %12, i64 0, !dbg !9161
  %13 = bitcast i8* %add.ptr27 to %struct.random_ready_callback*, !dbg !9161
  store %struct.random_ready_callback* %13, %struct.random_ready_callback** %tmp26, align 8, !dbg !9162
  %14 = load %struct.random_ready_callback*, %struct.random_ready_callback** %tmp26, align 8, !dbg !9161
  store %struct.random_ready_callback* %14, %struct.random_ready_callback** %tmp, align 8, !dbg !9158
  br label %for.cond, !dbg !9158

for.cond:                                         ; preds = %do.end37, %do.end25
  %15 = load %struct.random_ready_callback*, %struct.random_ready_callback** %rdy, align 8, !dbg !9164
  %list28 = getelementptr inbounds %struct.random_ready_callback, %struct.random_ready_callback* %15, i32 0, i32 0, !dbg !9164
  %cmp29 = icmp eq %struct.list_head* %list28, @random_ready_list, !dbg !9164
  %lnot = xor i1 %cmp29, true, !dbg !9164
  br i1 %lnot, label %for.body, label %for.end, !dbg !9158

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.module** %owner, metadata !9166, metadata !DIExpression()), !dbg !9168
  %16 = load %struct.random_ready_callback*, %struct.random_ready_callback** %rdy, align 8, !dbg !9169
  %owner31 = getelementptr inbounds %struct.random_ready_callback, %struct.random_ready_callback* %16, i32 0, i32 2, !dbg !9170
  %17 = load %struct.module*, %struct.module** %owner31, align 8, !dbg !9170
  store %struct.module* %17, %struct.module** %owner, align 8, !dbg !9168
  %18 = load %struct.random_ready_callback*, %struct.random_ready_callback** %rdy, align 8, !dbg !9171
  %list32 = getelementptr inbounds %struct.random_ready_callback, %struct.random_ready_callback* %18, i32 0, i32 0, !dbg !9172
  call void @list_del_init(%struct.list_head* %list32) #13, !dbg !9173
  %19 = load %struct.random_ready_callback*, %struct.random_ready_callback** %rdy, align 8, !dbg !9174
  %func = getelementptr inbounds %struct.random_ready_callback, %struct.random_ready_callback* %19, i32 0, i32 1, !dbg !9175
  %20 = load void (%struct.random_ready_callback*)*, void (%struct.random_ready_callback*)** %func, align 8, !dbg !9175
  %21 = load %struct.random_ready_callback*, %struct.random_ready_callback** %rdy, align 8, !dbg !9176
  call void %20(%struct.random_ready_callback* %21) #13, !dbg !9174
  %22 = load %struct.module*, %struct.module** %owner, align 8, !dbg !9177
  call void @module_put(%struct.module* %22) #13, !dbg !9178
  br label %for.inc, !dbg !9179

for.inc:                                          ; preds = %for.body
  %23 = load %struct.random_ready_callback*, %struct.random_ready_callback** %tmp, align 8, !dbg !9164
  store %struct.random_ready_callback* %23, %struct.random_ready_callback** %rdy, align 8, !dbg !9164
  call void @llvm.dbg.declare(metadata i8** %__mptr33, metadata !9180, metadata !DIExpression()), !dbg !9182
  %24 = load %struct.random_ready_callback*, %struct.random_ready_callback** %tmp, align 8, !dbg !9182
  %list34 = getelementptr inbounds %struct.random_ready_callback, %struct.random_ready_callback* %24, i32 0, i32 0, !dbg !9182
  %next35 = getelementptr inbounds %struct.list_head, %struct.list_head* %list34, i32 0, i32 0, !dbg !9182
  %25 = load %struct.list_head*, %struct.list_head** %next35, align 8, !dbg !9182
  %26 = bitcast %struct.list_head* %25 to i8*, !dbg !9182
  store i8* %26, i8** %__mptr33, align 8, !dbg !9182
  br label %do.body36, !dbg !9182

do.body36:                                        ; preds = %for.inc
  br label %do.end37, !dbg !9183

do.end37:                                         ; preds = %do.body36
  %27 = load i8*, i8** %__mptr33, align 8, !dbg !9182
  %add.ptr39 = getelementptr i8, i8* %27, i64 0, !dbg !9182
  %28 = bitcast i8* %add.ptr39 to %struct.random_ready_callback*, !dbg !9182
  store %struct.random_ready_callback* %28, %struct.random_ready_callback** %tmp38, align 8, !dbg !9183
  %29 = load %struct.random_ready_callback*, %struct.random_ready_callback** %tmp38, align 8, !dbg !9182
  store %struct.random_ready_callback* %29, %struct.random_ready_callback** %tmp, align 8, !dbg !9164
  br label %for.cond, !dbg !9164, !llvm.loop !9185

for.end:                                          ; preds = %for.cond
  %30 = load i64, i64* %flags, align 8, !dbg !9187
  store %struct.spinlock* @random_ready_list_lock, %struct.spinlock** %lock.addr.i40, align 8
  store i64 %30, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !9188
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !9188
  store i32 1, i32* %tmp.i, align 4, !dbg !9188
  %31 = load i32, i32* %tmp.i, align 4, !dbg !9188
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !9189
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !9189
  store i32 1, i32* %tmp8.i, align 4, !dbg !9189
  %32 = load i32, i32* %tmp8.i, align 4, !dbg !9189
  %33 = load i64, i64* %flags.addr.i, align 8, !dbg !9190
  call void @arch_local_irq_restore(i64 %33) #14, !dbg !9190
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9191, !srcloc !5715
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i40, align 8, !dbg !9192
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !9192
  %rlock.i41 = bitcast %union.anon.0* %35 to %struct.raw_spinlock*, !dbg !9192
  ret void, !dbg !9193
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_extract_entropy(i8* %pool_name, i32 %nbytes, i32 %entropy_count, i64 %IP) #1 !dbg !9194 {
entry:
  %pool_name.addr = alloca i8*, align 8
  %nbytes.addr = alloca i32, align 4
  %entropy_count.addr = alloca i32, align 4
  %IP.addr = alloca i64, align 8
  store i8* %pool_name, i8** %pool_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pool_name.addr, metadata !9195, metadata !DIExpression()), !dbg !9196
  store i32 %nbytes, i32* %nbytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbytes.addr, metadata !9197, metadata !DIExpression()), !dbg !9196
  store i32 %entropy_count, i32* %entropy_count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %entropy_count.addr, metadata !9198, metadata !DIExpression()), !dbg !9196
  store i64 %IP, i64* %IP.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %IP.addr, metadata !9199, metadata !DIExpression()), !dbg !9196
  ret void, !dbg !9196
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @account(%struct.entropy_store* %r, i64 %nbytes, i32 %min, i32 %reserved) #1 !dbg !9200 {
entry:
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6682, metadata !DIExpression()), !dbg !9203
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6694, metadata !DIExpression()), !dbg !9207
  %r.addr = alloca %struct.entropy_store*, align 8
  %nbytes.addr = alloca i64, align 8
  %min.addr = alloca i32, align 4
  %reserved.addr = alloca i32, align 4
  %entropy_count = alloca i32, align 4
  %orig = alloca i32, align 4
  %have_bytes = alloca i32, align 4
  %ibytes = alloca i64, align 8
  %nfrac = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x329 = alloca i64, align 8
  %__UNIQUE_ID___y330 = alloca i64, align 8
  %tmp19 = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp50 = alloca i64, align 8
  %__ai_ptr = alloca i32*, align 8
  %tmp69 = alloca i32, align 4
  %__ret = alloca i32, align 4
  %__old = alloca i32, align 4
  %__new = alloca i32, align 4
  %__ptr = alloca i32*, align 8
  %tmp70 = alloca i32, align 4
  store %struct.entropy_store* %r, %struct.entropy_store** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.entropy_store** %r.addr, metadata !9208, metadata !DIExpression()), !dbg !9209
  store i64 %nbytes, i64* %nbytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !9210, metadata !DIExpression()), !dbg !9211
  store i32 %min, i32* %min.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min.addr, metadata !9212, metadata !DIExpression()), !dbg !9213
  store i32 %reserved, i32* %reserved.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reserved.addr, metadata !9214, metadata !DIExpression()), !dbg !9215
  call void @llvm.dbg.declare(metadata i32* %entropy_count, metadata !9216, metadata !DIExpression()), !dbg !9217
  call void @llvm.dbg.declare(metadata i32* %orig, metadata !9218, metadata !DIExpression()), !dbg !9219
  call void @llvm.dbg.declare(metadata i32* %have_bytes, metadata !9220, metadata !DIExpression()), !dbg !9221
  call void @llvm.dbg.declare(metadata i64* %ibytes, metadata !9222, metadata !DIExpression()), !dbg !9223
  call void @llvm.dbg.declare(metadata i64* %nfrac, metadata !9224, metadata !DIExpression()), !dbg !9225
  br label %do.body, !dbg !9226

do.body:                                          ; preds = %entry
  %0 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9227
  %entropy_count1 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %0, i32 0, i32 6, !dbg !9227
  %1 = load i32, i32* %entropy_count1, align 4, !dbg !9227
  %2 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9227
  %poolinfo = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %2, i32 0, i32 0, !dbg !9227
  %3 = load %struct.poolinfo*, %struct.poolinfo** %poolinfo, align 8, !dbg !9227
  %poolfracbits = getelementptr inbounds %struct.poolinfo, %struct.poolinfo* %3, i32 0, i32 3, !dbg !9227
  %4 = load i32, i32* %poolfracbits, align 4, !dbg !9227
  %cmp = icmp sgt i32 %1, %4, !dbg !9227
  %lnot = xor i1 %cmp, true, !dbg !9227
  %lnot2 = xor i1 %lnot, true, !dbg !9227
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !9227
  %conv = sext i32 %lnot.ext to i64, !dbg !9227
  %tobool = icmp ne i64 %conv, 0, !dbg !9227
  br i1 %tobool, label %if.then, label %if.end, !dbg !9230

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !9227

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !9231

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !9233

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !9231

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i32 1349, i32 0, i64 12) #7, !dbg !9235, !srcloc !9237
  br label %do.end6, !dbg !9235

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !9231

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 327) #7, !dbg !9238, !srcloc !9241
  unreachable, !dbg !9242

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !9231

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !9231

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !9230

do.end10:                                         ; preds = %if.end
  br label %retry, !dbg !9230

retry:                                            ; preds = %if.then73, %do.end10
  call void @llvm.dbg.label(metadata !9243), !dbg !9244
  br label %do.body11, !dbg !9245

do.body11:                                        ; preds = %retry
  br label %do.end12, !dbg !9247

do.end12:                                         ; preds = %do.body11
  %5 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9245
  %entropy_count13 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %5, i32 0, i32 6, !dbg !9245
  %6 = load volatile i32, i32* %entropy_count13, align 4, !dbg !9245
  store i32 %6, i32* %tmp, align 4, !dbg !9247
  %7 = load i32, i32* %tmp, align 4, !dbg !9245
  store i32 %7, i32* %orig, align 4, !dbg !9249
  store i32 %7, i32* %entropy_count, align 4, !dbg !9250
  %8 = load i64, i64* %nbytes.addr, align 8, !dbg !9251
  store i64 %8, i64* %ibytes, align 8, !dbg !9252
  %9 = load i32, i32* %entropy_count, align 4, !dbg !9253
  %shr = ashr i32 %9, 6, !dbg !9254
  store i32 %shr, i32* %have_bytes, align 4, !dbg !9255
  %10 = load i32, i32* %reserved.addr, align 4, !dbg !9256
  %11 = load i32, i32* %have_bytes, align 4, !dbg !9258
  %sub = sub i32 %11, %10, !dbg !9258
  store i32 %sub, i32* %have_bytes, align 4, !dbg !9258
  %cmp14 = icmp slt i32 %sub, 0, !dbg !9259
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !9260

if.then16:                                        ; preds = %do.end12
  store i32 0, i32* %have_bytes, align 4, !dbg !9261
  br label %if.end17, !dbg !9262

if.end17:                                         ; preds = %if.then16, %do.end12
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x329, metadata !9263, metadata !DIExpression()), !dbg !9265
  %12 = load i64, i64* %ibytes, align 8, !dbg !9265
  store i64 %12, i64* %__UNIQUE_ID___x329, align 8, !dbg !9265
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y330, metadata !9266, metadata !DIExpression()), !dbg !9265
  %13 = load i32, i32* %have_bytes, align 4, !dbg !9265
  %conv18 = sext i32 %13 to i64, !dbg !9265
  store i64 %conv18, i64* %__UNIQUE_ID___y330, align 8, !dbg !9265
  %14 = load i64, i64* %__UNIQUE_ID___x329, align 8, !dbg !9265
  %15 = load i64, i64* %__UNIQUE_ID___y330, align 8, !dbg !9265
  %cmp20 = icmp ult i64 %14, %15, !dbg !9265
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !9265

cond.true:                                        ; preds = %if.end17
  %16 = load i64, i64* %__UNIQUE_ID___x329, align 8, !dbg !9265
  br label %cond.end, !dbg !9265

cond.false:                                       ; preds = %if.end17
  %17 = load i64, i64* %__UNIQUE_ID___y330, align 8, !dbg !9265
  br label %cond.end, !dbg !9265

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %16, %cond.true ], [ %17, %cond.false ], !dbg !9265
  store i64 %cond, i64* %tmp19, align 8, !dbg !9265
  %18 = load i64, i64* %tmp19, align 8, !dbg !9265
  store i64 %18, i64* %ibytes, align 8, !dbg !9267
  %19 = load i64, i64* %ibytes, align 8, !dbg !9268
  %20 = load i32, i32* %min.addr, align 4, !dbg !9270
  %conv22 = sext i32 %20 to i64, !dbg !9270
  %cmp23 = icmp ult i64 %19, %conv22, !dbg !9271
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !9272

if.then25:                                        ; preds = %cond.end
  store i64 0, i64* %ibytes, align 8, !dbg !9273
  br label %if.end26, !dbg !9274

if.end26:                                         ; preds = %if.then25, %cond.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9275, metadata !DIExpression()), !dbg !9278
  %21 = load i32, i32* %entropy_count, align 4, !dbg !9278
  %cmp27 = icmp slt i32 %21, 0, !dbg !9278
  %lnot29 = xor i1 %cmp27, true, !dbg !9278
  %lnot31 = xor i1 %lnot29, true, !dbg !9278
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !9278
  store i32 %lnot.ext32, i32* %__ret_warn_on, align 4, !dbg !9278
  %22 = load i32, i32* %__ret_warn_on, align 4, !dbg !9279
  %tobool33 = icmp ne i32 %22, 0, !dbg !9279
  %lnot34 = xor i1 %tobool33, true, !dbg !9279
  %lnot36 = xor i1 %lnot34, true, !dbg !9279
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !9279
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !9279
  %tobool39 = icmp ne i64 %conv38, 0, !dbg !9279
  br i1 %tobool39, label %if.then40, label %if.end49, !dbg !9278

if.then40:                                        ; preds = %if.end26
  br label %do.body41, !dbg !9279

do.body41:                                        ; preds = %if.then40
  br label %do.body42, !dbg !9281

do.body42:                                        ; preds = %do.body41
  br label %do.end43, !dbg !9283

do.end43:                                         ; preds = %do.body42
  br label %do.body44, !dbg !9281

do.body44:                                        ; preds = %do.end43
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i32 1364, i32 2305, i64 12) #7, !dbg !9285, !srcloc !9287
  br label %do.end45, !dbg !9285

do.end45:                                         ; preds = %do.body44
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 331) #7, !dbg !9288, !srcloc !9290
  br label %do.body46, !dbg !9281

do.body46:                                        ; preds = %do.end45
  br label %do.end47, !dbg !9291

do.end47:                                         ; preds = %do.body46
  br label %do.end48, !dbg !9281

do.end48:                                         ; preds = %do.end47
  br label %if.end49, !dbg !9281

if.end49:                                         ; preds = %do.end48, %if.end26
  %23 = load i32, i32* %__ret_warn_on, align 4, !dbg !9278
  %tobool51 = icmp ne i32 %23, 0, !dbg !9278
  %lnot52 = xor i1 %tobool51, true, !dbg !9278
  %lnot54 = xor i1 %lnot52, true, !dbg !9278
  %lnot.ext55 = zext i1 %lnot54 to i32, !dbg !9278
  %conv56 = sext i32 %lnot.ext55 to i64, !dbg !9278
  store i64 %conv56, i64* %tmp50, align 8, !dbg !9279
  %24 = load i64, i64* %tmp50, align 8, !dbg !9278
  %tobool57 = icmp ne i64 %24, 0, !dbg !9293
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !9294

if.then58:                                        ; preds = %if.end49
  %25 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9295
  %name = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %25, i32 0, i32 2, !dbg !9295
  %26 = load i8*, i8** %name, align 8, !dbg !9295
  %27 = load i32, i32* %entropy_count, align 4, !dbg !9295
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14, i64 0, i64 0), i8* %26, i32 %27) #15, !dbg !9295
  store i32 0, i32* %entropy_count, align 4, !dbg !9297
  br label %if.end59, !dbg !9298

if.end59:                                         ; preds = %if.then58, %if.end49
  %28 = load i64, i64* %ibytes, align 8, !dbg !9299
  %shl = shl i64 %28, 6, !dbg !9300
  store i64 %shl, i64* %nfrac, align 8, !dbg !9301
  %29 = load i32, i32* %entropy_count, align 4, !dbg !9302
  %conv60 = sext i32 %29 to i64, !dbg !9304
  %30 = load i64, i64* %nfrac, align 8, !dbg !9305
  %cmp61 = icmp ugt i64 %conv60, %30, !dbg !9306
  br i1 %cmp61, label %if.then63, label %if.else, !dbg !9307

if.then63:                                        ; preds = %if.end59
  %31 = load i64, i64* %nfrac, align 8, !dbg !9308
  %32 = load i32, i32* %entropy_count, align 4, !dbg !9309
  %conv64 = sext i32 %32 to i64, !dbg !9309
  %sub65 = sub i64 %conv64, %31, !dbg !9309
  %conv66 = trunc i64 %sub65 to i32, !dbg !9309
  store i32 %conv66, i32* %entropy_count, align 4, !dbg !9309
  br label %if.end67, !dbg !9310

if.else:                                          ; preds = %if.end59
  store i32 0, i32* %entropy_count, align 4, !dbg !9311
  br label %if.end67

if.end67:                                         ; preds = %if.else, %if.then63
  call void @llvm.dbg.declare(metadata i32** %__ai_ptr, metadata !9312, metadata !DIExpression()), !dbg !9313
  %33 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9313
  %entropy_count68 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %33, i32 0, i32 6, !dbg !9313
  store i32* %entropy_count68, i32** %__ai_ptr, align 8, !dbg !9313
  %34 = load i32*, i32** %__ai_ptr, align 8, !dbg !9313
  %35 = bitcast i32* %34 to i8*, !dbg !9313
  store i8* %35, i8** %v.addr.i, align 8
  store i64 4, i64* %size.addr.i, align 8
  %36 = load i8*, i8** %v.addr.i, align 8, !dbg !9314
  %37 = load i64, i64* %size.addr.i, align 8, !dbg !9315
  %conv.i = trunc i64 %37 to i32, !dbg !9315
  %call.i = call zeroext i1 @kasan_check_write(i8* %36, i32 %conv.i) #14, !dbg !9316
  %38 = load i8*, i8** %v.addr.i, align 8, !dbg !9317
  %39 = load i64, i64* %size.addr.i, align 8, !dbg !9317
  call void @kcsan_check_access(i8* %38, i64 %39, i32 5) #14, !dbg !9317
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !9318, metadata !DIExpression()), !dbg !9320
  call void @llvm.dbg.declare(metadata i32* %__old, metadata !9321, metadata !DIExpression()), !dbg !9320
  %40 = load i32, i32* %orig, align 4, !dbg !9320
  store i32 %40, i32* %__old, align 4, !dbg !9320
  call void @llvm.dbg.declare(metadata i32* %__new, metadata !9322, metadata !DIExpression()), !dbg !9320
  %41 = load i32, i32* %entropy_count, align 4, !dbg !9320
  store i32 %41, i32* %__new, align 4, !dbg !9320
  call void @llvm.dbg.declare(metadata i32** %__ptr, metadata !9323, metadata !DIExpression()), !dbg !9320
  %42 = load i32*, i32** %__ai_ptr, align 8, !dbg !9320
  store i32* %42, i32** %__ptr, align 8, !dbg !9320
  %43 = load i32*, i32** %__ptr, align 8, !dbg !9320
  %44 = load i32, i32* %__new, align 4, !dbg !9320
  %45 = load i32, i32* %__old, align 4, !dbg !9320
  %46 = call i32 asm sideeffect "cmpxchgl $2,$1", "={ax},=*m,r,0,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %43, i32 %44, i32 %45, i32* %43) #7, !dbg !9320, !srcloc !9324
  store i32 %46, i32* %__ret, align 4, !dbg !9320
  %47 = load i32, i32* %__ret, align 4, !dbg !9320
  store i32 %47, i32* %tmp70, align 4, !dbg !9320
  %48 = load i32, i32* %tmp70, align 4, !dbg !9320
  store i32 %48, i32* %tmp69, align 4, !dbg !9313
  %49 = load i32, i32* %tmp69, align 4, !dbg !9313
  %50 = load i32, i32* %orig, align 4, !dbg !9325
  %cmp71 = icmp ne i32 %49, %50, !dbg !9326
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !9327

if.then73:                                        ; preds = %if.end67
  br label %retry, !dbg !9328

if.end74:                                         ; preds = %if.end67
  %51 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9329
  %name75 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %51, i32 0, i32 2, !dbg !9330
  %52 = load i8*, i8** %name75, align 8, !dbg !9330
  %53 = load i64, i64* %ibytes, align 8, !dbg !9331
  %mul = mul i64 8, %53, !dbg !9332
  %conv76 = trunc i64 %mul to i32, !dbg !9333
  call void @trace_debit_entropy(i8* %52, i32 %conv76) #13, !dbg !9334
  %54 = load i64, i64* %ibytes, align 8, !dbg !9335
  %tobool77 = icmp ne i64 %54, 0, !dbg !9335
  br i1 %tobool77, label %land.lhs.true, label %if.end83, !dbg !9337

land.lhs.true:                                    ; preds = %if.end74
  %55 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9338
  %entropy_count78 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %55, i32 0, i32 6, !dbg !9338
  %56 = load i32, i32* %entropy_count78, align 4, !dbg !9338
  %shr79 = ashr i32 %56, 3, !dbg !9338
  %57 = load i32, i32* @random_write_wakeup_bits, align 4, !dbg !9339
  %cmp80 = icmp slt i32 %shr79, %57, !dbg !9340
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !9341

if.then82:                                        ; preds = %land.lhs.true
  call void @__wake_up(%struct.wait_queue_head* @random_write_wait, i32 1, i32 1, i8* null) #13, !dbg !9342
  call void @kill_fasync(%struct.fasync_struct** @fasync, i32 29, i32 2) #13, !dbg !9344
  br label %if.end83, !dbg !9345

if.end83:                                         ; preds = %if.then82, %land.lhs.true, %if.end74
  %58 = load i64, i64* %ibytes, align 8, !dbg !9346
  ret i64 %58, !dbg !9347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_extract_entropy(%struct.entropy_store* %r, i8* %buf, i64 %nbytes, i32 %fips) #1 !dbg !9348 {
entry:
  %lock.addr.i38 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i38, metadata !5630, metadata !DIExpression()), !dbg !9351
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !9356
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5639, metadata !DIExpression()), !dbg !9357
  %r.addr = alloca %struct.entropy_store*, align 8
  %buf.addr = alloca i8*, align 8
  %nbytes.addr = alloca i64, align 8
  %fips.addr = alloca i32, align 4
  %ret = alloca i64, align 8
  %i = alloca i64, align 8
  %tmp = alloca [10 x i8], align 1
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %__UNIQUE_ID___x332 = alloca i32, align 4
  %__UNIQUE_ID___y333 = alloca i32, align 4
  %tmp32 = alloca i32, align 4
  store %struct.entropy_store* %r, %struct.entropy_store** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.entropy_store** %r.addr, metadata !9364, metadata !DIExpression()), !dbg !9365
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9366, metadata !DIExpression()), !dbg !9367
  store i64 %nbytes, i64* %nbytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !9368, metadata !DIExpression()), !dbg !9369
  store i32 %fips, i32* %fips.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fips.addr, metadata !9370, metadata !DIExpression()), !dbg !9371
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !9372, metadata !DIExpression()), !dbg !9373
  store i64 0, i64* %ret, align 8, !dbg !9373
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9374, metadata !DIExpression()), !dbg !9375
  call void @llvm.dbg.declare(metadata [10 x i8]* %tmp, metadata !9376, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9378, metadata !DIExpression()), !dbg !9379
  br label %while.cond, !dbg !9380

while.cond:                                       ; preds = %cond.end, %entry
  %0 = load i64, i64* %nbytes.addr, align 8, !dbg !9381
  %tobool = icmp ne i64 %0, 0, !dbg !9380
  br i1 %tobool, label %while.body, label %while.end, !dbg !9380

while.body:                                       ; preds = %while.cond
  %1 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9382
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %tmp, i64 0, i64 0, !dbg !9383
  call void @extract_buf(%struct.entropy_store* %1, i8* %arraydecay) #13, !dbg !9384
  %2 = load i32, i32* %fips.addr, align 4, !dbg !9385
  %tobool1 = icmp ne i32 %2, 0, !dbg !9385
  br i1 %tobool1, label %if.then, label %if.end30, !dbg !9386

if.then:                                          ; preds = %while.body
  br label %do.body, !dbg !9387

do.body:                                          ; preds = %if.then
  br label %do.body2, !dbg !9388

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9389, metadata !DIExpression()), !dbg !9391
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9392, metadata !DIExpression()), !dbg !9391
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9391
  %conv = zext i1 %cmp to i32, !dbg !9391
  store i32 1, i32* %tmp3, align 4, !dbg !9391
  %3 = load i32, i32* %tmp3, align 4, !dbg !9391
  br label %do.body4, !dbg !9393

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !9394

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !9395

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !9397, metadata !DIExpression()), !dbg !9400
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !9401, metadata !DIExpression()), !dbg !9400
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !9400
  %conv10 = zext i1 %cmp9 to i32, !dbg !9400
  store i32 1, i32* %tmp11, align 4, !dbg !9400
  %4 = load i32, i32* %tmp11, align 4, !dbg !9400
  %call = call i64 @arch_local_irq_save() #13, !dbg !9402
  store i64 %call, i64* %flags, align 8, !dbg !9402
  br label %do.end, !dbg !9402

do.end:                                           ; preds = %do.body6
  br label %do.end12, !dbg !9395

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !9394

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9403, !srcloc !9404
  br label %do.body14, !dbg !9403

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9405
  %lock = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %5, i32 0, i32 3, !dbg !9405
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9406
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !9407
  %rlock.i = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !9407
  br label %do.end16, !dbg !9405

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !9403

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9394

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9393

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !9388

do.end20:                                         ; preds = %do.end19
  %arraydecay21 = getelementptr inbounds [10 x i8], [10 x i8]* %tmp, i64 0, i64 0, !dbg !9408
  %8 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9410
  %last_data = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %8, i32 0, i32 8, !dbg !9411
  %arraydecay22 = getelementptr inbounds [10 x i8], [10 x i8]* %last_data, i64 0, i64 0, !dbg !9410
  %call23 = call i32 @memcmp(i8* %arraydecay21, i8* %arraydecay22, i64 10) #13, !dbg !9412
  %tobool24 = icmp ne i32 %call23, 0, !dbg !9412
  br i1 %tobool24, label %if.end, label %if.then25, !dbg !9413

if.then25:                                        ; preds = %do.end20
  call void (i8*, ...) @panic(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0)) #17, !dbg !9414
  unreachable, !dbg !9414

if.end:                                           ; preds = %do.end20
  %9 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9415
  %last_data26 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %9, i32 0, i32 8, !dbg !9416
  %arraydecay27 = getelementptr inbounds [10 x i8], [10 x i8]* %last_data26, i64 0, i64 0, !dbg !9417
  %arraydecay28 = getelementptr inbounds [10 x i8], [10 x i8]* %tmp, i64 0, i64 0, !dbg !9417
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay27, i8* align 1 %arraydecay28, i64 10, i1 false), !dbg !9417
  %10 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9418
  %lock29 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %10, i32 0, i32 3, !dbg !9419
  %11 = load i64, i64* %flags, align 8, !dbg !9420
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i38, align 8
  store i64 %11, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !9421
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !9421
  store i32 1, i32* %tmp.i, align 4, !dbg !9421
  %12 = load i32, i32* %tmp.i, align 4, !dbg !9421
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !9422
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !9422
  store i32 1, i32* %tmp8.i, align 4, !dbg !9422
  %13 = load i32, i32* %tmp8.i, align 4, !dbg !9422
  %14 = load i64, i64* %flags.addr.i, align 8, !dbg !9423
  call void @arch_local_irq_restore(i64 %14) #14, !dbg !9423
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9424, !srcloc !5715
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i38, align 8, !dbg !9425
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !9425
  %rlock.i39 = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !9425
  br label %if.end30, !dbg !9426

if.end30:                                         ; preds = %if.end, %while.body
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x332, metadata !9427, metadata !DIExpression()), !dbg !9429
  %17 = load i64, i64* %nbytes.addr, align 8, !dbg !9429
  %conv31 = trunc i64 %17 to i32, !dbg !9429
  store i32 %conv31, i32* %__UNIQUE_ID___x332, align 4, !dbg !9429
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y333, metadata !9430, metadata !DIExpression()), !dbg !9429
  store i32 10, i32* %__UNIQUE_ID___y333, align 4, !dbg !9429
  %18 = load i32, i32* %__UNIQUE_ID___x332, align 4, !dbg !9429
  %19 = load i32, i32* %__UNIQUE_ID___y333, align 4, !dbg !9429
  %cmp33 = icmp slt i32 %18, %19, !dbg !9429
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !9429

cond.true:                                        ; preds = %if.end30
  %20 = load i32, i32* %__UNIQUE_ID___x332, align 4, !dbg !9429
  br label %cond.end, !dbg !9429

cond.false:                                       ; preds = %if.end30
  %21 = load i32, i32* %__UNIQUE_ID___y333, align 4, !dbg !9429
  br label %cond.end, !dbg !9429

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %20, %cond.true ], [ %21, %cond.false ], !dbg !9429
  store i32 %cond, i32* %tmp32, align 4, !dbg !9429
  %22 = load i32, i32* %tmp32, align 4, !dbg !9429
  %conv35 = sext i32 %22 to i64, !dbg !9431
  store i64 %conv35, i64* %i, align 8, !dbg !9432
  %23 = load i8*, i8** %buf.addr, align 8, !dbg !9433
  %arraydecay36 = getelementptr inbounds [10 x i8], [10 x i8]* %tmp, i64 0, i64 0, !dbg !9434
  %24 = load i64, i64* %i, align 8, !dbg !9435
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %arraydecay36, i64 %24, i1 false), !dbg !9434
  %25 = load i64, i64* %i, align 8, !dbg !9436
  %26 = load i64, i64* %nbytes.addr, align 8, !dbg !9437
  %sub = sub i64 %26, %25, !dbg !9437
  store i64 %sub, i64* %nbytes.addr, align 8, !dbg !9437
  %27 = load i64, i64* %i, align 8, !dbg !9438
  %28 = load i8*, i8** %buf.addr, align 8, !dbg !9439
  %add.ptr = getelementptr i8, i8* %28, i64 %27, !dbg !9439
  store i8* %add.ptr, i8** %buf.addr, align 8, !dbg !9439
  %29 = load i64, i64* %i, align 8, !dbg !9440
  %30 = load i64, i64* %ret, align 8, !dbg !9441
  %add = add i64 %30, %29, !dbg !9441
  store i64 %add, i64* %ret, align 8, !dbg !9441
  br label %while.cond, !dbg !9380, !llvm.loop !9442

while.end:                                        ; preds = %while.cond
  %arraydecay37 = getelementptr inbounds [10 x i8], [10 x i8]* %tmp, i64 0, i64 0, !dbg !9444
  call void @memzero_explicit(i8* %arraydecay37, i64 10) #13, !dbg !9445
  %31 = load i64, i64* %ret, align 8, !dbg !9446
  ret i64 %31, !dbg !9447
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_debit_entropy(i8* %pool_name, i32 %debit_bits) #1 !dbg !9448 {
entry:
  %pool_name.addr = alloca i8*, align 8
  %debit_bits.addr = alloca i32, align 4
  store i8* %pool_name, i8** %pool_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pool_name.addr, metadata !9451, metadata !DIExpression()), !dbg !9452
  store i32 %debit_bits, i32* %debit_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %debit_bits.addr, metadata !9453, metadata !DIExpression()), !dbg !9452
  ret void, !dbg !9452
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @extract_buf(%struct.entropy_store* %r, i8* %out) #1 !dbg !9454 {
entry:
  %lock.addr.i51 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i51, metadata !5630, metadata !DIExpression()), !dbg !9457
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5637, metadata !DIExpression()), !dbg !9459
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5639, metadata !DIExpression()), !dbg !9460
  %r.addr = alloca %struct.entropy_store*, align 8
  %out.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %hash = alloca %union.anon.105, align 8
  %workspace = alloca [16 x i32], align 16
  %flags = alloca i64, align 8
  %v = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.entropy_store* %r, %struct.entropy_store** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.entropy_store** %r.addr, metadata !9467, metadata !DIExpression()), !dbg !9468
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !9469, metadata !DIExpression()), !dbg !9470
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9471, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.declare(metadata %union.anon.105* %hash, metadata !9473, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.declare(metadata [16 x i32]* %workspace, metadata !9481, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9483, metadata !DIExpression()), !dbg !9484
  %w = bitcast %union.anon.105* %hash to [5 x i32]*, !dbg !9485
  %arraydecay = getelementptr inbounds [5 x i32], [5 x i32]* %w, i64 0, i64 0, !dbg !9486
  call void @sha1_init(i32* %arraydecay) #13, !dbg !9487
  store i32 0, i32* %i, align 4, !dbg !9488
  br label %for.cond, !dbg !9490

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9491
  %conv = sext i32 %0 to i64, !dbg !9491
  %cmp = icmp ult i64 %conv, 3, !dbg !9493
  br i1 %cmp, label %for.body, label %for.end, !dbg !9494

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %v, metadata !9495, metadata !DIExpression()), !dbg !9497
  %call = call zeroext i1 @arch_get_random_long(i64* %v) #13, !dbg !9498
  br i1 %call, label %if.end, label %if.then, !dbg !9500

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !9501

if.end:                                           ; preds = %for.body
  %1 = load i64, i64* %v, align 8, !dbg !9502
  %l = bitcast %union.anon.105* %hash to [3 x i64]*, !dbg !9503
  %2 = load i32, i32* %i, align 4, !dbg !9504
  %idxprom = sext i32 %2 to i64, !dbg !9505
  %arrayidx = getelementptr [3 x i64], [3 x i64]* %l, i64 0, i64 %idxprom, !dbg !9505
  store i64 %1, i64* %arrayidx, align 8, !dbg !9506
  br label %for.inc, !dbg !9507

for.inc:                                          ; preds = %if.end
  %3 = load i32, i32* %i, align 4, !dbg !9508
  %inc = add i32 %3, 1, !dbg !9508
  store i32 %inc, i32* %i, align 4, !dbg !9508
  br label %for.cond, !dbg !9509, !llvm.loop !9510

for.end:                                          ; preds = %if.then, %for.cond
  br label %do.body, !dbg !9512

do.body:                                          ; preds = %for.end
  br label %do.body2, !dbg !9513

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9514, metadata !DIExpression()), !dbg !9516
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9517, metadata !DIExpression()), !dbg !9516
  %cmp3 = icmp eq i64* %__dummy, %__dummy2, !dbg !9516
  %conv4 = zext i1 %cmp3 to i32, !dbg !9516
  store i32 1, i32* %tmp, align 4, !dbg !9516
  %4 = load i32, i32* %tmp, align 4, !dbg !9516
  br label %do.body5, !dbg !9518

do.body5:                                         ; preds = %do.body2
  br label %do.body6, !dbg !9519

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !9520

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !9522, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !9526, metadata !DIExpression()), !dbg !9525
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !9525
  %conv11 = zext i1 %cmp10 to i32, !dbg !9525
  store i32 1, i32* %tmp12, align 4, !dbg !9525
  %5 = load i32, i32* %tmp12, align 4, !dbg !9525
  %call13 = call i64 @arch_local_irq_save() #13, !dbg !9527
  store i64 %call13, i64* %flags, align 8, !dbg !9527
  br label %do.end, !dbg !9527

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !9520

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !9519

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9528, !srcloc !9529
  br label %do.body16, !dbg !9528

do.body16:                                        ; preds = %do.body15
  %6 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9530
  %lock = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %6, i32 0, i32 3, !dbg !9530
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9531
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !9532
  %rlock.i = bitcast %union.anon.0* %8 to %struct.raw_spinlock*, !dbg !9532
  br label %do.end18, !dbg !9530

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !9528

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !9519

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9518

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !9513

do.end22:                                         ; preds = %do.end21
  store i32 0, i32* %i, align 4, !dbg !9533
  br label %for.cond23, !dbg !9535

for.cond23:                                       ; preds = %for.inc30, %do.end22
  %9 = load i32, i32* %i, align 4, !dbg !9536
  %10 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9538
  %poolinfo = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %10, i32 0, i32 0, !dbg !9539
  %11 = load %struct.poolinfo*, %struct.poolinfo** %poolinfo, align 8, !dbg !9539
  %poolwords = getelementptr inbounds %struct.poolinfo, %struct.poolinfo* %11, i32 0, i32 1, !dbg !9540
  %12 = load i32, i32* %poolwords, align 4, !dbg !9540
  %cmp24 = icmp slt i32 %9, %12, !dbg !9541
  br i1 %cmp24, label %for.body26, label %for.end31, !dbg !9542

for.body26:                                       ; preds = %for.cond23
  %w27 = bitcast %union.anon.105* %hash to [5 x i32]*, !dbg !9543
  %arraydecay28 = getelementptr inbounds [5 x i32], [5 x i32]* %w27, i64 0, i64 0, !dbg !9544
  %13 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9545
  %pool = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %13, i32 0, i32 1, !dbg !9546
  %14 = load i32*, i32** %pool, align 8, !dbg !9546
  %15 = load i32, i32* %i, align 4, !dbg !9547
  %idx.ext = sext i32 %15 to i64, !dbg !9548
  %add.ptr = getelementptr i32, i32* %14, i64 %idx.ext, !dbg !9548
  %16 = bitcast i32* %add.ptr to i8*, !dbg !9549
  %arraydecay29 = getelementptr inbounds [16 x i32], [16 x i32]* %workspace, i64 0, i64 0, !dbg !9550
  call void @sha1_transform(i32* %arraydecay28, i8* %16, i32* %arraydecay29) #13, !dbg !9551
  br label %for.inc30, !dbg !9551

for.inc30:                                        ; preds = %for.body26
  %17 = load i32, i32* %i, align 4, !dbg !9552
  %add = add i32 %17, 16, !dbg !9552
  store i32 %add, i32* %i, align 4, !dbg !9552
  br label %for.cond23, !dbg !9553, !llvm.loop !9554

for.end31:                                        ; preds = %for.cond23
  %18 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9556
  %w32 = bitcast %union.anon.105* %hash to [5 x i32]*, !dbg !9557
  %arraydecay33 = getelementptr inbounds [5 x i32], [5 x i32]* %w32, i64 0, i64 0, !dbg !9558
  %19 = bitcast i32* %arraydecay33 to i8*, !dbg !9558
  call void @__mix_pool_bytes(%struct.entropy_store* %18, i8* %19, i32 20) #13, !dbg !9559
  %20 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !9560
  %lock34 = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %20, i32 0, i32 3, !dbg !9561
  %21 = load i64, i64* %flags, align 8, !dbg !9562
  store %struct.spinlock* %lock34, %struct.spinlock** %lock.addr.i51, align 8
  store i64 %21, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !224, metadata !5700, metadata !DIExpression()) #7, !dbg !9563
  call void @llvm.dbg.declare(metadata !224, metadata !5704, metadata !DIExpression()) #7, !dbg !9563
  store i32 1, i32* %tmp.i, align 4, !dbg !9563
  %22 = load i32, i32* %tmp.i, align 4, !dbg !9563
  call void @llvm.dbg.declare(metadata !224, metadata !5705, metadata !DIExpression()) #7, !dbg !9564
  call void @llvm.dbg.declare(metadata !224, metadata !5711, metadata !DIExpression()) #7, !dbg !9564
  store i32 1, i32* %tmp8.i, align 4, !dbg !9564
  %23 = load i32, i32* %tmp8.i, align 4, !dbg !9564
  %24 = load i64, i64* %flags.addr.i, align 8, !dbg !9565
  call void @arch_local_irq_restore(i64 %24) #14, !dbg !9565
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9566, !srcloc !5715
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i51, align 8, !dbg !9567
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !9567
  %rlock.i52 = bitcast %union.anon.0* %26 to %struct.raw_spinlock*, !dbg !9567
  %arraydecay35 = getelementptr inbounds [16 x i32], [16 x i32]* %workspace, i64 0, i64 0, !dbg !9568
  %27 = bitcast i32* %arraydecay35 to i8*, !dbg !9568
  call void @memzero_explicit(i8* %27, i64 64) #13, !dbg !9569
  %w36 = bitcast %union.anon.105* %hash to [5 x i32]*, !dbg !9570
  %arrayidx37 = getelementptr [5 x i32], [5 x i32]* %w36, i64 0, i64 3, !dbg !9571
  %28 = load i32, i32* %arrayidx37, align 4, !dbg !9571
  %w38 = bitcast %union.anon.105* %hash to [5 x i32]*, !dbg !9572
  %arrayidx39 = getelementptr [5 x i32], [5 x i32]* %w38, i64 0, i64 0, !dbg !9573
  %29 = load i32, i32* %arrayidx39, align 8, !dbg !9574
  %xor = xor i32 %29, %28, !dbg !9574
  store i32 %xor, i32* %arrayidx39, align 8, !dbg !9574
  %w40 = bitcast %union.anon.105* %hash to [5 x i32]*, !dbg !9575
  %arrayidx41 = getelementptr [5 x i32], [5 x i32]* %w40, i64 0, i64 4, !dbg !9576
  %30 = load i32, i32* %arrayidx41, align 8, !dbg !9576
  %w42 = bitcast %union.anon.105* %hash to [5 x i32]*, !dbg !9577
  %arrayidx43 = getelementptr [5 x i32], [5 x i32]* %w42, i64 0, i64 1, !dbg !9578
  %31 = load i32, i32* %arrayidx43, align 4, !dbg !9579
  %xor44 = xor i32 %31, %30, !dbg !9579
  store i32 %xor44, i32* %arrayidx43, align 4, !dbg !9579
  %w45 = bitcast %union.anon.105* %hash to [5 x i32]*, !dbg !9580
  %arrayidx46 = getelementptr [5 x i32], [5 x i32]* %w45, i64 0, i64 2, !dbg !9581
  %32 = load i32, i32* %arrayidx46, align 8, !dbg !9581
  %call47 = call i32 @rol32(i32 %32, i32 16) #13, !dbg !9582
  %w48 = bitcast %union.anon.105* %hash to [5 x i32]*, !dbg !9583
  %arrayidx49 = getelementptr [5 x i32], [5 x i32]* %w48, i64 0, i64 2, !dbg !9584
  %33 = load i32, i32* %arrayidx49, align 8, !dbg !9585
  %xor50 = xor i32 %33, %call47, !dbg !9585
  store i32 %xor50, i32* %arrayidx49, align 8, !dbg !9585
  %34 = load i8*, i8** %out.addr, align 8, !dbg !9586
  %35 = bitcast %union.anon.105* %hash to i8*, !dbg !9587
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 8 %35, i64 10, i1 false), !dbg !9587
  %36 = bitcast %union.anon.105* %hash to i8*, !dbg !9588
  call void @memzero_explicit(i8* %36, i64 24) #13, !dbg !9589
  ret void, !dbg !9590
}

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #4

; Function Attrs: cold noredzone noreturn
declare dso_local void @panic(i8*, ...) #10

; Function Attrs: noredzone
declare dso_local void @sha1_init(i32*) #4

; Function Attrs: noredzone
declare dso_local void @sha1_transform(i32*, i8*, i32*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @chacha20_block(i32* %state, i8* %stream) #1 !dbg !9591 {
entry:
  %state.addr = alloca i32*, align 8
  %stream.addr = alloca i8*, align 8
  store i32* %state, i32** %state.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %state.addr, metadata !9595, metadata !DIExpression()), !dbg !9596
  store i8* %stream, i8** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %stream.addr, metadata !9597, metadata !DIExpression()), !dbg !9598
  %0 = load i32*, i32** %state.addr, align 8, !dbg !9599
  %1 = load i8*, i8** %stream.addr, align 8, !dbg !9600
  call void @chacha_block_generic(i32* %0, i8* %1, i32 20) #13, !dbg !9601
  ret void, !dbg !9602
}

; Function Attrs: noredzone
declare dso_local void @chacha_block_generic(i32*, i8*, i32) #4

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local i32 @___ratelimit(%struct.ratelimit_state*, i8*) #4

; Function Attrs: cold noredzone
declare dso_local i32 @printk_deferred(i8*, ...) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_get_random_bytes(i32 %nbytes, i64 %IP) #1 !dbg !9603 {
entry:
  %nbytes.addr = alloca i32, align 4
  %IP.addr = alloca i64, align 8
  store i32 %nbytes, i32* %nbytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbytes.addr, metadata !9604, metadata !DIExpression()), !dbg !9605
  store i64 %IP, i64* %IP.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %IP.addr, metadata !9606, metadata !DIExpression()), !dbg !9605
  ret void, !dbg !9605
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @crng_backtrack_protect(i8* %tmp, i32 %used) #1 !dbg !9607 {
entry:
  %tmp.addr = alloca i8*, align 8
  %used.addr = alloca i32, align 4
  %crng = alloca %struct.crng_state*, align 8
  store i8* %tmp, i8** %tmp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tmp.addr, metadata !9610, metadata !DIExpression()), !dbg !9611
  store i32 %used, i32* %used.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %used.addr, metadata !9612, metadata !DIExpression()), !dbg !9613
  call void @llvm.dbg.declare(metadata %struct.crng_state** %crng, metadata !9614, metadata !DIExpression()), !dbg !9615
  store %struct.crng_state* null, %struct.crng_state** %crng, align 8, !dbg !9615
  store %struct.crng_state* @primary_crng, %struct.crng_state** %crng, align 8, !dbg !9616
  %0 = load %struct.crng_state*, %struct.crng_state** %crng, align 8, !dbg !9617
  %1 = load i8*, i8** %tmp.addr, align 8, !dbg !9618
  %2 = load i32, i32* %used.addr, align 4, !dbg !9619
  call void @_crng_backtrack_protect(%struct.crng_state* %0, i8* %1, i32 %2) #13, !dbg !9620
  ret void, !dbg !9621
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @init_timer_on_stack_key(%struct.timer_list* %timer, void (%struct.timer_list*)* %func, i32 %flags, i8* %name, %struct.lock_class_key* %key) #1 !dbg !9622 {
entry:
  %timer.addr = alloca %struct.timer_list*, align 8
  %func.addr = alloca void (%struct.timer_list*)*, align 8
  %flags.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %key.addr = alloca %struct.lock_class_key*, align 8
  store %struct.timer_list* %timer, %struct.timer_list** %timer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %timer.addr, metadata !9626, metadata !DIExpression()), !dbg !9627
  store void (%struct.timer_list*)* %func, void (%struct.timer_list*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.timer_list*)** %func.addr, metadata !9628, metadata !DIExpression()), !dbg !9629
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9630, metadata !DIExpression()), !dbg !9631
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9632, metadata !DIExpression()), !dbg !9633
  store %struct.lock_class_key* %key, %struct.lock_class_key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lock_class_key** %key.addr, metadata !9634, metadata !DIExpression()), !dbg !9635
  %0 = load %struct.timer_list*, %struct.timer_list** %timer.addr, align 8, !dbg !9636
  %1 = load void (%struct.timer_list*)*, void (%struct.timer_list*)** %func.addr, align 8, !dbg !9637
  %2 = load i32, i32* %flags.addr, align 4, !dbg !9638
  %3 = load i8*, i8** %name.addr, align 8, !dbg !9639
  %4 = load %struct.lock_class_key*, %struct.lock_class_key** %key.addr, align 8, !dbg !9640
  call void @init_timer_key(%struct.timer_list* %0, void (%struct.timer_list*)* %1, i32 %2, i8* %3, %struct.lock_class_key* %4) #13, !dbg !9641
  ret void, !dbg !9642
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @entropy_timer(%struct.timer_list* %t) #1 !dbg !9643 {
entry:
  %t.addr = alloca %struct.timer_list*, align 8
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !9644, metadata !DIExpression()), !dbg !9645
  call void @credit_entropy_bits(%struct.entropy_store* @input_pool, i32 1) #13, !dbg !9646
  ret void, !dbg !9647
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @timer_pending(%struct.timer_list* %timer) #1 !dbg !9648 {
entry:
  %timer.addr = alloca %struct.timer_list*, align 8
  store %struct.timer_list* %timer, %struct.timer_list** %timer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %timer.addr, metadata !9653, metadata !DIExpression()), !dbg !9654
  %0 = load %struct.timer_list*, %struct.timer_list** %timer.addr, align 8, !dbg !9655
  %entry1 = getelementptr inbounds %struct.timer_list, %struct.timer_list* %0, i32 0, i32 0, !dbg !9656
  %call = call i32 @hlist_unhashed_lockless(%struct.hlist_node* %entry1) #13, !dbg !9657
  %tobool = icmp ne i32 %call, 0, !dbg !9658
  %lnot = xor i1 %tobool, true, !dbg !9658
  %lnot.ext = zext i1 %lnot to i32, !dbg !9658
  ret i32 %lnot.ext, !dbg !9659
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #4

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @destroy_timer_on_stack(%struct.timer_list* %timer) #1 !dbg !9660 {
entry:
  %timer.addr = alloca %struct.timer_list*, align 8
  store %struct.timer_list* %timer, %struct.timer_list** %timer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %timer.addr, metadata !9661, metadata !DIExpression()), !dbg !9662
  ret void, !dbg !9663
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hlist_unhashed_lockless(%struct.hlist_node* %h) #1 !dbg !9664 {
entry:
  %h.addr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.hlist_node**, align 8
  store %struct.hlist_node* %h, %struct.hlist_node** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %h.addr, metadata !9669, metadata !DIExpression()), !dbg !9670
  br label %do.body, !dbg !9671

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9673

do.end:                                           ; preds = %do.body
  %0 = load %struct.hlist_node*, %struct.hlist_node** %h.addr, align 8, !dbg !9671
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %0, i32 0, i32 1, !dbg !9671
  %1 = load volatile %struct.hlist_node**, %struct.hlist_node*** %pprev, align 8, !dbg !9671
  store %struct.hlist_node** %1, %struct.hlist_node*** %tmp, align 8, !dbg !9673
  %2 = load %struct.hlist_node**, %struct.hlist_node*** %tmp, align 8, !dbg !9671
  %tobool = icmp ne %struct.hlist_node** %2, null, !dbg !9675
  %lnot = xor i1 %tobool, true, !dbg !9675
  %lnot.ext = zext i1 %lnot to i32, !dbg !9675
  ret i32 %lnot.ext, !dbg !9676
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #1 !dbg !9677 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !9680, metadata !DIExpression()), !dbg !9681
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9682, metadata !DIExpression()), !dbg !9683
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9684, metadata !DIExpression()), !dbg !9685
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9686
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9688
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9689
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #13, !dbg !9690
  br i1 %call, label %if.end, label %if.then, !dbg !9691

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !9692

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9693
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9694
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !9695
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !9696
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9697
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9698
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !9699
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !9700
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9701
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9702
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !9703
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !9704
  br label %do.body, !dbg !9705

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !9706

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !9708

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !9706

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9710
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9710
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !9710
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !9710
  br label %do.end7, !dbg !9710

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !9706

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !9712
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #1 !dbg !9713 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !9716, metadata !DIExpression()), !dbg !9717
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9718, metadata !DIExpression()), !dbg !9719
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9720, metadata !DIExpression()), !dbg !9721
  ret i1 true, !dbg !9722
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #1 !dbg !9723 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9724, metadata !DIExpression()), !dbg !9725
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9726
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #13, !dbg !9728
  br i1 %call, label %if.end, label %if.then, !dbg !9729

if.then:                                          ; preds = %entry
  br label %return, !dbg !9730

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9731
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9732
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !9732
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9733
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !9734
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9734
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #13, !dbg !9735
  br label %return, !dbg !9736

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9736
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #1 !dbg !9737 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !9738, metadata !DIExpression()), !dbg !9739
  br label %do.body, !dbg !9740

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9741

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !9743

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !9741

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9745
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9745
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !9745
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !9745
  br label %do.end3, !dbg !9745

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !9741

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9747
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9748
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !9749
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !9750
  ret void, !dbg !9751
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #1 !dbg !9752 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9755, metadata !DIExpression()), !dbg !9756
  ret i1 true, !dbg !9757
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #1 !dbg !9758 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9759, metadata !DIExpression()), !dbg !9760
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9761, metadata !DIExpression()), !dbg !9762
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9763
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9764
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9765
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !9766
  br label %do.body, !dbg !9767

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !9768

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !9770

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !9768

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9772
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9772
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !9772
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !9772
  br label %do.end5, !dbg !9772

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !9768

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !9774
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @rdrand_long(i64* %v) #1 !dbg !9775 {
entry:
  %retval = alloca i1, align 1
  %v.addr = alloca i64*, align 8
  %ok = alloca i8, align 1
  %retry = alloca i32, align 4
  store i64* %v, i64** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %v.addr, metadata !9776, metadata !DIExpression()), !dbg !9777
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !9778, metadata !DIExpression()), !dbg !9779
  call void @llvm.dbg.declare(metadata i32* %retry, metadata !9780, metadata !DIExpression()), !dbg !9781
  store i32 10, i32* %retry, align 4, !dbg !9781
  br label %do.body, !dbg !9782

do.body:                                          ; preds = %do.cond, %entry
  %0 = load i64*, i64** %v.addr, align 8, !dbg !9783
  %1 = call { i8, i64 } asm sideeffect "rdrand $1\0A\09/* output condition code c*/\0A", "={@ccc},=r,~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9785, !srcloc !9786
  %asmresult = extractvalue { i8, i64 } %1, 0, !dbg !9785
  %asmresult1 = extractvalue { i8, i64 } %1, 1, !dbg !9785
  store i8 %asmresult, i8* %ok, align 1, !dbg !9785
  store i64 %asmresult1, i64* %0, align 8, !dbg !9785
  %2 = load i8, i8* %ok, align 1, !dbg !9787
  %tobool = trunc i8 %2 to i1, !dbg !9787
  br i1 %tobool, label %if.then, label %if.end, !dbg !9789

if.then:                                          ; preds = %do.body
  store i1 true, i1* %retval, align 1, !dbg !9790
  br label %return, !dbg !9790

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !9791

do.cond:                                          ; preds = %if.end
  %3 = load i32, i32* %retry, align 4, !dbg !9792
  %dec = add i32 %3, -1, !dbg !9792
  store i32 %dec, i32* %retry, align 4, !dbg !9792
  %tobool2 = icmp ne i32 %dec, 0, !dbg !9791
  br i1 %tobool2, label %do.body, label %do.end, !dbg !9791, !llvm.loop !9793

do.end:                                           ; preds = %do.cond
  store i1 false, i1* %retval, align 1, !dbg !9795
  br label %return, !dbg !9795

return:                                           ; preds = %do.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !9796
  ret i1 %4, !dbg !9796
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_get_real() #1 !dbg !9797 {
entry:
  %call = call i64 @ktime_get_with_offset(i32 0) #13, !dbg !9798
  ret i64 %call, !dbg !9799
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.new_utsname* @utsname() #1 !dbg !9800 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !7959, metadata !DIExpression()), !dbg !9804
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !7968, metadata !DIExpression()), !dbg !9806
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !7971, metadata !DIExpression()), !dbg !9807
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !9806
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !9806
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !dbg !9807, !srcloc !7992
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !9807
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !9807
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !9807
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !9807
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !9807
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9804
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9804
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !9804
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !9804
  %nsproxy = getelementptr inbounds %struct.task_struct, %struct.task_struct* %6, i32 0, i32 73, !dbg !9808
  %7 = load %struct.nsproxy*, %struct.nsproxy** %nsproxy, align 8, !dbg !9808
  %uts_ns = getelementptr inbounds %struct.nsproxy, %struct.nsproxy* %7, i32 0, i32 1, !dbg !9809
  %8 = load %struct.uts_namespace*, %struct.uts_namespace** %uts_ns, align 8, !dbg !9809
  %name = getelementptr inbounds %struct.uts_namespace, %struct.uts_namespace* %8, i32 0, i32 1, !dbg !9810
  ret %struct.new_utsname* %name, !dbg !9811
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get_with_offset(i32) #4

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @crng_init_try_arch_early(%struct.crng_state* %crng) #0 section ".init.text" !dbg !9812 {
entry:
  %crng.addr = alloca %struct.crng_state*, align 8
  %i = alloca i32, align 4
  %arch_init = alloca i8, align 1
  %rv = alloca i64, align 8
  store %struct.crng_state* %crng, %struct.crng_state** %crng.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.crng_state** %crng.addr, metadata !9815, metadata !DIExpression()), !dbg !9816
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9817, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.declare(metadata i8* %arch_init, metadata !9819, metadata !DIExpression()), !dbg !9820
  store i8 1, i8* %arch_init, align 1, !dbg !9820
  call void @llvm.dbg.declare(metadata i64* %rv, metadata !9821, metadata !DIExpression()), !dbg !9822
  store i32 4, i32* %i, align 4, !dbg !9823
  br label %for.cond, !dbg !9825

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9826
  %cmp = icmp slt i32 %0, 16, !dbg !9828
  br i1 %cmp, label %for.body, label %for.end, !dbg !9829

for.body:                                         ; preds = %for.cond
  %call = call zeroext i1 @arch_get_random_seed_long_early(i64* %rv) #15, !dbg !9830
  br i1 %call, label %if.end, label %land.lhs.true, !dbg !9833

land.lhs.true:                                    ; preds = %for.body
  %call1 = call zeroext i1 @arch_get_random_long_early(i64* %rv) #15, !dbg !9834
  br i1 %call1, label %if.end, label %if.then, !dbg !9835

if.then:                                          ; preds = %land.lhs.true
  %call2 = call i64 @get_cycles() #13, !dbg !9836
  store i64 %call2, i64* %rv, align 8, !dbg !9838
  store i8 0, i8* %arch_init, align 1, !dbg !9839
  br label %if.end, !dbg !9840

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %1 = load i64, i64* %rv, align 8, !dbg !9841
  %2 = load %struct.crng_state*, %struct.crng_state** %crng.addr, align 8, !dbg !9842
  %state = getelementptr inbounds %struct.crng_state, %struct.crng_state* %2, i32 0, i32 0, !dbg !9843
  %3 = load i32, i32* %i, align 4, !dbg !9844
  %idxprom = sext i32 %3 to i64, !dbg !9842
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %state, i64 0, i64 %idxprom, !dbg !9842
  %4 = load i32, i32* %arrayidx, align 4, !dbg !9845
  %conv = zext i32 %4 to i64, !dbg !9845
  %xor = xor i64 %conv, %1, !dbg !9845
  %conv3 = trunc i64 %xor to i32, !dbg !9845
  store i32 %conv3, i32* %arrayidx, align 4, !dbg !9845
  br label %for.inc, !dbg !9846

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %i, align 4, !dbg !9847
  %inc = add i32 %5, 1, !dbg !9847
  store i32 %inc, i32* %i, align 4, !dbg !9847
  br label %for.cond, !dbg !9848, !llvm.loop !9849

for.end:                                          ; preds = %for.cond
  %6 = load i8, i8* %arch_init, align 1, !dbg !9851
  %tobool = trunc i8 %6 to i1, !dbg !9851
  ret i1 %tobool, !dbg !9852
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @arch_get_random_seed_long_early(i64* %v) #0 section ".init.text" !dbg !9853 {
entry:
  %v.addr = alloca i64*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i64* %v, i64** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %v.addr, metadata !9854, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9856, metadata !DIExpression()), !dbg !9858
  %0 = load i32, i32* @system_state, align 4, !dbg !9858
  %cmp = icmp ne i32 %0, 0, !dbg !9858
  %lnot = xor i1 %cmp, true, !dbg !9858
  %lnot1 = xor i1 %lnot, true, !dbg !9858
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9858
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9858
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !9859
  %tobool = icmp ne i32 %1, 0, !dbg !9859
  %lnot2 = xor i1 %tobool, true, !dbg !9859
  %lnot4 = xor i1 %lnot2, true, !dbg !9859
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !9859
  %conv = sext i32 %lnot.ext5 to i64, !dbg !9859
  %tobool6 = icmp ne i64 %conv, 0, !dbg !9859
  br i1 %tobool6, label %if.then, label %if.end, !dbg !9858

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9859

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !9861

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !9863

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !9861

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i32 148, i32 2305, i64 12) #7, !dbg !9865, !srcloc !9867
  br label %do.end9, !dbg !9865

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #7, !dbg !9868, !srcloc !9870
  br label %do.body10, !dbg !9861

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !9871

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !9861

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !9861

if.end:                                           ; preds = %do.end12, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !9858
  %tobool13 = icmp ne i32 %2, 0, !dbg !9858
  %lnot14 = xor i1 %tobool13, true, !dbg !9858
  %lnot16 = xor i1 %lnot14, true, !dbg !9858
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !9858
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !9858
  store i64 %conv18, i64* %tmp, align 8, !dbg !9859
  %3 = load i64, i64* %tmp, align 8, !dbg !9858
  %4 = load i64*, i64** %v.addr, align 8, !dbg !9873
  %call = call zeroext i1 @arch_get_random_seed_long(i64* %4) #13, !dbg !9874
  ret i1 %call, !dbg !9875
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @arch_get_random_long_early(i64* %v) #0 section ".init.text" !dbg !9876 {
entry:
  %v.addr = alloca i64*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i64* %v, i64** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %v.addr, metadata !9877, metadata !DIExpression()), !dbg !9878
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9879, metadata !DIExpression()), !dbg !9881
  %0 = load i32, i32* @system_state, align 4, !dbg !9881
  %cmp = icmp ne i32 %0, 0, !dbg !9881
  %lnot = xor i1 %cmp, true, !dbg !9881
  %lnot1 = xor i1 %lnot, true, !dbg !9881
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9881
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9881
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !9882
  %tobool = icmp ne i32 %1, 0, !dbg !9882
  %lnot2 = xor i1 %tobool, true, !dbg !9882
  %lnot4 = xor i1 %lnot2, true, !dbg !9882
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !9882
  %conv = sext i32 %lnot.ext5 to i64, !dbg !9882
  %tobool6 = icmp ne i64 %conv, 0, !dbg !9882
  br i1 %tobool6, label %if.then, label %if.end, !dbg !9881

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9882

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !9884

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !9886

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !9884

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i32 156, i32 2305, i64 12) #7, !dbg !9888, !srcloc !9890
  br label %do.end9, !dbg !9888

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 161) #7, !dbg !9891, !srcloc !9893
  br label %do.body10, !dbg !9884

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !9894

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !9884

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !9884

if.end:                                           ; preds = %do.end12, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !9881
  %tobool13 = icmp ne i32 %2, 0, !dbg !9881
  %lnot14 = xor i1 %tobool13, true, !dbg !9881
  %lnot16 = xor i1 %lnot14, true, !dbg !9881
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !9881
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !9881
  store i64 %conv18, i64* %tmp, align 8, !dbg !9882
  %3 = load i64, i64* %tmp, align 8, !dbg !9881
  %4 = load i64*, i64** %v.addr, align 8, !dbg !9896
  %call = call zeroext i1 @arch_get_random_long(i64* %4) #13, !dbg !9897
  ret i1 %call, !dbg !9898
}

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #4

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #11

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #12 !dbg !9899 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9903, metadata !DIExpression()), !dbg !9907
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9909, metadata !DIExpression()), !dbg !9910
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9911, metadata !DIExpression()), !dbg !9912
  %0 = load i64, i64* %size.addr, align 8, !dbg !9913
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !9915
  br i1 %1, label %if.then, label %if.end447, !dbg !9916

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !9917
  %tobool = icmp ne i64 %2, 0, !dbg !9917
  br i1 %tobool, label %if.end, label %if.then1, !dbg !9920

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !9921
  br label %return, !dbg !9921

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !9922
  %cmp = icmp ult i64 %3, 4096, !dbg !9924
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9925

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9926
  br label %return, !dbg !9926

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub = sub i64 %4, 1, !dbg !9927
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !9927
  br i1 %5, label %cond.true, label %cond.false442, !dbg !9927

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub4 = sub i64 %6, 1, !dbg !9927
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !9927
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !9927

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub6 = sub i64 %8, 1, !dbg !9927
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !9927
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !9927

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !9927

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub9 = sub i64 %9, 1, !dbg !9927
  %and = and i64 %sub9, -9223372036854775808, !dbg !9927
  %tobool10 = icmp ne i64 %and, 0, !dbg !9927
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !9927

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !9927

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub13 = sub i64 %10, 1, !dbg !9927
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !9927
  %tobool15 = icmp ne i64 %and14, 0, !dbg !9927
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !9927

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !9927

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub18 = sub i64 %11, 1, !dbg !9927
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !9927
  %tobool20 = icmp ne i64 %and19, 0, !dbg !9927
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !9927

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !9927

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub23 = sub i64 %12, 1, !dbg !9927
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !9927
  %tobool25 = icmp ne i64 %and24, 0, !dbg !9927
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !9927

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !9927

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub28 = sub i64 %13, 1, !dbg !9927
  %and29 = and i64 %sub28, 576460752303423488, !dbg !9927
  %tobool30 = icmp ne i64 %and29, 0, !dbg !9927
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !9927

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !9927

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub33 = sub i64 %14, 1, !dbg !9927
  %and34 = and i64 %sub33, 288230376151711744, !dbg !9927
  %tobool35 = icmp ne i64 %and34, 0, !dbg !9927
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !9927

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !9927

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub38 = sub i64 %15, 1, !dbg !9927
  %and39 = and i64 %sub38, 144115188075855872, !dbg !9927
  %tobool40 = icmp ne i64 %and39, 0, !dbg !9927
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !9927

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !9927

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub43 = sub i64 %16, 1, !dbg !9927
  %and44 = and i64 %sub43, 72057594037927936, !dbg !9927
  %tobool45 = icmp ne i64 %and44, 0, !dbg !9927
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !9927

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !9927

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub48 = sub i64 %17, 1, !dbg !9927
  %and49 = and i64 %sub48, 36028797018963968, !dbg !9927
  %tobool50 = icmp ne i64 %and49, 0, !dbg !9927
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !9927

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !9927

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub53 = sub i64 %18, 1, !dbg !9927
  %and54 = and i64 %sub53, 18014398509481984, !dbg !9927
  %tobool55 = icmp ne i64 %and54, 0, !dbg !9927
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !9927

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !9927

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub58 = sub i64 %19, 1, !dbg !9927
  %and59 = and i64 %sub58, 9007199254740992, !dbg !9927
  %tobool60 = icmp ne i64 %and59, 0, !dbg !9927
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !9927

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !9927

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub63 = sub i64 %20, 1, !dbg !9927
  %and64 = and i64 %sub63, 4503599627370496, !dbg !9927
  %tobool65 = icmp ne i64 %and64, 0, !dbg !9927
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !9927

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !9927

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub68 = sub i64 %21, 1, !dbg !9927
  %and69 = and i64 %sub68, 2251799813685248, !dbg !9927
  %tobool70 = icmp ne i64 %and69, 0, !dbg !9927
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !9927

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !9927

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub73 = sub i64 %22, 1, !dbg !9927
  %and74 = and i64 %sub73, 1125899906842624, !dbg !9927
  %tobool75 = icmp ne i64 %and74, 0, !dbg !9927
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !9927

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !9927

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub78 = sub i64 %23, 1, !dbg !9927
  %and79 = and i64 %sub78, 562949953421312, !dbg !9927
  %tobool80 = icmp ne i64 %and79, 0, !dbg !9927
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !9927

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !9927

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub83 = sub i64 %24, 1, !dbg !9927
  %and84 = and i64 %sub83, 281474976710656, !dbg !9927
  %tobool85 = icmp ne i64 %and84, 0, !dbg !9927
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !9927

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !9927

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub88 = sub i64 %25, 1, !dbg !9927
  %and89 = and i64 %sub88, 140737488355328, !dbg !9927
  %tobool90 = icmp ne i64 %and89, 0, !dbg !9927
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !9927

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !9927

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub93 = sub i64 %26, 1, !dbg !9927
  %and94 = and i64 %sub93, 70368744177664, !dbg !9927
  %tobool95 = icmp ne i64 %and94, 0, !dbg !9927
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !9927

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !9927

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub98 = sub i64 %27, 1, !dbg !9927
  %and99 = and i64 %sub98, 35184372088832, !dbg !9927
  %tobool100 = icmp ne i64 %and99, 0, !dbg !9927
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !9927

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !9927

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub103 = sub i64 %28, 1, !dbg !9927
  %and104 = and i64 %sub103, 17592186044416, !dbg !9927
  %tobool105 = icmp ne i64 %and104, 0, !dbg !9927
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !9927

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !9927

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub108 = sub i64 %29, 1, !dbg !9927
  %and109 = and i64 %sub108, 8796093022208, !dbg !9927
  %tobool110 = icmp ne i64 %and109, 0, !dbg !9927
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !9927

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !9927

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub113 = sub i64 %30, 1, !dbg !9927
  %and114 = and i64 %sub113, 4398046511104, !dbg !9927
  %tobool115 = icmp ne i64 %and114, 0, !dbg !9927
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !9927

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !9927

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub118 = sub i64 %31, 1, !dbg !9927
  %and119 = and i64 %sub118, 2199023255552, !dbg !9927
  %tobool120 = icmp ne i64 %and119, 0, !dbg !9927
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !9927

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !9927

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub123 = sub i64 %32, 1, !dbg !9927
  %and124 = and i64 %sub123, 1099511627776, !dbg !9927
  %tobool125 = icmp ne i64 %and124, 0, !dbg !9927
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !9927

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !9927

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub128 = sub i64 %33, 1, !dbg !9927
  %and129 = and i64 %sub128, 549755813888, !dbg !9927
  %tobool130 = icmp ne i64 %and129, 0, !dbg !9927
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !9927

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !9927

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub133 = sub i64 %34, 1, !dbg !9927
  %and134 = and i64 %sub133, 274877906944, !dbg !9927
  %tobool135 = icmp ne i64 %and134, 0, !dbg !9927
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !9927

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !9927

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub138 = sub i64 %35, 1, !dbg !9927
  %and139 = and i64 %sub138, 137438953472, !dbg !9927
  %tobool140 = icmp ne i64 %and139, 0, !dbg !9927
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !9927

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !9927

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub143 = sub i64 %36, 1, !dbg !9927
  %and144 = and i64 %sub143, 68719476736, !dbg !9927
  %tobool145 = icmp ne i64 %and144, 0, !dbg !9927
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !9927

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !9927

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub148 = sub i64 %37, 1, !dbg !9927
  %and149 = and i64 %sub148, 34359738368, !dbg !9927
  %tobool150 = icmp ne i64 %and149, 0, !dbg !9927
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !9927

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !9927

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub153 = sub i64 %38, 1, !dbg !9927
  %and154 = and i64 %sub153, 17179869184, !dbg !9927
  %tobool155 = icmp ne i64 %and154, 0, !dbg !9927
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !9927

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !9927

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub158 = sub i64 %39, 1, !dbg !9927
  %and159 = and i64 %sub158, 8589934592, !dbg !9927
  %tobool160 = icmp ne i64 %and159, 0, !dbg !9927
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !9927

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !9927

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub163 = sub i64 %40, 1, !dbg !9927
  %and164 = and i64 %sub163, 4294967296, !dbg !9927
  %tobool165 = icmp ne i64 %and164, 0, !dbg !9927
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !9927

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !9927

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub168 = sub i64 %41, 1, !dbg !9927
  %and169 = and i64 %sub168, 2147483648, !dbg !9927
  %tobool170 = icmp ne i64 %and169, 0, !dbg !9927
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !9927

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !9927

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub173 = sub i64 %42, 1, !dbg !9927
  %and174 = and i64 %sub173, 1073741824, !dbg !9927
  %tobool175 = icmp ne i64 %and174, 0, !dbg !9927
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !9927

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !9927

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub178 = sub i64 %43, 1, !dbg !9927
  %and179 = and i64 %sub178, 536870912, !dbg !9927
  %tobool180 = icmp ne i64 %and179, 0, !dbg !9927
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !9927

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !9927

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub183 = sub i64 %44, 1, !dbg !9927
  %and184 = and i64 %sub183, 268435456, !dbg !9927
  %tobool185 = icmp ne i64 %and184, 0, !dbg !9927
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !9927

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !9927

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub188 = sub i64 %45, 1, !dbg !9927
  %and189 = and i64 %sub188, 134217728, !dbg !9927
  %tobool190 = icmp ne i64 %and189, 0, !dbg !9927
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !9927

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !9927

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub193 = sub i64 %46, 1, !dbg !9927
  %and194 = and i64 %sub193, 67108864, !dbg !9927
  %tobool195 = icmp ne i64 %and194, 0, !dbg !9927
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !9927

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !9927

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub198 = sub i64 %47, 1, !dbg !9927
  %and199 = and i64 %sub198, 33554432, !dbg !9927
  %tobool200 = icmp ne i64 %and199, 0, !dbg !9927
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !9927

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !9927

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub203 = sub i64 %48, 1, !dbg !9927
  %and204 = and i64 %sub203, 16777216, !dbg !9927
  %tobool205 = icmp ne i64 %and204, 0, !dbg !9927
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !9927

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !9927

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub208 = sub i64 %49, 1, !dbg !9927
  %and209 = and i64 %sub208, 8388608, !dbg !9927
  %tobool210 = icmp ne i64 %and209, 0, !dbg !9927
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !9927

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !9927

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub213 = sub i64 %50, 1, !dbg !9927
  %and214 = and i64 %sub213, 4194304, !dbg !9927
  %tobool215 = icmp ne i64 %and214, 0, !dbg !9927
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !9927

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !9927

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub218 = sub i64 %51, 1, !dbg !9927
  %and219 = and i64 %sub218, 2097152, !dbg !9927
  %tobool220 = icmp ne i64 %and219, 0, !dbg !9927
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !9927

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !9927

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub223 = sub i64 %52, 1, !dbg !9927
  %and224 = and i64 %sub223, 1048576, !dbg !9927
  %tobool225 = icmp ne i64 %and224, 0, !dbg !9927
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !9927

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !9927

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub228 = sub i64 %53, 1, !dbg !9927
  %and229 = and i64 %sub228, 524288, !dbg !9927
  %tobool230 = icmp ne i64 %and229, 0, !dbg !9927
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !9927

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !9927

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub233 = sub i64 %54, 1, !dbg !9927
  %and234 = and i64 %sub233, 262144, !dbg !9927
  %tobool235 = icmp ne i64 %and234, 0, !dbg !9927
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !9927

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !9927

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub238 = sub i64 %55, 1, !dbg !9927
  %and239 = and i64 %sub238, 131072, !dbg !9927
  %tobool240 = icmp ne i64 %and239, 0, !dbg !9927
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !9927

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !9927

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub243 = sub i64 %56, 1, !dbg !9927
  %and244 = and i64 %sub243, 65536, !dbg !9927
  %tobool245 = icmp ne i64 %and244, 0, !dbg !9927
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !9927

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !9927

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub248 = sub i64 %57, 1, !dbg !9927
  %and249 = and i64 %sub248, 32768, !dbg !9927
  %tobool250 = icmp ne i64 %and249, 0, !dbg !9927
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !9927

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !9927

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub253 = sub i64 %58, 1, !dbg !9927
  %and254 = and i64 %sub253, 16384, !dbg !9927
  %tobool255 = icmp ne i64 %and254, 0, !dbg !9927
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !9927

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !9927

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub258 = sub i64 %59, 1, !dbg !9927
  %and259 = and i64 %sub258, 8192, !dbg !9927
  %tobool260 = icmp ne i64 %and259, 0, !dbg !9927
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !9927

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !9927

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub263 = sub i64 %60, 1, !dbg !9927
  %and264 = and i64 %sub263, 4096, !dbg !9927
  %tobool265 = icmp ne i64 %and264, 0, !dbg !9927
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !9927

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !9927

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub268 = sub i64 %61, 1, !dbg !9927
  %and269 = and i64 %sub268, 2048, !dbg !9927
  %tobool270 = icmp ne i64 %and269, 0, !dbg !9927
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !9927

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !9927

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub273 = sub i64 %62, 1, !dbg !9927
  %and274 = and i64 %sub273, 1024, !dbg !9927
  %tobool275 = icmp ne i64 %and274, 0, !dbg !9927
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !9927

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !9927

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub278 = sub i64 %63, 1, !dbg !9927
  %and279 = and i64 %sub278, 512, !dbg !9927
  %tobool280 = icmp ne i64 %and279, 0, !dbg !9927
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !9927

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !9927

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub283 = sub i64 %64, 1, !dbg !9927
  %and284 = and i64 %sub283, 256, !dbg !9927
  %tobool285 = icmp ne i64 %and284, 0, !dbg !9927
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !9927

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !9927

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub288 = sub i64 %65, 1, !dbg !9927
  %and289 = and i64 %sub288, 128, !dbg !9927
  %tobool290 = icmp ne i64 %and289, 0, !dbg !9927
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !9927

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !9927

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub293 = sub i64 %66, 1, !dbg !9927
  %and294 = and i64 %sub293, 64, !dbg !9927
  %tobool295 = icmp ne i64 %and294, 0, !dbg !9927
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !9927

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !9927

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub298 = sub i64 %67, 1, !dbg !9927
  %and299 = and i64 %sub298, 32, !dbg !9927
  %tobool300 = icmp ne i64 %and299, 0, !dbg !9927
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !9927

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !9927

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub303 = sub i64 %68, 1, !dbg !9927
  %and304 = and i64 %sub303, 16, !dbg !9927
  %tobool305 = icmp ne i64 %and304, 0, !dbg !9927
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !9927

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !9927

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub308 = sub i64 %69, 1, !dbg !9927
  %and309 = and i64 %sub308, 8, !dbg !9927
  %tobool310 = icmp ne i64 %and309, 0, !dbg !9927
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !9927

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !9927

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub313 = sub i64 %70, 1, !dbg !9927
  %and314 = and i64 %sub313, 4, !dbg !9927
  %tobool315 = icmp ne i64 %and314, 0, !dbg !9927
  %71 = zext i1 %tobool315 to i64, !dbg !9927
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !9927
  br label %cond.end, !dbg !9927

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !9927
  br label %cond.end317, !dbg !9927

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !9927
  br label %cond.end319, !dbg !9927

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !9927
  br label %cond.end321, !dbg !9927

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !9927
  br label %cond.end323, !dbg !9927

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !9927
  br label %cond.end325, !dbg !9927

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !9927
  br label %cond.end327, !dbg !9927

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !9927
  br label %cond.end329, !dbg !9927

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !9927
  br label %cond.end331, !dbg !9927

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !9927
  br label %cond.end333, !dbg !9927

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !9927
  br label %cond.end335, !dbg !9927

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !9927
  br label %cond.end337, !dbg !9927

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !9927
  br label %cond.end339, !dbg !9927

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !9927
  br label %cond.end341, !dbg !9927

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !9927
  br label %cond.end343, !dbg !9927

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !9927
  br label %cond.end345, !dbg !9927

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !9927
  br label %cond.end347, !dbg !9927

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !9927
  br label %cond.end349, !dbg !9927

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !9927
  br label %cond.end351, !dbg !9927

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !9927
  br label %cond.end353, !dbg !9927

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !9927
  br label %cond.end355, !dbg !9927

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !9927
  br label %cond.end357, !dbg !9927

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !9927
  br label %cond.end359, !dbg !9927

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !9927
  br label %cond.end361, !dbg !9927

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !9927
  br label %cond.end363, !dbg !9927

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !9927
  br label %cond.end365, !dbg !9927

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !9927
  br label %cond.end367, !dbg !9927

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !9927
  br label %cond.end369, !dbg !9927

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !9927
  br label %cond.end371, !dbg !9927

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !9927
  br label %cond.end373, !dbg !9927

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !9927
  br label %cond.end375, !dbg !9927

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !9927
  br label %cond.end377, !dbg !9927

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !9927
  br label %cond.end379, !dbg !9927

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !9927
  br label %cond.end381, !dbg !9927

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !9927
  br label %cond.end383, !dbg !9927

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !9927
  br label %cond.end385, !dbg !9927

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !9927
  br label %cond.end387, !dbg !9927

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !9927
  br label %cond.end389, !dbg !9927

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !9927
  br label %cond.end391, !dbg !9927

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !9927
  br label %cond.end393, !dbg !9927

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !9927
  br label %cond.end395, !dbg !9927

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !9927
  br label %cond.end397, !dbg !9927

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !9927
  br label %cond.end399, !dbg !9927

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !9927
  br label %cond.end401, !dbg !9927

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !9927
  br label %cond.end403, !dbg !9927

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !9927
  br label %cond.end405, !dbg !9927

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !9927
  br label %cond.end407, !dbg !9927

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !9927
  br label %cond.end409, !dbg !9927

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !9927
  br label %cond.end411, !dbg !9927

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !9927
  br label %cond.end413, !dbg !9927

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !9927
  br label %cond.end415, !dbg !9927

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !9927
  br label %cond.end417, !dbg !9927

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !9927
  br label %cond.end419, !dbg !9927

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !9927
  br label %cond.end421, !dbg !9927

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !9927
  br label %cond.end423, !dbg !9927

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !9927
  br label %cond.end425, !dbg !9927

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !9927
  br label %cond.end427, !dbg !9927

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !9927
  br label %cond.end429, !dbg !9927

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !9927
  br label %cond.end431, !dbg !9927

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !9927
  br label %cond.end433, !dbg !9927

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !9927
  br label %cond.end435, !dbg !9927

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !9927
  br label %cond.end437, !dbg !9927

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !9927
  br label %cond.end440, !dbg !9927

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !9927

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !9927
  br label %cond.end444, !dbg !9927

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !9927
  %sub443 = sub i64 %72, 1, !dbg !9927
  %call = call i32 @__ilog2_u64(i64 %sub443) #16, !dbg !9927
  br label %cond.end444, !dbg !9927

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !9927
  %sub446 = sub i32 %cond445, 12, !dbg !9928
  %add = add i32 %sub446, 1, !dbg !9929
  store i32 %add, i32* %retval, align 4, !dbg !9930
  br label %return, !dbg !9930

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !9931
  %dec = add i64 %73, -1, !dbg !9931
  store i64 %dec, i64* %size.addr, align 8, !dbg !9931
  %74 = load i64, i64* %size.addr, align 8, !dbg !9932
  %shr = lshr i64 %74, 12, !dbg !9932
  store i64 %shr, i64* %size.addr, align 8, !dbg !9932
  %75 = load i64, i64* %size.addr, align 8, !dbg !9933
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9910
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !9934
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !9935
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !9934, !srcloc !9936
  store i32 %78, i32* %bitpos.i, align 4, !dbg !9934
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !9937
  %add.i = add i32 %79, 1, !dbg !9938
  store i32 %add.i, i32* %retval, align 4, !dbg !9939
  br label %return, !dbg !9939

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !9940
  ret i32 %80, !dbg !9940
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #12 !dbg !9941 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9903, metadata !DIExpression()), !dbg !9945
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9909, metadata !DIExpression()), !dbg !9947
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9948, metadata !DIExpression()), !dbg !9949
  %0 = load i64, i64* %n.addr, align 8, !dbg !9950
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9947
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !9951
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !9952
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !9951, !srcloc !9936
  store i32 %3, i32* %bitpos.i, align 4, !dbg !9951
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !9953
  %add.i = add i32 %4, 1, !dbg !9954
  %sub = sub i32 %add.i, 1, !dbg !9955
  ret i32 %sub, !dbg !9956
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #4

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #1 !dbg !9957 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !9961, metadata !DIExpression()), !dbg !9962
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !9963, metadata !DIExpression()), !dbg !9964
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9965, metadata !DIExpression()), !dbg !9966
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9967, metadata !DIExpression()), !dbg !9968
  %0 = load i8*, i8** %object.addr, align 8, !dbg !9969
  ret i8* %0, !dbg !9970
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @urandom_read_nowarn(%struct.file* %file, i8* %buf, i64 %nbytes, i64* %ppos) #1 !dbg !9971 {
entry:
  %file.addr = alloca %struct.file*, align 8
  %buf.addr = alloca i8*, align 8
  %nbytes.addr = alloca i64, align 8
  %ppos.addr = alloca i64*, align 8
  %ret = alloca i32, align 4
  %__UNIQUE_ID___x338 = alloca i64, align 8
  %__UNIQUE_ID___y339 = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !9972, metadata !DIExpression()), !dbg !9973
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9974, metadata !DIExpression()), !dbg !9975
  store i64 %nbytes, i64* %nbytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !9976, metadata !DIExpression()), !dbg !9977
  store i64* %ppos, i64** %ppos.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %ppos.addr, metadata !9978, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9980, metadata !DIExpression()), !dbg !9981
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x338, metadata !9982, metadata !DIExpression()), !dbg !9984
  %0 = load i64, i64* %nbytes.addr, align 8, !dbg !9984
  store i64 %0, i64* %__UNIQUE_ID___x338, align 8, !dbg !9984
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y339, metadata !9985, metadata !DIExpression()), !dbg !9984
  store i64 33554431, i64* %__UNIQUE_ID___y339, align 8, !dbg !9984
  %1 = load i64, i64* %__UNIQUE_ID___x338, align 8, !dbg !9984
  %2 = load i64, i64* %__UNIQUE_ID___y339, align 8, !dbg !9984
  %cmp = icmp ult i64 %1, %2, !dbg !9984
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9984

cond.true:                                        ; preds = %entry
  %3 = load i64, i64* %__UNIQUE_ID___x338, align 8, !dbg !9984
  br label %cond.end, !dbg !9984

cond.false:                                       ; preds = %entry
  %4 = load i64, i64* %__UNIQUE_ID___y339, align 8, !dbg !9984
  br label %cond.end, !dbg !9984

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %3, %cond.true ], [ %4, %cond.false ], !dbg !9984
  store i64 %cond, i64* %tmp, align 8, !dbg !9984
  %5 = load i64, i64* %tmp, align 8, !dbg !9984
  store i64 %5, i64* %nbytes.addr, align 8, !dbg !9986
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !9987
  %7 = load i64, i64* %nbytes.addr, align 8, !dbg !9988
  %call = call i64 @extract_crng_user(i8* %6, i64 %7) #13, !dbg !9989
  %conv = trunc i64 %call to i32, !dbg !9989
  store i32 %conv, i32* %ret, align 4, !dbg !9990
  %8 = load i64, i64* %nbytes.addr, align 8, !dbg !9991
  %mul = mul i64 8, %8, !dbg !9992
  %conv1 = trunc i64 %mul to i32, !dbg !9993
  %9 = load i32, i32* getelementptr inbounds (%struct.entropy_store, %struct.entropy_store* @input_pool, i32 0, i32 6), align 4, !dbg !9994
  %shr = ashr i32 %9, 3, !dbg !9994
  call void @trace_urandom_read(i32 %conv1, i32 0, i32 %shr) #13, !dbg !9995
  %10 = load i32, i32* %ret, align 4, !dbg !9996
  %conv2 = sext i32 %10 to i64, !dbg !9996
  ret i64 %conv2, !dbg !9997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @extract_crng_user(i8* %buf, i64 %nbytes) #1 !dbg !9998 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !10001, metadata !DIExpression()), !dbg !10006
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !10016, metadata !DIExpression()), !dbg !10017
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !10018, metadata !DIExpression()), !dbg !10019
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !10020, metadata !DIExpression()), !dbg !10021
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !10022, metadata !DIExpression()), !dbg !10025
  %tmp.i.i25 = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !10026, metadata !DIExpression()), !dbg !10027
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !10028, metadata !DIExpression()), !dbg !10029
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !10030, metadata !DIExpression()), !dbg !10031
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !7959, metadata !DIExpression()), !dbg !10032
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !7968, metadata !DIExpression()), !dbg !10037
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !7971, metadata !DIExpression()), !dbg !10038
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %pscr_ret__.i.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i.i, metadata !7959, metadata !DIExpression()), !dbg !10039
  %__vpp_verify.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i.i, metadata !7968, metadata !DIExpression()), !dbg !10043
  %pfo_val__.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i.i, metadata !7971, metadata !DIExpression()), !dbg !10044
  %tmp.i.i = alloca %struct.task_struct*, align 8
  %tmp1.i.i = alloca %struct.task_struct*, align 8
  %buf.addr = alloca i8*, align 8
  %nbytes.addr = alloca i64, align 8
  %ret = alloca i64, align 8
  %i = alloca i64, align 8
  %tmp = alloca [64 x i8], align 4
  %large_request = alloca i32, align 4
  %__UNIQUE_ID___x315 = alloca i32, align 4
  %__UNIQUE_ID___y316 = alloca i32, align 4
  %tmp13 = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10045, metadata !DIExpression()), !dbg !10046
  store i64 %nbytes, i64* %nbytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !10047, metadata !DIExpression()), !dbg !10048
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !10049, metadata !DIExpression()), !dbg !10050
  store i64 0, i64* %ret, align 8, !dbg !10050
  call void @llvm.dbg.declare(metadata i64* %i, metadata !10051, metadata !DIExpression()), !dbg !10052
  store i64 64, i64* %i, align 8, !dbg !10052
  call void @llvm.dbg.declare(metadata [64 x i8]* %tmp, metadata !10053, metadata !DIExpression()), !dbg !10054
  call void @llvm.dbg.declare(metadata i32* %large_request, metadata !10055, metadata !DIExpression()), !dbg !10056
  %0 = load i64, i64* %nbytes.addr, align 8, !dbg !10057
  %cmp = icmp ugt i64 %0, 256, !dbg !10058
  %conv = zext i1 %cmp to i32, !dbg !10058
  store i32 %conv, i32* %large_request, align 4, !dbg !10056
  br label %while.cond, !dbg !10059

while.cond:                                       ; preds = %if.end21, %entry
  %1 = load i64, i64* %nbytes.addr, align 8, !dbg !10060
  %tobool = icmp ne i64 %1, 0, !dbg !10059
  br i1 %tobool, label %while.body, label %while.end, !dbg !10059

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %large_request, align 4, !dbg !10061
  %tobool1 = icmp ne i32 %2, 0, !dbg !10061
  br i1 %tobool1, label %land.lhs.true, label %if.end11, !dbg !10062

land.lhs.true:                                    ; preds = %while.body
  store i8* null, i8** %__vpp_verify.i.i, align 8, !dbg !10043
  %3 = load i8*, i8** %__vpp_verify.i.i, align 8, !dbg !10043
  %4 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !dbg !10044, !srcloc !7992
  store i64 %4, i64* %pfo_val__.i.i, align 8, !dbg !10044
  %5 = load i64, i64* %pfo_val__.i.i, align 8, !dbg !10044
  %6 = inttoptr i64 %5 to %struct.task_struct*, !dbg !10044
  store %struct.task_struct* %6, %struct.task_struct** %tmp.i.i, align 8, !dbg !10044
  %7 = load %struct.task_struct*, %struct.task_struct** %tmp.i.i, align 8, !dbg !10044
  store %struct.task_struct* %7, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !10039
  %8 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i.i, align 8, !dbg !10039
  store %struct.task_struct* %8, %struct.task_struct** %tmp1.i.i, align 8, !dbg !10039
  %9 = load %struct.task_struct*, %struct.task_struct** %tmp1.i.i, align 8, !dbg !10039
  %10 = bitcast %struct.task_struct* %9 to %struct.thread_info*, !dbg !10063
  %call1.i = call i32 @test_ti_thread_flag(%struct.thread_info* %10, i32 3) #14, !dbg !10063
  %tobool.i = icmp ne i32 %call1.i, 0, !dbg !10063
  %lnot.i = xor i1 %tobool.i, true, !dbg !10063
  %lnot.ext.i = zext i1 %tobool.i to i32, !dbg !10063
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !10063
  br i1 %tobool.i, label %if.then, label %if.end11, !dbg !10064

if.then:                                          ; preds = %land.lhs.true
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !10037
  %11 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !10037
  %12 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !dbg !10038, !srcloc !7992
  store i64 %12, i64* %pfo_val__.i, align 8, !dbg !10038
  %13 = load i64, i64* %pfo_val__.i, align 8, !dbg !10038
  %14 = inttoptr i64 %13 to %struct.task_struct*, !dbg !10038
  store %struct.task_struct* %14, %struct.task_struct** %tmp.i, align 8, !dbg !10038
  %15 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !10038
  store %struct.task_struct* %15, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !10032
  %16 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !10032
  store %struct.task_struct* %16, %struct.task_struct** %tmp1.i, align 8, !dbg !10032
  %17 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !10032
  %call4 = call i32 @signal_pending(%struct.task_struct* %17) #13, !dbg !10065
  %tobool5 = icmp ne i32 %call4, 0, !dbg !10065
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !10066

if.then6:                                         ; preds = %if.then
  %18 = load i64, i64* %ret, align 8, !dbg !10067
  %cmp7 = icmp eq i64 %18, 0, !dbg !10070
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !10071

if.then9:                                         ; preds = %if.then6
  store i64 -512, i64* %ret, align 8, !dbg !10072
  br label %if.end, !dbg !10073

if.end:                                           ; preds = %if.then9, %if.then6
  br label %while.end, !dbg !10074

if.end10:                                         ; preds = %if.then
  call void @schedule() #13, !dbg !10075
  br label %if.end11, !dbg !10076

if.end11:                                         ; preds = %if.end10, %land.lhs.true, %while.body
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %tmp, i64 0, i64 0, !dbg !10077
  call void @extract_crng(i8* %arraydecay) #13, !dbg !10078
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x315, metadata !10079, metadata !DIExpression()), !dbg !10081
  %19 = load i64, i64* %nbytes.addr, align 8, !dbg !10081
  %conv12 = trunc i64 %19 to i32, !dbg !10081
  store i32 %conv12, i32* %__UNIQUE_ID___x315, align 4, !dbg !10081
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y316, metadata !10082, metadata !DIExpression()), !dbg !10081
  store i32 64, i32* %__UNIQUE_ID___y316, align 4, !dbg !10081
  %20 = load i32, i32* %__UNIQUE_ID___x315, align 4, !dbg !10081
  %21 = load i32, i32* %__UNIQUE_ID___y316, align 4, !dbg !10081
  %cmp14 = icmp slt i32 %20, %21, !dbg !10081
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !10081

cond.true:                                        ; preds = %if.end11
  %22 = load i32, i32* %__UNIQUE_ID___x315, align 4, !dbg !10081
  br label %cond.end, !dbg !10081

cond.false:                                       ; preds = %if.end11
  %23 = load i32, i32* %__UNIQUE_ID___y316, align 4, !dbg !10081
  br label %cond.end, !dbg !10081

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %22, %cond.true ], [ %23, %cond.false ], !dbg !10081
  store i32 %cond, i32* %tmp13, align 4, !dbg !10081
  %24 = load i32, i32* %tmp13, align 4, !dbg !10081
  %conv16 = sext i32 %24 to i64, !dbg !10083
  store i64 %conv16, i64* %i, align 8, !dbg !10084
  %25 = load i8*, i8** %buf.addr, align 8, !dbg !10085
  %arraydecay17 = getelementptr inbounds [64 x i8], [64 x i8]* %tmp, i64 0, i64 0, !dbg !10086
  %26 = load i64, i64* %i, align 8, !dbg !10087
  store i8* %25, i8** %to.addr.i, align 8
  store i8* %arraydecay17, i8** %from.addr.i, align 8
  store i64 %26, i64* %n.addr.i, align 8
  %27 = load i8*, i8** %from.addr.i, align 8, !dbg !10088
  %28 = load i64, i64* %n.addr.i, align 8, !dbg !10088
  store i8* %27, i8** %addr.addr.i.i, align 8
  store i64 %28, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !10021
  %29 = load i32, i32* %sz.i.i, align 4, !dbg !10089
  %cmp.i.i = icmp sge i32 %29, 0, !dbg !10089
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !10089

land.rhs.i.i:                                     ; preds = %cond.end
  %30 = load i32, i32* %sz.i.i, align 4, !dbg !10089
  %conv.i.i = sext i32 %30 to i64, !dbg !10089
  %31 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10089
  %cmp1.i.i = icmp ult i64 %conv.i.i, %31, !dbg !10089
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %cond.end
  %32 = phi i1 [ false, %cond.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !10091
  %lnot.i.i = xor i1 %32, true, !dbg !10089
  %lnot.ext.i.i = zext i1 %32 to i32, !dbg !10089
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10089
  br i1 %32, label %if.then.i.i, label %if.end10.i.i, !dbg !10092

if.then.i.i:                                      ; preds = %land.end.i.i
  %33 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10093
  %34 = call i1 @llvm.is.constant.i64(i64 %33) #7, !dbg !10096
  br i1 %34, label %if.else.i.i, label %if.then5.i.i, !dbg !10097

if.then5.i.i:                                     ; preds = %if.then.i.i
  %35 = load i32, i32* %sz.i.i, align 4, !dbg !10098
  %36 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10099
  call void @copy_overflow(i32 %35, i64 %36) #14, !dbg !10100
  br label %if.end9.i.i, !dbg !10100

if.else.i.i:                                      ; preds = %if.then.i.i
  %37 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10101
  %tobool6.i.i = trunc i8 %37 to i1, !dbg !10101
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !10103

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !10104
  br label %if.end.i.i, !dbg !10104

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !10105
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10106
  br label %check_copy_size.exit.i, !dbg !10106

if.end10.i.i:                                     ; preds = %land.end.i.i
  %38 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10025
  %cmp11.i.i = icmp ugt i64 %38, 2147483647, !dbg !10025
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !10025
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !10025
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !10025
  %39 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10107
  %tobool17.i.i = icmp ne i32 %39, 0, !dbg !10107
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !10107
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !10107
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !10107
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !10025

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !10109, !srcloc !10112
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !10113, !srcloc !10115
  br label %if.end31.i.i, !dbg !10116

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %40 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10025
  %tobool32.i.i = icmp ne i32 %40, 0, !dbg !10025
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !10025
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !10025
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !10025
  store i64 %conv37.i.i, i64* %tmp.i.i25, align 8, !dbg !10107
  %41 = load i64, i64* %tmp.i.i25, align 8, !dbg !10025
  %tobool38.i.i = icmp ne i64 %41, 0, !dbg !10117
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !10118

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10119
  br label %check_copy_size.exit.i, !dbg !10119

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %42 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !10120
  %43 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10121
  %44 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10122
  %tobool41.i.i = trunc i8 %44 to i1, !dbg !10122
  call void @check_object_size(i8* %42, i64 %43, i1 zeroext %tobool41.i.i) #14, !dbg !10123
  store i1 true, i1* %retval.i.i, align 1, !dbg !10124
  br label %check_copy_size.exit.i, !dbg !10124

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %45 = load i1, i1* %retval.i.i, align 1, !dbg !10125
  %lnot.i26 = xor i1 %45, true, !dbg !10088
  %lnot.ext.i27 = zext i1 %45 to i32, !dbg !10088
  %conv.i28 = sext i32 %lnot.ext.i27 to i64, !dbg !10088
  br i1 %45, label %if.then.i, label %copy_to_user.exit, !dbg !10126

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %46 = load i8*, i8** %to.addr.i, align 8, !dbg !10127
  %47 = load i8*, i8** %from.addr.i, align 8, !dbg !10128
  %48 = load i64, i64* %n.addr.i, align 8, !dbg !10129
  %call2.i = call i64 @_copy_to_user(i8* %46, i8* %47, i64 %48) #14, !dbg !10130
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !10131
  br label %copy_to_user.exit, !dbg !10132

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %49 = load i64, i64* %n.addr.i, align 8, !dbg !10133
  %tobool19 = icmp ne i64 %49, 0, !dbg !10134
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !10135

if.then20:                                        ; preds = %copy_to_user.exit
  store i64 -14, i64* %ret, align 8, !dbg !10136
  br label %while.end, !dbg !10138

if.end21:                                         ; preds = %copy_to_user.exit
  %50 = load i64, i64* %i, align 8, !dbg !10139
  %51 = load i64, i64* %nbytes.addr, align 8, !dbg !10140
  %sub = sub i64 %51, %50, !dbg !10140
  store i64 %sub, i64* %nbytes.addr, align 8, !dbg !10140
  %52 = load i64, i64* %i, align 8, !dbg !10141
  %53 = load i8*, i8** %buf.addr, align 8, !dbg !10142
  %add.ptr = getelementptr i8, i8* %53, i64 %52, !dbg !10142
  store i8* %add.ptr, i8** %buf.addr, align 8, !dbg !10142
  %54 = load i64, i64* %i, align 8, !dbg !10143
  %55 = load i64, i64* %ret, align 8, !dbg !10144
  %add = add i64 %55, %54, !dbg !10144
  store i64 %add, i64* %ret, align 8, !dbg !10144
  br label %while.cond, !dbg !10059, !llvm.loop !10145

while.end:                                        ; preds = %if.then20, %if.end, %while.cond
  %arraydecay22 = getelementptr inbounds [64 x i8], [64 x i8]* %tmp, i64 0, i64 0, !dbg !10147
  %56 = load i64, i64* %i, align 8, !dbg !10148
  %conv23 = trunc i64 %56 to i32, !dbg !10148
  call void @crng_backtrack_protect(i8* %arraydecay22, i32 %conv23) #13, !dbg !10149
  %arraydecay24 = getelementptr inbounds [64 x i8], [64 x i8]* %tmp, i64 0, i64 0, !dbg !10150
  call void @memzero_explicit(i8* %arraydecay24, i64 64) #13, !dbg !10151
  %57 = load i64, i64* %ret, align 8, !dbg !10152
  ret i64 %57, !dbg !10153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_urandom_read(i32 %got_bits, i32 %pool_left, i32 %input_left) #1 !dbg !10154 {
entry:
  %got_bits.addr = alloca i32, align 4
  %pool_left.addr = alloca i32, align 4
  %input_left.addr = alloca i32, align 4
  store i32 %got_bits, i32* %got_bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %got_bits.addr, metadata !10157, metadata !DIExpression()), !dbg !10158
  store i32 %pool_left, i32* %pool_left.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pool_left.addr, metadata !10159, metadata !DIExpression()), !dbg !10158
  store i32 %input_left, i32* %input_left.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %input_left.addr, metadata !10160, metadata !DIExpression()), !dbg !10158
  ret void, !dbg !10158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @signal_pending(%struct.task_struct* %p) #1 !dbg !10161 {
entry:
  %p.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %p, %struct.task_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %p.addr, metadata !10164, metadata !DIExpression()), !dbg !10165
  %0 = load %struct.task_struct*, %struct.task_struct** %p.addr, align 8, !dbg !10166
  %call = call i32 @test_tsk_thread_flag(%struct.task_struct* %0, i32 2) #13, !dbg !10166
  %tobool = icmp ne i32 %call, 0, !dbg !10166
  %lnot = xor i1 %tobool, true, !dbg !10166
  %lnot1 = xor i1 %lnot, true, !dbg !10166
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10166
  %conv = sext i32 %lnot.ext to i64, !dbg !10166
  %conv2 = trunc i64 %conv to i32, !dbg !10166
  ret i32 %conv2, !dbg !10167
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_ti_thread_flag(%struct.thread_info* %ti, i32 %flag) #1 !dbg !10168 {
entry:
  %ti.addr = alloca %struct.thread_info*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.thread_info* %ti, %struct.thread_info** %ti.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.thread_info** %ti.addr, metadata !10171, metadata !DIExpression()), !dbg !10172
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !10173, metadata !DIExpression()), !dbg !10174
  %0 = load i32, i32* %flag.addr, align 4, !dbg !10175
  %conv = sext i32 %0 to i64, !dbg !10175
  %1 = load %struct.thread_info*, %struct.thread_info** %ti.addr, align 8, !dbg !10176
  %flags = getelementptr inbounds %struct.thread_info, %struct.thread_info* %1, i32 0, i32 0, !dbg !10177
  %call = call zeroext i1 @test_bit(i64 %conv, i64* %flags) #13, !dbg !10178
  %conv1 = zext i1 %call to i32, !dbg !10178
  ret i32 %conv1, !dbg !10179
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_tsk_thread_flag(%struct.task_struct* %tsk, i32 %flag) #1 !dbg !10180 {
entry:
  %tsk.addr = alloca %struct.task_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.task_struct* %tsk, %struct.task_struct** %tsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %tsk.addr, metadata !10183, metadata !DIExpression()), !dbg !10184
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !10185, metadata !DIExpression()), !dbg !10186
  %0 = load %struct.task_struct*, %struct.task_struct** %tsk.addr, align 8, !dbg !10187
  %call = call %struct.thread_info* @task_thread_info(%struct.task_struct* %0) #13, !dbg !10188
  %1 = load i32, i32* %flag.addr, align 4, !dbg !10189
  %call1 = call i32 @test_ti_thread_flag(%struct.thread_info* %call, i32 %1) #13, !dbg !10190
  ret i32 %call1, !dbg !10191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.thread_info* @task_thread_info(%struct.task_struct* %task) #1 !dbg !10192 {
entry:
  %task.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %task, %struct.task_struct** %task.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %task.addr, metadata !10195, metadata !DIExpression()), !dbg !10196
  %0 = load %struct.task_struct*, %struct.task_struct** %task.addr, align 8, !dbg !10197
  %thread_info = getelementptr inbounds %struct.task_struct, %struct.task_struct* %0, i32 0, i32 0, !dbg !10198
  ret %struct.thread_info* %thread_info, !dbg !10199
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #1 !dbg !10200 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10201, metadata !DIExpression()), !dbg !10202
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10203, metadata !DIExpression()), !dbg !10204
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10205, metadata !DIExpression()), !dbg !10207
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !10207
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !10208
  %tobool = icmp ne i32 %0, 0, !dbg !10208
  %lnot = xor i1 %tobool, true, !dbg !10208
  %lnot1 = xor i1 %lnot, true, !dbg !10208
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10208
  %conv = sext i32 %lnot.ext to i64, !dbg !10208
  %tobool2 = icmp ne i64 %conv, 0, !dbg !10208
  br i1 %tobool2, label %if.then, label %if.end, !dbg !10207

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10208

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !10210

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !10212

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !10210
  %2 = load i64, i64* %count.addr, align 8, !dbg !10210
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i32 %1, i64 %2) #13, !dbg !10210
  br label %do.body4, !dbg !10210

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !10214

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !10216

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !10214

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0), i32 134, i32 2313, i64 12) #7, !dbg !10218, !srcloc !10220
  br label %do.end8, !dbg !10218

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #7, !dbg !10221, !srcloc !10223
  br label %do.body9, !dbg !10214

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !10224

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !10214

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !10210

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !10226

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !10210

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !10210

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !10207
  %tobool15 = icmp ne i32 %3, 0, !dbg !10207
  %lnot16 = xor i1 %tobool15, true, !dbg !10207
  %lnot18 = xor i1 %lnot16, true, !dbg !10207
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !10207
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !10207
  store i64 %conv20, i64* %tmp, align 8, !dbg !10208
  %4 = load i64, i64* %tmp, align 8, !dbg !10207
  ret void, !dbg !10228
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #4

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #1 !dbg !10229 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10232, metadata !DIExpression()), !dbg !10233
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10234, metadata !DIExpression()), !dbg !10235
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !10236, metadata !DIExpression()), !dbg !10237
  ret void, !dbg !10238
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @write_pool(%struct.entropy_store* %r, i8* %buffer, i64 %count) #1 !dbg !10239 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !10001, metadata !DIExpression()), !dbg !10242
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !10016, metadata !DIExpression()), !dbg !10249
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !10018, metadata !DIExpression()), !dbg !10250
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !10020, metadata !DIExpression()), !dbg !10251
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !10022, metadata !DIExpression()), !dbg !10252
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !10253, metadata !DIExpression()), !dbg !10254
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !10255, metadata !DIExpression()), !dbg !10256
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !10257, metadata !DIExpression()), !dbg !10258
  %retval = alloca i32, align 4
  %r.addr = alloca %struct.entropy_store*, align 8
  %buffer.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %bytes = alloca i64, align 8
  %t = alloca i32, align 4
  %buf = alloca [16 x i32], align 16
  %p = alloca i8*, align 8
  %b = alloca i32, align 4
  %i = alloca i32, align 4
  %__UNIQUE_ID___x340 = alloca i64, align 8
  %__UNIQUE_ID___y341 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.entropy_store* %r, %struct.entropy_store** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.entropy_store** %r.addr, metadata !10259, metadata !DIExpression()), !dbg !10260
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !10261, metadata !DIExpression()), !dbg !10262
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10263, metadata !DIExpression()), !dbg !10264
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !10265, metadata !DIExpression()), !dbg !10266
  call void @llvm.dbg.declare(metadata i32* %t, metadata !10267, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.declare(metadata [16 x i32]* %buf, metadata !10269, metadata !DIExpression()), !dbg !10270
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10271, metadata !DIExpression()), !dbg !10272
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !10273
  store i8* %0, i8** %p, align 8, !dbg !10272
  br label %while.cond, !dbg !10274

while.cond:                                       ; preds = %for.end, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !10275
  %cmp = icmp ugt i64 %1, 0, !dbg !10276
  br i1 %cmp, label %while.body, label %while.end, !dbg !10274

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %b, metadata !10277, metadata !DIExpression()), !dbg !10278
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10279, metadata !DIExpression()), !dbg !10280
  store i32 0, i32* %i, align 4, !dbg !10280
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x340, metadata !10281, metadata !DIExpression()), !dbg !10283
  %2 = load i64, i64* %count.addr, align 8, !dbg !10283
  store i64 %2, i64* %__UNIQUE_ID___x340, align 8, !dbg !10283
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y341, metadata !10284, metadata !DIExpression()), !dbg !10283
  store i64 64, i64* %__UNIQUE_ID___y341, align 8, !dbg !10283
  %3 = load i64, i64* %__UNIQUE_ID___x340, align 8, !dbg !10283
  %4 = load i64, i64* %__UNIQUE_ID___y341, align 8, !dbg !10283
  %cmp1 = icmp ult i64 %3, %4, !dbg !10283
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !10283

cond.true:                                        ; preds = %while.body
  %5 = load i64, i64* %__UNIQUE_ID___x340, align 8, !dbg !10283
  br label %cond.end, !dbg !10283

cond.false:                                       ; preds = %while.body
  %6 = load i64, i64* %__UNIQUE_ID___y341, align 8, !dbg !10283
  br label %cond.end, !dbg !10283

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %5, %cond.true ], [ %6, %cond.false ], !dbg !10283
  store i64 %cond, i64* %tmp, align 8, !dbg !10283
  %7 = load i64, i64* %tmp, align 8, !dbg !10283
  store i64 %7, i64* %bytes, align 8, !dbg !10285
  %8 = bitcast [16 x i32]* %buf to i8*, !dbg !10286
  %9 = load i8*, i8** %p, align 8, !dbg !10287
  %10 = load i64, i64* %bytes, align 8, !dbg !10288
  store i8* %8, i8** %to.addr.i, align 8
  store i8* %9, i8** %from.addr.i, align 8
  store i64 %10, i64* %n.addr.i, align 8
  %11 = load i8*, i8** %to.addr.i, align 8, !dbg !10289
  %12 = load i64, i64* %n.addr.i, align 8, !dbg !10289
  store i8* %11, i8** %addr.addr.i.i, align 8
  store i64 %12, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !10251
  %13 = load i32, i32* %sz.i.i, align 4, !dbg !10290
  %cmp.i.i = icmp sge i32 %13, 0, !dbg !10290
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !10290

land.rhs.i.i:                                     ; preds = %cond.end
  %14 = load i32, i32* %sz.i.i, align 4, !dbg !10290
  %conv.i.i = sext i32 %14 to i64, !dbg !10290
  %15 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10290
  %cmp1.i.i = icmp ult i64 %conv.i.i, %15, !dbg !10290
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %cond.end
  %16 = phi i1 [ false, %cond.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !10291
  %lnot.i.i = xor i1 %16, true, !dbg !10290
  %lnot.ext.i.i = zext i1 %16 to i32, !dbg !10290
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10290
  br i1 %16, label %if.then.i.i, label %if.end10.i.i, !dbg !10292

if.then.i.i:                                      ; preds = %land.end.i.i
  %17 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10293
  %18 = call i1 @llvm.is.constant.i64(i64 %17) #7, !dbg !10294
  br i1 %18, label %if.else.i.i, label %if.then5.i.i, !dbg !10295

if.then5.i.i:                                     ; preds = %if.then.i.i
  %19 = load i32, i32* %sz.i.i, align 4, !dbg !10296
  %20 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10297
  call void @copy_overflow(i32 %19, i64 %20) #14, !dbg !10298
  br label %if.end9.i.i, !dbg !10298

if.else.i.i:                                      ; preds = %if.then.i.i
  %21 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10299
  %tobool6.i.i = trunc i8 %21 to i1, !dbg !10299
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !10300

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !10301
  br label %if.end.i.i, !dbg !10301

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !10302
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10303
  br label %check_copy_size.exit.i, !dbg !10303

if.end10.i.i:                                     ; preds = %land.end.i.i
  %22 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10252
  %cmp11.i.i = icmp ugt i64 %22, 2147483647, !dbg !10252
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !10252
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !10252
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !10252
  %23 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10304
  %tobool17.i.i = icmp ne i32 %23, 0, !dbg !10304
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !10304
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !10304
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !10304
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !10252

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !10305, !srcloc !10112
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !10306, !srcloc !10115
  br label %if.end31.i.i, !dbg !10307

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %24 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10252
  %tobool32.i.i = icmp ne i32 %24, 0, !dbg !10252
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !10252
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !10252
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !10252
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !10304
  %25 = load i64, i64* %tmp.i.i, align 8, !dbg !10252
  %tobool38.i.i = icmp ne i64 %25, 0, !dbg !10308
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !10309

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !10310
  br label %check_copy_size.exit.i, !dbg !10310

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %26 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !10311
  %27 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10312
  %28 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10313
  %tobool41.i.i = trunc i8 %28 to i1, !dbg !10313
  call void @check_object_size(i8* %26, i64 %27, i1 zeroext %tobool41.i.i) #14, !dbg !10314
  store i1 true, i1* %retval.i.i, align 1, !dbg !10315
  br label %check_copy_size.exit.i, !dbg !10315

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %29 = load i1, i1* %retval.i.i, align 1, !dbg !10316
  %lnot.i = xor i1 %29, true, !dbg !10289
  %lnot.ext.i = zext i1 %29 to i32, !dbg !10289
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !10289
  br i1 %29, label %if.then.i, label %copy_from_user.exit, !dbg !10317

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %30 = load i8*, i8** %to.addr.i, align 8, !dbg !10318
  %31 = load i8*, i8** %from.addr.i, align 8, !dbg !10319
  %32 = load i64, i64* %n.addr.i, align 8, !dbg !10320
  %call2.i = call i64 @_copy_from_user(i8* %30, i8* %31, i64 %32) #14, !dbg !10321
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !10322
  br label %copy_from_user.exit, !dbg !10323

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %33 = load i64, i64* %n.addr.i, align 8, !dbg !10324
  %tobool = icmp ne i64 %33, 0, !dbg !10325
  br i1 %tobool, label %if.then, label %if.end, !dbg !10326

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !10327
  br label %return, !dbg !10327

if.end:                                           ; preds = %copy_from_user.exit
  %34 = load i64, i64* %bytes, align 8, !dbg !10328
  %conv = trunc i64 %34 to i32, !dbg !10328
  store i32 %conv, i32* %b, align 4, !dbg !10330
  br label %for.cond, !dbg !10331

for.cond:                                         ; preds = %for.inc, %if.end
  %35 = load i32, i32* %b, align 4, !dbg !10332
  %cmp2 = icmp sgt i32 %35, 0, !dbg !10334
  br i1 %cmp2, label %for.body, label %for.end, !dbg !10335

for.body:                                         ; preds = %for.cond
  %call4 = call zeroext i1 @arch_get_random_int(i32* %t) #13, !dbg !10336
  br i1 %call4, label %if.end6, label %if.then5, !dbg !10339

if.then5:                                         ; preds = %for.body
  br label %for.end, !dbg !10340

if.end6:                                          ; preds = %for.body
  %36 = load i32, i32* %t, align 4, !dbg !10341
  %37 = load i32, i32* %i, align 4, !dbg !10342
  %idxprom = sext i32 %37 to i64, !dbg !10343
  %arrayidx = getelementptr [16 x i32], [16 x i32]* %buf, i64 0, i64 %idxprom, !dbg !10343
  %38 = load i32, i32* %arrayidx, align 4, !dbg !10344
  %xor = xor i32 %38, %36, !dbg !10344
  store i32 %xor, i32* %arrayidx, align 4, !dbg !10344
  br label %for.inc, !dbg !10345

for.inc:                                          ; preds = %if.end6
  %39 = load i32, i32* %b, align 4, !dbg !10346
  %conv7 = sext i32 %39 to i64, !dbg !10346
  %sub = sub i64 %conv7, 4, !dbg !10346
  %conv8 = trunc i64 %sub to i32, !dbg !10346
  store i32 %conv8, i32* %b, align 4, !dbg !10346
  %40 = load i32, i32* %i, align 4, !dbg !10347
  %inc = add i32 %40, 1, !dbg !10347
  store i32 %inc, i32* %i, align 4, !dbg !10347
  br label %for.cond, !dbg !10348, !llvm.loop !10349

for.end:                                          ; preds = %if.then5, %for.cond
  %41 = load i64, i64* %bytes, align 8, !dbg !10351
  %42 = load i64, i64* %count.addr, align 8, !dbg !10352
  %sub9 = sub i64 %42, %41, !dbg !10352
  store i64 %sub9, i64* %count.addr, align 8, !dbg !10352
  %43 = load i64, i64* %bytes, align 8, !dbg !10353
  %44 = load i8*, i8** %p, align 8, !dbg !10354
  %add.ptr = getelementptr i8, i8* %44, i64 %43, !dbg !10354
  store i8* %add.ptr, i8** %p, align 8, !dbg !10354
  %45 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !10355
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %buf, i64 0, i64 0, !dbg !10356
  %46 = bitcast i32* %arraydecay to i8*, !dbg !10356
  %47 = load i64, i64* %bytes, align 8, !dbg !10357
  %conv10 = trunc i64 %47 to i32, !dbg !10357
  call void @mix_pool_bytes(%struct.entropy_store* %45, i8* %46, i32 %conv10) #13, !dbg !10358
  call void @___might_sleep(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i32 1909, i32 0) #13, !dbg !10359
  %call12 = call i32 @_cond_resched() #13, !dbg !10359
  store i32 %call12, i32* %tmp11, align 4, !dbg !10359
  %48 = load i32, i32* %tmp11, align 4, !dbg !10359
  br label %while.cond, !dbg !10274, !llvm.loop !10361

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !10363
  br label %return, !dbg !10363

return:                                           ; preds = %while.end, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !10364
  ret i32 %49, !dbg !10364
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @arch_get_random_int(i32* %v) #1 !dbg !10365 {
entry:
  %retval.i = alloca i1, align 1
  %bit.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %bit.addr.i, metadata !6657, metadata !DIExpression()), !dbg !10368
  %v.addr = alloca i32*, align 8
  store i32* %v, i32** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %v.addr, metadata !10370, metadata !DIExpression()), !dbg !10371
  br i1 false, label %cond.true, label %cond.false2, !dbg !10372

cond.true:                                        ; preds = %entry
  br i1 false, label %cond.true1, label %cond.false, !dbg !10372

cond.true1:                                       ; preds = %cond.true
  br i1 true, label %cond.true4, label %cond.false6, !dbg !10372

cond.false:                                       ; preds = %cond.true
  %call = call zeroext i1 @test_bit(i64 158, i64* getelementptr inbounds (%struct.cpuinfo_x86, %struct.cpuinfo_x86* @boot_cpu_data, i32 0, i32 12, i32 0)) #13, !dbg !10372
  br i1 %call, label %cond.true4, label %cond.false6, !dbg !10372

cond.false2:                                      ; preds = %entry
  store i16 158, i16* %bit.addr.i, align 2
  %0 = load i16, i16* %bit.addr.i, align 2, !dbg !10373
  %1 = load i16, i16* %bit.addr.i, align 2, !dbg !10373
  %conv.i = zext i16 %1 to i32, !dbg !10373
  %and.i = and i32 %conv.i, 7, !dbg !10373
  %shl.i = shl i32 1, %and.i, !dbg !10373
  %2 = load i16, i16* %bit.addr.i, align 2, !dbg !10373
  %conv1.i = zext i16 %2 to i32, !dbg !10373
  %shr.i = ashr i32 %conv1.i, 3, !dbg !10373
  %idxprom.i = sext i32 %shr.i to i64, !dbg !10373
  %arrayidx.i = getelementptr i8, i8* bitcast (%union.anon.103* getelementptr inbounds (%struct.cpuinfo_x86, %struct.cpuinfo_x86* @boot_cpu_data, i32 0, i32 12) to i8*), i64 %idxprom.i, !dbg !10373
  callbr void asm sideeffect "1: jmp 6f\0A2:\0A.skip -(((5f-4f) - (2b-1b)) > 0) * ((5f-4f) - (2b-1b)),0x90\0A3:\0A.section .altinstructions,\22a\22\0A .long 1b - .\0A .long 4f - .\0A .word ${1:P}\0A .byte 3b - 1b\0A .byte 5f - 4f\0A .byte 3b - 2b\0A.previous\0A.section .altinstr_replacement,\22ax\22\0A4: jmp ${5:l}\0A5:\0A.previous\0A.section .altinstructions,\22a\22\0A .long 1b - .\0A .long 0\0A .word ${0:P}\0A .byte 3b - 1b\0A .byte 0\0A .byte 0\0A.previous\0A.section .altinstr_aux,\22ax\22\0A6:\0A testb $2,$3\0A jnz ${4:l}\0A jmp ${5:l}\0A.previous\0A", "i,i,i,*m,X,X,~{dirflag},~{fpsr},~{flags}"(i16 %0, i32 117, i32 %shl.i, i8* %arrayidx.i, i8* blockaddress(@arch_get_random_int, %t_yes.i), i8* blockaddress(@arch_get_random_int, %t_no.i)) #7
          to label %asm.fallthrough.i [label %t_yes.i, label %t_no.i], !dbg !10373, !srcloc !6668

asm.fallthrough.i:                                ; preds = %cond.false2
  br label %t_yes.i, !dbg !10373

t_yes.i:                                          ; preds = %asm.fallthrough.i, %cond.false2
  call void @llvm.dbg.label(metadata !6669), !dbg !10374
  store i1 true, i1* %retval.i, align 1, !dbg !10375
  br label %_static_cpu_has.exit, !dbg !10375

t_no.i:                                           ; preds = %cond.false2
  call void @llvm.dbg.label(metadata !6672), !dbg !10376
  store i1 false, i1* %retval.i, align 1, !dbg !10377
  br label %_static_cpu_has.exit, !dbg !10377

_static_cpu_has.exit:                             ; preds = %t_yes.i, %t_no.i
  %3 = load i1, i1* %retval.i, align 1, !dbg !10378
  br i1 %3, label %cond.true4, label %cond.false6, !dbg !10372

cond.true4:                                       ; preds = %_static_cpu_has.exit, %cond.false, %cond.true1
  %4 = load i32*, i32** %v.addr, align 8, !dbg !10379
  %call5 = call zeroext i1 @rdrand_int(i32* %4) #13, !dbg !10380
  %conv = zext i1 %call5 to i32, !dbg !10380
  br label %cond.end, !dbg !10372

cond.false6:                                      ; preds = %_static_cpu_has.exit, %cond.false, %cond.true1
  br label %cond.end, !dbg !10372

cond.end:                                         ; preds = %cond.false6, %cond.true4
  %cond = phi i32 [ %conv, %cond.true4 ], [ 0, %cond.false6 ], !dbg !10372
  %tobool = icmp ne i32 %cond, 0, !dbg !10372
  ret i1 %tobool, !dbg !10381
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @___might_sleep(i8* %file, i32 %line, i32 %preempt_offset) #1 !dbg !10382 {
entry:
  %file.addr = alloca i8*, align 8
  %line.addr = alloca i32, align 4
  %preempt_offset.addr = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10385, metadata !DIExpression()), !dbg !10386
  store i32 %line, i32* %line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line.addr, metadata !10387, metadata !DIExpression()), !dbg !10388
  store i32 %preempt_offset, i32* %preempt_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %preempt_offset.addr, metadata !10389, metadata !DIExpression()), !dbg !10390
  ret void, !dbg !10391
}

; Function Attrs: noredzone
declare dso_local i32 @_cond_resched() #4

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @rdrand_int(i32* %v) #1 !dbg !10392 {
entry:
  %retval = alloca i1, align 1
  %v.addr = alloca i32*, align 8
  %ok = alloca i8, align 1
  %retry = alloca i32, align 4
  store i32* %v, i32** %v.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %v.addr, metadata !10393, metadata !DIExpression()), !dbg !10394
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !10395, metadata !DIExpression()), !dbg !10396
  call void @llvm.dbg.declare(metadata i32* %retry, metadata !10397, metadata !DIExpression()), !dbg !10398
  store i32 10, i32* %retry, align 4, !dbg !10398
  br label %do.body, !dbg !10399

do.body:                                          ; preds = %do.cond, %entry
  %0 = load i32*, i32** %v.addr, align 8, !dbg !10400
  %1 = call { i8, i32 } asm sideeffect "rdrand $1\0A\09/* output condition code c*/\0A", "={@ccc},=r,~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10402, !srcloc !10403
  %asmresult = extractvalue { i8, i32 } %1, 0, !dbg !10402
  %asmresult1 = extractvalue { i8, i32 } %1, 1, !dbg !10402
  store i8 %asmresult, i8* %ok, align 1, !dbg !10402
  store i32 %asmresult1, i32* %0, align 4, !dbg !10402
  %2 = load i8, i8* %ok, align 1, !dbg !10404
  %tobool = trunc i8 %2 to i1, !dbg !10404
  br i1 %tobool, label %if.then, label %if.end, !dbg !10406

if.then:                                          ; preds = %do.body
  store i1 true, i1* %retval, align 1, !dbg !10407
  br label %return, !dbg !10407

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !10408

do.cond:                                          ; preds = %if.end
  %3 = load i32, i32* %retry, align 4, !dbg !10409
  %dec = add i32 %3, -1, !dbg !10409
  store i32 %dec, i32* %retry, align 4, !dbg !10409
  %tobool2 = icmp ne i32 %dec, 0, !dbg !10408
  br i1 %tobool2, label %do.body, label %do.end, !dbg !10408, !llvm.loop !10410

do.end:                                           ; preds = %do.cond
  store i1 false, i1* %retval, align 1, !dbg !10412
  br label %return, !dbg !10412

return:                                           ; preds = %do.end, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !10413
  ret i1 %4, !dbg !10413
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @poll_wait(%struct.file* %filp, %struct.wait_queue_head* %wait_address, %struct.poll_table_struct* %p) #1 !dbg !10414 {
entry:
  %filp.addr = alloca %struct.file*, align 8
  %wait_address.addr = alloca %struct.wait_queue_head*, align 8
  %p.addr = alloca %struct.poll_table_struct*, align 8
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !10417, metadata !DIExpression()), !dbg !10418
  store %struct.wait_queue_head* %wait_address, %struct.wait_queue_head** %wait_address.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wait_queue_head** %wait_address.addr, metadata !10419, metadata !DIExpression()), !dbg !10420
  store %struct.poll_table_struct* %p, %struct.poll_table_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %p.addr, metadata !10421, metadata !DIExpression()), !dbg !10422
  %0 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !10423
  %tobool = icmp ne %struct.poll_table_struct* %0, null, !dbg !10423
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10425

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !10426
  %_qproc = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %1, i32 0, i32 0, !dbg !10427
  %2 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc, align 8, !dbg !10427
  %tobool1 = icmp ne void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)* %2, null, !dbg !10426
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !10428

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !10429
  %tobool3 = icmp ne %struct.wait_queue_head* %3, null, !dbg !10429
  br i1 %tobool3, label %if.then, label %if.end, !dbg !10430

if.then:                                          ; preds = %land.lhs.true2
  %4 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !10431
  %_qproc4 = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %4, i32 0, i32 0, !dbg !10432
  %5 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc4, align 8, !dbg !10432
  %6 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !10433
  %7 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !10434
  %8 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !10435
  call void %5(%struct.file* %6, %struct.wait_queue_head* %7, %struct.poll_table_struct* %8) #13, !dbg !10431
  br label %if.end, !dbg !10431

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !10436
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @might_fault() #1 !dbg !10437 {
entry:
  ret void, !dbg !10438
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @credit_entropy_bits_safe(%struct.entropy_store* %r, i32 %nbits) #1 !dbg !10439 {
entry:
  %retval = alloca i32, align 4
  %r.addr = alloca %struct.entropy_store*, align 8
  %nbits.addr = alloca i32, align 4
  %nbits_max = alloca i32, align 4
  %__UNIQUE_ID___x313 = alloca i32, align 4
  %__UNIQUE_ID___y314 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.entropy_store* %r, %struct.entropy_store** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.entropy_store** %r.addr, metadata !10442, metadata !DIExpression()), !dbg !10443
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !10444, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.declare(metadata i32* %nbits_max, metadata !10446, metadata !DIExpression()), !dbg !10447
  %0 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !10448
  %poolinfo = getelementptr inbounds %struct.entropy_store, %struct.entropy_store* %0, i32 0, i32 0, !dbg !10449
  %1 = load %struct.poolinfo*, %struct.poolinfo** %poolinfo, align 8, !dbg !10449
  %poolwords = getelementptr inbounds %struct.poolinfo, %struct.poolinfo* %1, i32 0, i32 1, !dbg !10450
  %2 = load i32, i32* %poolwords, align 4, !dbg !10450
  %mul = mul i32 %2, 32, !dbg !10451
  store i32 %mul, i32* %nbits_max, align 4, !dbg !10447
  %3 = load i32, i32* %nbits.addr, align 4, !dbg !10452
  %cmp = icmp slt i32 %3, 0, !dbg !10454
  br i1 %cmp, label %if.then, label %if.end, !dbg !10455

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10456
  br label %return, !dbg !10456

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x313, metadata !10457, metadata !DIExpression()), !dbg !10459
  %4 = load i32, i32* %nbits.addr, align 4, !dbg !10459
  store i32 %4, i32* %__UNIQUE_ID___x313, align 4, !dbg !10459
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y314, metadata !10460, metadata !DIExpression()), !dbg !10459
  %5 = load i32, i32* %nbits_max, align 4, !dbg !10459
  store i32 %5, i32* %__UNIQUE_ID___y314, align 4, !dbg !10459
  %6 = load i32, i32* %__UNIQUE_ID___x313, align 4, !dbg !10459
  %7 = load i32, i32* %__UNIQUE_ID___y314, align 4, !dbg !10459
  %cmp1 = icmp slt i32 %6, %7, !dbg !10459
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !10459

cond.true:                                        ; preds = %if.end
  %8 = load i32, i32* %__UNIQUE_ID___x313, align 4, !dbg !10459
  br label %cond.end, !dbg !10459

cond.false:                                       ; preds = %if.end
  %9 = load i32, i32* %__UNIQUE_ID___y314, align 4, !dbg !10459
  br label %cond.end, !dbg !10459

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ %9, %cond.false ], !dbg !10459
  store i32 %cond, i32* %tmp, align 4, !dbg !10459
  %10 = load i32, i32* %tmp, align 4, !dbg !10459
  store i32 %10, i32* %nbits.addr, align 4, !dbg !10461
  %11 = load %struct.entropy_store*, %struct.entropy_store** %r.addr, align 8, !dbg !10462
  %12 = load i32, i32* %nbits.addr, align 4, !dbg !10463
  call void @credit_entropy_bits(%struct.entropy_store* %11, i32 %12) #13, !dbg !10464
  store i32 0, i32* %retval, align 4, !dbg !10465
  br label %return, !dbg !10465

return:                                           ; preds = %cond.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !10466
  ret i32 %13, !dbg !10466
}

; Function Attrs: noredzone
declare dso_local i32 @fasync_helper(i32, %struct.file*, i32, %struct.fasync_struct**) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__do_sys_getrandom(i8* %buf, i64 %count, i32 %flags) #1 !dbg !10467 {
entry:
  %retval = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10470, metadata !DIExpression()), !dbg !10471
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10472, metadata !DIExpression()), !dbg !10471
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10473, metadata !DIExpression()), !dbg !10471
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10474, metadata !DIExpression()), !dbg !10475
  %0 = load i32, i32* %flags.addr, align 4, !dbg !10476
  %and = and i32 %0, -8, !dbg !10478
  %tobool = icmp ne i32 %and, 0, !dbg !10478
  br i1 %tobool, label %if.then, label %if.end, !dbg !10479

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !10480
  br label %return, !dbg !10480

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %flags.addr, align 4, !dbg !10481
  %and1 = and i32 %1, 6, !dbg !10483
  %cmp = icmp eq i32 %and1, 6, !dbg !10484
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10485

if.then2:                                         ; preds = %if.end
  store i64 -22, i64* %retval, align 8, !dbg !10486
  br label %return, !dbg !10486

if.end3:                                          ; preds = %if.end
  %2 = load i64, i64* %count.addr, align 8, !dbg !10487
  %cmp4 = icmp ugt i64 %2, 2147483647, !dbg !10489
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !10490

if.then5:                                         ; preds = %if.end3
  store i64 2147483647, i64* %count.addr, align 8, !dbg !10491
  br label %if.end6, !dbg !10492

if.end6:                                          ; preds = %if.then5, %if.end3
  %3 = load i32, i32* %flags.addr, align 4, !dbg !10493
  %and7 = and i32 %3, 4, !dbg !10495
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10495
  br i1 %tobool8, label %if.end27, label %land.lhs.true, !dbg !10496

land.lhs.true:                                    ; preds = %if.end6
  %4 = load i32, i32* @crng_init, align 4, !dbg !10497
  %cmp9 = icmp sgt i32 %4, 1, !dbg !10497
  %lnot = xor i1 %cmp9, true, !dbg !10497
  %lnot10 = xor i1 %lnot, true, !dbg !10497
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !10497
  %conv = sext i32 %lnot.ext to i64, !dbg !10497
  %tobool11 = icmp ne i64 %conv, 0, !dbg !10497
  br i1 %tobool11, label %if.end27, label %if.then12, !dbg !10498

if.then12:                                        ; preds = %land.lhs.true
  %5 = load i32, i32* %flags.addr, align 4, !dbg !10499
  %and13 = and i32 %5, 1, !dbg !10502
  %tobool14 = icmp ne i32 %and13, 0, !dbg !10502
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !10503

if.then15:                                        ; preds = %if.then12
  store i64 -11, i64* %retval, align 8, !dbg !10504
  br label %return, !dbg !10504

if.end16:                                         ; preds = %if.then12
  %call = call i32 @wait_for_random_bytes() #13, !dbg !10505
  store i32 %call, i32* %ret, align 4, !dbg !10506
  %6 = load i32, i32* %ret, align 4, !dbg !10507
  %tobool17 = icmp ne i32 %6, 0, !dbg !10507
  %lnot18 = xor i1 %tobool17, true, !dbg !10507
  %lnot20 = xor i1 %lnot18, true, !dbg !10507
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !10507
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !10507
  %tobool23 = icmp ne i64 %conv22, 0, !dbg !10507
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !10509

if.then24:                                        ; preds = %if.end16
  %7 = load i32, i32* %ret, align 4, !dbg !10510
  %conv25 = sext i32 %7 to i64, !dbg !10510
  store i64 %conv25, i64* %retval, align 8, !dbg !10511
  br label %return, !dbg !10511

if.end26:                                         ; preds = %if.end16
  br label %if.end27, !dbg !10512

if.end27:                                         ; preds = %if.end26, %land.lhs.true, %if.end6
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !10513
  %9 = load i64, i64* %count.addr, align 8, !dbg !10514
  %call28 = call i64 @urandom_read_nowarn(%struct.file* null, i8* %8, i64 %9, i64* null) #13, !dbg !10515
  store i64 %call28, i64* %retval, align 8, !dbg !10516
  br label %return, !dbg !10516

return:                                           ; preds = %if.end27, %if.then24, %if.then15, %if.then2, %if.then
  %10 = load i64, i64* %retval, align 8, !dbg !10517
  ret i64 %10, !dbg !10517
}

; Function Attrs: noredzone
declare dso_local void @generate_random_uuid(i8*) #4

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @proc_dostring(%struct.ctl_table*, i32, i8*, i64*, i64*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_mix_pool_bytes(i8* %pool_name, i32 %bytes, i64 %IP) #1 !dbg !10518 {
entry:
  %pool_name.addr = alloca i8*, align 8
  %bytes.addr = alloca i32, align 4
  %IP.addr = alloca i64, align 8
  store i8* %pool_name, i8** %pool_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pool_name.addr, metadata !10519, metadata !DIExpression()), !dbg !10520
  store i32 %bytes, i32* %bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bytes.addr, metadata !10521, metadata !DIExpression()), !dbg !10520
  store i64 %IP, i64* %IP.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %IP.addr, metadata !10522, metadata !DIExpression()), !dbg !10520
  ret void, !dbg !10520
}

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { nounwind readnone }
attributes #4 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone willreturn }
attributes #10 = { cold noredzone noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind willreturn }
attributes #12 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noredzone }
attributes #14 = { noredzone nounwind }
attributes #15 = { cold noredzone }
attributes #16 = { noredzone nounwind readnone }
attributes #17 = { cold noredzone noreturn }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!5615}
!llvm.module.flags = !{!5616, !5617, !5618, !5619}
!llvm.ident = !{!5620}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_ratelimit_disable", scope: !2, file: !3, line: 481, type: !5612, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !167, globals: !5398, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/char/random.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !24, !29, !35, !47, !53, !60, !67, !72, !82, !89, !95, !104, !112, !118, !124, !131, !138, !143, !150, !160}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !6, line: 41, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !12, line: 15, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !19, line: 546, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !25, line: 65, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28}
!27 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !30, line: 16, baseType: !7, size: 32, elements: !31)
!30 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!31 = !{!32, !33, !34}
!32 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !36, line: 49, baseType: !7, size: 32, elements: !37)
!36 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!37 = !{!38, !39, !40, !41, !42, !43, !44, !45, !46}
!38 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!39 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!41 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!42 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!43 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!44 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!45 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!46 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !48, line: 118, baseType: !7, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !54, line: 19, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58, !59}
!56 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!59 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !61, line: 502, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65, !66}
!63 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !48, line: 315, baseType: !7, size: 32, elements: !68)
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "perf_event_state", file: !73, line: 566, baseType: !74, size: 32, elements: !75)
!73 = !DIFile(filename: "./include/linux/perf_event.h", directory: "/home/lizy2001/genbc/linux")
!74 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!75 = !{!76, !77, !78, !79, !80, !81}
!76 = !DIEnumerator(name: "PERF_EVENT_STATE_DEAD", value: -4)
!77 = !DIEnumerator(name: "PERF_EVENT_STATE_EXIT", value: -3)
!78 = !DIEnumerator(name: "PERF_EVENT_STATE_ERROR", value: -2)
!79 = !DIEnumerator(name: "PERF_EVENT_STATE_OFF", value: -1)
!80 = !DIEnumerator(name: "PERF_EVENT_STATE_INACTIVE", value: 0)
!81 = !DIEnumerator(name: "PERF_EVENT_STATE_ACTIVE", value: 1)
!82 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !83, line: 59, baseType: !7, size: 32, elements: !84)
!83 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!84 = !{!85, !86, !87, !88}
!85 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!87 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!88 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!89 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !90, line: 54, baseType: !7, size: 32, elements: !91)
!90 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!91 = !{!92, !93, !94}
!92 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!93 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!94 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !96, line: 296, baseType: !7, size: 32, elements: !97)
!96 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!97 = !{!98, !99, !100, !101, !102, !103}
!98 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!104 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !105, line: 9, baseType: !7, size: 32, elements: !106)
!105 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!106 = !{!107, !108, !109, !110, !111}
!107 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!108 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!109 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!110 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!111 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!112 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !113, line: 26, baseType: !7, size: 32, elements: !114)
!113 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!114 = !{!115, !116, !117}
!115 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!116 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !119, line: 44, baseType: !7, size: 32, elements: !120)
!119 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!120 = !{!121, !122, !123}
!121 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!123 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!124 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !125, line: 343, baseType: !7, size: 32, elements: !126)
!125 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!126 = !{!127, !128, !129, !130}
!127 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!129 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!130 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!131 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !61, line: 524, baseType: !7, size: 32, elements: !132)
!132 = !{!133, !134, !135, !136, !137}
!133 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!134 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!135 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!136 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!137 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!138 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !139, line: 10, baseType: !7, size: 32, elements: !140)
!139 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!140 = !{!141, !142}
!141 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!142 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tk_offsets", file: !144, line: 60, baseType: !7, size: 32, elements: !145)
!144 = !DIFile(filename: "./include/linux/timekeeping.h", directory: "/home/lizy2001/genbc/linux")
!145 = !{!146, !147, !148, !149}
!146 = !DIEnumerator(name: "TK_OFFS_REAL", value: 0, isUnsigned: true)
!147 = !DIEnumerator(name: "TK_OFFS_BOOT", value: 1, isUnsigned: true)
!148 = !DIEnumerator(name: "TK_OFFS_TAI", value: 2, isUnsigned: true)
!149 = !DIEnumerator(name: "TK_OFFS_MAX", value: 3, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "system_states", file: !151, line: 576, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!152 = !{!153, !154, !155, !156, !157, !158, !159}
!153 = !DIEnumerator(name: "SYSTEM_BOOTING", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "SYSTEM_SCHEDULING", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "SYSTEM_RUNNING", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "SYSTEM_HALT", value: 3, isUnsigned: true)
!157 = !DIEnumerator(name: "SYSTEM_POWER_OFF", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "SYSTEM_RESTART", value: 5, isUnsigned: true)
!159 = !DIEnumerator(name: "SYSTEM_SUSPEND", value: 6, isUnsigned: true)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !161, line: 305, baseType: !7, size: 32, elements: !162)
!161 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!162 = !{!163, !164, !165, !166}
!163 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!164 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!165 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!166 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!167 = !{!168, !169, !183, !184, !186, !74, !187, !7, !189, !225, !228, !231, !235, !238, !239, !240, !265, !266, !269, !270, !271, !280, !281, !283, !286, !288, !292, !293, !311, !314, !315, !324, !326, !328, !329, !5397, !976, !1052, !883}
!168 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fast_pool", file: !3, line: 602, size: 256, elements: !171)
!171 = !{!172, !178, !179, !181}
!172 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !170, file: !3, line: 603, baseType: !173, size: 128)
!173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 128, elements: !176)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !175, line: 27, baseType: !7)
!175 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!176 = !{!177}
!177 = !DISubrange(count: 4)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !170, file: !3, line: 604, baseType: !168, size: 64, offset: 128)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "reg_idx", scope: !170, file: !3, line: 605, baseType: !180, size: 16, offset: 192)
!180 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !170, file: !3, line: 606, baseType: !182, size: 8, offset: 208)
!182 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 64)
!185 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!186 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!187 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !188, line: 148, baseType: !7)
!188 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 64)
!190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "batched_entropy", file: !3, line: 2169, size: 576, elements: !191)
!191 = !{!192, !208, !209}
!192 = !DIDerivedType(tag: DW_TAG_member, scope: !190, file: !3, line: 2170, baseType: !193, size: 512)
!193 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !190, file: !3, line: 2170, size: 512, elements: !194)
!194 = !{!195, !203}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "entropy_u64", scope: !193, file: !3, line: 2171, baseType: !196, size: 512)
!196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 512, elements: !201)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !198, line: 23, baseType: !199)
!198 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !175, line: 31, baseType: !200)
!200 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!201 = !{!202}
!202 = !DISubrange(count: 8)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "entropy_u32", scope: !193, file: !3, line: 2172, baseType: !204, size: 512)
!204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 512, elements: !206)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !198, line: 21, baseType: !174)
!206 = !{!207}
!207 = !DISubrange(count: 16)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "position", scope: !190, file: !3, line: 2174, baseType: !7, size: 32, offset: 512)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "batch_lock", scope: !190, file: !3, line: 2175, baseType: !210, offset: 544)
!210 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !211, line: 83, baseType: !212)
!211 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !211, line: 71, elements: !213)
!213 = !{!214}
!214 = !DIDerivedType(tag: DW_TAG_member, scope: !212, file: !211, line: 72, baseType: !215)
!215 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !212, file: !211, line: 72, elements: !216)
!216 = !{!217}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !215, file: !211, line: 73, baseType: !218)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !211, line: 20, elements: !219)
!219 = !{!220}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !218, file: !211, line: 21, baseType: !221)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !222, line: 25, baseType: !223)
!222 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !222, line: 25, elements: !224)
!224 = !{}
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !198, line: 17, baseType: !227)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !175, line: 21, baseType: !182)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !230)
!230 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !200)
!231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !233)
!233 = !DIDerivedType(tag: DW_TAG_typedef, name: "cycles_t", file: !234, line: 14, baseType: !200)
!234 = !DIFile(filename: "./arch/x86/include/asm/tsc.h", directory: "/home/lizy2001/genbc/linux")
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !237)
!237 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !186)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64)
!241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !242, line: 56, size: 1344, elements: !243)
!242 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!243 = !{!244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !241, file: !242, line: 61, baseType: !168, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !241, file: !242, line: 62, baseType: !168, size: 64, offset: 64)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !241, file: !242, line: 63, baseType: !168, size: 64, offset: 128)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !241, file: !242, line: 64, baseType: !168, size: 64, offset: 192)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !241, file: !242, line: 65, baseType: !168, size: 64, offset: 256)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !241, file: !242, line: 66, baseType: !168, size: 64, offset: 320)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !241, file: !242, line: 68, baseType: !168, size: 64, offset: 384)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !241, file: !242, line: 69, baseType: !168, size: 64, offset: 448)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !241, file: !242, line: 70, baseType: !168, size: 64, offset: 512)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !241, file: !242, line: 71, baseType: !168, size: 64, offset: 576)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !241, file: !242, line: 72, baseType: !168, size: 64, offset: 640)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !241, file: !242, line: 73, baseType: !168, size: 64, offset: 704)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !241, file: !242, line: 74, baseType: !168, size: 64, offset: 768)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !241, file: !242, line: 75, baseType: !168, size: 64, offset: 832)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !241, file: !242, line: 76, baseType: !168, size: 64, offset: 896)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !241, file: !242, line: 81, baseType: !168, size: 64, offset: 960)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !241, file: !242, line: 83, baseType: !168, size: 64, offset: 1024)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !241, file: !242, line: 84, baseType: !168, size: 64, offset: 1088)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !241, file: !242, line: 85, baseType: !168, size: 64, offset: 1152)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !241, file: !242, line: 86, baseType: !168, size: 64, offset: 1216)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !241, file: !242, line: 87, baseType: !168, size: 64, offset: 1280)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!268 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !180)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !274, line: 17, size: 64, elements: !275)
!274 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!275 = !{!276}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !273, file: !274, line: 17, baseType: !277, size: 64)
!277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !168, size: 64, elements: !278)
!278 = !{!279}
!279 = !DISubrange(count: 1)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !285)
!285 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !74)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !205)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !188, line: 55, baseType: !289)
!289 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !290, line: 72, baseType: !291)
!290 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !290, line: 16, baseType: !168)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "random_ready_callback", file: !295, line: 17, size: 256, elements: !296)
!295 = !DIFile(filename: "./include/linux/random.h", directory: "/home/lizy2001/genbc/linux")
!296 = !{!297, !303, !307}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !294, file: !295, line: 18, baseType: !298, size: 128)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !188, line: 178, size: 128, elements: !299)
!299 = !{!300, !302}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !298, file: !188, line: 179, baseType: !301, size: 64)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !298, file: !188, line: 179, baseType: !301, size: 64, offset: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !294, file: !295, line: 19, baseType: !304, size: 64, offset: 128)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !293}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !294, file: !295, line: 20, baseType: !308, size: 64, offset: 192)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !310, line: 76, flags: DIFlagFwdDecl)
!310 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !313)
!313 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !183)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !317)
!317 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !318)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !188, line: 186, size: 128, elements: !321)
!321 = !{!322, !323}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !320, file: !188, line: 187, baseType: !319, size: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !320, file: !188, line: 187, baseType: !318, size: 64, offset: 64)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !301)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !325)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 64)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !331, line: 640, size: 48640, elements: !332)
!331 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!332 = !{!333, !339, !340, !341, !351, !352, !353, !354, !355, !356, !357, !358, !362, !387, !398, !495, !496, !497, !501, !502, !504, !505, !4190, !4191, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4273, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4288, !4289, !4290, !4291, !4292, !4293, !4294, !4295, !4296, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4320, !4325, !4326, !4327, !4328, !4329, !4331, !4334, !4337, !4340, !4343, !4398, !4499, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4545, !4546, !4547, !4548, !4549, !4554, !4555, !4556, !4559, !4560, !4562, !4571, !4574, !4575, !4576, !4579, !4580, !4659, !4660, !4663, !4664, !4667, !4668, !4669, !5185, !5186, !5187, !5200, !5201, !5202, !5212, !5217, !5218, !5224, !5225, !5226, !5227, !5228, !5229, !5230, !5231, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !330, file: !331, line: 646, baseType: !334, size: 128)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !335, line: 56, size: 128, elements: !336)
!335 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!336 = !{!337, !338}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !334, file: !335, line: 57, baseType: !168, size: 64)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !334, file: !335, line: 58, baseType: !205, size: 32, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !330, file: !331, line: 649, baseType: !237, size: 64, offset: 128)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !330, file: !331, line: 657, baseType: !183, size: 64, offset: 192)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !330, file: !331, line: 658, baseType: !342, size: 32, offset: 256)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !343, line: 113, baseType: !344)
!343 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !343, line: 111, size: 32, elements: !345)
!345 = !{!346}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !344, file: !343, line: 112, baseType: !347, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !188, line: 168, baseType: !348)
!348 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 166, size: 32, elements: !349)
!349 = !{!350}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !348, file: !188, line: 167, baseType: !74, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !330, file: !331, line: 660, baseType: !7, size: 32, offset: 288)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !330, file: !331, line: 661, baseType: !7, size: 32, offset: 320)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !330, file: !331, line: 684, baseType: !74, size: 32, offset: 352)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !330, file: !331, line: 686, baseType: !74, size: 32, offset: 384)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !330, file: !331, line: 687, baseType: !74, size: 32, offset: 416)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !330, file: !331, line: 688, baseType: !74, size: 32, offset: 448)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !330, file: !331, line: 689, baseType: !7, size: 32, offset: 480)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !330, file: !331, line: 691, baseType: !359, size: 64, offset: 512)
!359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64)
!360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !361)
!361 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !331, line: 691, flags: DIFlagFwdDecl)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !330, file: !331, line: 692, baseType: !363, size: 832, offset: 576)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !331, line: 451, size: 832, elements: !364)
!364 = !{!365, !370, !378, !379, !380, !381, !382, !383, !384, !385}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !363, file: !331, line: 453, baseType: !366, size: 128)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !331, line: 325, size: 128, elements: !367)
!367 = !{!368, !369}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !366, file: !331, line: 326, baseType: !168, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !366, file: !331, line: 327, baseType: !205, size: 32, offset: 64)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !363, file: !331, line: 454, baseType: !371, size: 192, align: 64, offset: 128)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !372, line: 24, size: 192, align: 64, elements: !373)
!372 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!373 = !{!374, !375, !377}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !371, file: !372, line: 25, baseType: !168, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !371, file: !372, line: 26, baseType: !376, size: 64, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !371, file: !372, line: 27, baseType: !376, size: 64, offset: 128)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !363, file: !331, line: 455, baseType: !298, size: 128, offset: 320)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !363, file: !331, line: 456, baseType: !7, size: 32, offset: 448)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !363, file: !331, line: 458, baseType: !197, size: 64, offset: 512)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !363, file: !331, line: 459, baseType: !197, size: 64, offset: 576)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !363, file: !331, line: 460, baseType: !197, size: 64, offset: 640)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !363, file: !331, line: 461, baseType: !197, size: 64, offset: 704)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !363, file: !331, line: 463, baseType: !197, size: 64, offset: 768)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !363, file: !331, line: 465, baseType: !386, offset: 832)
!386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !331, line: 415, elements: !224)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !330, file: !331, line: 693, baseType: !388, size: 384, offset: 1408)
!388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !331, line: 489, size: 384, elements: !389)
!389 = !{!390, !391, !392, !393, !394, !395, !396}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !388, file: !331, line: 490, baseType: !298, size: 128)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !388, file: !331, line: 491, baseType: !168, size: 64, offset: 128)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !388, file: !331, line: 492, baseType: !168, size: 64, offset: 192)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !388, file: !331, line: 493, baseType: !7, size: 32, offset: 256)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !388, file: !331, line: 494, baseType: !180, size: 16, offset: 288)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !388, file: !331, line: 495, baseType: !180, size: 16, offset: 304)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !388, file: !331, line: 497, baseType: !397, size: 64, offset: 320)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !330, file: !331, line: 697, baseType: !399, size: 1792, offset: 1792)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !331, line: 507, size: 1792, elements: !400)
!400 = !{!401, !402, !403, !404, !405, !406, !407, !411, !412, !413, !414, !415, !416, !417, !492, !493}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !399, file: !331, line: 508, baseType: !371, size: 192, align: 64)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !399, file: !331, line: 515, baseType: !197, size: 64, offset: 192)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !399, file: !331, line: 516, baseType: !197, size: 64, offset: 256)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !399, file: !331, line: 517, baseType: !197, size: 64, offset: 320)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !399, file: !331, line: 518, baseType: !197, size: 64, offset: 384)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !399, file: !331, line: 519, baseType: !197, size: 64, offset: 448)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !399, file: !331, line: 526, baseType: !408, size: 64, offset: 512)
!408 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !198, line: 22, baseType: !409)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !175, line: 30, baseType: !410)
!410 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !399, file: !331, line: 527, baseType: !197, size: 64, offset: 576)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !399, file: !331, line: 528, baseType: !7, size: 32, offset: 640)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !399, file: !331, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !399, file: !331, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !399, file: !331, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !399, file: !331, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !399, file: !331, line: 563, baseType: !418, size: 512, offset: 704)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !25, line: 118, size: 512, elements: !419)
!419 = !{!420, !428, !429, !434, !488, !489, !490, !491}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !418, file: !25, line: 119, baseType: !421, size: 256)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !422, line: 9, size: 256, elements: !423)
!422 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!423 = !{!424, !425}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !421, file: !422, line: 10, baseType: !371, size: 192, align: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !421, file: !422, line: 11, baseType: !426, size: 64, offset: 192)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !427, line: 29, baseType: !408)
!427 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!428 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !418, file: !25, line: 120, baseType: !426, size: 64, offset: 256)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !418, file: !25, line: 121, baseType: !430, size: 64, offset: 320)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = !DISubroutineType(types: !432)
!432 = !{!24, !433}
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !418, file: !25, line: 122, baseType: !435, size: 64, offset: 384)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !25, line: 159, size: 512, align: 512, elements: !437)
!437 = !{!438, !457, !458, !461, !471, !472, !483, !487}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !436, file: !25, line: 160, baseType: !439, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !25, line: 214, size: 4608, align: 512, elements: !441)
!441 = !{!442, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !440, file: !25, line: 215, baseType: !443)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !211, line: 29, baseType: !218)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !440, file: !25, line: 216, baseType: !7, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !440, file: !25, line: 217, baseType: !7, size: 32, offset: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !440, file: !25, line: 218, baseType: !7, size: 32, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !440, file: !25, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !440, file: !25, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !440, file: !25, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !440, file: !25, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !440, file: !25, line: 233, baseType: !426, size: 64, offset: 128)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !440, file: !25, line: 234, baseType: !433, size: 64, offset: 192)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !440, file: !25, line: 235, baseType: !426, size: 64, offset: 256)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !440, file: !25, line: 236, baseType: !433, size: 64, offset: 320)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !440, file: !25, line: 237, baseType: !456, size: 4096, offset: 512)
!456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !436, size: 4096, elements: !201)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !436, file: !25, line: 161, baseType: !7, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !436, file: !25, line: 162, baseType: !459, size: 32, offset: 96)
!459 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !188, line: 27, baseType: !460)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !290, line: 96, baseType: !74)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !436, file: !25, line: 163, baseType: !462, size: 32, offset: 128)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !463, line: 276, baseType: !464)
!463 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !463, line: 276, size: 32, elements: !465)
!465 = !{!466}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !464, file: !463, line: 276, baseType: !467, size: 32)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !463, line: 70, baseType: !468)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !463, line: 65, size: 32, elements: !469)
!469 = !{!470}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !468, file: !463, line: 66, baseType: !7, size: 32)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !436, file: !25, line: 164, baseType: !433, size: 64, offset: 192)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !436, file: !25, line: 165, baseType: !473, size: 128, offset: 256)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !422, line: 14, size: 128, elements: !474)
!474 = !{!475}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !473, file: !422, line: 15, baseType: !476, size: 128)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !372, line: 125, size: 128, elements: !477)
!477 = !{!478, !482}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !476, file: !372, line: 126, baseType: !479, size: 64)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !372, line: 31, size: 64, elements: !480)
!480 = !{!481}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !479, file: !372, line: 32, baseType: !376, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !476, file: !372, line: 127, baseType: !376, size: 64, offset: 64)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !436, file: !25, line: 166, baseType: !484, size: 64, offset: 384)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = !DISubroutineType(types: !486)
!486 = !{!426}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !436, file: !25, line: 167, baseType: !426, size: 64, offset: 448)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !418, file: !25, line: 123, baseType: !226, size: 8, offset: 448)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !418, file: !25, line: 124, baseType: !226, size: 8, offset: 456)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !418, file: !25, line: 125, baseType: !226, size: 8, offset: 464)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !418, file: !25, line: 126, baseType: !226, size: 8, offset: 472)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !399, file: !331, line: 572, baseType: !418, size: 512, offset: 1216)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !399, file: !331, line: 580, baseType: !494, size: 64, offset: 1728)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !330, file: !331, line: 721, baseType: !7, size: 32, offset: 3584)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !330, file: !331, line: 722, baseType: !74, size: 32, offset: 3616)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !330, file: !331, line: 723, baseType: !498, size: 64, offset: 3648)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !500)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !274, line: 17, baseType: !273)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !330, file: !331, line: 724, baseType: !500, size: 64, offset: 3712)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !330, file: !331, line: 749, baseType: !503, offset: 3776)
!503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !331, line: 290, elements: !224)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !330, file: !331, line: 751, baseType: !298, size: 128, offset: 3776)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !330, file: !331, line: 757, baseType: !506, size: 64, offset: 3904)
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !508, line: 388, size: 7296, elements: !509)
!508 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!509 = !{!510, !4188}
!510 = !DIDerivedType(tag: DW_TAG_member, scope: !507, file: !508, line: 389, baseType: !511, size: 7296)
!511 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !507, file: !508, line: 389, size: 7296, elements: !512)
!512 = !{!513, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4107, !4111, !4117, !4120, !4159, !4160, !4172, !4173, !4176, !4177, !4178, !4181, !4182, !4183, !4186, !4187}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !511, file: !508, line: 390, baseType: !514, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !508, line: 305, size: 1472, elements: !516)
!516 = !{!517, !518, !519, !520, !521, !522, !523, !524, !532, !533, !538, !539, !542, !4057, !4058, !4059, !4060, !4061}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !515, file: !508, line: 308, baseType: !168, size: 64)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !515, file: !508, line: 309, baseType: !168, size: 64, offset: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !515, file: !508, line: 313, baseType: !514, size: 64, offset: 128)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !515, file: !508, line: 313, baseType: !514, size: 64, offset: 192)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !515, file: !508, line: 315, baseType: !371, size: 192, align: 64, offset: 256)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !515, file: !508, line: 323, baseType: !168, size: 64, offset: 448)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !515, file: !508, line: 327, baseType: !506, size: 64, offset: 512)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !515, file: !508, line: 333, baseType: !525, size: 64, offset: 576)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !526, line: 284, baseType: !527)
!526 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !526, line: 284, size: 64, elements: !528)
!528 = !{!529}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !527, file: !526, line: 284, baseType: !530, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !531, line: 19, baseType: !168)
!531 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!532 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !515, file: !508, line: 334, baseType: !168, size: 64, offset: 640)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !515, file: !508, line: 343, baseType: !534, size: 256, offset: 704)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !515, file: !508, line: 340, size: 256, elements: !535)
!535 = !{!536, !537}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !534, file: !508, line: 341, baseType: !371, size: 192, align: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !534, file: !508, line: 342, baseType: !168, size: 64, offset: 192)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !515, file: !508, line: 351, baseType: !298, size: 128, offset: 960)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !515, file: !508, line: 353, baseType: !540, size: 64, offset: 1088)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !508, line: 353, flags: DIFlagFwdDecl)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !515, file: !508, line: 356, baseType: !543, size: 64, offset: 1152)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !19, line: 557, size: 832, elements: !546)
!546 = !{!547, !551, !552, !556, !560, !4031, !4035, !4039, !4043, !4044, !4045, !4049, !4053}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !545, file: !19, line: 558, baseType: !548, size: 64)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!549 = !DISubroutineType(types: !550)
!550 = !{null, !514}
!551 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !545, file: !19, line: 559, baseType: !548, size: 64, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !545, file: !19, line: 560, baseType: !553, size: 64, offset: 128)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = !DISubroutineType(types: !555)
!555 = !{!74, !514, !168}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !545, file: !19, line: 561, baseType: !557, size: 64, offset: 192)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DISubroutineType(types: !559)
!559 = !{!74, !514}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !545, file: !19, line: 562, baseType: !561, size: 64, offset: 256)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DISubroutineType(types: !563)
!563 = !{!564, !565}
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !508, line: 682, baseType: !7)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !19, line: 508, size: 768, elements: !567)
!567 = !{!568, !569, !570, !571, !572, !573, !580, !587, !593, !4025, !4026, !4028, !4030}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !566, file: !19, line: 509, baseType: !514, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !566, file: !19, line: 510, baseType: !7, size: 32, offset: 64)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !566, file: !19, line: 511, baseType: !187, size: 32, offset: 96)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !566, file: !19, line: 512, baseType: !168, size: 64, offset: 128)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !566, file: !19, line: 513, baseType: !168, size: 64, offset: 192)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !566, file: !19, line: 514, baseType: !574, size: 64, offset: 256)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !526, line: 385, baseType: !576)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !526, line: 385, size: 64, elements: !577)
!577 = !{!578}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !576, file: !526, line: 385, baseType: !579, size: 64)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !531, line: 15, baseType: !168)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !566, file: !19, line: 516, baseType: !581, size: 64, offset: 320)
!581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 64)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !526, line: 359, baseType: !583)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !526, line: 359, size: 64, elements: !584)
!584 = !{!585}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !583, file: !526, line: 359, baseType: !586, size: 64)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !531, line: 16, baseType: !168)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !566, file: !19, line: 519, baseType: !588, size: 64, offset: 384)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !531, line: 21, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !531, line: 21, size: 64, elements: !590)
!590 = !{!591}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !589, file: !531, line: 21, baseType: !592, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !531, line: 14, baseType: !168)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !566, file: !19, line: 521, baseType: !594, size: 64, offset: 448)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !508, line: 68, size: 512, align: 128, elements: !596)
!596 = !{!597, !598, !4017, !4024}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !595, file: !508, line: 69, baseType: !168, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, scope: !595, file: !508, line: 77, baseType: !599, size: 320, offset: 64)
!599 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !595, file: !508, line: 77, size: 320, elements: !600)
!600 = !{!601, !3910, !3915, !3941, !3949, !3955, !3968, !4016}
!601 = !DIDerivedType(tag: DW_TAG_member, scope: !599, file: !508, line: 78, baseType: !602, size: 320)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !599, file: !508, line: 78, size: 320, elements: !603)
!603 = !{!604, !605, !3908, !3909}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !602, file: !508, line: 84, baseType: !298, size: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !602, file: !508, line: 86, baseType: !606, size: 64, offset: 128)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !96, line: 451, size: 1216, align: 64, elements: !608)
!608 = !{!609, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3903, !3904, !3905, !3906, !3907}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !607, file: !96, line: 452, baseType: !610, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !96, line: 610, size: 4224, elements: !612)
!612 = !{!613, !615, !616, !624, !631, !632, !3729, !3730, !3731, !3732, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3772, !3780, !3781, !3782, !3792, !3793, !3794, !3795}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !611, file: !96, line: 611, baseType: !614, size: 16)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !188, line: 19, baseType: !180)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !611, file: !96, line: 612, baseType: !180, size: 16, offset: 16)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !611, file: !96, line: 613, baseType: !617, size: 32, offset: 32)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !618, line: 23, baseType: !619)
!618 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !618, line: 21, size: 32, elements: !620)
!620 = !{!621}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !619, file: !618, line: 22, baseType: !622, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !188, line: 32, baseType: !623)
!623 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !290, line: 49, baseType: !7)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !611, file: !96, line: 614, baseType: !625, size: 32, offset: 64)
!625 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !618, line: 28, baseType: !626)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !618, line: 26, size: 32, elements: !627)
!627 = !{!628}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !626, file: !618, line: 27, baseType: !629, size: 32)
!629 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !188, line: 33, baseType: !630)
!630 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !290, line: 50, baseType: !7)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !611, file: !96, line: 615, baseType: !7, size: 32, offset: 96)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !611, file: !96, line: 622, baseType: !633, size: 64, offset: 128)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !635)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !96, line: 1864, size: 1536, align: 512, elements: !636)
!636 = !{!637, !3606, !3616, !3620, !3626, !3630, !3634, !3638, !3642, !3646, !3650, !3651, !3655, !3659, !3679, !3705, !3709, !3715, !3720, !3724, !3725}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !635, file: !96, line: 1865, baseType: !638, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DISubroutineType(types: !640)
!640 = !{!641, !610, !641, !7}
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !643, line: 89, size: 1536, elements: !644)
!643 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!644 = !{!645, !646, !651, !659, !660, !675, !676, !680, !692, !762, !3591, !3592, !3593, !3598, !3599, !3600}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !642, file: !643, line: 91, baseType: !7, size: 32)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !642, file: !643, line: 92, baseType: !647, size: 32, offset: 32)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !463, line: 277, baseType: !648)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !463, line: 277, size: 32, elements: !649)
!649 = !{!650}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !648, file: !463, line: 277, baseType: !467, size: 32)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !642, file: !643, line: 93, baseType: !652, size: 128, offset: 64)
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !653, line: 38, size: 128, elements: !654)
!653 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!654 = !{!655, !657}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !652, file: !653, line: 39, baseType: !656, size: 64)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !652, file: !653, line: 39, baseType: !658, size: 64, offset: 64)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !642, file: !643, line: 94, baseType: !641, size: 64, offset: 192)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !642, file: !643, line: 95, baseType: !661, size: 128, offset: 256)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !643, line: 47, size: 128, elements: !662)
!662 = !{!663, !672}
!663 = !DIDerivedType(tag: DW_TAG_member, scope: !661, file: !643, line: 48, baseType: !664, size: 64)
!664 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !661, file: !643, line: 48, size: 64, elements: !665)
!665 = !{!666, !671}
!666 = !DIDerivedType(tag: DW_TAG_member, scope: !664, file: !643, line: 49, baseType: !667, size: 64)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !664, file: !643, line: 49, size: 64, elements: !668)
!668 = !{!669, !670}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !667, file: !643, line: 50, baseType: !205, size: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !667, file: !643, line: 50, baseType: !205, size: 32, offset: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !664, file: !643, line: 52, baseType: !197, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !661, file: !643, line: 54, baseType: !673, size: 64, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !182)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !642, file: !643, line: 96, baseType: !610, size: 64, offset: 384)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !642, file: !643, line: 98, baseType: !677, size: 256, offset: 448)
!677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 256, elements: !678)
!678 = !{!679}
!679 = !DISubrange(count: 32)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !642, file: !643, line: 101, baseType: !681, size: 32, offset: 704)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !682, line: 25, size: 32, elements: !683)
!682 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!683 = !{!684}
!684 = !DIDerivedType(tag: DW_TAG_member, scope: !681, file: !682, line: 26, baseType: !685, size: 32)
!685 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !681, file: !682, line: 26, size: 32, elements: !686)
!686 = !{!687}
!687 = !DIDerivedType(tag: DW_TAG_member, scope: !685, file: !682, line: 30, baseType: !688, size: 32)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !685, file: !682, line: 30, size: 32, elements: !689)
!689 = !{!690, !691}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !688, file: !682, line: 31, baseType: !210)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !688, file: !682, line: 32, baseType: !74, size: 32)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !642, file: !643, line: 102, baseType: !693, size: 64, offset: 768)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !695)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !643, line: 135, size: 1024, align: 512, elements: !696)
!696 = !{!697, !701, !702, !709, !715, !719, !723, !727, !728, !732, !736, !748, !756}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !695, file: !643, line: 136, baseType: !698, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DISubroutineType(types: !700)
!700 = !{!74, !641, !7}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !695, file: !643, line: 137, baseType: !698, size: 64, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !695, file: !643, line: 138, baseType: !703, size: 64, offset: 128)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DISubroutineType(types: !705)
!705 = !{!74, !706, !708}
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !642)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !695, file: !643, line: 139, baseType: !710, size: 64, offset: 192)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!74, !706, !7, !281, !713}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !661)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !695, file: !643, line: 141, baseType: !716, size: 64, offset: 256)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DISubroutineType(types: !718)
!718 = !{!74, !706}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !695, file: !643, line: 142, baseType: !720, size: 64, offset: 320)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DISubroutineType(types: !722)
!722 = !{!74, !641}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !695, file: !643, line: 143, baseType: !724, size: 64, offset: 384)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DISubroutineType(types: !726)
!726 = !{null, !641}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !695, file: !643, line: 144, baseType: !724, size: 64, offset: 448)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !695, file: !643, line: 145, baseType: !729, size: 64, offset: 512)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DISubroutineType(types: !731)
!731 = !{null, !641, !610}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !695, file: !643, line: 146, baseType: !733, size: 64, offset: 576)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{!184, !641, !184, !74}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !695, file: !643, line: 147, baseType: !737, size: 64, offset: 640)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DISubroutineType(types: !739)
!739 = !{!740, !742}
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !643, line: 18, flags: DIFlagFwdDecl)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !744, line: 8, size: 128, elements: !745)
!744 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!745 = !{!746, !747}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !743, file: !744, line: 9, baseType: !740, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !743, file: !744, line: 10, baseType: !641, size: 64, offset: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !695, file: !643, line: 148, baseType: !749, size: 64, offset: 704)
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = !DISubroutineType(types: !751)
!751 = !{!74, !752, !754}
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !743)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !188, line: 30, baseType: !755)
!755 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !695, file: !643, line: 149, baseType: !757, size: 64, offset: 768)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DISubroutineType(types: !759)
!759 = !{!641, !641, !760}
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !611)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !642, file: !643, line: 103, baseType: !763, size: 64, offset: 832)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !96, line: 1416, size: 9472, elements: !765)
!765 = !{!766, !767, !770, !771, !772, !775, !818, !1723, !1805, !1888, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1904, !1908, !1909, !3449, !3450, !3453, !3454, !3455, !3496, !3523, !3524, !3525, !3526, !3527, !3528, !3531, !3532, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !764, file: !96, line: 1417, baseType: !298, size: 128)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !764, file: !96, line: 1418, baseType: !768, size: 32, offset: 128)
!768 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !188, line: 16, baseType: !769)
!769 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !188, line: 13, baseType: !205)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !764, file: !96, line: 1419, baseType: !182, size: 8, offset: 160)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !764, file: !96, line: 1420, baseType: !168, size: 64, offset: 192)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !764, file: !96, line: 1421, baseType: !773, size: 64, offset: 256)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !188, line: 46, baseType: !774)
!774 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !290, line: 88, baseType: !410)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !764, file: !96, line: 1422, baseType: !776, size: 64, offset: 320)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !96, line: 2228, size: 576, elements: !778)
!778 = !{!779, !780, !781, !788, !792, !796, !800, !801, !802, !806, !809, !810, !811, !815, !816, !817}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !777, file: !96, line: 2229, baseType: !281, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !777, file: !96, line: 2230, baseType: !74, size: 32, offset: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !777, file: !96, line: 2238, baseType: !782, size: 64, offset: 128)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{!74, !785}
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !787, line: 28, flags: DIFlagFwdDecl)
!787 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!788 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !777, file: !96, line: 2239, baseType: !789, size: 64, offset: 192)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !791)
!791 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !96, line: 70, flags: DIFlagFwdDecl)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !777, file: !96, line: 2240, baseType: !793, size: 64, offset: 256)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DISubroutineType(types: !795)
!795 = !{!641, !776, !74, !281, !183}
!796 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !777, file: !96, line: 2242, baseType: !797, size: 64, offset: 320)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DISubroutineType(types: !799)
!799 = !{null, !763}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !777, file: !96, line: 2243, baseType: !308, size: 64, offset: 384)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !777, file: !96, line: 2244, baseType: !776, size: 64, offset: 448)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !777, file: !96, line: 2245, baseType: !803, size: 64, offset: 512)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !188, line: 182, size: 64, elements: !804)
!804 = !{!805}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !803, file: !188, line: 183, baseType: !319, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !777, file: !96, line: 2247, baseType: !807, offset: 576)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !808, line: 187, elements: !224)
!808 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!809 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !777, file: !96, line: 2248, baseType: !807, offset: 576)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !777, file: !96, line: 2249, baseType: !807, offset: 576)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !777, file: !96, line: 2250, baseType: !812, offset: 576)
!812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, elements: !813)
!813 = !{!814}
!814 = !DISubrange(count: 3)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !777, file: !96, line: 2252, baseType: !807, offset: 576)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !777, file: !96, line: 2253, baseType: !807, offset: 576)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !777, file: !96, line: 2254, baseType: !807, offset: 576)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !764, file: !96, line: 1423, baseType: !819, size: 64, offset: 384)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !821)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !96, line: 1935, size: 1472, elements: !822)
!822 = !{!823, !827, !831, !832, !836, !856, !860, !861, !862, !866, !870, !871, !872, !873, !879, !884, !885, !1700, !1701, !1702, !1703, !1707, !1722}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !821, file: !96, line: 1936, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{!610, !763}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !821, file: !96, line: 1937, baseType: !828, size: 64, offset: 64)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DISubroutineType(types: !830)
!830 = !{null, !610}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !821, file: !96, line: 1938, baseType: !828, size: 64, offset: 128)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !821, file: !96, line: 1940, baseType: !833, size: 64, offset: 192)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DISubroutineType(types: !835)
!835 = !{null, !610, !74}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !821, file: !96, line: 1941, baseType: !837, size: 64, offset: 256)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DISubroutineType(types: !839)
!839 = !{!74, !610, !840}
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !6, line: 51, size: 320, elements: !842)
!842 = !{!843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !841, file: !6, line: 52, baseType: !186, size: 64)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !841, file: !6, line: 54, baseType: !186, size: 64, offset: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !841, file: !6, line: 61, baseType: !773, size: 64, offset: 128)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !841, file: !6, line: 62, baseType: !773, size: 64, offset: 192)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !841, file: !6, line: 64, baseType: !5, size: 32, offset: 256)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !841, file: !6, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !841, file: !6, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !841, file: !6, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !841, file: !6, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !841, file: !6, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !841, file: !6, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !841, file: !6, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !841, file: !6, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !821, file: !96, line: 1942, baseType: !857, size: 64, offset: 320)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DISubroutineType(types: !859)
!859 = !{!74, !610}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !821, file: !96, line: 1943, baseType: !828, size: 64, offset: 384)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !821, file: !96, line: 1944, baseType: !797, size: 64, offset: 448)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !821, file: !96, line: 1945, baseType: !863, size: 64, offset: 512)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{!74, !763, !74}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !821, file: !96, line: 1946, baseType: !867, size: 64, offset: 576)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{!74, !763}
!870 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !821, file: !96, line: 1947, baseType: !867, size: 64, offset: 640)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !821, file: !96, line: 1948, baseType: !867, size: 64, offset: 704)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !821, file: !96, line: 1949, baseType: !867, size: 64, offset: 768)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !821, file: !96, line: 1950, baseType: !874, size: 64, offset: 832)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{!74, !641, !877}
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !96, line: 57, flags: DIFlagFwdDecl)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !821, file: !96, line: 1951, baseType: !880, size: 64, offset: 896)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DISubroutineType(types: !882)
!882 = !{!74, !763, !883, !184}
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !821, file: !96, line: 1952, baseType: !797, size: 64, offset: 960)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !821, file: !96, line: 1954, baseType: !886, size: 64, offset: 1024)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{!74, !889, !641}
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !891, line: 16, size: 896, elements: !892)
!891 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!892 = !{!893, !894, !895, !896, !897, !898, !899, !900, !913, !935, !936, !1699}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !890, file: !891, line: 17, baseType: !184, size: 64)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !890, file: !891, line: 18, baseType: !288, size: 64, offset: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !890, file: !891, line: 19, baseType: !288, size: 64, offset: 128)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !890, file: !891, line: 20, baseType: !288, size: 64, offset: 192)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !890, file: !891, line: 21, baseType: !288, size: 64, offset: 256)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !890, file: !891, line: 22, baseType: !773, size: 64, offset: 320)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !890, file: !891, line: 23, baseType: !773, size: 64, offset: 384)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !890, file: !891, line: 24, baseType: !901, size: 192, offset: 448)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !902, line: 53, size: 192, elements: !903)
!902 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!903 = !{!904, !911, !912}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !901, file: !902, line: 54, baseType: !905, size: 64)
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !906, line: 13, baseType: !907)
!906 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !188, line: 175, baseType: !908)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !188, line: 173, size: 64, elements: !909)
!909 = !{!910}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !908, file: !188, line: 174, baseType: !408, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !901, file: !902, line: 55, baseType: !210, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !901, file: !902, line: 59, baseType: !298, size: 128, offset: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !890, file: !891, line: 25, baseType: !914, size: 64, offset: 640)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !916)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !891, line: 31, size: 256, elements: !917)
!917 = !{!918, !923, !927, !931}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !916, file: !891, line: 32, baseType: !919, size: 64)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DISubroutineType(types: !921)
!921 = !{!183, !889, !922}
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !916, file: !891, line: 33, baseType: !924, size: 64, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DISubroutineType(types: !926)
!926 = !{null, !889, !183}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !916, file: !891, line: 34, baseType: !928, size: 64, offset: 128)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{!183, !889, !183, !922}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !916, file: !891, line: 35, baseType: !932, size: 64, offset: 192)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{!74, !889, !183}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !890, file: !891, line: 26, baseType: !74, size: 32, offset: 704)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !890, file: !891, line: 27, baseType: !937, size: 64, offset: 768)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !939)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !96, line: 916, size: 1856, align: 32, elements: !940)
!940 = !{!941, !959, !960, !961, !1252, !1253, !1254, !1255, !1256, !1258, !1259, !1260, !1605, !1681, !1690, !1691, !1692, !1693, !1694, !1695, !1698}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !939, file: !96, line: 920, baseType: !942, size: 128)
!942 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !939, file: !96, line: 917, size: 128, elements: !943)
!943 = !{!944, !950}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !942, file: !96, line: 918, baseType: !945, size: 64)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !946, line: 58, size: 64, elements: !947)
!946 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!947 = !{!948}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !945, file: !946, line: 59, baseType: !949, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !942, file: !96, line: 919, baseType: !951, size: 128, align: 64)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !188, line: 216, size: 128, align: 64, elements: !952)
!952 = !{!953, !955}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !951, file: !188, line: 217, baseType: !954, size: 64)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !951, file: !188, line: 218, baseType: !956, size: 64, offset: 64)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = !DISubroutineType(types: !958)
!958 = !{null, !954}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !939, file: !96, line: 921, baseType: !743, size: 128, offset: 128)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !939, file: !96, line: 922, baseType: !610, size: 64, offset: 256)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !939, file: !96, line: 923, baseType: !962, size: 64, offset: 320)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !964)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !96, line: 1822, size: 2048, elements: !965)
!965 = !{!966, !967, !972, !979, !983, !1029, !1030, !1034, !1047, !1048, !1070, !1074, !1075, !1079, !1080, !1084, !1089, !1090, !1094, !1098, !1207, !1211, !1215, !1219, !1220, !1226, !1230, !1235, !1239, !1243, !1247, !1251}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !964, file: !96, line: 1823, baseType: !308, size: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !964, file: !96, line: 1824, baseType: !968, size: 64, offset: 64)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = !DISubroutineType(types: !970)
!970 = !{!773, !971, !773, !74}
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !964, file: !96, line: 1825, baseType: !973, size: 64, offset: 128)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DISubroutineType(types: !975)
!975 = !{!976, !971, !184, !288, !922}
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !188, line: 60, baseType: !977)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !290, line: 73, baseType: !978)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !290, line: 15, baseType: !186)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !964, file: !96, line: 1826, baseType: !980, size: 64, offset: 192)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DISubroutineType(types: !982)
!982 = !{!976, !971, !281, !288, !922}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !964, file: !96, line: 1827, baseType: !984, size: 64, offset: 256)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DISubroutineType(types: !986)
!986 = !{!976, !987, !1027}
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !96, line: 320, size: 384, elements: !989)
!989 = !{!990, !991, !992, !996, !997, !998, !1001, !1002}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !988, file: !96, line: 321, baseType: !971, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !988, file: !96, line: 326, baseType: !773, size: 64, offset: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !988, file: !96, line: 327, baseType: !993, size: 64, offset: 128)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DISubroutineType(types: !995)
!995 = !{null, !987, !186, !186}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !988, file: !96, line: 328, baseType: !183, size: 64, offset: 192)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !988, file: !96, line: 329, baseType: !74, size: 32, offset: 256)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !988, file: !96, line: 330, baseType: !999, size: 16, offset: 288)
!999 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !198, line: 19, baseType: !1000)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !175, line: 24, baseType: !180)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !988, file: !96, line: 331, baseType: !999, size: 16, offset: 304)
!1002 = !DIDerivedType(tag: DW_TAG_member, scope: !988, file: !96, line: 332, baseType: !1003, size: 64, offset: 320)
!1003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !988, file: !96, line: 332, size: 64, elements: !1004)
!1004 = !{!1005, !1006}
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1003, file: !96, line: 333, baseType: !7, size: 32)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1003, file: !96, line: 334, baseType: !1007, size: 64)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1009, line: 569, size: 448, elements: !1010)
!1009 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1010 = !{!1011, !1012, !1013}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1008, file: !1009, line: 570, baseType: !594, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1008, file: !1009, line: 571, baseType: !74, size: 32, offset: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1008, file: !1009, line: 572, baseType: !1014, size: 320, offset: 128)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1015, line: 14, baseType: !1016)
!1015 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1015, line: 29, size: 320, elements: !1017)
!1017 = !{!1018, !1019, !1020, !1026}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1016, file: !1015, line: 30, baseType: !7, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1016, file: !1015, line: 31, baseType: !183, size: 64, offset: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1016, file: !1015, line: 32, baseType: !1021, size: 64, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1015, line: 16, baseType: !1022)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!74, !1025, !7, !74, !183}
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1016, file: !1015, line: 33, baseType: !298, size: 128, offset: 192)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !96, line: 64, flags: DIFlagFwdDecl)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !964, file: !96, line: 1828, baseType: !984, size: 64, offset: 320)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !964, file: !96, line: 1829, baseType: !1031, size: 64, offset: 384)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!74, !987, !754}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !964, file: !96, line: 1830, baseType: !1035, size: 64, offset: 448)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!74, !971, !1038}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !96, line: 1776, size: 128, elements: !1040)
!1040 = !{!1041, !1046}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1039, file: !96, line: 1777, baseType: !1042, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !96, line: 1773, baseType: !1043)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{!74, !1038, !281, !74, !773, !197, !7}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1039, file: !96, line: 1778, baseType: !773, size: 64, offset: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !964, file: !96, line: 1831, baseType: !1035, size: 64, offset: 512)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !964, file: !96, line: 1832, baseType: !1049, size: 64, offset: 576)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!1052, !971, !1054}
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !1053, line: 52, baseType: !7)
!1053 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1056, line: 43, size: 128, elements: !1057)
!1056 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!1057 = !{!1058, !1069}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !1055, file: !1056, line: 44, baseType: !1059, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !1056, line: 37, baseType: !1060)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{null, !971, !1063, !1054}
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1015, line: 40, baseType: !1065)
!1065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1015, line: 36, size: 128, elements: !1066)
!1066 = !{!1067, !1068}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1065, file: !1015, line: 37, baseType: !210)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1065, file: !1015, line: 38, baseType: !298, size: 128)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !1055, file: !1056, line: 45, baseType: !1052, size: 32, offset: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !964, file: !96, line: 1833, baseType: !1071, size: 64, offset: 640)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!186, !971, !7, !168}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !964, file: !96, line: 1834, baseType: !1071, size: 64, offset: 704)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !964, file: !96, line: 1835, baseType: !1076, size: 64, offset: 768)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!74, !971, !514}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !964, file: !96, line: 1836, baseType: !168, size: 64, offset: 832)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !964, file: !96, line: 1837, baseType: !1081, size: 64, offset: 896)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!74, !610, !971}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !964, file: !96, line: 1838, baseType: !1085, size: 64, offset: 960)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!74, !971, !1088}
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !96, line: 1007, baseType: !183)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !964, file: !96, line: 1839, baseType: !1081, size: 64, offset: 1024)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !964, file: !96, line: 1840, baseType: !1091, size: 64, offset: 1088)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!74, !971, !773, !773, !74}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !964, file: !96, line: 1841, baseType: !1095, size: 64, offset: 1152)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!74, !74, !971, !74}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !964, file: !96, line: 1842, baseType: !1099, size: 64, offset: 1216)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!74, !971, !74, !1102}
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !96, line: 1062, size: 1664, elements: !1104)
!1104 = !{!1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1136, !1137, !1138, !1151, !1183}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !1103, file: !96, line: 1063, baseType: !1102, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !1103, file: !96, line: 1064, baseType: !298, size: 128, offset: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !1103, file: !96, line: 1065, baseType: !320, size: 128, offset: 192)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !1103, file: !96, line: 1066, baseType: !298, size: 128, offset: 320)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !1103, file: !96, line: 1069, baseType: !298, size: 128, offset: 448)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !1103, file: !96, line: 1072, baseType: !1088, size: 64, offset: 576)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !1103, file: !96, line: 1073, baseType: !7, size: 32, offset: 640)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !1103, file: !96, line: 1074, baseType: !182, size: 8, offset: 672)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !1103, file: !96, line: 1075, baseType: !7, size: 32, offset: 704)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !1103, file: !96, line: 1076, baseType: !74, size: 32, offset: 736)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !1103, file: !96, line: 1077, baseType: !1064, size: 128, offset: 768)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !1103, file: !96, line: 1078, baseType: !971, size: 64, offset: 896)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !1103, file: !96, line: 1079, baseType: !773, size: 64, offset: 960)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !1103, file: !96, line: 1080, baseType: !773, size: 64, offset: 1024)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !1103, file: !96, line: 1082, baseType: !1120, size: 64, offset: 1088)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !96, line: 1314, size: 320, elements: !1122)
!1122 = !{!1123, !1131, !1132, !1133, !1134, !1135}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1121, file: !96, line: 1315, baseType: !1124)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1125, line: 20, baseType: !1126)
!1125 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1125, line: 11, elements: !1127)
!1127 = !{!1128}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1126, file: !1125, line: 12, baseType: !1129)
!1129 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !222, line: 33, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !222, line: 31, elements: !224)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1121, file: !96, line: 1316, baseType: !74, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1121, file: !96, line: 1317, baseType: !74, size: 32, offset: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1121, file: !96, line: 1318, baseType: !1120, size: 64, offset: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1121, file: !96, line: 1319, baseType: !971, size: 64, offset: 128)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1121, file: !96, line: 1320, baseType: !951, size: 128, align: 64, offset: 192)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !1103, file: !96, line: 1084, baseType: !168, size: 64, offset: 1152)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !1103, file: !96, line: 1085, baseType: !168, size: 64, offset: 1216)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !1103, file: !96, line: 1087, baseType: !1139, size: 64, offset: 1280)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1141)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !96, line: 1011, size: 128, elements: !1142)
!1142 = !{!1143, !1147}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !1141, file: !96, line: 1012, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{null, !1102, !1102}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !1141, file: !96, line: 1013, baseType: !1148, size: 64, offset: 64)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{null, !1102}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !1103, file: !96, line: 1088, baseType: !1152, size: 64, offset: 1344)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !96, line: 1016, size: 512, elements: !1155)
!1155 = !{!1156, !1160, !1164, !1165, !1169, !1173, !1177, !1182}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !1154, file: !96, line: 1017, baseType: !1157, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!1088, !1088}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !1154, file: !96, line: 1018, baseType: !1161, size: 64, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{null, !1088}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !1154, file: !96, line: 1019, baseType: !1148, size: 64, offset: 128)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !1154, file: !96, line: 1020, baseType: !1166, size: 64, offset: 192)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!74, !1102, !74}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !1154, file: !96, line: 1021, baseType: !1170, size: 64, offset: 256)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!754, !1102}
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !1154, file: !96, line: 1022, baseType: !1174, size: 64, offset: 320)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DISubroutineType(types: !1176)
!1176 = !{!74, !1102, !74, !301}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !1154, file: !96, line: 1023, baseType: !1178, size: 64, offset: 384)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{null, !1102, !1181}
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !1154, file: !96, line: 1024, baseType: !1170, size: 64, offset: 448)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !1103, file: !96, line: 1097, baseType: !1184, size: 256, offset: 1408)
!1184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1103, file: !96, line: 1089, size: 256, elements: !1185)
!1185 = !{!1186, !1195, !1201}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !1184, file: !96, line: 1090, baseType: !1187, size: 256)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !1188, line: 10, size: 256, elements: !1189)
!1188 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1189 = !{!1190, !1191, !1194}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1187, file: !1188, line: 11, baseType: !205, size: 32)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1187, file: !1188, line: 12, baseType: !1192, size: 64, offset: 64)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !1188, line: 5, flags: DIFlagFwdDecl)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1187, file: !1188, line: 13, baseType: !298, size: 128, offset: 128)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !1184, file: !96, line: 1091, baseType: !1196, size: 64)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !1188, line: 17, size: 64, elements: !1197)
!1197 = !{!1198}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1196, file: !1188, line: 18, baseType: !1199, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !1188, line: 16, flags: DIFlagFwdDecl)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !1184, file: !96, line: 1096, baseType: !1202, size: 192)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1184, file: !96, line: 1092, size: 192, elements: !1203)
!1203 = !{!1204, !1205, !1206}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1202, file: !96, line: 1093, baseType: !298, size: 128)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1202, file: !96, line: 1094, baseType: !74, size: 32, offset: 128)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !1202, file: !96, line: 1095, baseType: !7, size: 32, offset: 160)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !964, file: !96, line: 1843, baseType: !1208, size: 64, offset: 1280)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!976, !971, !594, !74, !288, !922, !74}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !964, file: !96, line: 1844, baseType: !1212, size: 64, offset: 1344)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64)
!1213 = !DISubroutineType(types: !1214)
!1214 = !{!168, !971, !168, !168, !168, !168}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !964, file: !96, line: 1845, baseType: !1216, size: 64, offset: 1408)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 64)
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!74, !74}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !964, file: !96, line: 1846, baseType: !1099, size: 64, offset: 1472)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !964, file: !96, line: 1847, baseType: !1221, size: 64, offset: 1536)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{!976, !1224, !971, !922, !288, !7}
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1225 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !331, line: 53, flags: DIFlagFwdDecl)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !964, file: !96, line: 1848, baseType: !1227, size: 64, offset: 1600)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!976, !971, !922, !1224, !288, !7}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !964, file: !96, line: 1849, baseType: !1231, size: 64, offset: 1664)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!74, !971, !186, !1234, !1181}
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !964, file: !96, line: 1850, baseType: !1236, size: 64, offset: 1728)
!1236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1237, size: 64)
!1237 = !DISubroutineType(types: !1238)
!1238 = !{!186, !971, !74, !773, !773}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !964, file: !96, line: 1852, baseType: !1240, size: 64, offset: 1792)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{null, !889, !971}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !964, file: !96, line: 1856, baseType: !1244, size: 64, offset: 1856)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!976, !971, !773, !971, !773, !288, !7}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !964, file: !96, line: 1858, baseType: !1248, size: 64, offset: 1920)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!773, !971, !773, !971, !773, !773, !7}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !964, file: !96, line: 1861, baseType: !1091, size: 64, offset: 1984)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !939, file: !96, line: 929, baseType: !210, offset: 384)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !939, file: !96, line: 930, baseType: !95, size: 32, offset: 384)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !939, file: !96, line: 931, baseType: !905, size: 64, offset: 448)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !939, file: !96, line: 932, baseType: !7, size: 32, offset: 512)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !939, file: !96, line: 933, baseType: !1257, size: 32, offset: 544)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !188, line: 150, baseType: !7)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !939, file: !96, line: 934, baseType: !901, size: 192, offset: 576)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !939, file: !96, line: 935, baseType: !773, size: 64, offset: 768)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !939, file: !96, line: 936, baseType: !1261, size: 192, offset: 832)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !96, line: 885, size: 192, elements: !1262)
!1262 = !{!1263, !1264, !1601, !1602, !1603, !1604}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1261, file: !96, line: 886, baseType: !1124)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1261, file: !96, line: 887, baseType: !1265, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !105, line: 59, size: 768, elements: !1267)
!1267 = !{!1268, !1269, !1270, !1271, !1273, !1274, !1275, !1276}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1266, file: !105, line: 61, baseType: !342, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1266, file: !105, line: 62, baseType: !7, size: 32, offset: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1266, file: !105, line: 63, baseType: !210, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1266, file: !105, line: 65, baseType: !1272, size: 256, offset: 64)
!1272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !803, size: 256, elements: !176)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1266, file: !105, line: 66, baseType: !803, size: 64, offset: 320)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1266, file: !105, line: 68, baseType: !1064, size: 128, offset: 384)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1266, file: !105, line: 69, baseType: !951, size: 128, align: 64, offset: 512)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1266, file: !105, line: 70, baseType: !1277, size: 128, offset: 640)
!1277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1278, size: 128, elements: !278)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !105, line: 54, size: 128, elements: !1279)
!1279 = !{!1280, !1281}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1278, file: !105, line: 55, baseType: !74, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1278, file: !105, line: 56, baseType: !1282, size: 64, offset: 64)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1284, line: 20, size: 1088, elements: !1285)
!1284 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1285 = !{!1286, !1291, !1304, !1305, !1306, !1307, !1310, !1311, !1312, !1598, !1599, !1600}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1283, file: !1284, line: 21, baseType: !1287, size: 32)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1288, line: 19, size: 32, elements: !1289)
!1288 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1289 = !{!1290}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1287, file: !1288, line: 20, baseType: !342, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !1283, file: !1284, line: 22, baseType: !1292, size: 192, offset: 64)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1293, line: 19, size: 192, elements: !1294)
!1293 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1294 = !{!1295, !1302, !1303}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1292, file: !1293, line: 20, baseType: !1296, size: 128)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1297, line: 292, size: 128, elements: !1298)
!1297 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1298 = !{!1299, !1300, !1301}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1296, file: !1297, line: 293, baseType: !210)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1296, file: !1297, line: 295, baseType: !187, size: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1296, file: !1297, line: 296, baseType: !183, size: 64, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1292, file: !1293, line: 21, baseType: !7, size: 32, offset: 128)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1292, file: !1293, line: 22, baseType: !7, size: 32, offset: 160)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1283, file: !1284, line: 23, baseType: !951, size: 128, align: 64, offset: 256)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !1283, file: !1284, line: 24, baseType: !7, size: 32, offset: 384)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !1283, file: !1284, line: 25, baseType: !329, size: 64, offset: 448)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !1283, file: !1284, line: 26, baseType: !1308, size: 64, offset: 512)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !508, line: 117, flags: DIFlagFwdDecl)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1283, file: !1284, line: 27, baseType: !7, size: 32, offset: 576)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1283, file: !1284, line: 28, baseType: !1282, size: 64, offset: 640)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1283, file: !1284, line: 32, baseType: !1313, size: 64, offset: 704)
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1314, size: 64)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1315, line: 56, size: 4160, elements: !1316)
!1315 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1316 = !{!1317, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1356, !1357, !1358, !1478, !1479, !1491, !1583, !1584, !1596}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !1314, file: !1315, line: 57, baseType: !1318, size: 576)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !1315, line: 23, size: 576, elements: !1319)
!1319 = !{!1320, !1321}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !1318, file: !1315, line: 24, baseType: !205, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, scope: !1318, file: !1315, line: 25, baseType: !1322, size: 512, offset: 64)
!1322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1318, file: !1315, line: 25, size: 512, elements: !1323)
!1323 = !{!1324, !1333}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1322, file: !1315, line: 26, baseType: !1325, size: 480)
!1325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1326, size: 480, elements: !1331)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !1315, line: 17, size: 96, elements: !1327)
!1327 = !{!1328, !1329, !1330}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1326, file: !1315, line: 18, baseType: !205, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !1326, file: !1315, line: 19, baseType: !205, size: 32, offset: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1326, file: !1315, line: 20, baseType: !205, size: 32, offset: 64)
!1331 = !{!1332}
!1332 = !DISubrange(count: 5)
!1333 = !DIDerivedType(tag: DW_TAG_member, scope: !1322, file: !1315, line: 27, baseType: !1334, size: 128)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1322, file: !1315, line: 27, size: 128, elements: !1335)
!1335 = !{!1336, !1338}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !1334, file: !1315, line: 28, baseType: !1337, size: 64)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !1334, file: !1315, line: 29, baseType: !1337, size: 64, offset: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !1314, file: !1315, line: 58, baseType: !1318, size: 576, offset: 576)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !1314, file: !1315, line: 59, baseType: !1318, size: 576, offset: 1152)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1314, file: !1315, line: 60, baseType: !347, size: 32, offset: 1728)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1314, file: !1315, line: 61, baseType: !1313, size: 64, offset: 1792)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1314, file: !1315, line: 62, baseType: !74, size: 32, offset: 1856)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1314, file: !1315, line: 63, baseType: !617, size: 32, offset: 1888)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1314, file: !1315, line: 64, baseType: !625, size: 32, offset: 1920)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1314, file: !1315, line: 65, baseType: !1347, size: 192, offset: 1984)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1348, line: 7, size: 192, elements: !1349)
!1348 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1349 = !{!1350, !1351, !1355}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1347, file: !1348, line: 8, baseType: !905, size: 64)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1347, file: !1348, line: 9, baseType: !1352, size: 64, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1354)
!1354 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1348, line: 5, flags: DIFlagFwdDecl)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1347, file: !1348, line: 10, baseType: !7, size: 32, offset: 128)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1314, file: !1315, line: 66, baseType: !168, size: 64, offset: 2176)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !1314, file: !1315, line: 74, baseType: !298, size: 128, offset: 2240)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !1314, file: !1315, line: 75, baseType: !1359, size: 64, offset: 2368)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1361, line: 189, size: 1664, elements: !1362)
!1361 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1362 = !{!1363, !1364, !1369, !1374, !1382, !1385, !1386, !1393, !1394, !1395, !1396, !1399, !1400, !1401, !1403, !1404, !1442, !1463}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1360, file: !1361, line: 190, baseType: !342, size: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1360, file: !1361, line: 191, baseType: !1365, size: 32, offset: 32)
!1365 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1361, line: 28, baseType: !1366)
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !188, line: 98, baseType: !1367)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !198, line: 20, baseType: !1368)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !175, line: 26, baseType: !74)
!1369 = !DIDerivedType(tag: DW_TAG_member, scope: !1360, file: !1361, line: 192, baseType: !1370, size: 192, offset: 64)
!1370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1360, file: !1361, line: 192, size: 192, elements: !1371)
!1371 = !{!1372, !1373}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1370, file: !1361, line: 193, baseType: !298, size: 128)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1370, file: !1361, line: 194, baseType: !371, size: 192, align: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1360, file: !1361, line: 199, baseType: !1375, size: 256, offset: 256)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1376, line: 35, size: 256, elements: !1377)
!1376 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1377 = !{!1378, !1379, !1380, !1381}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1375, file: !1376, line: 36, baseType: !905, size: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1375, file: !1376, line: 42, baseType: !905, size: 64, offset: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1375, file: !1376, line: 46, baseType: !443, offset: 128)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1375, file: !1376, line: 47, baseType: !298, size: 128, offset: 128)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1360, file: !1361, line: 200, baseType: !1383, size: 64, offset: 512)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64)
!1384 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1361, line: 200, flags: DIFlagFwdDecl)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1360, file: !1361, line: 201, baseType: !183, size: 64, offset: 576)
!1386 = !DIDerivedType(tag: DW_TAG_member, scope: !1360, file: !1361, line: 202, baseType: !1387, size: 64, offset: 640)
!1387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1360, file: !1361, line: 202, size: 64, elements: !1388)
!1388 = !{!1389, !1392}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1387, file: !1361, line: 203, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1391, line: 8, baseType: !409)
!1391 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1387, file: !1361, line: 204, baseType: !1390, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1360, file: !1361, line: 206, baseType: !1390, size: 64, offset: 704)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1360, file: !1361, line: 207, baseType: !617, size: 32, offset: 768)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1360, file: !1361, line: 208, baseType: !625, size: 32, offset: 800)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1360, file: !1361, line: 209, baseType: !1397, size: 32, offset: 832)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1361, line: 31, baseType: !1398)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !188, line: 104, baseType: !205)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1360, file: !1361, line: 210, baseType: !180, size: 16, offset: 864)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1360, file: !1361, line: 211, baseType: !180, size: 16, offset: 880)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1360, file: !1361, line: 215, baseType: !1402, size: 16, offset: 896)
!1402 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1360, file: !1361, line: 222, baseType: !168, size: 64, offset: 960)
!1404 = !DIDerivedType(tag: DW_TAG_member, scope: !1360, file: !1361, line: 239, baseType: !1405, size: 320, offset: 1024)
!1405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1360, file: !1361, line: 239, size: 320, elements: !1406)
!1406 = !{!1407, !1434}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1405, file: !1361, line: 240, baseType: !1408, size: 320)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1361, line: 108, size: 320, elements: !1409)
!1409 = !{!1410, !1411, !1423, !1426, !1433}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1408, file: !1361, line: 110, baseType: !168, size: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, scope: !1408, file: !1361, line: 111, baseType: !1412, size: 64, offset: 64)
!1412 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1408, file: !1361, line: 111, size: 64, elements: !1413)
!1413 = !{!1414, !1422}
!1414 = !DIDerivedType(tag: DW_TAG_member, scope: !1412, file: !1361, line: 112, baseType: !1415, size: 64)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1412, file: !1361, line: 112, size: 64, elements: !1416)
!1416 = !{!1417, !1418}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1415, file: !1361, line: 114, baseType: !999, size: 16)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1415, file: !1361, line: 115, baseType: !1419, size: 48, offset: 16)
!1419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 48, elements: !1420)
!1420 = !{!1421}
!1421 = !DISubrange(count: 6)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1412, file: !1361, line: 121, baseType: !168, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1408, file: !1361, line: 123, baseType: !1424, size: 64, offset: 128)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1361, line: 96, flags: DIFlagFwdDecl)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1408, file: !1361, line: 124, baseType: !1427, size: 64, offset: 192)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1361, line: 102, size: 192, elements: !1429)
!1429 = !{!1430, !1431, !1432}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1428, file: !1361, line: 103, baseType: !951, size: 128, align: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1428, file: !1361, line: 104, baseType: !342, size: 32, offset: 128)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1428, file: !1361, line: 105, baseType: !754, size: 8, offset: 160)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1408, file: !1361, line: 125, baseType: !281, size: 64, offset: 256)
!1434 = !DIDerivedType(tag: DW_TAG_member, scope: !1405, file: !1361, line: 241, baseType: !1435, size: 320)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1405, file: !1361, line: 241, size: 320, elements: !1436)
!1436 = !{!1437, !1438, !1439, !1440, !1441}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1435, file: !1361, line: 242, baseType: !168, size: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1435, file: !1361, line: 243, baseType: !168, size: 64, offset: 64)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1435, file: !1361, line: 244, baseType: !1424, size: 64, offset: 128)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1435, file: !1361, line: 245, baseType: !1427, size: 64, offset: 192)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1435, file: !1361, line: 246, baseType: !184, size: 64, offset: 256)
!1442 = !DIDerivedType(tag: DW_TAG_member, scope: !1360, file: !1361, line: 254, baseType: !1443, size: 256, offset: 1344)
!1443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1360, file: !1361, line: 254, size: 256, elements: !1444)
!1444 = !{!1445, !1451}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1443, file: !1361, line: 255, baseType: !1446, size: 256)
!1446 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1361, line: 128, size: 256, elements: !1447)
!1447 = !{!1448, !1449}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1446, file: !1361, line: 129, baseType: !183, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1446, file: !1361, line: 130, baseType: !1450, size: 256)
!1450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 256, elements: !176)
!1451 = !DIDerivedType(tag: DW_TAG_member, scope: !1443, file: !1361, line: 256, baseType: !1452, size: 256)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1443, file: !1361, line: 256, size: 256, elements: !1453)
!1453 = !{!1454, !1455}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1452, file: !1361, line: 258, baseType: !298, size: 128)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1452, file: !1361, line: 259, baseType: !1456, size: 128, offset: 128)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1457, line: 22, size: 128, elements: !1458)
!1457 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1458 = !{!1459, !1462}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1456, file: !1457, line: 23, baseType: !1460, size: 64)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1457, line: 23, flags: DIFlagFwdDecl)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1456, file: !1457, line: 24, baseType: !168, size: 64, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1360, file: !1361, line: 274, baseType: !1464, size: 64, offset: 1600)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1361, line: 170, size: 192, elements: !1466)
!1466 = !{!1467, !1476, !1477}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1465, file: !1361, line: 171, baseType: !1468, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1361, line: 165, baseType: !1469)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = !DISubroutineType(types: !1471)
!1471 = !{!74, !1359, !1472, !1474, !1359}
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1425)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1446)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1465, file: !1361, line: 172, baseType: !1359, size: 64, offset: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1465, file: !1361, line: 173, baseType: !1424, size: 64, offset: 128)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !1314, file: !1315, line: 76, baseType: !1375, size: 256, offset: 2432)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1314, file: !1315, line: 83, baseType: !1480, size: 256, offset: 2688)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1481, line: 102, size: 256, elements: !1482)
!1481 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1482 = !{!1483, !1484, !1485}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1480, file: !1481, line: 103, baseType: !905, size: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1480, file: !1481, line: 104, baseType: !298, size: 128, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1480, file: !1481, line: 105, baseType: !1486, size: 64, offset: 192)
!1486 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1481, line: 21, baseType: !1487)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{null, !1490}
!1490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1314, file: !1315, line: 85, baseType: !1492, size: 768, offset: 2944)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !1493, line: 156, size: 768, elements: !1494)
!1493 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1494 = !{!1495, !1500}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !1492, file: !1493, line: 157, baseType: !1496, size: 64)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!74, !1499}
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1492, file: !1493, line: 158, baseType: !1501, size: 704, offset: 64)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !1493, line: 150, size: 704, elements: !1502)
!1502 = !{!1503, !1582}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1501, file: !1493, line: 152, baseType: !1504, size: 640)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !1493, line: 131, size: 640, elements: !1505)
!1505 = !{!1506, !1539, !1551, !1552, !1572, !1573, !1575, !1581}
!1506 = !DIDerivedType(tag: DW_TAG_member, scope: !1504, file: !1493, line: 132, baseType: !1507, size: 192)
!1507 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1504, file: !1493, line: 132, size: 192, elements: !1508)
!1508 = !{!1509, !1538}
!1509 = !DIDerivedType(tag: DW_TAG_member, scope: !1507, file: !1493, line: 133, baseType: !1510, size: 192)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1507, file: !1493, line: 133, size: 192, elements: !1511)
!1511 = !{!1512, !1535, !1536, !1537}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !1510, file: !1493, line: 134, baseType: !1513, size: 64)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !1493, line: 112, size: 512, elements: !1515)
!1515 = !{!1516, !1517, !1518, !1519, !1520, !1521, !1527, !1533, !1534}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !1514, file: !1493, line: 113, baseType: !281, size: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1514, file: !1493, line: 114, baseType: !183, size: 64, offset: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !1514, file: !1493, line: 115, baseType: !74, size: 32, offset: 128)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1514, file: !1493, line: 116, baseType: !614, size: 16, offset: 160)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1514, file: !1493, line: 117, baseType: !1513, size: 64, offset: 192)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !1514, file: !1493, line: 118, baseType: !1522, size: 64, offset: 256)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !1493, line: 47, baseType: !1524)
!1524 = !DISubroutineType(types: !1525)
!1525 = !{!74, !1513, !74, !183, !1526, !922}
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1514, file: !1493, line: 119, baseType: !1528, size: 64, offset: 320)
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !1493, line: 94, size: 192, elements: !1530)
!1530 = !{!1531, !1532}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1529, file: !1493, line: 95, baseType: !347, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1529, file: !1493, line: 96, baseType: !1064, size: 128, offset: 64)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !1514, file: !1493, line: 120, baseType: !183, size: 64, offset: 384)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !1514, file: !1493, line: 121, baseType: !183, size: 64, offset: 448)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1510, file: !1493, line: 135, baseType: !74, size: 32, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1510, file: !1493, line: 136, baseType: !74, size: 32, offset: 96)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !1510, file: !1493, line: 137, baseType: !74, size: 32, offset: 128)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1507, file: !1493, line: 139, baseType: !951, size: 128, align: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !1504, file: !1493, line: 141, baseType: !1540, size: 64, offset: 192)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1542, line: 26, size: 192, elements: !1543)
!1542 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1543 = !{!1544, !1545}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1541, file: !1542, line: 27, baseType: !7, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1541, file: !1542, line: 28, baseType: !1546, size: 128, offset: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1547, line: 43, size: 128, elements: !1548)
!1547 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1546, file: !1547, line: 44, baseType: !443)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1546, file: !1547, line: 45, baseType: !298, size: 128)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !1504, file: !1493, line: 142, baseType: !1513, size: 64, offset: 256)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1504, file: !1493, line: 143, baseType: !1553, size: 64, offset: 320)
!1553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 64)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !1493, line: 161, size: 960, elements: !1555)
!1555 = !{!1556, !1557, !1561, !1568}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !1554, file: !1493, line: 162, baseType: !1492, size: 768)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1554, file: !1493, line: 163, baseType: !1558, size: 64, offset: 768)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{!1499, !1553}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !1554, file: !1493, line: 164, baseType: !1562, size: 64, offset: 832)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64)
!1563 = !DISubroutineType(types: !1564)
!1564 = !{null, !1565, !1513, !1566, !1567}
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !1554, file: !1493, line: 167, baseType: !1569, size: 64, offset: 896)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!74, !1565, !1513}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1504, file: !1493, line: 144, baseType: !1499, size: 64, offset: 384)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1504, file: !1493, line: 145, baseType: !1574, size: 64, offset: 448)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1504, file: !1493, line: 146, baseType: !1576, size: 64, offset: 512)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !1493, line: 124, size: 256, elements: !1578)
!1578 = !{!1579, !1580}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1577, file: !1493, line: 125, baseType: !371, size: 192, align: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1577, file: !1493, line: 126, baseType: !1565, size: 64, offset: 192)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1504, file: !1493, line: 147, baseType: !803, size: 64, offset: 576)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1501, file: !1493, line: 153, baseType: !479, size: 64, offset: 640)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1314, file: !1315, line: 86, baseType: !1565, size: 64, offset: 3712)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1314, file: !1315, line: 88, baseType: !1585, size: 64, offset: 3776)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1315, line: 92, size: 576, elements: !1587)
!1587 = !{!1588, !1589, !1590, !1591, !1592}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1586, file: !1315, line: 93, baseType: !320, size: 128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1586, file: !1315, line: 94, baseType: !1313, size: 64, offset: 128)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1586, file: !1315, line: 95, baseType: !617, size: 32, offset: 192)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1586, file: !1315, line: 96, baseType: !74, size: 32, offset: 224)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !1586, file: !1315, line: 97, baseType: !1593, size: 320, offset: 256)
!1593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 320, elements: !1594)
!1594 = !{!1595}
!1595 = !DISubrange(count: 10)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !1314, file: !1315, line: 89, baseType: !1597, size: 320, offset: 3840)
!1597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !74, size: 320, elements: !1594)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1283, file: !1284, line: 33, baseType: !1585, size: 64, offset: 768)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !1283, file: !1284, line: 34, baseType: !74, size: 32, offset: 832)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1283, file: !1284, line: 35, baseType: !1347, size: 192, offset: 896)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !1261, file: !96, line: 888, baseType: !104, size: 32, offset: 64)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1261, file: !96, line: 889, baseType: !617, size: 32, offset: 96)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1261, file: !96, line: 889, baseType: !617, size: 32, offset: 128)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !1261, file: !96, line: 890, baseType: !74, size: 32, offset: 160)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !939, file: !96, line: 937, baseType: !1606, size: 64, offset: 1024)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64)
!1607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1608)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1609, line: 111, size: 1280, elements: !1610)
!1609 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1610 = !{!1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1665, !1666, !1676}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1608, file: !1609, line: 112, baseType: !347, size: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1608, file: !1609, line: 120, baseType: !617, size: 32, offset: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1608, file: !1609, line: 121, baseType: !625, size: 32, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1608, file: !1609, line: 122, baseType: !617, size: 32, offset: 96)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1608, file: !1609, line: 123, baseType: !625, size: 32, offset: 128)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1608, file: !1609, line: 124, baseType: !617, size: 32, offset: 160)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1608, file: !1609, line: 125, baseType: !625, size: 32, offset: 192)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1608, file: !1609, line: 126, baseType: !617, size: 32, offset: 224)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1608, file: !1609, line: 127, baseType: !625, size: 32, offset: 256)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1608, file: !1609, line: 128, baseType: !7, size: 32, offset: 288)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1608, file: !1609, line: 129, baseType: !1622, size: 64, offset: 320)
!1622 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1623, line: 26, baseType: !1624)
!1623 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1623, line: 24, size: 64, elements: !1625)
!1625 = !{!1626}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1624, file: !1623, line: 25, baseType: !1627, size: 64)
!1627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !1628)
!1628 = !{!1629}
!1629 = !DISubrange(count: 2)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1608, file: !1609, line: 130, baseType: !1622, size: 64, offset: 384)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1608, file: !1609, line: 131, baseType: !1622, size: 64, offset: 448)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1608, file: !1609, line: 132, baseType: !1622, size: 64, offset: 512)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1608, file: !1609, line: 133, baseType: !1622, size: 64, offset: 576)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1608, file: !1609, line: 135, baseType: !182, size: 8, offset: 640)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1608, file: !1609, line: 137, baseType: !1359, size: 64, offset: 704)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1608, file: !1609, line: 138, baseType: !1359, size: 64, offset: 768)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1608, file: !1609, line: 139, baseType: !1359, size: 64, offset: 832)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1608, file: !1609, line: 140, baseType: !1359, size: 64, offset: 896)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1608, file: !1609, line: 145, baseType: !1640, size: 64, offset: 960)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1642, line: 13, size: 896, elements: !1643)
!1642 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1643 = !{!1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1641, file: !1642, line: 14, baseType: !342, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1641, file: !1642, line: 15, baseType: !347, size: 32, offset: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1641, file: !1642, line: 16, baseType: !347, size: 32, offset: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1641, file: !1642, line: 21, baseType: !905, size: 64, offset: 128)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1641, file: !1642, line: 27, baseType: !168, size: 64, offset: 192)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1641, file: !1642, line: 28, baseType: !168, size: 64, offset: 256)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1641, file: !1642, line: 29, baseType: !905, size: 64, offset: 320)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1641, file: !1642, line: 32, baseType: !320, size: 128, offset: 384)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1641, file: !1642, line: 33, baseType: !617, size: 32, offset: 512)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1641, file: !1642, line: 37, baseType: !905, size: 64, offset: 576)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1641, file: !1642, line: 44, baseType: !1655, size: 256, offset: 640)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1656, line: 15, size: 256, elements: !1657)
!1656 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1657 = !{!1658, !1659, !1660, !1661, !1662, !1663, !1664}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1655, file: !1656, line: 16, baseType: !443)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1655, file: !1656, line: 18, baseType: !74, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1655, file: !1656, line: 19, baseType: !74, size: 32, offset: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1655, file: !1656, line: 20, baseType: !74, size: 32, offset: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1655, file: !1656, line: 21, baseType: !74, size: 32, offset: 96)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1655, file: !1656, line: 22, baseType: !168, size: 64, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1655, file: !1656, line: 23, baseType: !168, size: 64, offset: 192)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1608, file: !1609, line: 146, baseType: !1313, size: 64, offset: 1024)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1608, file: !1609, line: 147, baseType: !1667, size: 64, offset: 1088)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1609, line: 25, size: 64, elements: !1669)
!1669 = !{!1670, !1671, !1672}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1668, file: !1609, line: 26, baseType: !347, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1668, file: !1609, line: 27, baseType: !74, size: 32, offset: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1668, file: !1609, line: 28, baseType: !1673, offset: 64)
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !625, elements: !1674)
!1674 = !{!1675}
!1675 = !DISubrange(count: 0)
!1676 = !DIDerivedType(tag: DW_TAG_member, scope: !1608, file: !1609, line: 149, baseType: !1677, size: 128, offset: 1152)
!1677 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1608, file: !1609, line: 149, size: 128, elements: !1678)
!1678 = !{!1679, !1680}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1677, file: !1609, line: 150, baseType: !74, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1677, file: !1609, line: 151, baseType: !951, size: 128, align: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !939, file: !96, line: 938, baseType: !1682, size: 256, offset: 1088)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !96, line: 896, size: 256, elements: !1683)
!1683 = !{!1684, !1685, !1686, !1687, !1688, !1689}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1682, file: !96, line: 897, baseType: !168, size: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1682, file: !96, line: 898, baseType: !7, size: 32, offset: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !1682, file: !96, line: 899, baseType: !7, size: 32, offset: 96)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1682, file: !96, line: 902, baseType: !7, size: 32, offset: 128)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !1682, file: !96, line: 903, baseType: !7, size: 32, offset: 160)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !1682, file: !96, line: 904, baseType: !773, size: 64, offset: 192)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !939, file: !96, line: 940, baseType: !197, size: 64, offset: 1344)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !939, file: !96, line: 945, baseType: !183, size: 64, offset: 1408)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !939, file: !96, line: 949, baseType: !298, size: 128, offset: 1472)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !939, file: !96, line: 950, baseType: !298, size: 128, offset: 1600)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !939, file: !96, line: 952, baseType: !606, size: 64, offset: 1728)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !939, file: !96, line: 953, baseType: !1696, size: 32, offset: 1792)
!1696 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1697, line: 8, baseType: !205)
!1697 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !939, file: !96, line: 954, baseType: !1696, size: 32, offset: 1824)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !890, file: !891, line: 28, baseType: !183, size: 64, offset: 832)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !821, file: !96, line: 1955, baseType: !886, size: 64, offset: 1088)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !821, file: !96, line: 1956, baseType: !886, size: 64, offset: 1152)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !821, file: !96, line: 1957, baseType: !886, size: 64, offset: 1216)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !821, file: !96, line: 1963, baseType: !1704, size: 64, offset: 1280)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = !DISubroutineType(types: !1706)
!1706 = !{!74, !763, !594, !187}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !821, file: !96, line: 1964, baseType: !1708, size: 64, offset: 1344)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64)
!1709 = !DISubroutineType(types: !1710)
!1710 = !{!186, !763, !1711}
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !1713, line: 12, size: 256, elements: !1714)
!1713 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!1714 = !{!1715, !1716, !1717, !1718, !1719}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1712, file: !1713, line: 13, baseType: !187, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !1712, file: !1713, line: 16, baseType: !74, size: 32, offset: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !1712, file: !1713, line: 23, baseType: !168, size: 64, offset: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !1712, file: !1713, line: 30, baseType: !168, size: 64, offset: 128)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !1712, file: !1713, line: 33, baseType: !1720, size: 64, offset: 192)
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !508, line: 27, flags: DIFlagFwdDecl)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !821, file: !96, line: 1966, baseType: !1708, size: 64, offset: 1408)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !764, file: !96, line: 1424, baseType: !1724, size: 64, offset: 448)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1726)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !90, line: 322, size: 704, elements: !1727)
!1727 = !{!1728, !1774, !1778, !1782, !1783, !1784, !1785, !1786, !1791, !1796, !1800}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !1726, file: !90, line: 323, baseType: !1729, size: 64)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = !DISubroutineType(types: !1731)
!1731 = !{!74, !1732}
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !90, line: 294, size: 1600, elements: !1734)
!1734 = !{!1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1759, !1760, !1761}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !1733, file: !90, line: 295, baseType: !320, size: 128)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !1733, file: !90, line: 296, baseType: !298, size: 128, offset: 128)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !1733, file: !90, line: 297, baseType: !298, size: 128, offset: 256)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !1733, file: !90, line: 298, baseType: !298, size: 128, offset: 384)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !1733, file: !90, line: 299, baseType: !901, size: 192, offset: 512)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !1733, file: !90, line: 300, baseType: !210, offset: 704)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !1733, file: !90, line: 301, baseType: !347, size: 32, offset: 704)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !1733, file: !90, line: 302, baseType: !763, size: 64, offset: 768)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !1733, file: !90, line: 303, baseType: !1744, size: 64, offset: 832)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !90, line: 68, size: 64, elements: !1745)
!1745 = !{!1746, !1758}
!1746 = !DIDerivedType(tag: DW_TAG_member, scope: !1744, file: !90, line: 69, baseType: !1747, size: 32)
!1747 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1744, file: !90, line: 69, size: 32, elements: !1748)
!1748 = !{!1749, !1750, !1751}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1747, file: !90, line: 70, baseType: !617, size: 32)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1747, file: !90, line: 71, baseType: !625, size: 32)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !1747, file: !90, line: 72, baseType: !1752, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !1753, line: 24, baseType: !1754)
!1753 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1753, line: 22, size: 32, elements: !1755)
!1755 = !{!1756}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1754, file: !1753, line: 23, baseType: !1757, size: 32)
!1757 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !1753, line: 20, baseType: !623)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1744, file: !90, line: 74, baseType: !89, size: 32, offset: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !1733, file: !90, line: 304, baseType: !773, size: 64, offset: 896)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !1733, file: !90, line: 305, baseType: !168, size: 64, offset: 960)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !1733, file: !90, line: 306, baseType: !1762, size: 576, offset: 1024)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !90, line: 205, size: 576, elements: !1763)
!1763 = !{!1764, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !1762, file: !90, line: 206, baseType: !1765, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !90, line: 66, baseType: !410)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !1762, file: !90, line: 207, baseType: !1765, size: 64, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !1762, file: !90, line: 208, baseType: !1765, size: 64, offset: 128)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !1762, file: !90, line: 209, baseType: !1765, size: 64, offset: 192)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !1762, file: !90, line: 210, baseType: !1765, size: 64, offset: 256)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !1762, file: !90, line: 211, baseType: !1765, size: 64, offset: 320)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !1762, file: !90, line: 212, baseType: !1765, size: 64, offset: 384)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !1762, file: !90, line: 213, baseType: !1390, size: 64, offset: 448)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !1762, file: !90, line: 214, baseType: !1390, size: 64, offset: 512)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !1726, file: !90, line: 324, baseType: !1775, size: 64, offset: 64)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!1732, !763, !74}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !1726, file: !90, line: 325, baseType: !1779, size: 64, offset: 128)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{null, !1732}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !1726, file: !90, line: 326, baseType: !1729, size: 64, offset: 192)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !1726, file: !90, line: 327, baseType: !1729, size: 64, offset: 256)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !1726, file: !90, line: 328, baseType: !1729, size: 64, offset: 320)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !1726, file: !90, line: 329, baseType: !863, size: 64, offset: 384)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !1726, file: !90, line: 332, baseType: !1787, size: 64, offset: 448)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!1790, !610}
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !1726, file: !90, line: 333, baseType: !1792, size: 64, offset: 512)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{!74, !610, !1795}
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !1726, file: !90, line: 335, baseType: !1797, size: 64, offset: 576)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DISubroutineType(types: !1799)
!1799 = !{!74, !610, !1790}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !1726, file: !90, line: 337, baseType: !1801, size: 64, offset: 640)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DISubroutineType(types: !1803)
!1803 = !{!74, !763, !1804}
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !764, file: !96, line: 1425, baseType: !1806, size: 64, offset: 512)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1808)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !90, line: 428, size: 704, elements: !1809)
!1809 = !{!1810, !1814, !1815, !1819, !1820, !1821, !1836, !1859, !1863, !1864, !1887}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !1808, file: !90, line: 429, baseType: !1811, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = !DISubroutineType(types: !1813)
!1813 = !{!74, !763, !74, !74, !752}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !1808, file: !90, line: 430, baseType: !863, size: 64, offset: 64)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !1808, file: !90, line: 431, baseType: !1816, size: 64, offset: 128)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!74, !763, !7}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !1808, file: !90, line: 432, baseType: !1816, size: 64, offset: 192)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !1808, file: !90, line: 433, baseType: !863, size: 64, offset: 256)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !1808, file: !90, line: 434, baseType: !1822, size: 64, offset: 320)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1823, size: 64)
!1823 = !DISubroutineType(types: !1824)
!1824 = !{!74, !763, !74, !1825}
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !90, line: 415, size: 256, elements: !1827)
!1827 = !{!1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !1826, file: !90, line: 416, baseType: !74, size: 32)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1826, file: !90, line: 417, baseType: !7, size: 32, offset: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !1826, file: !90, line: 418, baseType: !7, size: 32, offset: 64)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !1826, file: !90, line: 420, baseType: !7, size: 32, offset: 96)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !1826, file: !90, line: 421, baseType: !7, size: 32, offset: 128)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !1826, file: !90, line: 422, baseType: !7, size: 32, offset: 160)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !1826, file: !90, line: 423, baseType: !7, size: 32, offset: 192)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !1826, file: !90, line: 424, baseType: !7, size: 32, offset: 224)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !1808, file: !90, line: 435, baseType: !1837, size: 64, offset: 384)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = !DISubroutineType(types: !1839)
!1839 = !{!74, !763, !1744, !1840}
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !90, line: 343, size: 960, elements: !1842)
!1842 = !{!1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !1841, file: !90, line: 344, baseType: !74, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !1841, file: !90, line: 345, baseType: !197, size: 64, offset: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !1841, file: !90, line: 346, baseType: !197, size: 64, offset: 128)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !1841, file: !90, line: 347, baseType: !197, size: 64, offset: 192)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !1841, file: !90, line: 348, baseType: !197, size: 64, offset: 256)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !1841, file: !90, line: 349, baseType: !197, size: 64, offset: 320)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !1841, file: !90, line: 350, baseType: !197, size: 64, offset: 384)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !1841, file: !90, line: 351, baseType: !408, size: 64, offset: 448)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !1841, file: !90, line: 353, baseType: !408, size: 64, offset: 512)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !1841, file: !90, line: 354, baseType: !74, size: 32, offset: 576)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !1841, file: !90, line: 355, baseType: !74, size: 32, offset: 608)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !1841, file: !90, line: 356, baseType: !197, size: 64, offset: 640)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !1841, file: !90, line: 357, baseType: !197, size: 64, offset: 704)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !1841, file: !90, line: 358, baseType: !197, size: 64, offset: 768)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !1841, file: !90, line: 359, baseType: !408, size: 64, offset: 832)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !1841, file: !90, line: 360, baseType: !74, size: 32, offset: 896)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !1808, file: !90, line: 436, baseType: !1860, size: 64, offset: 448)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!74, !763, !1804, !1840}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !1808, file: !90, line: 438, baseType: !1837, size: 64, offset: 512)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !1808, file: !90, line: 439, baseType: !1865, size: 64, offset: 576)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{!74, !763, !1868}
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !90, line: 409, size: 1408, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !1869, file: !90, line: 410, baseType: !7, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !1869, file: !90, line: 411, baseType: !1873, size: 1344, offset: 64)
!1873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1874, size: 1344, elements: !813)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !90, line: 395, size: 448, elements: !1875)
!1875 = !{!1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1886}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1874, file: !90, line: 396, baseType: !7, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !1874, file: !90, line: 397, baseType: !7, size: 32, offset: 32)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !1874, file: !90, line: 399, baseType: !7, size: 32, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !1874, file: !90, line: 400, baseType: !7, size: 32, offset: 96)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !1874, file: !90, line: 401, baseType: !7, size: 32, offset: 128)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !1874, file: !90, line: 402, baseType: !7, size: 32, offset: 160)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !1874, file: !90, line: 403, baseType: !7, size: 32, offset: 192)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1874, file: !90, line: 404, baseType: !200, size: 64, offset: 256)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1874, file: !90, line: 405, baseType: !1885, size: 64, offset: 320)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !188, line: 126, baseType: !197)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !1874, file: !90, line: 406, baseType: !1885, size: 64, offset: 384)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !1808, file: !90, line: 440, baseType: !1816, size: 64, offset: 640)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !764, file: !96, line: 1426, baseType: !1889, size: 64, offset: 576)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1891)
!1891 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !96, line: 49, flags: DIFlagFwdDecl)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !764, file: !96, line: 1427, baseType: !168, size: 64, offset: 640)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !764, file: !96, line: 1428, baseType: !168, size: 64, offset: 704)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !764, file: !96, line: 1429, baseType: !168, size: 64, offset: 768)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !764, file: !96, line: 1430, baseType: !641, size: 64, offset: 832)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !764, file: !96, line: 1431, baseType: !1375, size: 256, offset: 896)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !764, file: !96, line: 1432, baseType: !74, size: 32, offset: 1152)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !764, file: !96, line: 1433, baseType: !347, size: 32, offset: 1184)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !764, file: !96, line: 1437, baseType: !1900, size: 64, offset: 1216)
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1903)
!1903 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !96, line: 1437, flags: DIFlagFwdDecl)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !764, file: !96, line: 1449, baseType: !1905, size: 64, offset: 1280)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !653, line: 34, size: 64, elements: !1906)
!1906 = !{!1907}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1905, file: !653, line: 35, baseType: !656, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !764, file: !96, line: 1450, baseType: !298, size: 128, offset: 1344)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !764, file: !96, line: 1451, baseType: !1910, size: 64, offset: 1472)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1912, line: 22, size: 1344, elements: !1913)
!1912 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!1913 = !{!1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !2692, !2693, !2694, !3446, !3447, !3448}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !1911, file: !1912, line: 23, baseType: !768, size: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !1911, file: !1912, line: 24, baseType: !74, size: 32, offset: 32)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !1911, file: !1912, line: 25, baseType: !610, size: 64, offset: 64)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !1911, file: !1912, line: 26, baseType: !763, size: 64, offset: 128)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !1911, file: !1912, line: 27, baseType: !901, size: 192, offset: 192)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !1911, file: !1912, line: 28, baseType: !183, size: 64, offset: 384)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !1911, file: !1912, line: 29, baseType: !183, size: 64, offset: 448)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !1911, file: !1912, line: 30, baseType: !74, size: 32, offset: 512)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !1911, file: !1912, line: 31, baseType: !754, size: 8, offset: 544)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !1911, file: !1912, line: 33, baseType: !298, size: 128, offset: 576)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !1911, file: !1912, line: 35, baseType: !1910, size: 64, offset: 704)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !1911, file: !1912, line: 36, baseType: !226, size: 8, offset: 768)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !1911, file: !1912, line: 37, baseType: !1927, size: 64, offset: 832)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !1929, line: 53, size: 6592, elements: !1930)
!1929 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!1930 = !{!1931, !1933, !1934, !1935, !1938, !1959, !2671, !2672, !2673, !2674, !2684}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !1928, file: !1929, line: 54, baseType: !1932, size: 64)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !188, line: 125, baseType: !197)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !1928, file: !1929, line: 60, baseType: !1932, size: 64, offset: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1928, file: !1929, line: 64, baseType: !168, size: 64, offset: 128)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !1928, file: !1929, line: 65, baseType: !1936, size: 64, offset: 192)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !1929, line: 65, flags: DIFlagFwdDecl)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1928, file: !1929, line: 66, baseType: !1939, size: 128, offset: 256)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !1940, line: 105, size: 128, elements: !1941)
!1940 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!1941 = !{!1942, !1943}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !1939, file: !1940, line: 110, baseType: !168, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1939, file: !1940, line: 118, baseType: !1944, size: 64, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !1940, line: 95, size: 448, elements: !1946)
!1946 = !{!1947, !1948, !1954, !1955, !1956, !1957, !1958}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1945, file: !1940, line: 96, baseType: !905, size: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1945, file: !1940, line: 97, baseType: !1949, size: 64, offset: 64)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !1940, line: 60, baseType: !1951)
!1951 = !DISubroutineType(types: !1952)
!1952 = !{null, !1953}
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !1945, file: !1940, line: 98, baseType: !1949, size: 64, offset: 128)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !1945, file: !1940, line: 99, baseType: !754, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !1945, file: !1940, line: 100, baseType: !754, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1945, file: !1940, line: 101, baseType: !951, size: 128, align: 64, offset: 256)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1945, file: !1940, line: 102, baseType: !1953, size: 64, offset: 384)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !1928, file: !1929, line: 68, baseType: !1960, size: 5568, offset: 384)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !125, line: 461, size: 5568, elements: !1961)
!1961 = !{!1962, !2242, !2244, !2247, !2248, !2299, !2372, !2373, !2374, !2375, !2376, !2385, !2490, !2503, !2507, !2508, !2512, !2514, !2515, !2516, !2520, !2526, !2527, !2530, !2534, !2623, !2624, !2625, !2626, !2627, !2659, !2660, !2661, !2664, !2667, !2668, !2669, !2670}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1960, file: !125, line: 462, baseType: !1963, size: 512)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !1964, line: 64, size: 512, elements: !1965)
!1964 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!1965 = !{!1966, !1967, !1968, !1970, !2012, !2115, !2236, !2237, !2238, !2239, !2240, !2241}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1963, file: !1964, line: 65, baseType: !281, size: 64)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1963, file: !1964, line: 66, baseType: !298, size: 128, offset: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1963, file: !1964, line: 67, baseType: !1969, size: 64, offset: 192)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !1963, file: !1964, line: 68, baseType: !1971, size: 64, offset: 256)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !1964, line: 192, size: 704, elements: !1973)
!1973 = !{!1974, !1975, !1976, !1977}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1972, file: !1964, line: 193, baseType: !298, size: 128)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1972, file: !1964, line: 194, baseType: !210, offset: 128)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1972, file: !1964, line: 195, baseType: !1963, size: 512, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !1972, file: !1964, line: 196, baseType: !1978, size: 64, offset: 640)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1980)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !1964, line: 156, size: 192, elements: !1981)
!1981 = !{!1982, !1987, !1992}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1980, file: !1964, line: 157, baseType: !1983, size: 64)
!1983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1984)
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 64)
!1985 = !DISubroutineType(types: !1986)
!1986 = !{!74, !1971, !1969}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1980, file: !1964, line: 158, baseType: !1988, size: 64, offset: 64)
!1988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1989)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = !DISubroutineType(types: !1991)
!1991 = !{!281, !1971, !1969}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1980, file: !1964, line: 159, baseType: !1993, size: 64, offset: 128)
!1993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1994)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = !DISubroutineType(types: !1996)
!1996 = !{!74, !1971, !1969, !1997}
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !1964, line: 148, size: 20736, elements: !1999)
!1999 = !{!2000, !2002, !2006, !2007, !2011}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !1998, file: !1964, line: 149, baseType: !2001, size: 192)
!2001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 192, elements: !813)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !1998, file: !1964, line: 150, baseType: !2003, size: 4096, offset: 192)
!2003 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 4096, elements: !2004)
!2004 = !{!2005}
!2005 = !DISubrange(count: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !1998, file: !1964, line: 151, baseType: !74, size: 32, offset: 4288)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1998, file: !1964, line: 152, baseType: !2008, size: 16384, offset: 4320)
!2008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 16384, elements: !2009)
!2009 = !{!2010}
!2010 = !DISubrange(count: 2048)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !1998, file: !1964, line: 153, baseType: !74, size: 32, offset: 20704)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !1963, file: !1964, line: 69, baseType: !2013, size: 64, offset: 320)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !1964, line: 138, size: 448, elements: !2015)
!2015 = !{!2016, !2020, !2039, !2041, !2074, !2107, !2111}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2014, file: !1964, line: 139, baseType: !2017, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = !DISubroutineType(types: !2019)
!2019 = !{null, !1969}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !2014, file: !1964, line: 140, baseType: !2021, size: 64, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2023)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !2024, line: 230, size: 128, elements: !2025)
!2024 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!2025 = !{!2026, !2035}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !2023, file: !2024, line: 231, baseType: !2027, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64)
!2028 = !DISubroutineType(types: !2029)
!2029 = !{!976, !1969, !2030, !184}
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !2024, line: 30, size: 128, elements: !2032)
!2032 = !{!2033, !2034}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2031, file: !2024, line: 31, baseType: !281, size: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2031, file: !2024, line: 32, baseType: !614, size: 16, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2023, file: !2024, line: 232, baseType: !2036, size: 64, offset: 64)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DISubroutineType(types: !2038)
!2038 = !{!976, !1969, !2030, !281, !288}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !2014, file: !1964, line: 141, baseType: !2040, size: 64, offset: 128)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !2014, file: !1964, line: 142, baseType: !2042, size: 64, offset: 192)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2045)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !2024, line: 84, size: 320, elements: !2046)
!2046 = !{!2047, !2048, !2052, !2071, !2072}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2045, file: !2024, line: 85, baseType: !281, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !2045, file: !2024, line: 86, baseType: !2049, size: 64, offset: 64)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!2050 = !DISubroutineType(types: !2051)
!2051 = !{!614, !1969, !2030, !74}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !2045, file: !2024, line: 88, baseType: !2053, size: 64, offset: 128)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64)
!2054 = !DISubroutineType(types: !2055)
!2055 = !{!614, !1969, !2056, !74}
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !2024, line: 168, size: 448, elements: !2058)
!2058 = !{!2059, !2060, !2061, !2062, !2066, !2067}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2057, file: !2024, line: 169, baseType: !2031, size: 128)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2057, file: !2024, line: 170, baseType: !288, size: 64, offset: 128)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !2057, file: !2024, line: 171, baseType: !183, size: 64, offset: 192)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2057, file: !2024, line: 172, baseType: !2063, size: 64, offset: 256)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!2064 = !DISubroutineType(types: !2065)
!2065 = !{!976, !971, !1969, !2056, !184, !773, !288}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2057, file: !2024, line: 174, baseType: !2063, size: 64, offset: 320)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2057, file: !2024, line: 176, baseType: !2068, size: 64, offset: 384)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = !DISubroutineType(types: !2070)
!2070 = !{!74, !971, !1969, !2056, !514}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !2045, file: !2024, line: 90, baseType: !2040, size: 64, offset: 192)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !2045, file: !2024, line: 91, baseType: !2073, size: 64, offset: 256)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !2014, file: !1964, line: 143, baseType: !2075, size: 64, offset: 256)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = !DISubroutineType(types: !2077)
!2077 = !{!2078, !1969}
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2080)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !113, line: 39, size: 384, elements: !2081)
!2081 = !{!2082, !2083, !2087, !2091, !2099, !2103}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2080, file: !113, line: 40, baseType: !112, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !2080, file: !113, line: 41, baseType: !2084, size: 64, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2085, size: 64)
!2085 = !DISubroutineType(types: !2086)
!2086 = !{!754}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !2080, file: !113, line: 42, baseType: !2088, size: 64, offset: 128)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{!183}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !2080, file: !113, line: 43, baseType: !2092, size: 64, offset: 192)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = !DISubroutineType(types: !2094)
!2094 = !{!2095, !2097}
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64)
!2096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2098 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !113, line: 19, flags: DIFlagFwdDecl)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !2080, file: !113, line: 44, baseType: !2100, size: 64, offset: 256)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!2095}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !2080, file: !113, line: 45, baseType: !2104, size: 64, offset: 320)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = !DISubroutineType(types: !2106)
!2106 = !{null, !183}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !2014, file: !1964, line: 144, baseType: !2108, size: 64, offset: 320)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{!2095, !1969}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !2014, file: !1964, line: 145, baseType: !2112, size: 64, offset: 384)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = !DISubroutineType(types: !2114)
!2114 = !{null, !1969, !1566, !1567}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !1963, file: !1964, line: 70, baseType: !2116, size: 64, offset: 384)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !787, line: 123, size: 1024, elements: !2118)
!2118 = !{!2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2229, !2230, !2231, !2232, !2233}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2117, file: !787, line: 124, baseType: !347, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2117, file: !787, line: 125, baseType: !347, size: 32, offset: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2117, file: !787, line: 135, baseType: !2116, size: 64, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2117, file: !787, line: 136, baseType: !281, size: 64, offset: 128)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2117, file: !787, line: 138, baseType: !371, size: 192, align: 64, offset: 192)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2117, file: !787, line: 140, baseType: !2095, size: 64, offset: 384)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2117, file: !787, line: 141, baseType: !7, size: 32, offset: 448)
!2126 = !DIDerivedType(tag: DW_TAG_member, scope: !2117, file: !787, line: 142, baseType: !2127, size: 256, offset: 512)
!2127 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2117, file: !787, line: 142, size: 256, elements: !2128)
!2128 = !{!2129, !2169, !2173}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2127, file: !787, line: 143, baseType: !2130, size: 192)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !787, line: 91, size: 192, elements: !2131)
!2131 = !{!2132, !2133, !2134}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !2130, file: !787, line: 92, baseType: !168, size: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2130, file: !787, line: 94, baseType: !479, size: 64, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2130, file: !787, line: 100, baseType: !2135, size: 64, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !787, line: 180, size: 704, elements: !2137)
!2137 = !{!2138, !2139, !2140, !2141, !2142, !2143, !2167, !2168}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2136, file: !787, line: 182, baseType: !2116, size: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2136, file: !787, line: 183, baseType: !7, size: 32, offset: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !2136, file: !787, line: 186, baseType: !1292, size: 192, offset: 128)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !2136, file: !787, line: 187, baseType: !205, size: 32, offset: 320)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !2136, file: !787, line: 188, baseType: !205, size: 32, offset: 352)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !2136, file: !787, line: 189, baseType: !2144, size: 64, offset: 384)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !787, line: 168, size: 320, elements: !2146)
!2146 = !{!2147, !2151, !2155, !2159, !2163}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !2145, file: !787, line: 169, baseType: !2148, size: 64)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = !DISubroutineType(types: !2150)
!2150 = !{!74, !889, !2135}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !2145, file: !787, line: 171, baseType: !2152, size: 64, offset: 64)
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 64)
!2153 = !DISubroutineType(types: !2154)
!2154 = !{!74, !2116, !281, !614}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !2145, file: !787, line: 173, baseType: !2156, size: 64, offset: 128)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2157 = !DISubroutineType(types: !2158)
!2158 = !{!74, !2116}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !2145, file: !787, line: 174, baseType: !2160, size: 64, offset: 192)
!2160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2161, size: 64)
!2161 = !DISubroutineType(types: !2162)
!2162 = !{!74, !2116, !2116, !281}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !2145, file: !787, line: 176, baseType: !2164, size: 64, offset: 256)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 64)
!2165 = !DISubroutineType(types: !2166)
!2166 = !{!74, !889, !2116, !2135}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !2136, file: !787, line: 192, baseType: !298, size: 128, offset: 448)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !2136, file: !787, line: 194, baseType: !1064, size: 128, offset: 576)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !2127, file: !787, line: 144, baseType: !2170, size: 64)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !787, line: 103, size: 64, elements: !2171)
!2171 = !{!2172}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !2170, file: !787, line: 104, baseType: !2116, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !2127, file: !787, line: 145, baseType: !2174, size: 256)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !787, line: 107, size: 256, elements: !2175)
!2175 = !{!2176, !2224, !2227, !2228}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2174, file: !787, line: 108, baseType: !2177, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2179)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !787, line: 217, size: 768, elements: !2180)
!2180 = !{!2181, !2201, !2205, !2206, !2207, !2208, !2209, !2213, !2214, !2215, !2216, !2220}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2179, file: !787, line: 222, baseType: !2182, size: 64)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = !DISubroutineType(types: !2184)
!2184 = !{!74, !2185}
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 64)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !787, line: 197, size: 1088, elements: !2187)
!2187 = !{!2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !2186, file: !787, line: 199, baseType: !2116, size: 64)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2186, file: !787, line: 200, baseType: !971, size: 64, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !2186, file: !787, line: 201, baseType: !889, size: 64, offset: 128)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2186, file: !787, line: 202, baseType: !183, size: 64, offset: 192)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2186, file: !787, line: 205, baseType: !901, size: 192, offset: 256)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !2186, file: !787, line: 206, baseType: !901, size: 192, offset: 448)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2186, file: !787, line: 207, baseType: !74, size: 32, offset: 640)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2186, file: !787, line: 208, baseType: !298, size: 128, offset: 704)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !2186, file: !787, line: 209, baseType: !184, size: 64, offset: 832)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2186, file: !787, line: 211, baseType: !288, size: 64, offset: 896)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !2186, file: !787, line: 212, baseType: !754, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !2186, file: !787, line: 213, baseType: !754, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2186, file: !787, line: 214, baseType: !543, size: 64, offset: 1024)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2179, file: !787, line: 223, baseType: !2202, size: 64, offset: 64)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = !DISubroutineType(types: !2204)
!2204 = !{null, !2185}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !2179, file: !787, line: 236, baseType: !932, size: 64, offset: 128)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !2179, file: !787, line: 238, baseType: !919, size: 64, offset: 192)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !2179, file: !787, line: 239, baseType: !928, size: 64, offset: 256)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !2179, file: !787, line: 240, baseType: !924, size: 64, offset: 320)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2179, file: !787, line: 242, baseType: !2210, size: 64, offset: 384)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!2211 = !DISubroutineType(types: !2212)
!2212 = !{!976, !2185, !184, !288, !773}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !2179, file: !787, line: 252, baseType: !288, size: 64, offset: 448)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !2179, file: !787, line: 259, baseType: !754, size: 8, offset: 512)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2179, file: !787, line: 260, baseType: !2210, size: 64, offset: 576)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2179, file: !787, line: 263, baseType: !2217, size: 64, offset: 640)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!1052, !2185, !1054}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2179, file: !787, line: 266, baseType: !2221, size: 64, offset: 704)
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2222, size: 64)
!2222 = !DISubroutineType(types: !2223)
!2223 = !{!74, !2185, !514}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2174, file: !787, line: 109, baseType: !2225, size: 64, offset: 64)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2226 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !787, line: 31, flags: DIFlagFwdDecl)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2174, file: !787, line: 110, baseType: !773, size: 64, offset: 128)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !2174, file: !787, line: 111, baseType: !2116, size: 64, offset: 192)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2117, file: !787, line: 148, baseType: !183, size: 64, offset: 768)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2117, file: !787, line: 154, baseType: !197, size: 64, offset: 832)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2117, file: !787, line: 156, baseType: !180, size: 16, offset: 896)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2117, file: !787, line: 157, baseType: !614, size: 16, offset: 912)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !2117, file: !787, line: 158, baseType: !2234, size: 64, offset: 960)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 64)
!2235 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !787, line: 32, flags: DIFlagFwdDecl)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1963, file: !1964, line: 71, baseType: !1287, size: 32, offset: 448)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !1963, file: !1964, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !1963, file: !1964, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !1963, file: !1964, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !1963, file: !1964, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !1963, file: !1964, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1960, file: !125, line: 463, baseType: !2243, size: 64, offset: 512)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1960, file: !125, line: 465, baseType: !2245, size: 64, offset: 576)
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64)
!2246 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !125, line: 36, flags: DIFlagFwdDecl)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !1960, file: !125, line: 467, baseType: !281, size: 64, offset: 640)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1960, file: !125, line: 468, baseType: !2249, size: 64, offset: 704)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2251)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !125, line: 87, size: 384, elements: !2252)
!2252 = !{!2253, !2254, !2255, !2259, !2264, !2268}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2251, file: !125, line: 88, baseType: !281, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2251, file: !125, line: 89, baseType: !2042, size: 64, offset: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2251, file: !125, line: 90, baseType: !2256, size: 64, offset: 128)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = !DISubroutineType(types: !2258)
!2258 = !{!74, !2243, !1997}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2251, file: !125, line: 91, baseType: !2260, size: 64, offset: 192)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64)
!2261 = !DISubroutineType(types: !2262)
!2262 = !{!184, !2243, !2263, !1566, !1567}
!2263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2251, file: !125, line: 93, baseType: !2265, size: 64, offset: 256)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = !DISubroutineType(types: !2267)
!2267 = !{null, !2243}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2251, file: !125, line: 95, baseType: !2269, size: 64, offset: 320)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2271)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !61, line: 278, size: 1472, elements: !2272)
!2272 = !{!2273, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !2271, file: !61, line: 279, baseType: !2274, size: 64)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = !DISubroutineType(types: !2276)
!2276 = !{!74, !2243}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !2271, file: !61, line: 280, baseType: !2265, size: 64, offset: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2271, file: !61, line: 281, baseType: !2274, size: 64, offset: 128)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2271, file: !61, line: 282, baseType: !2274, size: 64, offset: 192)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !2271, file: !61, line: 283, baseType: !2274, size: 64, offset: 256)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !2271, file: !61, line: 284, baseType: !2274, size: 64, offset: 320)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !2271, file: !61, line: 285, baseType: !2274, size: 64, offset: 384)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !2271, file: !61, line: 286, baseType: !2274, size: 64, offset: 448)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !2271, file: !61, line: 287, baseType: !2274, size: 64, offset: 512)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !2271, file: !61, line: 288, baseType: !2274, size: 64, offset: 576)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !2271, file: !61, line: 289, baseType: !2274, size: 64, offset: 640)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !2271, file: !61, line: 290, baseType: !2274, size: 64, offset: 704)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !2271, file: !61, line: 291, baseType: !2274, size: 64, offset: 768)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !2271, file: !61, line: 292, baseType: !2274, size: 64, offset: 832)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !2271, file: !61, line: 293, baseType: !2274, size: 64, offset: 896)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !2271, file: !61, line: 294, baseType: !2274, size: 64, offset: 960)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !2271, file: !61, line: 295, baseType: !2274, size: 64, offset: 1024)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !2271, file: !61, line: 296, baseType: !2274, size: 64, offset: 1088)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !2271, file: !61, line: 297, baseType: !2274, size: 64, offset: 1152)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !2271, file: !61, line: 298, baseType: !2274, size: 64, offset: 1216)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !2271, file: !61, line: 299, baseType: !2274, size: 64, offset: 1280)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !2271, file: !61, line: 300, baseType: !2274, size: 64, offset: 1344)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !2271, file: !61, line: 301, baseType: !2274, size: 64, offset: 1408)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1960, file: !125, line: 470, baseType: !2300, size: 64, offset: 768)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !2302, line: 82, size: 1408, elements: !2303)
!2302 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!2303 = !{!2304, !2305, !2306, !2307, !2308, !2309, !2310, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2367, !2370, !2371}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2301, file: !2302, line: 83, baseType: !281, size: 64)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !2301, file: !2302, line: 84, baseType: !281, size: 64, offset: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !2301, file: !2302, line: 85, baseType: !2243, size: 64, offset: 128)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !2301, file: !2302, line: 86, baseType: !2042, size: 64, offset: 192)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2301, file: !2302, line: 87, baseType: !2042, size: 64, offset: 256)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !2301, file: !2302, line: 88, baseType: !2042, size: 64, offset: 320)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !2301, file: !2302, line: 90, baseType: !2311, size: 64, offset: 384)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!2312 = !DISubroutineType(types: !2313)
!2313 = !{!74, !2243, !2314}
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !119, line: 95, size: 1152, elements: !2316)
!2316 = !{!2317, !2318, !2319, !2320, !2321, !2322, !2323, !2327, !2331, !2332, !2333, !2334, !2335, !2343, !2344, !2345, !2346, !2347, !2348}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2315, file: !119, line: 96, baseType: !281, size: 64)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !2315, file: !119, line: 97, baseType: !2300, size: 64, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2315, file: !119, line: 99, baseType: !308, size: 64, offset: 128)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !2315, file: !119, line: 100, baseType: !281, size: 64, offset: 192)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !2315, file: !119, line: 102, baseType: !754, size: 8, offset: 256)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !2315, file: !119, line: 103, baseType: !118, size: 32, offset: 288)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !2315, file: !119, line: 105, baseType: !2324, size: 64, offset: 320)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2326)
!2326 = !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !119, line: 105, flags: DIFlagFwdDecl)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !2315, file: !119, line: 106, baseType: !2328, size: 64, offset: 384)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64)
!2329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2330)
!2330 = !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !119, line: 106, flags: DIFlagFwdDecl)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2315, file: !119, line: 108, baseType: !2274, size: 64, offset: 448)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2315, file: !119, line: 109, baseType: !2265, size: 64, offset: 512)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2315, file: !119, line: 110, baseType: !2274, size: 64, offset: 576)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2315, file: !119, line: 111, baseType: !2265, size: 64, offset: 640)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2315, file: !119, line: 112, baseType: !2336, size: 64, offset: 704)
!2336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2337, size: 64)
!2337 = !DISubroutineType(types: !2338)
!2338 = !{!74, !2243, !2339}
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !61, line: 52, baseType: !2340)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !61, line: 50, size: 32, elements: !2341)
!2341 = !{!2342}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2340, file: !61, line: 51, baseType: !74, size: 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2315, file: !119, line: 113, baseType: !2274, size: 64, offset: 768)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !2315, file: !119, line: 114, baseType: !2042, size: 64, offset: 832)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2315, file: !119, line: 115, baseType: !2042, size: 64, offset: 896)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2315, file: !119, line: 117, baseType: !2269, size: 64, offset: 960)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !2315, file: !119, line: 118, baseType: !2265, size: 64, offset: 1024)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2315, file: !119, line: 120, baseType: !2349, size: 64, offset: 1088)
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!2350 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !119, line: 120, flags: DIFlagFwdDecl)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !2301, file: !2302, line: 91, baseType: !2256, size: 64, offset: 448)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !2301, file: !2302, line: 92, baseType: !2274, size: 64, offset: 512)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !2301, file: !2302, line: 93, baseType: !2265, size: 64, offset: 576)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2301, file: !2302, line: 94, baseType: !2274, size: 64, offset: 640)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2301, file: !2302, line: 95, baseType: !2265, size: 64, offset: 704)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !2301, file: !2302, line: 97, baseType: !2274, size: 64, offset: 768)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !2301, file: !2302, line: 98, baseType: !2274, size: 64, offset: 832)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !2301, file: !2302, line: 100, baseType: !2336, size: 64, offset: 896)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !2301, file: !2302, line: 101, baseType: !2274, size: 64, offset: 960)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !2301, file: !2302, line: 103, baseType: !2274, size: 64, offset: 1024)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !2301, file: !2302, line: 105, baseType: !2274, size: 64, offset: 1088)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2301, file: !2302, line: 107, baseType: !2269, size: 64, offset: 1152)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !2301, file: !2302, line: 109, baseType: !2364, size: 64, offset: 1216)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!2365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2366)
!2366 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !2302, line: 109, flags: DIFlagFwdDecl)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2301, file: !2302, line: 111, baseType: !2368, size: 64, offset: 1280)
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2369 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !2302, line: 111, flags: DIFlagFwdDecl)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !2301, file: !2302, line: 112, baseType: !807, offset: 1344)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !2301, file: !2302, line: 114, baseType: !754, size: 8, offset: 1344)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1960, file: !125, line: 471, baseType: !2314, size: 64, offset: 832)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !1960, file: !125, line: 473, baseType: !183, size: 64, offset: 896)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1960, file: !125, line: 475, baseType: !183, size: 64, offset: 960)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1960, file: !125, line: 480, baseType: !901, size: 192, offset: 1024)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1960, file: !125, line: 484, baseType: !2377, size: 576, offset: 1216)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !125, line: 361, size: 576, elements: !2378)
!2378 = !{!2379, !2380, !2381, !2382, !2383, !2384}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !2377, file: !125, line: 362, baseType: !298, size: 128)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !2377, file: !125, line: 363, baseType: !298, size: 128, offset: 128)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !2377, file: !125, line: 364, baseType: !298, size: 128, offset: 256)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !2377, file: !125, line: 365, baseType: !298, size: 128, offset: 384)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !2377, file: !125, line: 366, baseType: !754, size: 8, offset: 512)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2377, file: !125, line: 367, baseType: !124, size: 32, offset: 544)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !1960, file: !125, line: 485, baseType: !2386, size: 2304, offset: 1792)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !61, line: 565, size: 2304, elements: !2387)
!2387 = !{!2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2483, !2487}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !2386, file: !61, line: 566, baseType: !2339, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !2386, file: !61, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !2386, file: !61, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !2386, file: !61, line: 569, baseType: !754, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !2386, file: !61, line: 570, baseType: !754, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !2386, file: !61, line: 571, baseType: !754, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !2386, file: !61, line: 572, baseType: !754, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !2386, file: !61, line: 573, baseType: !754, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !2386, file: !61, line: 574, baseType: !754, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !2386, file: !61, line: 575, baseType: !754, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !2386, file: !61, line: 576, baseType: !754, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !2386, file: !61, line: 577, baseType: !205, size: 32, offset: 64)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2386, file: !61, line: 578, baseType: !210, offset: 96)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2386, file: !61, line: 580, baseType: !298, size: 128, offset: 128)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2386, file: !61, line: 581, baseType: !1541, size: 192, offset: 256)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !2386, file: !61, line: 582, baseType: !2404, size: 64, offset: 448)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !2406, line: 43, size: 1472, elements: !2407)
!2406 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!2407 = !{!2408, !2409, !2410, !2411, !2412, !2415, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2405, file: !2406, line: 44, baseType: !281, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2405, file: !2406, line: 45, baseType: !74, size: 32, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2405, file: !2406, line: 46, baseType: !298, size: 128, offset: 128)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2405, file: !2406, line: 47, baseType: !210, offset: 256)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2405, file: !2406, line: 48, baseType: !2413, size: 64, offset: 256)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !61, line: 533, flags: DIFlagFwdDecl)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2405, file: !2406, line: 49, baseType: !2416, size: 320, offset: 320)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2417, line: 11, size: 320, elements: !2418)
!2417 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2418 = !{!2419, !2420, !2421, !2426}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2416, file: !2417, line: 16, baseType: !320, size: 128)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2416, file: !2417, line: 17, baseType: !168, size: 64, offset: 128)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2416, file: !2417, line: 18, baseType: !2422, size: 64, offset: 192)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64)
!2423 = !DISubroutineType(types: !2424)
!2424 = !{null, !2425}
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2416, file: !2417, line: 19, baseType: !205, size: 32, offset: 256)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2405, file: !2406, line: 50, baseType: !168, size: 64, offset: 640)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !2405, file: !2406, line: 51, baseType: !426, size: 64, offset: 704)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !2405, file: !2406, line: 52, baseType: !426, size: 64, offset: 768)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !2405, file: !2406, line: 53, baseType: !426, size: 64, offset: 832)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !2405, file: !2406, line: 54, baseType: !426, size: 64, offset: 896)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !2405, file: !2406, line: 55, baseType: !426, size: 64, offset: 960)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !2405, file: !2406, line: 56, baseType: !168, size: 64, offset: 1024)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !2405, file: !2406, line: 57, baseType: !168, size: 64, offset: 1088)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !2405, file: !2406, line: 58, baseType: !168, size: 64, offset: 1152)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !2405, file: !2406, line: 59, baseType: !168, size: 64, offset: 1216)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !2405, file: !2406, line: 60, baseType: !168, size: 64, offset: 1280)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2405, file: !2406, line: 61, baseType: !2243, size: 64, offset: 1344)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2405, file: !2406, line: 62, baseType: !754, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !2405, file: !2406, line: 63, baseType: !754, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !2386, file: !61, line: 583, baseType: !754, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !2386, file: !61, line: 584, baseType: !754, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !2386, file: !61, line: 585, baseType: !754, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !2386, file: !61, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !2386, file: !61, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !2386, file: !61, line: 592, baseType: !418, size: 512, offset: 576)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !2386, file: !61, line: 593, baseType: !197, size: 64, offset: 1088)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2386, file: !61, line: 594, baseType: !1480, size: 256, offset: 1152)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !2386, file: !61, line: 595, baseType: !1064, size: 128, offset: 1408)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !2386, file: !61, line: 596, baseType: !2413, size: 64, offset: 1536)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !2386, file: !61, line: 597, baseType: !347, size: 32, offset: 1600)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !2386, file: !61, line: 598, baseType: !347, size: 32, offset: 1632)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !2386, file: !61, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !2386, file: !61, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !2386, file: !61, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !2386, file: !61, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !2386, file: !61, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !2386, file: !61, line: 604, baseType: !754, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !2386, file: !61, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !2386, file: !61, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !2386, file: !61, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !2386, file: !61, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !2386, file: !61, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !2386, file: !61, line: 610, baseType: !7, size: 32, offset: 1696)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !2386, file: !61, line: 611, baseType: !131, size: 32, offset: 1728)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !2386, file: !61, line: 612, baseType: !60, size: 32, offset: 1760)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !2386, file: !61, line: 613, baseType: !74, size: 32, offset: 1792)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !2386, file: !61, line: 614, baseType: !74, size: 32, offset: 1824)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !2386, file: !61, line: 615, baseType: !197, size: 64, offset: 1856)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !2386, file: !61, line: 616, baseType: !197, size: 64, offset: 1920)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !2386, file: !61, line: 617, baseType: !197, size: 64, offset: 1984)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !2386, file: !61, line: 618, baseType: !197, size: 64, offset: 2048)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !2386, file: !61, line: 620, baseType: !2474, size: 64, offset: 2112)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 64)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !61, line: 536, size: 256, elements: !2476)
!2476 = !{!2477, !2478, !2479, !2480}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2475, file: !61, line: 537, baseType: !210)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2475, file: !61, line: 538, baseType: !7, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !2475, file: !61, line: 540, baseType: !298, size: 128, offset: 64)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !2475, file: !61, line: 543, baseType: !2481, size: 64, offset: 192)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2482 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !61, line: 534, flags: DIFlagFwdDecl)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !2386, file: !61, line: 621, baseType: !2484, size: 64, offset: 2176)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{null, !2243, !1367}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !2386, file: !61, line: 622, baseType: !2488, size: 64, offset: 2240)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2489 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !61, line: 622, flags: DIFlagFwdDecl)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !1960, file: !125, line: 486, baseType: !2491, size: 64, offset: 4096)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 64)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !61, line: 642, size: 1792, elements: !2493)
!2493 = !{!2494, !2495, !2496, !2500, !2501, !2502}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2492, file: !61, line: 643, baseType: !2271, size: 1472)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2492, file: !61, line: 644, baseType: !2274, size: 64, offset: 1472)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !2492, file: !61, line: 645, baseType: !2497, size: 64, offset: 1536)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!2498 = !DISubroutineType(types: !2499)
!2499 = !{null, !2243, !754}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !2492, file: !61, line: 646, baseType: !2274, size: 64, offset: 1600)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !2492, file: !61, line: 647, baseType: !2265, size: 64, offset: 1664)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !2492, file: !61, line: 648, baseType: !2265, size: 64, offset: 1728)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !1960, file: !125, line: 493, baseType: !2504, size: 64, offset: 4160)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!2505 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !2506, line: 13, flags: DIFlagFwdDecl)
!2506 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !1960, file: !125, line: 499, baseType: !298, size: 128, offset: 4224)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !1960, file: !125, line: 502, baseType: !2509, size: 64, offset: 4352)
!2509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2510, size: 64)
!2510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2511)
!2511 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !125, line: 502, flags: DIFlagFwdDecl)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !1960, file: !125, line: 504, baseType: !2513, size: 64, offset: 4416)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !1960, file: !125, line: 505, baseType: !197, size: 64, offset: 4480)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !1960, file: !125, line: 510, baseType: !197, size: 64, offset: 4544)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !1960, file: !125, line: 511, baseType: !2517, size: 64, offset: 4608)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2519)
!2519 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !125, line: 511, flags: DIFlagFwdDecl)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !1960, file: !125, line: 513, baseType: !2521, size: 64, offset: 4672)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !125, line: 288, size: 128, elements: !2523)
!2523 = !{!2524, !2525}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !2522, file: !125, line: 293, baseType: !7, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !2522, file: !125, line: 294, baseType: !168, size: 64, offset: 64)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !1960, file: !125, line: 515, baseType: !298, size: 128, offset: 4736)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !1960, file: !125, line: 526, baseType: !2528, offset: 4864)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !2529, line: 5, elements: !224)
!2529 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !1960, file: !125, line: 528, baseType: !2531, size: 64, offset: 4864)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !2533, line: 14, flags: DIFlagFwdDecl)
!2533 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1960, file: !125, line: 529, baseType: !2535, size: 64, offset: 4928)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !2537, line: 17, size: 192, elements: !2538)
!2537 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!2538 = !{!2539, !2540, !2622}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !2536, file: !2537, line: 18, baseType: !2535, size: 64)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2536, file: !2537, line: 19, baseType: !2541, size: 64, offset: 64)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 64)
!2542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2543)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !2537, line: 110, size: 1152, elements: !2544)
!2544 = !{!2545, !2549, !2553, !2559, !2565, !2569, !2573, !2578, !2582, !2583, !2587, !2591, !2595, !2605, !2606, !2607, !2608, !2618}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !2543, file: !2537, line: 111, baseType: !2546, size: 64)
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64)
!2547 = !DISubroutineType(types: !2548)
!2548 = !{!2535, !2535}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !2543, file: !2537, line: 112, baseType: !2550, size: 64, offset: 64)
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 64)
!2551 = !DISubroutineType(types: !2552)
!2552 = !{null, !2535}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !2543, file: !2537, line: 113, baseType: !2554, size: 64, offset: 128)
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64)
!2555 = !DISubroutineType(types: !2556)
!2556 = !{!754, !2557}
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2536)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !2543, file: !2537, line: 114, baseType: !2560, size: 64, offset: 192)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{!2095, !2557, !2563}
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 64)
!2564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1960)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !2543, file: !2537, line: 116, baseType: !2566, size: 64, offset: 256)
!2566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2567, size: 64)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{!754, !2557, !281}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !2543, file: !2537, line: 118, baseType: !2570, size: 64, offset: 320)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = !DISubroutineType(types: !2572)
!2572 = !{!74, !2557, !281, !7, !183, !288}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !2543, file: !2537, line: 123, baseType: !2574, size: 64, offset: 384)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64)
!2575 = !DISubroutineType(types: !2576)
!2576 = !{!74, !2557, !281, !2577, !288}
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !2543, file: !2537, line: 126, baseType: !2579, size: 64, offset: 448)
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 64)
!2580 = !DISubroutineType(types: !2581)
!2581 = !{!281, !2557}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !2543, file: !2537, line: 127, baseType: !2579, size: 64, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !2543, file: !2537, line: 128, baseType: !2584, size: 64, offset: 576)
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 64)
!2585 = !DISubroutineType(types: !2586)
!2586 = !{!2535, !2557}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !2543, file: !2537, line: 130, baseType: !2588, size: 64, offset: 640)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 64)
!2589 = !DISubroutineType(types: !2590)
!2590 = !{!2535, !2557, !2535}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !2543, file: !2537, line: 133, baseType: !2592, size: 64, offset: 704)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = !DISubroutineType(types: !2594)
!2594 = !{!2535, !2557, !281}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !2543, file: !2537, line: 135, baseType: !2596, size: 64, offset: 768)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2597 = !DISubroutineType(types: !2598)
!2598 = !{!74, !2557, !281, !281, !7, !7, !2599}
!2599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 64)
!2600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !2537, line: 43, size: 640, elements: !2601)
!2601 = !{!2602, !2603, !2604}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !2600, file: !2537, line: 44, baseType: !2535, size: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !2600, file: !2537, line: 45, baseType: !7, size: 32, offset: 64)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2600, file: !2537, line: 46, baseType: !196, size: 512, offset: 128)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !2543, file: !2537, line: 140, baseType: !2588, size: 64, offset: 832)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !2543, file: !2537, line: 143, baseType: !2584, size: 64, offset: 896)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !2543, file: !2537, line: 145, baseType: !2546, size: 64, offset: 960)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !2543, file: !2537, line: 146, baseType: !2609, size: 64, offset: 1024)
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!2610 = !DISubroutineType(types: !2611)
!2611 = !{!74, !2557, !2612}
!2612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64)
!2613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !2537, line: 29, size: 128, elements: !2614)
!2614 = !{!2615, !2616, !2617}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2613, file: !2537, line: 30, baseType: !7, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2613, file: !2537, line: 31, baseType: !7, size: 32, offset: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !2613, file: !2537, line: 32, baseType: !2557, size: 64, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !2543, file: !2537, line: 148, baseType: !2619, size: 64, offset: 1088)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 64)
!2620 = !DISubroutineType(types: !2621)
!2621 = !{!74, !2557, !2243}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2536, file: !2537, line: 20, baseType: !2243, size: 64, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !1960, file: !125, line: 534, baseType: !768, size: 32, offset: 4992)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1960, file: !125, line: 535, baseType: !205, size: 32, offset: 5024)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !1960, file: !125, line: 537, baseType: !210, offset: 5056)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !1960, file: !125, line: 538, baseType: !298, size: 128, offset: 5056)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1960, file: !125, line: 540, baseType: !2628, size: 64, offset: 5184)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 64)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !2630, line: 54, size: 960, elements: !2631)
!2630 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!2631 = !{!2632, !2633, !2634, !2635, !2636, !2637, !2638, !2642, !2646, !2647, !2648, !2649, !2653, !2657, !2658}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2629, file: !2630, line: 55, baseType: !281, size: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2629, file: !2630, line: 56, baseType: !308, size: 64, offset: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !2629, file: !2630, line: 58, baseType: !2042, size: 64, offset: 128)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !2629, file: !2630, line: 59, baseType: !2042, size: 64, offset: 192)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !2629, file: !2630, line: 60, baseType: !1969, size: 64, offset: 256)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !2629, file: !2630, line: 62, baseType: !2256, size: 64, offset: 320)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2629, file: !2630, line: 63, baseType: !2639, size: 64, offset: 384)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2640 = !DISubroutineType(types: !2641)
!2641 = !{!184, !2243, !2263}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !2629, file: !2630, line: 65, baseType: !2643, size: 64, offset: 448)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2644, size: 64)
!2644 = !DISubroutineType(types: !2645)
!2645 = !{null, !2628}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !2629, file: !2630, line: 66, baseType: !2265, size: 64, offset: 512)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !2629, file: !2630, line: 68, baseType: !2274, size: 64, offset: 576)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !2629, file: !2630, line: 70, baseType: !2078, size: 64, offset: 640)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !2629, file: !2630, line: 71, baseType: !2650, size: 64, offset: 704)
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2651, size: 64)
!2651 = !DISubroutineType(types: !2652)
!2652 = !{!2095, !2243}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !2629, file: !2630, line: 73, baseType: !2654, size: 64, offset: 768)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = !DISubroutineType(types: !2656)
!2656 = !{null, !2243, !1566, !1567}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !2629, file: !2630, line: 75, baseType: !2269, size: 64, offset: 832)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2629, file: !2630, line: 77, baseType: !2368, size: 64, offset: 896)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1960, file: !125, line: 541, baseType: !2042, size: 64, offset: 5248)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1960, file: !125, line: 543, baseType: !2265, size: 64, offset: 5312)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !1960, file: !125, line: 544, baseType: !2662, size: 64, offset: 5376)
!2662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2663 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !125, line: 45, flags: DIFlagFwdDecl)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !1960, file: !125, line: 545, baseType: !2665, size: 64, offset: 5440)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 64)
!2666 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !125, line: 47, flags: DIFlagFwdDecl)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !1960, file: !125, line: 547, baseType: !754, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1960, file: !125, line: 548, baseType: !754, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !1960, file: !125, line: 549, baseType: !754, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !1960, file: !125, line: 550, baseType: !754, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !1928, file: !1929, line: 69, baseType: !1969, size: 64, offset: 5952)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1928, file: !1929, line: 70, baseType: !74, size: 32, offset: 6016)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !1928, file: !1929, line: 70, baseType: !74, size: 32, offset: 6048)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1928, file: !1929, line: 71, baseType: !2675, size: 64, offset: 6080)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64)
!2676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !1929, line: 48, size: 808, elements: !2677)
!2677 = !{!2678, !2682}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !2676, file: !1929, line: 49, baseType: !2679, size: 296)
!2679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 296, elements: !2680)
!2680 = !{!2681}
!2681 = !DISubrange(count: 37)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !2676, file: !1929, line: 50, baseType: !2683, size: 512, offset: 296)
!2683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 512, elements: !2004)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !1928, file: !1929, line: 75, baseType: !2685, size: 448, offset: 6144)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1481, line: 124, size: 448, elements: !2686)
!2686 = !{!2687, !2688, !2689}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2685, file: !1481, line: 125, baseType: !1480, size: 256)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2685, file: !1481, line: 126, baseType: !951, size: 128, align: 64, offset: 256)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2685, file: !1481, line: 129, baseType: !2690, size: 64, offset: 384)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1481, line: 18, flags: DIFlagFwdDecl)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !1911, file: !1912, line: 39, baseType: !7, size: 32, offset: 896)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !1911, file: !1912, line: 41, baseType: !210, offset: 928)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !1911, file: !1912, line: 42, baseType: !2695, size: 64, offset: 960)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !1929, line: 167, size: 8512, elements: !2697)
!2697 = !{!2698, !2699, !2700, !2701, !2703, !2704, !2705, !2716, !2717, !2896, !3423, !3424, !3425, !3426, !3427, !3428, !3435, !3436, !3439, !3440, !3441, !3444}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !2696, file: !1929, line: 171, baseType: !74, size: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !2696, file: !1929, line: 172, baseType: !74, size: 32, offset: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !2696, file: !1929, line: 173, baseType: !74, size: 32, offset: 64)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !2696, file: !1929, line: 176, baseType: !2702, size: 256, offset: 96)
!2702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 256, elements: !678)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !2696, file: !1929, line: 178, baseType: !180, size: 16, offset: 352)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !2696, file: !1929, line: 179, baseType: !180, size: 16, offset: 368)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !2696, file: !1929, line: 186, baseType: !2706, size: 64, offset: 384)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !1929, line: 149, size: 256, elements: !2708)
!2708 = !{!2709, !2710, !2711, !2712}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2707, file: !1929, line: 150, baseType: !951, size: 128, align: 64)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2707, file: !1929, line: 151, baseType: !74, size: 32, offset: 128)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !2707, file: !1929, line: 152, baseType: !1927, size: 64, offset: 192)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2707, file: !1929, line: 153, baseType: !2713, offset: 256)
!2713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1927, elements: !2714)
!2714 = !{!2715}
!2715 = !DISubrange(count: -1)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !2696, file: !1929, line: 187, baseType: !1928, size: 6592, offset: 448)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !2696, file: !1929, line: 189, baseType: !2718, size: 64, offset: 7040)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2720)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !48, line: 1844, size: 960, elements: !2721)
!2721 = !{!2722, !2822, !2826, !2830, !2834, !2838, !2839, !2843, !2847, !2851, !2857, !2861, !2887, !2891, !2892}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !2720, file: !48, line: 1845, baseType: !2723, size: 64)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{!2726, !2727}
!2726 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !1912, line: 515, baseType: !7)
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2728, size: 64)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !1912, line: 203, size: 832, elements: !2729)
!2729 = !{!2730, !2731, !2732, !2733, !2734, !2735, !2736, !2738, !2739, !2740, !2748, !2753, !2754, !2779, !2780, !2781, !2782, !2783, !2821}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !2728, file: !1912, line: 204, baseType: !2727, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !2728, file: !1912, line: 205, baseType: !2695, size: 64, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !2728, file: !1912, line: 206, baseType: !7, size: 32, offset: 128)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !2728, file: !1912, line: 210, baseType: !180, size: 16, offset: 160)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !2728, file: !1912, line: 211, baseType: !180, size: 16, offset: 176)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !2728, file: !1912, line: 212, baseType: !180, size: 16, offset: 192)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !2728, file: !1912, line: 213, baseType: !2737, size: 8, offset: 208)
!2737 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !1912, line: 58, baseType: !226)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !2728, file: !1912, line: 214, baseType: !226, size: 8, offset: 216)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !2728, file: !1912, line: 215, baseType: !347, size: 32, offset: 224)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !2728, file: !1912, line: 217, baseType: !2741, size: 192, offset: 256)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !2742, line: 37, size: 192, elements: !2743)
!2742 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!2743 = !{!2744, !2745, !2746, !2747}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !2741, file: !2742, line: 38, baseType: !1932, size: 64)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !2741, file: !2742, line: 40, baseType: !7, size: 32, offset: 64)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !2741, file: !2742, line: 42, baseType: !7, size: 32, offset: 96)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !2741, file: !2742, line: 44, baseType: !7, size: 32, offset: 128)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !2728, file: !1912, line: 219, baseType: !2749, size: 64, offset: 448)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !1912, line: 19, baseType: !2751)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{null, !2727}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !2728, file: !1912, line: 221, baseType: !183, size: 64, offset: 512)
!2754 = !DIDerivedType(tag: DW_TAG_member, scope: !2728, file: !1912, line: 240, baseType: !2755, size: 64, offset: 576)
!2755 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2728, file: !1912, line: 240, size: 64, elements: !2756)
!2756 = !{!2757}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !2755, file: !1912, line: 242, baseType: !2758, size: 64)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !2760, line: 313, size: 832, elements: !2761)
!2760 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!2761 = !{!2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2777}
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !2759, file: !2760, line: 314, baseType: !2727, size: 64)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !2759, file: !2760, line: 316, baseType: !2741, size: 192, offset: 64)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !2759, file: !2760, line: 318, baseType: !180, size: 16, offset: 256)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !2759, file: !2760, line: 319, baseType: !180, size: 16, offset: 272)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !2759, file: !2760, line: 320, baseType: !180, size: 16, offset: 288)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !2759, file: !2760, line: 321, baseType: !180, size: 16, offset: 304)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !2759, file: !2760, line: 323, baseType: !2741, size: 192, offset: 320)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !2759, file: !2760, line: 325, baseType: !1480, size: 256, offset: 512)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !2759, file: !2760, line: 327, baseType: !2771, size: 64, offset: 768)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !2742, line: 31, size: 128, elements: !2773)
!2773 = !{!2774, !2775, !2776}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !2772, file: !2742, line: 32, baseType: !594, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !2772, file: !2742, line: 33, baseType: !7, size: 32, offset: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !2772, file: !2742, line: 34, baseType: !7, size: 32, offset: 96)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !2759, file: !2760, line: 328, baseType: !2778, offset: 832)
!2778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2772, elements: !2714)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !2728, file: !1912, line: 246, baseType: !180, size: 16, offset: 640)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !2728, file: !1912, line: 252, baseType: !180, size: 16, offset: 656)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !2728, file: !1912, line: 254, baseType: !347, size: 32, offset: 672)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !2728, file: !1912, line: 256, baseType: !2771, size: 64, offset: 704)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !2728, file: !1912, line: 258, baseType: !2784, size: 64, offset: 768)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !2760, line: 682, size: 2368, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2810, !2811, !2812, !2813, !2814, !2819, !2820}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !2785, file: !2760, line: 683, baseType: !1308, size: 64)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !2785, file: !2760, line: 684, baseType: !7, size: 32, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !2785, file: !2760, line: 686, baseType: !2790, size: 448, offset: 128)
!2790 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !2791, line: 26, baseType: !2792)
!2791 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!2792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !2791, line: 16, size: 448, elements: !2793)
!2793 = !{!2794, !2795, !2796, !2797, !2798, !2799, !2804, !2809}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2792, file: !2791, line: 17, baseType: !210)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !2792, file: !2791, line: 18, baseType: !74, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !2792, file: !2791, line: 19, baseType: !74, size: 32, offset: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2792, file: !2791, line: 20, baseType: !1181, size: 64, offset: 64)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !2792, file: !2791, line: 22, baseType: !183, size: 64, offset: 128)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2792, file: !2791, line: 23, baseType: !2800, size: 64, offset: 192)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64)
!2801 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !2791, line: 13, baseType: !2802)
!2802 = !DISubroutineType(types: !2803)
!2803 = !{!183, !187, !183}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2792, file: !2791, line: 24, baseType: !2805, size: 64, offset: 256)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !2791, line: 14, baseType: !2807)
!2807 = !DISubroutineType(types: !2808)
!2808 = !{null, !183, !183}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2792, file: !2791, line: 25, baseType: !1064, size: 128, offset: 320)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !2785, file: !2760, line: 687, baseType: !2790, size: 448, offset: 576)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !2785, file: !2760, line: 689, baseType: !2790, size: 448, offset: 1024)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !2785, file: !2760, line: 690, baseType: !2790, size: 448, offset: 1472)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !2785, file: !2760, line: 697, baseType: !210, offset: 1920)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !2785, file: !2760, line: 698, baseType: !2815, size: 128, offset: 1920)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2760, line: 554, size: 128, elements: !2816)
!2816 = !{!2817, !2818}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2815, file: !2760, line: 555, baseType: !2727, size: 64)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2815, file: !2760, line: 556, baseType: !2727, size: 64, offset: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !2785, file: !2760, line: 699, baseType: !1480, size: 256, offset: 2048)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !2785, file: !2760, line: 700, baseType: !2690, size: 64, offset: 2304)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !2728, file: !1912, line: 265, baseType: !2778, offset: 832)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2720, file: !48, line: 1846, baseType: !2823, size: 64, offset: 64)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = !DISubroutineType(types: !2825)
!2825 = !{!74, !1910, !1257}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2720, file: !48, line: 1847, baseType: !2827, size: 64, offset: 128)
!2827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 64)
!2828 = !DISubroutineType(types: !2829)
!2829 = !{null, !2695, !1257}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !2720, file: !48, line: 1848, baseType: !2831, size: 64, offset: 192)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 64)
!2832 = !DISubroutineType(types: !2833)
!2833 = !{!74, !1910, !1932, !594, !7}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2720, file: !48, line: 1849, baseType: !2835, size: 64, offset: 256)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = !DISubroutineType(types: !2837)
!2837 = !{!74, !1910, !1257, !7, !168}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2720, file: !48, line: 1850, baseType: !2835, size: 64, offset: 320)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !2720, file: !48, line: 1851, baseType: !2840, size: 64, offset: 384)
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DISubroutineType(types: !2842)
!2842 = !{!7, !2695, !7}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !2720, file: !48, line: 1853, baseType: !2844, size: 64, offset: 448)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DISubroutineType(types: !2846)
!2846 = !{null, !2695}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !2720, file: !48, line: 1854, baseType: !2848, size: 64, offset: 512)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2849 = !DISubroutineType(types: !2850)
!2850 = !{!74, !2695}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !2720, file: !48, line: 1855, baseType: !2852, size: 64, offset: 576)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{!74, !1910, !2855}
!2855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2856, size: 64)
!2856 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !96, line: 51, flags: DIFlagFwdDecl)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !2720, file: !48, line: 1857, baseType: !2858, size: 64, offset: 640)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{null, !1910, !168}
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !2720, file: !48, line: 1858, baseType: !2862, size: 64, offset: 704)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = !DISubroutineType(types: !2864)
!2864 = !{!74, !2695, !1932, !7, !2865, !183}
!2865 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !48, line: 354, baseType: !2866)
!2866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 64)
!2867 = !DISubroutineType(types: !2868)
!2868 = !{!74, !2869, !7, !183}
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !2871, line: 106, size: 512, elements: !2872)
!2871 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!2872 = !{!2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2882, !2883}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2870, file: !2871, line: 107, baseType: !199, size: 64)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2870, file: !2871, line: 108, baseType: !199, size: 64, offset: 64)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !2870, file: !2871, line: 109, baseType: !199, size: 64, offset: 128)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2870, file: !2871, line: 110, baseType: !227, size: 8, offset: 192)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !2870, file: !2871, line: 111, baseType: !227, size: 8, offset: 200)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !2870, file: !2871, line: 112, baseType: !227, size: 8, offset: 208)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !2870, file: !2871, line: 113, baseType: !227, size: 8, offset: 216)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !2870, file: !2871, line: 114, baseType: !2881, size: 32, offset: 224)
!2881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 32, elements: !176)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !2870, file: !2871, line: 115, baseType: !199, size: 64, offset: 256)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2870, file: !2871, line: 116, baseType: !2884, size: 192, offset: 320)
!2884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 192, elements: !2885)
!2885 = !{!2886}
!2886 = !DISubrange(count: 24)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !2720, file: !48, line: 1860, baseType: !2888, size: 64, offset: 768)
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 64)
!2889 = !DISubroutineType(types: !2890)
!2890 = !{!184, !2695, !2263}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2720, file: !48, line: 1861, baseType: !308, size: 64, offset: 832)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !2720, file: !48, line: 1862, baseType: !2893, size: 64, offset: 896)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2895)
!2895 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !48, line: 41, flags: DIFlagFwdDecl)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !2696, file: !1929, line: 190, baseType: !2897, size: 64, offset: 7104)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !48, line: 399, size: 14464, elements: !2899)
!2899 = !{!2900, !3029, !3151, !3152, !3155, !3158, !3162, !3163, !3164, !3166, !3167, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3289, !3298, !3299, !3300, !3301, !3302, !3332, !3333, !3334, !3335, !3336, !3337, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3410, !3411, !3412, !3413, !3416, !3417, !3418, !3419, !3420, !3421}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !2898, file: !48, line: 400, baseType: !2901, size: 64)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 64)
!2902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !48, line: 130, size: 2176, elements: !2903)
!2903 = !{!2904, !2905, !2908, !2911, !2912, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2926, !2933, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !3027, !3028}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2902, file: !48, line: 131, baseType: !2897, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !2902, file: !48, line: 132, baseType: !2906, size: 64, offset: 64)
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 64)
!2907 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !48, line: 132, flags: DIFlagFwdDecl)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !2902, file: !48, line: 133, baseType: !2909, size: 64, offset: 128)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!2910 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !48, line: 133, flags: DIFlagFwdDecl)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !2902, file: !48, line: 135, baseType: !7, size: 32, offset: 192)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !2902, file: !48, line: 136, baseType: !2913, size: 32, offset: 224)
!2913 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !48, line: 66, baseType: !174)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !2902, file: !48, line: 138, baseType: !74, size: 32, offset: 256)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !2902, file: !48, line: 139, baseType: !74, size: 32, offset: 288)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !2902, file: !48, line: 142, baseType: !7, size: 32, offset: 320)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !2902, file: !48, line: 143, baseType: !1932, size: 64, offset: 384)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !2902, file: !48, line: 145, baseType: !2727, size: 64, offset: 448)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !2902, file: !48, line: 146, baseType: !2727, size: 64, offset: 512)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !2902, file: !48, line: 148, baseType: !298, size: 128, offset: 576)
!2921 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !48, line: 157, baseType: !2922, size: 128, offset: 704)
!2922 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !48, line: 157, size: 128, elements: !2923)
!2923 = !{!2924, !2925}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2922, file: !48, line: 158, baseType: !320, size: 128)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !2922, file: !48, line: 159, baseType: !298, size: 128)
!2926 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !48, line: 167, baseType: !2927, size: 192, offset: 832)
!2927 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !48, line: 167, size: 192, elements: !2928)
!2928 = !{!2929, !2930, !2931, !2932}
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2927, file: !48, line: 168, baseType: !371, size: 192, align: 64)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !2927, file: !48, line: 169, baseType: !2772, size: 128)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !2927, file: !48, line: 170, baseType: !183, size: 64)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !2927, file: !48, line: 171, baseType: !74, size: 32)
!2933 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !48, line: 180, baseType: !2934, size: 256, offset: 1024)
!2934 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !48, line: 180, size: 256, elements: !2935)
!2935 = !{!2936, !2971}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !2934, file: !48, line: 184, baseType: !2937, size: 192)
!2937 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2934, file: !48, line: 181, size: 192, elements: !2938)
!2938 = !{!2939, !2969}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !2937, file: !48, line: 182, baseType: !2940, size: 64)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2942, line: 73, size: 448, elements: !2943)
!2942 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2943 = !{!2944, !2945, !2958, !2963, !2968}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2941, file: !2942, line: 74, baseType: !2897, size: 64)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2941, file: !2942, line: 75, baseType: !2946, size: 64, offset: 64)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2942, line: 99, size: 704, elements: !2948)
!2948 = !{!2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2947, file: !2942, line: 100, baseType: !905, size: 64)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2947, file: !2942, line: 101, baseType: !347, size: 32, offset: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2947, file: !2942, line: 102, baseType: !347, size: 32, offset: 96)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2947, file: !2942, line: 105, baseType: !210, offset: 128)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2947, file: !2942, line: 107, baseType: !180, size: 16, offset: 128)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2947, file: !2942, line: 109, baseType: !1296, size: 128, offset: 192)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2947, file: !2942, line: 110, baseType: !2940, size: 64, offset: 320)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2947, file: !2942, line: 111, baseType: !803, size: 64, offset: 384)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2947, file: !2942, line: 113, baseType: !1480, size: 256, offset: 448)
!2958 = !DIDerivedType(tag: DW_TAG_member, scope: !2941, file: !2942, line: 83, baseType: !2959, size: 128, offset: 128)
!2959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2941, file: !2942, line: 83, size: 128, elements: !2960)
!2960 = !{!2961, !2962}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2959, file: !2942, line: 84, baseType: !298, size: 128)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2959, file: !2942, line: 85, baseType: !1308, size: 64)
!2963 = !DIDerivedType(tag: DW_TAG_member, scope: !2941, file: !2942, line: 87, baseType: !2964, size: 128, offset: 256)
!2964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2941, file: !2942, line: 87, size: 128, elements: !2965)
!2965 = !{!2966, !2967}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2964, file: !2942, line: 88, baseType: !320, size: 128)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2964, file: !2942, line: 89, baseType: !951, size: 128, align: 64)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2941, file: !2942, line: 92, baseType: !7, size: 32, offset: 384)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !2937, file: !48, line: 183, baseType: !2970, size: 128, offset: 64)
!2970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 128, elements: !1628)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2934, file: !48, line: 190, baseType: !2972, size: 256)
!2972 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2934, file: !48, line: 186, size: 256, elements: !2973)
!2973 = !{!2974, !2975, !2976}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2972, file: !48, line: 187, baseType: !7, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2972, file: !48, line: 188, baseType: !298, size: 128, offset: 64)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !2972, file: !48, line: 189, baseType: !2977, size: 64, offset: 192)
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2978, size: 64)
!2978 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !48, line: 62, baseType: !2979)
!2979 = !DISubroutineType(types: !2980)
!2980 = !{null, !2901, !2737}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !2902, file: !48, line: 193, baseType: !2695, size: 64, offset: 1280)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !2902, file: !48, line: 194, baseType: !1927, size: 64, offset: 1344)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !2902, file: !48, line: 200, baseType: !197, size: 64, offset: 1408)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !2902, file: !48, line: 202, baseType: !197, size: 64, offset: 1472)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !2902, file: !48, line: 212, baseType: !180, size: 16, offset: 1536)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !2902, file: !48, line: 218, baseType: !180, size: 16, offset: 1552)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !2902, file: !48, line: 221, baseType: !180, size: 16, offset: 1568)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !2902, file: !48, line: 229, baseType: !180, size: 16, offset: 1584)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2902, file: !48, line: 230, baseType: !180, size: 16, offset: 1600)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2902, file: !48, line: 232, baseType: !47, size: 32, offset: 1632)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2902, file: !48, line: 233, baseType: !342, size: 32, offset: 1664)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2902, file: !48, line: 235, baseType: !7, size: 32, offset: 1696)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2902, file: !48, line: 236, baseType: !168, size: 64, offset: 1728)
!2994 = !DIDerivedType(tag: DW_TAG_member, scope: !2902, file: !48, line: 238, baseType: !2995, size: 256, offset: 1792)
!2995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2902, file: !48, line: 238, size: 256, elements: !2996)
!2996 = !{!2997, !3026}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !2995, file: !48, line: 239, baseType: !2998, size: 256)
!2998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !2999, line: 23, size: 256, elements: !3000)
!2999 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!3000 = !{!3001, !3023, !3025}
!3001 = !DIDerivedType(tag: DW_TAG_member, scope: !2998, file: !2999, line: 24, baseType: !3002, size: 128)
!3002 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2998, file: !2999, line: 24, size: 128, elements: !3003)
!3003 = !{!3004, !3016}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3002, file: !2999, line: 25, baseType: !3005, size: 128)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !3006, line: 58, size: 128, elements: !3007)
!3006 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!3007 = !{!3008, !3009, !3014, !3015}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3005, file: !3006, line: 59, baseType: !945, size: 64)
!3009 = !DIDerivedType(tag: DW_TAG_member, scope: !3005, file: !3006, line: 60, baseType: !3010, size: 32, offset: 64)
!3010 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3005, file: !3006, line: 60, size: 32, elements: !3011)
!3011 = !{!3012, !3013}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !3010, file: !3006, line: 61, baseType: !7, size: 32)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !3010, file: !3006, line: 62, baseType: !347, size: 32)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3005, file: !3006, line: 65, baseType: !999, size: 16, offset: 96)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3005, file: !3006, line: 65, baseType: !999, size: 16, offset: 112)
!3016 = !DIDerivedType(tag: DW_TAG_member, scope: !3002, file: !2999, line: 26, baseType: !3017, size: 128)
!3017 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3002, file: !2999, line: 26, size: 128, elements: !3018)
!3018 = !{!3019, !3020, !3021, !3022}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !3017, file: !2999, line: 27, baseType: !945, size: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3017, file: !2999, line: 28, baseType: !7, size: 32, offset: 64)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3017, file: !2999, line: 30, baseType: !999, size: 16, offset: 96)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !3017, file: !2999, line: 30, baseType: !999, size: 16, offset: 112)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2998, file: !2999, line: 34, baseType: !3024, size: 64, offset: 128)
!3024 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !2999, line: 17, baseType: !2104)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2998, file: !2999, line: 35, baseType: !183, size: 64, offset: 192)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !2995, file: !48, line: 240, baseType: !197, size: 64)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !2902, file: !48, line: 246, baseType: !2977, size: 64, offset: 2048)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !2902, file: !48, line: 247, baseType: !183, size: 64, offset: 2112)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !2898, file: !48, line: 401, baseType: !3030, size: 64, offset: 64)
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 64)
!3031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !54, line: 101, size: 4992, elements: !3032)
!3032 = !{!3033, !3145, !3146, !3147, !3148, !3149}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3031, file: !54, line: 103, baseType: !3034, size: 64)
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 64)
!3035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !54, line: 66, size: 2240, elements: !3036)
!3036 = !{!3037, !3038, !3120, !3121, !3122, !3135, !3136, !3137, !3139, !3140, !3144}
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !3035, file: !54, line: 69, baseType: !1308, size: 64)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3035, file: !54, line: 72, baseType: !3039, size: 1408, offset: 64)
!3039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !54, line: 29, size: 1408, elements: !3040)
!3040 = !{!3041, !3045, !3049, !3053, !3057, !3061, !3065, !3069, !3074, !3078, !3082, !3088, !3092, !3093, !3097, !3101, !3105, !3109, !3110, !3114, !3115, !3119}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !3039, file: !54, line: 30, baseType: !3042, size: 64)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 64)
!3043 = !DISubroutineType(types: !3044)
!3044 = !{!74, !2897, !3034}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !3039, file: !54, line: 31, baseType: !3046, size: 64, offset: 64)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3047 = !DISubroutineType(types: !3048)
!3048 = !{null, !3030}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !3039, file: !54, line: 32, baseType: !3050, size: 64, offset: 128)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = !DISubroutineType(types: !3052)
!3052 = !{!74, !2909, !7}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !3039, file: !54, line: 33, baseType: !3054, size: 64, offset: 192)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 64)
!3055 = !DISubroutineType(types: !3056)
!3056 = !{null, !2909, !7}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !3039, file: !54, line: 34, baseType: !3058, size: 64, offset: 256)
!3058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3059, size: 64)
!3059 = !DISubroutineType(types: !3060)
!3060 = !{null, !2909}
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !3039, file: !54, line: 36, baseType: !3062, size: 64, offset: 320)
!3062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 64)
!3063 = !DISubroutineType(types: !3064)
!3064 = !{!754, !2897, !2901, !2727}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !3039, file: !54, line: 37, baseType: !3066, size: 64, offset: 384)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{!754, !2909, !2727, !7}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !3039, file: !54, line: 38, baseType: !3070, size: 64, offset: 448)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{!74, !2897, !3073, !2727}
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !3039, file: !54, line: 39, baseType: !3075, size: 64, offset: 512)
!3075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 64)
!3076 = !DISubroutineType(types: !3077)
!3077 = !{null, !2897, !2901, !53}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !3039, file: !54, line: 40, baseType: !3079, size: 64, offset: 576)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{null, !2897, !2901, !2901}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !3039, file: !54, line: 41, baseType: !3083, size: 64, offset: 640)
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 64)
!3084 = !DISubroutineType(types: !3085)
!3085 = !{null, !7, !3086}
!3086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3087, size: 64)
!3087 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !54, line: 26, flags: DIFlagFwdDecl)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !3039, file: !54, line: 42, baseType: !3089, size: 64, offset: 704)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 64)
!3090 = !DISubroutineType(types: !3091)
!3091 = !{null, !2901}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !3039, file: !54, line: 43, baseType: !3089, size: 64, offset: 768)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !3039, file: !54, line: 44, baseType: !3094, size: 64, offset: 832)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 64)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{null, !2909, !301, !754}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !3039, file: !54, line: 45, baseType: !3098, size: 64, offset: 896)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3099, size: 64)
!3099 = !DISubroutineType(types: !3100)
!3100 = !{!2901, !2909}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !3039, file: !54, line: 46, baseType: !3102, size: 64, offset: 960)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = !DISubroutineType(types: !3104)
!3104 = !{!754, !2909}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !3039, file: !54, line: 47, baseType: !3106, size: 64, offset: 1024)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 64)
!3107 = !DISubroutineType(types: !3108)
!3108 = !{null, !2901, !197}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !3039, file: !54, line: 48, baseType: !3089, size: 64, offset: 1088)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !3039, file: !54, line: 49, baseType: !3111, size: 64, offset: 1152)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = !DISubroutineType(types: !3113)
!3113 = !{!2901, !2897, !2901}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !3039, file: !54, line: 50, baseType: !3111, size: 64, offset: 1216)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !3039, file: !54, line: 51, baseType: !3116, size: 64, offset: 1280)
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 64)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{null, !2940}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !3039, file: !54, line: 52, baseType: !3116, size: 64, offset: 1344)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !3035, file: !54, line: 74, baseType: !288, size: 64, offset: 1472)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !3035, file: !54, line: 75, baseType: !288, size: 64, offset: 1536)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !3035, file: !54, line: 76, baseType: !3123, size: 64, offset: 1600)
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3124, size: 64)
!3124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !54, line: 57, size: 256, elements: !3125)
!3125 = !{!3126, !3127, !3131}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3124, file: !54, line: 58, baseType: !2031, size: 128)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3124, file: !54, line: 59, baseType: !3128, size: 64, offset: 128)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 64)
!3129 = !DISubroutineType(types: !3130)
!3130 = !{!976, !3030, !184}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3124, file: !54, line: 60, baseType: !3132, size: 64, offset: 192)
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 64)
!3133 = !DISubroutineType(types: !3134)
!3134 = !{!976, !3030, !281, !288}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !3035, file: !54, line: 77, baseType: !281, size: 64, offset: 1664)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !3035, file: !54, line: 78, baseType: !281, size: 64, offset: 1728)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !3035, file: !54, line: 79, baseType: !3138, size: 32, offset: 1792)
!3138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !3035, file: !54, line: 80, baseType: !308, size: 64, offset: 1856)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !3035, file: !54, line: 87, baseType: !3141, size: 176, offset: 1920)
!3141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 176, elements: !3142)
!3142 = !{!3143}
!3143 = !DISubrange(count: 22)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3035, file: !54, line: 88, baseType: !298, size: 128, offset: 2112)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !3031, file: !54, line: 104, baseType: !183, size: 64, offset: 64)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3031, file: !54, line: 105, baseType: !1963, size: 512, offset: 128)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !3031, file: !54, line: 106, baseType: !901, size: 192, offset: 640)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !3031, file: !54, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3031, file: !54, line: 108, baseType: !3150, size: 4096, offset: 896)
!3150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !803, size: 4096, elements: !2004)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !2898, file: !48, line: 403, baseType: !1939, size: 128, offset: 128)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2898, file: !48, line: 405, baseType: !3153, size: 64, offset: 256)
!3153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3154, size: 64)
!3154 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !48, line: 43, flags: DIFlagFwdDecl)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !2898, file: !48, line: 406, baseType: !3156, size: 64, offset: 320)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !48, line: 42, flags: DIFlagFwdDecl)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !2898, file: !48, line: 408, baseType: !3159, size: 64, offset: 384)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3161)
!3161 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !48, line: 408, flags: DIFlagFwdDecl)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !2898, file: !48, line: 411, baseType: !2906, size: 64, offset: 448)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !2898, file: !48, line: 413, baseType: !7, size: 32, offset: 512)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !2898, file: !48, line: 416, baseType: !3165, size: 64, offset: 576)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 64)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !2898, file: !48, line: 417, baseType: !7, size: 32, offset: 640)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2898, file: !48, line: 419, baseType: !3168, size: 64, offset: 704)
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3169, size: 64)
!3169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !36, line: 165, size: 4672, elements: !3170)
!3170 = !{!3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3227, !3228, !3229, !3230, !3232, !3233}
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3169, file: !36, line: 166, baseType: !197, size: 64)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !3169, file: !36, line: 167, baseType: !371, size: 192, align: 64, offset: 64)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !3169, file: !36, line: 168, baseType: !298, size: 128, offset: 256)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3169, file: !36, line: 169, baseType: !168, size: 64, offset: 384)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !3169, file: !36, line: 170, baseType: !168, size: 64, offset: 448)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3169, file: !36, line: 172, baseType: !1287, size: 32, offset: 512)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !3169, file: !36, line: 173, baseType: !7, size: 32, offset: 544)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !3169, file: !36, line: 174, baseType: !7, size: 32, offset: 576)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !3169, file: !36, line: 175, baseType: !7, size: 32, offset: 608)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !3169, file: !36, line: 175, baseType: !7, size: 32, offset: 640)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !3169, file: !36, line: 181, baseType: !905, size: 64, offset: 704)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !3169, file: !36, line: 183, baseType: !3183, size: 2688, offset: 768)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !36, line: 107, size: 2688, elements: !3184)
!3184 = !{!3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3214, !3215, !3216, !3217, !3218, !3225, !3226}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !3183, file: !36, line: 108, baseType: !3168, size: 64)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3183, file: !36, line: 110, baseType: !168, size: 64, offset: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !3183, file: !36, line: 111, baseType: !168, size: 64, offset: 128)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !3183, file: !36, line: 113, baseType: !298, size: 128, offset: 192)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !3183, file: !36, line: 114, baseType: !298, size: 128, offset: 320)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !3183, file: !36, line: 115, baseType: !298, size: 128, offset: 448)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !3183, file: !36, line: 116, baseType: !298, size: 128, offset: 576)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3183, file: !36, line: 117, baseType: !210, offset: 704)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !3183, file: !36, line: 119, baseType: !3194, size: 256, offset: 704)
!3194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3195, size: 256, elements: !176)
!3195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3196, line: 97, size: 64, elements: !3197)
!3196 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3197 = !{!3198}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3195, file: !3196, line: 98, baseType: !408, size: 64)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !3183, file: !36, line: 121, baseType: !168, size: 64, offset: 960)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !3183, file: !36, line: 123, baseType: !168, size: 64, offset: 1024)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !3183, file: !36, line: 124, baseType: !168, size: 64, offset: 1088)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !3183, file: !36, line: 125, baseType: !168, size: 64, offset: 1152)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !3183, file: !36, line: 126, baseType: !168, size: 64, offset: 1216)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !3183, file: !36, line: 127, baseType: !168, size: 64, offset: 1280)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !3183, file: !36, line: 135, baseType: !168, size: 64, offset: 1344)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !3183, file: !36, line: 136, baseType: !168, size: 64, offset: 1408)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !3183, file: !36, line: 138, baseType: !3208, size: 128, offset: 1472)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !3209, line: 76, size: 128, elements: !3210)
!3209 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!3210 = !{!3211, !3212, !3213}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3208, file: !3209, line: 78, baseType: !3195, size: 64)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !3208, file: !3209, line: 80, baseType: !7, size: 32, offset: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3208, file: !3209, line: 81, baseType: !443, offset: 96)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !3183, file: !36, line: 139, baseType: !74, size: 32, offset: 1600)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !3183, file: !36, line: 140, baseType: !35, size: 32, offset: 1632)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !3183, file: !36, line: 142, baseType: !210, offset: 1664)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !3183, file: !36, line: 143, baseType: !298, size: 128, offset: 1664)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !3183, file: !36, line: 144, baseType: !3219, size: 704, offset: 1792)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1481, line: 115, size: 704, elements: !3220)
!3220 = !{!3221, !3222, !3223, !3224}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3219, file: !1481, line: 116, baseType: !1480, size: 256)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3219, file: !1481, line: 117, baseType: !2416, size: 320, offset: 256)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !3219, file: !1481, line: 120, baseType: !2690, size: 64, offset: 576)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3219, file: !1481, line: 121, baseType: !74, size: 32, offset: 640)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !3183, file: !36, line: 146, baseType: !168, size: 64, offset: 2496)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !3183, file: !36, line: 148, baseType: !298, size: 128, offset: 2560)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !3169, file: !36, line: 184, baseType: !298, size: 128, offset: 3456)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !3169, file: !36, line: 190, baseType: !1064, size: 128, offset: 3584)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3169, file: !36, line: 192, baseType: !2243, size: 64, offset: 3712)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3169, file: !36, line: 193, baseType: !3231, size: 512, offset: 3776)
!3231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 512, elements: !2004)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3169, file: !36, line: 194, baseType: !2243, size: 64, offset: 4288)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !3169, file: !36, line: 196, baseType: !2416, size: 320, offset: 4352)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !2898, file: !48, line: 425, baseType: !183, size: 64, offset: 768)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !2898, file: !48, line: 430, baseType: !168, size: 64, offset: 832)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !2898, file: !48, line: 436, baseType: !347, size: 32, offset: 896)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2898, file: !48, line: 442, baseType: !74, size: 32, offset: 928)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !2898, file: !48, line: 447, baseType: !187, size: 32, offset: 960)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !2898, file: !48, line: 449, baseType: !210, offset: 992)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !2898, file: !48, line: 454, baseType: !1963, size: 512, offset: 1024)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !2898, file: !48, line: 459, baseType: !1969, size: 64, offset: 1536)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !2898, file: !48, line: 462, baseType: !3243, size: 128, offset: 1600)
!3243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !1929, line: 159, size: 128, elements: !3244)
!3244 = !{!3245, !3274, !3275, !3276, !3277}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !3243, file: !1929, line: 160, baseType: !3246, size: 64)
!3246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3247, size: 64)
!3247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3248)
!3248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !48, line: 1664, size: 320, elements: !3249)
!3249 = !{!3250, !3264, !3265, !3268, !3273}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !3248, file: !48, line: 1665, baseType: !3251, size: 64)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !48, line: 1660, baseType: !3253)
!3253 = !DISubroutineType(types: !3254)
!3254 = !{!2737, !3255}
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 64)
!3256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !48, line: 1651, size: 320, elements: !3257)
!3257 = !{!3258, !3259, !3260, !3261, !3262, !3263}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !3256, file: !48, line: 1652, baseType: !183, size: 64)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !3256, file: !48, line: 1653, baseType: !183, size: 64, offset: 64)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !3256, file: !48, line: 1654, baseType: !1932, size: 64, offset: 128)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !3256, file: !48, line: 1655, baseType: !7, size: 32, offset: 192)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3256, file: !48, line: 1656, baseType: !180, size: 16, offset: 224)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3256, file: !48, line: 1657, baseType: !281, size: 64, offset: 256)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !3248, file: !48, line: 1666, baseType: !3251, size: 64, offset: 64)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !3248, file: !48, line: 1667, baseType: !3266, size: 64, offset: 128)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !48, line: 1661, baseType: !3090)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !3248, file: !48, line: 1668, baseType: !3269, size: 64, offset: 192)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !48, line: 1662, baseType: !3271)
!3271 = !DISubroutineType(types: !3272)
!3272 = !{null, !2901, !7}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3248, file: !48, line: 1669, baseType: !281, size: 64, offset: 256)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3243, file: !1929, line: 161, baseType: !182, size: 8, offset: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !3243, file: !1929, line: 162, baseType: !182, size: 8, offset: 72)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !3243, file: !1929, line: 163, baseType: !182, size: 8, offset: 80)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !3243, file: !1929, line: 164, baseType: !182, size: 8, offset: 88)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2898, file: !48, line: 466, baseType: !2243, size: 64, offset: 1728)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !2898, file: !48, line: 467, baseType: !60, size: 32, offset: 1792)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !2898, file: !48, line: 468, baseType: !7, size: 32, offset: 1824)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !2898, file: !48, line: 474, baseType: !168, size: 64, offset: 1856)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !2898, file: !48, line: 476, baseType: !7, size: 32, offset: 1920)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !2898, file: !48, line: 477, baseType: !7, size: 32, offset: 1952)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !2898, file: !48, line: 484, baseType: !7, size: 32, offset: 1984)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !2898, file: !48, line: 485, baseType: !74, size: 32, offset: 2016)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !2898, file: !48, line: 487, baseType: !3287, size: 64, offset: 2048)
!3287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3288, size: 64)
!3288 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !48, line: 44, flags: DIFlagFwdDecl)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !2898, file: !48, line: 488, baseType: !3290, size: 5120, offset: 2112)
!3290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3291, size: 5120, elements: !206)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !1912, line: 540, size: 320, elements: !3292)
!3292 = !{!3293, !3294, !3295, !3296, !3297}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !3291, file: !1912, line: 541, baseType: !197, size: 64)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3291, file: !1912, line: 542, baseType: !197, size: 64, offset: 64)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3291, file: !1912, line: 543, baseType: !197, size: 64, offset: 128)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !3291, file: !1912, line: 544, baseType: !205, size: 32, offset: 192)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3291, file: !1912, line: 545, baseType: !197, size: 64, offset: 256)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2898, file: !48, line: 490, baseType: !2416, size: 320, offset: 7232)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !2898, file: !48, line: 491, baseType: !1480, size: 256, offset: 7552)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !2898, file: !48, line: 493, baseType: !347, size: 32, offset: 7808)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2898, file: !48, line: 495, baseType: !298, size: 128, offset: 7872)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !2898, file: !48, line: 502, baseType: !3303, size: 896, offset: 8000)
!3303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !48, line: 321, size: 896, elements: !3304)
!3304 = !{!3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !3303, file: !48, line: 322, baseType: !168, size: 64)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !3303, file: !48, line: 323, baseType: !168, size: 64, offset: 64)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !3303, file: !48, line: 324, baseType: !168, size: 64, offset: 128)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !3303, file: !48, line: 326, baseType: !7, size: 32, offset: 192)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !3303, file: !48, line: 327, baseType: !7, size: 32, offset: 224)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !3303, file: !48, line: 328, baseType: !7, size: 32, offset: 256)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !3303, file: !48, line: 329, baseType: !7, size: 32, offset: 288)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3303, file: !48, line: 330, baseType: !7, size: 32, offset: 320)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !3303, file: !48, line: 331, baseType: !7, size: 32, offset: 352)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !3303, file: !48, line: 332, baseType: !7, size: 32, offset: 384)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !3303, file: !48, line: 333, baseType: !7, size: 32, offset: 416)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !3303, file: !48, line: 334, baseType: !7, size: 32, offset: 448)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !3303, file: !48, line: 335, baseType: !7, size: 32, offset: 480)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !3303, file: !48, line: 336, baseType: !7, size: 32, offset: 512)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !3303, file: !48, line: 337, baseType: !7, size: 32, offset: 544)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !3303, file: !48, line: 338, baseType: !7, size: 32, offset: 576)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !3303, file: !48, line: 339, baseType: !7, size: 32, offset: 608)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !3303, file: !48, line: 340, baseType: !7, size: 32, offset: 640)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !3303, file: !48, line: 341, baseType: !7, size: 32, offset: 672)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !3303, file: !48, line: 342, baseType: !7, size: 32, offset: 704)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !3303, file: !48, line: 344, baseType: !180, size: 16, offset: 736)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !3303, file: !48, line: 345, baseType: !180, size: 16, offset: 752)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !3303, file: !48, line: 346, baseType: !180, size: 16, offset: 768)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !3303, file: !48, line: 348, baseType: !182, size: 8, offset: 784)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !3303, file: !48, line: 349, baseType: !182, size: 8, offset: 792)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !3303, file: !48, line: 350, baseType: !182, size: 8, offset: 800)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !3303, file: !48, line: 351, baseType: !67, size: 32, offset: 832)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !2898, file: !48, line: 504, baseType: !7, size: 32, offset: 8896)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !2898, file: !48, line: 534, baseType: !7, size: 32, offset: 8928)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !2898, file: !48, line: 535, baseType: !7, size: 32, offset: 8960)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2898, file: !48, line: 536, baseType: !74, size: 32, offset: 8992)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !2898, file: !48, line: 537, baseType: !901, size: 192, offset: 9024)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !2898, file: !48, line: 544, baseType: !3338, size: 64, offset: 9216)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !48, line: 40, flags: DIFlagFwdDecl)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !2898, file: !48, line: 546, baseType: !298, size: 128, offset: 9280)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !2898, file: !48, line: 547, baseType: !210, offset: 9408)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !2898, file: !48, line: 548, baseType: !3219, size: 704, offset: 9408)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !2898, file: !48, line: 550, baseType: !901, size: 192, offset: 10112)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !2898, file: !48, line: 551, baseType: !901, size: 192, offset: 10304)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !2898, file: !48, line: 557, baseType: !298, size: 128, offset: 10496)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !2898, file: !48, line: 558, baseType: !210, offset: 10624)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !2898, file: !48, line: 560, baseType: !74, size: 32, offset: 10624)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !2898, file: !48, line: 563, baseType: !3349, size: 256, offset: 10688)
!3349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !3350, line: 18, size: 256, elements: !3351)
!3350 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3351 = !{!3352, !3353, !3354, !3355}
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !3349, file: !3350, line: 19, baseType: !2243, size: 64)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3349, file: !3350, line: 20, baseType: !74, size: 32, offset: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3349, file: !3350, line: 21, baseType: !2897, size: 64, offset: 128)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3349, file: !3350, line: 22, baseType: !3356, size: 64, offset: 192)
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 64)
!3357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3358)
!3358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !3350, line: 10, size: 256, elements: !3359)
!3359 = !{!3360, !3401, !3405, !3409}
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !3358, file: !3350, line: 11, baseType: !3361, size: 64)
!3361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3362, size: 64)
!3362 = !DISubroutineType(types: !3363)
!3363 = !{!74, !3364}
!3364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3365, size: 64)
!3365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !3366, line: 22, size: 1280, elements: !3367)
!3366 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!3367 = !{!3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3396, !3397, !3398, !3399, !3400}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !3365, file: !3366, line: 23, baseType: !1368, size: 32)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3365, file: !3366, line: 24, baseType: !174, size: 32, offset: 32)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !3365, file: !3366, line: 25, baseType: !174, size: 32, offset: 64)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !3365, file: !3366, line: 28, baseType: !174, size: 32, offset: 96)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3365, file: !3366, line: 29, baseType: !199, size: 64, offset: 128)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !3365, file: !3366, line: 30, baseType: !199, size: 64, offset: 192)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !3365, file: !3366, line: 31, baseType: !174, size: 32, offset: 256)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !3365, file: !3366, line: 32, baseType: !174, size: 32, offset: 288)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !3365, file: !3366, line: 33, baseType: !174, size: 32, offset: 320)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !3365, file: !3366, line: 34, baseType: !174, size: 32, offset: 352)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !3365, file: !3366, line: 35, baseType: !199, size: 64, offset: 384)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !3365, file: !3366, line: 38, baseType: !174, size: 32, offset: 448)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !3365, file: !3366, line: 40, baseType: !174, size: 32, offset: 480)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !3365, file: !3366, line: 41, baseType: !174, size: 32, offset: 512)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !3365, file: !3366, line: 42, baseType: !174, size: 32, offset: 544)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !3365, file: !3366, line: 43, baseType: !199, size: 64, offset: 576)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !3365, file: !3366, line: 44, baseType: !199, size: 64, offset: 640)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3365, file: !3366, line: 46, baseType: !174, size: 32, offset: 704)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3365, file: !3366, line: 47, baseType: !174, size: 32, offset: 736)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !3365, file: !3366, line: 48, baseType: !199, size: 64, offset: 768)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !3365, file: !3366, line: 49, baseType: !174, size: 32, offset: 832)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !3365, file: !3366, line: 51, baseType: !174, size: 32, offset: 864)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !3365, file: !3366, line: 52, baseType: !174, size: 32, offset: 896)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !3365, file: !3366, line: 53, baseType: !174, size: 32, offset: 928)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !3365, file: !3366, line: 54, baseType: !174, size: 32, offset: 960)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3365, file: !3366, line: 55, baseType: !174, size: 32, offset: 992)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3365, file: !3366, line: 56, baseType: !174, size: 32, offset: 1024)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !3365, file: !3366, line: 57, baseType: !174, size: 32, offset: 1056)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !3365, file: !3366, line: 58, baseType: !1368, size: 32, offset: 1088)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !3365, file: !3366, line: 59, baseType: !1368, size: 32, offset: 1120)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !3365, file: !3366, line: 60, baseType: !199, size: 64, offset: 1152)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !3365, file: !3366, line: 61, baseType: !174, size: 32, offset: 1216)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3365, file: !3366, line: 63, baseType: !174, size: 32, offset: 1248)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !3358, file: !3350, line: 12, baseType: !3402, size: 64, offset: 64)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{!74, !2901, !3364, !1257}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !3358, file: !3350, line: 14, baseType: !3406, size: 64, offset: 128)
!3406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 64)
!3407 = !DISubroutineType(types: !3408)
!3408 = !{!74, !2901, !3364}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !3358, file: !3350, line: 15, baseType: !3089, size: 64, offset: 192)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2898, file: !48, line: 570, baseType: !951, size: 128, align: 64, offset: 10944)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !2898, file: !48, line: 571, baseType: !1064, size: 128, offset: 11072)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !2898, file: !48, line: 576, baseType: !901, size: 192, offset: 11200)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !2898, file: !48, line: 578, baseType: !3414, size: 64, offset: 11392)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !48, line: 578, flags: DIFlagFwdDecl)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !2898, file: !48, line: 579, baseType: !298, size: 128, offset: 11456)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !2898, file: !48, line: 580, baseType: !2785, size: 2368, offset: 11584)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !2898, file: !48, line: 582, baseType: !641, size: 64, offset: 13952)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !2898, file: !48, line: 589, baseType: !754, size: 8, offset: 14016)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !2898, file: !48, line: 591, baseType: !288, size: 64, offset: 14080)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !2898, file: !48, line: 594, baseType: !3422, size: 320, offset: 14144)
!3422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 320, elements: !1331)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !2696, file: !1929, line: 191, baseType: !183, size: 64, offset: 7168)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2696, file: !1929, line: 193, baseType: !74, size: 32, offset: 7232)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2696, file: !1929, line: 194, baseType: !168, size: 64, offset: 7296)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !2696, file: !1929, line: 196, baseType: !1375, size: 256, offset: 7360)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !2696, file: !1929, line: 197, baseType: !1969, size: 64, offset: 7616)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !2696, file: !1929, line: 199, baseType: !3429, size: 64, offset: 7680)
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!3430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !3, line: 1109, size: 192, elements: !3431)
!3431 = !{!3432, !3433, !3434}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3430, file: !3, line: 1110, baseType: !233, size: 64)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "last_delta", scope: !3430, file: !3, line: 1111, baseType: !186, size: 64, offset: 64)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "last_delta2", scope: !3430, file: !3, line: 1111, baseType: !186, size: 64, offset: 128)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !2696, file: !1929, line: 200, baseType: !347, size: 32, offset: 7744)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !2696, file: !1929, line: 201, baseType: !3437, size: 64, offset: 7808)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !1929, line: 156, flags: DIFlagFwdDecl)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !2696, file: !1929, line: 203, baseType: !1963, size: 512, offset: 7872)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !2696, file: !1929, line: 208, baseType: !74, size: 32, offset: 8384)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2696, file: !1929, line: 209, baseType: !3442, size: 64, offset: 8448)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !1929, line: 157, flags: DIFlagFwdDecl)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !2696, file: !1929, line: 210, baseType: !3445, offset: 8512)
!3445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !808, line: 192, elements: !224)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !1911, file: !1912, line: 43, baseType: !3168, size: 64, offset: 1024)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !1911, file: !1912, line: 46, baseType: !74, size: 32, offset: 1088)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !1911, file: !1912, line: 48, baseType: !901, size: 192, offset: 1152)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !764, file: !96, line: 1452, baseType: !3168, size: 64, offset: 1536)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !764, file: !96, line: 1453, baseType: !3451, size: 64, offset: 1600)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !96, line: 1453, flags: DIFlagFwdDecl)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !764, file: !96, line: 1454, baseType: !320, size: 128, offset: 1664)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !764, file: !96, line: 1455, baseType: !7, size: 32, offset: 1792)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !764, file: !96, line: 1456, baseType: !3456, size: 2432, offset: 1856)
!3456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !90, line: 518, size: 2432, elements: !3457)
!3457 = !{!3458, !3459, !3460, !3462, !3494}
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3456, file: !90, line: 519, baseType: !7, size: 32)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3456, file: !90, line: 520, baseType: !1375, size: 256, offset: 64)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3456, file: !90, line: 521, baseType: !3461, size: 192, offset: 320)
!3461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 192, elements: !813)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3456, file: !90, line: 522, baseType: !3463, size: 1728, offset: 512)
!3463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3464, size: 1728, elements: !813)
!3464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !90, line: 222, size: 576, elements: !3465)
!3465 = !{!3466, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3464, file: !90, line: 223, baseType: !3467, size: 64)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 64)
!3468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !90, line: 443, size: 256, elements: !3469)
!3469 = !{!3470, !3471, !3484, !3485}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3468, file: !90, line: 444, baseType: !74, size: 32)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3468, file: !90, line: 445, baseType: !3472, size: 64, offset: 64)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3474)
!3474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !90, line: 310, size: 512, elements: !3475)
!3475 = !{!3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483}
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3474, file: !90, line: 311, baseType: !863, size: 64)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3474, file: !90, line: 312, baseType: !863, size: 64, offset: 64)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3474, file: !90, line: 313, baseType: !863, size: 64, offset: 128)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3474, file: !90, line: 314, baseType: !863, size: 64, offset: 192)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3474, file: !90, line: 315, baseType: !1729, size: 64, offset: 256)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3474, file: !90, line: 316, baseType: !1729, size: 64, offset: 320)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3474, file: !90, line: 317, baseType: !1729, size: 64, offset: 384)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3474, file: !90, line: 318, baseType: !1801, size: 64, offset: 448)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3468, file: !90, line: 446, baseType: !308, size: 64, offset: 128)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3468, file: !90, line: 447, baseType: !3467, size: 64, offset: 192)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3464, file: !90, line: 224, baseType: !74, size: 32, offset: 64)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3464, file: !90, line: 226, baseType: !298, size: 128, offset: 128)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3464, file: !90, line: 227, baseType: !168, size: 64, offset: 256)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3464, file: !90, line: 228, baseType: !7, size: 32, offset: 320)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3464, file: !90, line: 229, baseType: !7, size: 32, offset: 352)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3464, file: !90, line: 230, baseType: !1765, size: 64, offset: 384)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3464, file: !90, line: 231, baseType: !1765, size: 64, offset: 448)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3464, file: !90, line: 232, baseType: !183, size: 64, offset: 512)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3456, file: !90, line: 523, baseType: !3495, size: 192, offset: 2240)
!3495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3472, size: 192, elements: !813)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !764, file: !96, line: 1458, baseType: !3497, size: 2112, offset: 4288)
!3497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !96, line: 1410, size: 2112, elements: !3498)
!3498 = !{!3499, !3500, !3501}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3497, file: !96, line: 1411, baseType: !74, size: 32)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3497, file: !96, line: 1412, baseType: !1064, size: 128, offset: 64)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3497, file: !96, line: 1413, baseType: !3502, size: 1920, offset: 192)
!3502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3503, size: 1920, elements: !813)
!3503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3504, line: 12, size: 640, elements: !3505)
!3504 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3505 = !{!3506, !3514, !3516, !3521, !3522}
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3503, file: !3504, line: 13, baseType: !3507, size: 320)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3508, line: 17, size: 320, elements: !3509)
!3508 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3509 = !{!3510, !3511, !3512, !3513}
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3507, file: !3508, line: 18, baseType: !74, size: 32)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3507, file: !3508, line: 19, baseType: !74, size: 32, offset: 32)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3507, file: !3508, line: 20, baseType: !1064, size: 128, offset: 64)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3507, file: !3508, line: 22, baseType: !951, size: 128, align: 64, offset: 192)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3503, file: !3504, line: 14, baseType: !3515, size: 64, offset: 320)
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3503, file: !3504, line: 15, baseType: !3517, size: 64, offset: 384)
!3517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3518, line: 16, size: 64, elements: !3519)
!3518 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3519 = !{!3520}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3517, file: !3518, line: 17, baseType: !329, size: 64)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3503, file: !3504, line: 16, baseType: !1064, size: 128, offset: 448)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3503, file: !3504, line: 17, baseType: !347, size: 32, offset: 576)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !764, file: !96, line: 1465, baseType: !183, size: 64, offset: 6400)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !764, file: !96, line: 1468, baseType: !205, size: 32, offset: 6464)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !764, file: !96, line: 1470, baseType: !1390, size: 64, offset: 6528)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !764, file: !96, line: 1471, baseType: !1390, size: 64, offset: 6592)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !764, file: !96, line: 1473, baseType: !174, size: 32, offset: 6656)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !764, file: !96, line: 1474, baseType: !3529, size: 64, offset: 6720)
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3530, size: 64)
!3530 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !96, line: 603, flags: DIFlagFwdDecl)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !764, file: !96, line: 1477, baseType: !2702, size: 256, offset: 6784)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !764, file: !96, line: 1478, baseType: !3533, size: 128, offset: 7040)
!3533 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3534, line: 18, baseType: !3535)
!3534 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3534, line: 16, size: 128, elements: !3536)
!3536 = !{!3537}
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3535, file: !3534, line: 17, baseType: !3538, size: 128)
!3538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !206)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !764, file: !96, line: 1480, baseType: !7, size: 32, offset: 7168)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !764, file: !96, line: 1481, baseType: !1257, size: 32, offset: 7200)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !764, file: !96, line: 1487, baseType: !901, size: 192, offset: 7232)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !764, file: !96, line: 1493, baseType: !281, size: 64, offset: 7424)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !764, file: !96, line: 1495, baseType: !693, size: 64, offset: 7488)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !764, file: !96, line: 1500, baseType: !74, size: 32, offset: 7552)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !764, file: !96, line: 1502, baseType: !3546, size: 448, offset: 7616)
!3546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !1713, line: 60, size: 448, elements: !3547)
!3547 = !{!3548, !3553, !3554, !3555, !3556, !3557, !3558}
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3546, file: !1713, line: 61, baseType: !3549, size: 64)
!3549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3550, size: 64)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{!168, !3552, !1711}
!3552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3546, size: 64)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3546, file: !1713, line: 63, baseType: !3549, size: 64, offset: 64)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3546, file: !1713, line: 66, baseType: !186, size: 64, offset: 128)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3546, file: !1713, line: 67, baseType: !74, size: 32, offset: 192)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3546, file: !1713, line: 68, baseType: !7, size: 32, offset: 224)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3546, file: !1713, line: 71, baseType: !298, size: 128, offset: 256)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3546, file: !1713, line: 77, baseType: !3559, size: 64, offset: 384)
!3559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !764, file: !96, line: 1505, baseType: !905, size: 64, offset: 8064)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !764, file: !96, line: 1508, baseType: !905, size: 64, offset: 8128)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !764, file: !96, line: 1511, baseType: !74, size: 32, offset: 8192)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !764, file: !96, line: 1514, baseType: !1696, size: 32, offset: 8224)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !764, file: !96, line: 1517, baseType: !2690, size: 64, offset: 8256)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !764, file: !96, line: 1518, baseType: !803, size: 64, offset: 8320)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !764, file: !96, line: 1525, baseType: !1313, size: 64, offset: 8384)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !764, file: !96, line: 1532, baseType: !3568, size: 64, offset: 8448)
!3568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3569, line: 52, size: 64, elements: !3570)
!3569 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3570 = !{!3571}
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3568, file: !3569, line: 53, baseType: !3572, size: 64)
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3573, size: 64)
!3573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3569, line: 40, size: 256, elements: !3574)
!3574 = !{!3575, !3576, !3581}
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3573, file: !3569, line: 42, baseType: !210)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3573, file: !3569, line: 44, baseType: !3577, size: 192)
!3577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3569, line: 28, size: 192, elements: !3578)
!3578 = !{!3579, !3580}
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3577, file: !3569, line: 29, baseType: !298, size: 128)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3577, file: !3569, line: 31, baseType: !186, size: 64, offset: 128)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3573, file: !3569, line: 49, baseType: !186, size: 64, offset: 192)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !764, file: !96, line: 1533, baseType: !3568, size: 64, offset: 8512)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !764, file: !96, line: 1534, baseType: !951, size: 128, align: 64, offset: 8576)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !764, file: !96, line: 1535, baseType: !1480, size: 256, offset: 8704)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !764, file: !96, line: 1537, baseType: !901, size: 192, offset: 8960)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !764, file: !96, line: 1542, baseType: !74, size: 32, offset: 9152)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !764, file: !96, line: 1545, baseType: !210, offset: 9184)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !764, file: !96, line: 1546, baseType: !298, size: 128, offset: 9216)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !764, file: !96, line: 1548, baseType: !210, offset: 9344)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !764, file: !96, line: 1549, baseType: !298, size: 128, offset: 9344)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !642, file: !643, line: 104, baseType: !168, size: 64, offset: 896)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !642, file: !643, line: 105, baseType: !183, size: 64, offset: 960)
!3593 = !DIDerivedType(tag: DW_TAG_member, scope: !642, file: !643, line: 107, baseType: !3594, size: 128, offset: 1024)
!3594 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !642, file: !643, line: 107, size: 128, elements: !3595)
!3595 = !{!3596, !3597}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3594, file: !643, line: 108, baseType: !298, size: 128)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3594, file: !643, line: 109, baseType: !1063, size: 64)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !642, file: !643, line: 111, baseType: !298, size: 128, offset: 1152)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !642, file: !643, line: 112, baseType: !298, size: 128, offset: 1280)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !642, file: !643, line: 120, baseType: !3601, size: 128, offset: 1408)
!3601 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !642, file: !643, line: 116, size: 128, elements: !3602)
!3602 = !{!3603, !3604, !3605}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3601, file: !643, line: 117, baseType: !320, size: 128)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3601, file: !643, line: 118, baseType: !652, size: 128)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3601, file: !643, line: 119, baseType: !951, size: 128, align: 64)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !635, file: !96, line: 1866, baseType: !3607, size: 64, offset: 64)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DISubroutineType(types: !3609)
!3609 = !{!281, !641, !610, !3610}
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 64)
!3611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !3612, line: 10, size: 128, elements: !3613)
!3612 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!3613 = !{!3614, !3615}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3611, file: !3612, line: 11, baseType: !2104, size: 64)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !3611, file: !3612, line: 12, baseType: !183, size: 64, offset: 64)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !635, file: !96, line: 1867, baseType: !3617, size: 64, offset: 128)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DISubroutineType(types: !3619)
!3619 = !{!74, !610, !74}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !635, file: !96, line: 1868, baseType: !3621, size: 64, offset: 192)
!3621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3622, size: 64)
!3622 = !DISubroutineType(types: !3623)
!3623 = !{!3624, !610, !74}
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !96, line: 581, flags: DIFlagFwdDecl)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !635, file: !96, line: 1870, baseType: !3627, size: 64, offset: 256)
!3627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3628, size: 64)
!3628 = !DISubroutineType(types: !3629)
!3629 = !{!74, !641, !184, !74}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !635, file: !96, line: 1872, baseType: !3631, size: 64, offset: 320)
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 64)
!3632 = !DISubroutineType(types: !3633)
!3633 = !{!74, !610, !641, !614, !754}
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !635, file: !96, line: 1873, baseType: !3635, size: 64, offset: 384)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3636 = !DISubroutineType(types: !3637)
!3637 = !{!74, !641, !610, !641}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !635, file: !96, line: 1874, baseType: !3639, size: 64, offset: 448)
!3639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3640, size: 64)
!3640 = !DISubroutineType(types: !3641)
!3641 = !{!74, !610, !641}
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !635, file: !96, line: 1875, baseType: !3643, size: 64, offset: 512)
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3644, size: 64)
!3644 = !DISubroutineType(types: !3645)
!3645 = !{!74, !610, !641, !281}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !635, file: !96, line: 1876, baseType: !3647, size: 64, offset: 576)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{!74, !610, !641, !614}
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !635, file: !96, line: 1877, baseType: !3639, size: 64, offset: 640)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !635, file: !96, line: 1878, baseType: !3652, size: 64, offset: 704)
!3652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3653, size: 64)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{!74, !610, !641, !614, !768}
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !635, file: !96, line: 1879, baseType: !3656, size: 64, offset: 768)
!3656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3657, size: 64)
!3657 = !DISubroutineType(types: !3658)
!3658 = !{!74, !610, !641, !610, !641, !7}
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !635, file: !96, line: 1881, baseType: !3660, size: 64, offset: 832)
!3660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3661, size: 64)
!3661 = !DISubroutineType(types: !3662)
!3662 = !{!74, !641, !3663}
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !96, line: 219, size: 640, elements: !3665)
!3665 = !{!3666, !3667, !3668, !3669, !3670, !3671, !3676, !3677, !3678}
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !3664, file: !96, line: 220, baseType: !7, size: 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !3664, file: !96, line: 221, baseType: !614, size: 16, offset: 32)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !3664, file: !96, line: 222, baseType: !617, size: 32, offset: 64)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !3664, file: !96, line: 223, baseType: !625, size: 32, offset: 96)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !3664, file: !96, line: 224, baseType: !773, size: 64, offset: 128)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !3664, file: !96, line: 225, baseType: !3672, size: 128, offset: 192)
!3672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1391, line: 13, size: 128, elements: !3673)
!3673 = !{!3674, !3675}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3672, file: !1391, line: 14, baseType: !1390, size: 64)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3672, file: !1391, line: 15, baseType: !186, size: 64, offset: 64)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !3664, file: !96, line: 226, baseType: !3672, size: 128, offset: 320)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !3664, file: !96, line: 227, baseType: !3672, size: 128, offset: 448)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !3664, file: !96, line: 234, baseType: !971, size: 64, offset: 576)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !635, file: !96, line: 1882, baseType: !3680, size: 64, offset: 896)
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3681, size: 64)
!3681 = !DISubroutineType(types: !3682)
!3682 = !{!74, !752, !3683, !205, !7}
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 64)
!3684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !3685, line: 22, size: 1152, elements: !3686)
!3685 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!3686 = !{!3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704}
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !3684, file: !3685, line: 23, baseType: !205, size: 32)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3684, file: !3685, line: 24, baseType: !614, size: 16, offset: 32)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !3684, file: !3685, line: 25, baseType: !7, size: 32, offset: 64)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !3684, file: !3685, line: 26, baseType: !1398, size: 32, offset: 96)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !3684, file: !3685, line: 27, baseType: !197, size: 64, offset: 128)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !3684, file: !3685, line: 28, baseType: !197, size: 64, offset: 192)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3684, file: !3685, line: 37, baseType: !197, size: 64, offset: 256)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3684, file: !3685, line: 38, baseType: !768, size: 32, offset: 320)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !3684, file: !3685, line: 39, baseType: !768, size: 32, offset: 352)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3684, file: !3685, line: 40, baseType: !617, size: 32, offset: 384)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3684, file: !3685, line: 41, baseType: !625, size: 32, offset: 416)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3684, file: !3685, line: 42, baseType: !773, size: 64, offset: 448)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !3684, file: !3685, line: 43, baseType: !3672, size: 128, offset: 512)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !3684, file: !3685, line: 44, baseType: !3672, size: 128, offset: 640)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !3684, file: !3685, line: 45, baseType: !3672, size: 128, offset: 768)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !3684, file: !3685, line: 46, baseType: !3672, size: 128, offset: 896)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3684, file: !3685, line: 47, baseType: !197, size: 64, offset: 1024)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !3684, file: !3685, line: 48, baseType: !197, size: 64, offset: 1088)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !635, file: !96, line: 1883, baseType: !3706, size: 64, offset: 960)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!3707 = !DISubroutineType(types: !3708)
!3708 = !{!976, !641, !184, !288}
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !635, file: !96, line: 1884, baseType: !3710, size: 64, offset: 1024)
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 64)
!3711 = !DISubroutineType(types: !3712)
!3712 = !{!74, !610, !3713, !197, !197}
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3714, size: 64)
!3714 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !96, line: 50, flags: DIFlagFwdDecl)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !635, file: !96, line: 1886, baseType: !3716, size: 64, offset: 1088)
!3716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{!74, !610, !3719, !74}
!3719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !635, file: !96, line: 1887, baseType: !3721, size: 64, offset: 1152)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 64)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{!74, !610, !641, !971, !7, !614}
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !635, file: !96, line: 1890, baseType: !3647, size: 64, offset: 1216)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !635, file: !96, line: 1891, baseType: !3726, size: 64, offset: 1280)
!3726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3727, size: 64)
!3727 = !DISubroutineType(types: !3728)
!3728 = !{!74, !610, !3624, !74}
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !611, file: !96, line: 623, baseType: !763, size: 64, offset: 192)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !611, file: !96, line: 624, baseType: !606, size: 64, offset: 256)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !611, file: !96, line: 631, baseType: !168, size: 64, offset: 320)
!3732 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !96, line: 639, baseType: !3733, size: 32, offset: 384)
!3733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !96, line: 639, size: 32, elements: !3734)
!3734 = !{!3735, !3736}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3733, file: !96, line: 640, baseType: !3138, size: 32)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3733, file: !96, line: 641, baseType: !7, size: 32)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !611, file: !96, line: 643, baseType: !768, size: 32, offset: 416)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !611, file: !96, line: 644, baseType: !773, size: 64, offset: 448)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !611, file: !96, line: 645, baseType: !3672, size: 128, offset: 512)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !611, file: !96, line: 646, baseType: !3672, size: 128, offset: 640)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !611, file: !96, line: 647, baseType: !3672, size: 128, offset: 768)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !611, file: !96, line: 648, baseType: !210, offset: 896)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !611, file: !96, line: 649, baseType: !180, size: 16, offset: 896)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !611, file: !96, line: 650, baseType: !226, size: 8, offset: 912)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !611, file: !96, line: 651, baseType: !226, size: 8, offset: 920)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !611, file: !96, line: 652, baseType: !1885, size: 64, offset: 960)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !611, file: !96, line: 659, baseType: !168, size: 64, offset: 1024)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !611, file: !96, line: 660, baseType: !1375, size: 256, offset: 1088)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !611, file: !96, line: 662, baseType: !168, size: 64, offset: 1344)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !611, file: !96, line: 663, baseType: !168, size: 64, offset: 1408)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !611, file: !96, line: 665, baseType: !320, size: 128, offset: 1472)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !611, file: !96, line: 666, baseType: !298, size: 128, offset: 1600)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !611, file: !96, line: 675, baseType: !298, size: 128, offset: 1728)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !611, file: !96, line: 676, baseType: !298, size: 128, offset: 1856)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !611, file: !96, line: 677, baseType: !298, size: 128, offset: 1984)
!3756 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !96, line: 678, baseType: !3757, size: 128, offset: 2112)
!3757 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !96, line: 678, size: 128, elements: !3758)
!3758 = !{!3759, !3760}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3757, file: !96, line: 679, baseType: !803, size: 64)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3757, file: !96, line: 680, baseType: !951, size: 128, align: 64)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !611, file: !96, line: 682, baseType: !907, size: 64, offset: 2240)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !611, file: !96, line: 683, baseType: !907, size: 64, offset: 2304)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !611, file: !96, line: 684, baseType: !347, size: 32, offset: 2368)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !611, file: !96, line: 685, baseType: !347, size: 32, offset: 2400)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !611, file: !96, line: 686, baseType: !347, size: 32, offset: 2432)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !611, file: !96, line: 688, baseType: !347, size: 32, offset: 2464)
!3767 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !96, line: 690, baseType: !3768, size: 64, offset: 2496)
!3768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !96, line: 690, size: 64, elements: !3769)
!3769 = !{!3770, !3771}
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3768, file: !96, line: 691, baseType: !962, size: 64)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3768, file: !96, line: 692, baseType: !828, size: 64)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !611, file: !96, line: 694, baseType: !3773, size: 64, offset: 2560)
!3773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3774, size: 64)
!3774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !96, line: 1100, size: 384, elements: !3775)
!3775 = !{!3776, !3777, !3778, !3779}
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3774, file: !96, line: 1101, baseType: !210)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3774, file: !96, line: 1102, baseType: !298, size: 128)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3774, file: !96, line: 1103, baseType: !298, size: 128, offset: 128)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3774, file: !96, line: 1104, baseType: !298, size: 128, offset: 256)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !611, file: !96, line: 695, baseType: !607, size: 1216, align: 64, offset: 2624)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !611, file: !96, line: 696, baseType: !298, size: 128, offset: 3840)
!3782 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !96, line: 697, baseType: !3783, size: 64, offset: 3968)
!3783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !611, file: !96, line: 697, size: 64, elements: !3784)
!3784 = !{!3785, !3786, !3787, !3790, !3791}
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3783, file: !96, line: 698, baseType: !1224, size: 64)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3783, file: !96, line: 699, baseType: !1910, size: 64)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3783, file: !96, line: 700, baseType: !3788, size: 64)
!3788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3789, size: 64)
!3789 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !96, line: 700, flags: DIFlagFwdDecl)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3783, file: !96, line: 701, baseType: !184, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3783, file: !96, line: 702, baseType: !7, size: 32)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !611, file: !96, line: 705, baseType: !174, size: 32, offset: 4032)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !611, file: !96, line: 708, baseType: !174, size: 32, offset: 4064)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !611, file: !96, line: 709, baseType: !3529, size: 64, offset: 4096)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !611, file: !96, line: 720, baseType: !183, size: 64, offset: 4160)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !607, file: !96, line: 453, baseType: !1296, size: 128, offset: 64)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !607, file: !96, line: 454, baseType: !187, size: 32, offset: 192)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !607, file: !96, line: 455, baseType: !347, size: 32, offset: 224)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !607, file: !96, line: 460, baseType: !476, size: 128, offset: 256)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !607, file: !96, line: 461, baseType: !1375, size: 256, offset: 384)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !607, file: !96, line: 462, baseType: !168, size: 64, offset: 640)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !607, file: !96, line: 463, baseType: !168, size: 64, offset: 704)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !607, file: !96, line: 464, baseType: !168, size: 64, offset: 768)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !607, file: !96, line: 465, baseType: !3805, size: 64, offset: 832)
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3806, size: 64)
!3806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3807)
!3807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !96, line: 367, size: 1408, elements: !3808)
!3808 = !{!3809, !3813, !3817, !3821, !3825, !3829, !3841, !3846, !3850, !3854, !3858, !3862, !3866, !3867, !3871, !3877, !3878, !3879, !3883, !3888, !3892, !3899}
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !3807, file: !96, line: 368, baseType: !3810, size: 64)
!3810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3811, size: 64)
!3811 = !DISubroutineType(types: !3812)
!3812 = !{!74, !594, !840}
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !3807, file: !96, line: 369, baseType: !3814, size: 64, offset: 64)
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3815, size: 64)
!3815 = !DISubroutineType(types: !3816)
!3816 = !{!74, !971, !594}
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !3807, file: !96, line: 372, baseType: !3818, size: 64, offset: 128)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{!74, !606, !840}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !3807, file: !96, line: 375, baseType: !3822, size: 64, offset: 192)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DISubroutineType(types: !3824)
!3824 = !{!74, !594}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !3807, file: !96, line: 381, baseType: !3826, size: 64, offset: 256)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!74, !971, !606, !301, !7}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !3807, file: !96, line: 383, baseType: !3830, size: 64, offset: 320)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3831 = !DISubroutineType(types: !3832)
!3832 = !{null, !3833}
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1009, line: 795, size: 256, elements: !3835)
!3835 = !{!3836, !3837, !3838, !3839, !3840}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3834, file: !1009, line: 796, baseType: !971, size: 64)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !3834, file: !1009, line: 797, baseType: !606, size: 64, offset: 64)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !3834, file: !1009, line: 799, baseType: !168, size: 64, offset: 128)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !3834, file: !1009, line: 800, baseType: !7, size: 32, offset: 192)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !3834, file: !1009, line: 801, baseType: !7, size: 32, offset: 224)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !3807, file: !96, line: 385, baseType: !3842, size: 64, offset: 384)
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 64)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{!74, !971, !606, !773, !7, !7, !3845, !1181}
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !3807, file: !96, line: 388, baseType: !3847, size: 64, offset: 448)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3848 = !DISubroutineType(types: !3849)
!3849 = !{!74, !971, !606, !773, !7, !7, !594, !183}
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !3807, file: !96, line: 393, baseType: !3851, size: 64, offset: 512)
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DISubroutineType(types: !3853)
!3853 = !{!1932, !606, !1932}
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !3807, file: !96, line: 394, baseType: !3855, size: 64, offset: 576)
!3855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3856, size: 64)
!3856 = !DISubroutineType(types: !3857)
!3857 = !{null, !594, !7, !7}
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !3807, file: !96, line: 395, baseType: !3859, size: 64, offset: 640)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!74, !594, !187}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !3807, file: !96, line: 396, baseType: !3863, size: 64, offset: 704)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DISubroutineType(types: !3865)
!3865 = !{null, !594}
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !3807, file: !96, line: 397, baseType: !984, size: 64, offset: 768)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !3807, file: !96, line: 402, baseType: !3868, size: 64, offset: 832)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = !DISubroutineType(types: !3870)
!3870 = !{!74, !606, !594, !594, !11}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !3807, file: !96, line: 404, baseType: !3872, size: 64, offset: 896)
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = !DISubroutineType(types: !3874)
!3874 = !{!754, !594, !3875}
!3875 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !3876, line: 305, baseType: !7)
!3876 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !3807, file: !96, line: 405, baseType: !3863, size: 64, offset: 960)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !3807, file: !96, line: 406, baseType: !3822, size: 64, offset: 1024)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !3807, file: !96, line: 407, baseType: !3880, size: 64, offset: 1088)
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 64)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!74, !594, !168, !168}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !3807, file: !96, line: 409, baseType: !3884, size: 64, offset: 1152)
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64)
!3885 = !DISubroutineType(types: !3886)
!3886 = !{null, !594, !3887, !3887}
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !3807, file: !96, line: 410, baseType: !3889, size: 64, offset: 1216)
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3890, size: 64)
!3890 = !DISubroutineType(types: !3891)
!3891 = !{!74, !606, !594}
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !3807, file: !96, line: 413, baseType: !3893, size: 64, offset: 1280)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{!74, !3896, !971, !3898}
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !96, line: 61, flags: DIFlagFwdDecl)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !3807, file: !96, line: 415, baseType: !3900, size: 64, offset: 1344)
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 64)
!3901 = !DISubroutineType(types: !3902)
!3902 = !{null, !971}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !607, file: !96, line: 466, baseType: !168, size: 64, offset: 896)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !607, file: !96, line: 467, baseType: !1696, size: 32, offset: 960)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !607, file: !96, line: 468, baseType: !210, offset: 992)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !607, file: !96, line: 469, baseType: !298, size: 128, offset: 1024)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !607, file: !96, line: 470, baseType: !183, size: 64, offset: 1152)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !602, file: !508, line: 87, baseType: !168, size: 64, offset: 192)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !602, file: !508, line: 94, baseType: !168, size: 64, offset: 256)
!3910 = !DIDerivedType(tag: DW_TAG_member, scope: !599, file: !508, line: 96, baseType: !3911, size: 64)
!3911 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !599, file: !508, line: 96, size: 64, elements: !3912)
!3912 = !{!3913}
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !3911, file: !508, line: 101, baseType: !3914, size: 64)
!3914 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !188, line: 143, baseType: !197)
!3915 = !DIDerivedType(tag: DW_TAG_member, scope: !599, file: !508, line: 103, baseType: !3916, size: 320)
!3916 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !599, file: !508, line: 103, size: 320, elements: !3917)
!3917 = !{!3918, !3928, !3929, !3930}
!3918 = !DIDerivedType(tag: DW_TAG_member, scope: !3916, file: !508, line: 104, baseType: !3919, size: 128)
!3919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3916, file: !508, line: 104, size: 128, elements: !3920)
!3920 = !{!3921, !3922}
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !3919, file: !508, line: 105, baseType: !298, size: 128)
!3922 = !DIDerivedType(tag: DW_TAG_member, scope: !3919, file: !508, line: 106, baseType: !3923, size: 128)
!3923 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3919, file: !508, line: 106, size: 128, elements: !3924)
!3924 = !{!3925, !3926, !3927}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3923, file: !508, line: 107, baseType: !594, size: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3923, file: !508, line: 109, baseType: !74, size: 32, offset: 64)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !3923, file: !508, line: 110, baseType: !74, size: 32, offset: 96)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !3916, file: !508, line: 117, baseType: !1308, size: 64, offset: 128)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !3916, file: !508, line: 119, baseType: !183, size: 64, offset: 192)
!3930 = !DIDerivedType(tag: DW_TAG_member, scope: !3916, file: !508, line: 120, baseType: !3931, size: 64, offset: 256)
!3931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3916, file: !508, line: 120, size: 64, elements: !3932)
!3932 = !{!3933, !3934, !3935}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !3931, file: !508, line: 121, baseType: !183, size: 64)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !3931, file: !508, line: 122, baseType: !168, size: 64)
!3935 = !DIDerivedType(tag: DW_TAG_member, scope: !3931, file: !508, line: 123, baseType: !3936, size: 32)
!3936 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3931, file: !508, line: 123, size: 32, elements: !3937)
!3937 = !{!3938, !3939, !3940}
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !3936, file: !508, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !3936, file: !508, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3936, file: !508, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!3941 = !DIDerivedType(tag: DW_TAG_member, scope: !599, file: !508, line: 130, baseType: !3942, size: 192)
!3942 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !599, file: !508, line: 130, size: 192, elements: !3943)
!3943 = !{!3944, !3945, !3946, !3947, !3948}
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !3942, file: !508, line: 131, baseType: !168, size: 64)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !3942, file: !508, line: 134, baseType: !182, size: 8, offset: 64)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !3942, file: !508, line: 135, baseType: !182, size: 8, offset: 72)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !3942, file: !508, line: 136, baseType: !347, size: 32, offset: 96)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !3942, file: !508, line: 137, baseType: !7, size: 32, offset: 128)
!3949 = !DIDerivedType(tag: DW_TAG_member, scope: !599, file: !508, line: 139, baseType: !3950, size: 256)
!3950 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !599, file: !508, line: 139, size: 256, elements: !3951)
!3951 = !{!3952, !3953, !3954}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !3950, file: !508, line: 140, baseType: !168, size: 64)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !3950, file: !508, line: 141, baseType: !347, size: 32, offset: 64)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !3950, file: !508, line: 143, baseType: !298, size: 128, offset: 128)
!3955 = !DIDerivedType(tag: DW_TAG_member, scope: !599, file: !508, line: 145, baseType: !3956, size: 256)
!3956 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !599, file: !508, line: 145, size: 256, elements: !3957)
!3957 = !{!3958, !3959, !3961, !3962, !3967}
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !3956, file: !508, line: 146, baseType: !168, size: 64)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !3956, file: !508, line: 147, baseType: !3960, size: 64, offset: 64)
!3960 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !526, line: 509, baseType: !594)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !3956, file: !508, line: 148, baseType: !168, size: 64, offset: 128)
!3962 = !DIDerivedType(tag: DW_TAG_member, scope: !3956, file: !508, line: 149, baseType: !3963, size: 64, offset: 192)
!3963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3956, file: !508, line: 149, size: 64, elements: !3964)
!3964 = !{!3965, !3966}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !3963, file: !508, line: 150, baseType: !506, size: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !3963, file: !508, line: 151, baseType: !347, size: 32)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !3956, file: !508, line: 156, baseType: !210, offset: 256)
!3968 = !DIDerivedType(tag: DW_TAG_member, scope: !599, file: !508, line: 159, baseType: !3969, size: 128)
!3969 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !599, file: !508, line: 159, size: 128, elements: !3970)
!3970 = !{!3971, !4015}
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3969, file: !508, line: 161, baseType: !3972, size: 64)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !83, line: 110, size: 1152, elements: !3974)
!3974 = !{!3975, !3985, !3986, !3987, !3988, !3989, !3990, !4002, !4003, !4004}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3973, file: !83, line: 111, baseType: !3976, size: 384)
!3976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !83, line: 19, size: 384, elements: !3977)
!3977 = !{!3978, !3980, !3981, !3982, !3983, !3984}
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3976, file: !83, line: 20, baseType: !3979, size: 64)
!3979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3976, file: !83, line: 21, baseType: !3979, size: 64, offset: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3976, file: !83, line: 22, baseType: !3979, size: 64, offset: 128)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3976, file: !83, line: 23, baseType: !168, size: 64, offset: 192)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3976, file: !83, line: 24, baseType: !168, size: 64, offset: 256)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3976, file: !83, line: 25, baseType: !168, size: 64, offset: 320)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3973, file: !83, line: 112, baseType: !1953, size: 64, offset: 384)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3973, file: !83, line: 113, baseType: !1939, size: 128, offset: 448)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3973, file: !83, line: 114, baseType: !1541, size: 192, offset: 576)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3973, file: !83, line: 115, baseType: !82, size: 32, offset: 768)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3973, file: !83, line: 116, baseType: !7, size: 32, offset: 800)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3973, file: !83, line: 117, baseType: !3991, size: 64, offset: 832)
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 64)
!3992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3993)
!3993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !83, line: 67, size: 256, elements: !3994)
!3994 = !{!3995, !3996, !4000, !4001}
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3993, file: !83, line: 73, baseType: !3863, size: 64)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3993, file: !83, line: 78, baseType: !3997, size: 64, offset: 64)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{null, !3972}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3993, file: !83, line: 83, baseType: !3997, size: 64, offset: 128)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3993, file: !83, line: 89, baseType: !561, size: 64, offset: 192)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3973, file: !83, line: 118, baseType: !183, size: 64, offset: 896)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3973, file: !83, line: 119, baseType: !74, size: 32, offset: 960)
!4004 = !DIDerivedType(tag: DW_TAG_member, scope: !3973, file: !83, line: 120, baseType: !4005, size: 128, offset: 1024)
!4005 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3973, file: !83, line: 120, size: 128, elements: !4006)
!4006 = !{!4007, !4013}
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4005, file: !83, line: 121, baseType: !4008, size: 128)
!4008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4009, line: 6, size: 128, elements: !4010)
!4009 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4010 = !{!4011, !4012}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4008, file: !4009, line: 7, baseType: !197, size: 64)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4008, file: !4009, line: 8, baseType: !197, size: 64, offset: 64)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4005, file: !83, line: 122, baseType: !4014)
!4014 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4008, elements: !1674)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3969, file: !508, line: 162, baseType: !183, size: 64, offset: 64)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !599, file: !508, line: 176, baseType: !951, size: 128, align: 64)
!4017 = !DIDerivedType(tag: DW_TAG_member, scope: !595, file: !508, line: 179, baseType: !4018, size: 32, offset: 384)
!4018 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !595, file: !508, line: 179, size: 32, elements: !4019)
!4019 = !{!4020, !4021, !4022, !4023}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4018, file: !508, line: 184, baseType: !347, size: 32)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4018, file: !508, line: 192, baseType: !7, size: 32)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4018, file: !508, line: 194, baseType: !7, size: 32)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4018, file: !508, line: 195, baseType: !74, size: 32)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !595, file: !508, line: 199, baseType: !347, size: 32, offset: 416)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !566, file: !19, line: 522, baseType: !594, size: 64, offset: 512)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !566, file: !19, line: 528, baseType: !4027, size: 64, offset: 576)
!4027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !566, file: !19, line: 532, baseType: !4029, size: 64, offset: 640)
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !566, file: !19, line: 536, baseType: !3960, size: 64, offset: 704)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !545, file: !19, line: 563, baseType: !4032, size: 64, offset: 320)
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4033, size: 64)
!4033 = !DISubroutineType(types: !4034)
!4034 = !{!564, !565, !18}
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !545, file: !19, line: 565, baseType: !4036, size: 64, offset: 384)
!4036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4037, size: 64)
!4037 = !DISubroutineType(types: !4038)
!4038 = !{null, !565, !168, !168}
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !545, file: !19, line: 567, baseType: !4040, size: 64, offset: 448)
!4040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4041, size: 64)
!4041 = !DISubroutineType(types: !4042)
!4042 = !{!168, !514}
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !545, file: !19, line: 571, baseType: !561, size: 64, offset: 512)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !545, file: !19, line: 574, baseType: !561, size: 64, offset: 576)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !545, file: !19, line: 579, baseType: !4046, size: 64, offset: 640)
!4046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4047, size: 64)
!4047 = !DISubroutineType(types: !4048)
!4048 = !{!74, !514, !168, !183, !74, !74}
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !545, file: !19, line: 585, baseType: !4050, size: 64, offset: 704)
!4050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4051, size: 64)
!4051 = !DISubroutineType(types: !4052)
!4052 = !{!281, !514}
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !545, file: !19, line: 615, baseType: !4054, size: 64, offset: 768)
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4055, size: 64)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{!594, !514, !168}
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !515, file: !508, line: 359, baseType: !168, size: 64, offset: 1216)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !515, file: !508, line: 361, baseType: !971, size: 64, offset: 1280)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !515, file: !508, line: 362, baseType: !183, size: 64, offset: 1344)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !515, file: !508, line: 365, baseType: !905, size: 64, offset: 1408)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !515, file: !508, line: 373, baseType: !4062, offset: 1472)
!4062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !508, line: 296, elements: !224)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !511, file: !508, line: 391, baseType: !479, size: 64, offset: 64)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !511, file: !508, line: 392, baseType: !197, size: 64, offset: 128)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !511, file: !508, line: 394, baseType: !1212, size: 64, offset: 192)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !511, file: !508, line: 398, baseType: !168, size: 64, offset: 256)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !511, file: !508, line: 399, baseType: !168, size: 64, offset: 320)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !511, file: !508, line: 405, baseType: !168, size: 64, offset: 384)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !511, file: !508, line: 406, baseType: !168, size: 64, offset: 448)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !511, file: !508, line: 407, baseType: !4071, size: 64, offset: 512)
!4071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4072, size: 64)
!4072 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !526, line: 286, baseType: !4073)
!4073 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !526, line: 286, size: 64, elements: !4074)
!4074 = !{!4075}
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !4073, file: !526, line: 286, baseType: !4076, size: 64)
!4076 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !531, line: 18, baseType: !168)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !511, file: !508, line: 416, baseType: !347, size: 32, offset: 576)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !511, file: !508, line: 428, baseType: !347, size: 32, offset: 608)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !511, file: !508, line: 437, baseType: !347, size: 32, offset: 640)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !511, file: !508, line: 447, baseType: !347, size: 32, offset: 672)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !511, file: !508, line: 450, baseType: !905, size: 64, offset: 704)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !511, file: !508, line: 452, baseType: !74, size: 32, offset: 768)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !511, file: !508, line: 454, baseType: !210, offset: 800)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !511, file: !508, line: 457, baseType: !1375, size: 256, offset: 832)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !511, file: !508, line: 459, baseType: !298, size: 128, offset: 1088)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !511, file: !508, line: 466, baseType: !168, size: 64, offset: 1216)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !511, file: !508, line: 467, baseType: !168, size: 64, offset: 1280)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !511, file: !508, line: 469, baseType: !168, size: 64, offset: 1344)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !511, file: !508, line: 470, baseType: !168, size: 64, offset: 1408)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !511, file: !508, line: 471, baseType: !907, size: 64, offset: 1472)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !511, file: !508, line: 472, baseType: !168, size: 64, offset: 1536)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !511, file: !508, line: 473, baseType: !168, size: 64, offset: 1600)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !511, file: !508, line: 474, baseType: !168, size: 64, offset: 1664)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !511, file: !508, line: 475, baseType: !168, size: 64, offset: 1728)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !511, file: !508, line: 477, baseType: !210, offset: 1792)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !511, file: !508, line: 478, baseType: !168, size: 64, offset: 1792)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !511, file: !508, line: 478, baseType: !168, size: 64, offset: 1856)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !511, file: !508, line: 478, baseType: !168, size: 64, offset: 1920)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !511, file: !508, line: 478, baseType: !168, size: 64, offset: 1984)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !511, file: !508, line: 479, baseType: !168, size: 64, offset: 2048)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !511, file: !508, line: 479, baseType: !168, size: 64, offset: 2112)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !511, file: !508, line: 479, baseType: !168, size: 64, offset: 2176)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !511, file: !508, line: 480, baseType: !168, size: 64, offset: 2240)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !511, file: !508, line: 480, baseType: !168, size: 64, offset: 2304)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !511, file: !508, line: 480, baseType: !168, size: 64, offset: 2368)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !511, file: !508, line: 480, baseType: !168, size: 64, offset: 2432)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !511, file: !508, line: 482, baseType: !4108, size: 2816, offset: 2496)
!4108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !168, size: 2816, elements: !4109)
!4109 = !{!4110}
!4110 = !DISubrange(count: 44)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !511, file: !508, line: 488, baseType: !4112, size: 256, offset: 5312)
!4112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !4113, line: 60, size: 256, elements: !4114)
!4113 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!4114 = !{!4115}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4112, file: !4113, line: 61, baseType: !4116, size: 256)
!4116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !905, size: 256, elements: !176)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !511, file: !508, line: 490, baseType: !4118, size: 64, offset: 5568)
!4118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4119, size: 64)
!4119 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !508, line: 490, flags: DIFlagFwdDecl)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !511, file: !508, line: 493, baseType: !4121, size: 896, offset: 5632)
!4121 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !4122, line: 53, baseType: !4123)
!4122 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!4123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4122, line: 13, size: 896, elements: !4124)
!4124 = !{!4125, !4126, !4127, !4128, !4131, !4132, !4133, !4134, !4154, !4155, !4156}
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !4123, file: !4122, line: 18, baseType: !197, size: 64)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !4123, file: !4122, line: 28, baseType: !907, size: 64, offset: 64)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !4123, file: !4122, line: 31, baseType: !1375, size: 256, offset: 128)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !4123, file: !4122, line: 32, baseType: !4129, size: 64, offset: 384)
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4130, size: 64)
!4130 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !4122, line: 32, flags: DIFlagFwdDecl)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !4123, file: !4122, line: 37, baseType: !180, size: 16, offset: 448)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4123, file: !4122, line: 40, baseType: !901, size: 192, offset: 512)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !4123, file: !4122, line: 41, baseType: !183, size: 64, offset: 704)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !4123, file: !4122, line: 42, baseType: !4135, size: 64, offset: 768)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64)
!4136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4137)
!4137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !4138, line: 13, size: 896, elements: !4139)
!4138 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!4139 = !{!4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4137, file: !4138, line: 14, baseType: !183, size: 64)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4137, file: !4138, line: 15, baseType: !168, size: 64, offset: 64)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !4137, file: !4138, line: 17, baseType: !168, size: 64, offset: 128)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !4137, file: !4138, line: 17, baseType: !168, size: 64, offset: 192)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !4137, file: !4138, line: 19, baseType: !186, size: 64, offset: 256)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !4137, file: !4138, line: 21, baseType: !186, size: 64, offset: 320)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !4137, file: !4138, line: 22, baseType: !186, size: 64, offset: 384)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !4137, file: !4138, line: 23, baseType: !186, size: 64, offset: 448)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !4137, file: !4138, line: 24, baseType: !186, size: 64, offset: 512)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !4137, file: !4138, line: 25, baseType: !186, size: 64, offset: 576)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !4137, file: !4138, line: 26, baseType: !186, size: 64, offset: 640)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !4137, file: !4138, line: 27, baseType: !186, size: 64, offset: 704)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !4137, file: !4138, line: 28, baseType: !186, size: 64, offset: 768)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !4137, file: !4138, line: 29, baseType: !186, size: 64, offset: 832)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !4123, file: !4122, line: 44, baseType: !347, size: 32, offset: 832)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !4123, file: !4122, line: 50, baseType: !999, size: 16, offset: 864)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !4123, file: !4122, line: 51, baseType: !4157, size: 16, offset: 880)
!4157 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !198, line: 18, baseType: !4158)
!4158 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !175, line: 23, baseType: !1402)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !511, file: !508, line: 495, baseType: !168, size: 64, offset: 6528)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !511, file: !508, line: 497, baseType: !4161, size: 64, offset: 6592)
!4161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!4162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !508, line: 381, size: 384, elements: !4163)
!4163 = !{!4164, !4165, !4171}
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !4162, file: !508, line: 382, baseType: !347, size: 32)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !4162, file: !508, line: 383, baseType: !4166, size: 128, offset: 64)
!4166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !508, line: 376, size: 128, elements: !4167)
!4167 = !{!4168, !4169}
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4166, file: !508, line: 377, baseType: !329, size: 64)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4166, file: !508, line: 378, baseType: !4170, size: 64, offset: 64)
!4170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4166, size: 64)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !4162, file: !508, line: 384, baseType: !1541, size: 192, offset: 192)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !511, file: !508, line: 500, baseType: !210, offset: 6656)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !511, file: !508, line: 501, baseType: !4174, size: 64, offset: 6656)
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 64)
!4175 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !508, line: 387, flags: DIFlagFwdDecl)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !511, file: !508, line: 516, baseType: !1313, size: 64, offset: 6720)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !511, file: !508, line: 519, baseType: !971, size: 64, offset: 6784)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !511, file: !508, line: 521, baseType: !4179, size: 64, offset: 6848)
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !508, line: 521, flags: DIFlagFwdDecl)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !511, file: !508, line: 545, baseType: !347, size: 32, offset: 6912)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !511, file: !508, line: 548, baseType: !754, size: 8, offset: 6944)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !511, file: !508, line: 550, baseType: !4184, offset: 6952)
!4184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4185, line: 142, elements: !224)
!4185 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !511, file: !508, line: 554, baseType: !1480, size: 256, offset: 6976)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !511, file: !508, line: 557, baseType: !205, size: 32, offset: 7232)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !507, file: !508, line: 565, baseType: !4189, offset: 7296)
!4189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !168, elements: !2714)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !330, file: !331, line: 758, baseType: !506, size: 64, offset: 3968)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !330, file: !331, line: 761, baseType: !4192, size: 320, offset: 4032)
!4192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !4113, line: 34, size: 320, elements: !4193)
!4193 = !{!4194, !4195}
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !4192, file: !4113, line: 35, baseType: !197, size: 64)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !4192, file: !4113, line: 36, baseType: !4196, size: 256, offset: 64)
!4196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 256, elements: !176)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !330, file: !331, line: 766, baseType: !74, size: 32, offset: 4352)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !330, file: !331, line: 767, baseType: !74, size: 32, offset: 4384)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !330, file: !331, line: 768, baseType: !74, size: 32, offset: 4416)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !330, file: !331, line: 770, baseType: !74, size: 32, offset: 4448)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !330, file: !331, line: 772, baseType: !168, size: 64, offset: 4480)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !330, file: !331, line: 775, baseType: !7, size: 32, offset: 4544)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !330, file: !331, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !330, file: !331, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !330, file: !331, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !330, file: !331, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !330, file: !331, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !330, file: !331, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !330, file: !331, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !330, file: !331, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !330, file: !331, line: 831, baseType: !168, size: 64, offset: 4672)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !330, file: !331, line: 833, baseType: !4213, size: 384, offset: 4736)
!4213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !30, line: 25, size: 384, elements: !4214)
!4214 = !{!4215, !4220}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4213, file: !30, line: 26, baseType: !4216, size: 64)
!4216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4217, size: 64)
!4217 = !DISubroutineType(types: !4218)
!4218 = !{!186, !4219}
!4219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4213, size: 64)
!4220 = !DIDerivedType(tag: DW_TAG_member, scope: !4213, file: !30, line: 27, baseType: !4221, size: 320, offset: 64)
!4221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4213, file: !30, line: 27, size: 320, elements: !4222)
!4222 = !{!4223, !4233, !4258}
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !4221, file: !30, line: 36, baseType: !4224, size: 320)
!4224 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4221, file: !30, line: 29, size: 320, elements: !4225)
!4225 = !{!4226, !4228, !4229, !4230, !4231, !4232}
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !4224, file: !30, line: 30, baseType: !4227, size: 64)
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4224, file: !30, line: 31, baseType: !205, size: 32, offset: 64)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4224, file: !30, line: 32, baseType: !205, size: 32, offset: 96)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !4224, file: !30, line: 33, baseType: !205, size: 32, offset: 128)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !4224, file: !30, line: 34, baseType: !197, size: 64, offset: 192)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !4224, file: !30, line: 35, baseType: !4227, size: 64, offset: 256)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !4221, file: !30, line: 46, baseType: !4234, size: 192)
!4234 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4221, file: !30, line: 38, size: 192, elements: !4235)
!4235 = !{!4236, !4237, !4238, !4257}
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !4234, file: !30, line: 39, baseType: !459, size: 32)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4234, file: !30, line: 40, baseType: !29, size: 32, offset: 32)
!4238 = !DIDerivedType(tag: DW_TAG_member, scope: !4234, file: !30, line: 41, baseType: !4239, size: 64, offset: 64)
!4239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4234, file: !30, line: 41, size: 64, elements: !4240)
!4240 = !{!4241, !4249}
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !4239, file: !30, line: 42, baseType: !4242, size: 64)
!4242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4243, size: 64)
!4243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !4244, line: 7, size: 128, elements: !4245)
!4244 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!4245 = !{!4246, !4248}
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4243, file: !4244, line: 8, baseType: !4247, size: 64)
!4247 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !290, line: 93, baseType: !410)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4243, file: !4244, line: 9, baseType: !410, size: 64, offset: 64)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !4239, file: !30, line: 43, baseType: !4250, size: 64)
!4250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4251, size: 64)
!4251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !4252, line: 7, size: 64, elements: !4253)
!4252 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!4253 = !{!4254, !4256}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4251, file: !4252, line: 8, baseType: !4255, size: 32)
!4255 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !4252, line: 5, baseType: !1367)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4251, file: !4252, line: 9, baseType: !1367, size: 32, offset: 32)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4234, file: !30, line: 45, baseType: !197, size: 64, offset: 128)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4221, file: !30, line: 54, baseType: !4259, size: 256)
!4259 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4221, file: !30, line: 48, size: 256, elements: !4260)
!4260 = !{!4261, !4269, !4270, !4271, !4272}
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !4259, file: !30, line: 49, baseType: !4262, size: 64)
!4262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4263, size: 64)
!4263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !4264, line: 36, size: 64, elements: !4265)
!4264 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!4265 = !{!4266, !4267, !4268}
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !4263, file: !4264, line: 37, baseType: !74, size: 32)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4263, file: !4264, line: 38, baseType: !1402, size: 16, offset: 32)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !4263, file: !4264, line: 39, baseType: !1402, size: 16, offset: 48)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !4259, file: !30, line: 50, baseType: !74, size: 32, offset: 64)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !4259, file: !30, line: 51, baseType: !74, size: 32, offset: 96)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4259, file: !30, line: 52, baseType: !168, size: 64, offset: 128)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4259, file: !30, line: 53, baseType: !168, size: 64, offset: 192)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !330, file: !331, line: 835, baseType: !4274, size: 32, offset: 5120)
!4274 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !188, line: 22, baseType: !4275)
!4275 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !290, line: 28, baseType: !74)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !330, file: !331, line: 836, baseType: !4274, size: 32, offset: 5152)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !330, file: !331, line: 840, baseType: !168, size: 64, offset: 5184)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !330, file: !331, line: 849, baseType: !329, size: 64, offset: 5248)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !330, file: !331, line: 852, baseType: !329, size: 64, offset: 5312)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !330, file: !331, line: 857, baseType: !298, size: 128, offset: 5376)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !330, file: !331, line: 858, baseType: !298, size: 128, offset: 5504)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !330, file: !331, line: 859, baseType: !329, size: 64, offset: 5632)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !330, file: !331, line: 867, baseType: !298, size: 128, offset: 5696)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !330, file: !331, line: 868, baseType: !298, size: 128, offset: 5824)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !330, file: !331, line: 871, baseType: !1265, size: 64, offset: 5952)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !330, file: !331, line: 872, baseType: !4287, size: 512, offset: 6016)
!4287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 512, elements: !176)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !330, file: !331, line: 873, baseType: !298, size: 128, offset: 6528)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !330, file: !331, line: 874, baseType: !298, size: 128, offset: 6656)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !330, file: !331, line: 876, baseType: !1540, size: 64, offset: 6784)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !330, file: !331, line: 879, baseType: !883, size: 64, offset: 6848)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !330, file: !331, line: 882, baseType: !883, size: 64, offset: 6912)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !330, file: !331, line: 884, baseType: !197, size: 64, offset: 6976)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !330, file: !331, line: 885, baseType: !197, size: 64, offset: 7040)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !330, file: !331, line: 890, baseType: !197, size: 64, offset: 7104)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !330, file: !331, line: 891, baseType: !4297, size: 128, offset: 7168)
!4297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !331, line: 242, size: 128, elements: !4298)
!4298 = !{!4299, !4300, !4301}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4297, file: !331, line: 244, baseType: !197, size: 64)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4297, file: !331, line: 245, baseType: !197, size: 64, offset: 64)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4297, file: !331, line: 246, baseType: !443, offset: 128)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !330, file: !331, line: 900, baseType: !168, size: 64, offset: 7296)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !330, file: !331, line: 901, baseType: !168, size: 64, offset: 7360)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !330, file: !331, line: 904, baseType: !197, size: 64, offset: 7424)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !330, file: !331, line: 907, baseType: !197, size: 64, offset: 7488)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !330, file: !331, line: 910, baseType: !168, size: 64, offset: 7552)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !330, file: !331, line: 911, baseType: !168, size: 64, offset: 7616)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !330, file: !331, line: 914, baseType: !4309, size: 640, offset: 7680)
!4309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !4310, line: 123, size: 640, elements: !4311)
!4310 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!4311 = !{!4312, !4318, !4319}
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !4309, file: !4310, line: 124, baseType: !4313, size: 576)
!4313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4314, size: 576, elements: !813)
!4314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !4310, line: 108, size: 192, elements: !4315)
!4315 = !{!4316, !4317}
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !4314, file: !4310, line: 109, baseType: !197, size: 64)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !4314, file: !4310, line: 110, baseType: !473, size: 128, offset: 64)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !4309, file: !4310, line: 125, baseType: !7, size: 32, offset: 576)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !4309, file: !4310, line: 126, baseType: !7, size: 32, offset: 608)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !330, file: !331, line: 917, baseType: !4321, size: 192, offset: 8320)
!4321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !4310, line: 134, size: 192, elements: !4322)
!4322 = !{!4323, !4324}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4321, file: !4310, line: 135, baseType: !951, size: 128, align: 64)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !4321, file: !4310, line: 136, baseType: !7, size: 32, offset: 128)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !330, file: !331, line: 923, baseType: !1606, size: 64, offset: 8512)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !330, file: !331, line: 926, baseType: !1606, size: 64, offset: 8576)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !330, file: !331, line: 929, baseType: !1606, size: 64, offset: 8640)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !330, file: !331, line: 933, baseType: !1359, size: 64, offset: 8704)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !330, file: !331, line: 943, baseType: !4330, size: 128, offset: 8768)
!4330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 128, elements: !206)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !330, file: !331, line: 945, baseType: !4332, size: 64, offset: 8896)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !331, line: 49, flags: DIFlagFwdDecl)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !330, file: !331, line: 956, baseType: !4335, size: 64, offset: 8960)
!4335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4336, size: 64)
!4336 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !331, line: 45, flags: DIFlagFwdDecl)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !330, file: !331, line: 959, baseType: !4338, size: 64, offset: 9024)
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4339, size: 64)
!4339 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !331, line: 959, flags: DIFlagFwdDecl)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !330, file: !331, line: 962, baseType: !4341, size: 64, offset: 9088)
!4341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4342, size: 64)
!4342 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !331, line: 66, flags: DIFlagFwdDecl)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !330, file: !331, line: 966, baseType: !4344, size: 64, offset: 9152)
!4344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4345, size: 64)
!4345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !4346, line: 31, size: 576, elements: !4347)
!4346 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!4347 = !{!4348, !4349, !4371, !4374, !4377, !4378, !4381, !4384, !4385}
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4345, file: !4346, line: 32, baseType: !347, size: 32)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !4345, file: !4346, line: 33, baseType: !4350, size: 64, offset: 64)
!4350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4351, size: 64)
!4351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !4352, line: 24, size: 3520, elements: !4353)
!4352 = !DIFile(filename: "./include/linux/utsname.h", directory: "/home/lizy2001/genbc/linux")
!4353 = !{!4354, !4355, !4368, !4369, !4370}
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4351, file: !4352, line: 25, baseType: !1287, size: 32)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4351, file: !4352, line: 26, baseType: !4356, size: 3120, offset: 32)
!4356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "new_utsname", file: !4357, line: 25, size: 3120, elements: !4358)
!4357 = !DIFile(filename: "./include/uapi/linux/utsname.h", directory: "/home/lizy2001/genbc/linux")
!4358 = !{!4359, !4363, !4364, !4365, !4366, !4367}
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "sysname", scope: !4356, file: !4357, line: 26, baseType: !4360, size: 520)
!4360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 520, elements: !4361)
!4361 = !{!4362}
!4362 = !DISubrange(count: 65)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "nodename", scope: !4356, file: !4357, line: 27, baseType: !4360, size: 520, offset: 520)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4356, file: !4357, line: 28, baseType: !4360, size: 520, offset: 1040)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4356, file: !4357, line: 29, baseType: !4360, size: 520, offset: 1560)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !4356, file: !4357, line: 30, baseType: !4360, size: 520, offset: 2080)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "domainname", scope: !4356, file: !4357, line: 31, baseType: !4360, size: 520, offset: 2600)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !4351, file: !4352, line: 27, baseType: !1313, size: 64, offset: 3200)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !4351, file: !4352, line: 28, baseType: !1585, size: 64, offset: 3264)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4351, file: !4352, line: 29, baseType: !1347, size: 192, offset: 3328)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !4345, file: !4346, line: 34, baseType: !4372, size: 64, offset: 128)
!4372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4373, size: 64)
!4373 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !4346, line: 10, flags: DIFlagFwdDecl)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !4345, file: !4346, line: 35, baseType: !4375, size: 64, offset: 192)
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4376 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !4346, line: 8, flags: DIFlagFwdDecl)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !4345, file: !4346, line: 36, baseType: !1282, size: 64, offset: 256)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !4345, file: !4346, line: 37, baseType: !4379, size: 64, offset: 320)
!4379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4380, size: 64)
!4380 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !4346, line: 37, flags: DIFlagFwdDecl)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !4345, file: !4346, line: 38, baseType: !4382, size: 64, offset: 384)
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4383, size: 64)
!4383 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !4346, line: 38, flags: DIFlagFwdDecl)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !4345, file: !4346, line: 39, baseType: !4382, size: 64, offset: 448)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !4345, file: !4346, line: 40, baseType: !4386, size: 64, offset: 512)
!4386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4387, size: 64)
!4387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !4388, line: 856, size: 448, elements: !4389)
!4388 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!4389 = !{!4390, !4391, !4392, !4393, !4394}
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4387, file: !4388, line: 857, baseType: !342, size: 32)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4387, file: !4388, line: 858, baseType: !1347, size: 192, offset: 64)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !4387, file: !4388, line: 859, baseType: !1313, size: 64, offset: 256)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !4387, file: !4388, line: 860, baseType: !1585, size: 64, offset: 320)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !4387, file: !4388, line: 861, baseType: !4395, size: 64, offset: 384)
!4395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4396, size: 64)
!4396 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !4397, line: 16, flags: DIFlagFwdDecl)
!4397 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !330, file: !331, line: 969, baseType: !4399, size: 64, offset: 9216)
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4400, size: 64)
!4400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !4401, line: 82, size: 7296, elements: !4402)
!4401 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!4402 = !{!4403, !4404, !4405, !4406, !4407, !4408, !4409, !4420, !4421, !4422, !4423, !4424, !4425, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4438, !4447, !4448, !4450, !4451, !4452, !4455, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4472, !4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4485, !4486, !4493, !4494, !4495, !4496, !4497, !4498}
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !4400, file: !4401, line: 83, baseType: !342, size: 32)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !4400, file: !4401, line: 84, baseType: !347, size: 32, offset: 32)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !4400, file: !4401, line: 85, baseType: !74, size: 32, offset: 64)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !4400, file: !4401, line: 86, baseType: !298, size: 128, offset: 128)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !4400, file: !4401, line: 88, baseType: !1064, size: 128, offset: 256)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !4400, file: !4401, line: 91, baseType: !329, size: 64, offset: 384)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !4400, file: !4401, line: 94, baseType: !4410, size: 192, offset: 448)
!4410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !4411, line: 30, size: 192, elements: !4412)
!4411 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!4412 = !{!4413, !4414}
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4410, file: !4411, line: 31, baseType: !298, size: 128)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !4410, file: !4411, line: 32, baseType: !4415, size: 64, offset: 128)
!4415 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !4416, line: 25, baseType: !4417)
!4416 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!4417 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4416, line: 23, size: 64, elements: !4418)
!4418 = !{!4419}
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !4417, file: !4416, line: 24, baseType: !277, size: 64)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !4400, file: !4401, line: 97, baseType: !803, size: 64, offset: 640)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !4400, file: !4401, line: 100, baseType: !74, size: 32, offset: 704)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !4400, file: !4401, line: 106, baseType: !74, size: 32, offset: 736)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !4400, file: !4401, line: 107, baseType: !329, size: 64, offset: 768)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !4400, file: !4401, line: 110, baseType: !74, size: 32, offset: 832)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4400, file: !4401, line: 111, baseType: !7, size: 32, offset: 864)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !4400, file: !4401, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !4400, file: !4401, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !4400, file: !4401, line: 128, baseType: !74, size: 32, offset: 928)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !4400, file: !4401, line: 129, baseType: !298, size: 128, offset: 960)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !4400, file: !4401, line: 132, baseType: !418, size: 512, offset: 1088)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !4400, file: !4401, line: 133, baseType: !426, size: 64, offset: 1600)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !4400, file: !4401, line: 140, baseType: !4433, size: 256, offset: 1664)
!4433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4434, size: 256, elements: !1628)
!4434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !4401, line: 38, size: 128, elements: !4435)
!4435 = !{!4436, !4437}
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4434, file: !4401, line: 39, baseType: !197, size: 64)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !4434, file: !4401, line: 40, baseType: !197, size: 64, offset: 64)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !4400, file: !4401, line: 146, baseType: !4439, size: 192, offset: 1920)
!4439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !4401, line: 66, size: 192, elements: !4440)
!4440 = !{!4441}
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !4439, file: !4401, line: 67, baseType: !4442, size: 192)
!4442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !4401, line: 47, size: 192, elements: !4443)
!4443 = !{!4444, !4445, !4446}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4442, file: !4401, line: 48, baseType: !907, size: 64)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4442, file: !4401, line: 49, baseType: !907, size: 64, offset: 64)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !4442, file: !4401, line: 50, baseType: !907, size: 64, offset: 128)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !4400, file: !4401, line: 150, baseType: !4309, size: 640, offset: 2112)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !4400, file: !4401, line: 153, baseType: !4449, size: 256, offset: 2752)
!4449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 256, elements: !176)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !4400, file: !4401, line: 159, baseType: !1265, size: 64, offset: 3008)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !4400, file: !4401, line: 162, baseType: !74, size: 32, offset: 3072)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !4400, file: !4401, line: 164, baseType: !4453, size: 64, offset: 3136)
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4454, size: 64)
!4454 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !4401, line: 164, flags: DIFlagFwdDecl)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !4400, file: !4401, line: 175, baseType: !4456, size: 32, offset: 3200)
!4456 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !463, line: 805, baseType: !4457)
!4457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !463, line: 798, size: 32, elements: !4458)
!4458 = !{!4459, !4460}
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !4457, file: !463, line: 803, baseType: !647, size: 32)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4457, file: !463, line: 804, baseType: !210, offset: 32)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !4400, file: !4401, line: 176, baseType: !197, size: 64, offset: 3264)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !4400, file: !4401, line: 176, baseType: !197, size: 64, offset: 3328)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !4400, file: !4401, line: 176, baseType: !197, size: 64, offset: 3392)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !4400, file: !4401, line: 176, baseType: !197, size: 64, offset: 3456)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !4400, file: !4401, line: 177, baseType: !197, size: 64, offset: 3520)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !4400, file: !4401, line: 178, baseType: !197, size: 64, offset: 3584)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !4400, file: !4401, line: 179, baseType: !4297, size: 128, offset: 3648)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !4400, file: !4401, line: 180, baseType: !168, size: 64, offset: 3776)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !4400, file: !4401, line: 180, baseType: !168, size: 64, offset: 3840)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !4400, file: !4401, line: 180, baseType: !168, size: 64, offset: 3904)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !4400, file: !4401, line: 180, baseType: !168, size: 64, offset: 3968)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !4400, file: !4401, line: 181, baseType: !168, size: 64, offset: 4032)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !4400, file: !4401, line: 181, baseType: !168, size: 64, offset: 4096)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !4400, file: !4401, line: 181, baseType: !168, size: 64, offset: 4160)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !4400, file: !4401, line: 181, baseType: !168, size: 64, offset: 4224)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !4400, file: !4401, line: 182, baseType: !168, size: 64, offset: 4288)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !4400, file: !4401, line: 182, baseType: !168, size: 64, offset: 4352)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !4400, file: !4401, line: 182, baseType: !168, size: 64, offset: 4416)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !4400, file: !4401, line: 182, baseType: !168, size: 64, offset: 4480)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !4400, file: !4401, line: 183, baseType: !168, size: 64, offset: 4544)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !4400, file: !4401, line: 183, baseType: !168, size: 64, offset: 4608)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !4400, file: !4401, line: 184, baseType: !4483, offset: 4672)
!4483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !4484, line: 12, elements: !224)
!4484 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !4400, file: !4401, line: 192, baseType: !200, size: 64, offset: 4672)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !4400, file: !4401, line: 203, baseType: !4487, size: 2048, offset: 4736)
!4487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4488, size: 2048, elements: !206)
!4488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !4489, line: 43, size: 128, elements: !4490)
!4489 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!4490 = !{!4491, !4492}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !4488, file: !4489, line: 44, baseType: !291, size: 64)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !4488, file: !4489, line: 45, baseType: !291, size: 64, offset: 64)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !4400, file: !4401, line: 220, baseType: !754, size: 8, offset: 6784)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !4400, file: !4401, line: 221, baseType: !1402, size: 16, offset: 6800)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !4400, file: !4401, line: 222, baseType: !1402, size: 16, offset: 6816)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !4400, file: !4401, line: 224, baseType: !506, size: 64, offset: 6848)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !4400, file: !4401, line: 227, baseType: !901, size: 192, offset: 6912)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !4400, file: !4401, line: 233, baseType: !901, size: 192, offset: 7104)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !330, file: !331, line: 970, baseType: !4500, size: 64, offset: 9280)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 64)
!4501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !4401, line: 20, size: 16576, elements: !4502)
!4502 = !{!4503, !4504, !4505, !4506}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !4501, file: !4401, line: 21, baseType: !210)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4501, file: !4401, line: 22, baseType: !342, size: 32)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !4501, file: !4401, line: 23, baseType: !1064, size: 128, offset: 64)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4501, file: !4401, line: 24, baseType: !4507, size: 16384, offset: 192)
!4507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4508, size: 16384, elements: !2004)
!4508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !4411, line: 49, size: 256, elements: !4509)
!4509 = !{!4510}
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !4508, file: !4411, line: 50, baseType: !4511, size: 256)
!4511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !4411, line: 35, size: 256, elements: !4512)
!4512 = !{!4513, !4520, !4521, !4527}
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !4511, file: !4411, line: 37, baseType: !4514, size: 64)
!4514 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !4515, line: 19, baseType: !4516)
!4515 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!4516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4517, size: 64)
!4517 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !4515, line: 18, baseType: !4518)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{null, !74}
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !4511, file: !4411, line: 38, baseType: !168, size: 64, offset: 64)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !4511, file: !4411, line: 44, baseType: !4522, size: 64, offset: 128)
!4522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !4515, line: 22, baseType: !4523)
!4523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4524, size: 64)
!4524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !4515, line: 21, baseType: !4525)
!4525 = !DISubroutineType(types: !4526)
!4526 = !{null}
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !4511, file: !4411, line: 46, baseType: !4415, size: 64, offset: 192)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !330, file: !331, line: 971, baseType: !4415, size: 64, offset: 9344)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !330, file: !331, line: 972, baseType: !4415, size: 64, offset: 9408)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !330, file: !331, line: 974, baseType: !4415, size: 64, offset: 9472)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !330, file: !331, line: 975, baseType: !4410, size: 192, offset: 9536)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !330, file: !331, line: 976, baseType: !168, size: 64, offset: 9728)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !330, file: !331, line: 977, baseType: !288, size: 64, offset: 9792)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !330, file: !331, line: 978, baseType: !7, size: 32, offset: 9856)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !330, file: !331, line: 980, baseType: !954, size: 64, offset: 9920)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !330, file: !331, line: 989, baseType: !4537, size: 128, offset: 9984)
!4537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !4538, line: 35, size: 128, elements: !4539)
!4538 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!4539 = !{!4540, !4541, !4542}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4537, file: !4538, line: 36, baseType: !74, size: 32)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !4537, file: !4538, line: 37, baseType: !347, size: 32, offset: 32)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4537, file: !4538, line: 38, baseType: !4543, size: 64, offset: 64)
!4543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4544, size: 64)
!4544 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !4538, line: 23, flags: DIFlagFwdDecl)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !330, file: !331, line: 992, baseType: !197, size: 64, offset: 10112)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !330, file: !331, line: 993, baseType: !197, size: 64, offset: 10176)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !330, file: !331, line: 996, baseType: !210, offset: 10240)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !330, file: !331, line: 999, baseType: !443, offset: 10240)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !330, file: !331, line: 1001, baseType: !4550, size: 64, offset: 10240)
!4550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !331, line: 636, size: 64, elements: !4551)
!4551 = !{!4552}
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4550, file: !331, line: 637, baseType: !4553, size: 64)
!4553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 64)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !330, file: !331, line: 1005, baseType: !476, size: 128, offset: 10304)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !330, file: !331, line: 1007, baseType: !329, size: 64, offset: 10432)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !330, file: !331, line: 1009, baseType: !4557, size: 64, offset: 10496)
!4557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4558, size: 64)
!4558 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !331, line: 1009, flags: DIFlagFwdDecl)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !330, file: !331, line: 1043, baseType: !183, size: 64, offset: 10560)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !330, file: !331, line: 1046, baseType: !4561, size: 64, offset: 10624)
!4561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !330, file: !331, line: 1050, baseType: !4563, size: 64, offset: 10688)
!4563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4564, size: 64)
!4564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !48, line: 1236, size: 320, elements: !4565)
!4565 = !{!4566, !4567, !4568, !4569, !4570}
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !4564, file: !48, line: 1237, baseType: !298, size: 128)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !4564, file: !48, line: 1238, baseType: !298, size: 128, offset: 128)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !4564, file: !48, line: 1239, baseType: !180, size: 16, offset: 256)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !4564, file: !48, line: 1240, baseType: !754, size: 8, offset: 272)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !4564, file: !48, line: 1241, baseType: !754, size: 8, offset: 280)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !330, file: !331, line: 1054, baseType: !4572, size: 64, offset: 10752)
!4572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4573, size: 64)
!4573 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !331, line: 55, flags: DIFlagFwdDecl)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !330, file: !331, line: 1056, baseType: !3168, size: 64, offset: 10816)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !330, file: !331, line: 1058, baseType: !2946, size: 64, offset: 10880)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !330, file: !331, line: 1061, baseType: !4577, size: 64, offset: 10944)
!4577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4578, size: 64)
!4578 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !331, line: 43, flags: DIFlagFwdDecl)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !330, file: !331, line: 1064, baseType: !168, size: 64, offset: 11008)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !330, file: !331, line: 1065, baseType: !4581, size: 64, offset: 11072)
!4581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4582, size: 64)
!4582 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !4411, line: 14, baseType: !4583)
!4583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !4411, line: 12, size: 384, elements: !4584)
!4584 = !{!4585}
!4585 = !DIDerivedType(tag: DW_TAG_member, scope: !4583, file: !4411, line: 13, baseType: !4586, size: 384)
!4586 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4583, file: !4411, line: 13, size: 384, elements: !4587)
!4587 = !{!4588, !4589, !4590, !4591}
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !4586, file: !4411, line: 13, baseType: !74, size: 32)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !4586, file: !4411, line: 13, baseType: !74, size: 32, offset: 32)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !4586, file: !4411, line: 13, baseType: !74, size: 32, offset: 64)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !4586, file: !4411, line: 13, baseType: !4592, size: 256, offset: 128)
!4592 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !4593, line: 32, size: 256, elements: !4594)
!4593 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!4594 = !{!4595, !4600, !4613, !4619, !4628, !4648, !4653}
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !4592, file: !4593, line: 37, baseType: !4596, size: 64)
!4596 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4592, file: !4593, line: 34, size: 64, elements: !4597)
!4597 = !{!4598, !4599}
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4596, file: !4593, line: 35, baseType: !4275, size: 32)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4596, file: !4593, line: 36, baseType: !623, size: 32, offset: 32)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !4592, file: !4593, line: 45, baseType: !4601, size: 192)
!4601 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4592, file: !4593, line: 40, size: 192, elements: !4602)
!4602 = !{!4603, !4605, !4606, !4612}
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !4601, file: !4593, line: 41, baseType: !4604, size: 32)
!4604 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !290, line: 95, baseType: !74)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !4601, file: !4593, line: 42, baseType: !74, size: 32, offset: 32)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !4601, file: !4593, line: 43, baseType: !4607, size: 64, offset: 64)
!4607 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !4593, line: 11, baseType: !4608)
!4608 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !4593, line: 8, size: 64, elements: !4609)
!4609 = !{!4610, !4611}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !4608, file: !4593, line: 9, baseType: !74, size: 32)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !4608, file: !4593, line: 10, baseType: !183, size: 64)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !4601, file: !4593, line: 44, baseType: !74, size: 32, offset: 128)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !4592, file: !4593, line: 52, baseType: !4614, size: 128)
!4614 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4592, file: !4593, line: 48, size: 128, elements: !4615)
!4615 = !{!4616, !4617, !4618}
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4614, file: !4593, line: 49, baseType: !4275, size: 32)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4614, file: !4593, line: 50, baseType: !623, size: 32, offset: 32)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !4614, file: !4593, line: 51, baseType: !4607, size: 64, offset: 64)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !4592, file: !4593, line: 61, baseType: !4620, size: 256)
!4620 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4592, file: !4593, line: 55, size: 256, elements: !4621)
!4621 = !{!4622, !4623, !4624, !4625, !4627}
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !4620, file: !4593, line: 56, baseType: !4275, size: 32)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !4620, file: !4593, line: 57, baseType: !623, size: 32, offset: 32)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !4620, file: !4593, line: 58, baseType: !74, size: 32, offset: 64)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !4620, file: !4593, line: 59, baseType: !4626, size: 64, offset: 128)
!4626 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !290, line: 94, baseType: !978)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !4620, file: !4593, line: 60, baseType: !4626, size: 64, offset: 192)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !4592, file: !4593, line: 95, baseType: !4629, size: 256)
!4629 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4592, file: !4593, line: 64, size: 256, elements: !4630)
!4630 = !{!4631, !4632}
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !4629, file: !4593, line: 65, baseType: !183, size: 64)
!4632 = !DIDerivedType(tag: DW_TAG_member, scope: !4629, file: !4593, line: 77, baseType: !4633, size: 192, offset: 64)
!4633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4629, file: !4593, line: 77, size: 192, elements: !4634)
!4634 = !{!4635, !4636, !4643}
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !4633, file: !4593, line: 82, baseType: !1402, size: 16)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !4633, file: !4593, line: 88, baseType: !4637, size: 192)
!4637 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4633, file: !4593, line: 84, size: 192, elements: !4638)
!4638 = !{!4639, !4641, !4642}
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !4637, file: !4593, line: 85, baseType: !4640, size: 64)
!4640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 64, elements: !201)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !4637, file: !4593, line: 86, baseType: !183, size: 64, offset: 64)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !4637, file: !4593, line: 87, baseType: !183, size: 64, offset: 128)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !4633, file: !4593, line: 93, baseType: !4644, size: 96)
!4644 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4633, file: !4593, line: 90, size: 96, elements: !4645)
!4645 = !{!4646, !4647}
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !4644, file: !4593, line: 91, baseType: !4640, size: 64)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !4644, file: !4593, line: 92, baseType: !174, size: 32, offset: 64)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !4592, file: !4593, line: 101, baseType: !4649, size: 128)
!4649 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4592, file: !4593, line: 98, size: 128, elements: !4650)
!4650 = !{!4651, !4652}
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !4649, file: !4593, line: 99, baseType: !186, size: 64)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !4649, file: !4593, line: 100, baseType: !74, size: 32, offset: 64)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !4592, file: !4593, line: 108, baseType: !4654, size: 128)
!4654 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4592, file: !4593, line: 104, size: 128, elements: !4655)
!4655 = !{!4656, !4657, !4658}
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !4654, file: !4593, line: 105, baseType: !183, size: 64)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !4654, file: !4593, line: 106, baseType: !74, size: 32, offset: 64)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !4654, file: !4593, line: 107, baseType: !7, size: 32, offset: 96)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !330, file: !331, line: 1067, baseType: !4483, offset: 11136)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !330, file: !331, line: 1099, baseType: !4661, size: 64, offset: 11136)
!4661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4662, size: 64)
!4662 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !331, line: 56, flags: DIFlagFwdDecl)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !330, file: !331, line: 1103, baseType: !298, size: 128, offset: 11200)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !330, file: !331, line: 1104, baseType: !4665, size: 64, offset: 11328)
!4665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4666, size: 64)
!4666 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !331, line: 46, flags: DIFlagFwdDecl)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !330, file: !331, line: 1105, baseType: !901, size: 192, offset: 11392)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !330, file: !331, line: 1106, baseType: !7, size: 32, offset: 11584)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !330, file: !331, line: 1109, baseType: !4670, size: 128, offset: 11648)
!4670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4671, size: 128, elements: !1628)
!4671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4672, size: 64)
!4672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !73, line: 793, size: 1920, elements: !4673)
!4673 = !{!4674, !5156, !5157, !5158, !5159, !5164, !5165, !5166, !5167, !5168, !5169, !5170, !5171, !5172, !5173, !5174, !5175, !5176, !5177, !5178, !5179, !5180, !5181, !5182, !5183, !5184}
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "pmu", scope: !4672, file: !73, line: 794, baseType: !4675, size: 64)
!4675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4676, size: 64)
!4676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pmu", file: !73, line: 278, size: 2368, elements: !4677)
!4677 = !{!4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !5074, !5075, !5076, !5077, !5078, !5082, !5083, !5087, !5091, !5092, !5096, !5100, !5101, !5102, !5103, !5107, !5111, !5112, !5113, !5117, !5118, !5122, !5126, !5127, !5145, !5149, !5150, !5151, !5152}
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4676, file: !73, line: 279, baseType: !298, size: 128)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !4676, file: !73, line: 281, baseType: !308, size: 64, offset: 128)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4676, file: !73, line: 282, baseType: !2243, size: 64, offset: 192)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "attr_groups", scope: !4676, file: !73, line: 283, baseType: !2042, size: 64, offset: 256)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "attr_update", scope: !4676, file: !73, line: 284, baseType: !2042, size: 64, offset: 320)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4676, file: !73, line: 285, baseType: !281, size: 64, offset: 384)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4676, file: !73, line: 286, baseType: !74, size: 32, offset: 448)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !4676, file: !73, line: 291, baseType: !74, size: 32, offset: 480)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "pmu_disable_count", scope: !4676, file: !73, line: 293, baseType: !883, size: 64, offset: 512)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "pmu_cpu_context", scope: !4676, file: !73, line: 294, baseType: !4688, size: 64, offset: 576)
!4688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4689, size: 64)
!4689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_cpu_context", file: !73, line: 859, size: 2944, elements: !4690)
!4690 = !{!4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !5072}
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !4689, file: !73, line: 860, baseType: !4672, size: 1920)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "task_ctx", scope: !4689, file: !73, line: 861, baseType: !4671, size: 64, offset: 1920)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "active_oncpu", scope: !4689, file: !73, line: 862, baseType: !74, size: 32, offset: 1984)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "exclusive", scope: !4689, file: !73, line: 863, baseType: !74, size: 32, offset: 2016)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "hrtimer_lock", scope: !4689, file: !73, line: 865, baseType: !443, offset: 2048)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "hrtimer", scope: !4689, file: !73, line: 866, baseType: !418, size: 512, offset: 2048)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "hrtimer_interval", scope: !4689, file: !73, line: 867, baseType: !426, size: 64, offset: 2560)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "hrtimer_active", scope: !4689, file: !73, line: 868, baseType: !7, size: 32, offset: 2624)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "sched_cb_usage", scope: !4689, file: !73, line: 875, baseType: !74, size: 32, offset: 2656)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4689, file: !73, line: 877, baseType: !74, size: 32, offset: 2688)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "heap_size", scope: !4689, file: !73, line: 882, baseType: !74, size: 32, offset: 2720)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4689, file: !73, line: 883, baseType: !4703, size: 64, offset: 2752)
!4703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4704, size: 64)
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4705, size: 64)
!4705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !73, line: 625, size: 7424, elements: !4706)
!4706 = !{!4707, !4708, !4709, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4717, !4718, !4719, !4720, !4721, !4722, !4723, !4734, !4735, !4736, !4737, !4738, !4739, !4817, !4818, !4819, !4820, !4901, !4902, !4903, !4904, !4905, !4906, !4907, !4908, !4909, !4910, !4911, !4912, !4913, !4914, !4917, !4918, !4919, !4920, !4921, !4922, !4923, !4924, !4925, !4943, !4944, !4950, !4956, !4957, !4958, !4962, !4963, !4964, !4965, !4969, !5070, !5071}
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "event_entry", scope: !4705, file: !73, line: 632, baseType: !298, size: 128)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "sibling_list", scope: !4705, file: !73, line: 638, baseType: !298, size: 128, offset: 128)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "active_list", scope: !4705, file: !73, line: 639, baseType: !298, size: 128, offset: 256)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !4705, file: !73, line: 643, baseType: !371, size: 192, align: 64, offset: 384)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "group_index", scope: !4705, file: !73, line: 644, baseType: !197, size: 64, offset: 576)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_entry", scope: !4705, file: !73, line: 650, baseType: !298, size: 128, offset: 640)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "hlist_entry", scope: !4705, file: !73, line: 652, baseType: !320, size: 128, offset: 768)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "active_entry", scope: !4705, file: !73, line: 653, baseType: !298, size: 128, offset: 896)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "nr_siblings", scope: !4705, file: !73, line: 654, baseType: !74, size: 32, offset: 1024)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "event_caps", scope: !4705, file: !73, line: 657, baseType: !74, size: 32, offset: 1056)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "group_caps", scope: !4705, file: !73, line: 659, baseType: !74, size: 32, offset: 1088)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !4705, file: !73, line: 661, baseType: !4704, size: 64, offset: 1152)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "pmu", scope: !4705, file: !73, line: 662, baseType: !4675, size: 64, offset: 1216)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "pmu_private", scope: !4705, file: !73, line: 663, baseType: !183, size: 64, offset: 1280)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4705, file: !73, line: 665, baseType: !72, size: 32, offset: 1344)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "attach_state", scope: !4705, file: !73, line: 666, baseType: !7, size: 32, offset: 1376)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4705, file: !73, line: 667, baseType: !4724, size: 64, offset: 1408)
!4724 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !4725, line: 26, baseType: !4726)
!4725 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!4726 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4725, line: 24, size: 64, elements: !4727)
!4727 = !{!4728}
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !4726, file: !4725, line: 25, baseType: !4729, size: 64)
!4729 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !4730, line: 12, baseType: !4731)
!4730 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!4731 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4730, line: 10, size: 64, elements: !4732)
!4732 = !{!4733}
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !4731, file: !4730, line: 11, baseType: !905, size: 64)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4705, file: !73, line: 668, baseType: !907, size: 64, offset: 1472)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "total_time_enabled", scope: !4705, file: !73, line: 676, baseType: !197, size: 64, offset: 1536)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "total_time_running", scope: !4705, file: !73, line: 677, baseType: !197, size: 64, offset: 1600)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !4705, file: !73, line: 678, baseType: !197, size: 64, offset: 1664)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "shadow_ctx_time", scope: !4705, file: !73, line: 688, baseType: !197, size: 64, offset: 1728)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4705, file: !73, line: 690, baseType: !4740, size: 960, offset: 1792)
!4740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_attr", file: !4741, line: 317, size: 960, elements: !4742)
!4741 = !DIFile(filename: "./include/uapi/linux/perf_event.h", directory: "/home/lizy2001/genbc/linux")
!4742 = !{!4743, !4744, !4745, !4746, !4751, !4752, !4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4784, !4785, !4786, !4787, !4792, !4793, !4800, !4807, !4808, !4809, !4810, !4811, !4812, !4813, !4814, !4815, !4816}
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4740, file: !4741, line: 322, baseType: !174, size: 32)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4740, file: !4741, line: 327, baseType: !174, size: 32, offset: 32)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !4740, file: !4741, line: 332, baseType: !199, size: 64, offset: 64)
!4746 = !DIDerivedType(tag: DW_TAG_member, scope: !4740, file: !4741, line: 334, baseType: !4747, size: 64, offset: 128)
!4747 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4740, file: !4741, line: 334, size: 64, elements: !4748)
!4748 = !{!4749, !4750}
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "sample_period", scope: !4747, file: !4741, line: 335, baseType: !199, size: 64)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "sample_freq", scope: !4747, file: !4741, line: 336, baseType: !199, size: 64)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "sample_type", scope: !4740, file: !4741, line: 339, baseType: !199, size: 64, offset: 192)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "read_format", scope: !4740, file: !4741, line: 340, baseType: !199, size: 64, offset: 256)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "disabled", scope: !4740, file: !4741, line: 342, baseType: !199, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "inherit", scope: !4740, file: !4741, line: 343, baseType: !199, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "pinned", scope: !4740, file: !4741, line: 344, baseType: !199, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "exclusive", scope: !4740, file: !4741, line: 345, baseType: !199, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_user", scope: !4740, file: !4741, line: 346, baseType: !199, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_kernel", scope: !4740, file: !4741, line: 347, baseType: !199, size: 1, offset: 325, flags: DIFlagBitField, extraData: i64 320)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_hv", scope: !4740, file: !4741, line: 348, baseType: !199, size: 1, offset: 326, flags: DIFlagBitField, extraData: i64 320)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_idle", scope: !4740, file: !4741, line: 349, baseType: !199, size: 1, offset: 327, flags: DIFlagBitField, extraData: i64 320)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4740, file: !4741, line: 350, baseType: !199, size: 1, offset: 328, flags: DIFlagBitField, extraData: i64 320)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !4740, file: !4741, line: 351, baseType: !199, size: 1, offset: 329, flags: DIFlagBitField, extraData: i64 320)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !4740, file: !4741, line: 352, baseType: !199, size: 1, offset: 330, flags: DIFlagBitField, extraData: i64 320)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "inherit_stat", scope: !4740, file: !4741, line: 353, baseType: !199, size: 1, offset: 331, flags: DIFlagBitField, extraData: i64 320)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "enable_on_exec", scope: !4740, file: !4741, line: 354, baseType: !199, size: 1, offset: 332, flags: DIFlagBitField, extraData: i64 320)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4740, file: !4741, line: 355, baseType: !199, size: 1, offset: 333, flags: DIFlagBitField, extraData: i64 320)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "watermark", scope: !4740, file: !4741, line: 356, baseType: !199, size: 1, offset: 334, flags: DIFlagBitField, extraData: i64 320)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "precise_ip", scope: !4740, file: !4741, line: 367, baseType: !199, size: 2, offset: 335, flags: DIFlagBitField, extraData: i64 320)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_data", scope: !4740, file: !4741, line: 368, baseType: !199, size: 1, offset: 337, flags: DIFlagBitField, extraData: i64 320)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "sample_id_all", scope: !4740, file: !4741, line: 369, baseType: !199, size: 1, offset: 338, flags: DIFlagBitField, extraData: i64 320)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_host", scope: !4740, file: !4741, line: 371, baseType: !199, size: 1, offset: 339, flags: DIFlagBitField, extraData: i64 320)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_guest", scope: !4740, file: !4741, line: 372, baseType: !199, size: 1, offset: 340, flags: DIFlagBitField, extraData: i64 320)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_callchain_kernel", scope: !4740, file: !4741, line: 374, baseType: !199, size: 1, offset: 341, flags: DIFlagBitField, extraData: i64 320)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "exclude_callchain_user", scope: !4740, file: !4741, line: 375, baseType: !199, size: 1, offset: 342, flags: DIFlagBitField, extraData: i64 320)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "mmap2", scope: !4740, file: !4741, line: 376, baseType: !199, size: 1, offset: 343, flags: DIFlagBitField, extraData: i64 320)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "comm_exec", scope: !4740, file: !4741, line: 377, baseType: !199, size: 1, offset: 344, flags: DIFlagBitField, extraData: i64 320)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "use_clockid", scope: !4740, file: !4741, line: 378, baseType: !199, size: 1, offset: 345, flags: DIFlagBitField, extraData: i64 320)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "context_switch", scope: !4740, file: !4741, line: 379, baseType: !199, size: 1, offset: 346, flags: DIFlagBitField, extraData: i64 320)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "write_backward", scope: !4740, file: !4741, line: 380, baseType: !199, size: 1, offset: 347, flags: DIFlagBitField, extraData: i64 320)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "namespaces", scope: !4740, file: !4741, line: 381, baseType: !199, size: 1, offset: 348, flags: DIFlagBitField, extraData: i64 320)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "ksymbol", scope: !4740, file: !4741, line: 382, baseType: !199, size: 1, offset: 349, flags: DIFlagBitField, extraData: i64 320)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_event", scope: !4740, file: !4741, line: 383, baseType: !199, size: 1, offset: 350, flags: DIFlagBitField, extraData: i64 320)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "aux_output", scope: !4740, file: !4741, line: 384, baseType: !199, size: 1, offset: 351, flags: DIFlagBitField, extraData: i64 320)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup", scope: !4740, file: !4741, line: 385, baseType: !199, size: 1, offset: 352, flags: DIFlagBitField, extraData: i64 320)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "text_poke", scope: !4740, file: !4741, line: 386, baseType: !199, size: 1, offset: 353, flags: DIFlagBitField, extraData: i64 320)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "__reserved_1", scope: !4740, file: !4741, line: 387, baseType: !199, size: 30, offset: 354, flags: DIFlagBitField, extraData: i64 320)
!4787 = !DIDerivedType(tag: DW_TAG_member, scope: !4740, file: !4741, line: 389, baseType: !4788, size: 32, offset: 384)
!4788 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4740, file: !4741, line: 389, size: 32, elements: !4789)
!4789 = !{!4790, !4791}
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_events", scope: !4788, file: !4741, line: 390, baseType: !174, size: 32)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_watermark", scope: !4788, file: !4741, line: 391, baseType: !174, size: 32)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "bp_type", scope: !4740, file: !4741, line: 394, baseType: !174, size: 32, offset: 416)
!4793 = !DIDerivedType(tag: DW_TAG_member, scope: !4740, file: !4741, line: 395, baseType: !4794, size: 64, offset: 448)
!4794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4740, file: !4741, line: 395, size: 64, elements: !4795)
!4795 = !{!4796, !4797, !4798, !4799}
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "bp_addr", scope: !4794, file: !4741, line: 396, baseType: !199, size: 64)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_func", scope: !4794, file: !4741, line: 397, baseType: !199, size: 64)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "uprobe_path", scope: !4794, file: !4741, line: 398, baseType: !199, size: 64)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "config1", scope: !4794, file: !4741, line: 399, baseType: !199, size: 64)
!4800 = !DIDerivedType(tag: DW_TAG_member, scope: !4740, file: !4741, line: 401, baseType: !4801, size: 64, offset: 512)
!4801 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4740, file: !4741, line: 401, size: 64, elements: !4802)
!4802 = !{!4803, !4804, !4805, !4806}
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "bp_len", scope: !4801, file: !4741, line: 402, baseType: !199, size: 64)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_addr", scope: !4801, file: !4741, line: 403, baseType: !199, size: 64)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !4801, file: !4741, line: 404, baseType: !199, size: 64)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "config2", scope: !4801, file: !4741, line: 405, baseType: !199, size: 64)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "branch_sample_type", scope: !4740, file: !4741, line: 407, baseType: !199, size: 64, offset: 576)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "sample_regs_user", scope: !4740, file: !4741, line: 413, baseType: !199, size: 64, offset: 640)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "sample_stack_user", scope: !4740, file: !4741, line: 418, baseType: !174, size: 32, offset: 704)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !4740, file: !4741, line: 420, baseType: !1368, size: 32, offset: 736)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "sample_regs_intr", scope: !4740, file: !4741, line: 429, baseType: !199, size: 64, offset: 768)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "aux_watermark", scope: !4740, file: !4741, line: 434, baseType: !174, size: 32, offset: 832)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "sample_max_stack", scope: !4740, file: !4741, line: 435, baseType: !1000, size: 16, offset: 864)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "__reserved_2", scope: !4740, file: !4741, line: 436, baseType: !1000, size: 16, offset: 880)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "aux_sample_size", scope: !4740, file: !4741, line: 437, baseType: !174, size: 32, offset: 896)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "__reserved_3", scope: !4740, file: !4741, line: 438, baseType: !174, size: 32, offset: 928)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "header_size", scope: !4705, file: !73, line: 691, baseType: !999, size: 16, offset: 2752)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "id_header_size", scope: !4705, file: !73, line: 692, baseType: !999, size: 16, offset: 2768)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "read_size", scope: !4705, file: !73, line: 693, baseType: !999, size: 16, offset: 2784)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !4705, file: !73, line: 694, baseType: !4821, size: 1536, offset: 2816)
!4821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hw_perf_event", file: !73, line: 134, size: 1536, elements: !4822)
!4822 = !{!4823, !4878, !4879, !4880, !4881, !4882, !4883, !4884, !4897, !4898, !4899, !4900}
!4823 = !DIDerivedType(tag: DW_TAG_member, scope: !4821, file: !73, line: 136, baseType: !4824, size: 768)
!4824 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4821, file: !73, line: 136, size: 768, elements: !4825)
!4825 = !{!4826, !4845, !4849, !4853, !4858, !4870}
!4826 = !DIDerivedType(tag: DW_TAG_member, scope: !4824, file: !73, line: 137, baseType: !4827, size: 768)
!4827 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4824, file: !73, line: 137, size: 768, elements: !4828)
!4828 = !{!4829, !4830, !4831, !4832, !4833, !4834, !4835, !4836, !4837, !4844}
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !4827, file: !73, line: 138, baseType: !197, size: 64)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "last_tag", scope: !4827, file: !73, line: 139, baseType: !197, size: 64, offset: 64)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "config_base", scope: !4827, file: !73, line: 140, baseType: !168, size: 64, offset: 128)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "event_base", scope: !4827, file: !73, line: 141, baseType: !168, size: 64, offset: 192)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "event_base_rdpmc", scope: !4827, file: !73, line: 142, baseType: !74, size: 32, offset: 256)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !4827, file: !73, line: 143, baseType: !74, size: 32, offset: 288)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4827, file: !73, line: 144, baseType: !74, size: 32, offset: 320)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4827, file: !73, line: 145, baseType: !74, size: 32, offset: 352)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "extra_reg", scope: !4827, file: !73, line: 147, baseType: !4838, size: 192, offset: 384)
!4838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hw_perf_event_extra", file: !73, line: 124, size: 192, elements: !4839)
!4839 = !{!4840, !4841, !4842, !4843}
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !4838, file: !73, line: 125, baseType: !197, size: 64)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !4838, file: !73, line: 126, baseType: !7, size: 32, offset: 64)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4838, file: !73, line: 127, baseType: !74, size: 32, offset: 96)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !4838, file: !73, line: 128, baseType: !74, size: 32, offset: 128)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "branch_reg", scope: !4827, file: !73, line: 148, baseType: !4838, size: 192, offset: 576)
!4845 = !DIDerivedType(tag: DW_TAG_member, scope: !4824, file: !73, line: 150, baseType: !4846, size: 512)
!4846 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4824, file: !73, line: 150, size: 512, elements: !4847)
!4847 = !{!4848}
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "hrtimer", scope: !4846, file: !73, line: 151, baseType: !418, size: 512)
!4849 = !DIDerivedType(tag: DW_TAG_member, scope: !4824, file: !73, line: 153, baseType: !4850, size: 128)
!4850 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4824, file: !73, line: 153, size: 128, elements: !4851)
!4851 = !{!4852}
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "tp_list", scope: !4850, file: !73, line: 155, baseType: !298, size: 128)
!4853 = !DIDerivedType(tag: DW_TAG_member, scope: !4824, file: !73, line: 157, baseType: !4854, size: 128)
!4854 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4824, file: !73, line: 157, size: 128, elements: !4855)
!4855 = !{!4856, !4857}
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "pwr_acc", scope: !4854, file: !73, line: 158, baseType: !197, size: 64)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "ptsc", scope: !4854, file: !73, line: 159, baseType: !197, size: 64, offset: 64)
!4858 = !DIDerivedType(tag: DW_TAG_member, scope: !4824, file: !73, line: 162, baseType: !4859, size: 320)
!4859 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4824, file: !73, line: 162, size: 320, elements: !4860)
!4860 = !{!4861, !4869}
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4859, file: !73, line: 168, baseType: !4862, size: 192)
!4862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_hw_breakpoint", file: !4863, line: 14, size: 192, elements: !4864)
!4863 = !DIFile(filename: "./arch/x86/include/asm/hw_breakpoint.h", directory: "/home/lizy2001/genbc/linux")
!4864 = !{!4865, !4866, !4867, !4868}
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !4862, file: !4863, line: 15, baseType: !168, size: 64)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4862, file: !4863, line: 16, baseType: !168, size: 64, offset: 64)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4862, file: !4863, line: 17, baseType: !226, size: 8, offset: 128)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4862, file: !4863, line: 18, baseType: !226, size: 8, offset: 136)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "bp_list", scope: !4859, file: !73, line: 169, baseType: !298, size: 128, offset: 192)
!4870 = !DIDerivedType(tag: DW_TAG_member, scope: !4824, file: !73, line: 172, baseType: !4871, size: 192)
!4871 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4824, file: !73, line: 172, size: 192, elements: !4872)
!4872 = !{!4873, !4874, !4875, !4876, !4877}
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_bank", scope: !4871, file: !73, line: 173, baseType: !226, size: 8)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_cntr", scope: !4871, file: !73, line: 174, baseType: !226, size: 8, offset: 8)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4871, file: !73, line: 175, baseType: !999, size: 16, offset: 16)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "conf", scope: !4871, file: !73, line: 176, baseType: !197, size: 64, offset: 64)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "conf1", scope: !4871, file: !73, line: 177, baseType: !197, size: 64, offset: 128)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !4821, file: !73, line: 184, baseType: !329, size: 64, offset: 768)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filters", scope: !4821, file: !73, line: 190, baseType: !183, size: 64, offset: 832)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filters_gen", scope: !4821, file: !73, line: 193, baseType: !168, size: 64, offset: 896)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4821, file: !73, line: 202, baseType: !74, size: 32, offset: 960)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "prev_count", scope: !4821, file: !73, line: 208, baseType: !4724, size: 64, offset: 1024)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "sample_period", scope: !4821, file: !73, line: 213, baseType: !197, size: 64, offset: 1088)
!4884 = !DIDerivedType(tag: DW_TAG_member, scope: !4821, file: !73, line: 215, baseType: !4885, size: 128, offset: 1152)
!4885 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4821, file: !73, line: 215, size: 128, elements: !4886)
!4886 = !{!4887, !4892}
!4887 = !DIDerivedType(tag: DW_TAG_member, scope: !4885, file: !73, line: 216, baseType: !4888, size: 128)
!4888 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4885, file: !73, line: 216, size: 128, elements: !4889)
!4889 = !{!4890, !4891}
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "last_period", scope: !4888, file: !73, line: 220, baseType: !197, size: 64)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "period_left", scope: !4888, file: !73, line: 228, baseType: !4724, size: 64, offset: 64)
!4892 = !DIDerivedType(tag: DW_TAG_member, scope: !4885, file: !73, line: 230, baseType: !4893, size: 128)
!4893 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4885, file: !73, line: 230, size: 128, elements: !4894)
!4894 = !{!4895, !4896}
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "saved_metric", scope: !4893, file: !73, line: 231, baseType: !197, size: 64)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "saved_slots", scope: !4893, file: !73, line: 232, baseType: !197, size: 64, offset: 64)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts_seq", scope: !4821, file: !73, line: 240, baseType: !197, size: 64, offset: 1280)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts", scope: !4821, file: !73, line: 241, baseType: !197, size: 64, offset: 1344)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "freq_time_stamp", scope: !4821, file: !73, line: 247, baseType: !197, size: 64, offset: 1408)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "freq_count_stamp", scope: !4821, file: !73, line: 248, baseType: !197, size: 64, offset: 1472)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !4705, file: !73, line: 696, baseType: !4671, size: 64, offset: 4352)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4705, file: !73, line: 697, baseType: !905, size: 64, offset: 4416)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "child_total_time_enabled", scope: !4705, file: !73, line: 703, baseType: !907, size: 64, offset: 4480)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "child_total_time_running", scope: !4705, file: !73, line: 704, baseType: !907, size: 64, offset: 4544)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "child_mutex", scope: !4705, file: !73, line: 709, baseType: !901, size: 192, offset: 4608)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "child_list", scope: !4705, file: !73, line: 710, baseType: !298, size: 128, offset: 4800)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4705, file: !73, line: 711, baseType: !4704, size: 64, offset: 4928)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "oncpu", scope: !4705, file: !73, line: 713, baseType: !74, size: 32, offset: 4992)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !4705, file: !73, line: 714, baseType: !74, size: 32, offset: 5024)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "owner_entry", scope: !4705, file: !73, line: 716, baseType: !298, size: 128, offset: 5056)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4705, file: !73, line: 717, baseType: !329, size: 64, offset: 5184)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_mutex", scope: !4705, file: !73, line: 720, baseType: !901, size: 192, offset: 5248)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_count", scope: !4705, file: !73, line: 721, baseType: !347, size: 32, offset: 5440)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4705, file: !73, line: 723, baseType: !4915, size: 64, offset: 5504)
!4915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4916, size: 64)
!4916 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_buffer", file: !73, line: 611, flags: DIFlagFwdDecl)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "rb_entry", scope: !4705, file: !73, line: 724, baseType: !298, size: 128, offset: 5568)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_batches", scope: !4705, file: !73, line: 725, baseType: !168, size: 64, offset: 5696)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_pending", scope: !4705, file: !73, line: 726, baseType: !74, size: 32, offset: 5760)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4705, file: !73, line: 729, baseType: !1064, size: 128, offset: 5824)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4705, file: !73, line: 730, baseType: !1120, size: 64, offset: 5952)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "pending_wakeup", scope: !4705, file: !73, line: 733, baseType: !74, size: 32, offset: 6016)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "pending_kill", scope: !4705, file: !73, line: 734, baseType: !74, size: 32, offset: 6048)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "pending_disable", scope: !4705, file: !73, line: 735, baseType: !74, size: 32, offset: 6080)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !4705, file: !73, line: 736, baseType: !4926, size: 192, offset: 6144)
!4926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_work", file: !4927, line: 16, size: 192, elements: !4928)
!4927 = !DIFile(filename: "./include/linux/irq_work.h", directory: "/home/lizy2001/genbc/linux")
!4928 = !{!4929, !4938}
!4929 = !DIDerivedType(tag: DW_TAG_member, scope: !4926, file: !4927, line: 17, baseType: !4930, size: 128)
!4930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4926, file: !4927, line: 17, size: 128, elements: !4931)
!4931 = !{!4932, !4933}
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4930, file: !4927, line: 18, baseType: !3005, size: 128)
!4933 = !DIDerivedType(tag: DW_TAG_member, scope: !4930, file: !4927, line: 19, baseType: !4934, size: 128)
!4934 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4930, file: !4927, line: 19, size: 128, elements: !4935)
!4935 = !{!4936, !4937}
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "llnode", scope: !4934, file: !4927, line: 20, baseType: !945, size: 64)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4934, file: !4927, line: 21, baseType: !347, size: 32, offset: 64)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4926, file: !4927, line: 24, baseType: !4939, size: 64, offset: 128)
!4939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4940, size: 64)
!4940 = !DISubroutineType(types: !4941)
!4941 = !{null, !4942}
!4942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4926, size: 64)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "event_limit", scope: !4705, file: !73, line: 738, baseType: !347, size: 32, offset: 6336)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filters", scope: !4705, file: !73, line: 741, baseType: !4945, size: 192, offset: 6400)
!4945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_addr_filters_head", file: !73, line: 552, size: 192, elements: !4946)
!4946 = !{!4947, !4948, !4949}
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4945, file: !73, line: 553, baseType: !298, size: 128)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4945, file: !73, line: 554, baseType: !443, offset: 128)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "nr_file_filters", scope: !4945, file: !73, line: 555, baseType: !7, size: 32, offset: 128)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filter_ranges", scope: !4705, file: !73, line: 743, baseType: !4951, size: 64, offset: 6592)
!4951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4952, size: 64)
!4952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_addr_filter_range", file: !73, line: 558, size: 128, elements: !4953)
!4953 = !{!4954, !4955}
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4952, file: !73, line: 559, baseType: !168, size: 64)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4952, file: !73, line: 560, baseType: !168, size: 64, offset: 64)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filters_gen", scope: !4705, file: !73, line: 744, baseType: !168, size: 64, offset: 6656)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "aux_event", scope: !4705, file: !73, line: 747, baseType: !4704, size: 64, offset: 6720)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !4705, file: !73, line: 749, baseType: !4959, size: 64, offset: 6784)
!4959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4960, size: 64)
!4960 = !DISubroutineType(types: !4961)
!4961 = !{null, !4704}
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !4705, file: !73, line: 750, baseType: !951, size: 128, align: 64, offset: 6848)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4705, file: !73, line: 752, baseType: !1282, size: 64, offset: 6976)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4705, file: !73, line: 753, baseType: !197, size: 64, offset: 7040)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !4705, file: !73, line: 755, baseType: !4966, size: 64, offset: 7104)
!4966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4967, size: 64)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{!197}
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_handler", scope: !4705, file: !73, line: 756, baseType: !4970, size: 64, offset: 7168)
!4970 = !DIDerivedType(tag: DW_TAG_typedef, name: "perf_overflow_handler_t", file: !73, line: 578, baseType: !4971)
!4971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4972, size: 64)
!4972 = !DISubroutineType(types: !4973)
!4973 = !{null, !4704, !4974, !240}
!4974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4975, size: 64)
!4975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_sample_data", file: !73, line: 992, size: 1536, align: 512, elements: !4976)
!4976 = !{!4977, !4978, !4999, !5018, !5019, !5020, !5021, !5037, !5038, !5039, !5044, !5045, !5046, !5047, !5052, !5059, !5060, !5066, !5067, !5068, !5069}
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4975, file: !73, line: 997, baseType: !197, size: 64)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4975, file: !73, line: 998, baseType: !4979, size: 64, offset: 64)
!4979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4980, size: 64)
!4980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_raw_record", file: !73, line: 88, size: 256, elements: !4981)
!4981 = !{!4982, !4998}
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "frag", scope: !4980, file: !73, line: 89, baseType: !4983, size: 224)
!4983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_raw_frag", file: !73, line: 78, size: 224, elements: !4984)
!4984 = !{!4985, !4991, !4996, !4997}
!4985 = !DIDerivedType(tag: DW_TAG_member, scope: !4983, file: !73, line: 79, baseType: !4986, size: 64)
!4986 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4983, file: !73, line: 79, size: 64, elements: !4987)
!4987 = !{!4988, !4990}
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4986, file: !73, line: 80, baseType: !4989, size: 64)
!4989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4983, size: 64)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4986, file: !73, line: 81, baseType: !168, size: 64)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "copy", scope: !4983, file: !73, line: 83, baseType: !4992, size: 64, offset: 64)
!4992 = !DIDerivedType(tag: DW_TAG_typedef, name: "perf_copy_f", file: !73, line: 75, baseType: !4993)
!4993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4994, size: 64)
!4994 = !DISubroutineType(types: !4995)
!4995 = !{!168, !183, !2095, !168, !168}
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4983, file: !73, line: 84, baseType: !183, size: 64, offset: 128)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4983, file: !73, line: 85, baseType: !205, size: 32, offset: 192)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4980, file: !73, line: 90, baseType: !205, size: 32, offset: 224)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "br_stack", scope: !4975, file: !73, line: 999, baseType: !5000, size: 64, offset: 128)
!5000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5001, size: 64)
!5001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_branch_stack", file: !73, line: 113, size: 128, elements: !5002)
!5002 = !{!5003, !5004, !5005}
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !5001, file: !73, line: 114, baseType: !199, size: 64)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "hw_idx", scope: !5001, file: !73, line: 115, baseType: !199, size: 64, offset: 64)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !5001, file: !73, line: 116, baseType: !5006, offset: 128)
!5006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5007, elements: !2714)
!5007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_branch_entry", file: !4741, line: 1235, size: 192, elements: !5008)
!5008 = !{!5009, !5010, !5011, !5012, !5013, !5014, !5015, !5016, !5017}
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !5007, file: !4741, line: 1236, baseType: !199, size: 64)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !5007, file: !4741, line: 1237, baseType: !199, size: 64, offset: 64)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "mispred", scope: !5007, file: !4741, line: 1238, baseType: !199, size: 1, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "predicted", scope: !5007, file: !4741, line: 1239, baseType: !199, size: 1, offset: 129, flags: DIFlagBitField, extraData: i64 128)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "in_tx", scope: !5007, file: !4741, line: 1240, baseType: !199, size: 1, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "abort", scope: !5007, file: !4741, line: 1241, baseType: !199, size: 1, offset: 131, flags: DIFlagBitField, extraData: i64 128)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "cycles", scope: !5007, file: !4741, line: 1242, baseType: !199, size: 16, offset: 132, flags: DIFlagBitField, extraData: i64 128)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5007, file: !4741, line: 1243, baseType: !199, size: 4, offset: 148, flags: DIFlagBitField, extraData: i64 128)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5007, file: !4741, line: 1244, baseType: !199, size: 40, offset: 152, flags: DIFlagBitField, extraData: i64 128)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !4975, file: !73, line: 1000, baseType: !197, size: 64, offset: 192)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !4975, file: !73, line: 1001, baseType: !197, size: 64, offset: 256)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "txn", scope: !4975, file: !73, line: 1002, baseType: !197, size: 64, offset: 320)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "data_src", scope: !4975, file: !73, line: 1003, baseType: !5022, size: 64, offset: 384)
!5022 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "perf_mem_data_src", file: !4741, line: 1115, size: 64, elements: !5023)
!5023 = !{!5024, !5025}
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !5022, file: !4741, line: 1116, baseType: !199, size: 64)
!5025 = !DIDerivedType(tag: DW_TAG_member, scope: !5022, file: !4741, line: 1117, baseType: !5026, size: 64)
!5026 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5022, file: !4741, line: 1117, size: 64, elements: !5027)
!5027 = !{!5028, !5029, !5030, !5031, !5032, !5033, !5034, !5035, !5036}
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "mem_op", scope: !5026, file: !4741, line: 1118, baseType: !199, size: 5, flags: DIFlagBitField, extraData: i64 0)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "mem_lvl", scope: !5026, file: !4741, line: 1119, baseType: !199, size: 14, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "mem_snoop", scope: !5026, file: !4741, line: 1120, baseType: !199, size: 5, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "mem_lock", scope: !5026, file: !4741, line: 1121, baseType: !199, size: 2, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "mem_dtlb", scope: !5026, file: !4741, line: 1122, baseType: !199, size: 7, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "mem_lvl_num", scope: !5026, file: !4741, line: 1123, baseType: !199, size: 4, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "mem_remote", scope: !5026, file: !4741, line: 1124, baseType: !199, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "mem_snoopx", scope: !5026, file: !4741, line: 1125, baseType: !199, size: 2, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "mem_rsvd", scope: !5026, file: !4741, line: 1126, baseType: !199, size: 24, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4975, file: !73, line: 1009, baseType: !197, size: 64, offset: 448)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4975, file: !73, line: 1010, baseType: !197, size: 64, offset: 512)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "tid_entry", scope: !4975, file: !73, line: 1014, baseType: !5040, size: 64, offset: 576)
!5040 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4975, file: !73, line: 1011, size: 64, elements: !5041)
!5041 = !{!5042, !5043}
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5040, file: !73, line: 1012, baseType: !205, size: 32)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "tid", scope: !5040, file: !73, line: 1013, baseType: !205, size: 32, offset: 32)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !4975, file: !73, line: 1015, baseType: !197, size: 64, offset: 640)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4975, file: !73, line: 1016, baseType: !197, size: 64, offset: 704)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !4975, file: !73, line: 1017, baseType: !197, size: 64, offset: 768)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_entry", scope: !4975, file: !73, line: 1021, baseType: !5048, size: 64, offset: 832)
!5048 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4975, file: !73, line: 1018, size: 64, elements: !5049)
!5049 = !{!5050, !5051}
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !5048, file: !73, line: 1019, baseType: !205, size: 32)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5048, file: !73, line: 1020, baseType: !205, size: 32, offset: 32)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "callchain", scope: !4975, file: !73, line: 1022, baseType: !5053, size: 64, offset: 896)
!5053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5054, size: 64)
!5054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_callchain_entry", file: !73, line: 62, size: 64, elements: !5055)
!5055 = !{!5056, !5057}
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !5054, file: !73, line: 63, baseType: !199, size: 64)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5054, file: !73, line: 64, baseType: !5058, offset: 64)
!5058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, elements: !2714)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "aux_size", scope: !4975, file: !73, line: 1023, baseType: !197, size: 64, offset: 960)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "regs_user", scope: !4975, file: !73, line: 1025, baseType: !5061, size: 128, offset: 1024)
!5061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_regs", file: !5062, line: 7, size: 128, elements: !5063)
!5062 = !DIFile(filename: "./include/linux/perf_regs.h", directory: "/home/lizy2001/genbc/linux")
!5063 = !{!5064, !5065}
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "abi", scope: !5061, file: !5062, line: 8, baseType: !199, size: 64)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5061, file: !5062, line: 9, baseType: !240, size: 64, offset: 64)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "regs_intr", scope: !4975, file: !73, line: 1026, baseType: !5061, size: 128, offset: 1152)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "stack_user_size", scope: !4975, file: !73, line: 1027, baseType: !197, size: 64, offset: 1280)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4975, file: !73, line: 1029, baseType: !197, size: 64, offset: 1344)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup", scope: !4975, file: !73, line: 1030, baseType: !197, size: 64, offset: 1408)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_handler_context", scope: !4705, file: !73, line: 757, baseType: !183, size: 64, offset: 7232)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "sb_list", scope: !4705, file: !73, line: 778, baseType: !298, size: 128, offset: 7296)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "heap_default", scope: !4689, file: !73, line: 884, baseType: !5073, size: 128, offset: 2816)
!5073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4704, size: 128, elements: !1628)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "exclusive_cnt", scope: !4676, file: !73, line: 295, baseType: !347, size: 32, offset: 640)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "task_ctx_nr", scope: !4676, file: !73, line: 296, baseType: !74, size: 32, offset: 672)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "hrtimer_interval_ms", scope: !4676, file: !73, line: 297, baseType: !74, size: 32, offset: 704)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "nr_addr_filters", scope: !4676, file: !73, line: 300, baseType: !7, size: 32, offset: 736)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "pmu_enable", scope: !4676, file: !73, line: 306, baseType: !5079, size: 64, offset: 768)
!5079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5080, size: 64)
!5080 = !DISubroutineType(types: !5081)
!5081 = !{null, !4675}
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "pmu_disable", scope: !4676, file: !73, line: 307, baseType: !5079, size: 64, offset: 832)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "event_init", scope: !4676, file: !73, line: 325, baseType: !5084, size: 64, offset: 896)
!5084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5085, size: 64)
!5085 = !DISubroutineType(types: !5086)
!5086 = !{!74, !4704}
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "event_mapped", scope: !4676, file: !73, line: 331, baseType: !5088, size: 64, offset: 960)
!5088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5089, size: 64)
!5089 = !DISubroutineType(types: !5090)
!5090 = !{null, !4704, !506}
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "event_unmapped", scope: !4676, file: !73, line: 332, baseType: !5088, size: 64, offset: 1024)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !4676, file: !73, line: 360, baseType: !5093, size: 64, offset: 1088)
!5093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5094, size: 64)
!5094 = !DISubroutineType(types: !5095)
!5095 = !{!74, !4704, !74}
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "del", scope: !4676, file: !73, line: 361, baseType: !5097, size: 64, offset: 1152)
!5097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5098, size: 64)
!5098 = !DISubroutineType(types: !5099)
!5099 = !{null, !4704, !74}
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4676, file: !73, line: 381, baseType: !5097, size: 64, offset: 1216)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !4676, file: !73, line: 382, baseType: !5097, size: 64, offset: 1280)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4676, file: !73, line: 390, baseType: !4959, size: 64, offset: 1344)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "start_txn", scope: !4676, file: !73, line: 402, baseType: !5104, size: 64, offset: 1408)
!5104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5105, size: 64)
!5105 = !DISubroutineType(types: !5106)
!5106 = !{null, !4675, !7}
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "commit_txn", scope: !4676, file: !73, line: 411, baseType: !5108, size: 64, offset: 1472)
!5108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5109, size: 64)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{!74, !4675}
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "cancel_txn", scope: !4676, file: !73, line: 418, baseType: !5079, size: 64, offset: 1536)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "event_idx", scope: !4676, file: !73, line: 424, baseType: !5084, size: 64, offset: 1600)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "sched_task", scope: !4676, file: !73, line: 429, baseType: !5114, size: 64, offset: 1664)
!5114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5115, size: 64)
!5115 = !DISubroutineType(types: !5116)
!5116 = !{null, !4671, !754}
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "task_ctx_cache", scope: !4676, file: !73, line: 435, baseType: !1308, size: 64, offset: 1728)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "swap_task_ctx", scope: !4676, file: !73, line: 443, baseType: !5119, size: 64, offset: 1792)
!5119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5120, size: 64)
!5120 = !DISubroutineType(types: !5121)
!5121 = !{null, !4671, !4671}
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "setup_aux", scope: !4676, file: !73, line: 450, baseType: !5123, size: 64, offset: 1856)
!5123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5124, size: 64)
!5124 = !DISubroutineType(types: !5125)
!5125 = !{!183, !4704, !1181, !74, !754}
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "free_aux", scope: !4676, file: !73, line: 457, baseType: !2104, size: 64, offset: 1920)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "snapshot_aux", scope: !4676, file: !73, line: 468, baseType: !5128, size: 64, offset: 1984)
!5128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5129, size: 64)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{!186, !4704, !5131, !168}
!5131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5132, size: 64)
!5132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_output_handle", file: !73, line: 887, size: 448, elements: !5133)
!5133 = !{!5134, !5135, !5136, !5137, !5138, !5139, !5144}
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5132, file: !73, line: 888, baseType: !4704, size: 64)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !5132, file: !73, line: 889, baseType: !4915, size: 64, offset: 64)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !5132, file: !73, line: 890, baseType: !168, size: 64, offset: 128)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5132, file: !73, line: 891, baseType: !168, size: 64, offset: 192)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "aux_flags", scope: !5132, file: !73, line: 892, baseType: !197, size: 64, offset: 256)
!5139 = !DIDerivedType(tag: DW_TAG_member, scope: !5132, file: !73, line: 893, baseType: !5140, size: 64, offset: 320)
!5140 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5132, file: !73, line: 893, size: 64, elements: !5141)
!5141 = !{!5142, !5143}
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5140, file: !73, line: 894, baseType: !183, size: 64)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5140, file: !73, line: 895, baseType: !168, size: 64)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5132, file: !73, line: 897, baseType: !74, size: 32, offset: 384)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filters_validate", scope: !4676, file: !73, line: 480, baseType: !5146, size: 64, offset: 2048)
!5146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5147, size: 64)
!5147 = !DISubroutineType(types: !5148)
!5148 = !{!74, !301}
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "addr_filters_sync", scope: !4676, file: !73, line: 494, baseType: !4959, size: 64, offset: 2112)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "aux_output_match", scope: !4676, file: !73, line: 504, baseType: !5084, size: 64, offset: 2176)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "filter_match", scope: !4676, file: !73, line: 510, baseType: !5084, size: 64, offset: 2240)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "check_period", scope: !4676, file: !73, line: 515, baseType: !5153, size: 64, offset: 2304)
!5153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5154, size: 64)
!5154 = !DISubroutineType(types: !5155)
!5155 = !{!74, !4704, !197}
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4672, file: !73, line: 799, baseType: !443, offset: 64)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4672, file: !73, line: 805, baseType: !901, size: 192, offset: 64)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "active_ctx_list", scope: !4672, file: !73, line: 807, baseType: !298, size: 128, offset: 256)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_groups", scope: !4672, file: !73, line: 808, baseType: !5160, size: 128, offset: 384)
!5160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_groups", file: !73, line: 783, size: 128, elements: !5161)
!5161 = !{!5162, !5163}
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !5160, file: !73, line: 784, baseType: !479, size: 64)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5160, file: !73, line: 785, baseType: !197, size: 64, offset: 64)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "flexible_groups", scope: !4672, file: !73, line: 809, baseType: !5160, size: 128, offset: 512)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !4672, file: !73, line: 810, baseType: !298, size: 128, offset: 640)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_active", scope: !4672, file: !73, line: 812, baseType: !298, size: 128, offset: 768)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "flexible_active", scope: !4672, file: !73, line: 813, baseType: !298, size: 128, offset: 896)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "nr_events", scope: !4672, file: !73, line: 815, baseType: !74, size: 32, offset: 1024)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active", scope: !4672, file: !73, line: 816, baseType: !74, size: 32, offset: 1056)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "is_active", scope: !4672, file: !73, line: 817, baseType: !74, size: 32, offset: 1088)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "nr_stat", scope: !4672, file: !73, line: 818, baseType: !74, size: 32, offset: 1120)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "nr_freq", scope: !4672, file: !73, line: 819, baseType: !74, size: 32, offset: 1152)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "rotate_disable", scope: !4672, file: !73, line: 820, baseType: !74, size: 32, offset: 1184)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "rotate_necessary", scope: !4672, file: !73, line: 825, baseType: !74, size: 32, offset: 1216)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4672, file: !73, line: 826, baseType: !342, size: 32, offset: 1248)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4672, file: !73, line: 827, baseType: !329, size: 64, offset: 1280)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !4672, file: !73, line: 832, baseType: !197, size: 64, offset: 1344)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !4672, file: !73, line: 833, baseType: !197, size: 64, offset: 1408)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "parent_ctx", scope: !4672, file: !73, line: 839, baseType: !4671, size: 64, offset: 1472)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "parent_gen", scope: !4672, file: !73, line: 840, baseType: !197, size: 64, offset: 1536)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "generation", scope: !4672, file: !73, line: 841, baseType: !197, size: 64, offset: 1600)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "pin_count", scope: !4672, file: !73, line: 842, baseType: !74, size: 32, offset: 1664)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "task_ctx_data", scope: !4672, file: !73, line: 846, baseType: !183, size: 64, offset: 1728)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !4672, file: !73, line: 847, baseType: !951, size: 128, align: 64, offset: 1792)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !330, file: !331, line: 1110, baseType: !901, size: 192, offset: 11776)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !330, file: !331, line: 1111, baseType: !298, size: 128, offset: 11968)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !330, file: !331, line: 1173, baseType: !5188, size: 64, offset: 12096)
!5188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5189, size: 64)
!5189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !5190, line: 62, size: 256, align: 256, elements: !5191)
!5190 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!5191 = !{!5192, !5193, !5194, !5199}
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !5189, file: !5190, line: 75, baseType: !174, size: 32)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !5189, file: !5190, line: 90, baseType: !174, size: 32, offset: 32)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !5189, file: !5190, line: 124, baseType: !5195, size: 64, offset: 64)
!5195 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5189, file: !5190, line: 109, size: 64, elements: !5196)
!5196 = !{!5197, !5198}
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !5195, file: !5190, line: 110, baseType: !199, size: 64)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5195, file: !5190, line: 112, baseType: !199, size: 64)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5189, file: !5190, line: 144, baseType: !174, size: 32, offset: 128)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !330, file: !331, line: 1174, baseType: !205, size: 32, offset: 12160)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !330, file: !331, line: 1179, baseType: !168, size: 64, offset: 12224)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !330, file: !331, line: 1182, baseType: !5203, size: 128, offset: 12288)
!5203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !4113, line: 76, size: 128, elements: !5204)
!5204 = !{!5205, !5210, !5211}
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5203, file: !4113, line: 85, baseType: !5206, size: 64)
!5206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !5207, line: 7, size: 64, elements: !5208)
!5207 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!5208 = !{!5209}
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !5206, file: !5207, line: 12, baseType: !273, size: 64)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !5203, file: !4113, line: 88, baseType: !754, size: 8, offset: 64)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !5203, file: !4113, line: 95, baseType: !754, size: 8, offset: 72)
!5212 = !DIDerivedType(tag: DW_TAG_member, scope: !330, file: !331, line: 1184, baseType: !5213, size: 128, offset: 12416)
!5213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !330, file: !331, line: 1184, size: 128, elements: !5214)
!5214 = !{!5215, !5216}
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !5213, file: !331, line: 1185, baseType: !342, size: 32)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5213, file: !331, line: 1186, baseType: !951, size: 128, align: 64)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !330, file: !331, line: 1190, baseType: !1224, size: 64, offset: 12544)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !330, file: !331, line: 1192, baseType: !5219, size: 128, offset: 12608)
!5219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !4113, line: 64, size: 128, elements: !5220)
!5220 = !{!5221, !5222, !5223}
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5219, file: !4113, line: 65, baseType: !594, size: 64)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5219, file: !4113, line: 67, baseType: !174, size: 32, offset: 64)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5219, file: !4113, line: 68, baseType: !174, size: 32, offset: 96)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !330, file: !331, line: 1206, baseType: !74, size: 32, offset: 12736)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !330, file: !331, line: 1207, baseType: !74, size: 32, offset: 12768)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !330, file: !331, line: 1209, baseType: !168, size: 64, offset: 12800)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !330, file: !331, line: 1219, baseType: !197, size: 64, offset: 12864)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !330, file: !331, line: 1220, baseType: !197, size: 64, offset: 12928)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !330, file: !331, line: 1317, baseType: !74, size: 32, offset: 12992)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !330, file: !331, line: 1319, baseType: !329, size: 64, offset: 13056)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !330, file: !331, line: 1322, baseType: !5232, size: 64, offset: 13120)
!5232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5233, size: 64)
!5233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !5234, line: 56, size: 512, elements: !5235)
!5234 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!5235 = !{!5236, !5237, !5238, !5239, !5240, !5241, !5242, !5244}
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5233, file: !5234, line: 57, baseType: !5232, size: 64)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5233, file: !5234, line: 58, baseType: !183, size: 64, offset: 64)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5233, file: !5234, line: 59, baseType: !168, size: 64, offset: 128)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5233, file: !5234, line: 60, baseType: !168, size: 64, offset: 192)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5233, file: !5234, line: 61, baseType: !3845, size: 64, offset: 256)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !5233, file: !5234, line: 62, baseType: !7, size: 32, offset: 320)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !5233, file: !5234, line: 63, baseType: !5243, size: 64, offset: 384)
!5243 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !188, line: 153, baseType: !197)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !5233, file: !5234, line: 64, baseType: !2095, size: 64, offset: 448)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !330, file: !331, line: 1326, baseType: !342, size: 32, offset: 13184)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !330, file: !331, line: 1342, baseType: !183, size: 64, offset: 13248)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !330, file: !331, line: 1343, baseType: !199, size: 64, offset: 13312)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !330, file: !331, line: 1344, baseType: !197, size: 64, offset: 13376)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !330, file: !331, line: 1345, baseType: !199, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !330, file: !331, line: 1346, baseType: !199, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !330, file: !331, line: 1347, baseType: !199, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !330, file: !331, line: 1348, baseType: !951, size: 128, align: 64, offset: 13504)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !330, file: !331, line: 1358, baseType: !5254, size: 34816, offset: 13824)
!5254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !5255, line: 485, size: 34816, elements: !5256)
!5255 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!5256 = !{!5257, !5275, !5276, !5277, !5278, !5279, !5280, !5281, !5282, !5284, !5285, !5286, !5287, !5288, !5289, !5292, !5293, !5294}
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !5254, file: !5255, line: 487, baseType: !5258, size: 192)
!5258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5259, size: 192, elements: !813)
!5259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !5260, line: 16, size: 64, elements: !5261)
!5260 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!5261 = !{!5262, !5263, !5264, !5265, !5266, !5267, !5268, !5269, !5270, !5271, !5272, !5273, !5274}
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !5259, file: !5260, line: 17, baseType: !999, size: 16)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !5259, file: !5260, line: 18, baseType: !999, size: 16, offset: 16)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !5259, file: !5260, line: 19, baseType: !999, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5259, file: !5260, line: 19, baseType: !999, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !5259, file: !5260, line: 19, baseType: !999, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !5259, file: !5260, line: 19, baseType: !999, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5259, file: !5260, line: 19, baseType: !999, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !5259, file: !5260, line: 20, baseType: !999, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !5259, file: !5260, line: 20, baseType: !999, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !5259, file: !5260, line: 20, baseType: !999, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !5259, file: !5260, line: 20, baseType: !999, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5259, file: !5260, line: 20, baseType: !999, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !5259, file: !5260, line: 20, baseType: !999, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5254, file: !5255, line: 491, baseType: !168, size: 64, offset: 192)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !5254, file: !5255, line: 495, baseType: !180, size: 16, offset: 256)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !5254, file: !5255, line: 496, baseType: !180, size: 16, offset: 272)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !5254, file: !5255, line: 497, baseType: !180, size: 16, offset: 288)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !5254, file: !5255, line: 498, baseType: !180, size: 16, offset: 304)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !5254, file: !5255, line: 502, baseType: !168, size: 64, offset: 320)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !5254, file: !5255, line: 503, baseType: !168, size: 64, offset: 384)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !5254, file: !5255, line: 514, baseType: !5283, size: 256, offset: 448)
!5283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4704, size: 256, elements: !176)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !5254, file: !5255, line: 516, baseType: !168, size: 64, offset: 704)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !5254, file: !5255, line: 518, baseType: !168, size: 64, offset: 768)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !5254, file: !5255, line: 520, baseType: !168, size: 64, offset: 832)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !5254, file: !5255, line: 521, baseType: !168, size: 64, offset: 896)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !5254, file: !5255, line: 522, baseType: !168, size: 64, offset: 960)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !5254, file: !5255, line: 528, baseType: !5290, size: 64, offset: 1024)
!5290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5291, size: 64)
!5291 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !5255, line: 10, flags: DIFlagFwdDecl)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !5254, file: !5255, line: 535, baseType: !168, size: 64, offset: 1088)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !5254, file: !5255, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !5254, file: !5255, line: 540, baseType: !5295, size: 33280, offset: 1536)
!5295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !5296, line: 317, size: 33280, elements: !5297)
!5296 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!5297 = !{!5298, !5299, !5300}
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !5295, file: !5296, line: 330, baseType: !7, size: 32)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !5295, file: !5296, line: 337, baseType: !168, size: 64, offset: 64)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5295, file: !5296, line: 348, baseType: !5301, size: 32768, offset: 512)
!5301 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !5296, line: 304, size: 32768, elements: !5302)
!5302 = !{!5303, !5318, !5355, !5380, !5393}
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !5301, file: !5296, line: 305, baseType: !5304, size: 896)
!5304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !5296, line: 12, size: 896, elements: !5305)
!5305 = !{!5306, !5307, !5308, !5309, !5310, !5311, !5312, !5313, !5317}
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5304, file: !5296, line: 13, baseType: !205, size: 32)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5304, file: !5296, line: 14, baseType: !205, size: 32, offset: 32)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5304, file: !5296, line: 15, baseType: !205, size: 32, offset: 64)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5304, file: !5296, line: 16, baseType: !205, size: 32, offset: 96)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5304, file: !5296, line: 17, baseType: !205, size: 32, offset: 128)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5304, file: !5296, line: 18, baseType: !205, size: 32, offset: 160)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5304, file: !5296, line: 19, baseType: !205, size: 32, offset: 192)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5304, file: !5296, line: 22, baseType: !5314, size: 640, offset: 224)
!5314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 640, elements: !5315)
!5315 = !{!5316}
!5316 = !DISubrange(count: 20)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5304, file: !5296, line: 25, baseType: !205, size: 32, offset: 864)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !5301, file: !5296, line: 306, baseType: !5319, size: 4096, align: 128)
!5319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !5296, line: 34, size: 4096, align: 128, elements: !5320)
!5320 = !{!5321, !5322, !5323, !5324, !5325, !5340, !5341, !5342, !5344, !5346, !5350}
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5319, file: !5296, line: 35, baseType: !999, size: 16)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5319, file: !5296, line: 36, baseType: !999, size: 16, offset: 16)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5319, file: !5296, line: 37, baseType: !999, size: 16, offset: 32)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !5319, file: !5296, line: 38, baseType: !999, size: 16, offset: 48)
!5325 = !DIDerivedType(tag: DW_TAG_member, scope: !5319, file: !5296, line: 39, baseType: !5326, size: 128, offset: 64)
!5326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5319, file: !5296, line: 39, size: 128, elements: !5327)
!5327 = !{!5328, !5333}
!5328 = !DIDerivedType(tag: DW_TAG_member, scope: !5326, file: !5296, line: 40, baseType: !5329, size: 128)
!5329 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5326, file: !5296, line: 40, size: 128, elements: !5330)
!5330 = !{!5331, !5332}
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !5329, file: !5296, line: 41, baseType: !197, size: 64)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !5329, file: !5296, line: 42, baseType: !197, size: 64, offset: 64)
!5333 = !DIDerivedType(tag: DW_TAG_member, scope: !5326, file: !5296, line: 44, baseType: !5334, size: 128)
!5334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5326, file: !5296, line: 44, size: 128, elements: !5335)
!5335 = !{!5336, !5337, !5338, !5339}
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5334, file: !5296, line: 45, baseType: !205, size: 32)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5334, file: !5296, line: 46, baseType: !205, size: 32, offset: 32)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5334, file: !5296, line: 47, baseType: !205, size: 32, offset: 64)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5334, file: !5296, line: 48, baseType: !205, size: 32, offset: 96)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !5319, file: !5296, line: 51, baseType: !205, size: 32, offset: 192)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !5319, file: !5296, line: 52, baseType: !205, size: 32, offset: 224)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5319, file: !5296, line: 55, baseType: !5343, size: 1024, offset: 256)
!5343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 1024, elements: !678)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !5319, file: !5296, line: 58, baseType: !5345, size: 2048, offset: 1280)
!5345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 2048, elements: !2004)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5319, file: !5296, line: 60, baseType: !5347, size: 384, offset: 3328)
!5347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 384, elements: !5348)
!5348 = !{!5349}
!5349 = !DISubrange(count: 12)
!5350 = !DIDerivedType(tag: DW_TAG_member, scope: !5319, file: !5296, line: 62, baseType: !5351, size: 384, offset: 3712)
!5351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5319, file: !5296, line: 62, size: 384, elements: !5352)
!5352 = !{!5353, !5354}
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !5351, file: !5296, line: 63, baseType: !5347, size: 384)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !5351, file: !5296, line: 64, baseType: !5347, size: 384)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !5301, file: !5296, line: 307, baseType: !5356, size: 1088)
!5356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !5296, line: 79, size: 1088, elements: !5357)
!5357 = !{!5358, !5359, !5360, !5361, !5362, !5363, !5364, !5365, !5366, !5367, !5368, !5369, !5370, !5371, !5372, !5379}
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5356, file: !5296, line: 80, baseType: !205, size: 32)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5356, file: !5296, line: 81, baseType: !205, size: 32, offset: 32)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5356, file: !5296, line: 82, baseType: !205, size: 32, offset: 64)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5356, file: !5296, line: 83, baseType: !205, size: 32, offset: 96)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5356, file: !5296, line: 84, baseType: !205, size: 32, offset: 128)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5356, file: !5296, line: 85, baseType: !205, size: 32, offset: 160)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5356, file: !5296, line: 86, baseType: !205, size: 32, offset: 192)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5356, file: !5296, line: 88, baseType: !5314, size: 640, offset: 224)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !5356, file: !5296, line: 89, baseType: !226, size: 8, offset: 864)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5356, file: !5296, line: 90, baseType: !226, size: 8, offset: 872)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !5356, file: !5296, line: 91, baseType: !226, size: 8, offset: 880)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !5356, file: !5296, line: 92, baseType: !226, size: 8, offset: 888)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !5356, file: !5296, line: 93, baseType: !226, size: 8, offset: 896)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !5356, file: !5296, line: 94, baseType: !226, size: 8, offset: 904)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5356, file: !5296, line: 95, baseType: !5373, size: 64, offset: 960)
!5373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5374, size: 64)
!5374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !5375, line: 11, size: 128, elements: !5376)
!5375 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!5376 = !{!5377, !5378}
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !5374, file: !5375, line: 12, baseType: !186, size: 64)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5374, file: !5375, line: 13, baseType: !240, size: 64, offset: 64)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !5356, file: !5296, line: 96, baseType: !205, size: 32, offset: 1024)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !5301, file: !5296, line: 308, baseType: !5381, size: 4608, align: 512)
!5381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !5296, line: 289, size: 4608, align: 512, elements: !5382)
!5382 = !{!5383, !5384, !5391}
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !5381, file: !5296, line: 290, baseType: !5319, size: 4096, align: 128)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !5381, file: !5296, line: 291, baseType: !5385, size: 512, offset: 4096)
!5385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !5296, line: 268, size: 512, elements: !5386)
!5386 = !{!5387, !5388, !5389}
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !5385, file: !5296, line: 269, baseType: !197, size: 64)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !5385, file: !5296, line: 270, baseType: !197, size: 64, offset: 64)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5385, file: !5296, line: 271, baseType: !5390, size: 384, offset: 128)
!5390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !197, size: 384, elements: !1420)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !5381, file: !5296, line: 292, baseType: !5392, offset: 4608)
!5392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, elements: !1674)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !5301, file: !5296, line: 309, baseType: !5394, size: 32768)
!5394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 32768, elements: !5395)
!5395 = !{!5396}
!5396 = !DISubrange(count: 4096)
!5397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!5398 = !{!5399, !5451, !5456, !5461, !5472, !5477, !5482, !5484, !5486, !5491, !5494, !5499, !5501, !5503, !5505, !0, !5507, !5512, !5514, !5516, !5521, !5549, !5552, !5557, !5561, !5563, !5565, !5567, !5572, !5574, !5576, !5578, !5586, !5588, !5590, !5592, !5595, !5597, !5599, !5601, !5603, !5606, !5608, !5610}
!5399 = !DIGlobalVariableExpression(var: !5400, expr: !DIExpression())
!5400 = distinct !DIGlobalVariable(name: "__param_ratelimit_disable", scope: !2, file: !3, line: 481, type: !5401, isLocal: true, isDefinition: true, align: 64)
!5401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5402)
!5402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !5403, line: 69, size: 320, elements: !5404)
!5403 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!5404 = !{!5405, !5406, !5407, !5423, !5425, !5429, !5430}
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5402, file: !5403, line: 70, baseType: !281, size: 64)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !5402, file: !5403, line: 71, baseType: !308, size: 64, offset: 64)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5402, file: !5403, line: 72, baseType: !5408, size: 64, offset: 128)
!5408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5409, size: 64)
!5409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5410)
!5410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !5403, line: 47, size: 256, elements: !5411)
!5411 = !{!5412, !5413, !5418, !5422}
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5410, file: !5403, line: 49, baseType: !7, size: 32)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !5410, file: !5403, line: 51, baseType: !5414, size: 64, offset: 64)
!5414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5415, size: 64)
!5415 = !DISubroutineType(types: !5416)
!5416 = !{!74, !281, !5417}
!5417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5401, size: 64)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5410, file: !5403, line: 53, baseType: !5419, size: 64, offset: 128)
!5419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5420, size: 64)
!5420 = !DISubroutineType(types: !5421)
!5421 = !{!74, !184, !5417}
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5410, file: !5403, line: 55, baseType: !2104, size: 64, offset: 192)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !5402, file: !5403, line: 73, baseType: !5424, size: 16, offset: 192)
!5424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !999)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !5402, file: !5403, line: 74, baseType: !5426, size: 8, offset: 208)
!5426 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !198, line: 16, baseType: !5427)
!5427 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !175, line: 20, baseType: !5428)
!5428 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5402, file: !5403, line: 75, baseType: !226, size: 8, offset: 216)
!5430 = !DIDerivedType(tag: DW_TAG_member, scope: !5402, file: !5403, line: 76, baseType: !5431, size: 64, offset: 256)
!5431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5402, file: !5403, line: 76, size: 64, elements: !5432)
!5432 = !{!5433, !5434, !5441}
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !5431, file: !5403, line: 77, baseType: !183, size: 64)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5431, file: !5403, line: 78, baseType: !5435, size: 64)
!5435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5436, size: 64)
!5436 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5437)
!5437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !5403, line: 86, size: 128, elements: !5438)
!5438 = !{!5439, !5440}
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !5437, file: !5403, line: 87, baseType: !7, size: 32)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !5437, file: !5403, line: 88, baseType: !184, size: 64, offset: 64)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !5431, file: !5403, line: 79, baseType: !5442, size: 64)
!5442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5443, size: 64)
!5443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5444)
!5444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !5403, line: 92, size: 256, elements: !5445)
!5445 = !{!5446, !5447, !5448, !5449, !5450}
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5444, file: !5403, line: 94, baseType: !7, size: 32)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !5444, file: !5403, line: 95, baseType: !7, size: 32, offset: 32)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5444, file: !5403, line: 96, baseType: !3515, size: 64, offset: 64)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5444, file: !5403, line: 97, baseType: !5408, size: 64, offset: 128)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !5444, file: !5403, line: 98, baseType: !183, size: 64, offset: 192)
!5451 = !DIGlobalVariableExpression(var: !5452, expr: !DIExpression())
!5452 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ratelimit_disabletype304", scope: !2, file: !3, line: 481, type: !5453, isLocal: true, isDefinition: true, align: 8)
!5453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 304, elements: !5454)
!5454 = !{!5455}
!5455 = !DISubrange(count: 38)
!5456 = !DIGlobalVariableExpression(var: !5457, expr: !DIExpression())
!5457 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ratelimit_disable305", scope: !2, file: !3, line: 482, type: !5458, isLocal: true, isDefinition: true, align: 8)
!5458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 536, elements: !5459)
!5459 = !{!5460}
!5460 = !DISubrange(count: 67)
!5461 = !DIGlobalVariableExpression(var: !5462, expr: !DIExpression())
!5462 = distinct !DIGlobalVariable(name: "__setup_parse_trust_cpu", scope: !2, file: !3, line: 782, type: !5463, isLocal: true, isDefinition: true, align: 64)
!5463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obs_kernel_param", file: !5464, line: 241, size: 192, elements: !5465)
!5464 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!5465 = !{!5466, !5467, !5471}
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5463, file: !5464, line: 242, baseType: !281, size: 64)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "setup_func", scope: !5463, file: !5464, line: 243, baseType: !5468, size: 64, offset: 64)
!5468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5469, size: 64)
!5469 = !DISubroutineType(types: !5470)
!5470 = !{!74, !184}
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "early", scope: !5463, file: !5464, line: 244, baseType: !74, size: 32, offset: 128)
!5472 = !DIGlobalVariableExpression(var: !5473, expr: !DIExpression())
!5473 = distinct !DIGlobalVariable(name: "last_value", scope: !5474, file: !3, line: 1204, type: !182, isLocal: true, isDefinition: true)
!5474 = distinct !DISubprogram(name: "add_input_randomness", scope: !3, file: !3, line: 1201, type: !5475, scopeLine: 1203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5475 = !DISubroutineType(types: !5476)
!5476 = !{null, !7, !7, !7}
!5477 = !DIGlobalVariableExpression(var: !5478, expr: !DIExpression())
!5478 = distinct !DIGlobalVariable(name: "previous", scope: !5479, file: !3, line: 1572, type: !183, isLocal: true, isDefinition: true)
!5479 = distinct !DISubprogram(name: "get_random_bytes", scope: !3, file: !3, line: 1570, type: !5480, scopeLine: 1571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5480 = !DISubroutineType(types: !5481)
!5481 = !{null, !183, !74}
!5482 = !DIGlobalVariableExpression(var: !5483, expr: !DIExpression())
!5483 = distinct !DIGlobalVariable(name: "random_fops", scope: !2, file: !3, line: 1988, type: !963, isLocal: false, isDefinition: true)
!5484 = !DIGlobalVariableExpression(var: !5485, expr: !DIExpression())
!5485 = distinct !DIGlobalVariable(name: "urandom_fops", scope: !2, file: !3, line: 1998, type: !963, isLocal: false, isDefinition: true)
!5486 = !DIGlobalVariableExpression(var: !5487, expr: !DIExpression())
!5487 = distinct !DIGlobalVariable(name: "random_table", scope: !2, file: !3, line: 2105, type: !5488, isLocal: false, isDefinition: true)
!5488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1514, size: 3584, elements: !5489)
!5489 = !{!5490}
!5490 = !DISubrange(count: 7)
!5491 = !DIGlobalVariableExpression(var: !5492, expr: !DIExpression())
!5492 = distinct !DIGlobalVariable(name: "previous", scope: !5493, file: !3, line: 2195, type: !183, isLocal: true, isDefinition: true)
!5493 = distinct !DISubprogram(name: "get_random_u64", scope: !3, file: !3, line: 2190, type: !4967, scopeLine: 2191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5494 = !DIGlobalVariableExpression(var: !5495, expr: !DIExpression())
!5495 = distinct !DIGlobalVariable(name: "previous", scope: !5496, file: !3, line: 2219, type: !183, isLocal: true, isDefinition: true)
!5496 = distinct !DISubprogram(name: "get_random_u32", scope: !3, file: !3, line: 2214, type: !5497, scopeLine: 2215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5497 = !DISubroutineType(types: !5498)
!5498 = !{!205}
!5499 = !DIGlobalVariableExpression(var: !5500, expr: !DIExpression())
!5500 = distinct !DIGlobalVariable(name: "ratelimit_disable", scope: !2, file: !3, line: 479, type: !74, isLocal: true, isDefinition: true)
!5501 = !DIGlobalVariableExpression(var: !5502, expr: !DIExpression())
!5502 = distinct !DIGlobalVariable(name: "irq_randomness", scope: !2, file: !3, line: 1217, type: !170, isLocal: true, isDefinition: true)
!5503 = !DIGlobalVariableExpression(var: !5504, expr: !DIExpression())
!5504 = distinct !DIGlobalVariable(name: "min_write_thresh", scope: !2, file: !3, line: 2045, type: !74, isLocal: true, isDefinition: true)
!5505 = !DIGlobalVariableExpression(var: !5506, expr: !DIExpression())
!5506 = distinct !DIGlobalVariable(name: "sysctl_bootid", scope: !2, file: !3, line: 2048, type: !4330, isLocal: true, isDefinition: true)
!5507 = !DIGlobalVariableExpression(var: !5508, expr: !DIExpression())
!5508 = distinct !DIGlobalVariable(name: "__setup_str_parse_trust_cpu", scope: !2, file: !3, line: 782, type: !5509, isLocal: true, isDefinition: true, align: 8)
!5509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 136, elements: !5510)
!5510 = !{!5511}
!5511 = !DISubrange(count: 17)
!5512 = !DIGlobalVariableExpression(var: !5513, expr: !DIExpression())
!5513 = distinct !DIGlobalVariable(name: "trust_cpu", scope: !2, file: !3, line: 777, type: !754, isLocal: true, isDefinition: true)
!5514 = !DIGlobalVariableExpression(var: !5515, expr: !DIExpression())
!5515 = distinct !DIGlobalVariable(name: "crng_init", scope: !2, file: !3, line: 463, type: !74, isLocal: true, isDefinition: true)
!5516 = !DIGlobalVariableExpression(var: !5517, expr: !DIExpression())
!5517 = distinct !DIGlobalVariable(name: "lfsr", scope: !5518, file: !3, line: 920, type: !182, isLocal: true, isDefinition: true)
!5518 = distinct !DISubprogram(name: "crng_slow_load", scope: !3, file: !3, line: 917, type: !5519, scopeLine: 918, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5519 = !DISubroutineType(types: !5520)
!5520 = !{!74, !281, !288}
!5521 = !DIGlobalVariableExpression(var: !5522, expr: !DIExpression())
!5522 = distinct !DIGlobalVariable(name: "input_pool", scope: !2, file: !3, line: 516, type: !5523, isLocal: true, isDefinition: true)
!5523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_store", file: !3, line: 492, size: 384, elements: !5524)
!5524 = !{!5525, !5539, !5540, !5541, !5542, !5543, !5544, !5545, !5546, !5547}
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "poolinfo", scope: !5523, file: !3, line: 494, baseType: !5526, size: 64)
!5526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5527, size: 64)
!5527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5528)
!5528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poolinfo", file: !3, line: 426, size: 288, elements: !5529)
!5529 = !{!5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5538}
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "poolbitshift", scope: !5528, file: !3, line: 427, baseType: !74, size: 32)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "poolwords", scope: !5528, file: !3, line: 427, baseType: !74, size: 32, offset: 32)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "poolbytes", scope: !5528, file: !3, line: 427, baseType: !74, size: 32, offset: 64)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "poolfracbits", scope: !5528, file: !3, line: 427, baseType: !74, size: 32, offset: 96)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "tap1", scope: !5528, file: !3, line: 429, baseType: !74, size: 32, offset: 128)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "tap2", scope: !5528, file: !3, line: 429, baseType: !74, size: 32, offset: 160)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "tap3", scope: !5528, file: !3, line: 429, baseType: !74, size: 32, offset: 192)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "tap4", scope: !5528, file: !3, line: 429, baseType: !74, size: 32, offset: 224)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "tap5", scope: !5528, file: !3, line: 429, baseType: !74, size: 32, offset: 256)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !5523, file: !3, line: 495, baseType: !265, size: 64, offset: 64)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5523, file: !3, line: 496, baseType: !281, size: 64, offset: 128)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5523, file: !3, line: 499, baseType: !210, offset: 192)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "add_ptr", scope: !5523, file: !3, line: 500, baseType: !180, size: 16, offset: 192)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "input_rotate", scope: !5523, file: !3, line: 501, baseType: !180, size: 16, offset: 208)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "entropy_count", scope: !5523, file: !3, line: 502, baseType: !74, size: 32, offset: 224)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !5523, file: !3, line: 503, baseType: !7, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "last_data_init", scope: !5523, file: !3, line: 504, baseType: !7, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "last_data", scope: !5523, file: !3, line: 505, baseType: !5548, size: 80, offset: 264)
!5548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 80, elements: !1594)
!5549 = !DIGlobalVariableExpression(var: !5550, expr: !DIExpression())
!5550 = distinct !DIGlobalVariable(name: "poolinfo_table", scope: !2, file: !3, line: 430, type: !5551, isLocal: true, isDefinition: true)
!5551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5527, size: 288, elements: !278)
!5552 = !DIGlobalVariableExpression(var: !5553, expr: !DIExpression())
!5553 = distinct !DIGlobalVariable(name: "input_pool_data", scope: !2, file: !3, line: 514, type: !5554, isLocal: true, isDefinition: true)
!5554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 4096, elements: !5555)
!5555 = !{!5556}
!5556 = !DISubrange(count: 128)
!5557 = !DIGlobalVariableExpression(var: !5558, expr: !DIExpression())
!5558 = distinct !DIGlobalVariable(name: "twist_table", scope: !2, file: !3, line: 523, type: !5559, isLocal: true, isDefinition: true)
!5559 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5560, size: 256, elements: !201)
!5560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !174)
!5561 = !DIGlobalVariableExpression(var: !5562, expr: !DIExpression())
!5562 = distinct !DIGlobalVariable(name: "input_timer_state", scope: !2, file: !3, line: 1140, type: !3430, isLocal: true, isDefinition: true)
!5563 = !DIGlobalVariableExpression(var: !5564, expr: !DIExpression())
!5564 = distinct !DIGlobalVariable(name: "crng_init_cnt", scope: !2, file: !3, line: 465, type: !74, isLocal: true, isDefinition: true)
!5565 = !DIGlobalVariableExpression(var: !5566, expr: !DIExpression())
!5566 = distinct !DIGlobalVariable(name: "fasync", scope: !2, file: !3, line: 440, type: !1120, isLocal: true, isDefinition: true)
!5567 = !DIGlobalVariableExpression(var: !5568, expr: !DIExpression())
!5568 = distinct !DIGlobalVariable(name: "print_once", scope: !5569, file: !3, line: 1522, type: !754, isLocal: true, isDefinition: true)
!5569 = distinct !DISubprogram(name: "_warn_unseeded_randomness", scope: !3, file: !3, line: 1516, type: !5570, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5570 = !DISubroutineType(types: !5571)
!5571 = !{null, !281, !183, !1181}
!5572 = !DIGlobalVariableExpression(var: !5573, expr: !DIExpression())
!5573 = distinct !DIGlobalVariable(name: "crng_init_wait", scope: !2, file: !3, line: 762, type: !1065, isLocal: true, isDefinition: true)
!5574 = !DIGlobalVariableExpression(var: !5575, expr: !DIExpression())
!5575 = distinct !DIGlobalVariable(name: "random_ready_list_lock", scope: !2, file: !3, line: 442, type: !210, isLocal: true, isDefinition: true)
!5576 = !DIGlobalVariableExpression(var: !5577, expr: !DIExpression())
!5577 = distinct !DIGlobalVariable(name: "random_ready_list", scope: !2, file: !3, line: 443, type: !298, isLocal: true, isDefinition: true)
!5578 = !DIGlobalVariableExpression(var: !5579, expr: !DIExpression())
!5579 = distinct !DIGlobalVariable(name: "primary_crng", scope: !2, file: !3, line: 451, type: !5580, isLocal: true, isDefinition: true)
!5580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crng_state", file: !3, line: 445, size: 576, elements: !5581)
!5581 = !{!5582, !5584, !5585}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5580, file: !3, line: 446, baseType: !5583, size: 512)
!5583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 512, elements: !206)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "init_time", scope: !5580, file: !3, line: 447, baseType: !168, size: 64, offset: 512)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5580, file: !3, line: 448, baseType: !210, offset: 576)
!5586 = !DIGlobalVariableExpression(var: !5587, expr: !DIExpression())
!5587 = distinct !DIGlobalVariable(name: "crng_global_init_time", scope: !2, file: !3, line: 466, type: !168, isLocal: true, isDefinition: true)
!5588 = !DIGlobalVariableExpression(var: !5589, expr: !DIExpression())
!5589 = distinct !DIGlobalVariable(name: "urandom_warning", scope: !2, file: !3, line: 476, type: !1655, isLocal: true, isDefinition: true)
!5590 = !DIGlobalVariableExpression(var: !5591, expr: !DIExpression())
!5591 = distinct !DIGlobalVariable(name: "unseeded_warning", scope: !2, file: !3, line: 474, type: !1655, isLocal: true, isDefinition: true)
!5592 = !DIGlobalVariableExpression(var: !5593, expr: !DIExpression())
!5593 = distinct !DIGlobalVariable(name: "maxwarn", scope: !5594, file: !3, line: 1844, type: !74, isLocal: true, isDefinition: true)
!5594 = distinct !DISubprogram(name: "urandom_read", scope: !3, file: !3, line: 1841, type: !974, scopeLine: 1842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5595 = !DIGlobalVariableExpression(var: !5596, expr: !DIExpression())
!5596 = distinct !DIGlobalVariable(name: "sysctl_poolsize", scope: !2, file: !3, line: 2103, type: !74, isLocal: true, isDefinition: true)
!5597 = !DIGlobalVariableExpression(var: !5598, expr: !DIExpression())
!5598 = distinct !DIGlobalVariable(name: "random_write_wakeup_bits", scope: !2, file: !3, line: 379, type: !74, isLocal: true, isDefinition: true)
!5599 = !DIGlobalVariableExpression(var: !5600, expr: !DIExpression())
!5600 = distinct !DIGlobalVariable(name: "max_write_thresh", scope: !2, file: !3, line: 2046, type: !74, isLocal: true, isDefinition: true)
!5601 = !DIGlobalVariableExpression(var: !5602, expr: !DIExpression())
!5602 = distinct !DIGlobalVariable(name: "random_min_urandom_seed", scope: !2, file: !3, line: 2047, type: !74, isLocal: true, isDefinition: true)
!5603 = !DIGlobalVariableExpression(var: !5604, expr: !DIExpression())
!5604 = distinct !DIGlobalVariable(name: "bootid_spinlock", scope: !5605, file: !3, line: 2070, type: !210, isLocal: true, isDefinition: true)
!5605 = distinct !DISubprogram(name: "proc_do_uuid", scope: !3, file: !3, line: 2059, type: !1524, scopeLine: 2061, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5606 = !DIGlobalVariableExpression(var: !5607, expr: !DIExpression())
!5607 = distinct !DIGlobalVariable(name: "batched_entropy_u64", scope: !2, file: !3, line: 2186, type: !190, isLocal: true, isDefinition: true)
!5608 = !DIGlobalVariableExpression(var: !5609, expr: !DIExpression())
!5609 = distinct !DIGlobalVariable(name: "batched_entropy_u32", scope: !2, file: !3, line: 2211, type: !190, isLocal: true, isDefinition: true)
!5610 = !DIGlobalVariableExpression(var: !5611, expr: !DIExpression())
!5611 = distinct !DIGlobalVariable(name: "random_write_wait", scope: !2, file: !3, line: 439, type: !1065, isLocal: true, isDefinition: true)
!5612 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 200, elements: !5613)
!5613 = !{!5614}
!5614 = !DISubrange(count: 25)
!5615 = !{!"rsp"}
!5616 = !{i32 7, !"Dwarf Version", i32 4}
!5617 = !{i32 2, !"Debug Info Version", i32 3}
!5618 = !{i32 1, !"wchar_size", i32 2}
!5619 = !{i32 1, !"Code Model", i32 2}
!5620 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!5621 = distinct !DISubprogram(name: "parse_trust_cpu", scope: !3, file: !3, line: 778, type: !5469, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5622 = !DILocalVariable(name: "arg", arg: 1, scope: !5621, file: !3, line: 778, type: !184)
!5623 = !DILocation(line: 778, column: 41, scope: !5621)
!5624 = !DILocation(line: 780, column: 20, scope: !5621)
!5625 = !DILocation(line: 780, column: 9, scope: !5621)
!5626 = !DILocation(line: 780, column: 2, scope: !5621)
!5627 = distinct !DISubprogram(name: "add_device_randomness", scope: !3, file: !3, line: 1124, type: !5628, scopeLine: 1125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5628 = !DISubroutineType(types: !5629)
!5629 = !{null, !2095, !7}
!5630 = !DILocalVariable(name: "lock", arg: 1, scope: !5631, file: !5632, line: 407, type: !4029)
!5631 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !5632, file: !5632, line: 407, type: !5633, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5632 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!5633 = !DISubroutineType(types: !5634)
!5634 = !{null, !4029, !168}
!5635 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !5636)
!5636 = distinct !DILocation(line: 1136, column: 2, scope: !5627)
!5637 = !DILocalVariable(name: "flags", arg: 2, scope: !5631, file: !5632, line: 407, type: !168)
!5638 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !5636)
!5639 = !DILocalVariable(name: "lock", arg: 1, scope: !5640, file: !5632, line: 327, type: !4029)
!5640 = distinct !DISubprogram(name: "spinlock_check", scope: !5632, file: !5632, line: 327, type: !5641, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5641 = !DISubroutineType(types: !5642)
!5642 = !{!5643, !4029}
!5643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!5644 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !5645)
!5645 = distinct !DILocation(line: 1133, column: 2, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5647, file: !3, line: 1133, column: 2)
!5647 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 1133, column: 2)
!5648 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 1133, column: 2)
!5649 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 1133, column: 2)
!5650 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 1133, column: 2)
!5651 = !DILocalVariable(name: "buf", arg: 1, scope: !5627, file: !3, line: 1124, type: !2095)
!5652 = !DILocation(line: 1124, column: 40, scope: !5627)
!5653 = !DILocalVariable(name: "size", arg: 2, scope: !5627, file: !3, line: 1124, type: !7)
!5654 = !DILocation(line: 1124, column: 58, scope: !5627)
!5655 = !DILocalVariable(name: "time", scope: !5627, file: !3, line: 1126, type: !168)
!5656 = !DILocation(line: 1126, column: 16, scope: !5627)
!5657 = !DILocation(line: 1126, column: 23, scope: !5627)
!5658 = !DILocation(line: 1126, column: 46, scope: !5627)
!5659 = !DILocation(line: 1126, column: 44, scope: !5627)
!5660 = !DILocalVariable(name: "flags", scope: !5627, file: !3, line: 1127, type: !168)
!5661 = !DILocation(line: 1127, column: 16, scope: !5627)
!5662 = !DILocation(line: 1129, column: 7, scope: !5663)
!5663 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 1129, column: 6)
!5664 = !DILocation(line: 1129, column: 20, scope: !5663)
!5665 = !DILocation(line: 1129, column: 23, scope: !5663)
!5666 = !DILocation(line: 1129, column: 6, scope: !5627)
!5667 = !DILocation(line: 1130, column: 18, scope: !5663)
!5668 = !DILocation(line: 1130, column: 23, scope: !5663)
!5669 = !DILocation(line: 1130, column: 3, scope: !5663)
!5670 = !DILocation(line: 1132, column: 30, scope: !5627)
!5671 = !DILocation(line: 1132, column: 36, scope: !5627)
!5672 = !DILocation(line: 1132, column: 2, scope: !5627)
!5673 = !DILocation(line: 1133, column: 2, scope: !5627)
!5674 = !DILocation(line: 1133, column: 2, scope: !5650)
!5675 = !DILocalVariable(name: "__dummy", scope: !5676, file: !3, line: 1133, type: !168)
!5676 = distinct !DILexicalBlock(scope: !5649, file: !3, line: 1133, column: 2)
!5677 = !DILocation(line: 1133, column: 2, scope: !5676)
!5678 = !DILocalVariable(name: "__dummy2", scope: !5676, file: !3, line: 1133, type: !168)
!5679 = !DILocation(line: 1133, column: 2, scope: !5649)
!5680 = !DILocation(line: 1133, column: 2, scope: !5648)
!5681 = !DILocation(line: 1133, column: 2, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 1133, column: 2)
!5683 = !DILocalVariable(name: "__dummy", scope: !5684, file: !3, line: 1133, type: !168)
!5684 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 1133, column: 2)
!5685 = distinct !DILexicalBlock(scope: !5682, file: !3, line: 1133, column: 2)
!5686 = !DILocation(line: 1133, column: 2, scope: !5684)
!5687 = !DILocalVariable(name: "__dummy2", scope: !5684, file: !3, line: 1133, type: !168)
!5688 = !DILocation(line: 1133, column: 2, scope: !5685)
!5689 = !DILocation(line: 1133, column: 2, scope: !5647)
!5690 = !{i32 -2140134533}
!5691 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !5645)
!5692 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !5645)
!5693 = !DILocation(line: 1133, column: 2, scope: !5646)
!5694 = !DILocation(line: 1134, column: 31, scope: !5627)
!5695 = !DILocation(line: 1134, column: 36, scope: !5627)
!5696 = !DILocation(line: 1134, column: 2, scope: !5627)
!5697 = !DILocation(line: 1135, column: 31, scope: !5627)
!5698 = !DILocation(line: 1135, column: 2, scope: !5627)
!5699 = !DILocation(line: 1136, column: 43, scope: !5627)
!5700 = !DILocalVariable(name: "__dummy", scope: !5701, file: !5632, line: 409, type: !168)
!5701 = distinct !DILexicalBlock(scope: !5702, file: !5632, line: 409, column: 2)
!5702 = distinct !DILexicalBlock(scope: !5631, file: !5632, line: 409, column: 2)
!5703 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !5636)
!5704 = !DILocalVariable(name: "__dummy2", scope: !5701, file: !5632, line: 409, type: !168)
!5705 = !DILocalVariable(name: "__dummy", scope: !5706, file: !5632, line: 409, type: !168)
!5706 = distinct !DILexicalBlock(scope: !5707, file: !5632, line: 409, column: 2)
!5707 = distinct !DILexicalBlock(scope: !5708, file: !5632, line: 409, column: 2)
!5708 = distinct !DILexicalBlock(scope: !5709, file: !5632, line: 409, column: 2)
!5709 = distinct !DILexicalBlock(scope: !5702, file: !5632, line: 409, column: 2)
!5710 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !5636)
!5711 = !DILocalVariable(name: "__dummy2", scope: !5706, file: !5632, line: 409, type: !168)
!5712 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !5636)
!5713 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !5636)
!5714 = distinct !DILexicalBlock(scope: !5709, file: !5632, line: 409, column: 2)
!5715 = !{i32 -2145268779}
!5716 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !5636)
!5717 = distinct !DILexicalBlock(scope: !5714, file: !5632, line: 409, column: 2)
!5718 = !DILocation(line: 1137, column: 1, scope: !5627)
!5719 = distinct !DISubprogram(name: "get_cycles", scope: !234, file: !234, line: 21, type: !5720, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5720 = !DISubroutineType(types: !5721)
!5721 = !{!233}
!5722 = !DILocalVariable(name: "low", scope: !5723, file: !5724, line: 201, type: !168)
!5723 = distinct !DISubprogram(name: "rdtsc", scope: !5724, file: !5724, line: 199, type: !5725, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5724 = !DIFile(filename: "./arch/x86/include/asm/msr.h", directory: "/home/lizy2001/genbc/linux")
!5725 = !DISubroutineType(types: !5726)
!5726 = !{!200}
!5727 = !DILocation(line: 201, column: 2, scope: !5723, inlinedAt: !5728)
!5728 = distinct !DILocation(line: 28, column: 9, scope: !5719)
!5729 = !DILocalVariable(name: "high", scope: !5723, file: !5724, line: 201, type: !168)
!5730 = !DILocation(line: 203, column: 2, scope: !5723, inlinedAt: !5728)
!5731 = !{i32 1878206}
!5732 = !DILocation(line: 205, column: 9, scope: !5723, inlinedAt: !5728)
!5733 = !DILocation(line: 28, column: 2, scope: !5719)
!5734 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !5735)
!5735 = distinct !DILocation(line: 929, column: 3, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 928, column: 22)
!5737 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 928, column: 6)
!5738 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !5735)
!5739 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !5740)
!5740 = distinct !DILocation(line: 944, column: 2, scope: !5518)
!5741 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !5740)
!5742 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !5743)
!5743 = distinct !DILocation(line: 926, column: 7, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 926, column: 7)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 926, column: 7)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 926, column: 7)
!5747 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 926, column: 7)
!5748 = distinct !DILexicalBlock(scope: !5749, file: !3, line: 926, column: 7)
!5749 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 926, column: 6)
!5750 = !DILocalVariable(name: "cp", arg: 1, scope: !5518, file: !3, line: 917, type: !281)
!5751 = !DILocation(line: 917, column: 39, scope: !5518)
!5752 = !DILocalVariable(name: "len", arg: 2, scope: !5518, file: !3, line: 917, type: !288)
!5753 = !DILocation(line: 917, column: 50, scope: !5518)
!5754 = !DILocalVariable(name: "flags", scope: !5518, file: !3, line: 919, type: !168)
!5755 = !DILocation(line: 919, column: 17, scope: !5518)
!5756 = !DILocalVariable(name: "tmp", scope: !5518, file: !3, line: 921, type: !182)
!5757 = !DILocation(line: 921, column: 17, scope: !5518)
!5758 = !DILocalVariable(name: "i", scope: !5518, file: !3, line: 922, type: !7)
!5759 = !DILocation(line: 922, column: 12, scope: !5518)
!5760 = !DILocalVariable(name: "max", scope: !5518, file: !3, line: 922, type: !7)
!5761 = !DILocation(line: 922, column: 15, scope: !5518)
!5762 = !DILocalVariable(name: "src_buf", scope: !5518, file: !3, line: 923, type: !281)
!5763 = !DILocation(line: 923, column: 16, scope: !5518)
!5764 = !DILocation(line: 923, column: 26, scope: !5518)
!5765 = !DILocalVariable(name: "dest_buf", scope: !5518, file: !3, line: 924, type: !184)
!5766 = !DILocation(line: 924, column: 11, scope: !5518)
!5767 = !DILocation(line: 926, column: 7, scope: !5747)
!5768 = !DILocation(line: 926, column: 7, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 926, column: 7)
!5770 = !DILocalVariable(name: "__dummy", scope: !5771, file: !3, line: 926, type: !168)
!5771 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 926, column: 7)
!5772 = distinct !DILexicalBlock(scope: !5769, file: !3, line: 926, column: 7)
!5773 = !DILocation(line: 926, column: 7, scope: !5771)
!5774 = !DILocalVariable(name: "__dummy2", scope: !5771, file: !3, line: 926, type: !168)
!5775 = !DILocation(line: 926, column: 7, scope: !5772)
!5776 = !DILocation(line: 926, column: 7, scope: !5746)
!5777 = !DILocation(line: 926, column: 7, scope: !5745)
!5778 = !{i32 -2140146486}
!5779 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !5743)
!5780 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !5743)
!5781 = !DILocation(line: 926, column: 7, scope: !5744)
!5782 = !DILocation(line: 926, column: 7, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 926, column: 7)
!5784 = !DILocation(line: 926, column: 7, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 926, column: 7)
!5786 = !DILocalVariable(name: "__dummy", scope: !5787, file: !3, line: 926, type: !168)
!5787 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 926, column: 7)
!5788 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 926, column: 7)
!5789 = !DILocation(line: 926, column: 7, scope: !5787)
!5790 = !DILocalVariable(name: "__dummy2", scope: !5787, file: !3, line: 926, type: !168)
!5791 = !DILocation(line: 926, column: 7, scope: !5788)
!5792 = !DILocation(line: 926, column: 7, scope: !5749)
!5793 = !DILocation(line: 926, column: 7, scope: !5748)
!5794 = !DILocation(line: 926, column: 6, scope: !5518)
!5795 = !DILocation(line: 927, column: 3, scope: !5749)
!5796 = !DILocation(line: 928, column: 6, scope: !5737)
!5797 = !DILocation(line: 928, column: 16, scope: !5737)
!5798 = !DILocation(line: 928, column: 6, scope: !5518)
!5799 = !DILocation(line: 929, column: 46, scope: !5736)
!5800 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !5735)
!5801 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !5735)
!5802 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !5735)
!5803 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !5735)
!5804 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !5735)
!5805 = !DILocation(line: 930, column: 3, scope: !5736)
!5806 = !DILocation(line: 932, column: 6, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 932, column: 6)
!5808 = !DILocation(line: 932, column: 12, scope: !5807)
!5809 = !DILocation(line: 932, column: 10, scope: !5807)
!5810 = !DILocation(line: 932, column: 6, scope: !5518)
!5811 = !DILocation(line: 933, column: 9, scope: !5807)
!5812 = !DILocation(line: 933, column: 7, scope: !5807)
!5813 = !DILocation(line: 933, column: 3, scope: !5807)
!5814 = !DILocation(line: 935, column: 9, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5518, file: !3, line: 935, column: 2)
!5816 = !DILocation(line: 935, column: 7, scope: !5815)
!5817 = !DILocation(line: 935, column: 14, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 935, column: 2)
!5819 = !DILocation(line: 935, column: 18, scope: !5818)
!5820 = !DILocation(line: 935, column: 16, scope: !5818)
!5821 = !DILocation(line: 935, column: 2, scope: !5815)
!5822 = !DILocation(line: 936, column: 9, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 935, column: 29)
!5824 = !DILocation(line: 936, column: 7, scope: !5823)
!5825 = !DILocation(line: 937, column: 8, scope: !5823)
!5826 = !DILocation(line: 938, column: 7, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 938, column: 7)
!5828 = !DILocation(line: 938, column: 11, scope: !5827)
!5829 = !DILocation(line: 938, column: 7, scope: !5823)
!5830 = !DILocation(line: 939, column: 9, scope: !5827)
!5831 = !DILocation(line: 939, column: 4, scope: !5827)
!5832 = !DILocation(line: 940, column: 9, scope: !5823)
!5833 = !DILocation(line: 940, column: 18, scope: !5823)
!5834 = !DILocation(line: 940, column: 20, scope: !5823)
!5835 = !DILocation(line: 940, column: 7, scope: !5823)
!5836 = !DILocation(line: 941, column: 36, scope: !5823)
!5837 = !DILocation(line: 941, column: 44, scope: !5823)
!5838 = !DILocation(line: 941, column: 48, scope: !5823)
!5839 = !DILocation(line: 941, column: 46, scope: !5823)
!5840 = !DILocation(line: 941, column: 55, scope: !5823)
!5841 = !DILocation(line: 941, column: 53, scope: !5823)
!5842 = !DILocation(line: 941, column: 3, scope: !5823)
!5843 = !DILocation(line: 941, column: 12, scope: !5823)
!5844 = !DILocation(line: 941, column: 14, scope: !5823)
!5845 = !DILocation(line: 941, column: 33, scope: !5823)
!5846 = !DILocation(line: 942, column: 12, scope: !5823)
!5847 = !DILocation(line: 942, column: 16, scope: !5823)
!5848 = !DILocation(line: 942, column: 25, scope: !5823)
!5849 = !DILocation(line: 942, column: 29, scope: !5823)
!5850 = !DILocation(line: 942, column: 22, scope: !5823)
!5851 = !DILocation(line: 942, column: 8, scope: !5823)
!5852 = !DILocation(line: 943, column: 2, scope: !5823)
!5853 = !DILocation(line: 935, column: 25, scope: !5818)
!5854 = !DILocation(line: 935, column: 2, scope: !5818)
!5855 = distinct !{!5855, !5821, !5856}
!5856 = !DILocation(line: 943, column: 2, scope: !5815)
!5857 = !DILocation(line: 944, column: 45, scope: !5518)
!5858 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !5740)
!5859 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !5740)
!5860 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !5740)
!5861 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !5740)
!5862 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !5740)
!5863 = !DILocation(line: 945, column: 2, scope: !5518)
!5864 = !DILocation(line: 946, column: 1, scope: !5518)
!5865 = distinct !DISubprogram(name: "trace_add_device_randomness", scope: !5866, file: !5866, line: 11, type: !5867, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5866 = !DIFile(filename: "./include/trace/events/random.h", directory: "/home/lizy2001/genbc/linux")
!5867 = !DISubroutineType(types: !5868)
!5868 = !{null, !74, !168}
!5869 = !DILocalVariable(name: "bytes", arg: 1, scope: !5865, file: !5866, line: 11, type: !74)
!5870 = !DILocation(line: 11, column: 1, scope: !5865)
!5871 = !DILocalVariable(name: "IP", arg: 2, scope: !5865, file: !5866, line: 11, type: !168)
!5872 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !5873, file: !5873, line: 666, type: !5874, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5873 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!5874 = !DISubroutineType(types: !5875)
!5875 = !{!168}
!5876 = !DILocalVariable(name: "f", scope: !5872, file: !5873, line: 668, type: !168)
!5877 = !DILocation(line: 668, column: 16, scope: !5872)
!5878 = !DILocation(line: 670, column: 6, scope: !5872)
!5879 = !DILocation(line: 670, column: 4, scope: !5872)
!5880 = !DILocation(line: 671, column: 2, scope: !5872)
!5881 = !DILocation(line: 672, column: 9, scope: !5872)
!5882 = !DILocation(line: 672, column: 2, scope: !5872)
!5883 = distinct !DISubprogram(name: "_mix_pool_bytes", scope: !3, file: !3, line: 537, type: !5884, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!5884 = !DISubroutineType(types: !5885)
!5885 = !{null, !5886, !2095, !74}
!5886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5523, size: 64)
!5887 = !DILocalVariable(name: "r", arg: 1, scope: !5883, file: !3, line: 537, type: !5886)
!5888 = !DILocation(line: 537, column: 51, scope: !5883)
!5889 = !DILocalVariable(name: "in", arg: 2, scope: !5883, file: !3, line: 537, type: !2095)
!5890 = !DILocation(line: 537, column: 66, scope: !5883)
!5891 = !DILocalVariable(name: "nbytes", arg: 3, scope: !5883, file: !3, line: 538, type: !74)
!5892 = !DILocation(line: 538, column: 12, scope: !5883)
!5893 = !DILocalVariable(name: "i", scope: !5883, file: !3, line: 540, type: !168)
!5894 = !DILocation(line: 540, column: 16, scope: !5883)
!5895 = !DILocalVariable(name: "tap1", scope: !5883, file: !3, line: 540, type: !168)
!5896 = !DILocation(line: 540, column: 19, scope: !5883)
!5897 = !DILocalVariable(name: "tap2", scope: !5883, file: !3, line: 540, type: !168)
!5898 = !DILocation(line: 540, column: 25, scope: !5883)
!5899 = !DILocalVariable(name: "tap3", scope: !5883, file: !3, line: 540, type: !168)
!5900 = !DILocation(line: 540, column: 31, scope: !5883)
!5901 = !DILocalVariable(name: "tap4", scope: !5883, file: !3, line: 540, type: !168)
!5902 = !DILocation(line: 540, column: 37, scope: !5883)
!5903 = !DILocalVariable(name: "tap5", scope: !5883, file: !3, line: 540, type: !168)
!5904 = !DILocation(line: 540, column: 43, scope: !5883)
!5905 = !DILocalVariable(name: "input_rotate", scope: !5883, file: !3, line: 541, type: !74)
!5906 = !DILocation(line: 541, column: 6, scope: !5883)
!5907 = !DILocalVariable(name: "wordmask", scope: !5883, file: !3, line: 542, type: !74)
!5908 = !DILocation(line: 542, column: 6, scope: !5883)
!5909 = !DILocation(line: 542, column: 17, scope: !5883)
!5910 = !DILocation(line: 542, column: 20, scope: !5883)
!5911 = !DILocation(line: 542, column: 30, scope: !5883)
!5912 = !DILocation(line: 542, column: 40, scope: !5883)
!5913 = !DILocalVariable(name: "bytes", scope: !5883, file: !3, line: 543, type: !281)
!5914 = !DILocation(line: 543, column: 14, scope: !5883)
!5915 = !DILocation(line: 543, column: 22, scope: !5883)
!5916 = !DILocalVariable(name: "w", scope: !5883, file: !3, line: 544, type: !174)
!5917 = !DILocation(line: 544, column: 8, scope: !5883)
!5918 = !DILocation(line: 546, column: 9, scope: !5883)
!5919 = !DILocation(line: 546, column: 12, scope: !5883)
!5920 = !DILocation(line: 546, column: 22, scope: !5883)
!5921 = !DILocation(line: 546, column: 7, scope: !5883)
!5922 = !DILocation(line: 547, column: 9, scope: !5883)
!5923 = !DILocation(line: 547, column: 12, scope: !5883)
!5924 = !DILocation(line: 547, column: 22, scope: !5883)
!5925 = !DILocation(line: 547, column: 7, scope: !5883)
!5926 = !DILocation(line: 548, column: 9, scope: !5883)
!5927 = !DILocation(line: 548, column: 12, scope: !5883)
!5928 = !DILocation(line: 548, column: 22, scope: !5883)
!5929 = !DILocation(line: 548, column: 7, scope: !5883)
!5930 = !DILocation(line: 549, column: 9, scope: !5883)
!5931 = !DILocation(line: 549, column: 12, scope: !5883)
!5932 = !DILocation(line: 549, column: 22, scope: !5883)
!5933 = !DILocation(line: 549, column: 7, scope: !5883)
!5934 = !DILocation(line: 550, column: 9, scope: !5883)
!5935 = !DILocation(line: 550, column: 12, scope: !5883)
!5936 = !DILocation(line: 550, column: 22, scope: !5883)
!5937 = !DILocation(line: 550, column: 7, scope: !5883)
!5938 = !DILocation(line: 552, column: 17, scope: !5883)
!5939 = !DILocation(line: 552, column: 20, scope: !5883)
!5940 = !DILocation(line: 552, column: 15, scope: !5883)
!5941 = !DILocation(line: 553, column: 6, scope: !5883)
!5942 = !DILocation(line: 553, column: 9, scope: !5883)
!5943 = !DILocation(line: 553, column: 4, scope: !5883)
!5944 = !DILocation(line: 556, column: 2, scope: !5883)
!5945 = !DILocation(line: 556, column: 15, scope: !5883)
!5946 = !DILocation(line: 557, column: 19, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5883, file: !3, line: 556, column: 19)
!5948 = !DILocation(line: 557, column: 13, scope: !5947)
!5949 = !DILocation(line: 557, column: 23, scope: !5947)
!5950 = !DILocation(line: 557, column: 7, scope: !5947)
!5951 = !DILocation(line: 557, column: 5, scope: !5947)
!5952 = !DILocation(line: 558, column: 8, scope: !5947)
!5953 = !DILocation(line: 558, column: 10, scope: !5947)
!5954 = !DILocation(line: 558, column: 17, scope: !5947)
!5955 = !DILocation(line: 558, column: 15, scope: !5947)
!5956 = !DILocation(line: 558, column: 5, scope: !5947)
!5957 = !DILocation(line: 561, column: 8, scope: !5947)
!5958 = !DILocation(line: 561, column: 11, scope: !5947)
!5959 = !DILocation(line: 561, column: 16, scope: !5947)
!5960 = !DILocation(line: 561, column: 5, scope: !5947)
!5961 = !DILocation(line: 562, column: 8, scope: !5947)
!5962 = !DILocation(line: 562, column: 11, scope: !5947)
!5963 = !DILocation(line: 562, column: 17, scope: !5947)
!5964 = !DILocation(line: 562, column: 21, scope: !5947)
!5965 = !DILocation(line: 562, column: 19, scope: !5947)
!5966 = !DILocation(line: 562, column: 29, scope: !5947)
!5967 = !DILocation(line: 562, column: 27, scope: !5947)
!5968 = !DILocation(line: 562, column: 5, scope: !5947)
!5969 = !DILocation(line: 563, column: 8, scope: !5947)
!5970 = !DILocation(line: 563, column: 11, scope: !5947)
!5971 = !DILocation(line: 563, column: 17, scope: !5947)
!5972 = !DILocation(line: 563, column: 21, scope: !5947)
!5973 = !DILocation(line: 563, column: 19, scope: !5947)
!5974 = !DILocation(line: 563, column: 29, scope: !5947)
!5975 = !DILocation(line: 563, column: 27, scope: !5947)
!5976 = !DILocation(line: 563, column: 5, scope: !5947)
!5977 = !DILocation(line: 564, column: 8, scope: !5947)
!5978 = !DILocation(line: 564, column: 11, scope: !5947)
!5979 = !DILocation(line: 564, column: 17, scope: !5947)
!5980 = !DILocation(line: 564, column: 21, scope: !5947)
!5981 = !DILocation(line: 564, column: 19, scope: !5947)
!5982 = !DILocation(line: 564, column: 29, scope: !5947)
!5983 = !DILocation(line: 564, column: 27, scope: !5947)
!5984 = !DILocation(line: 564, column: 5, scope: !5947)
!5985 = !DILocation(line: 565, column: 8, scope: !5947)
!5986 = !DILocation(line: 565, column: 11, scope: !5947)
!5987 = !DILocation(line: 565, column: 17, scope: !5947)
!5988 = !DILocation(line: 565, column: 21, scope: !5947)
!5989 = !DILocation(line: 565, column: 19, scope: !5947)
!5990 = !DILocation(line: 565, column: 29, scope: !5947)
!5991 = !DILocation(line: 565, column: 27, scope: !5947)
!5992 = !DILocation(line: 565, column: 5, scope: !5947)
!5993 = !DILocation(line: 566, column: 8, scope: !5947)
!5994 = !DILocation(line: 566, column: 11, scope: !5947)
!5995 = !DILocation(line: 566, column: 17, scope: !5947)
!5996 = !DILocation(line: 566, column: 21, scope: !5947)
!5997 = !DILocation(line: 566, column: 19, scope: !5947)
!5998 = !DILocation(line: 566, column: 29, scope: !5947)
!5999 = !DILocation(line: 566, column: 27, scope: !5947)
!6000 = !DILocation(line: 566, column: 5, scope: !5947)
!6001 = !DILocation(line: 569, column: 17, scope: !5947)
!6002 = !DILocation(line: 569, column: 19, scope: !5947)
!6003 = !DILocation(line: 569, column: 39, scope: !5947)
!6004 = !DILocation(line: 569, column: 41, scope: !5947)
!6005 = !DILocation(line: 569, column: 27, scope: !5947)
!6006 = !DILocation(line: 569, column: 25, scope: !5947)
!6007 = !DILocation(line: 569, column: 3, scope: !5947)
!6008 = !DILocation(line: 569, column: 6, scope: !5947)
!6009 = !DILocation(line: 569, column: 11, scope: !5947)
!6010 = !DILocation(line: 569, column: 14, scope: !5947)
!6011 = !DILocation(line: 577, column: 19, scope: !5947)
!6012 = !DILocation(line: 577, column: 35, scope: !5947)
!6013 = !DILocation(line: 577, column: 32, scope: !5947)
!6014 = !DILocation(line: 577, column: 48, scope: !5947)
!6015 = !DILocation(line: 577, column: 16, scope: !5947)
!6016 = distinct !{!6016, !5944, !6017}
!6017 = !DILocation(line: 578, column: 2, scope: !5883)
!6018 = !DILocation(line: 580, column: 20, scope: !5883)
!6019 = !DILocation(line: 580, column: 2, scope: !5883)
!6020 = !DILocation(line: 580, column: 5, scope: !5883)
!6021 = !DILocation(line: 580, column: 18, scope: !5883)
!6022 = !DILocation(line: 581, column: 15, scope: !5883)
!6023 = !DILocation(line: 581, column: 2, scope: !5883)
!6024 = !DILocation(line: 581, column: 5, scope: !5883)
!6025 = !DILocation(line: 581, column: 13, scope: !5883)
!6026 = !DILocation(line: 582, column: 1, scope: !5883)
!6027 = !DILocalVariable(name: "type", arg: 1, scope: !5474, file: !3, line: 1201, type: !7)
!6028 = !DILocation(line: 1201, column: 40, scope: !5474)
!6029 = !DILocalVariable(name: "code", arg: 2, scope: !5474, file: !3, line: 1201, type: !7)
!6030 = !DILocation(line: 1201, column: 59, scope: !5474)
!6031 = !DILocalVariable(name: "value", arg: 3, scope: !5474, file: !3, line: 1202, type: !7)
!6032 = !DILocation(line: 1202, column: 19, scope: !5474)
!6033 = !DILocation(line: 1207, column: 6, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !5474, file: !3, line: 1207, column: 6)
!6035 = !DILocation(line: 1207, column: 15, scope: !6034)
!6036 = !DILocation(line: 1207, column: 12, scope: !6034)
!6037 = !DILocation(line: 1207, column: 6, scope: !5474)
!6038 = !DILocation(line: 1208, column: 3, scope: !6034)
!6039 = !DILocation(line: 1210, column: 15, scope: !5474)
!6040 = !DILocation(line: 1210, column: 13, scope: !5474)
!6041 = !DILocation(line: 1212, column: 10, scope: !5474)
!6042 = !DILocation(line: 1212, column: 15, scope: !5474)
!6043 = !DILocation(line: 1212, column: 23, scope: !5474)
!6044 = !DILocation(line: 1212, column: 21, scope: !5474)
!6045 = !DILocation(line: 1212, column: 31, scope: !5474)
!6046 = !DILocation(line: 1212, column: 36, scope: !5474)
!6047 = !DILocation(line: 1212, column: 28, scope: !5474)
!6048 = !DILocation(line: 1212, column: 44, scope: !5474)
!6049 = !DILocation(line: 1212, column: 42, scope: !5474)
!6050 = !DILocation(line: 1211, column: 2, scope: !5474)
!6051 = !DILocation(line: 1213, column: 29, scope: !5474)
!6052 = !DILocation(line: 1213, column: 2, scope: !5474)
!6053 = !DILocation(line: 1214, column: 1, scope: !5474)
!6054 = distinct !DISubprogram(name: "add_timer_randomness", scope: !3, file: !3, line: 1152, type: !6055, scopeLine: 1153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6055 = !DISubroutineType(types: !6056)
!6056 = !{null, !3429, !7}
!6057 = !DILocalVariable(name: "x", arg: 1, scope: !6058, file: !6059, line: 324, type: !7)
!6058 = distinct !DISubprogram(name: "fls", scope: !6059, file: !6059, line: 324, type: !6060, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6059 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!6060 = !DISubroutineType(types: !6061)
!6061 = !{!74, !7}
!6062 = !DILocation(line: 324, column: 45, scope: !6058, inlinedAt: !6063)
!6063 = distinct !DILocation(line: 1198, column: 25, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1198, column: 25)
!6065 = !DILocalVariable(name: "r", scope: !6058, file: !6059, line: 326, type: !74)
!6066 = !DILocation(line: 326, column: 6, scope: !6058, inlinedAt: !6063)
!6067 = !DILocalVariable(name: "state", arg: 1, scope: !6054, file: !3, line: 1152, type: !3429)
!6068 = !DILocation(line: 1152, column: 59, scope: !6054)
!6069 = !DILocalVariable(name: "num", arg: 2, scope: !6054, file: !3, line: 1152, type: !7)
!6070 = !DILocation(line: 1152, column: 75, scope: !6054)
!6071 = !DILocalVariable(name: "r", scope: !6054, file: !3, line: 1154, type: !5886)
!6072 = !DILocation(line: 1154, column: 24, scope: !6054)
!6073 = !DILocalVariable(name: "sample", scope: !6054, file: !3, line: 1159, type: !6074)
!6074 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6054, file: !3, line: 1155, size: 128, elements: !6075)
!6075 = !{!6076, !6077, !6078}
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "jiffies", scope: !6074, file: !3, line: 1156, baseType: !186, size: 64)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "cycles", scope: !6074, file: !3, line: 1157, baseType: !7, size: 32, offset: 64)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !6074, file: !3, line: 1158, baseType: !7, size: 32, offset: 96)
!6079 = !DILocation(line: 1159, column: 4, scope: !6054)
!6080 = !DILocalVariable(name: "delta", scope: !6054, file: !3, line: 1160, type: !186)
!6081 = !DILocation(line: 1160, column: 7, scope: !6054)
!6082 = !DILocalVariable(name: "delta2", scope: !6054, file: !3, line: 1160, type: !186)
!6083 = !DILocation(line: 1160, column: 14, scope: !6054)
!6084 = !DILocalVariable(name: "delta3", scope: !6054, file: !3, line: 1160, type: !186)
!6085 = !DILocation(line: 1160, column: 22, scope: !6054)
!6086 = !DILocation(line: 1162, column: 19, scope: !6054)
!6087 = !DILocation(line: 1162, column: 9, scope: !6054)
!6088 = !DILocation(line: 1162, column: 17, scope: !6054)
!6089 = !DILocation(line: 1163, column: 18, scope: !6054)
!6090 = !DILocation(line: 1163, column: 9, scope: !6054)
!6091 = !DILocation(line: 1163, column: 16, scope: !6054)
!6092 = !DILocation(line: 1164, column: 15, scope: !6054)
!6093 = !DILocation(line: 1164, column: 9, scope: !6054)
!6094 = !DILocation(line: 1164, column: 13, scope: !6054)
!6095 = !DILocation(line: 1165, column: 4, scope: !6054)
!6096 = !DILocation(line: 1166, column: 17, scope: !6054)
!6097 = !DILocation(line: 1166, column: 20, scope: !6054)
!6098 = !DILocation(line: 1166, column: 2, scope: !6054)
!6099 = !DILocation(line: 1173, column: 17, scope: !6054)
!6100 = !DILocation(line: 1173, column: 27, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1173, column: 27)
!6102 = !DILocation(line: 1173, column: 27, scope: !6103)
!6103 = distinct !DILexicalBlock(scope: !6101, file: !3, line: 1173, column: 27)
!6104 = !DILocation(line: 1173, column: 25, scope: !6054)
!6105 = !DILocation(line: 1173, column: 8, scope: !6054)
!6106 = !DILocation(line: 1174, column: 2, scope: !6054)
!6107 = !DILocation(line: 1174, column: 2, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1174, column: 2)
!6109 = !DILocation(line: 1174, column: 2, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 1174, column: 2)
!6111 = !DILocation(line: 1174, column: 2, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 1174, column: 2)
!6113 = !DILocation(line: 1176, column: 11, scope: !6054)
!6114 = !DILocation(line: 1176, column: 19, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1176, column: 19)
!6116 = !DILocation(line: 1176, column: 19, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6115, file: !3, line: 1176, column: 19)
!6118 = !DILocation(line: 1176, column: 17, scope: !6054)
!6119 = !DILocation(line: 1176, column: 9, scope: !6054)
!6120 = !DILocation(line: 1177, column: 2, scope: !6054)
!6121 = !DILocation(line: 1177, column: 2, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1177, column: 2)
!6123 = !DILocation(line: 1177, column: 2, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6122, file: !3, line: 1177, column: 2)
!6125 = !DILocation(line: 1177, column: 2, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6122, file: !3, line: 1177, column: 2)
!6127 = !DILocation(line: 1179, column: 11, scope: !6054)
!6128 = !DILocation(line: 1179, column: 20, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1179, column: 20)
!6130 = !DILocation(line: 1179, column: 20, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 1179, column: 20)
!6132 = !DILocation(line: 1179, column: 18, scope: !6054)
!6133 = !DILocation(line: 1179, column: 9, scope: !6054)
!6134 = !DILocation(line: 1180, column: 2, scope: !6054)
!6135 = !DILocation(line: 1180, column: 2, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1180, column: 2)
!6137 = !DILocation(line: 1180, column: 2, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 1180, column: 2)
!6139 = !DILocation(line: 1180, column: 2, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 1180, column: 2)
!6141 = !DILocation(line: 1182, column: 6, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1182, column: 6)
!6143 = !DILocation(line: 1182, column: 12, scope: !6142)
!6144 = !DILocation(line: 1182, column: 6, scope: !6054)
!6145 = !DILocation(line: 1183, column: 12, scope: !6142)
!6146 = !DILocation(line: 1183, column: 11, scope: !6142)
!6147 = !DILocation(line: 1183, column: 9, scope: !6142)
!6148 = !DILocation(line: 1183, column: 3, scope: !6142)
!6149 = !DILocation(line: 1184, column: 6, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1184, column: 6)
!6151 = !DILocation(line: 1184, column: 13, scope: !6150)
!6152 = !DILocation(line: 1184, column: 6, scope: !6054)
!6153 = !DILocation(line: 1185, column: 13, scope: !6150)
!6154 = !DILocation(line: 1185, column: 12, scope: !6150)
!6155 = !DILocation(line: 1185, column: 10, scope: !6150)
!6156 = !DILocation(line: 1185, column: 3, scope: !6150)
!6157 = !DILocation(line: 1186, column: 6, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1186, column: 6)
!6159 = !DILocation(line: 1186, column: 13, scope: !6158)
!6160 = !DILocation(line: 1186, column: 6, scope: !6054)
!6161 = !DILocation(line: 1187, column: 13, scope: !6158)
!6162 = !DILocation(line: 1187, column: 12, scope: !6158)
!6163 = !DILocation(line: 1187, column: 10, scope: !6158)
!6164 = !DILocation(line: 1187, column: 3, scope: !6158)
!6165 = !DILocation(line: 1188, column: 6, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1188, column: 6)
!6167 = !DILocation(line: 1188, column: 14, scope: !6166)
!6168 = !DILocation(line: 1188, column: 12, scope: !6166)
!6169 = !DILocation(line: 1188, column: 6, scope: !6054)
!6170 = !DILocation(line: 1189, column: 11, scope: !6166)
!6171 = !DILocation(line: 1189, column: 9, scope: !6166)
!6172 = !DILocation(line: 1189, column: 3, scope: !6166)
!6173 = !DILocation(line: 1190, column: 6, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 1190, column: 6)
!6175 = !DILocation(line: 1190, column: 14, scope: !6174)
!6176 = !DILocation(line: 1190, column: 12, scope: !6174)
!6177 = !DILocation(line: 1190, column: 6, scope: !6054)
!6178 = !DILocation(line: 1191, column: 11, scope: !6174)
!6179 = !DILocation(line: 1191, column: 9, scope: !6174)
!6180 = !DILocation(line: 1191, column: 3, scope: !6174)
!6181 = !DILocation(line: 1198, column: 22, scope: !6054)
!6182 = !DILocalVariable(name: "__UNIQUE_ID___x323", scope: !6064, file: !3, line: 1198, type: !74)
!6183 = !DILocation(line: 1198, column: 25, scope: !6064)
!6184 = !DILocation(line: 340, column: 14, scope: !6058, inlinedAt: !6063)
!6185 = !DILocation(line: 338, column: 2, scope: !6058, inlinedAt: !6063)
!6186 = !{i32 392287}
!6187 = !DILocation(line: 351, column: 9, scope: !6058, inlinedAt: !6063)
!6188 = !DILocation(line: 351, column: 11, scope: !6058, inlinedAt: !6063)
!6189 = !DILocalVariable(name: "__UNIQUE_ID___y324", scope: !6064, file: !3, line: 1198, type: !74)
!6190 = !DILocation(line: 1198, column: 2, scope: !6054)
!6191 = !DILocation(line: 1199, column: 1, scope: !6054)
!6192 = distinct !DISubprogram(name: "trace_add_input_randomness", scope: !5866, file: !5866, line: 129, type: !4518, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6193 = !DILocalVariable(name: "input_bits", arg: 1, scope: !6192, file: !5866, line: 129, type: !74)
!6194 = !DILocation(line: 129, column: 1, scope: !6192)
!6195 = distinct !DISubprogram(name: "add_interrupt_randomness", scope: !3, file: !3, line: 1255, type: !6196, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6196 = !DISubroutineType(types: !6197)
!6197 = !{null, !74, !74}
!6198 = !DILocalVariable(name: "lock", arg: 1, scope: !6199, file: !5632, line: 392, type: !4029)
!6199 = distinct !DISubprogram(name: "spin_unlock", scope: !5632, file: !5632, line: 392, type: !6200, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6200 = !DISubroutineType(types: !6201)
!6201 = !{null, !4029}
!6202 = !DILocation(line: 392, column: 53, scope: !6199, inlinedAt: !6203)
!6203 = distinct !DILocation(line: 1312, column: 2, scope: !6195)
!6204 = !DILocalVariable(name: "lock", arg: 1, scope: !6205, file: !5632, line: 362, type: !4029)
!6205 = distinct !DISubprogram(name: "spin_trylock", scope: !5632, file: !5632, line: 362, type: !6206, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6206 = !DISubroutineType(types: !6207)
!6207 = !{!74, !4029}
!6208 = !DILocation(line: 362, column: 53, scope: !6205, inlinedAt: !6209)
!6209 = distinct !DILocation(line: 1296, column: 7, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 1296, column: 6)
!6211 = !DILocalVariable(name: "irq", arg: 1, scope: !6195, file: !3, line: 1255, type: !74)
!6212 = !DILocation(line: 1255, column: 35, scope: !6195)
!6213 = !DILocalVariable(name: "irq_flags", arg: 2, scope: !6195, file: !3, line: 1255, type: !74)
!6214 = !DILocation(line: 1255, column: 44, scope: !6195)
!6215 = !DILocalVariable(name: "r", scope: !6195, file: !3, line: 1257, type: !5886)
!6216 = !DILocation(line: 1257, column: 24, scope: !6195)
!6217 = !DILocalVariable(name: "fast_pool", scope: !6195, file: !3, line: 1258, type: !169)
!6218 = !DILocation(line: 1258, column: 20, scope: !6195)
!6219 = !DILocation(line: 1258, column: 32, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1258, column: 32)
!6221 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 1258, column: 32)
!6222 = !DILocalVariable(name: "__vpp_verify", scope: !6223, file: !3, line: 1258, type: !2095)
!6223 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 1258, column: 32)
!6224 = !DILocation(line: 1258, column: 32, scope: !6223)
!6225 = !DILocation(line: 1258, column: 32, scope: !6221)
!6226 = !DILocalVariable(name: "regs", scope: !6195, file: !3, line: 1259, type: !240)
!6227 = !DILocation(line: 1259, column: 19, scope: !6195)
!6228 = !DILocation(line: 1259, column: 26, scope: !6195)
!6229 = !DILocalVariable(name: "now", scope: !6195, file: !3, line: 1260, type: !168)
!6230 = !DILocation(line: 1260, column: 17, scope: !6195)
!6231 = !DILocation(line: 1260, column: 23, scope: !6195)
!6232 = !DILocalVariable(name: "cycles", scope: !6195, file: !3, line: 1261, type: !233)
!6233 = !DILocation(line: 1261, column: 12, scope: !6195)
!6234 = !DILocation(line: 1261, column: 21, scope: !6195)
!6235 = !DILocalVariable(name: "c_high", scope: !6195, file: !3, line: 1262, type: !174)
!6236 = !DILocation(line: 1262, column: 10, scope: !6195)
!6237 = !DILocalVariable(name: "j_high", scope: !6195, file: !3, line: 1262, type: !174)
!6238 = !DILocation(line: 1262, column: 18, scope: !6195)
!6239 = !DILocalVariable(name: "ip", scope: !6195, file: !3, line: 1263, type: !199)
!6240 = !DILocation(line: 1263, column: 10, scope: !6195)
!6241 = !DILocalVariable(name: "seed", scope: !6195, file: !3, line: 1264, type: !168)
!6242 = !DILocation(line: 1264, column: 17, scope: !6195)
!6243 = !DILocalVariable(name: "credit", scope: !6195, file: !3, line: 1265, type: !74)
!6244 = !DILocation(line: 1265, column: 8, scope: !6195)
!6245 = !DILocation(line: 1267, column: 6, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 1267, column: 6)
!6247 = !DILocation(line: 1267, column: 13, scope: !6246)
!6248 = !DILocation(line: 1267, column: 6, scope: !6195)
!6249 = !DILocation(line: 1268, column: 20, scope: !6246)
!6250 = !DILocation(line: 1268, column: 31, scope: !6246)
!6251 = !DILocation(line: 1268, column: 12, scope: !6246)
!6252 = !DILocation(line: 1268, column: 10, scope: !6246)
!6253 = !DILocation(line: 1268, column: 3, scope: !6246)
!6254 = !DILocation(line: 1269, column: 34, scope: !6195)
!6255 = !DILocation(line: 1269, column: 41, scope: !6195)
!6256 = !DILocation(line: 1269, column: 11, scope: !6195)
!6257 = !DILocation(line: 1269, column: 9, scope: !6195)
!6258 = !DILocation(line: 1270, column: 31, scope: !6195)
!6259 = !DILocation(line: 1270, column: 35, scope: !6195)
!6260 = !DILocation(line: 1270, column: 11, scope: !6195)
!6261 = !DILocation(line: 1270, column: 9, scope: !6195)
!6262 = !DILocation(line: 1271, column: 24, scope: !6195)
!6263 = !DILocation(line: 1271, column: 33, scope: !6195)
!6264 = !DILocation(line: 1271, column: 31, scope: !6195)
!6265 = !DILocation(line: 1271, column: 42, scope: !6195)
!6266 = !DILocation(line: 1271, column: 40, scope: !6195)
!6267 = !DILocation(line: 1271, column: 2, scope: !6195)
!6268 = !DILocation(line: 1271, column: 13, scope: !6195)
!6269 = !DILocation(line: 1271, column: 21, scope: !6195)
!6270 = !DILocation(line: 1272, column: 24, scope: !6195)
!6271 = !DILocation(line: 1272, column: 30, scope: !6195)
!6272 = !DILocation(line: 1272, column: 28, scope: !6195)
!6273 = !DILocation(line: 1272, column: 2, scope: !6195)
!6274 = !DILocation(line: 1272, column: 13, scope: !6195)
!6275 = !DILocation(line: 1272, column: 21, scope: !6195)
!6276 = !DILocation(line: 1273, column: 7, scope: !6195)
!6277 = !DILocation(line: 1273, column: 34, scope: !6195)
!6278 = !DILocation(line: 1273, column: 14, scope: !6195)
!6279 = !DILocation(line: 1273, column: 42, scope: !6195)
!6280 = !DILocation(line: 1273, column: 5, scope: !6195)
!6281 = !DILocation(line: 1274, column: 24, scope: !6195)
!6282 = !DILocation(line: 1274, column: 2, scope: !6195)
!6283 = !DILocation(line: 1274, column: 13, scope: !6195)
!6284 = !DILocation(line: 1274, column: 21, scope: !6195)
!6285 = !DILocation(line: 1275, column: 43, scope: !6195)
!6286 = !DILocation(line: 1275, column: 46, scope: !6195)
!6287 = !DILocation(line: 1275, column: 2, scope: !6195)
!6288 = !DILocation(line: 1275, column: 13, scope: !6195)
!6289 = !DILocation(line: 1275, column: 21, scope: !6195)
!6290 = !DILocation(line: 1278, column: 11, scope: !6195)
!6291 = !DILocation(line: 1278, column: 2, scope: !6195)
!6292 = !DILocation(line: 1281, column: 6, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 1281, column: 6)
!6294 = !DILocation(line: 1281, column: 6, scope: !6195)
!6295 = !DILocation(line: 1282, column: 8, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 1282, column: 7)
!6297 = distinct !DILexicalBlock(scope: !6293, file: !3, line: 1281, column: 32)
!6298 = !DILocation(line: 1282, column: 19, scope: !6296)
!6299 = !DILocation(line: 1282, column: 25, scope: !6296)
!6300 = !DILocation(line: 1282, column: 32, scope: !6296)
!6301 = !DILocation(line: 1283, column: 31, scope: !6296)
!6302 = !DILocation(line: 1283, column: 42, scope: !6296)
!6303 = !DILocation(line: 1283, column: 22, scope: !6296)
!6304 = !DILocation(line: 1283, column: 7, scope: !6296)
!6305 = !DILocation(line: 1282, column: 7, scope: !6297)
!6306 = !DILocation(line: 1285, column: 4, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6296, file: !3, line: 1284, column: 34)
!6308 = !DILocation(line: 1285, column: 15, scope: !6307)
!6309 = !DILocation(line: 1285, column: 21, scope: !6307)
!6310 = !DILocation(line: 1286, column: 22, scope: !6307)
!6311 = !DILocation(line: 1286, column: 4, scope: !6307)
!6312 = !DILocation(line: 1286, column: 15, scope: !6307)
!6313 = !DILocation(line: 1286, column: 20, scope: !6307)
!6314 = !DILocation(line: 1287, column: 3, scope: !6307)
!6315 = !DILocation(line: 1288, column: 3, scope: !6297)
!6316 = !DILocation(line: 1291, column: 7, scope: !6317)
!6317 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 1291, column: 6)
!6318 = !DILocation(line: 1291, column: 18, scope: !6317)
!6319 = !DILocation(line: 1291, column: 24, scope: !6317)
!6320 = !DILocation(line: 1291, column: 30, scope: !6317)
!6321 = !DILocation(line: 1292, column: 7, scope: !6317)
!6322 = !DILocation(line: 1291, column: 6, scope: !6195)
!6323 = !DILocation(line: 1293, column: 3, scope: !6317)
!6324 = !DILocation(line: 1295, column: 4, scope: !6195)
!6325 = !DILocation(line: 1296, column: 21, scope: !6210)
!6326 = !DILocation(line: 1296, column: 24, scope: !6210)
!6327 = !DILocation(line: 364, column: 9, scope: !6328, inlinedAt: !6209)
!6328 = distinct !DILexicalBlock(scope: !6329, file: !5632, line: 364, column: 9)
!6329 = distinct !DILexicalBlock(scope: !6205, file: !5632, line: 364, column: 9)
!6330 = !{i32 -2145272165}
!6331 = !DILocation(line: 364, column: 9, scope: !6332, inlinedAt: !6209)
!6332 = distinct !DILexicalBlock(scope: !6328, file: !5632, line: 364, column: 9)
!6333 = !DILocation(line: 364, column: 9, scope: !6329, inlinedAt: !6209)
!6334 = !DILocation(line: 1296, column: 7, scope: !6210)
!6335 = !DILocation(line: 1296, column: 6, scope: !6195)
!6336 = !DILocation(line: 1297, column: 3, scope: !6210)
!6337 = !DILocation(line: 1299, column: 20, scope: !6195)
!6338 = !DILocation(line: 1299, column: 2, scope: !6195)
!6339 = !DILocation(line: 1299, column: 13, scope: !6195)
!6340 = !DILocation(line: 1299, column: 18, scope: !6195)
!6341 = !DILocation(line: 1300, column: 19, scope: !6195)
!6342 = !DILocation(line: 1300, column: 23, scope: !6195)
!6343 = !DILocation(line: 1300, column: 34, scope: !6195)
!6344 = !DILocation(line: 1300, column: 22, scope: !6195)
!6345 = !DILocation(line: 1300, column: 2, scope: !6195)
!6346 = !DILocation(line: 1308, column: 6, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 1308, column: 6)
!6348 = !DILocation(line: 1308, column: 6, scope: !6195)
!6349 = !DILocation(line: 1309, column: 20, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 1308, column: 40)
!6351 = !DILocation(line: 1309, column: 23, scope: !6350)
!6352 = !DILocation(line: 1309, column: 3, scope: !6350)
!6353 = !DILocation(line: 1310, column: 10, scope: !6350)
!6354 = !DILocation(line: 1311, column: 2, scope: !6350)
!6355 = !DILocation(line: 1312, column: 15, scope: !6195)
!6356 = !DILocation(line: 1312, column: 18, scope: !6195)
!6357 = !DILocation(line: 394, column: 2, scope: !6358, inlinedAt: !6203)
!6358 = distinct !DILexicalBlock(scope: !6199, file: !5632, line: 394, column: 2)
!6359 = !{i32 -2145271105}
!6360 = !DILocation(line: 394, column: 2, scope: !6361, inlinedAt: !6203)
!6361 = distinct !DILexicalBlock(scope: !6358, file: !5632, line: 394, column: 2)
!6362 = !DILocation(line: 1314, column: 2, scope: !6195)
!6363 = !DILocation(line: 1314, column: 13, scope: !6195)
!6364 = !DILocation(line: 1314, column: 19, scope: !6195)
!6365 = !DILocation(line: 1317, column: 22, scope: !6195)
!6366 = !DILocation(line: 1317, column: 25, scope: !6195)
!6367 = !DILocation(line: 1317, column: 32, scope: !6195)
!6368 = !DILocation(line: 1317, column: 2, scope: !6195)
!6369 = !DILocation(line: 1318, column: 1, scope: !6195)
!6370 = distinct !DISubprogram(name: "get_irq_regs", scope: !6371, file: !6371, line: 19, type: !6372, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6371 = !DIFile(filename: "./include/asm-generic/irq_regs.h", directory: "/home/lizy2001/genbc/linux")
!6372 = !DISubroutineType(types: !6373)
!6373 = !{!240}
!6374 = !DILocation(line: 21, column: 9, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6370, file: !6371, line: 21, column: 9)
!6376 = !DILocalVariable(name: "pscr_ret__", scope: !6377, file: !6371, line: 21, type: !240)
!6377 = distinct !DILexicalBlock(scope: !6375, file: !6371, line: 21, column: 9)
!6378 = !DILocation(line: 21, column: 9, scope: !6377)
!6379 = !DILocalVariable(name: "__vpp_verify", scope: !6380, file: !6371, line: 21, type: !2095)
!6380 = distinct !DILexicalBlock(scope: !6377, file: !6371, line: 21, column: 9)
!6381 = !DILocation(line: 21, column: 9, scope: !6380)
!6382 = !DILocalVariable(name: "pfo_val__", scope: !6383, file: !6371, line: 21, type: !197)
!6383 = distinct !DILexicalBlock(scope: !6377, file: !6371, line: 21, column: 9)
!6384 = !DILocation(line: 21, column: 9, scope: !6383)
!6385 = !{i32 -2141816821}
!6386 = !DILocation(line: 21, column: 2, scope: !6370)
!6387 = distinct !DISubprogram(name: "get_reg", scope: !3, file: !3, line: 1240, type: !6388, scopeLine: 1241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6388 = !DISubroutineType(types: !6389)
!6389 = !{!174, !169, !240}
!6390 = !DILocalVariable(name: "f", arg: 1, scope: !6387, file: !3, line: 1240, type: !169)
!6391 = !DILocation(line: 1240, column: 40, scope: !6387)
!6392 = !DILocalVariable(name: "regs", arg: 2, scope: !6387, file: !3, line: 1240, type: !240)
!6393 = !DILocation(line: 1240, column: 59, scope: !6387)
!6394 = !DILocalVariable(name: "ptr", scope: !6387, file: !3, line: 1242, type: !265)
!6395 = !DILocation(line: 1242, column: 9, scope: !6387)
!6396 = !DILocation(line: 1242, column: 25, scope: !6387)
!6397 = !DILocation(line: 1242, column: 15, scope: !6387)
!6398 = !DILocalVariable(name: "idx", scope: !6387, file: !3, line: 1243, type: !7)
!6399 = !DILocation(line: 1243, column: 15, scope: !6387)
!6400 = !DILocation(line: 1245, column: 6, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 1245, column: 6)
!6402 = !DILocation(line: 1245, column: 11, scope: !6401)
!6403 = !DILocation(line: 1245, column: 6, scope: !6387)
!6404 = !DILocation(line: 1246, column: 3, scope: !6401)
!6405 = !DILocation(line: 1247, column: 8, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 1247, column: 8)
!6407 = !DILocation(line: 1247, column: 8, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1247, column: 8)
!6409 = !DILocation(line: 1247, column: 8, scope: !6387)
!6410 = !DILocation(line: 1247, column: 6, scope: !6387)
!6411 = !DILocation(line: 1248, column: 6, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 1248, column: 6)
!6413 = !DILocation(line: 1248, column: 10, scope: !6412)
!6414 = !DILocation(line: 1248, column: 6, scope: !6387)
!6415 = !DILocation(line: 1249, column: 7, scope: !6412)
!6416 = !DILocation(line: 1249, column: 3, scope: !6412)
!6417 = !DILocation(line: 1250, column: 12, scope: !6387)
!6418 = !DILocation(line: 1250, column: 6, scope: !6387)
!6419 = !DILocation(line: 1251, column: 2, scope: !6387)
!6420 = !DILocation(line: 1251, column: 2, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 1251, column: 2)
!6422 = !DILocation(line: 1251, column: 2, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 1251, column: 2)
!6424 = !DILocation(line: 1251, column: 2, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 1251, column: 2)
!6426 = !DILocation(line: 1252, column: 10, scope: !6387)
!6427 = !DILocation(line: 1252, column: 9, scope: !6387)
!6428 = !DILocation(line: 1252, column: 2, scope: !6387)
!6429 = !DILocation(line: 1253, column: 1, scope: !6387)
!6430 = distinct !DISubprogram(name: "instruction_pointer", scope: !242, file: !242, line: 185, type: !6431, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{!168, !240}
!6433 = !DILocalVariable(name: "regs", arg: 1, scope: !6430, file: !242, line: 185, type: !240)
!6434 = !DILocation(line: 185, column: 65, scope: !6430)
!6435 = !DILocation(line: 187, column: 9, scope: !6430)
!6436 = !DILocation(line: 187, column: 15, scope: !6430)
!6437 = !DILocation(line: 187, column: 2, scope: !6430)
!6438 = distinct !DISubprogram(name: "fast_mix", scope: !3, file: !3, line: 614, type: !6439, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6439 = !DISubroutineType(types: !6440)
!6440 = !{null, !169}
!6441 = !DILocalVariable(name: "f", arg: 1, scope: !6438, file: !3, line: 614, type: !169)
!6442 = !DILocation(line: 614, column: 40, scope: !6438)
!6443 = !DILocalVariable(name: "a", scope: !6438, file: !3, line: 616, type: !174)
!6444 = !DILocation(line: 616, column: 8, scope: !6438)
!6445 = !DILocation(line: 616, column: 12, scope: !6438)
!6446 = !DILocation(line: 616, column: 15, scope: !6438)
!6447 = !DILocalVariable(name: "b", scope: !6438, file: !3, line: 616, type: !174)
!6448 = !DILocation(line: 616, column: 24, scope: !6438)
!6449 = !DILocation(line: 616, column: 28, scope: !6438)
!6450 = !DILocation(line: 616, column: 31, scope: !6438)
!6451 = !DILocalVariable(name: "c", scope: !6438, file: !3, line: 617, type: !174)
!6452 = !DILocation(line: 617, column: 8, scope: !6438)
!6453 = !DILocation(line: 617, column: 12, scope: !6438)
!6454 = !DILocation(line: 617, column: 15, scope: !6438)
!6455 = !DILocalVariable(name: "d", scope: !6438, file: !3, line: 617, type: !174)
!6456 = !DILocation(line: 617, column: 24, scope: !6438)
!6457 = !DILocation(line: 617, column: 28, scope: !6438)
!6458 = !DILocation(line: 617, column: 31, scope: !6438)
!6459 = !DILocation(line: 619, column: 7, scope: !6438)
!6460 = !DILocation(line: 619, column: 4, scope: !6438)
!6461 = !DILocation(line: 619, column: 17, scope: !6438)
!6462 = !DILocation(line: 619, column: 14, scope: !6438)
!6463 = !DILocation(line: 620, column: 12, scope: !6438)
!6464 = !DILocation(line: 620, column: 6, scope: !6438)
!6465 = !DILocation(line: 620, column: 4, scope: !6438)
!6466 = !DILocation(line: 620, column: 29, scope: !6438)
!6467 = !DILocation(line: 620, column: 23, scope: !6438)
!6468 = !DILocation(line: 620, column: 21, scope: !6438)
!6469 = !DILocation(line: 621, column: 7, scope: !6438)
!6470 = !DILocation(line: 621, column: 4, scope: !6438)
!6471 = !DILocation(line: 621, column: 17, scope: !6438)
!6472 = !DILocation(line: 621, column: 14, scope: !6438)
!6473 = !DILocation(line: 623, column: 7, scope: !6438)
!6474 = !DILocation(line: 623, column: 4, scope: !6438)
!6475 = !DILocation(line: 623, column: 17, scope: !6438)
!6476 = !DILocation(line: 623, column: 14, scope: !6438)
!6477 = !DILocation(line: 624, column: 12, scope: !6438)
!6478 = !DILocation(line: 624, column: 6, scope: !6438)
!6479 = !DILocation(line: 624, column: 4, scope: !6438)
!6480 = !DILocation(line: 624, column: 30, scope: !6438)
!6481 = !DILocation(line: 624, column: 24, scope: !6438)
!6482 = !DILocation(line: 624, column: 22, scope: !6438)
!6483 = !DILocation(line: 625, column: 7, scope: !6438)
!6484 = !DILocation(line: 625, column: 4, scope: !6438)
!6485 = !DILocation(line: 625, column: 17, scope: !6438)
!6486 = !DILocation(line: 625, column: 14, scope: !6438)
!6487 = !DILocation(line: 627, column: 7, scope: !6438)
!6488 = !DILocation(line: 627, column: 4, scope: !6438)
!6489 = !DILocation(line: 627, column: 17, scope: !6438)
!6490 = !DILocation(line: 627, column: 14, scope: !6438)
!6491 = !DILocation(line: 628, column: 12, scope: !6438)
!6492 = !DILocation(line: 628, column: 6, scope: !6438)
!6493 = !DILocation(line: 628, column: 4, scope: !6438)
!6494 = !DILocation(line: 628, column: 29, scope: !6438)
!6495 = !DILocation(line: 628, column: 23, scope: !6438)
!6496 = !DILocation(line: 628, column: 21, scope: !6438)
!6497 = !DILocation(line: 629, column: 7, scope: !6438)
!6498 = !DILocation(line: 629, column: 4, scope: !6438)
!6499 = !DILocation(line: 629, column: 17, scope: !6438)
!6500 = !DILocation(line: 629, column: 14, scope: !6438)
!6501 = !DILocation(line: 631, column: 7, scope: !6438)
!6502 = !DILocation(line: 631, column: 4, scope: !6438)
!6503 = !DILocation(line: 631, column: 17, scope: !6438)
!6504 = !DILocation(line: 631, column: 14, scope: !6438)
!6505 = !DILocation(line: 632, column: 12, scope: !6438)
!6506 = !DILocation(line: 632, column: 6, scope: !6438)
!6507 = !DILocation(line: 632, column: 4, scope: !6438)
!6508 = !DILocation(line: 632, column: 30, scope: !6438)
!6509 = !DILocation(line: 632, column: 24, scope: !6438)
!6510 = !DILocation(line: 632, column: 22, scope: !6438)
!6511 = !DILocation(line: 633, column: 7, scope: !6438)
!6512 = !DILocation(line: 633, column: 4, scope: !6438)
!6513 = !DILocation(line: 633, column: 17, scope: !6438)
!6514 = !DILocation(line: 633, column: 14, scope: !6438)
!6515 = !DILocation(line: 635, column: 15, scope: !6438)
!6516 = !DILocation(line: 635, column: 2, scope: !6438)
!6517 = !DILocation(line: 635, column: 5, scope: !6438)
!6518 = !DILocation(line: 635, column: 13, scope: !6438)
!6519 = !DILocation(line: 635, column: 32, scope: !6438)
!6520 = !DILocation(line: 635, column: 19, scope: !6438)
!6521 = !DILocation(line: 635, column: 22, scope: !6438)
!6522 = !DILocation(line: 635, column: 30, scope: !6438)
!6523 = !DILocation(line: 636, column: 15, scope: !6438)
!6524 = !DILocation(line: 636, column: 2, scope: !6438)
!6525 = !DILocation(line: 636, column: 5, scope: !6438)
!6526 = !DILocation(line: 636, column: 13, scope: !6438)
!6527 = !DILocation(line: 636, column: 32, scope: !6438)
!6528 = !DILocation(line: 636, column: 19, scope: !6438)
!6529 = !DILocation(line: 636, column: 22, scope: !6438)
!6530 = !DILocation(line: 636, column: 30, scope: !6438)
!6531 = !DILocation(line: 637, column: 2, scope: !6438)
!6532 = !DILocation(line: 637, column: 5, scope: !6438)
!6533 = !DILocation(line: 637, column: 10, scope: !6438)
!6534 = !DILocation(line: 638, column: 1, scope: !6438)
!6535 = distinct !DISubprogram(name: "crng_fast_load", scope: !3, file: !3, line: 878, type: !5519, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6536 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !6537)
!6537 = distinct !DILocation(line: 894, column: 2, scope: !6535)
!6538 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !6537)
!6539 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !6540)
!6540 = distinct !DILocation(line: 886, column: 3, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6542, file: !3, line: 885, column: 22)
!6542 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 885, column: 6)
!6543 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !6540)
!6544 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !6545)
!6545 = distinct !DILocation(line: 883, column: 7, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 883, column: 7)
!6547 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 883, column: 7)
!6548 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 883, column: 7)
!6549 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 883, column: 7)
!6550 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 883, column: 7)
!6551 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 883, column: 6)
!6552 = !DILocalVariable(name: "cp", arg: 1, scope: !6535, file: !3, line: 878, type: !281)
!6553 = !DILocation(line: 878, column: 39, scope: !6535)
!6554 = !DILocalVariable(name: "len", arg: 2, scope: !6535, file: !3, line: 878, type: !288)
!6555 = !DILocation(line: 878, column: 50, scope: !6535)
!6556 = !DILocalVariable(name: "flags", scope: !6535, file: !3, line: 880, type: !168)
!6557 = !DILocation(line: 880, column: 16, scope: !6535)
!6558 = !DILocalVariable(name: "p", scope: !6535, file: !3, line: 881, type: !184)
!6559 = !DILocation(line: 881, column: 8, scope: !6535)
!6560 = !DILocation(line: 883, column: 7, scope: !6549)
!6561 = !DILocation(line: 883, column: 7, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 883, column: 7)
!6563 = !DILocalVariable(name: "__dummy", scope: !6564, file: !3, line: 883, type: !168)
!6564 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 883, column: 7)
!6565 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 883, column: 7)
!6566 = !DILocation(line: 883, column: 7, scope: !6564)
!6567 = !DILocalVariable(name: "__dummy2", scope: !6564, file: !3, line: 883, type: !168)
!6568 = !DILocation(line: 883, column: 7, scope: !6565)
!6569 = !DILocation(line: 883, column: 7, scope: !6548)
!6570 = !DILocation(line: 883, column: 7, scope: !6547)
!6571 = !{i32 -2140148061}
!6572 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !6545)
!6573 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !6545)
!6574 = !DILocation(line: 883, column: 7, scope: !6546)
!6575 = !DILocation(line: 883, column: 7, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 883, column: 7)
!6577 = !DILocation(line: 883, column: 7, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6576, file: !3, line: 883, column: 7)
!6579 = !DILocalVariable(name: "__dummy", scope: !6580, file: !3, line: 883, type: !168)
!6580 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 883, column: 7)
!6581 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 883, column: 7)
!6582 = !DILocation(line: 883, column: 7, scope: !6580)
!6583 = !DILocalVariable(name: "__dummy2", scope: !6580, file: !3, line: 883, type: !168)
!6584 = !DILocation(line: 883, column: 7, scope: !6581)
!6585 = !DILocation(line: 883, column: 7, scope: !6551)
!6586 = !DILocation(line: 883, column: 7, scope: !6550)
!6587 = !DILocation(line: 883, column: 6, scope: !6535)
!6588 = !DILocation(line: 884, column: 3, scope: !6551)
!6589 = !DILocation(line: 885, column: 6, scope: !6542)
!6590 = !DILocation(line: 885, column: 16, scope: !6542)
!6591 = !DILocation(line: 885, column: 6, scope: !6535)
!6592 = !DILocation(line: 886, column: 46, scope: !6541)
!6593 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !6540)
!6594 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !6540)
!6595 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !6540)
!6596 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !6540)
!6597 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !6540)
!6598 = !DILocation(line: 887, column: 3, scope: !6541)
!6599 = !DILocation(line: 889, column: 4, scope: !6535)
!6600 = !DILocation(line: 890, column: 2, scope: !6535)
!6601 = !DILocation(line: 890, column: 9, scope: !6535)
!6602 = !DILocation(line: 890, column: 13, scope: !6535)
!6603 = !DILocation(line: 890, column: 17, scope: !6535)
!6604 = !DILocation(line: 890, column: 20, scope: !6535)
!6605 = !DILocation(line: 890, column: 34, scope: !6535)
!6606 = !DILocation(line: 0, scope: !6535)
!6607 = !DILocation(line: 891, column: 42, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 890, column: 58)
!6609 = !DILocation(line: 891, column: 41, scope: !6608)
!6610 = !DILocation(line: 891, column: 3, scope: !6608)
!6611 = !DILocation(line: 891, column: 5, scope: !6608)
!6612 = !DILocation(line: 891, column: 19, scope: !6608)
!6613 = !DILocation(line: 891, column: 38, scope: !6608)
!6614 = !DILocation(line: 892, column: 5, scope: !6608)
!6615 = !DILocation(line: 892, column: 22, scope: !6608)
!6616 = !DILocation(line: 892, column: 29, scope: !6608)
!6617 = distinct !{!6617, !6600, !6618}
!6618 = !DILocation(line: 893, column: 2, scope: !6535)
!6619 = !DILocation(line: 894, column: 45, scope: !6535)
!6620 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !6537)
!6621 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !6537)
!6622 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !6537)
!6623 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !6537)
!6624 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !6537)
!6625 = !DILocation(line: 895, column: 6, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 895, column: 6)
!6627 = !DILocation(line: 895, column: 20, scope: !6626)
!6628 = !DILocation(line: 895, column: 6, scope: !6535)
!6629 = !DILocation(line: 896, column: 3, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 895, column: 45)
!6631 = !DILocation(line: 897, column: 13, scope: !6630)
!6632 = !DILocation(line: 898, column: 3, scope: !6630)
!6633 = !DILocation(line: 899, column: 2, scope: !6630)
!6634 = !DILocation(line: 900, column: 2, scope: !6535)
!6635 = !DILocation(line: 901, column: 1, scope: !6535)
!6636 = distinct !DISubprogram(name: "__mix_pool_bytes", scope: !3, file: !3, line: 584, type: !5884, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6637 = !DILocalVariable(name: "r", arg: 1, scope: !6636, file: !3, line: 584, type: !5886)
!6638 = !DILocation(line: 584, column: 52, scope: !6636)
!6639 = !DILocalVariable(name: "in", arg: 2, scope: !6636, file: !3, line: 584, type: !2095)
!6640 = !DILocation(line: 584, column: 67, scope: !6636)
!6641 = !DILocalVariable(name: "nbytes", arg: 3, scope: !6636, file: !3, line: 585, type: !74)
!6642 = !DILocation(line: 585, column: 13, scope: !6636)
!6643 = !DILocation(line: 587, column: 30, scope: !6636)
!6644 = !DILocation(line: 587, column: 33, scope: !6636)
!6645 = !DILocation(line: 587, column: 39, scope: !6636)
!6646 = !DILocation(line: 587, column: 47, scope: !6636)
!6647 = !DILocation(line: 587, column: 2, scope: !6636)
!6648 = !DILocation(line: 588, column: 18, scope: !6636)
!6649 = !DILocation(line: 588, column: 21, scope: !6636)
!6650 = !DILocation(line: 588, column: 25, scope: !6636)
!6651 = !DILocation(line: 588, column: 2, scope: !6636)
!6652 = !DILocation(line: 589, column: 1, scope: !6636)
!6653 = distinct !DISubprogram(name: "arch_get_random_seed_long", scope: !6654, file: !6654, line: 83, type: !6655, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6654 = !DIFile(filename: "./arch/x86/include/asm/archrandom.h", directory: "/home/lizy2001/genbc/linux")
!6655 = !DISubroutineType(types: !6656)
!6656 = !{!754, !280}
!6657 = !DILocalVariable(name: "bit", arg: 1, scope: !6658, file: !6659, line: 173, type: !999)
!6658 = distinct !DISubprogram(name: "_static_cpu_has", scope: !6659, file: !6659, line: 173, type: !6660, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6659 = !DIFile(filename: "./arch/x86/include/asm/cpufeature.h", directory: "/home/lizy2001/genbc/linux")
!6660 = !DISubroutineType(types: !6661)
!6661 = !{!754, !999}
!6662 = !DILocation(line: 173, column: 49, scope: !6658, inlinedAt: !6663)
!6663 = distinct !DILocation(line: 85, column: 9, scope: !6653)
!6664 = !DILocalVariable(name: "v", arg: 1, scope: !6653, file: !6654, line: 83, type: !280)
!6665 = !DILocation(line: 83, column: 74, scope: !6653)
!6666 = !DILocation(line: 85, column: 9, scope: !6653)
!6667 = !DILocation(line: 175, column: 2, scope: !6658, inlinedAt: !6663)
!6668 = !{i32 -2145521163, i32 -2145521145, i32 -2145521135, i32 -2145521061, i32 -2145521051, i32 -2145521012, i32 -2145520973, i32 -2145520933, i32 -2145520886, i32 -2145520849, i32 -2145520811, i32 -2145520774, i32 -2145520757, i32 -2145520712, i32 -2145520689, i32 -2145520679, i32 -2145520662, i32 -2145520623, i32 -2145520584, i32 -2145520545, i32 -2145520500, i32 -2145520463, i32 -2145520430, i32 -2145520398, i32 -2145520381, i32 -2145520344, i32 -2145520334, i32 -2145520298, i32 -2145520276, i32 -2145520255}
!6669 = !DILabel(scope: !6658, name: "t_yes", file: !6659, line: 211)
!6670 = !DILocation(line: 211, column: 1, scope: !6658, inlinedAt: !6663)
!6671 = !DILocation(line: 212, column: 2, scope: !6658, inlinedAt: !6663)
!6672 = !DILabel(scope: !6658, name: "t_no", file: !6659, line: 213)
!6673 = !DILocation(line: 213, column: 1, scope: !6658, inlinedAt: !6663)
!6674 = !DILocation(line: 214, column: 2, scope: !6658, inlinedAt: !6663)
!6675 = !DILocation(line: 215, column: 1, scope: !6658, inlinedAt: !6663)
!6676 = !DILocation(line: 85, column: 58, scope: !6653)
!6677 = !DILocation(line: 85, column: 46, scope: !6653)
!6678 = !DILocation(line: 85, column: 2, scope: !6653)
!6679 = distinct !DISubprogram(name: "credit_entropy_bits", scope: !3, file: !3, line: 661, type: !6680, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6680 = !DISubroutineType(types: !6681)
!6681 = !{null, !5886, !74}
!6682 = !DILocalVariable(name: "v", arg: 1, scope: !6683, file: !6684, line: 84, type: !6687)
!6683 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !6684, file: !6684, line: 84, type: !6685, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6684 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6685 = !DISubroutineType(types: !6686)
!6686 = !{null, !6687, !288}
!6687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6688, size: 64)
!6688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6689)
!6689 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!6690 = !DILocation(line: 84, column: 74, scope: !6683, inlinedAt: !6691)
!6691 = distinct !DILocation(line: 717, column: 6, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 717, column: 6)
!6693 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 717, column: 6)
!6694 = !DILocalVariable(name: "size", arg: 2, scope: !6683, file: !6684, line: 84, type: !288)
!6695 = !DILocation(line: 84, column: 84, scope: !6683, inlinedAt: !6691)
!6696 = !DILocalVariable(name: "r", arg: 1, scope: !6679, file: !3, line: 661, type: !5886)
!6697 = !DILocation(line: 661, column: 55, scope: !6679)
!6698 = !DILocalVariable(name: "nbits", arg: 2, scope: !6679, file: !3, line: 661, type: !74)
!6699 = !DILocation(line: 661, column: 62, scope: !6679)
!6700 = !DILocalVariable(name: "entropy_count", scope: !6679, file: !3, line: 663, type: !74)
!6701 = !DILocation(line: 663, column: 6, scope: !6679)
!6702 = !DILocalVariable(name: "orig", scope: !6679, file: !3, line: 663, type: !74)
!6703 = !DILocation(line: 663, column: 21, scope: !6679)
!6704 = !DILocalVariable(name: "has_initialized", scope: !6679, file: !3, line: 663, type: !74)
!6705 = !DILocation(line: 663, column: 27, scope: !6679)
!6706 = !DILocalVariable(name: "pool_size", scope: !6679, file: !3, line: 664, type: !6707)
!6707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !74)
!6708 = !DILocation(line: 664, column: 12, scope: !6679)
!6709 = !DILocation(line: 664, column: 24, scope: !6679)
!6710 = !DILocation(line: 664, column: 27, scope: !6679)
!6711 = !DILocation(line: 664, column: 37, scope: !6679)
!6712 = !DILocalVariable(name: "nfrac", scope: !6679, file: !3, line: 665, type: !74)
!6713 = !DILocation(line: 665, column: 6, scope: !6679)
!6714 = !DILocation(line: 665, column: 14, scope: !6679)
!6715 = !DILocation(line: 665, column: 20, scope: !6679)
!6716 = !DILocation(line: 667, column: 7, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 667, column: 6)
!6718 = !DILocation(line: 667, column: 6, scope: !6679)
!6719 = !DILocation(line: 668, column: 3, scope: !6717)
!6720 = !DILabel(scope: !6679, name: "retry", file: !3, line: 670)
!6721 = !DILocation(line: 670, column: 1, scope: !6679)
!6722 = !DILocation(line: 671, column: 25, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 671, column: 25)
!6724 = !DILocation(line: 671, column: 25, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 671, column: 25)
!6726 = !DILocation(line: 671, column: 23, scope: !6679)
!6727 = !DILocation(line: 671, column: 16, scope: !6679)
!6728 = !DILocation(line: 672, column: 6, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 672, column: 6)
!6730 = !DILocation(line: 672, column: 12, scope: !6729)
!6731 = !DILocation(line: 672, column: 6, scope: !6679)
!6732 = !DILocation(line: 674, column: 20, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 672, column: 17)
!6734 = !DILocation(line: 674, column: 17, scope: !6733)
!6735 = !DILocation(line: 675, column: 2, scope: !6733)
!6736 = !DILocalVariable(name: "pnfrac", scope: !6737, file: !3, line: 697, type: !74)
!6737 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 675, column: 9)
!6738 = !DILocation(line: 697, column: 7, scope: !6737)
!6739 = !DILocation(line: 697, column: 16, scope: !6737)
!6740 = !DILocalVariable(name: "s", scope: !6737, file: !3, line: 698, type: !6707)
!6741 = !DILocation(line: 698, column: 13, scope: !6737)
!6742 = !DILocation(line: 698, column: 17, scope: !6737)
!6743 = !DILocation(line: 698, column: 20, scope: !6737)
!6744 = !DILocation(line: 698, column: 30, scope: !6737)
!6745 = !DILocation(line: 698, column: 43, scope: !6737)
!6746 = !DILocation(line: 698, column: 59, scope: !6737)
!6747 = !DILocation(line: 701, column: 3, scope: !6737)
!6748 = !DILocalVariable(name: "anfrac", scope: !6749, file: !3, line: 702, type: !7)
!6749 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 701, column: 6)
!6750 = !DILocation(line: 702, column: 17, scope: !6749)
!6751 = !DILocalVariable(name: "__UNIQUE_ID___x310", scope: !6752, file: !3, line: 702, type: !74)
!6752 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 702, column: 26)
!6753 = !DILocation(line: 702, column: 26, scope: !6752)
!6754 = !DILocalVariable(name: "__UNIQUE_ID___y311", scope: !6752, file: !3, line: 702, type: !74)
!6755 = !DILocalVariable(name: "add", scope: !6749, file: !3, line: 703, type: !7)
!6756 = !DILocation(line: 703, column: 17, scope: !6749)
!6757 = !DILocation(line: 704, column: 7, scope: !6749)
!6758 = !DILocation(line: 704, column: 19, scope: !6749)
!6759 = !DILocation(line: 704, column: 17, scope: !6749)
!6760 = !DILocation(line: 704, column: 34, scope: !6749)
!6761 = !DILocation(line: 704, column: 33, scope: !6749)
!6762 = !DILocation(line: 704, column: 40, scope: !6749)
!6763 = !DILocation(line: 704, column: 47, scope: !6749)
!6764 = !DILocation(line: 704, column: 44, scope: !6749)
!6765 = !DILocation(line: 706, column: 21, scope: !6749)
!6766 = !DILocation(line: 706, column: 18, scope: !6749)
!6767 = !DILocation(line: 707, column: 14, scope: !6749)
!6768 = !DILocation(line: 707, column: 11, scope: !6749)
!6769 = !DILocation(line: 708, column: 3, scope: !6749)
!6770 = !DILocation(line: 708, column: 12, scope: !6737)
!6771 = !DILocation(line: 0, scope: !6737)
!6772 = distinct !{!6772, !6747, !6773}
!6773 = !DILocation(line: 708, column: 59, scope: !6737)
!6774 = !DILocalVariable(name: "__ret_warn_on", scope: !6775, file: !3, line: 711, type: !74)
!6775 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 711, column: 6)
!6776 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 711, column: 6)
!6777 = !DILocation(line: 711, column: 6, scope: !6775)
!6778 = !DILocation(line: 711, column: 6, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 711, column: 6)
!6780 = !DILocation(line: 711, column: 6, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 711, column: 6)
!6782 = !DILocation(line: 711, column: 6, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 711, column: 6)
!6784 = !DILocation(line: 711, column: 6, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 711, column: 6)
!6786 = !{i32 -2140156448, i32 -2140156419, i32 -2140156373, i32 -2140156315, i32 -2140156261, i32 -2140156207, i32 -2140156152, i32 -2140156121}
!6787 = !DILocation(line: 711, column: 6, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 711, column: 6)
!6789 = !{i32 -2140155718, i32 -2140155711, i32 -2140155659, i32 -2140155628, i32 -2140155598}
!6790 = !DILocation(line: 711, column: 6, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 711, column: 6)
!6792 = !DILocation(line: 711, column: 6, scope: !6776)
!6793 = !DILocation(line: 711, column: 6, scope: !6679)
!6794 = !DILocation(line: 712, column: 3, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 711, column: 34)
!6796 = !DILocation(line: 714, column: 17, scope: !6795)
!6797 = !DILocation(line: 715, column: 2, scope: !6795)
!6798 = !DILocation(line: 715, column: 13, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 715, column: 13)
!6800 = !DILocation(line: 715, column: 29, scope: !6799)
!6801 = !DILocation(line: 715, column: 27, scope: !6799)
!6802 = !DILocation(line: 715, column: 13, scope: !6776)
!6803 = !DILocation(line: 716, column: 19, scope: !6799)
!6804 = !DILocation(line: 716, column: 17, scope: !6799)
!6805 = !DILocation(line: 716, column: 3, scope: !6799)
!6806 = !DILocalVariable(name: "__ai_ptr", scope: !6692, file: !3, line: 717, type: !883)
!6807 = !DILocation(line: 717, column: 6, scope: !6692)
!6808 = !DILocation(line: 86, column: 20, scope: !6683, inlinedAt: !6691)
!6809 = !DILocation(line: 86, column: 23, scope: !6683, inlinedAt: !6691)
!6810 = !DILocation(line: 86, column: 2, scope: !6683, inlinedAt: !6691)
!6811 = !DILocation(line: 87, column: 2, scope: !6683, inlinedAt: !6691)
!6812 = !DILocalVariable(name: "__ret", scope: !6813, file: !3, line: 717, type: !74)
!6813 = distinct !DILexicalBlock(scope: !6692, file: !3, line: 717, column: 6)
!6814 = !DILocation(line: 717, column: 6, scope: !6813)
!6815 = !DILocalVariable(name: "__old", scope: !6813, file: !3, line: 717, type: !74)
!6816 = !DILocalVariable(name: "__new", scope: !6813, file: !3, line: 717, type: !74)
!6817 = !DILocalVariable(name: "__ptr", scope: !6813, file: !3, line: 717, type: !286)
!6818 = !{i32 -2140153454}
!6819 = !DILocation(line: 717, column: 57, scope: !6693)
!6820 = !DILocation(line: 717, column: 54, scope: !6693)
!6821 = !DILocation(line: 717, column: 6, scope: !6679)
!6822 = !DILocation(line: 718, column: 3, scope: !6693)
!6823 = !DILocation(line: 720, column: 6, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 720, column: 6)
!6825 = !DILocation(line: 720, column: 6, scope: !6679)
!6826 = !DILocation(line: 721, column: 3, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6824, file: !3, line: 720, column: 23)
!6828 = !DILocation(line: 721, column: 6, scope: !6827)
!6829 = !DILocation(line: 721, column: 18, scope: !6827)
!6830 = !DILocation(line: 722, column: 3, scope: !6827)
!6831 = !DILocation(line: 723, column: 2, scope: !6827)
!6832 = !DILocation(line: 725, column: 28, scope: !6679)
!6833 = !DILocation(line: 725, column: 31, scope: !6679)
!6834 = !DILocation(line: 725, column: 37, scope: !6679)
!6835 = !DILocation(line: 726, column: 7, scope: !6679)
!6836 = !DILocation(line: 726, column: 21, scope: !6679)
!6837 = !DILocation(line: 726, column: 39, scope: !6679)
!6838 = !DILocation(line: 725, column: 2, scope: !6679)
!6839 = !DILocation(line: 728, column: 6, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 728, column: 6)
!6841 = !DILocation(line: 728, column: 8, scope: !6840)
!6842 = !DILocation(line: 728, column: 6, scope: !6679)
!6843 = !DILocalVariable(name: "entropy_bits", scope: !6844, file: !3, line: 729, type: !74)
!6844 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 728, column: 24)
!6845 = !DILocation(line: 729, column: 7, scope: !6844)
!6846 = !DILocation(line: 729, column: 22, scope: !6844)
!6847 = !DILocation(line: 729, column: 36, scope: !6844)
!6848 = !DILocation(line: 731, column: 7, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6844, file: !3, line: 731, column: 7)
!6850 = !DILocation(line: 731, column: 17, scope: !6849)
!6851 = !DILocation(line: 731, column: 7, scope: !6844)
!6852 = !DILocation(line: 732, column: 8, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 732, column: 8)
!6854 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 731, column: 22)
!6855 = !DILocation(line: 732, column: 21, scope: !6853)
!6856 = !DILocation(line: 732, column: 8, scope: !6854)
!6857 = !DILocation(line: 733, column: 5, scope: !6853)
!6858 = !DILocation(line: 734, column: 31, scope: !6854)
!6859 = !DILocation(line: 734, column: 4, scope: !6854)
!6860 = !DILocation(line: 735, column: 19, scope: !6854)
!6861 = !DILocation(line: 735, column: 17, scope: !6854)
!6862 = !DILocation(line: 736, column: 3, scope: !6854)
!6863 = !DILocation(line: 737, column: 2, scope: !6844)
!6864 = !DILocation(line: 738, column: 1, scope: !6679)
!6865 = distinct !DISubprogram(name: "add_disk_randomness", scope: !3, file: !3, line: 1322, type: !2845, scopeLine: 1323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6866 = !DILocalVariable(name: "disk", arg: 1, scope: !6865, file: !3, line: 1322, type: !2695)
!6867 = !DILocation(line: 1322, column: 42, scope: !6865)
!6868 = !DILocation(line: 1324, column: 7, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 1324, column: 6)
!6870 = !DILocation(line: 1324, column: 12, scope: !6869)
!6871 = !DILocation(line: 1324, column: 16, scope: !6869)
!6872 = !DILocation(line: 1324, column: 22, scope: !6869)
!6873 = !DILocation(line: 1324, column: 6, scope: !6865)
!6874 = !DILocation(line: 1325, column: 3, scope: !6869)
!6875 = !DILocation(line: 1327, column: 23, scope: !6865)
!6876 = !DILocation(line: 1327, column: 29, scope: !6865)
!6877 = !DILocation(line: 1327, column: 55, scope: !6865)
!6878 = !DILocation(line: 1327, column: 45, scope: !6865)
!6879 = !DILocation(line: 1327, column: 43, scope: !6865)
!6880 = !DILocation(line: 1327, column: 2, scope: !6865)
!6881 = !DILocation(line: 1328, column: 38, scope: !6865)
!6882 = !DILocation(line: 1328, column: 28, scope: !6865)
!6883 = !DILocation(line: 1328, column: 45, scope: !6865)
!6884 = !DILocation(line: 1328, column: 2, scope: !6865)
!6885 = !DILocation(line: 1329, column: 1, scope: !6865)
!6886 = distinct !DISubprogram(name: "disk_devt", scope: !1929, file: !1929, line: 243, type: !6887, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6887 = !DISubroutineType(types: !6888)
!6888 = !{!768, !2695}
!6889 = !DILocalVariable(name: "disk", arg: 1, scope: !6886, file: !1929, line: 243, type: !2695)
!6890 = !DILocation(line: 243, column: 47, scope: !6886)
!6891 = !DILocation(line: 245, column: 9, scope: !6886)
!6892 = !DILocation(line: 245, column: 2, scope: !6886)
!6893 = distinct !DISubprogram(name: "trace_add_disk_randomness", scope: !5866, file: !5866, line: 145, type: !6894, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6894 = !DISubroutineType(types: !6895)
!6895 = !{null, !768, !74}
!6896 = !DILocalVariable(name: "dev", arg: 1, scope: !6893, file: !5866, line: 145, type: !768)
!6897 = !DILocation(line: 145, column: 1, scope: !6893)
!6898 = !DILocalVariable(name: "input_bits", arg: 2, scope: !6893, file: !5866, line: 145, type: !74)
!6899 = !DILocalVariable(name: "buf", arg: 1, scope: !5479, file: !3, line: 1570, type: !183)
!6900 = !DILocation(line: 1570, column: 29, scope: !5479)
!6901 = !DILocalVariable(name: "nbytes", arg: 2, scope: !5479, file: !3, line: 1570, type: !74)
!6902 = !DILocation(line: 1570, column: 38, scope: !5479)
!6903 = !DILocation(line: 1574, column: 2, scope: !5479)
!6904 = !DILocation(line: 1575, column: 20, scope: !5479)
!6905 = !DILocation(line: 1575, column: 25, scope: !5479)
!6906 = !DILocation(line: 1575, column: 2, scope: !5479)
!6907 = !DILocation(line: 1576, column: 1, scope: !5479)
!6908 = !DILocalVariable(name: "func_name", arg: 1, scope: !5569, file: !3, line: 1516, type: !281)
!6909 = !DILocation(line: 1516, column: 51, scope: !5569)
!6910 = !DILocalVariable(name: "caller", arg: 2, scope: !5569, file: !3, line: 1516, type: !183)
!6911 = !DILocation(line: 1516, column: 68, scope: !5569)
!6912 = !DILocalVariable(name: "previous", arg: 3, scope: !5569, file: !3, line: 1517, type: !1181)
!6913 = !DILocation(line: 1517, column: 18, scope: !5569)
!6914 = !DILocation(line: 1525, column: 6, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1525, column: 6)
!6916 = !DILocation(line: 1525, column: 17, scope: !6915)
!6917 = !DILocation(line: 1526, column: 6, scope: !6915)
!6918 = !DILocation(line: 1526, column: 19, scope: !6915)
!6919 = !DILocation(line: 1527, column: 7, scope: !6915)
!6920 = !DILocation(line: 1527, column: 16, scope: !6915)
!6921 = !DILocation(line: 1527, column: 20, scope: !6915)
!6922 = !DILocation(line: 1527, column: 30, scope: !6923)
!6923 = distinct !DILexicalBlock(scope: !6915, file: !3, line: 1527, column: 30)
!6924 = !DILocation(line: 1527, column: 30, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6923, file: !3, line: 1527, column: 30)
!6926 = !DILocation(line: 1527, column: 27, scope: !6915)
!6927 = !DILocation(line: 1525, column: 6, scope: !5569)
!6928 = !DILocation(line: 1528, column: 3, scope: !6915)
!6929 = !DILocation(line: 1529, column: 2, scope: !5569)
!6930 = !DILocation(line: 1529, column: 2, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1529, column: 2)
!6932 = !DILocation(line: 1529, column: 2, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 1529, column: 2)
!6934 = !DILocation(line: 1529, column: 2, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 1529, column: 2)
!6936 = !DILocation(line: 1531, column: 13, scope: !5569)
!6937 = !DILocation(line: 1533, column: 6, scope: !6938)
!6938 = distinct !DILexicalBlock(scope: !5569, file: !3, line: 1533, column: 6)
!6939 = !DILocation(line: 1533, column: 6, scope: !5569)
!6940 = !DILocation(line: 1535, column: 28, scope: !6938)
!6941 = !DILocation(line: 1535, column: 39, scope: !6938)
!6942 = !DILocation(line: 1536, column: 5, scope: !6938)
!6943 = !DILocation(line: 1534, column: 3, scope: !6938)
!6944 = !DILocation(line: 1537, column: 1, scope: !5569)
!6945 = distinct !DISubprogram(name: "_get_random_bytes", scope: !3, file: !3, line: 1549, type: !5480, scopeLine: 1550, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6946 = !DILocalVariable(name: "buf", arg: 1, scope: !6945, file: !3, line: 1549, type: !183)
!6947 = !DILocation(line: 1549, column: 37, scope: !6945)
!6948 = !DILocalVariable(name: "nbytes", arg: 2, scope: !6945, file: !3, line: 1549, type: !74)
!6949 = !DILocation(line: 1549, column: 46, scope: !6945)
!6950 = !DILocalVariable(name: "tmp", scope: !6945, file: !3, line: 1551, type: !6951, align: 32)
!6951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 512, elements: !2004)
!6952 = !DILocation(line: 1551, column: 7, scope: !6945)
!6953 = !DILocation(line: 1553, column: 25, scope: !6945)
!6954 = !DILocation(line: 1553, column: 33, scope: !6945)
!6955 = !DILocation(line: 1553, column: 2, scope: !6945)
!6956 = !DILocation(line: 1555, column: 2, scope: !6945)
!6957 = !DILocation(line: 1555, column: 9, scope: !6945)
!6958 = !DILocation(line: 1555, column: 16, scope: !6945)
!6959 = !DILocation(line: 1556, column: 16, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 1555, column: 38)
!6961 = !DILocation(line: 1556, column: 3, scope: !6960)
!6962 = !DILocation(line: 1557, column: 7, scope: !6960)
!6963 = !DILocation(line: 1558, column: 10, scope: !6960)
!6964 = distinct !{!6964, !6956, !6965}
!6965 = !DILocation(line: 1559, column: 2, scope: !6945)
!6966 = !DILocation(line: 1561, column: 6, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 1561, column: 6)
!6968 = !DILocation(line: 1561, column: 13, scope: !6967)
!6969 = !DILocation(line: 1561, column: 6, scope: !6945)
!6970 = !DILocation(line: 1562, column: 16, scope: !6971)
!6971 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 1561, column: 18)
!6972 = !DILocation(line: 1562, column: 3, scope: !6971)
!6973 = !DILocation(line: 1563, column: 10, scope: !6971)
!6974 = !DILocation(line: 1563, column: 3, scope: !6971)
!6975 = !DILocation(line: 1563, column: 20, scope: !6971)
!6976 = !DILocation(line: 1564, column: 26, scope: !6971)
!6977 = !DILocation(line: 1564, column: 31, scope: !6971)
!6978 = !DILocation(line: 1564, column: 3, scope: !6971)
!6979 = !DILocation(line: 1565, column: 2, scope: !6971)
!6980 = !DILocation(line: 1566, column: 26, scope: !6967)
!6981 = !DILocation(line: 1566, column: 3, scope: !6967)
!6982 = !DILocation(line: 1567, column: 19, scope: !6945)
!6983 = !DILocation(line: 1567, column: 2, scope: !6945)
!6984 = !DILocation(line: 1568, column: 1, scope: !6945)
!6985 = distinct !DISubprogram(name: "wait_for_random_bytes", scope: !3, file: !3, line: 1639, type: !6986, scopeLine: 1640, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!6986 = !DISubroutineType(types: !6987)
!6987 = !{!74}
!6988 = !DILocation(line: 1641, column: 6, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 1641, column: 6)
!6990 = !DILocation(line: 1641, column: 6, scope: !6985)
!6991 = !DILocation(line: 1642, column: 3, scope: !6989)
!6992 = !DILocation(line: 1644, column: 2, scope: !6985)
!6993 = !DILocalVariable(name: "ret", scope: !6994, file: !3, line: 1645, type: !74)
!6994 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 1644, column: 5)
!6995 = !DILocation(line: 1645, column: 7, scope: !6994)
!6996 = !DILocalVariable(name: "__ret", scope: !6997, file: !3, line: 1646, type: !186)
!6997 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 1646, column: 9)
!6998 = !DILocation(line: 1646, column: 9, scope: !6997)
!6999 = !DILocation(line: 1646, column: 9, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 1646, column: 9)
!7001 = !DILocation(line: 1646, column: 9, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !7000, file: !3, line: 1646, column: 9)
!7003 = !DILocalVariable(name: "__cond", scope: !7004, file: !3, line: 1646, type: !754)
!7004 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 1646, column: 9)
!7005 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 1646, column: 9)
!7006 = !DILocation(line: 1646, column: 9, scope: !7004)
!7007 = !DILocation(line: 1646, column: 9, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 1646, column: 9)
!7009 = !DILocation(line: 1646, column: 9, scope: !7005)
!7010 = !DILocalVariable(name: "__wq_entry", scope: !7011, file: !3, line: 1646, type: !1016)
!7011 = distinct !DILexicalBlock(scope: !7005, file: !3, line: 1646, column: 9)
!7012 = !DILocation(line: 1646, column: 9, scope: !7011)
!7013 = !DILocalVariable(name: "__ret", scope: !7011, file: !3, line: 1646, type: !186)
!7014 = !DILocalVariable(name: "__int", scope: !7015, file: !3, line: 1646, type: !186)
!7015 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 1646, column: 9)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 1646, column: 9)
!7017 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 1646, column: 9)
!7018 = !DILocation(line: 1646, column: 9, scope: !7015)
!7019 = !DILocalVariable(name: "__cond", scope: !7020, file: !3, line: 1646, type: !754)
!7020 = distinct !DILexicalBlock(scope: !7021, file: !3, line: 1646, column: 9)
!7021 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 1646, column: 9)
!7022 = !DILocation(line: 1646, column: 9, scope: !7020)
!7023 = !DILocation(line: 1646, column: 9, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7020, file: !3, line: 1646, column: 9)
!7025 = !DILocation(line: 1646, column: 9, scope: !7021)
!7026 = !DILocation(line: 1646, column: 9, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 1646, column: 9)
!7028 = !DILocation(line: 1646, column: 9, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !7027, file: !3, line: 1646, column: 9)
!7030 = !DILocation(line: 1646, column: 9, scope: !7016)
!7031 = distinct !{!7031, !7032, !7032}
!7032 = !DILocation(line: 1646, column: 9, scope: !7017)
!7033 = !DILabel(scope: !7011, name: "__out", file: !3, line: 1646)
!7034 = !DILocation(line: 1646, column: 9, scope: !6994)
!7035 = !DILocation(line: 1646, column: 7, scope: !6994)
!7036 = !DILocation(line: 1647, column: 7, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 1647, column: 7)
!7038 = !DILocation(line: 1647, column: 7, scope: !6994)
!7039 = !DILocation(line: 1648, column: 11, scope: !7037)
!7040 = !DILocation(line: 1648, column: 15, scope: !7037)
!7041 = !DILocation(line: 1648, column: 25, scope: !7037)
!7042 = !DILocation(line: 1648, column: 4, scope: !7037)
!7043 = !DILocation(line: 1650, column: 3, scope: !6994)
!7044 = !DILocation(line: 1651, column: 2, scope: !6994)
!7045 = !DILocation(line: 1651, column: 12, scope: !6985)
!7046 = !DILocation(line: 1651, column: 11, scope: !6985)
!7047 = distinct !{!7047, !6992, !7048}
!7048 = !DILocation(line: 1651, column: 24, scope: !6985)
!7049 = !DILocation(line: 1653, column: 2, scope: !6985)
!7050 = !DILocation(line: 1654, column: 1, scope: !6985)
!7051 = distinct !DISubprogram(name: "try_to_generate_entropy", scope: !3, file: !3, line: 1602, type: !4525, scopeLine: 1603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7052 = !DILocalVariable(name: "stack", scope: !7051, file: !3, line: 1607, type: !7053)
!7053 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7051, file: !3, line: 1604, size: 384, elements: !7054)
!7054 = !{!7055, !7056}
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "now", scope: !7053, file: !3, line: 1605, baseType: !168, size: 64)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !7053, file: !3, line: 1606, baseType: !2416, size: 320, offset: 64)
!7057 = !DILocation(line: 1607, column: 4, scope: !7051)
!7058 = !DILocation(line: 1609, column: 14, scope: !7051)
!7059 = !DILocation(line: 1609, column: 8, scope: !7051)
!7060 = !DILocation(line: 1609, column: 12, scope: !7051)
!7061 = !DILocation(line: 1612, column: 12, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 1612, column: 6)
!7063 = !DILocation(line: 1612, column: 19, scope: !7062)
!7064 = !DILocation(line: 1612, column: 16, scope: !7062)
!7065 = !DILocation(line: 1612, column: 6, scope: !7051)
!7066 = !DILocation(line: 1613, column: 3, scope: !7062)
!7067 = !DILocation(line: 1615, column: 2, scope: !7051)
!7068 = !DILocation(line: 1616, column: 2, scope: !7051)
!7069 = !DILocation(line: 1616, column: 10, scope: !7051)
!7070 = !DILocation(line: 1616, column: 9, scope: !7051)
!7071 = !DILocation(line: 1617, column: 29, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !3, line: 1617, column: 7)
!7073 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 1616, column: 24)
!7074 = !DILocation(line: 1617, column: 8, scope: !7072)
!7075 = !DILocation(line: 1617, column: 7, scope: !7073)
!7076 = !DILocation(line: 1618, column: 21, scope: !7072)
!7077 = !DILocation(line: 1618, column: 28, scope: !7072)
!7078 = !DILocation(line: 1618, column: 35, scope: !7072)
!7079 = !DILocation(line: 1618, column: 4, scope: !7072)
!7080 = !DILocation(line: 1619, column: 38, scope: !7073)
!7081 = !DILocation(line: 1619, column: 31, scope: !7073)
!7082 = !DILocation(line: 1619, column: 3, scope: !7073)
!7083 = !DILocation(line: 1620, column: 3, scope: !7073)
!7084 = !DILocation(line: 1621, column: 15, scope: !7073)
!7085 = !DILocation(line: 1621, column: 9, scope: !7073)
!7086 = !DILocation(line: 1621, column: 13, scope: !7073)
!7087 = distinct !{!7087, !7068, !7088}
!7088 = !DILocation(line: 1622, column: 2, scope: !7051)
!7089 = !DILocation(line: 1624, column: 2, scope: !7051)
!7090 = !DILocation(line: 1625, column: 32, scope: !7051)
!7091 = !DILocation(line: 1625, column: 2, scope: !7051)
!7092 = !DILocation(line: 1626, column: 37, scope: !7051)
!7093 = !DILocation(line: 1626, column: 30, scope: !7051)
!7094 = !DILocation(line: 1626, column: 2, scope: !7051)
!7095 = !DILocation(line: 1627, column: 1, scope: !7051)
!7096 = distinct !DISubprogram(name: "rng_is_initialized", scope: !3, file: !3, line: 1666, type: !2085, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7097 = !DILocation(line: 1668, column: 9, scope: !7096)
!7098 = !DILocation(line: 1668, column: 2, scope: !7096)
!7099 = distinct !DISubprogram(name: "add_random_ready_callback", scope: !3, file: !3, line: 1680, type: !7100, scopeLine: 1681, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7100 = !DISubroutineType(types: !7101)
!7101 = !{!74, !293}
!7102 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !7103)
!7103 = distinct !DILocation(line: 1703, column: 2, scope: !7099)
!7104 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !7103)
!7105 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !7106)
!7106 = distinct !DILocation(line: 1693, column: 2, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 1693, column: 2)
!7108 = distinct !DILexicalBlock(scope: !7109, file: !3, line: 1693, column: 2)
!7109 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 1693, column: 2)
!7110 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 1693, column: 2)
!7111 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 1693, column: 2)
!7112 = !DILocalVariable(name: "rdy", arg: 1, scope: !7099, file: !3, line: 1680, type: !293)
!7113 = !DILocation(line: 1680, column: 61, scope: !7099)
!7114 = !DILocalVariable(name: "owner", scope: !7099, file: !3, line: 1682, type: !308)
!7115 = !DILocation(line: 1682, column: 17, scope: !7099)
!7116 = !DILocalVariable(name: "flags", scope: !7099, file: !3, line: 1683, type: !168)
!7117 = !DILocation(line: 1683, column: 16, scope: !7099)
!7118 = !DILocalVariable(name: "err", scope: !7099, file: !3, line: 1684, type: !74)
!7119 = !DILocation(line: 1684, column: 6, scope: !7099)
!7120 = !DILocation(line: 1686, column: 6, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 1686, column: 6)
!7122 = !DILocation(line: 1686, column: 6, scope: !7099)
!7123 = !DILocation(line: 1687, column: 10, scope: !7121)
!7124 = !DILocation(line: 1687, column: 3, scope: !7121)
!7125 = !DILocation(line: 1689, column: 10, scope: !7099)
!7126 = !DILocation(line: 1689, column: 15, scope: !7099)
!7127 = !DILocation(line: 1689, column: 8, scope: !7099)
!7128 = !DILocation(line: 1690, column: 22, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 1690, column: 6)
!7130 = !DILocation(line: 1690, column: 7, scope: !7129)
!7131 = !DILocation(line: 1690, column: 6, scope: !7099)
!7132 = !DILocation(line: 1691, column: 3, scope: !7129)
!7133 = !DILocation(line: 1693, column: 2, scope: !7099)
!7134 = !DILocation(line: 1693, column: 2, scope: !7111)
!7135 = !DILocalVariable(name: "__dummy", scope: !7136, file: !3, line: 1693, type: !168)
!7136 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 1693, column: 2)
!7137 = !DILocation(line: 1693, column: 2, scope: !7136)
!7138 = !DILocalVariable(name: "__dummy2", scope: !7136, file: !3, line: 1693, type: !168)
!7139 = !DILocation(line: 1693, column: 2, scope: !7110)
!7140 = !DILocation(line: 1693, column: 2, scope: !7109)
!7141 = !DILocation(line: 1693, column: 2, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7109, file: !3, line: 1693, column: 2)
!7143 = !DILocalVariable(name: "__dummy", scope: !7144, file: !3, line: 1693, type: !168)
!7144 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 1693, column: 2)
!7145 = distinct !DILexicalBlock(scope: !7142, file: !3, line: 1693, column: 2)
!7146 = !DILocation(line: 1693, column: 2, scope: !7144)
!7147 = !DILocalVariable(name: "__dummy2", scope: !7144, file: !3, line: 1693, type: !168)
!7148 = !DILocation(line: 1693, column: 2, scope: !7145)
!7149 = !DILocation(line: 1693, column: 2, scope: !7108)
!7150 = !{i32 -2140095140}
!7151 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !7106)
!7152 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !7106)
!7153 = !DILocation(line: 1693, column: 2, scope: !7107)
!7154 = !DILocation(line: 1694, column: 6, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 1694, column: 6)
!7156 = !DILocation(line: 1694, column: 6, scope: !7099)
!7157 = !DILocation(line: 1695, column: 3, scope: !7155)
!7158 = !DILocation(line: 1697, column: 8, scope: !7099)
!7159 = !DILocation(line: 1699, column: 12, scope: !7099)
!7160 = !DILocation(line: 1699, column: 17, scope: !7099)
!7161 = !DILocation(line: 1699, column: 2, scope: !7099)
!7162 = !DILocation(line: 1700, column: 6, scope: !7099)
!7163 = !DILocation(line: 1700, column: 2, scope: !7099)
!7164 = !DILabel(scope: !7099, name: "out", file: !3, line: 1702)
!7165 = !DILocation(line: 1702, column: 1, scope: !7099)
!7166 = !DILocation(line: 1703, column: 50, scope: !7099)
!7167 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !7103)
!7168 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !7103)
!7169 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !7103)
!7170 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !7103)
!7171 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !7103)
!7172 = !DILocation(line: 1705, column: 13, scope: !7099)
!7173 = !DILocation(line: 1705, column: 2, scope: !7099)
!7174 = !DILocation(line: 1707, column: 9, scope: !7099)
!7175 = !DILocation(line: 1707, column: 2, scope: !7099)
!7176 = !DILocation(line: 1708, column: 1, scope: !7099)
!7177 = distinct !DISubprogram(name: "try_module_get", scope: !7178, file: !7178, line: 751, type: !7179, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7178 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!7179 = !DISubroutineType(types: !7180)
!7180 = !{!754, !308}
!7181 = !DILocalVariable(name: "module", arg: 1, scope: !7177, file: !7178, line: 751, type: !308)
!7182 = !DILocation(line: 751, column: 50, scope: !7177)
!7183 = !DILocation(line: 753, column: 2, scope: !7177)
!7184 = distinct !DISubprogram(name: "list_add", scope: !7185, file: !7185, line: 84, type: !7186, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7185 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!7186 = !DISubroutineType(types: !7187)
!7187 = !{null, !301, !301}
!7188 = !DILocalVariable(name: "new", arg: 1, scope: !7184, file: !7185, line: 84, type: !301)
!7189 = !DILocation(line: 84, column: 47, scope: !7184)
!7190 = !DILocalVariable(name: "head", arg: 2, scope: !7184, file: !7185, line: 84, type: !301)
!7191 = !DILocation(line: 84, column: 70, scope: !7184)
!7192 = !DILocation(line: 86, column: 13, scope: !7184)
!7193 = !DILocation(line: 86, column: 18, scope: !7184)
!7194 = !DILocation(line: 86, column: 24, scope: !7184)
!7195 = !DILocation(line: 86, column: 30, scope: !7184)
!7196 = !DILocation(line: 86, column: 2, scope: !7184)
!7197 = !DILocation(line: 87, column: 1, scope: !7184)
!7198 = distinct !DISubprogram(name: "module_put", scope: !7178, file: !7178, line: 756, type: !7199, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7199 = !DISubroutineType(types: !7200)
!7200 = !{null, !308}
!7201 = !DILocalVariable(name: "module", arg: 1, scope: !7198, file: !7178, line: 756, type: !308)
!7202 = !DILocation(line: 756, column: 46, scope: !7198)
!7203 = !DILocation(line: 758, column: 1, scope: !7198)
!7204 = distinct !DISubprogram(name: "del_random_ready_callback", scope: !3, file: !3, line: 1714, type: !305, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7205 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !7206)
!7206 = distinct !DILocation(line: 1724, column: 2, scope: !7204)
!7207 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !7206)
!7208 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !7209)
!7209 = distinct !DILocation(line: 1719, column: 2, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 1719, column: 2)
!7211 = distinct !DILexicalBlock(scope: !7212, file: !3, line: 1719, column: 2)
!7212 = distinct !DILexicalBlock(scope: !7213, file: !3, line: 1719, column: 2)
!7213 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 1719, column: 2)
!7214 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 1719, column: 2)
!7215 = !DILocalVariable(name: "rdy", arg: 1, scope: !7204, file: !3, line: 1714, type: !293)
!7216 = !DILocation(line: 1714, column: 62, scope: !7204)
!7217 = !DILocalVariable(name: "flags", scope: !7204, file: !3, line: 1716, type: !168)
!7218 = !DILocation(line: 1716, column: 16, scope: !7204)
!7219 = !DILocalVariable(name: "owner", scope: !7204, file: !3, line: 1717, type: !308)
!7220 = !DILocation(line: 1717, column: 17, scope: !7204)
!7221 = !DILocation(line: 1719, column: 2, scope: !7204)
!7222 = !DILocation(line: 1719, column: 2, scope: !7214)
!7223 = !DILocalVariable(name: "__dummy", scope: !7224, file: !3, line: 1719, type: !168)
!7224 = distinct !DILexicalBlock(scope: !7213, file: !3, line: 1719, column: 2)
!7225 = !DILocation(line: 1719, column: 2, scope: !7224)
!7226 = !DILocalVariable(name: "__dummy2", scope: !7224, file: !3, line: 1719, type: !168)
!7227 = !DILocation(line: 1719, column: 2, scope: !7213)
!7228 = !DILocation(line: 1719, column: 2, scope: !7212)
!7229 = !DILocation(line: 1719, column: 2, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7212, file: !3, line: 1719, column: 2)
!7231 = !DILocalVariable(name: "__dummy", scope: !7232, file: !3, line: 1719, type: !168)
!7232 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 1719, column: 2)
!7233 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 1719, column: 2)
!7234 = !DILocation(line: 1719, column: 2, scope: !7232)
!7235 = !DILocalVariable(name: "__dummy2", scope: !7232, file: !3, line: 1719, type: !168)
!7236 = !DILocation(line: 1719, column: 2, scope: !7233)
!7237 = !DILocation(line: 1719, column: 2, scope: !7211)
!7238 = !{i32 -2140093839}
!7239 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !7209)
!7240 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !7209)
!7241 = !DILocation(line: 1719, column: 2, scope: !7210)
!7242 = !DILocation(line: 1720, column: 19, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 1720, column: 6)
!7244 = !DILocation(line: 1720, column: 24, scope: !7243)
!7245 = !DILocation(line: 1720, column: 7, scope: !7243)
!7246 = !DILocation(line: 1720, column: 6, scope: !7204)
!7247 = !DILocation(line: 1721, column: 18, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 1720, column: 31)
!7249 = !DILocation(line: 1721, column: 23, scope: !7248)
!7250 = !DILocation(line: 1721, column: 3, scope: !7248)
!7251 = !DILocation(line: 1722, column: 11, scope: !7248)
!7252 = !DILocation(line: 1722, column: 16, scope: !7248)
!7253 = !DILocation(line: 1722, column: 9, scope: !7248)
!7254 = !DILocation(line: 1723, column: 2, scope: !7248)
!7255 = !DILocation(line: 1724, column: 50, scope: !7204)
!7256 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !7206)
!7257 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !7206)
!7258 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !7206)
!7259 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !7206)
!7260 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !7206)
!7261 = !DILocation(line: 1726, column: 13, scope: !7204)
!7262 = !DILocation(line: 1726, column: 2, scope: !7204)
!7263 = !DILocation(line: 1727, column: 1, scope: !7204)
!7264 = distinct !DISubprogram(name: "list_empty", scope: !7185, file: !7185, line: 280, type: !7265, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7265 = !DISubroutineType(types: !7266)
!7266 = !{!74, !7267}
!7267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7268, size: 64)
!7268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !298)
!7269 = !DILocalVariable(name: "head", arg: 1, scope: !7264, file: !7185, line: 280, type: !7267)
!7270 = !DILocation(line: 280, column: 54, scope: !7264)
!7271 = !DILocation(line: 282, column: 9, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7264, file: !7185, line: 282, column: 9)
!7273 = !DILocation(line: 282, column: 9, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7272, file: !7185, line: 282, column: 9)
!7275 = !DILocation(line: 282, column: 34, scope: !7264)
!7276 = !DILocation(line: 282, column: 31, scope: !7264)
!7277 = !DILocation(line: 282, column: 2, scope: !7264)
!7278 = distinct !DISubprogram(name: "list_del_init", scope: !7185, file: !7185, line: 202, type: !7279, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7279 = !DISubroutineType(types: !7280)
!7280 = !{null, !301}
!7281 = !DILocalVariable(name: "entry", arg: 1, scope: !7278, file: !7185, line: 202, type: !301)
!7282 = !DILocation(line: 202, column: 52, scope: !7278)
!7283 = !DILocation(line: 204, column: 19, scope: !7278)
!7284 = !DILocation(line: 204, column: 2, scope: !7278)
!7285 = !DILocation(line: 205, column: 17, scope: !7278)
!7286 = !DILocation(line: 205, column: 2, scope: !7278)
!7287 = !DILocation(line: 206, column: 1, scope: !7278)
!7288 = distinct !DISubprogram(name: "get_random_bytes_arch", scope: !3, file: !3, line: 1742, type: !7289, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7289 = !DISubroutineType(types: !7290)
!7290 = !{!74, !183, !74}
!7291 = !DILocalVariable(name: "buf", arg: 1, scope: !7288, file: !3, line: 1742, type: !183)
!7292 = !DILocation(line: 1742, column: 46, scope: !7288)
!7293 = !DILocalVariable(name: "nbytes", arg: 2, scope: !7288, file: !3, line: 1742, type: !74)
!7294 = !DILocation(line: 1742, column: 55, scope: !7288)
!7295 = !DILocalVariable(name: "left", scope: !7288, file: !3, line: 1744, type: !74)
!7296 = !DILocation(line: 1744, column: 6, scope: !7288)
!7297 = !DILocation(line: 1744, column: 13, scope: !7288)
!7298 = !DILocalVariable(name: "p", scope: !7288, file: !3, line: 1745, type: !184)
!7299 = !DILocation(line: 1745, column: 8, scope: !7288)
!7300 = !DILocation(line: 1745, column: 12, scope: !7288)
!7301 = !DILocation(line: 1747, column: 30, scope: !7288)
!7302 = !DILocation(line: 1747, column: 36, scope: !7288)
!7303 = !DILocation(line: 1747, column: 2, scope: !7288)
!7304 = !DILocation(line: 1748, column: 2, scope: !7288)
!7305 = !DILocation(line: 1748, column: 9, scope: !7288)
!7306 = !DILocalVariable(name: "v", scope: !7307, file: !3, line: 1749, type: !168)
!7307 = distinct !DILexicalBlock(scope: !7288, file: !3, line: 1748, column: 15)
!7308 = !DILocation(line: 1749, column: 17, scope: !7307)
!7309 = !DILocalVariable(name: "chunk", scope: !7307, file: !3, line: 1750, type: !74)
!7310 = !DILocation(line: 1750, column: 7, scope: !7307)
!7311 = !DILocalVariable(name: "__UNIQUE_ID___x336", scope: !7312, file: !3, line: 1750, type: !74)
!7312 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 1750, column: 15)
!7313 = !DILocation(line: 1750, column: 15, scope: !7312)
!7314 = !DILocalVariable(name: "__UNIQUE_ID___y337", scope: !7312, file: !3, line: 1750, type: !74)
!7315 = !DILocation(line: 1752, column: 8, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 1752, column: 7)
!7317 = !DILocation(line: 1752, column: 7, scope: !7307)
!7318 = !DILocation(line: 1753, column: 4, scope: !7316)
!7319 = !DILocation(line: 1755, column: 10, scope: !7307)
!7320 = !DILocation(line: 1755, column: 3, scope: !7307)
!7321 = !DILocation(line: 1755, column: 17, scope: !7307)
!7322 = !DILocation(line: 1756, column: 8, scope: !7307)
!7323 = !DILocation(line: 1756, column: 5, scope: !7307)
!7324 = !DILocation(line: 1757, column: 11, scope: !7307)
!7325 = !DILocation(line: 1757, column: 8, scope: !7307)
!7326 = distinct !{!7326, !7304, !7327}
!7327 = !DILocation(line: 1758, column: 2, scope: !7288)
!7328 = !DILocation(line: 1760, column: 9, scope: !7288)
!7329 = !DILocation(line: 1760, column: 18, scope: !7288)
!7330 = !DILocation(line: 1760, column: 16, scope: !7288)
!7331 = !DILocation(line: 1760, column: 2, scope: !7288)
!7332 = distinct !DISubprogram(name: "trace_get_random_bytes_arch", scope: !5866, file: !5866, line: 217, type: !5867, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7333 = !DILocalVariable(name: "nbytes", arg: 1, scope: !7332, file: !5866, line: 217, type: !74)
!7334 = !DILocation(line: 217, column: 1, scope: !7332)
!7335 = !DILocalVariable(name: "IP", arg: 2, scope: !7332, file: !5866, line: 217, type: !168)
!7336 = distinct !DISubprogram(name: "arch_get_random_long", scope: !6654, file: !6654, line: 73, type: !6655, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7337 = !DILocation(line: 173, column: 49, scope: !6658, inlinedAt: !7338)
!7338 = distinct !DILocation(line: 75, column: 9, scope: !7336)
!7339 = !DILocalVariable(name: "v", arg: 1, scope: !7336, file: !6654, line: 73, type: !280)
!7340 = !DILocation(line: 73, column: 69, scope: !7336)
!7341 = !DILocation(line: 75, column: 9, scope: !7336)
!7342 = !DILocation(line: 175, column: 2, scope: !6658, inlinedAt: !7338)
!7343 = !DILocation(line: 211, column: 1, scope: !6658, inlinedAt: !7338)
!7344 = !DILocation(line: 212, column: 2, scope: !6658, inlinedAt: !7338)
!7345 = !DILocation(line: 213, column: 1, scope: !6658, inlinedAt: !7338)
!7346 = !DILocation(line: 214, column: 2, scope: !6658, inlinedAt: !7338)
!7347 = !DILocation(line: 215, column: 1, scope: !6658, inlinedAt: !7338)
!7348 = !DILocation(line: 75, column: 58, scope: !7336)
!7349 = !DILocation(line: 75, column: 46, scope: !7336)
!7350 = !DILocation(line: 75, column: 2, scope: !7336)
!7351 = distinct !DISubprogram(name: "rand_initialize", scope: !3, file: !3, line: 1799, type: !6986, scopeLine: 1800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7352 = !DILocation(line: 1801, column: 2, scope: !7351)
!7353 = !DILocation(line: 1802, column: 2, scope: !7351)
!7354 = !DILocation(line: 1803, column: 26, scope: !7351)
!7355 = !DILocation(line: 1803, column: 24, scope: !7351)
!7356 = !DILocation(line: 1804, column: 6, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7351, file: !3, line: 1804, column: 6)
!7358 = !DILocation(line: 1804, column: 6, scope: !7351)
!7359 = !DILocation(line: 1805, column: 28, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7357, file: !3, line: 1804, column: 25)
!7361 = !DILocation(line: 1806, column: 29, scope: !7360)
!7362 = !DILocation(line: 1807, column: 2, scope: !7360)
!7363 = !DILocation(line: 1808, column: 2, scope: !7351)
!7364 = distinct !DISubprogram(name: "init_std_data", scope: !3, file: !3, line: 1773, type: !7365, scopeLine: 1774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7365 = !DISubroutineType(types: !7366)
!7366 = !{null, !5886}
!7367 = !DILocalVariable(name: "r", arg: 1, scope: !7364, file: !3, line: 1773, type: !5886)
!7368 = !DILocation(line: 1773, column: 56, scope: !7364)
!7369 = !DILocalVariable(name: "i", scope: !7364, file: !3, line: 1775, type: !74)
!7370 = !DILocation(line: 1775, column: 6, scope: !7364)
!7371 = !DILocalVariable(name: "now", scope: !7364, file: !3, line: 1776, type: !426)
!7372 = !DILocation(line: 1776, column: 10, scope: !7364)
!7373 = !DILocation(line: 1776, column: 16, scope: !7364)
!7374 = !DILocalVariable(name: "rv", scope: !7364, file: !3, line: 1777, type: !168)
!7375 = !DILocation(line: 1777, column: 16, scope: !7364)
!7376 = !DILocation(line: 1779, column: 17, scope: !7364)
!7377 = !DILocation(line: 1779, column: 20, scope: !7364)
!7378 = !DILocation(line: 1779, column: 2, scope: !7364)
!7379 = !DILocation(line: 1780, column: 11, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7364, file: !3, line: 1780, column: 2)
!7381 = !DILocation(line: 1780, column: 14, scope: !7380)
!7382 = !DILocation(line: 1780, column: 24, scope: !7380)
!7383 = !DILocation(line: 1780, column: 9, scope: !7380)
!7384 = !DILocation(line: 1780, column: 7, scope: !7380)
!7385 = !DILocation(line: 1780, column: 35, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 1780, column: 2)
!7387 = !DILocation(line: 1780, column: 37, scope: !7386)
!7388 = !DILocation(line: 1780, column: 2, scope: !7380)
!7389 = !DILocation(line: 1781, column: 8, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 1781, column: 7)
!7391 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 1780, column: 59)
!7392 = !DILocation(line: 1781, column: 39, scope: !7390)
!7393 = !DILocation(line: 1782, column: 8, scope: !7390)
!7394 = !DILocation(line: 1781, column: 7, scope: !7391)
!7395 = !DILocation(line: 1783, column: 9, scope: !7390)
!7396 = !DILocation(line: 1783, column: 7, scope: !7390)
!7397 = !DILocation(line: 1783, column: 4, scope: !7390)
!7398 = !DILocation(line: 1784, column: 18, scope: !7391)
!7399 = !DILocation(line: 1784, column: 21, scope: !7391)
!7400 = !DILocation(line: 1784, column: 3, scope: !7391)
!7401 = !DILocation(line: 1785, column: 2, scope: !7391)
!7402 = !DILocation(line: 1780, column: 44, scope: !7386)
!7403 = !DILocation(line: 1780, column: 2, scope: !7386)
!7404 = distinct !{!7404, !7388, !7405}
!7405 = !DILocation(line: 1785, column: 2, scope: !7380)
!7406 = !DILocation(line: 1786, column: 17, scope: !7364)
!7407 = !DILocation(line: 1786, column: 20, scope: !7364)
!7408 = !DILocation(line: 1786, column: 2, scope: !7364)
!7409 = !DILocation(line: 1787, column: 1, scope: !7364)
!7410 = distinct !DISubprogram(name: "crng_initialize_primary", scope: !3, file: !3, line: 828, type: !7411, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7411 = !DISubroutineType(types: !7412)
!7412 = !{null, !7413}
!7413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5580, size: 64)
!7414 = !DILocalVariable(name: "crng", arg: 1, scope: !7410, file: !3, line: 828, type: !7413)
!7415 = !DILocation(line: 828, column: 63, scope: !7410)
!7416 = !DILocation(line: 830, column: 10, scope: !7410)
!7417 = !DILocation(line: 830, column: 16, scope: !7410)
!7418 = !DILocation(line: 830, column: 2, scope: !7410)
!7419 = !DILocation(line: 831, column: 33, scope: !7410)
!7420 = !DILocation(line: 831, column: 39, scope: !7410)
!7421 = !DILocation(line: 831, column: 32, scope: !7410)
!7422 = !DILocation(line: 831, column: 2, scope: !7410)
!7423 = !DILocation(line: 832, column: 31, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 832, column: 6)
!7425 = !DILocation(line: 832, column: 6, scope: !7424)
!7426 = !DILocation(line: 832, column: 37, scope: !7424)
!7427 = !DILocation(line: 832, column: 40, scope: !7424)
!7428 = !DILocation(line: 832, column: 6, scope: !7410)
!7429 = !DILocation(line: 833, column: 3, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7424, file: !3, line: 832, column: 51)
!7431 = !DILocation(line: 834, column: 3, scope: !7430)
!7432 = !DILocation(line: 835, column: 13, scope: !7430)
!7433 = !DILocation(line: 836, column: 3, scope: !7430)
!7434 = !DILocation(line: 837, column: 2, scope: !7430)
!7435 = !DILocation(line: 838, column: 20, scope: !7410)
!7436 = !DILocation(line: 838, column: 28, scope: !7410)
!7437 = !DILocation(line: 838, column: 51, scope: !7410)
!7438 = !DILocation(line: 838, column: 2, scope: !7410)
!7439 = !DILocation(line: 838, column: 8, scope: !7410)
!7440 = !DILocation(line: 838, column: 18, scope: !7410)
!7441 = !DILocation(line: 839, column: 1, scope: !7410)
!7442 = distinct !DISubprogram(name: "rand_initialize_disk", scope: !3, file: !3, line: 1812, type: !2845, scopeLine: 1813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7443 = !DILocalVariable(name: "disk", arg: 1, scope: !7442, file: !3, line: 1812, type: !2695)
!7444 = !DILocation(line: 1812, column: 43, scope: !7442)
!7445 = !DILocalVariable(name: "state", scope: !7442, file: !3, line: 1814, type: !3429)
!7446 = !DILocation(line: 1814, column: 27, scope: !7442)
!7447 = !DILocation(line: 1820, column: 10, scope: !7442)
!7448 = !DILocation(line: 1820, column: 8, scope: !7442)
!7449 = !DILocation(line: 1821, column: 6, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7442, file: !3, line: 1821, column: 6)
!7451 = !DILocation(line: 1821, column: 6, scope: !7442)
!7452 = !DILocation(line: 1822, column: 3, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7450, file: !3, line: 1821, column: 13)
!7454 = !DILocation(line: 1822, column: 10, scope: !7453)
!7455 = !DILocation(line: 1822, column: 20, scope: !7453)
!7456 = !DILocation(line: 1823, column: 18, scope: !7453)
!7457 = !DILocation(line: 1823, column: 3, scope: !7453)
!7458 = !DILocation(line: 1823, column: 9, scope: !7453)
!7459 = !DILocation(line: 1823, column: 16, scope: !7453)
!7460 = !DILocation(line: 1824, column: 2, scope: !7453)
!7461 = !DILocation(line: 1825, column: 1, scope: !7442)
!7462 = distinct !DISubprogram(name: "kzalloc", scope: !161, file: !161, line: 662, type: !7463, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7463 = !DISubroutineType(types: !7464)
!7464 = !{!183, !288, !187}
!7465 = !DILocalVariable(name: "s", arg: 1, scope: !7466, file: !161, line: 445, type: !1308)
!7466 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !161, file: !161, line: 445, type: !7467, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7467 = !DISubroutineType(types: !7468)
!7468 = !{!183, !1308, !187, !288}
!7469 = !DILocation(line: 445, column: 72, scope: !7466, inlinedAt: !7470)
!7470 = distinct !DILocation(line: 552, column: 10, scope: !7471, inlinedAt: !7474)
!7471 = distinct !DILexicalBlock(scope: !7472, file: !161, line: 540, column: 34)
!7472 = distinct !DILexicalBlock(scope: !7473, file: !161, line: 540, column: 6)
!7473 = distinct !DISubprogram(name: "kmalloc", scope: !161, file: !161, line: 538, type: !7463, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7474 = distinct !DILocation(line: 664, column: 9, scope: !7462)
!7475 = !DILocalVariable(name: "flags", arg: 2, scope: !7466, file: !161, line: 446, type: !187)
!7476 = !DILocation(line: 446, column: 9, scope: !7466, inlinedAt: !7470)
!7477 = !DILocalVariable(name: "size", arg: 3, scope: !7466, file: !161, line: 446, type: !288)
!7478 = !DILocation(line: 446, column: 23, scope: !7466, inlinedAt: !7470)
!7479 = !DILocalVariable(name: "ret", scope: !7466, file: !161, line: 448, type: !183)
!7480 = !DILocation(line: 448, column: 8, scope: !7466, inlinedAt: !7470)
!7481 = !DILocalVariable(name: "flags", arg: 1, scope: !7482, file: !161, line: 318, type: !187)
!7482 = distinct !DISubprogram(name: "kmalloc_type", scope: !161, file: !161, line: 318, type: !7483, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7483 = !DISubroutineType(types: !7484)
!7484 = !{!160, !187}
!7485 = !DILocation(line: 318, column: 67, scope: !7482, inlinedAt: !7486)
!7486 = distinct !DILocation(line: 553, column: 20, scope: !7471, inlinedAt: !7474)
!7487 = !DILocalVariable(name: "size", arg: 1, scope: !7488, file: !161, line: 346, type: !288)
!7488 = distinct !DISubprogram(name: "kmalloc_index", scope: !161, file: !161, line: 346, type: !7489, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7489 = !DISubroutineType(types: !7490)
!7490 = !{!7, !288}
!7491 = !DILocation(line: 346, column: 58, scope: !7488, inlinedAt: !7492)
!7492 = distinct !DILocation(line: 547, column: 11, scope: !7471, inlinedAt: !7474)
!7493 = !DILocalVariable(name: "size", arg: 1, scope: !7494, file: !161, line: 472, type: !288)
!7494 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !161, file: !161, line: 472, type: !7495, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7495 = !DISubroutineType(types: !7496)
!7496 = !{!183, !288, !187, !7}
!7497 = !DILocation(line: 472, column: 28, scope: !7494, inlinedAt: !7498)
!7498 = distinct !DILocation(line: 481, column: 9, scope: !7499, inlinedAt: !7500)
!7499 = distinct !DISubprogram(name: "kmalloc_large", scope: !161, file: !161, line: 478, type: !7463, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7500 = distinct !DILocation(line: 545, column: 11, scope: !7501, inlinedAt: !7474)
!7501 = distinct !DILexicalBlock(scope: !7471, file: !161, line: 544, column: 7)
!7502 = !DILocalVariable(name: "flags", arg: 2, scope: !7494, file: !161, line: 472, type: !187)
!7503 = !DILocation(line: 472, column: 40, scope: !7494, inlinedAt: !7498)
!7504 = !DILocalVariable(name: "order", arg: 3, scope: !7494, file: !161, line: 472, type: !7)
!7505 = !DILocation(line: 472, column: 60, scope: !7494, inlinedAt: !7498)
!7506 = !DILocalVariable(name: "size", arg: 1, scope: !7499, file: !161, line: 478, type: !288)
!7507 = !DILocation(line: 478, column: 51, scope: !7499, inlinedAt: !7500)
!7508 = !DILocalVariable(name: "flags", arg: 2, scope: !7499, file: !161, line: 478, type: !187)
!7509 = !DILocation(line: 478, column: 63, scope: !7499, inlinedAt: !7500)
!7510 = !DILocalVariable(name: "order", scope: !7499, file: !161, line: 480, type: !7)
!7511 = !DILocation(line: 480, column: 15, scope: !7499, inlinedAt: !7500)
!7512 = !DILocalVariable(name: "size", arg: 1, scope: !7473, file: !161, line: 538, type: !288)
!7513 = !DILocation(line: 538, column: 45, scope: !7473, inlinedAt: !7474)
!7514 = !DILocalVariable(name: "flags", arg: 2, scope: !7473, file: !161, line: 538, type: !187)
!7515 = !DILocation(line: 538, column: 57, scope: !7473, inlinedAt: !7474)
!7516 = !DILocalVariable(name: "index", scope: !7471, file: !161, line: 542, type: !7)
!7517 = !DILocation(line: 542, column: 16, scope: !7471, inlinedAt: !7474)
!7518 = !DILocalVariable(name: "size", arg: 1, scope: !7462, file: !161, line: 662, type: !288)
!7519 = !DILocation(line: 662, column: 36, scope: !7462)
!7520 = !DILocalVariable(name: "flags", arg: 2, scope: !7462, file: !161, line: 662, type: !187)
!7521 = !DILocation(line: 662, column: 48, scope: !7462)
!7522 = !DILocation(line: 664, column: 17, scope: !7462)
!7523 = !DILocation(line: 664, column: 23, scope: !7462)
!7524 = !DILocation(line: 664, column: 29, scope: !7462)
!7525 = !DILocation(line: 540, column: 27, scope: !7472, inlinedAt: !7474)
!7526 = !DILocation(line: 540, column: 6, scope: !7472, inlinedAt: !7474)
!7527 = !DILocation(line: 540, column: 6, scope: !7473, inlinedAt: !7474)
!7528 = !DILocation(line: 544, column: 7, scope: !7501, inlinedAt: !7474)
!7529 = !DILocation(line: 544, column: 12, scope: !7501, inlinedAt: !7474)
!7530 = !DILocation(line: 544, column: 7, scope: !7471, inlinedAt: !7474)
!7531 = !DILocation(line: 545, column: 25, scope: !7501, inlinedAt: !7474)
!7532 = !DILocation(line: 545, column: 31, scope: !7501, inlinedAt: !7474)
!7533 = !DILocation(line: 480, column: 33, scope: !7499, inlinedAt: !7500)
!7534 = !DILocation(line: 480, column: 23, scope: !7499, inlinedAt: !7500)
!7535 = !DILocation(line: 481, column: 29, scope: !7499, inlinedAt: !7500)
!7536 = !DILocation(line: 481, column: 35, scope: !7499, inlinedAt: !7500)
!7537 = !DILocation(line: 481, column: 42, scope: !7499, inlinedAt: !7500)
!7538 = !DILocation(line: 474, column: 23, scope: !7494, inlinedAt: !7498)
!7539 = !DILocation(line: 474, column: 29, scope: !7494, inlinedAt: !7498)
!7540 = !DILocation(line: 474, column: 36, scope: !7494, inlinedAt: !7498)
!7541 = !DILocation(line: 474, column: 9, scope: !7494, inlinedAt: !7498)
!7542 = !DILocation(line: 545, column: 4, scope: !7501, inlinedAt: !7474)
!7543 = !DILocation(line: 547, column: 25, scope: !7471, inlinedAt: !7474)
!7544 = !DILocation(line: 348, column: 7, scope: !7545, inlinedAt: !7492)
!7545 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 348, column: 6)
!7546 = !DILocation(line: 348, column: 6, scope: !7488, inlinedAt: !7492)
!7547 = !DILocation(line: 349, column: 3, scope: !7545, inlinedAt: !7492)
!7548 = !DILocation(line: 351, column: 6, scope: !7549, inlinedAt: !7492)
!7549 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 351, column: 6)
!7550 = !DILocation(line: 351, column: 11, scope: !7549, inlinedAt: !7492)
!7551 = !DILocation(line: 351, column: 6, scope: !7488, inlinedAt: !7492)
!7552 = !DILocation(line: 352, column: 3, scope: !7549, inlinedAt: !7492)
!7553 = !DILocation(line: 354, column: 32, scope: !7554, inlinedAt: !7492)
!7554 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 354, column: 6)
!7555 = !DILocation(line: 354, column: 37, scope: !7554, inlinedAt: !7492)
!7556 = !DILocation(line: 354, column: 42, scope: !7554, inlinedAt: !7492)
!7557 = !DILocation(line: 354, column: 45, scope: !7554, inlinedAt: !7492)
!7558 = !DILocation(line: 354, column: 50, scope: !7554, inlinedAt: !7492)
!7559 = !DILocation(line: 354, column: 6, scope: !7488, inlinedAt: !7492)
!7560 = !DILocation(line: 355, column: 3, scope: !7554, inlinedAt: !7492)
!7561 = !DILocation(line: 356, column: 32, scope: !7562, inlinedAt: !7492)
!7562 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 356, column: 6)
!7563 = !DILocation(line: 356, column: 37, scope: !7562, inlinedAt: !7492)
!7564 = !DILocation(line: 356, column: 43, scope: !7562, inlinedAt: !7492)
!7565 = !DILocation(line: 356, column: 46, scope: !7562, inlinedAt: !7492)
!7566 = !DILocation(line: 356, column: 51, scope: !7562, inlinedAt: !7492)
!7567 = !DILocation(line: 356, column: 6, scope: !7488, inlinedAt: !7492)
!7568 = !DILocation(line: 357, column: 3, scope: !7562, inlinedAt: !7492)
!7569 = !DILocation(line: 358, column: 6, scope: !7570, inlinedAt: !7492)
!7570 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 358, column: 6)
!7571 = !DILocation(line: 358, column: 11, scope: !7570, inlinedAt: !7492)
!7572 = !DILocation(line: 358, column: 6, scope: !7488, inlinedAt: !7492)
!7573 = !DILocation(line: 358, column: 26, scope: !7570, inlinedAt: !7492)
!7574 = !DILocation(line: 359, column: 6, scope: !7575, inlinedAt: !7492)
!7575 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 359, column: 6)
!7576 = !DILocation(line: 359, column: 11, scope: !7575, inlinedAt: !7492)
!7577 = !DILocation(line: 359, column: 6, scope: !7488, inlinedAt: !7492)
!7578 = !DILocation(line: 359, column: 26, scope: !7575, inlinedAt: !7492)
!7579 = !DILocation(line: 360, column: 6, scope: !7580, inlinedAt: !7492)
!7580 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 360, column: 6)
!7581 = !DILocation(line: 360, column: 11, scope: !7580, inlinedAt: !7492)
!7582 = !DILocation(line: 360, column: 6, scope: !7488, inlinedAt: !7492)
!7583 = !DILocation(line: 360, column: 26, scope: !7580, inlinedAt: !7492)
!7584 = !DILocation(line: 361, column: 6, scope: !7585, inlinedAt: !7492)
!7585 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 361, column: 6)
!7586 = !DILocation(line: 361, column: 11, scope: !7585, inlinedAt: !7492)
!7587 = !DILocation(line: 361, column: 6, scope: !7488, inlinedAt: !7492)
!7588 = !DILocation(line: 361, column: 26, scope: !7585, inlinedAt: !7492)
!7589 = !DILocation(line: 362, column: 6, scope: !7590, inlinedAt: !7492)
!7590 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 362, column: 6)
!7591 = !DILocation(line: 362, column: 11, scope: !7590, inlinedAt: !7492)
!7592 = !DILocation(line: 362, column: 6, scope: !7488, inlinedAt: !7492)
!7593 = !DILocation(line: 362, column: 26, scope: !7590, inlinedAt: !7492)
!7594 = !DILocation(line: 363, column: 6, scope: !7595, inlinedAt: !7492)
!7595 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 363, column: 6)
!7596 = !DILocation(line: 363, column: 11, scope: !7595, inlinedAt: !7492)
!7597 = !DILocation(line: 363, column: 6, scope: !7488, inlinedAt: !7492)
!7598 = !DILocation(line: 363, column: 26, scope: !7595, inlinedAt: !7492)
!7599 = !DILocation(line: 364, column: 6, scope: !7600, inlinedAt: !7492)
!7600 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 364, column: 6)
!7601 = !DILocation(line: 364, column: 11, scope: !7600, inlinedAt: !7492)
!7602 = !DILocation(line: 364, column: 6, scope: !7488, inlinedAt: !7492)
!7603 = !DILocation(line: 364, column: 26, scope: !7600, inlinedAt: !7492)
!7604 = !DILocation(line: 365, column: 6, scope: !7605, inlinedAt: !7492)
!7605 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 365, column: 6)
!7606 = !DILocation(line: 365, column: 11, scope: !7605, inlinedAt: !7492)
!7607 = !DILocation(line: 365, column: 6, scope: !7488, inlinedAt: !7492)
!7608 = !DILocation(line: 365, column: 26, scope: !7605, inlinedAt: !7492)
!7609 = !DILocation(line: 366, column: 6, scope: !7610, inlinedAt: !7492)
!7610 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 366, column: 6)
!7611 = !DILocation(line: 366, column: 11, scope: !7610, inlinedAt: !7492)
!7612 = !DILocation(line: 366, column: 6, scope: !7488, inlinedAt: !7492)
!7613 = !DILocation(line: 366, column: 26, scope: !7610, inlinedAt: !7492)
!7614 = !DILocation(line: 367, column: 6, scope: !7615, inlinedAt: !7492)
!7615 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 367, column: 6)
!7616 = !DILocation(line: 367, column: 11, scope: !7615, inlinedAt: !7492)
!7617 = !DILocation(line: 367, column: 6, scope: !7488, inlinedAt: !7492)
!7618 = !DILocation(line: 367, column: 26, scope: !7615, inlinedAt: !7492)
!7619 = !DILocation(line: 368, column: 6, scope: !7620, inlinedAt: !7492)
!7620 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 368, column: 6)
!7621 = !DILocation(line: 368, column: 11, scope: !7620, inlinedAt: !7492)
!7622 = !DILocation(line: 368, column: 6, scope: !7488, inlinedAt: !7492)
!7623 = !DILocation(line: 368, column: 26, scope: !7620, inlinedAt: !7492)
!7624 = !DILocation(line: 369, column: 6, scope: !7625, inlinedAt: !7492)
!7625 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 369, column: 6)
!7626 = !DILocation(line: 369, column: 11, scope: !7625, inlinedAt: !7492)
!7627 = !DILocation(line: 369, column: 6, scope: !7488, inlinedAt: !7492)
!7628 = !DILocation(line: 369, column: 26, scope: !7625, inlinedAt: !7492)
!7629 = !DILocation(line: 370, column: 6, scope: !7630, inlinedAt: !7492)
!7630 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 370, column: 6)
!7631 = !DILocation(line: 370, column: 11, scope: !7630, inlinedAt: !7492)
!7632 = !DILocation(line: 370, column: 6, scope: !7488, inlinedAt: !7492)
!7633 = !DILocation(line: 370, column: 26, scope: !7630, inlinedAt: !7492)
!7634 = !DILocation(line: 371, column: 6, scope: !7635, inlinedAt: !7492)
!7635 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 371, column: 6)
!7636 = !DILocation(line: 371, column: 11, scope: !7635, inlinedAt: !7492)
!7637 = !DILocation(line: 371, column: 6, scope: !7488, inlinedAt: !7492)
!7638 = !DILocation(line: 371, column: 26, scope: !7635, inlinedAt: !7492)
!7639 = !DILocation(line: 372, column: 6, scope: !7640, inlinedAt: !7492)
!7640 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 372, column: 6)
!7641 = !DILocation(line: 372, column: 11, scope: !7640, inlinedAt: !7492)
!7642 = !DILocation(line: 372, column: 6, scope: !7488, inlinedAt: !7492)
!7643 = !DILocation(line: 372, column: 26, scope: !7640, inlinedAt: !7492)
!7644 = !DILocation(line: 373, column: 6, scope: !7645, inlinedAt: !7492)
!7645 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 373, column: 6)
!7646 = !DILocation(line: 373, column: 11, scope: !7645, inlinedAt: !7492)
!7647 = !DILocation(line: 373, column: 6, scope: !7488, inlinedAt: !7492)
!7648 = !DILocation(line: 373, column: 26, scope: !7645, inlinedAt: !7492)
!7649 = !DILocation(line: 374, column: 6, scope: !7650, inlinedAt: !7492)
!7650 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 374, column: 6)
!7651 = !DILocation(line: 374, column: 11, scope: !7650, inlinedAt: !7492)
!7652 = !DILocation(line: 374, column: 6, scope: !7488, inlinedAt: !7492)
!7653 = !DILocation(line: 374, column: 26, scope: !7650, inlinedAt: !7492)
!7654 = !DILocation(line: 375, column: 6, scope: !7655, inlinedAt: !7492)
!7655 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 375, column: 6)
!7656 = !DILocation(line: 375, column: 11, scope: !7655, inlinedAt: !7492)
!7657 = !DILocation(line: 375, column: 6, scope: !7488, inlinedAt: !7492)
!7658 = !DILocation(line: 375, column: 27, scope: !7655, inlinedAt: !7492)
!7659 = !DILocation(line: 376, column: 6, scope: !7660, inlinedAt: !7492)
!7660 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 376, column: 6)
!7661 = !DILocation(line: 376, column: 11, scope: !7660, inlinedAt: !7492)
!7662 = !DILocation(line: 376, column: 6, scope: !7488, inlinedAt: !7492)
!7663 = !DILocation(line: 376, column: 32, scope: !7660, inlinedAt: !7492)
!7664 = !DILocation(line: 377, column: 6, scope: !7665, inlinedAt: !7492)
!7665 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 377, column: 6)
!7666 = !DILocation(line: 377, column: 11, scope: !7665, inlinedAt: !7492)
!7667 = !DILocation(line: 377, column: 6, scope: !7488, inlinedAt: !7492)
!7668 = !DILocation(line: 377, column: 32, scope: !7665, inlinedAt: !7492)
!7669 = !DILocation(line: 378, column: 6, scope: !7670, inlinedAt: !7492)
!7670 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 378, column: 6)
!7671 = !DILocation(line: 378, column: 11, scope: !7670, inlinedAt: !7492)
!7672 = !DILocation(line: 378, column: 6, scope: !7488, inlinedAt: !7492)
!7673 = !DILocation(line: 378, column: 32, scope: !7670, inlinedAt: !7492)
!7674 = !DILocation(line: 379, column: 6, scope: !7675, inlinedAt: !7492)
!7675 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 379, column: 6)
!7676 = !DILocation(line: 379, column: 11, scope: !7675, inlinedAt: !7492)
!7677 = !DILocation(line: 379, column: 6, scope: !7488, inlinedAt: !7492)
!7678 = !DILocation(line: 379, column: 33, scope: !7675, inlinedAt: !7492)
!7679 = !DILocation(line: 380, column: 6, scope: !7680, inlinedAt: !7492)
!7680 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 380, column: 6)
!7681 = !DILocation(line: 380, column: 11, scope: !7680, inlinedAt: !7492)
!7682 = !DILocation(line: 380, column: 6, scope: !7488, inlinedAt: !7492)
!7683 = !DILocation(line: 380, column: 33, scope: !7680, inlinedAt: !7492)
!7684 = !DILocation(line: 381, column: 6, scope: !7685, inlinedAt: !7492)
!7685 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 381, column: 6)
!7686 = !DILocation(line: 381, column: 11, scope: !7685, inlinedAt: !7492)
!7687 = !DILocation(line: 381, column: 6, scope: !7488, inlinedAt: !7492)
!7688 = !DILocation(line: 381, column: 33, scope: !7685, inlinedAt: !7492)
!7689 = !DILocation(line: 382, column: 2, scope: !7690, inlinedAt: !7492)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !161, line: 382, column: 2)
!7691 = distinct !DILexicalBlock(scope: !7488, file: !161, line: 382, column: 2)
!7692 = !{i32 -2143672468, i32 -2143672439, i32 -2143672393, i32 -2143672335, i32 -2143672281, i32 -2143672227, i32 -2143672172, i32 -2143672141}
!7693 = !DILocation(line: 382, column: 2, scope: !7694, inlinedAt: !7492)
!7694 = distinct !DILexicalBlock(scope: !7695, file: !161, line: 382, column: 2)
!7695 = distinct !DILexicalBlock(scope: !7691, file: !161, line: 382, column: 2)
!7696 = !{i32 -2143671698, i32 -2143671691, i32 -2143671637, i32 -2143671606, i32 -2143671576}
!7697 = !DILocation(line: 382, column: 2, scope: !7695, inlinedAt: !7492)
!7698 = !DILocation(line: 386, column: 1, scope: !7488, inlinedAt: !7492)
!7699 = !DILocation(line: 547, column: 9, scope: !7471, inlinedAt: !7474)
!7700 = !DILocation(line: 549, column: 8, scope: !7701, inlinedAt: !7474)
!7701 = distinct !DILexicalBlock(scope: !7471, file: !161, line: 549, column: 7)
!7702 = !DILocation(line: 549, column: 7, scope: !7471, inlinedAt: !7474)
!7703 = !DILocation(line: 550, column: 4, scope: !7701, inlinedAt: !7474)
!7704 = !DILocation(line: 553, column: 33, scope: !7471, inlinedAt: !7474)
!7705 = !DILocation(line: 325, column: 6, scope: !7706, inlinedAt: !7486)
!7706 = distinct !DILexicalBlock(scope: !7482, file: !161, line: 325, column: 6)
!7707 = !DILocation(line: 325, column: 6, scope: !7482, inlinedAt: !7486)
!7708 = !DILocation(line: 326, column: 3, scope: !7706, inlinedAt: !7486)
!7709 = !DILocation(line: 332, column: 9, scope: !7482, inlinedAt: !7486)
!7710 = !DILocation(line: 332, column: 15, scope: !7482, inlinedAt: !7486)
!7711 = !DILocation(line: 332, column: 2, scope: !7482, inlinedAt: !7486)
!7712 = !DILocation(line: 336, column: 1, scope: !7482, inlinedAt: !7486)
!7713 = !DILocation(line: 553, column: 5, scope: !7471, inlinedAt: !7474)
!7714 = !DILocation(line: 553, column: 41, scope: !7471, inlinedAt: !7474)
!7715 = !DILocation(line: 554, column: 5, scope: !7471, inlinedAt: !7474)
!7716 = !DILocation(line: 554, column: 12, scope: !7471, inlinedAt: !7474)
!7717 = !DILocation(line: 448, column: 31, scope: !7466, inlinedAt: !7470)
!7718 = !DILocation(line: 448, column: 34, scope: !7466, inlinedAt: !7470)
!7719 = !DILocation(line: 448, column: 14, scope: !7466, inlinedAt: !7470)
!7720 = !DILocation(line: 450, column: 22, scope: !7466, inlinedAt: !7470)
!7721 = !DILocation(line: 450, column: 25, scope: !7466, inlinedAt: !7470)
!7722 = !DILocation(line: 450, column: 30, scope: !7466, inlinedAt: !7470)
!7723 = !DILocation(line: 450, column: 36, scope: !7466, inlinedAt: !7470)
!7724 = !DILocation(line: 450, column: 8, scope: !7466, inlinedAt: !7470)
!7725 = !DILocation(line: 450, column: 6, scope: !7466, inlinedAt: !7470)
!7726 = !DILocation(line: 451, column: 9, scope: !7466, inlinedAt: !7470)
!7727 = !DILocation(line: 552, column: 3, scope: !7471, inlinedAt: !7474)
!7728 = !DILocation(line: 557, column: 19, scope: !7473, inlinedAt: !7474)
!7729 = !DILocation(line: 557, column: 25, scope: !7473, inlinedAt: !7474)
!7730 = !DILocation(line: 557, column: 9, scope: !7473, inlinedAt: !7474)
!7731 = !DILocation(line: 557, column: 2, scope: !7473, inlinedAt: !7474)
!7732 = !DILocation(line: 558, column: 1, scope: !7473, inlinedAt: !7474)
!7733 = !DILocation(line: 664, column: 2, scope: !7462)
!7734 = distinct !DISubprogram(name: "random_read", scope: !3, file: !3, line: 1860, type: !974, scopeLine: 1861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7735 = !DILocalVariable(name: "file", arg: 1, scope: !7734, file: !3, line: 1860, type: !971)
!7736 = !DILocation(line: 1860, column: 26, scope: !7734)
!7737 = !DILocalVariable(name: "buf", arg: 2, scope: !7734, file: !3, line: 1860, type: !184)
!7738 = !DILocation(line: 1860, column: 45, scope: !7734)
!7739 = !DILocalVariable(name: "nbytes", arg: 3, scope: !7734, file: !3, line: 1860, type: !288)
!7740 = !DILocation(line: 1860, column: 57, scope: !7734)
!7741 = !DILocalVariable(name: "ppos", arg: 4, scope: !7734, file: !3, line: 1860, type: !922)
!7742 = !DILocation(line: 1860, column: 73, scope: !7734)
!7743 = !DILocalVariable(name: "ret", scope: !7734, file: !3, line: 1862, type: !74)
!7744 = !DILocation(line: 1862, column: 6, scope: !7734)
!7745 = !DILocation(line: 1864, column: 8, scope: !7734)
!7746 = !DILocation(line: 1864, column: 6, scope: !7734)
!7747 = !DILocation(line: 1865, column: 6, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 1865, column: 6)
!7749 = !DILocation(line: 1865, column: 10, scope: !7748)
!7750 = !DILocation(line: 1865, column: 6, scope: !7734)
!7751 = !DILocation(line: 1866, column: 10, scope: !7748)
!7752 = !DILocation(line: 1866, column: 3, scope: !7748)
!7753 = !DILocation(line: 1867, column: 29, scope: !7734)
!7754 = !DILocation(line: 1867, column: 35, scope: !7734)
!7755 = !DILocation(line: 1867, column: 40, scope: !7734)
!7756 = !DILocation(line: 1867, column: 48, scope: !7734)
!7757 = !DILocation(line: 1867, column: 9, scope: !7734)
!7758 = !DILocation(line: 1867, column: 2, scope: !7734)
!7759 = !DILocation(line: 1868, column: 1, scope: !7734)
!7760 = distinct !DISubprogram(name: "random_write", scope: !3, file: !3, line: 1915, type: !981, scopeLine: 1917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7761 = !DILocalVariable(name: "file", arg: 1, scope: !7760, file: !3, line: 1915, type: !971)
!7762 = !DILocation(line: 1915, column: 42, scope: !7760)
!7763 = !DILocalVariable(name: "buffer", arg: 2, scope: !7760, file: !3, line: 1915, type: !281)
!7764 = !DILocation(line: 1915, column: 67, scope: !7760)
!7765 = !DILocalVariable(name: "count", arg: 3, scope: !7760, file: !3, line: 1916, type: !288)
!7766 = !DILocation(line: 1916, column: 15, scope: !7760)
!7767 = !DILocalVariable(name: "ppos", arg: 4, scope: !7760, file: !3, line: 1916, type: !922)
!7768 = !DILocation(line: 1916, column: 30, scope: !7760)
!7769 = !DILocalVariable(name: "ret", scope: !7760, file: !3, line: 1918, type: !288)
!7770 = !DILocation(line: 1918, column: 9, scope: !7760)
!7771 = !DILocation(line: 1920, column: 32, scope: !7760)
!7772 = !DILocation(line: 1920, column: 40, scope: !7760)
!7773 = !DILocation(line: 1920, column: 8, scope: !7760)
!7774 = !DILocation(line: 1920, column: 6, scope: !7760)
!7775 = !DILocation(line: 1921, column: 6, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 1921, column: 6)
!7777 = !DILocation(line: 1921, column: 6, scope: !7760)
!7778 = !DILocation(line: 1922, column: 10, scope: !7776)
!7779 = !DILocation(line: 1922, column: 3, scope: !7776)
!7780 = !DILocation(line: 1924, column: 18, scope: !7760)
!7781 = !DILocation(line: 1924, column: 2, scope: !7760)
!7782 = !DILocation(line: 1925, column: 1, scope: !7760)
!7783 = distinct !DISubprogram(name: "random_poll", scope: !3, file: !3, line: 1871, type: !7784, scopeLine: 1872, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7784 = !DISubroutineType(types: !7785)
!7785 = !{!1052, !971, !7786}
!7786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7787, size: 64)
!7787 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_table", file: !1056, line: 46, baseType: !1055)
!7788 = !DILocalVariable(name: "file", arg: 1, scope: !7783, file: !3, line: 1871, type: !971)
!7789 = !DILocation(line: 1871, column: 26, scope: !7783)
!7790 = !DILocalVariable(name: "wait", arg: 2, scope: !7783, file: !3, line: 1871, type: !7786)
!7791 = !DILocation(line: 1871, column: 45, scope: !7783)
!7792 = !DILocalVariable(name: "mask", scope: !7783, file: !3, line: 1873, type: !1052)
!7793 = !DILocation(line: 1873, column: 11, scope: !7783)
!7794 = !DILocation(line: 1875, column: 12, scope: !7783)
!7795 = !DILocation(line: 1875, column: 35, scope: !7783)
!7796 = !DILocation(line: 1875, column: 2, scope: !7783)
!7797 = !DILocation(line: 1876, column: 12, scope: !7783)
!7798 = !DILocation(line: 1876, column: 38, scope: !7783)
!7799 = !DILocation(line: 1876, column: 2, scope: !7783)
!7800 = !DILocation(line: 1877, column: 7, scope: !7783)
!7801 = !DILocation(line: 1878, column: 6, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7783, file: !3, line: 1878, column: 6)
!7803 = !DILocation(line: 1878, column: 6, scope: !7783)
!7804 = !DILocation(line: 1879, column: 8, scope: !7802)
!7805 = !DILocation(line: 1879, column: 3, scope: !7802)
!7806 = !DILocation(line: 1880, column: 6, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7783, file: !3, line: 1880, column: 6)
!7808 = !DILocation(line: 1880, column: 34, scope: !7807)
!7809 = !DILocation(line: 1880, column: 32, scope: !7807)
!7810 = !DILocation(line: 1880, column: 6, scope: !7783)
!7811 = !DILocation(line: 1881, column: 8, scope: !7807)
!7812 = !DILocation(line: 1881, column: 3, scope: !7807)
!7813 = !DILocation(line: 1882, column: 9, scope: !7783)
!7814 = !DILocation(line: 1882, column: 2, scope: !7783)
!7815 = distinct !DISubprogram(name: "random_ioctl", scope: !3, file: !3, line: 1927, type: !1072, scopeLine: 1928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7816 = !DILocalVariable(name: "f", arg: 1, scope: !7815, file: !3, line: 1927, type: !971)
!7817 = !DILocation(line: 1927, column: 39, scope: !7815)
!7818 = !DILocalVariable(name: "cmd", arg: 2, scope: !7815, file: !3, line: 1927, type: !7)
!7819 = !DILocation(line: 1927, column: 55, scope: !7815)
!7820 = !DILocalVariable(name: "arg", arg: 3, scope: !7815, file: !3, line: 1927, type: !168)
!7821 = !DILocation(line: 1927, column: 74, scope: !7815)
!7822 = !DILocalVariable(name: "size", scope: !7815, file: !3, line: 1929, type: !74)
!7823 = !DILocation(line: 1929, column: 6, scope: !7815)
!7824 = !DILocalVariable(name: "ent_count", scope: !7815, file: !3, line: 1929, type: !74)
!7825 = !DILocation(line: 1929, column: 12, scope: !7815)
!7826 = !DILocalVariable(name: "p", scope: !7815, file: !3, line: 1930, type: !883)
!7827 = !DILocation(line: 1930, column: 14, scope: !7815)
!7828 = !DILocation(line: 1930, column: 32, scope: !7815)
!7829 = !DILocation(line: 1930, column: 18, scope: !7815)
!7830 = !DILocalVariable(name: "retval", scope: !7815, file: !3, line: 1931, type: !74)
!7831 = !DILocation(line: 1931, column: 6, scope: !7815)
!7832 = !DILocation(line: 1933, column: 10, scope: !7815)
!7833 = !DILocation(line: 1933, column: 2, scope: !7815)
!7834 = !DILocation(line: 1936, column: 15, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 1933, column: 15)
!7836 = !DILocation(line: 1936, column: 13, scope: !7835)
!7837 = !DILocation(line: 1937, column: 7, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1937, column: 7)
!7839 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 1937, column: 7)
!7840 = !DILocalVariable(name: "__ret_pu", scope: !7841, file: !3, line: 1937, type: !74)
!7841 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 1937, column: 7)
!7842 = !DILocation(line: 1937, column: 7, scope: !7841)
!7843 = !DILocalVariable(name: "__ptr_pu", scope: !7841, file: !3, line: 1937, type: !183)
!7844 = !DILocalVariable(name: "__val_pu", scope: !7841, file: !3, line: 1937, type: !74)
!7845 = !{i32 -2140084807}
!7846 = !DILocation(line: 1937, column: 7, scope: !7839)
!7847 = !DILocation(line: 1937, column: 7, scope: !7835)
!7848 = !DILocation(line: 1938, column: 4, scope: !7839)
!7849 = !DILocation(line: 1939, column: 3, scope: !7835)
!7850 = !DILocation(line: 1941, column: 8, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 1941, column: 7)
!7852 = !DILocation(line: 1941, column: 7, scope: !7835)
!7853 = !DILocation(line: 1942, column: 4, scope: !7851)
!7854 = !DILocation(line: 1943, column: 7, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 1943, column: 7)
!7856 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 1943, column: 7)
!7857 = !DILocalVariable(name: "__ret_gu", scope: !7858, file: !3, line: 1943, type: !74)
!7858 = distinct !DILexicalBlock(scope: !7855, file: !3, line: 1943, column: 7)
!7859 = !DILocation(line: 1943, column: 7, scope: !7858)
!7860 = !DILocalVariable(name: "__val_gu", scope: !7858, file: !3, line: 1943, type: !7)
!7861 = !{i32 -2140083437}
!7862 = !DILocation(line: 1943, column: 7, scope: !7856)
!7863 = !DILocation(line: 1943, column: 7, scope: !7835)
!7864 = !DILocation(line: 1944, column: 4, scope: !7856)
!7865 = !DILocation(line: 1945, column: 48, scope: !7835)
!7866 = !DILocation(line: 1945, column: 10, scope: !7835)
!7867 = !DILocation(line: 1945, column: 3, scope: !7835)
!7868 = !DILocation(line: 1947, column: 8, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 1947, column: 7)
!7870 = !DILocation(line: 1947, column: 7, scope: !7835)
!7871 = !DILocation(line: 1948, column: 4, scope: !7869)
!7872 = !DILocation(line: 1949, column: 7, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 1949, column: 7)
!7874 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 1949, column: 7)
!7875 = !DILocalVariable(name: "__ret_gu", scope: !7876, file: !3, line: 1949, type: !74)
!7876 = distinct !DILexicalBlock(scope: !7873, file: !3, line: 1949, column: 7)
!7877 = !DILocation(line: 1949, column: 7, scope: !7876)
!7878 = !DILocalVariable(name: "__val_gu", scope: !7876, file: !3, line: 1949, type: !7)
!7879 = !{i32 -2140081074}
!7880 = !DILocation(line: 1949, column: 7, scope: !7874)
!7881 = !DILocation(line: 1949, column: 7, scope: !7835)
!7882 = !DILocation(line: 1950, column: 4, scope: !7874)
!7883 = !DILocation(line: 1951, column: 7, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 1951, column: 7)
!7885 = !DILocation(line: 1951, column: 17, scope: !7884)
!7886 = !DILocation(line: 1951, column: 7, scope: !7835)
!7887 = !DILocation(line: 1952, column: 4, scope: !7884)
!7888 = !DILocation(line: 1953, column: 7, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 1953, column: 7)
!7890 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 1953, column: 7)
!7891 = !DILocalVariable(name: "__ret_gu", scope: !7892, file: !3, line: 1953, type: !74)
!7892 = distinct !DILexicalBlock(scope: !7889, file: !3, line: 1953, column: 7)
!7893 = !DILocation(line: 1953, column: 7, scope: !7892)
!7894 = !DILocalVariable(name: "__val_gu", scope: !7892, file: !3, line: 1953, type: !7)
!7895 = !{i32 -2140079424}
!7896 = !DILocation(line: 1953, column: 7, scope: !7890)
!7897 = !DILocation(line: 1953, column: 7, scope: !7835)
!7898 = !DILocation(line: 1954, column: 4, scope: !7890)
!7899 = !DILocation(line: 1955, column: 57, scope: !7835)
!7900 = !DILocation(line: 1955, column: 36, scope: !7835)
!7901 = !DILocation(line: 1956, column: 9, scope: !7835)
!7902 = !DILocation(line: 1955, column: 12, scope: !7835)
!7903 = !DILocation(line: 1955, column: 10, scope: !7835)
!7904 = !DILocation(line: 1957, column: 7, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 1957, column: 7)
!7906 = !DILocation(line: 1957, column: 14, scope: !7905)
!7907 = !DILocation(line: 1957, column: 7, scope: !7835)
!7908 = !DILocation(line: 1958, column: 11, scope: !7905)
!7909 = !DILocation(line: 1958, column: 4, scope: !7905)
!7910 = !DILocation(line: 1959, column: 48, scope: !7835)
!7911 = !DILocation(line: 1959, column: 10, scope: !7835)
!7912 = !DILocation(line: 1959, column: 3, scope: !7835)
!7913 = !DILocation(line: 1966, column: 8, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 1966, column: 7)
!7915 = !DILocation(line: 1966, column: 7, scope: !7835)
!7916 = !DILocation(line: 1967, column: 4, scope: !7914)
!7917 = !DILocation(line: 1968, column: 28, scope: !7835)
!7918 = !DILocation(line: 1969, column: 3, scope: !7835)
!7919 = !DILocation(line: 1971, column: 8, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 1971, column: 7)
!7921 = !DILocation(line: 1971, column: 7, scope: !7835)
!7922 = !DILocation(line: 1972, column: 4, scope: !7920)
!7923 = !DILocation(line: 1973, column: 7, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 1973, column: 7)
!7925 = !DILocation(line: 1973, column: 17, scope: !7924)
!7926 = !DILocation(line: 1973, column: 7, scope: !7835)
!7927 = !DILocation(line: 1974, column: 4, scope: !7924)
!7928 = !DILocation(line: 1975, column: 3, scope: !7835)
!7929 = !DILocation(line: 1976, column: 27, scope: !7835)
!7930 = !DILocation(line: 1976, column: 35, scope: !7835)
!7931 = !DILocation(line: 1976, column: 25, scope: !7835)
!7932 = !DILocation(line: 1977, column: 3, scope: !7835)
!7933 = !DILocation(line: 1979, column: 3, scope: !7835)
!7934 = !DILocation(line: 1981, column: 1, scope: !7815)
!7935 = distinct !DISubprogram(name: "random_fasync", scope: !3, file: !3, line: 1983, type: !1096, scopeLine: 1984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7936 = !DILocalVariable(name: "fd", arg: 1, scope: !7935, file: !3, line: 1983, type: !74)
!7937 = !DILocation(line: 1983, column: 30, scope: !7935)
!7938 = !DILocalVariable(name: "filp", arg: 2, scope: !7935, file: !3, line: 1983, type: !971)
!7939 = !DILocation(line: 1983, column: 47, scope: !7935)
!7940 = !DILocalVariable(name: "on", arg: 3, scope: !7935, file: !3, line: 1983, type: !74)
!7941 = !DILocation(line: 1983, column: 57, scope: !7935)
!7942 = !DILocation(line: 1985, column: 23, scope: !7935)
!7943 = !DILocation(line: 1985, column: 27, scope: !7935)
!7944 = !DILocation(line: 1985, column: 33, scope: !7935)
!7945 = !DILocation(line: 1985, column: 9, scope: !7935)
!7946 = !DILocation(line: 1985, column: 2, scope: !7935)
!7947 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !7948)
!7948 = distinct !DILocation(line: 1853, column: 3, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 1846, column: 36)
!7950 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 1846, column: 6)
!7951 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !7948)
!7952 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !7953)
!7953 = distinct !DILocation(line: 1851, column: 3, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7955, file: !3, line: 1851, column: 3)
!7955 = distinct !DILexicalBlock(scope: !7956, file: !3, line: 1851, column: 3)
!7956 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 1851, column: 3)
!7957 = distinct !DILexicalBlock(scope: !7958, file: !3, line: 1851, column: 3)
!7958 = distinct !DILexicalBlock(scope: !7949, file: !3, line: 1851, column: 3)
!7959 = !DILocalVariable(name: "pscr_ret__", scope: !7960, file: !7961, line: 15, type: !329)
!7960 = distinct !DILexicalBlock(scope: !7962, file: !7961, line: 15, column: 9)
!7961 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!7962 = distinct !DISubprogram(name: "get_current", scope: !7961, file: !7961, line: 13, type: !7963, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!7963 = !DISubroutineType(types: !7964)
!7964 = !{!329}
!7965 = !DILocation(line: 15, column: 9, scope: !7960, inlinedAt: !7966)
!7966 = distinct !DILocation(line: 1849, column: 4, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7949, file: !3, line: 1848, column: 7)
!7968 = !DILocalVariable(name: "__vpp_verify", scope: !7969, file: !7961, line: 15, type: !2095)
!7969 = distinct !DILexicalBlock(scope: !7960, file: !7961, line: 15, column: 9)
!7970 = !DILocation(line: 15, column: 9, scope: !7969, inlinedAt: !7966)
!7971 = !DILocalVariable(name: "pfo_val__", scope: !7972, file: !7961, line: 15, type: !197)
!7972 = distinct !DILexicalBlock(scope: !7960, file: !7961, line: 15, column: 9)
!7973 = !DILocation(line: 15, column: 9, scope: !7972, inlinedAt: !7966)
!7974 = !DILocalVariable(name: "file", arg: 1, scope: !5594, file: !3, line: 1841, type: !971)
!7975 = !DILocation(line: 1841, column: 27, scope: !5594)
!7976 = !DILocalVariable(name: "buf", arg: 2, scope: !5594, file: !3, line: 1841, type: !184)
!7977 = !DILocation(line: 1841, column: 46, scope: !5594)
!7978 = !DILocalVariable(name: "nbytes", arg: 3, scope: !5594, file: !3, line: 1841, type: !288)
!7979 = !DILocation(line: 1841, column: 58, scope: !5594)
!7980 = !DILocalVariable(name: "ppos", arg: 4, scope: !5594, file: !3, line: 1841, type: !922)
!7981 = !DILocation(line: 1841, column: 74, scope: !5594)
!7982 = !DILocalVariable(name: "flags", scope: !5594, file: !3, line: 1843, type: !168)
!7983 = !DILocation(line: 1843, column: 16, scope: !5594)
!7984 = !DILocation(line: 1846, column: 7, scope: !7950)
!7985 = !DILocation(line: 1846, column: 20, scope: !7950)
!7986 = !DILocation(line: 1846, column: 23, scope: !7950)
!7987 = !DILocation(line: 1846, column: 31, scope: !7950)
!7988 = !DILocation(line: 1846, column: 6, scope: !5594)
!7989 = !DILocation(line: 1847, column: 10, scope: !7949)
!7990 = !DILocation(line: 1848, column: 7, scope: !7967)
!7991 = !DILocation(line: 1848, column: 7, scope: !7949)
!7992 = !{i32 -2146797822}
!7993 = !DILocation(line: 1849, column: 4, scope: !7967)
!7994 = !DILocation(line: 1851, column: 3, scope: !7949)
!7995 = !DILocation(line: 1851, column: 3, scope: !7958)
!7996 = !DILocalVariable(name: "__dummy", scope: !7997, file: !3, line: 1851, type: !168)
!7997 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 1851, column: 3)
!7998 = !DILocation(line: 1851, column: 3, scope: !7997)
!7999 = !DILocalVariable(name: "__dummy2", scope: !7997, file: !3, line: 1851, type: !168)
!8000 = !DILocation(line: 1851, column: 3, scope: !7957)
!8001 = !DILocation(line: 1851, column: 3, scope: !7956)
!8002 = !DILocation(line: 1851, column: 3, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7956, file: !3, line: 1851, column: 3)
!8004 = !DILocalVariable(name: "__dummy", scope: !8005, file: !3, line: 1851, type: !168)
!8005 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 1851, column: 3)
!8006 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 1851, column: 3)
!8007 = !DILocation(line: 1851, column: 3, scope: !8005)
!8008 = !DILocalVariable(name: "__dummy2", scope: !8005, file: !3, line: 1851, type: !168)
!8009 = !DILocation(line: 1851, column: 3, scope: !8006)
!8010 = !DILocation(line: 1851, column: 3, scope: !7955)
!8011 = !{i32 -2140087720}
!8012 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !7953)
!8013 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !7953)
!8014 = !DILocation(line: 1851, column: 3, scope: !7954)
!8015 = !DILocation(line: 1852, column: 17, scope: !7949)
!8016 = !DILocation(line: 1853, column: 46, scope: !7949)
!8017 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !7948)
!8018 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !7948)
!8019 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !7948)
!8020 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !7948)
!8021 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !7948)
!8022 = !DILocation(line: 1854, column: 2, scope: !7949)
!8023 = !DILocation(line: 1856, column: 29, scope: !5594)
!8024 = !DILocation(line: 1856, column: 35, scope: !5594)
!8025 = !DILocation(line: 1856, column: 40, scope: !5594)
!8026 = !DILocation(line: 1856, column: 48, scope: !5594)
!8027 = !DILocation(line: 1856, column: 9, scope: !5594)
!8028 = !DILocation(line: 1856, column: 2, scope: !5594)
!8029 = distinct !DISubprogram(name: "__x64_sys_getrandom", scope: !3, file: !3, line: 2007, type: !8030, scopeLine: 2007, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8030 = !DISubroutineType(types: !8031)
!8031 = !{!186, !8032}
!8032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8033, size: 64)
!8033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !241)
!8034 = !DILocalVariable(name: "regs", arg: 1, scope: !8029, file: !3, line: 2007, type: !8032)
!8035 = !DILocation(line: 2007, column: 1, scope: !8029)
!8036 = distinct !DISubprogram(name: "__se_sys_getrandom", scope: !3, file: !3, line: 2007, type: !8037, scopeLine: 2007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8037 = !DISubroutineType(types: !8038)
!8038 = !{!186, !186, !186, !186}
!8039 = !DILocalVariable(name: "buf", arg: 1, scope: !8036, file: !3, line: 2007, type: !186)
!8040 = !DILocation(line: 2007, column: 1, scope: !8036)
!8041 = !DILocalVariable(name: "count", arg: 2, scope: !8036, file: !3, line: 2007, type: !186)
!8042 = !DILocalVariable(name: "flags", arg: 3, scope: !8036, file: !3, line: 2007, type: !186)
!8043 = !DILocalVariable(name: "ret", scope: !8036, file: !3, line: 2007, type: !186)
!8044 = !DILocation(line: 2007, column: 1, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 2007, column: 1)
!8046 = distinct !DISubprogram(name: "proc_do_entropy", scope: !3, file: !3, line: 2089, type: !1524, scopeLine: 2091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8047 = !DILocalVariable(name: "table", arg: 1, scope: !8046, file: !3, line: 2089, type: !1513)
!8048 = !DILocation(line: 2089, column: 46, scope: !8046)
!8049 = !DILocalVariable(name: "write", arg: 2, scope: !8046, file: !3, line: 2089, type: !74)
!8050 = !DILocation(line: 2089, column: 57, scope: !8046)
!8051 = !DILocalVariable(name: "buffer", arg: 3, scope: !8046, file: !3, line: 2090, type: !183)
!8052 = !DILocation(line: 2090, column: 13, scope: !8046)
!8053 = !DILocalVariable(name: "lenp", arg: 4, scope: !8046, file: !3, line: 2090, type: !1526)
!8054 = !DILocation(line: 2090, column: 29, scope: !8046)
!8055 = !DILocalVariable(name: "ppos", arg: 5, scope: !8046, file: !3, line: 2090, type: !922)
!8056 = !DILocation(line: 2090, column: 43, scope: !8046)
!8057 = !DILocalVariable(name: "fake_table", scope: !8046, file: !3, line: 2092, type: !1514)
!8058 = !DILocation(line: 2092, column: 19, scope: !8046)
!8059 = !DILocalVariable(name: "entropy_count", scope: !8046, file: !3, line: 2093, type: !74)
!8060 = !DILocation(line: 2093, column: 6, scope: !8046)
!8061 = !DILocation(line: 2095, column: 26, scope: !8046)
!8062 = !DILocation(line: 2095, column: 33, scope: !8046)
!8063 = !DILocation(line: 2095, column: 19, scope: !8046)
!8064 = !DILocation(line: 2095, column: 18, scope: !8046)
!8065 = !DILocation(line: 2095, column: 38, scope: !8046)
!8066 = !DILocation(line: 2095, column: 16, scope: !8046)
!8067 = !DILocation(line: 2097, column: 20, scope: !8046)
!8068 = !DILocation(line: 2097, column: 13, scope: !8046)
!8069 = !DILocation(line: 2097, column: 18, scope: !8046)
!8070 = !DILocation(line: 2098, column: 13, scope: !8046)
!8071 = !DILocation(line: 2098, column: 20, scope: !8046)
!8072 = !DILocation(line: 2100, column: 36, scope: !8046)
!8073 = !DILocation(line: 2100, column: 43, scope: !8046)
!8074 = !DILocation(line: 2100, column: 51, scope: !8046)
!8075 = !DILocation(line: 2100, column: 57, scope: !8046)
!8076 = !DILocation(line: 2100, column: 9, scope: !8046)
!8077 = !DILocation(line: 2100, column: 2, scope: !8046)
!8078 = !DILocation(line: 392, column: 53, scope: !6199, inlinedAt: !8079)
!8079 = distinct !DILocation(line: 2075, column: 3, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 2069, column: 9)
!8081 = distinct !DILexicalBlock(scope: !5605, file: !3, line: 2066, column: 6)
!8082 = !DILocalVariable(name: "lock", arg: 1, scope: !8083, file: !5632, line: 352, type: !4029)
!8083 = distinct !DISubprogram(name: "spin_lock", scope: !5632, file: !5632, line: 352, type: !6200, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8084 = !DILocation(line: 352, column: 51, scope: !8083, inlinedAt: !8085)
!8085 = distinct !DILocation(line: 2072, column: 3, scope: !8080)
!8086 = !DILocalVariable(name: "table", arg: 1, scope: !5605, file: !3, line: 2059, type: !1513)
!8087 = !DILocation(line: 2059, column: 43, scope: !5605)
!8088 = !DILocalVariable(name: "write", arg: 2, scope: !5605, file: !3, line: 2059, type: !74)
!8089 = !DILocation(line: 2059, column: 54, scope: !5605)
!8090 = !DILocalVariable(name: "buffer", arg: 3, scope: !5605, file: !3, line: 2060, type: !183)
!8091 = !DILocation(line: 2060, column: 10, scope: !5605)
!8092 = !DILocalVariable(name: "lenp", arg: 4, scope: !5605, file: !3, line: 2060, type: !1526)
!8093 = !DILocation(line: 2060, column: 26, scope: !5605)
!8094 = !DILocalVariable(name: "ppos", arg: 5, scope: !5605, file: !3, line: 2060, type: !922)
!8095 = !DILocation(line: 2060, column: 40, scope: !5605)
!8096 = !DILocalVariable(name: "fake_table", scope: !5605, file: !3, line: 2062, type: !1514)
!8097 = !DILocation(line: 2062, column: 19, scope: !5605)
!8098 = !DILocalVariable(name: "buf", scope: !5605, file: !3, line: 2063, type: !8099)
!8099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 512, elements: !2004)
!8100 = !DILocation(line: 2063, column: 16, scope: !5605)
!8101 = !DILocalVariable(name: "tmp_uuid", scope: !5605, file: !3, line: 2063, type: !8102)
!8102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !182, size: 128, elements: !206)
!8103 = !DILocation(line: 2063, column: 25, scope: !5605)
!8104 = !DILocalVariable(name: "uuid", scope: !5605, file: !3, line: 2063, type: !270)
!8105 = !DILocation(line: 2063, column: 40, scope: !5605)
!8106 = !DILocation(line: 2065, column: 9, scope: !5605)
!8107 = !DILocation(line: 2065, column: 16, scope: !5605)
!8108 = !DILocation(line: 2065, column: 7, scope: !5605)
!8109 = !DILocation(line: 2066, column: 7, scope: !8081)
!8110 = !DILocation(line: 2066, column: 6, scope: !5605)
!8111 = !DILocation(line: 2067, column: 10, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 2066, column: 13)
!8113 = !DILocation(line: 2067, column: 8, scope: !8112)
!8114 = !DILocation(line: 2068, column: 24, scope: !8112)
!8115 = !DILocation(line: 2068, column: 3, scope: !8112)
!8116 = !DILocation(line: 2069, column: 2, scope: !8112)
!8117 = !DILocation(line: 354, column: 2, scope: !8118, inlinedAt: !8085)
!8118 = distinct !DILexicalBlock(scope: !8083, file: !5632, line: 354, column: 2)
!8119 = !{i32 -2145273466}
!8120 = !DILocation(line: 354, column: 2, scope: !8121, inlinedAt: !8085)
!8121 = distinct !DILexicalBlock(scope: !8118, file: !5632, line: 354, column: 2)
!8122 = !DILocation(line: 2073, column: 8, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 2073, column: 7)
!8124 = !DILocation(line: 2073, column: 7, scope: !8080)
!8125 = !DILocation(line: 2074, column: 25, scope: !8123)
!8126 = !DILocation(line: 2074, column: 4, scope: !8123)
!8127 = !DILocation(line: 394, column: 2, scope: !6358, inlinedAt: !8079)
!8128 = !DILocation(line: 394, column: 2, scope: !6361, inlinedAt: !8079)
!8129 = !DILocation(line: 2078, column: 10, scope: !5605)
!8130 = !DILocation(line: 2078, column: 22, scope: !5605)
!8131 = !DILocation(line: 2078, column: 2, scope: !5605)
!8132 = !DILocation(line: 2080, column: 20, scope: !5605)
!8133 = !DILocation(line: 2080, column: 13, scope: !5605)
!8134 = !DILocation(line: 2080, column: 18, scope: !5605)
!8135 = !DILocation(line: 2081, column: 13, scope: !5605)
!8136 = !DILocation(line: 2081, column: 20, scope: !5605)
!8137 = !DILocation(line: 2083, column: 36, scope: !5605)
!8138 = !DILocation(line: 2083, column: 43, scope: !5605)
!8139 = !DILocation(line: 2083, column: 51, scope: !5605)
!8140 = !DILocation(line: 2083, column: 57, scope: !5605)
!8141 = !DILocation(line: 2083, column: 9, scope: !5605)
!8142 = !DILocation(line: 2083, column: 2, scope: !5605)
!8143 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !8144)
!8144 = distinct !DILocation(line: 2206, column: 2, scope: !5493)
!8145 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !8144)
!8146 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !8147)
!8147 = distinct !DILocation(line: 2200, column: 2, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 2200, column: 2)
!8149 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 2200, column: 2)
!8150 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 2200, column: 2)
!8151 = distinct !DILexicalBlock(scope: !8152, file: !3, line: 2200, column: 2)
!8152 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 2200, column: 2)
!8153 = !DILocalVariable(name: "ret", scope: !5493, file: !3, line: 2192, type: !197)
!8154 = !DILocation(line: 2192, column: 6, scope: !5493)
!8155 = !DILocalVariable(name: "flags", scope: !5493, file: !3, line: 2193, type: !168)
!8156 = !DILocation(line: 2193, column: 16, scope: !5493)
!8157 = !DILocalVariable(name: "batch", scope: !5493, file: !3, line: 2194, type: !189)
!8158 = !DILocation(line: 2194, column: 26, scope: !5493)
!8159 = !DILocation(line: 2197, column: 2, scope: !5493)
!8160 = !DILocation(line: 2199, column: 10, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8162, file: !3, line: 2199, column: 10)
!8162 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 2199, column: 10)
!8163 = !DILocalVariable(name: "__vpp_verify", scope: !8164, file: !3, line: 2199, type: !2095)
!8164 = distinct !DILexicalBlock(scope: !8161, file: !3, line: 2199, column: 10)
!8165 = !DILocation(line: 2199, column: 10, scope: !8164)
!8166 = !DILocation(line: 2199, column: 10, scope: !8162)
!8167 = !DILocation(line: 2199, column: 8, scope: !5493)
!8168 = !DILocation(line: 2200, column: 2, scope: !5493)
!8169 = !DILocation(line: 2200, column: 2, scope: !8152)
!8170 = !DILocalVariable(name: "__dummy", scope: !8171, file: !3, line: 2200, type: !168)
!8171 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 2200, column: 2)
!8172 = !DILocation(line: 2200, column: 2, scope: !8171)
!8173 = !DILocalVariable(name: "__dummy2", scope: !8171, file: !3, line: 2200, type: !168)
!8174 = !DILocation(line: 2200, column: 2, scope: !8151)
!8175 = !DILocation(line: 2200, column: 2, scope: !8150)
!8176 = !DILocation(line: 2200, column: 2, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8150, file: !3, line: 2200, column: 2)
!8178 = !DILocalVariable(name: "__dummy", scope: !8179, file: !3, line: 2200, type: !168)
!8179 = distinct !DILexicalBlock(scope: !8180, file: !3, line: 2200, column: 2)
!8180 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 2200, column: 2)
!8181 = !DILocation(line: 2200, column: 2, scope: !8179)
!8182 = !DILocalVariable(name: "__dummy2", scope: !8179, file: !3, line: 2200, type: !168)
!8183 = !DILocation(line: 2200, column: 2, scope: !8180)
!8184 = !DILocation(line: 2200, column: 2, scope: !8149)
!8185 = !{i32 -2140064345}
!8186 = !DILocation(line: 2200, column: 2, scope: !8148)
!8187 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !8147)
!8188 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !8147)
!8189 = !DILocation(line: 2201, column: 6, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 2201, column: 6)
!8191 = !DILocation(line: 2201, column: 13, scope: !8190)
!8192 = !DILocation(line: 2201, column: 22, scope: !8190)
!8193 = !DILocation(line: 2201, column: 55, scope: !8190)
!8194 = !DILocation(line: 2201, column: 6, scope: !5493)
!8195 = !DILocation(line: 2202, column: 22, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 2201, column: 61)
!8197 = !DILocation(line: 2202, column: 29, scope: !8196)
!8198 = !DILocation(line: 2202, column: 16, scope: !8196)
!8199 = !DILocation(line: 2202, column: 3, scope: !8196)
!8200 = !DILocation(line: 2203, column: 3, scope: !8196)
!8201 = !DILocation(line: 2203, column: 10, scope: !8196)
!8202 = !DILocation(line: 2203, column: 19, scope: !8196)
!8203 = !DILocation(line: 2204, column: 2, scope: !8196)
!8204 = !DILocation(line: 2205, column: 8, scope: !5493)
!8205 = !DILocation(line: 2205, column: 15, scope: !5493)
!8206 = !DILocation(line: 2205, column: 27, scope: !5493)
!8207 = !DILocation(line: 2205, column: 34, scope: !5493)
!8208 = !DILocation(line: 2205, column: 42, scope: !5493)
!8209 = !DILocation(line: 2205, column: 6, scope: !5493)
!8210 = !DILocation(line: 2206, column: 26, scope: !5493)
!8211 = !DILocation(line: 2206, column: 33, scope: !5493)
!8212 = !DILocation(line: 2206, column: 45, scope: !5493)
!8213 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !8144)
!8214 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !8144)
!8215 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !8144)
!8216 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !8144)
!8217 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !8144)
!8218 = !DILocation(line: 2207, column: 9, scope: !5493)
!8219 = !DILocation(line: 2207, column: 2, scope: !5493)
!8220 = distinct !DISubprogram(name: "extract_crng", scope: !3, file: !3, line: 1016, type: !8221, scopeLine: 1017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8221 = !DISubroutineType(types: !8222)
!8222 = !{null, !292}
!8223 = !DILocalVariable(name: "out", arg: 1, scope: !8220, file: !3, line: 1016, type: !292)
!8224 = !DILocation(line: 1016, column: 31, scope: !8220)
!8225 = !DILocalVariable(name: "crng", scope: !8220, file: !3, line: 1018, type: !7413)
!8226 = !DILocation(line: 1018, column: 21, scope: !8220)
!8227 = !DILocation(line: 1025, column: 8, scope: !8220)
!8228 = !DILocation(line: 1026, column: 16, scope: !8220)
!8229 = !DILocation(line: 1026, column: 22, scope: !8220)
!8230 = !DILocation(line: 1026, column: 2, scope: !8220)
!8231 = !DILocation(line: 1027, column: 1, scope: !8220)
!8232 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !8233)
!8233 = distinct !DILocation(line: 2230, column: 2, scope: !5496)
!8234 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !8233)
!8235 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !8236)
!8236 = distinct !DILocation(line: 2224, column: 2, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !8238, file: !3, line: 2224, column: 2)
!8238 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 2224, column: 2)
!8239 = distinct !DILexicalBlock(scope: !8240, file: !3, line: 2224, column: 2)
!8240 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 2224, column: 2)
!8241 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 2224, column: 2)
!8242 = !DILocalVariable(name: "ret", scope: !5496, file: !3, line: 2216, type: !205)
!8243 = !DILocation(line: 2216, column: 6, scope: !5496)
!8244 = !DILocalVariable(name: "flags", scope: !5496, file: !3, line: 2217, type: !168)
!8245 = !DILocation(line: 2217, column: 16, scope: !5496)
!8246 = !DILocalVariable(name: "batch", scope: !5496, file: !3, line: 2218, type: !189)
!8247 = !DILocation(line: 2218, column: 26, scope: !5496)
!8248 = !DILocation(line: 2221, column: 2, scope: !5496)
!8249 = !DILocation(line: 2223, column: 10, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8251, file: !3, line: 2223, column: 10)
!8251 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 2223, column: 10)
!8252 = !DILocalVariable(name: "__vpp_verify", scope: !8253, file: !3, line: 2223, type: !2095)
!8253 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 2223, column: 10)
!8254 = !DILocation(line: 2223, column: 10, scope: !8253)
!8255 = !DILocation(line: 2223, column: 10, scope: !8251)
!8256 = !DILocation(line: 2223, column: 8, scope: !5496)
!8257 = !DILocation(line: 2224, column: 2, scope: !5496)
!8258 = !DILocation(line: 2224, column: 2, scope: !8241)
!8259 = !DILocalVariable(name: "__dummy", scope: !8260, file: !3, line: 2224, type: !168)
!8260 = distinct !DILexicalBlock(scope: !8240, file: !3, line: 2224, column: 2)
!8261 = !DILocation(line: 2224, column: 2, scope: !8260)
!8262 = !DILocalVariable(name: "__dummy2", scope: !8260, file: !3, line: 2224, type: !168)
!8263 = !DILocation(line: 2224, column: 2, scope: !8240)
!8264 = !DILocation(line: 2224, column: 2, scope: !8239)
!8265 = !DILocation(line: 2224, column: 2, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 2224, column: 2)
!8267 = !DILocalVariable(name: "__dummy", scope: !8268, file: !3, line: 2224, type: !168)
!8268 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 2224, column: 2)
!8269 = distinct !DILexicalBlock(scope: !8266, file: !3, line: 2224, column: 2)
!8270 = !DILocation(line: 2224, column: 2, scope: !8268)
!8271 = !DILocalVariable(name: "__dummy2", scope: !8268, file: !3, line: 2224, type: !168)
!8272 = !DILocation(line: 2224, column: 2, scope: !8269)
!8273 = !DILocation(line: 2224, column: 2, scope: !8238)
!8274 = !{i32 -2140061634}
!8275 = !DILocation(line: 2224, column: 2, scope: !8237)
!8276 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !8236)
!8277 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !8236)
!8278 = !DILocation(line: 2225, column: 6, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 2225, column: 6)
!8280 = !DILocation(line: 2225, column: 13, scope: !8279)
!8281 = !DILocation(line: 2225, column: 22, scope: !8279)
!8282 = !DILocation(line: 2225, column: 55, scope: !8279)
!8283 = !DILocation(line: 2225, column: 6, scope: !5496)
!8284 = !DILocation(line: 2226, column: 22, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8279, file: !3, line: 2225, column: 61)
!8286 = !DILocation(line: 2226, column: 29, scope: !8285)
!8287 = !DILocation(line: 2226, column: 16, scope: !8285)
!8288 = !DILocation(line: 2226, column: 3, scope: !8285)
!8289 = !DILocation(line: 2227, column: 3, scope: !8285)
!8290 = !DILocation(line: 2227, column: 10, scope: !8285)
!8291 = !DILocation(line: 2227, column: 19, scope: !8285)
!8292 = !DILocation(line: 2228, column: 2, scope: !8285)
!8293 = !DILocation(line: 2229, column: 8, scope: !5496)
!8294 = !DILocation(line: 2229, column: 15, scope: !5496)
!8295 = !DILocation(line: 2229, column: 27, scope: !5496)
!8296 = !DILocation(line: 2229, column: 34, scope: !5496)
!8297 = !DILocation(line: 2229, column: 42, scope: !5496)
!8298 = !DILocation(line: 2229, column: 6, scope: !5496)
!8299 = !DILocation(line: 2230, column: 26, scope: !5496)
!8300 = !DILocation(line: 2230, column: 33, scope: !5496)
!8301 = !DILocation(line: 2230, column: 45, scope: !5496)
!8302 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !8233)
!8303 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !8233)
!8304 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !8233)
!8305 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !8233)
!8306 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !8233)
!8307 = !DILocation(line: 2231, column: 9, scope: !5496)
!8308 = !DILocation(line: 2231, column: 2, scope: !5496)
!8309 = distinct !DISubprogram(name: "randomize_page", scope: !3, file: !3, line: 2274, type: !8310, scopeLine: 2275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8310 = !DISubroutineType(types: !8311)
!8311 = !{!168, !168, !168}
!8312 = !DILocalVariable(name: "start", arg: 1, scope: !8309, file: !3, line: 2274, type: !168)
!8313 = !DILocation(line: 2274, column: 30, scope: !8309)
!8314 = !DILocalVariable(name: "range", arg: 2, scope: !8309, file: !3, line: 2274, type: !168)
!8315 = !DILocation(line: 2274, column: 51, scope: !8309)
!8316 = !DILocation(line: 2276, column: 7, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 2276, column: 6)
!8318 = !DILocation(line: 2276, column: 6, scope: !8309)
!8319 = !DILocation(line: 2277, column: 12, scope: !8320)
!8320 = distinct !DILexicalBlock(scope: !8317, file: !3, line: 2276, column: 28)
!8321 = !DILocation(line: 2277, column: 32, scope: !8320)
!8322 = !DILocation(line: 2277, column: 30, scope: !8320)
!8323 = !DILocation(line: 2277, column: 9, scope: !8320)
!8324 = !DILocation(line: 2278, column: 11, scope: !8320)
!8325 = !DILocation(line: 2278, column: 9, scope: !8320)
!8326 = !DILocation(line: 2279, column: 2, scope: !8320)
!8327 = !DILocation(line: 2281, column: 6, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 2281, column: 6)
!8329 = !DILocation(line: 2281, column: 26, scope: !8328)
!8330 = !DILocation(line: 2281, column: 24, scope: !8328)
!8331 = !DILocation(line: 2281, column: 12, scope: !8328)
!8332 = !DILocation(line: 2281, column: 6, scope: !8309)
!8333 = !DILocation(line: 2282, column: 23, scope: !8328)
!8334 = !DILocation(line: 2282, column: 21, scope: !8328)
!8335 = !DILocation(line: 2282, column: 9, scope: !8328)
!8336 = !DILocation(line: 2282, column: 3, scope: !8328)
!8337 = !DILocation(line: 2284, column: 8, scope: !8309)
!8338 = !DILocation(line: 2286, column: 6, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 2286, column: 6)
!8340 = !DILocation(line: 2286, column: 12, scope: !8339)
!8341 = !DILocation(line: 2286, column: 6, scope: !8309)
!8342 = !DILocation(line: 2287, column: 10, scope: !8339)
!8343 = !DILocation(line: 2287, column: 3, scope: !8339)
!8344 = !DILocation(line: 2289, column: 9, scope: !8309)
!8345 = !DILocation(line: 2289, column: 18, scope: !8309)
!8346 = !DILocation(line: 2289, column: 38, scope: !8309)
!8347 = !DILocation(line: 2289, column: 36, scope: !8309)
!8348 = !DILocation(line: 2289, column: 44, scope: !8309)
!8349 = !DILocation(line: 2289, column: 15, scope: !8309)
!8350 = !DILocation(line: 2289, column: 2, scope: !8309)
!8351 = !DILocation(line: 2290, column: 1, scope: !8309)
!8352 = distinct !DISubprogram(name: "get_random_long", scope: !295, file: !295, line: 58, type: !5874, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8353 = !DILocation(line: 61, column: 9, scope: !8352)
!8354 = !DILocation(line: 61, column: 2, scope: !8352)
!8355 = distinct !DISubprogram(name: "add_hwgenerator_randomness", scope: !3, file: !3, line: 2296, type: !8356, scopeLine: 2298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8356 = !DISubroutineType(types: !8357)
!8357 = !{null, !281, !288, !288}
!8358 = !DILocalVariable(name: "buffer", arg: 1, scope: !8355, file: !3, line: 2296, type: !281)
!8359 = !DILocation(line: 2296, column: 45, scope: !8355)
!8360 = !DILocalVariable(name: "count", arg: 2, scope: !8355, file: !3, line: 2296, type: !288)
!8361 = !DILocation(line: 2296, column: 60, scope: !8355)
!8362 = !DILocalVariable(name: "entropy", arg: 3, scope: !8355, file: !3, line: 2297, type: !288)
!8363 = !DILocation(line: 2297, column: 12, scope: !8355)
!8364 = !DILocalVariable(name: "poolp", scope: !8355, file: !3, line: 2299, type: !5886)
!8365 = !DILocation(line: 2299, column: 24, scope: !8355)
!8366 = !DILocation(line: 2301, column: 6, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 2301, column: 6)
!8368 = !DILocation(line: 2301, column: 6, scope: !8355)
!8369 = !DILocation(line: 2302, column: 18, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8367, file: !3, line: 2301, column: 32)
!8371 = !DILocation(line: 2302, column: 26, scope: !8370)
!8372 = !DILocation(line: 2302, column: 3, scope: !8370)
!8373 = !DILocation(line: 2303, column: 3, scope: !8370)
!8374 = !DILocalVariable(name: "__ret", scope: !8375, file: !3, line: 2310, type: !74)
!8375 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 2310, column: 2)
!8376 = !DILocation(line: 2310, column: 2, scope: !8375)
!8377 = !DILocation(line: 2310, column: 2, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 2310, column: 2)
!8379 = !DILocation(line: 2310, column: 2, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 2310, column: 2)
!8381 = !DILocation(line: 2310, column: 2, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 2310, column: 2)
!8383 = !DILocalVariable(name: "__wq_entry", scope: !8384, file: !3, line: 2310, type: !1016)
!8384 = distinct !DILexicalBlock(scope: !8382, file: !3, line: 2310, column: 2)
!8385 = !DILocation(line: 2310, column: 2, scope: !8384)
!8386 = !DILocalVariable(name: "__ret", scope: !8384, file: !3, line: 2310, type: !186)
!8387 = !DILocalVariable(name: "__int", scope: !8388, file: !3, line: 2310, type: !186)
!8388 = distinct !DILexicalBlock(scope: !8389, file: !3, line: 2310, column: 2)
!8389 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 2310, column: 2)
!8390 = distinct !DILexicalBlock(scope: !8384, file: !3, line: 2310, column: 2)
!8391 = !DILocation(line: 2310, column: 2, scope: !8388)
!8392 = !DILocation(line: 2310, column: 2, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 2310, column: 2)
!8394 = !DILocation(line: 2310, column: 2, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8388, file: !3, line: 2310, column: 2)
!8396 = !DILocation(line: 2310, column: 2, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 2310, column: 2)
!8398 = !DILocation(line: 2310, column: 2, scope: !8389)
!8399 = distinct !{!8399, !8400, !8400}
!8400 = !DILocation(line: 2310, column: 2, scope: !8390)
!8401 = !DILabel(scope: !8384, name: "__out", file: !3, line: 2310)
!8402 = !DILocation(line: 2312, column: 17, scope: !8355)
!8403 = !DILocation(line: 2312, column: 24, scope: !8355)
!8404 = !DILocation(line: 2312, column: 32, scope: !8355)
!8405 = !DILocation(line: 2312, column: 2, scope: !8355)
!8406 = !DILocation(line: 2313, column: 22, scope: !8355)
!8407 = !DILocation(line: 2313, column: 29, scope: !8355)
!8408 = !DILocation(line: 2313, column: 2, scope: !8355)
!8409 = !DILocation(line: 2314, column: 1, scope: !8355)
!8410 = distinct !DISubprogram(name: "mix_pool_bytes", scope: !3, file: !3, line: 591, type: !5884, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8411 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !8412)
!8412 = distinct !DILocation(line: 599, column: 2, scope: !8410)
!8413 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !8412)
!8414 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !8415)
!8415 = distinct !DILocation(line: 597, column: 2, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 597, column: 2)
!8417 = distinct !DILexicalBlock(scope: !8418, file: !3, line: 597, column: 2)
!8418 = distinct !DILexicalBlock(scope: !8419, file: !3, line: 597, column: 2)
!8419 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 597, column: 2)
!8420 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 597, column: 2)
!8421 = !DILocalVariable(name: "r", arg: 1, scope: !8410, file: !3, line: 591, type: !5886)
!8422 = !DILocation(line: 591, column: 50, scope: !8410)
!8423 = !DILocalVariable(name: "in", arg: 2, scope: !8410, file: !3, line: 591, type: !2095)
!8424 = !DILocation(line: 591, column: 65, scope: !8410)
!8425 = !DILocalVariable(name: "nbytes", arg: 3, scope: !8410, file: !3, line: 592, type: !74)
!8426 = !DILocation(line: 592, column: 11, scope: !8410)
!8427 = !DILocalVariable(name: "flags", scope: !8410, file: !3, line: 594, type: !168)
!8428 = !DILocation(line: 594, column: 16, scope: !8410)
!8429 = !DILocation(line: 596, column: 23, scope: !8410)
!8430 = !DILocation(line: 596, column: 26, scope: !8410)
!8431 = !DILocation(line: 596, column: 32, scope: !8410)
!8432 = !DILocation(line: 596, column: 40, scope: !8410)
!8433 = !DILocation(line: 596, column: 2, scope: !8410)
!8434 = !DILocation(line: 597, column: 2, scope: !8410)
!8435 = !DILocation(line: 597, column: 2, scope: !8420)
!8436 = !DILocalVariable(name: "__dummy", scope: !8437, file: !3, line: 597, type: !168)
!8437 = distinct !DILexicalBlock(scope: !8419, file: !3, line: 597, column: 2)
!8438 = !DILocation(line: 597, column: 2, scope: !8437)
!8439 = !DILocalVariable(name: "__dummy2", scope: !8437, file: !3, line: 597, type: !168)
!8440 = !DILocation(line: 597, column: 2, scope: !8419)
!8441 = !DILocation(line: 597, column: 2, scope: !8418)
!8442 = !DILocation(line: 597, column: 2, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8418, file: !3, line: 597, column: 2)
!8444 = !DILocalVariable(name: "__dummy", scope: !8445, file: !3, line: 597, type: !168)
!8445 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 597, column: 2)
!8446 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 597, column: 2)
!8447 = !DILocation(line: 597, column: 2, scope: !8445)
!8448 = !DILocalVariable(name: "__dummy2", scope: !8445, file: !3, line: 597, type: !168)
!8449 = !DILocation(line: 597, column: 2, scope: !8446)
!8450 = !DILocation(line: 597, column: 2, scope: !8417)
!8451 = !{i32 -2140167438}
!8452 = !DILocation(line: 597, column: 2, scope: !8416)
!8453 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !8415)
!8454 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !8415)
!8455 = !DILocation(line: 598, column: 18, scope: !8410)
!8456 = !DILocation(line: 598, column: 21, scope: !8410)
!8457 = !DILocation(line: 598, column: 25, scope: !8410)
!8458 = !DILocation(line: 598, column: 2, scope: !8410)
!8459 = !DILocation(line: 599, column: 26, scope: !8410)
!8460 = !DILocation(line: 599, column: 29, scope: !8410)
!8461 = !DILocation(line: 599, column: 35, scope: !8410)
!8462 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !8412)
!8463 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !8412)
!8464 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !8412)
!8465 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !8412)
!8466 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !8412)
!8467 = !DILocation(line: 600, column: 1, scope: !8410)
!8468 = distinct !DISubprogram(name: "add_bootloader_randomness", scope: !3, file: !3, line: 2322, type: !5628, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8469 = !DILocalVariable(name: "buf", arg: 1, scope: !8468, file: !3, line: 2322, type: !2095)
!8470 = !DILocation(line: 2322, column: 44, scope: !8468)
!8471 = !DILocalVariable(name: "size", arg: 2, scope: !8468, file: !3, line: 2322, type: !7)
!8472 = !DILocation(line: 2322, column: 62, scope: !8468)
!8473 = !DILocation(line: 2327, column: 25, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8468, file: !3, line: 2324, column: 6)
!8475 = !DILocation(line: 2327, column: 30, scope: !8474)
!8476 = !DILocation(line: 2327, column: 3, scope: !8474)
!8477 = !DILocation(line: 2328, column: 1, scope: !8468)
!8478 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !5873, file: !5873, line: 651, type: !8479, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8479 = !DISubroutineType(types: !8480)
!8480 = !{null, !168}
!8481 = !DILocalVariable(name: "f", arg: 1, scope: !8478, file: !5873, line: 651, type: !168)
!8482 = !DILocation(line: 651, column: 65, scope: !8478)
!8483 = !DILocalVariable(name: "__edi", scope: !8484, file: !5873, line: 653, type: !168)
!8484 = distinct !DILexicalBlock(scope: !8478, file: !5873, line: 653, column: 2)
!8485 = !DILocation(line: 653, column: 2, scope: !8484)
!8486 = !DILocalVariable(name: "__esi", scope: !8484, file: !5873, line: 653, type: !168)
!8487 = !DILocalVariable(name: "__edx", scope: !8484, file: !5873, line: 653, type: !168)
!8488 = !DILocalVariable(name: "__ecx", scope: !8484, file: !5873, line: 653, type: !168)
!8489 = !DILocalVariable(name: "__eax", scope: !8484, file: !5873, line: 653, type: !168)
!8490 = !{i32 -2145741155, i32 -2145740405, i32 -2145740171, i32 -2145740120, i32 -2145740092, i32 -2145740067, i32 -2145740383, i32 -2145740370, i32 -2145739932, i32 -2145739813, i32 -2145740278, i32 -2145740251, i32 -2145740223, i32 -2145740193}
!8491 = !DILocation(line: 654, column: 1, scope: !8478)
!8492 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !5873, file: !5873, line: 646, type: !5874, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8493 = !DILocalVariable(name: "__ret", scope: !8494, file: !5873, line: 648, type: !168)
!8494 = distinct !DILexicalBlock(scope: !8492, file: !5873, line: 648, column: 9)
!8495 = !DILocation(line: 648, column: 9, scope: !8494)
!8496 = !DILocalVariable(name: "__edi", scope: !8494, file: !5873, line: 648, type: !168)
!8497 = !DILocalVariable(name: "__esi", scope: !8494, file: !5873, line: 648, type: !168)
!8498 = !DILocalVariable(name: "__edx", scope: !8494, file: !5873, line: 648, type: !168)
!8499 = !DILocalVariable(name: "__ecx", scope: !8494, file: !5873, line: 648, type: !168)
!8500 = !DILocalVariable(name: "__eax", scope: !8494, file: !5873, line: 648, type: !168)
!8501 = !DILocation(line: 648, column: 9, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8503, file: !5873, line: 648, column: 9)
!8503 = distinct !DILexicalBlock(scope: !8494, file: !5873, line: 648, column: 9)
!8504 = !{i32 -2145745622, i32 -2145743307, i32 -2145743073, i32 -2145743022, i32 -2145742994, i32 -2145742969, i32 -2145743285, i32 -2145743272, i32 -2145742834, i32 -2145742715, i32 -2145743180, i32 -2145743153, i32 -2145743125, i32 -2145743095}
!8505 = !DILocalVariable(name: "__mask", scope: !8506, file: !5873, line: 648, type: !168)
!8506 = distinct !DILexicalBlock(scope: !8502, file: !5873, line: 648, column: 9)
!8507 = !DILocation(line: 648, column: 9, scope: !8506)
!8508 = !DILocation(line: 648, column: 9, scope: !8503)
!8509 = !DILocation(line: 648, column: 2, scope: !8492)
!8510 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !5873, file: !5873, line: 656, type: !4525, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8511 = !DILocalVariable(name: "__edi", scope: !8512, file: !5873, line: 658, type: !168)
!8512 = distinct !DILexicalBlock(scope: !8510, file: !5873, line: 658, column: 2)
!8513 = !DILocation(line: 658, column: 2, scope: !8512)
!8514 = !DILocalVariable(name: "__esi", scope: !8512, file: !5873, line: 658, type: !168)
!8515 = !DILocalVariable(name: "__edx", scope: !8512, file: !5873, line: 658, type: !168)
!8516 = !DILocalVariable(name: "__ecx", scope: !8512, file: !5873, line: 658, type: !168)
!8517 = !DILocalVariable(name: "__eax", scope: !8512, file: !5873, line: 658, type: !168)
!8518 = !{i32 -2145738528, i32 -2145737796, i32 -2145737562, i32 -2145737511, i32 -2145737483, i32 -2145737458, i32 -2145737774, i32 -2145737761, i32 -2145737323, i32 -2145737204, i32 -2145737669, i32 -2145737642, i32 -2145737614, i32 -2145737584}
!8519 = !DILocation(line: 659, column: 1, scope: !8510)
!8520 = distinct !DISubprogram(name: "rol32", scope: !8521, file: !8521, line: 103, type: !8522, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8521 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!8522 = !DISubroutineType(types: !8523)
!8523 = !{!174, !174, !7}
!8524 = !DILocalVariable(name: "word", arg: 1, scope: !8520, file: !8521, line: 103, type: !174)
!8525 = !DILocation(line: 103, column: 33, scope: !8520)
!8526 = !DILocalVariable(name: "shift", arg: 2, scope: !8520, file: !8521, line: 103, type: !7)
!8527 = !DILocation(line: 103, column: 52, scope: !8520)
!8528 = !DILocation(line: 105, column: 10, scope: !8520)
!8529 = !DILocation(line: 105, column: 19, scope: !8520)
!8530 = !DILocation(line: 105, column: 25, scope: !8520)
!8531 = !DILocation(line: 105, column: 15, scope: !8520)
!8532 = !DILocation(line: 105, column: 35, scope: !8520)
!8533 = !DILocation(line: 105, column: 46, scope: !8520)
!8534 = !DILocation(line: 105, column: 45, scope: !8520)
!8535 = !DILocation(line: 105, column: 53, scope: !8520)
!8536 = !DILocation(line: 105, column: 40, scope: !8520)
!8537 = !DILocation(line: 105, column: 32, scope: !8520)
!8538 = !DILocation(line: 105, column: 2, scope: !8520)
!8539 = distinct !DISubprogram(name: "__this_cpu_preempt_check", scope: !8540, file: !8540, line: 313, type: !8541, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8540 = !DIFile(filename: "./include/linux/percpu-defs.h", directory: "/home/lizy2001/genbc/linux")
!8541 = !DISubroutineType(types: !8542)
!8542 = !{null, !281}
!8543 = !DILocalVariable(name: "op", arg: 1, scope: !8539, file: !8540, line: 313, type: !281)
!8544 = !DILocation(line: 313, column: 57, scope: !8539)
!8545 = !DILocation(line: 313, column: 63, scope: !8539)
!8546 = distinct !DISubprogram(name: "invalidate_batched_entropy", scope: !3, file: !3, line: 2239, type: !4525, scopeLine: 2240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8547 = !DILocation(line: 352, column: 51, scope: !8083, inlinedAt: !8548)
!8548 = distinct !DILocation(line: 2253, column: 3, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 2244, column: 30)
!8550 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 2244, column: 2)
!8551 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 2244, column: 2)
!8552 = !DILocation(line: 392, column: 53, scope: !6199, inlinedAt: !8553)
!8553 = distinct !DILocation(line: 2250, column: 3, scope: !8549)
!8554 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !8555)
!8555 = distinct !DILocation(line: 2255, column: 3, scope: !8549)
!8556 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !8555)
!8557 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !8558)
!8558 = distinct !DILocation(line: 2248, column: 3, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !3, line: 2248, column: 3)
!8560 = distinct !DILexicalBlock(scope: !8561, file: !3, line: 2248, column: 3)
!8561 = distinct !DILexicalBlock(scope: !8562, file: !3, line: 2248, column: 3)
!8562 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 2248, column: 3)
!8563 = distinct !DILexicalBlock(scope: !8549, file: !3, line: 2248, column: 3)
!8564 = !DILocalVariable(name: "cpu", scope: !8546, file: !3, line: 2241, type: !74)
!8565 = !DILocation(line: 2241, column: 6, scope: !8546)
!8566 = !DILocalVariable(name: "flags", scope: !8546, file: !3, line: 2242, type: !168)
!8567 = !DILocation(line: 2242, column: 16, scope: !8546)
!8568 = !DILocation(line: 2244, column: 2, scope: !8551)
!8569 = !DILocation(line: 2244, column: 2, scope: !8550)
!8570 = !DILocalVariable(name: "batched_entropy", scope: !8549, file: !3, line: 2245, type: !189)
!8571 = !DILocation(line: 2245, column: 27, scope: !8549)
!8572 = !DILocation(line: 2247, column: 21, scope: !8573)
!8573 = distinct !DILexicalBlock(scope: !8549, file: !3, line: 2247, column: 21)
!8574 = !DILocation(line: 2247, column: 21, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8573, file: !3, line: 2247, column: 21)
!8576 = !DILocalVariable(name: "__vpp_verify", scope: !8577, file: !3, line: 2247, type: !2095)
!8577 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 2247, column: 21)
!8578 = !DILocation(line: 2247, column: 21, scope: !8577)
!8579 = !DILocation(line: 2247, column: 19, scope: !8549)
!8580 = !DILocation(line: 2248, column: 3, scope: !8549)
!8581 = !DILocation(line: 2248, column: 3, scope: !8563)
!8582 = !DILocalVariable(name: "__dummy", scope: !8583, file: !3, line: 2248, type: !168)
!8583 = distinct !DILexicalBlock(scope: !8562, file: !3, line: 2248, column: 3)
!8584 = !DILocation(line: 2248, column: 3, scope: !8583)
!8585 = !DILocalVariable(name: "__dummy2", scope: !8583, file: !3, line: 2248, type: !168)
!8586 = !DILocation(line: 2248, column: 3, scope: !8562)
!8587 = !DILocation(line: 2248, column: 3, scope: !8561)
!8588 = !DILocation(line: 2248, column: 3, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8561, file: !3, line: 2248, column: 3)
!8590 = !DILocalVariable(name: "__dummy", scope: !8591, file: !3, line: 2248, type: !168)
!8591 = distinct !DILexicalBlock(scope: !8592, file: !3, line: 2248, column: 3)
!8592 = distinct !DILexicalBlock(scope: !8589, file: !3, line: 2248, column: 3)
!8593 = !DILocation(line: 2248, column: 3, scope: !8591)
!8594 = !DILocalVariable(name: "__dummy2", scope: !8591, file: !3, line: 2248, type: !168)
!8595 = !DILocation(line: 2248, column: 3, scope: !8592)
!8596 = !DILocation(line: 2248, column: 3, scope: !8560)
!8597 = !{i32 -2140059398}
!8598 = !DILocation(line: 2248, column: 3, scope: !8559)
!8599 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !8558)
!8600 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !8558)
!8601 = !DILocation(line: 2249, column: 3, scope: !8549)
!8602 = !DILocation(line: 2249, column: 20, scope: !8549)
!8603 = !DILocation(line: 2249, column: 29, scope: !8549)
!8604 = !DILocation(line: 2250, column: 16, scope: !8549)
!8605 = !DILocation(line: 2250, column: 33, scope: !8549)
!8606 = !DILocation(line: 394, column: 2, scope: !6358, inlinedAt: !8553)
!8607 = !DILocation(line: 394, column: 2, scope: !6361, inlinedAt: !8553)
!8608 = !DILocation(line: 2252, column: 21, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8549, file: !3, line: 2252, column: 21)
!8610 = !DILocation(line: 2252, column: 21, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 2252, column: 21)
!8612 = !DILocalVariable(name: "__vpp_verify", scope: !8613, file: !3, line: 2252, type: !2095)
!8613 = distinct !DILexicalBlock(scope: !8611, file: !3, line: 2252, column: 21)
!8614 = !DILocation(line: 2252, column: 21, scope: !8613)
!8615 = !DILocation(line: 2252, column: 19, scope: !8549)
!8616 = !DILocation(line: 2253, column: 14, scope: !8549)
!8617 = !DILocation(line: 2253, column: 31, scope: !8549)
!8618 = !DILocation(line: 354, column: 2, scope: !8118, inlinedAt: !8548)
!8619 = !DILocation(line: 354, column: 2, scope: !8121, inlinedAt: !8548)
!8620 = !DILocation(line: 2254, column: 3, scope: !8549)
!8621 = !DILocation(line: 2254, column: 20, scope: !8549)
!8622 = !DILocation(line: 2254, column: 29, scope: !8549)
!8623 = !DILocation(line: 2255, column: 27, scope: !8549)
!8624 = !DILocation(line: 2255, column: 44, scope: !8549)
!8625 = !DILocation(line: 2255, column: 56, scope: !8549)
!8626 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !8555)
!8627 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !8555)
!8628 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !8555)
!8629 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !8555)
!8630 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !8555)
!8631 = !DILocation(line: 2256, column: 2, scope: !8549)
!8632 = distinct !{!8632, !8568, !8633}
!8633 = !DILocation(line: 2256, column: 2, scope: !8551)
!8634 = !DILocation(line: 2257, column: 1, scope: !8546)
!8635 = distinct !DISubprogram(name: "trace_mix_pool_bytes_nolock", scope: !5866, file: !5866, line: 57, type: !8636, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8636 = !DISubroutineType(types: !8637)
!8637 = !{null, !281, !74, !168}
!8638 = !DILocalVariable(name: "pool_name", arg: 1, scope: !8635, file: !5866, line: 57, type: !281)
!8639 = !DILocation(line: 57, column: 1, scope: !8635)
!8640 = !DILocalVariable(name: "bytes", arg: 2, scope: !8635, file: !5866, line: 57, type: !74)
!8641 = !DILocalVariable(name: "IP", arg: 3, scope: !8635, file: !5866, line: 57, type: !168)
!8642 = distinct !DISubprogram(name: "test_bit", scope: !8643, file: !8643, line: 132, type: !8644, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8643 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!8644 = !DISubroutineType(types: !8645)
!8645 = !{!754, !186, !8646}
!8646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8647, size: 64)
!8647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8648)
!8648 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !168)
!8649 = !DILocalVariable(name: "nr", arg: 1, scope: !8650, file: !6059, line: 210, type: !186)
!8650 = distinct !DISubprogram(name: "variable_test_bit", scope: !6059, file: !6059, line: 210, type: !8644, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8651 = !DILocation(line: 210, column: 52, scope: !8650, inlinedAt: !8652)
!8652 = distinct !DILocation(line: 135, column: 9, scope: !8642)
!8653 = !DILocalVariable(name: "addr", arg: 2, scope: !8650, file: !6059, line: 210, type: !8646)
!8654 = !DILocation(line: 210, column: 86, scope: !8650, inlinedAt: !8652)
!8655 = !DILocalVariable(name: "oldbit", scope: !8650, file: !6059, line: 212, type: !754)
!8656 = !DILocation(line: 212, column: 7, scope: !8650, inlinedAt: !8652)
!8657 = !DILocalVariable(name: "nr", arg: 1, scope: !8658, file: !6059, line: 204, type: !186)
!8658 = distinct !DISubprogram(name: "constant_test_bit", scope: !6059, file: !6059, line: 204, type: !8644, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8659 = !DILocation(line: 204, column: 52, scope: !8658, inlinedAt: !8660)
!8660 = distinct !DILocation(line: 135, column: 9, scope: !8642)
!8661 = !DILocalVariable(name: "addr", arg: 2, scope: !8658, file: !6059, line: 204, type: !8646)
!8662 = !DILocation(line: 204, column: 86, scope: !8658, inlinedAt: !8660)
!8663 = !DILocalVariable(name: "v", arg: 1, scope: !8664, file: !6684, line: 69, type: !6687)
!8664 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !6684, file: !6684, line: 69, type: !6685, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8665 = !DILocation(line: 69, column: 73, scope: !8664, inlinedAt: !8666)
!8666 = distinct !DILocation(line: 134, column: 2, scope: !8642)
!8667 = !DILocalVariable(name: "size", arg: 2, scope: !8664, file: !6684, line: 69, type: !288)
!8668 = !DILocation(line: 69, column: 83, scope: !8664, inlinedAt: !8666)
!8669 = !DILocalVariable(name: "nr", arg: 1, scope: !8642, file: !8643, line: 132, type: !186)
!8670 = !DILocation(line: 132, column: 34, scope: !8642)
!8671 = !DILocalVariable(name: "addr", arg: 2, scope: !8642, file: !8643, line: 132, type: !8646)
!8672 = !DILocation(line: 132, column: 68, scope: !8642)
!8673 = !DILocation(line: 134, column: 25, scope: !8642)
!8674 = !DILocation(line: 134, column: 32, scope: !8642)
!8675 = !DILocation(line: 134, column: 30, scope: !8642)
!8676 = !DILocation(line: 71, column: 19, scope: !8664, inlinedAt: !8666)
!8677 = !DILocation(line: 71, column: 22, scope: !8664, inlinedAt: !8666)
!8678 = !DILocation(line: 71, column: 2, scope: !8664, inlinedAt: !8666)
!8679 = !DILocation(line: 72, column: 2, scope: !8664, inlinedAt: !8666)
!8680 = !DILocation(line: 135, column: 9, scope: !8642)
!8681 = !DILocation(line: 206, column: 19, scope: !8658, inlinedAt: !8660)
!8682 = !DILocation(line: 206, column: 22, scope: !8658, inlinedAt: !8660)
!8683 = !DILocation(line: 206, column: 15, scope: !8658, inlinedAt: !8660)
!8684 = !DILocation(line: 207, column: 4, scope: !8658, inlinedAt: !8660)
!8685 = !DILocation(line: 207, column: 9, scope: !8658, inlinedAt: !8660)
!8686 = !DILocation(line: 207, column: 12, scope: !8658, inlinedAt: !8660)
!8687 = !DILocation(line: 206, column: 44, scope: !8658, inlinedAt: !8660)
!8688 = !DILocation(line: 207, column: 37, scope: !8658, inlinedAt: !8660)
!8689 = !DILocation(line: 217, column: 33, scope: !8650, inlinedAt: !8652)
!8690 = !DILocation(line: 217, column: 46, scope: !8650, inlinedAt: !8652)
!8691 = !DILocation(line: 214, column: 2, scope: !8650, inlinedAt: !8652)
!8692 = !{i32 -2147049720, i32 -2147049660}
!8693 = !DILocation(line: 219, column: 9, scope: !8650, inlinedAt: !8652)
!8694 = !DILocation(line: 135, column: 2, scope: !8642)
!8695 = distinct !DISubprogram(name: "rdseed_long", scope: !6654, file: !6654, line: 48, type: !6655, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8696 = !DILocalVariable(name: "v", arg: 1, scope: !8695, file: !6654, line: 48, type: !280)
!8697 = !DILocation(line: 48, column: 60, scope: !8695)
!8698 = !DILocalVariable(name: "ok", scope: !8695, file: !6654, line: 50, type: !754)
!8699 = !DILocation(line: 50, column: 7, scope: !8695)
!8700 = !DILocation(line: 53, column: 39, scope: !8695)
!8701 = !DILocation(line: 51, column: 2, scope: !8695)
!8702 = !{i32 3841279, i32 -2143640358}
!8703 = !DILocation(line: 54, column: 9, scope: !8695)
!8704 = !DILocation(line: 54, column: 2, scope: !8695)
!8705 = distinct !DISubprogram(name: "kasan_check_read", scope: !8706, file: !8706, line: 34, type: !8707, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8706 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8707 = !DISubroutineType(types: !8708)
!8708 = !{!754, !6687, !7}
!8709 = !DILocalVariable(name: "p", arg: 1, scope: !8705, file: !8706, line: 34, type: !6687)
!8710 = !DILocation(line: 34, column: 58, scope: !8705)
!8711 = !DILocalVariable(name: "size", arg: 2, scope: !8705, file: !8706, line: 34, type: !7)
!8712 = !DILocation(line: 34, column: 74, scope: !8705)
!8713 = !DILocation(line: 36, column: 2, scope: !8705)
!8714 = distinct !DISubprogram(name: "kcsan_check_access", scope: !8715, file: !8715, line: 178, type: !8716, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8715 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8716 = !DISubroutineType(types: !8717)
!8717 = !{null, !6687, !288, !74}
!8718 = !DILocalVariable(name: "ptr", arg: 1, scope: !8714, file: !8715, line: 178, type: !6687)
!8719 = !DILocation(line: 178, column: 60, scope: !8714)
!8720 = !DILocalVariable(name: "size", arg: 2, scope: !8714, file: !8715, line: 178, type: !288)
!8721 = !DILocation(line: 178, column: 72, scope: !8714)
!8722 = !DILocalVariable(name: "type", arg: 3, scope: !8714, file: !8715, line: 179, type: !74)
!8723 = !DILocation(line: 179, column: 15, scope: !8714)
!8724 = !DILocation(line: 179, column: 23, scope: !8714)
!8725 = distinct !DISubprogram(name: "trace_credit_entropy_bits", scope: !5866, file: !5866, line: 63, type: !8726, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8726 = !DISubroutineType(types: !8727)
!8727 = !{null, !281, !74, !74, !168}
!8728 = !DILocalVariable(name: "pool_name", arg: 1, scope: !8725, file: !5866, line: 63, type: !281)
!8729 = !DILocation(line: 63, column: 1, scope: !8725)
!8730 = !DILocalVariable(name: "bits", arg: 2, scope: !8725, file: !5866, line: 63, type: !74)
!8731 = !DILocalVariable(name: "entropy_count", arg: 3, scope: !8725, file: !5866, line: 63, type: !74)
!8732 = !DILocalVariable(name: "IP", arg: 4, scope: !8725, file: !5866, line: 63, type: !168)
!8733 = distinct !DISubprogram(name: "crng_reseed", scope: !3, file: !3, line: 948, type: !8734, scopeLine: 949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8734 = !DISubroutineType(types: !8735)
!8735 = !{null, !7413, !5886}
!8736 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !8737)
!8737 = distinct !DILocation(line: 966, column: 2, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8739, file: !3, line: 966, column: 2)
!8739 = distinct !DILexicalBlock(scope: !8740, file: !3, line: 966, column: 2)
!8740 = distinct !DILexicalBlock(scope: !8741, file: !3, line: 966, column: 2)
!8741 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 966, column: 2)
!8742 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 966, column: 2)
!8743 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !8744)
!8744 = distinct !DILocation(line: 976, column: 2, scope: !8733)
!8745 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !8744)
!8746 = !DILocalVariable(name: "crng", arg: 1, scope: !8733, file: !3, line: 948, type: !7413)
!8747 = !DILocation(line: 948, column: 44, scope: !8733)
!8748 = !DILocalVariable(name: "r", arg: 2, scope: !8733, file: !3, line: 948, type: !5886)
!8749 = !DILocation(line: 948, column: 72, scope: !8733)
!8750 = !DILocalVariable(name: "flags", scope: !8733, file: !3, line: 950, type: !168)
!8751 = !DILocation(line: 950, column: 16, scope: !8733)
!8752 = !DILocalVariable(name: "i", scope: !8733, file: !3, line: 951, type: !74)
!8753 = !DILocation(line: 951, column: 7, scope: !8733)
!8754 = !DILocalVariable(name: "num", scope: !8733, file: !3, line: 951, type: !74)
!8755 = !DILocation(line: 951, column: 10, scope: !8733)
!8756 = !DILocalVariable(name: "buf", scope: !8733, file: !3, line: 955, type: !8757)
!8757 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8733, file: !3, line: 952, size: 512, elements: !8758)
!8758 = !{!8759, !8760}
!8759 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !8757, file: !3, line: 953, baseType: !6951, size: 512)
!8760 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8757, file: !3, line: 954, baseType: !8761, size: 256)
!8761 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 256, elements: !201)
!8762 = !DILocation(line: 955, column: 4, scope: !8733)
!8763 = !DILocation(line: 957, column: 6, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 957, column: 6)
!8765 = !DILocation(line: 957, column: 6, scope: !8733)
!8766 = !DILocation(line: 958, column: 25, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 957, column: 9)
!8768 = !DILocation(line: 958, column: 28, scope: !8767)
!8769 = !DILocation(line: 958, column: 9, scope: !8767)
!8770 = !DILocation(line: 958, column: 7, scope: !8767)
!8771 = !DILocation(line: 959, column: 7, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8767, file: !3, line: 959, column: 7)
!8773 = !DILocation(line: 959, column: 11, scope: !8772)
!8774 = !DILocation(line: 959, column: 7, scope: !8767)
!8775 = !DILocation(line: 960, column: 4, scope: !8772)
!8776 = !DILocation(line: 961, column: 2, scope: !8767)
!8777 = !DILocation(line: 962, column: 36, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8764, file: !3, line: 961, column: 9)
!8779 = !DILocation(line: 962, column: 32, scope: !8778)
!8780 = !DILocation(line: 962, column: 3, scope: !8778)
!8781 = !DILocation(line: 963, column: 46, scope: !8778)
!8782 = !DILocation(line: 963, column: 42, scope: !8778)
!8783 = !DILocation(line: 963, column: 3, scope: !8778)
!8784 = !DILocation(line: 966, column: 2, scope: !8733)
!8785 = !DILocation(line: 966, column: 2, scope: !8742)
!8786 = !DILocalVariable(name: "__dummy", scope: !8787, file: !3, line: 966, type: !168)
!8787 = distinct !DILexicalBlock(scope: !8741, file: !3, line: 966, column: 2)
!8788 = !DILocation(line: 966, column: 2, scope: !8787)
!8789 = !DILocalVariable(name: "__dummy2", scope: !8787, file: !3, line: 966, type: !168)
!8790 = !DILocation(line: 966, column: 2, scope: !8741)
!8791 = !DILocation(line: 966, column: 2, scope: !8740)
!8792 = !DILocation(line: 966, column: 2, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8740, file: !3, line: 966, column: 2)
!8794 = !DILocalVariable(name: "__dummy", scope: !8795, file: !3, line: 966, type: !168)
!8795 = distinct !DILexicalBlock(scope: !8796, file: !3, line: 966, column: 2)
!8796 = distinct !DILexicalBlock(scope: !8793, file: !3, line: 966, column: 2)
!8797 = !DILocation(line: 966, column: 2, scope: !8795)
!8798 = !DILocalVariable(name: "__dummy2", scope: !8795, file: !3, line: 966, type: !168)
!8799 = !DILocation(line: 966, column: 2, scope: !8796)
!8800 = !DILocation(line: 966, column: 2, scope: !8739)
!8801 = !{i32 -2140145202}
!8802 = !DILocation(line: 966, column: 2, scope: !8738)
!8803 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !8737)
!8804 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !8737)
!8805 = !DILocation(line: 967, column: 9, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 967, column: 2)
!8807 = !DILocation(line: 967, column: 7, scope: !8806)
!8808 = !DILocation(line: 967, column: 14, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8806, file: !3, line: 967, column: 2)
!8810 = !DILocation(line: 967, column: 16, scope: !8809)
!8811 = !DILocation(line: 967, column: 2, scope: !8806)
!8812 = !DILocalVariable(name: "rv", scope: !8813, file: !3, line: 968, type: !168)
!8813 = distinct !DILexicalBlock(scope: !8809, file: !3, line: 967, column: 26)
!8814 = !DILocation(line: 968, column: 17, scope: !8813)
!8815 = !DILocation(line: 969, column: 8, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8813, file: !3, line: 969, column: 7)
!8817 = !DILocation(line: 969, column: 39, scope: !8816)
!8818 = !DILocation(line: 970, column: 8, scope: !8816)
!8819 = !DILocation(line: 969, column: 7, scope: !8813)
!8820 = !DILocation(line: 971, column: 9, scope: !8816)
!8821 = !DILocation(line: 971, column: 7, scope: !8816)
!8822 = !DILocation(line: 971, column: 4, scope: !8816)
!8823 = !DILocation(line: 972, column: 27, scope: !8813)
!8824 = !DILocation(line: 972, column: 31, scope: !8813)
!8825 = !DILocation(line: 972, column: 23, scope: !8813)
!8826 = !DILocation(line: 972, column: 36, scope: !8813)
!8827 = !DILocation(line: 972, column: 34, scope: !8813)
!8828 = !DILocation(line: 972, column: 3, scope: !8813)
!8829 = !DILocation(line: 972, column: 9, scope: !8813)
!8830 = !DILocation(line: 972, column: 15, scope: !8813)
!8831 = !DILocation(line: 972, column: 16, scope: !8813)
!8832 = !DILocation(line: 972, column: 20, scope: !8813)
!8833 = !DILocation(line: 973, column: 2, scope: !8813)
!8834 = !DILocation(line: 967, column: 22, scope: !8809)
!8835 = !DILocation(line: 967, column: 2, scope: !8809)
!8836 = distinct !{!8836, !8811, !8837}
!8837 = !DILocation(line: 973, column: 2, scope: !8806)
!8838 = !DILocation(line: 974, column: 19, scope: !8733)
!8839 = !DILocation(line: 974, column: 2, scope: !8733)
!8840 = !DILocation(line: 975, column: 20, scope: !8733)
!8841 = !DILocation(line: 975, column: 2, scope: !8733)
!8842 = !DILocation(line: 975, column: 8, scope: !8733)
!8843 = !DILocation(line: 975, column: 18, scope: !8733)
!8844 = !DILocation(line: 976, column: 26, scope: !8733)
!8845 = !DILocation(line: 976, column: 32, scope: !8733)
!8846 = !DILocation(line: 976, column: 38, scope: !8733)
!8847 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !8744)
!8848 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !8744)
!8849 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !8744)
!8850 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !8744)
!8851 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !8744)
!8852 = !DILocation(line: 977, column: 6, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 977, column: 6)
!8854 = !DILocation(line: 977, column: 11, scope: !8853)
!8855 = !DILocation(line: 977, column: 28, scope: !8853)
!8856 = !DILocation(line: 977, column: 31, scope: !8853)
!8857 = !DILocation(line: 977, column: 41, scope: !8853)
!8858 = !DILocation(line: 977, column: 6, scope: !8733)
!8859 = !DILocation(line: 978, column: 3, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 977, column: 46)
!8861 = !DILocation(line: 979, column: 3, scope: !8860)
!8862 = !DILocation(line: 980, column: 13, scope: !8860)
!8863 = !DILocation(line: 981, column: 3, scope: !8860)
!8864 = !DILocation(line: 982, column: 3, scope: !8860)
!8865 = !DILocation(line: 983, column: 3, scope: !8860)
!8866 = !DILocation(line: 984, column: 3, scope: !8860)
!8867 = !DILocation(line: 985, column: 24, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8860, file: !3, line: 985, column: 7)
!8869 = !DILocation(line: 985, column: 7, scope: !8868)
!8870 = !DILocation(line: 985, column: 7, scope: !8860)
!8871 = !DILocation(line: 986, column: 4, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 985, column: 32)
!8873 = !DILocation(line: 988, column: 28, scope: !8872)
!8874 = !DILocation(line: 989, column: 3, scope: !8872)
!8875 = !DILocation(line: 990, column: 23, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8860, file: !3, line: 990, column: 7)
!8877 = !DILocation(line: 990, column: 7, scope: !8876)
!8878 = !DILocation(line: 990, column: 7, scope: !8860)
!8879 = !DILocation(line: 991, column: 4, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8876, file: !3, line: 990, column: 31)
!8881 = !DILocation(line: 993, column: 27, scope: !8880)
!8882 = !DILocation(line: 994, column: 3, scope: !8880)
!8883 = !DILocation(line: 995, column: 2, scope: !8860)
!8884 = !DILocation(line: 996, column: 1, scope: !8733)
!8885 = distinct !DISubprogram(name: "kasan_check_write", scope: !8706, file: !8706, line: 38, type: !8707, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8886 = !DILocalVariable(name: "p", arg: 1, scope: !8885, file: !8706, line: 38, type: !6687)
!8887 = !DILocation(line: 38, column: 59, scope: !8885)
!8888 = !DILocalVariable(name: "size", arg: 2, scope: !8885, file: !8706, line: 38, type: !7)
!8889 = !DILocation(line: 38, column: 75, scope: !8885)
!8890 = !DILocation(line: 40, column: 2, scope: !8885)
!8891 = distinct !DISubprogram(name: "extract_entropy", scope: !3, file: !3, line: 1486, type: !8892, scopeLine: 1488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8892 = !DISubroutineType(types: !8893)
!8893 = !{!976, !5886, !183, !288, !74, !74}
!8894 = !DILocalVariable(name: "r", arg: 1, scope: !8891, file: !3, line: 1486, type: !5886)
!8895 = !DILocation(line: 1486, column: 54, scope: !8891)
!8896 = !DILocalVariable(name: "buf", arg: 2, scope: !8891, file: !3, line: 1486, type: !183)
!8897 = !DILocation(line: 1486, column: 63, scope: !8891)
!8898 = !DILocalVariable(name: "nbytes", arg: 3, scope: !8891, file: !3, line: 1487, type: !288)
!8899 = !DILocation(line: 1487, column: 13, scope: !8891)
!8900 = !DILocalVariable(name: "min", arg: 4, scope: !8891, file: !3, line: 1487, type: !74)
!8901 = !DILocation(line: 1487, column: 25, scope: !8891)
!8902 = !DILocalVariable(name: "reserved", arg: 5, scope: !8891, file: !3, line: 1487, type: !74)
!8903 = !DILocation(line: 1487, column: 34, scope: !8891)
!8904 = !DILocalVariable(name: "tmp", scope: !8891, file: !3, line: 1489, type: !5548)
!8905 = !DILocation(line: 1489, column: 7, scope: !8891)
!8906 = !DILocalVariable(name: "flags", scope: !8891, file: !3, line: 1490, type: !168)
!8907 = !DILocation(line: 1490, column: 16, scope: !8891)
!8908 = !DILocation(line: 1507, column: 24, scope: !8891)
!8909 = !DILocation(line: 1507, column: 27, scope: !8891)
!8910 = !DILocation(line: 1507, column: 33, scope: !8891)
!8911 = !DILocation(line: 1507, column: 41, scope: !8891)
!8912 = !DILocation(line: 1507, column: 58, scope: !8891)
!8913 = !DILocation(line: 1507, column: 2, scope: !8891)
!8914 = !DILocation(line: 1508, column: 19, scope: !8891)
!8915 = !DILocation(line: 1508, column: 22, scope: !8891)
!8916 = !DILocation(line: 1508, column: 30, scope: !8891)
!8917 = !DILocation(line: 1508, column: 35, scope: !8891)
!8918 = !DILocation(line: 1508, column: 11, scope: !8891)
!8919 = !DILocation(line: 1508, column: 9, scope: !8891)
!8920 = !DILocation(line: 1510, column: 26, scope: !8891)
!8921 = !DILocation(line: 1510, column: 29, scope: !8891)
!8922 = !DILocation(line: 1510, column: 34, scope: !8891)
!8923 = !DILocation(line: 1510, column: 9, scope: !8891)
!8924 = !DILocation(line: 1510, column: 2, scope: !8891)
!8925 = distinct !DISubprogram(name: "_extract_crng", scope: !3, file: !3, line: 998, type: !8926, scopeLine: 1000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!8926 = !DISubroutineType(types: !8927)
!8927 = !{null, !7413, !292}
!8928 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !8929)
!8929 = distinct !DILocation(line: 1013, column: 2, scope: !8925)
!8930 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !8929)
!8931 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !8932)
!8932 = distinct !DILocation(line: 1007, column: 2, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8934, file: !3, line: 1007, column: 2)
!8934 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 1007, column: 2)
!8935 = distinct !DILexicalBlock(scope: !8936, file: !3, line: 1007, column: 2)
!8936 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 1007, column: 2)
!8937 = distinct !DILexicalBlock(scope: !8925, file: !3, line: 1007, column: 2)
!8938 = !DILocalVariable(name: "crng", arg: 1, scope: !8925, file: !3, line: 998, type: !7413)
!8939 = !DILocation(line: 998, column: 46, scope: !8925)
!8940 = !DILocalVariable(name: "out", arg: 2, scope: !8925, file: !3, line: 999, type: !292)
!8941 = !DILocation(line: 999, column: 11, scope: !8925)
!8942 = !DILocalVariable(name: "v", scope: !8925, file: !3, line: 1001, type: !168)
!8943 = !DILocation(line: 1001, column: 16, scope: !8925)
!8944 = !DILocalVariable(name: "flags", scope: !8925, file: !3, line: 1001, type: !168)
!8945 = !DILocation(line: 1001, column: 19, scope: !8925)
!8946 = !DILocation(line: 1003, column: 6, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8925, file: !3, line: 1003, column: 6)
!8948 = !DILocation(line: 1003, column: 19, scope: !8947)
!8949 = !DILocation(line: 1004, column: 7, scope: !8947)
!8950 = !DILocation(line: 1004, column: 58, scope: !8947)
!8951 = !DILocation(line: 1005, column: 7, scope: !8947)
!8952 = !DILocation(line: 1003, column: 6, scope: !8925)
!8953 = !DILocation(line: 1006, column: 15, scope: !8947)
!8954 = !DILocation(line: 1006, column: 21, scope: !8947)
!8955 = !DILocation(line: 1006, column: 26, scope: !8947)
!8956 = !DILocation(line: 1006, column: 3, scope: !8947)
!8957 = !DILocation(line: 1007, column: 2, scope: !8925)
!8958 = !DILocation(line: 1007, column: 2, scope: !8937)
!8959 = !DILocalVariable(name: "__dummy", scope: !8960, file: !3, line: 1007, type: !168)
!8960 = distinct !DILexicalBlock(scope: !8936, file: !3, line: 1007, column: 2)
!8961 = !DILocation(line: 1007, column: 2, scope: !8960)
!8962 = !DILocalVariable(name: "__dummy2", scope: !8960, file: !3, line: 1007, type: !168)
!8963 = !DILocation(line: 1007, column: 2, scope: !8936)
!8964 = !DILocation(line: 1007, column: 2, scope: !8935)
!8965 = !DILocation(line: 1007, column: 2, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 1007, column: 2)
!8967 = !DILocalVariable(name: "__dummy", scope: !8968, file: !3, line: 1007, type: !168)
!8968 = distinct !DILexicalBlock(scope: !8969, file: !3, line: 1007, column: 2)
!8969 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 1007, column: 2)
!8970 = !DILocation(line: 1007, column: 2, scope: !8968)
!8971 = !DILocalVariable(name: "__dummy2", scope: !8968, file: !3, line: 1007, type: !168)
!8972 = !DILocation(line: 1007, column: 2, scope: !8969)
!8973 = !DILocation(line: 1007, column: 2, scope: !8934)
!8974 = !{i32 -2140142552}
!8975 = !DILocation(line: 1007, column: 2, scope: !8933)
!8976 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !8932)
!8977 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !8932)
!8978 = !DILocation(line: 1008, column: 6, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8925, file: !3, line: 1008, column: 6)
!8980 = !DILocation(line: 1008, column: 6, scope: !8925)
!8981 = !DILocation(line: 1009, column: 22, scope: !8979)
!8982 = !DILocation(line: 1009, column: 3, scope: !8979)
!8983 = !DILocation(line: 1009, column: 9, scope: !8979)
!8984 = !DILocation(line: 1009, column: 19, scope: !8979)
!8985 = !DILocation(line: 1010, column: 18, scope: !8925)
!8986 = !DILocation(line: 1010, column: 24, scope: !8925)
!8987 = !DILocation(line: 1010, column: 34, scope: !8925)
!8988 = !DILocation(line: 1010, column: 2, scope: !8925)
!8989 = !DILocation(line: 1011, column: 6, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8925, file: !3, line: 1011, column: 6)
!8991 = !DILocation(line: 1011, column: 12, scope: !8990)
!8992 = !DILocation(line: 1011, column: 22, scope: !8990)
!8993 = !DILocation(line: 1011, column: 6, scope: !8925)
!8994 = !DILocation(line: 1012, column: 3, scope: !8990)
!8995 = !DILocation(line: 1012, column: 9, scope: !8990)
!8996 = !DILocation(line: 1012, column: 18, scope: !8990)
!8997 = !DILocation(line: 1013, column: 26, scope: !8925)
!8998 = !DILocation(line: 1013, column: 32, scope: !8925)
!8999 = !DILocation(line: 1013, column: 38, scope: !8925)
!9000 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !8929)
!9001 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !8929)
!9002 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !8929)
!9003 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !8929)
!9004 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !8929)
!9005 = !DILocation(line: 1014, column: 1, scope: !8925)
!9006 = distinct !DISubprogram(name: "_crng_backtrack_protect", scope: !3, file: !3, line: 1033, type: !9007, scopeLine: 1035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9007 = !DISubroutineType(types: !9008)
!9008 = !{null, !7413, !292, !74}
!9009 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !9010)
!9010 = distinct !DILocation(line: 1050, column: 2, scope: !9006)
!9011 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !9010)
!9012 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !9013)
!9013 = distinct !DILocation(line: 1045, column: 2, scope: !9014)
!9014 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 1045, column: 2)
!9015 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 1045, column: 2)
!9016 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1045, column: 2)
!9017 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 1045, column: 2)
!9018 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 1045, column: 2)
!9019 = !DILocalVariable(name: "crng", arg: 1, scope: !9006, file: !3, line: 1033, type: !7413)
!9020 = !DILocation(line: 1033, column: 56, scope: !9006)
!9021 = !DILocalVariable(name: "tmp", arg: 2, scope: !9006, file: !3, line: 1034, type: !292)
!9022 = !DILocation(line: 1034, column: 14, scope: !9006)
!9023 = !DILocalVariable(name: "used", arg: 3, scope: !9006, file: !3, line: 1034, type: !74)
!9024 = !DILocation(line: 1034, column: 42, scope: !9006)
!9025 = !DILocalVariable(name: "flags", scope: !9006, file: !3, line: 1036, type: !168)
!9026 = !DILocation(line: 1036, column: 16, scope: !9006)
!9027 = !DILocalVariable(name: "s", scope: !9006, file: !3, line: 1037, type: !265)
!9028 = !DILocation(line: 1037, column: 10, scope: !9006)
!9029 = !DILocalVariable(name: "d", scope: !9006, file: !3, line: 1037, type: !265)
!9030 = !DILocation(line: 1037, column: 14, scope: !9006)
!9031 = !DILocalVariable(name: "i", scope: !9006, file: !3, line: 1038, type: !74)
!9032 = !DILocation(line: 1038, column: 7, scope: !9006)
!9033 = !DILocation(line: 1040, column: 9, scope: !9006)
!9034 = !DILocation(line: 1040, column: 7, scope: !9006)
!9035 = !DILocation(line: 1041, column: 6, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 1041, column: 6)
!9037 = !DILocation(line: 1041, column: 11, scope: !9036)
!9038 = !DILocation(line: 1041, column: 29, scope: !9036)
!9039 = !DILocation(line: 1041, column: 6, scope: !9006)
!9040 = !DILocation(line: 1042, column: 16, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 1041, column: 50)
!9042 = !DILocation(line: 1042, column: 3, scope: !9041)
!9043 = !DILocation(line: 1043, column: 8, scope: !9041)
!9044 = !DILocation(line: 1044, column: 2, scope: !9041)
!9045 = !DILocation(line: 1045, column: 2, scope: !9006)
!9046 = !DILocation(line: 1045, column: 2, scope: !9018)
!9047 = !DILocalVariable(name: "__dummy", scope: !9048, file: !3, line: 1045, type: !168)
!9048 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 1045, column: 2)
!9049 = !DILocation(line: 1045, column: 2, scope: !9048)
!9050 = !DILocalVariable(name: "__dummy2", scope: !9048, file: !3, line: 1045, type: !168)
!9051 = !DILocation(line: 1045, column: 2, scope: !9017)
!9052 = !DILocation(line: 1045, column: 2, scope: !9016)
!9053 = !DILocation(line: 1045, column: 2, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 1045, column: 2)
!9055 = !DILocalVariable(name: "__dummy", scope: !9056, file: !3, line: 1045, type: !168)
!9056 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 1045, column: 2)
!9057 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 1045, column: 2)
!9058 = !DILocation(line: 1045, column: 2, scope: !9056)
!9059 = !DILocalVariable(name: "__dummy2", scope: !9056, file: !3, line: 1045, type: !168)
!9060 = !DILocation(line: 1045, column: 2, scope: !9057)
!9061 = !DILocation(line: 1045, column: 2, scope: !9015)
!9062 = !{i32 -2140141406}
!9063 = !DILocation(line: 1045, column: 2, scope: !9014)
!9064 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !9013)
!9065 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !9013)
!9066 = !DILocation(line: 1046, column: 17, scope: !9006)
!9067 = !DILocation(line: 1046, column: 21, scope: !9006)
!9068 = !DILocation(line: 1046, column: 6, scope: !9006)
!9069 = !DILocation(line: 1046, column: 4, scope: !9006)
!9070 = !DILocation(line: 1047, column: 7, scope: !9006)
!9071 = !DILocation(line: 1047, column: 13, scope: !9006)
!9072 = !DILocation(line: 1047, column: 4, scope: !9006)
!9073 = !DILocation(line: 1048, column: 8, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 1048, column: 2)
!9075 = !DILocation(line: 1048, column: 7, scope: !9074)
!9076 = !DILocation(line: 1048, column: 12, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9074, file: !3, line: 1048, column: 2)
!9078 = !DILocation(line: 1048, column: 14, scope: !9077)
!9079 = !DILocation(line: 1048, column: 2, scope: !9074)
!9080 = !DILocation(line: 1049, column: 13, scope: !9077)
!9081 = !DILocation(line: 1049, column: 11, scope: !9077)
!9082 = !DILocation(line: 1049, column: 5, scope: !9077)
!9083 = !DILocation(line: 1049, column: 8, scope: !9077)
!9084 = !DILocation(line: 1049, column: 3, scope: !9077)
!9085 = !DILocation(line: 1048, column: 20, scope: !9077)
!9086 = !DILocation(line: 1048, column: 2, scope: !9077)
!9087 = distinct !{!9087, !9079, !9088}
!9088 = !DILocation(line: 1049, column: 13, scope: !9074)
!9089 = !DILocation(line: 1050, column: 26, scope: !9006)
!9090 = !DILocation(line: 1050, column: 32, scope: !9006)
!9091 = !DILocation(line: 1050, column: 38, scope: !9006)
!9092 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !9010)
!9093 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !9010)
!9094 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !9010)
!9095 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !9010)
!9096 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !9010)
!9097 = !DILocation(line: 1051, column: 1, scope: !9006)
!9098 = distinct !DISubprogram(name: "memzero_explicit", scope: !9099, file: !9099, line: 241, type: !9100, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9099 = !DIFile(filename: "./include/linux/string.h", directory: "/home/lizy2001/genbc/linux")
!9100 = !DISubroutineType(types: !9101)
!9101 = !{null, !183, !288}
!9102 = !DILocalVariable(name: "s", arg: 1, scope: !9098, file: !9099, line: 241, type: !183)
!9103 = !DILocation(line: 241, column: 43, scope: !9098)
!9104 = !DILocalVariable(name: "count", arg: 2, scope: !9098, file: !9099, line: 241, type: !288)
!9105 = !DILocation(line: 241, column: 53, scope: !9098)
!9106 = !DILocation(line: 243, column: 9, scope: !9098)
!9107 = !DILocation(line: 243, column: 15, scope: !9098)
!9108 = !DILocation(line: 243, column: 2, scope: !9098)
!9109 = !DILocation(line: 244, column: 2, scope: !9098)
!9110 = !{i32 -2146048707}
!9111 = !DILocation(line: 245, column: 1, scope: !9098)
!9112 = distinct !DISubprogram(name: "numa_crng_init", scope: !3, file: !3, line: 871, type: !4525, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9113 = !DILocation(line: 871, column: 35, scope: !9112)
!9114 = distinct !DISubprogram(name: "process_random_ready_list", scope: !3, file: !3, line: 640, type: !4525, scopeLine: 641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9115 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !9116)
!9116 = distinct !DILocation(line: 653, column: 2, scope: !9114)
!9117 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !9116)
!9118 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !9119)
!9119 = distinct !DILocation(line: 645, column: 2, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9121, file: !3, line: 645, column: 2)
!9121 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 645, column: 2)
!9122 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 645, column: 2)
!9123 = distinct !DILexicalBlock(scope: !9124, file: !3, line: 645, column: 2)
!9124 = distinct !DILexicalBlock(scope: !9114, file: !3, line: 645, column: 2)
!9125 = !DILocalVariable(name: "flags", scope: !9114, file: !3, line: 642, type: !168)
!9126 = !DILocation(line: 642, column: 16, scope: !9114)
!9127 = !DILocalVariable(name: "rdy", scope: !9114, file: !3, line: 643, type: !293)
!9128 = !DILocation(line: 643, column: 32, scope: !9114)
!9129 = !DILocalVariable(name: "tmp", scope: !9114, file: !3, line: 643, type: !293)
!9130 = !DILocation(line: 643, column: 38, scope: !9114)
!9131 = !DILocation(line: 645, column: 2, scope: !9114)
!9132 = !DILocation(line: 645, column: 2, scope: !9124)
!9133 = !DILocalVariable(name: "__dummy", scope: !9134, file: !3, line: 645, type: !168)
!9134 = distinct !DILexicalBlock(scope: !9123, file: !3, line: 645, column: 2)
!9135 = !DILocation(line: 645, column: 2, scope: !9134)
!9136 = !DILocalVariable(name: "__dummy2", scope: !9134, file: !3, line: 645, type: !168)
!9137 = !DILocation(line: 645, column: 2, scope: !9123)
!9138 = !DILocation(line: 645, column: 2, scope: !9122)
!9139 = !DILocation(line: 645, column: 2, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 645, column: 2)
!9141 = !DILocalVariable(name: "__dummy", scope: !9142, file: !3, line: 645, type: !168)
!9142 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 645, column: 2)
!9143 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 645, column: 2)
!9144 = !DILocation(line: 645, column: 2, scope: !9142)
!9145 = !DILocalVariable(name: "__dummy2", scope: !9142, file: !3, line: 645, type: !168)
!9146 = !DILocation(line: 645, column: 2, scope: !9143)
!9147 = !DILocation(line: 645, column: 2, scope: !9121)
!9148 = !{i32 -2140166365}
!9149 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !9119)
!9150 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !9119)
!9151 = !DILocation(line: 645, column: 2, scope: !9120)
!9152 = !DILocalVariable(name: "__mptr", scope: !9153, file: !3, line: 646, type: !183)
!9153 = distinct !DILexicalBlock(scope: !9154, file: !3, line: 646, column: 2)
!9154 = distinct !DILexicalBlock(scope: !9114, file: !3, line: 646, column: 2)
!9155 = !DILocation(line: 646, column: 2, scope: !9153)
!9156 = !DILocation(line: 646, column: 2, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 646, column: 2)
!9158 = !DILocation(line: 646, column: 2, scope: !9154)
!9159 = !DILocalVariable(name: "__mptr", scope: !9160, file: !3, line: 646, type: !183)
!9160 = distinct !DILexicalBlock(scope: !9154, file: !3, line: 646, column: 2)
!9161 = !DILocation(line: 646, column: 2, scope: !9160)
!9162 = !DILocation(line: 646, column: 2, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9160, file: !3, line: 646, column: 2)
!9164 = !DILocation(line: 646, column: 2, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9154, file: !3, line: 646, column: 2)
!9166 = !DILocalVariable(name: "owner", scope: !9167, file: !3, line: 647, type: !308)
!9167 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 646, column: 63)
!9168 = !DILocation(line: 647, column: 18, scope: !9167)
!9169 = !DILocation(line: 647, column: 26, scope: !9167)
!9170 = !DILocation(line: 647, column: 31, scope: !9167)
!9171 = !DILocation(line: 649, column: 18, scope: !9167)
!9172 = !DILocation(line: 649, column: 23, scope: !9167)
!9173 = !DILocation(line: 649, column: 3, scope: !9167)
!9174 = !DILocation(line: 650, column: 3, scope: !9167)
!9175 = !DILocation(line: 650, column: 8, scope: !9167)
!9176 = !DILocation(line: 650, column: 13, scope: !9167)
!9177 = !DILocation(line: 651, column: 14, scope: !9167)
!9178 = !DILocation(line: 651, column: 3, scope: !9167)
!9179 = !DILocation(line: 652, column: 2, scope: !9167)
!9180 = !DILocalVariable(name: "__mptr", scope: !9181, file: !3, line: 646, type: !183)
!9181 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 646, column: 2)
!9182 = !DILocation(line: 646, column: 2, scope: !9181)
!9183 = !DILocation(line: 646, column: 2, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 646, column: 2)
!9185 = distinct !{!9185, !9158, !9186}
!9186 = !DILocation(line: 652, column: 2, scope: !9154)
!9187 = !DILocation(line: 653, column: 50, scope: !9114)
!9188 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !9116)
!9189 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !9116)
!9190 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !9116)
!9191 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !9116)
!9192 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !9116)
!9193 = !DILocation(line: 654, column: 1, scope: !9114)
!9194 = distinct !DISubprogram(name: "trace_extract_entropy", scope: !5866, file: !5866, line: 249, type: !8726, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9195 = !DILocalVariable(name: "pool_name", arg: 1, scope: !9194, file: !5866, line: 249, type: !281)
!9196 = !DILocation(line: 249, column: 1, scope: !9194)
!9197 = !DILocalVariable(name: "nbytes", arg: 2, scope: !9194, file: !5866, line: 249, type: !74)
!9198 = !DILocalVariable(name: "entropy_count", arg: 3, scope: !9194, file: !5866, line: 249, type: !74)
!9199 = !DILocalVariable(name: "IP", arg: 4, scope: !9194, file: !5866, line: 249, type: !168)
!9200 = distinct !DISubprogram(name: "account", scope: !3, file: !3, line: 1343, type: !9201, scopeLine: 1345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9201 = !DISubroutineType(types: !9202)
!9202 = !{!288, !5886, !288, !74, !74}
!9203 = !DILocation(line: 84, column: 74, scope: !6683, inlinedAt: !9204)
!9204 = distinct !DILocation(line: 1375, column: 6, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 1375, column: 6)
!9206 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 1375, column: 6)
!9207 = !DILocation(line: 84, column: 84, scope: !6683, inlinedAt: !9204)
!9208 = !DILocalVariable(name: "r", arg: 1, scope: !9200, file: !3, line: 1343, type: !5886)
!9209 = !DILocation(line: 1343, column: 45, scope: !9200)
!9210 = !DILocalVariable(name: "nbytes", arg: 2, scope: !9200, file: !3, line: 1343, type: !288)
!9211 = !DILocation(line: 1343, column: 55, scope: !9200)
!9212 = !DILocalVariable(name: "min", arg: 3, scope: !9200, file: !3, line: 1343, type: !74)
!9213 = !DILocation(line: 1343, column: 67, scope: !9200)
!9214 = !DILocalVariable(name: "reserved", arg: 4, scope: !9200, file: !3, line: 1344, type: !74)
!9215 = !DILocation(line: 1344, column: 13, scope: !9200)
!9216 = !DILocalVariable(name: "entropy_count", scope: !9200, file: !3, line: 1346, type: !74)
!9217 = !DILocation(line: 1346, column: 6, scope: !9200)
!9218 = !DILocalVariable(name: "orig", scope: !9200, file: !3, line: 1346, type: !74)
!9219 = !DILocation(line: 1346, column: 21, scope: !9200)
!9220 = !DILocalVariable(name: "have_bytes", scope: !9200, file: !3, line: 1346, type: !74)
!9221 = !DILocation(line: 1346, column: 27, scope: !9200)
!9222 = !DILocalVariable(name: "ibytes", scope: !9200, file: !3, line: 1347, type: !288)
!9223 = !DILocation(line: 1347, column: 9, scope: !9200)
!9224 = !DILocalVariable(name: "nfrac", scope: !9200, file: !3, line: 1347, type: !288)
!9225 = !DILocation(line: 1347, column: 17, scope: !9200)
!9226 = !DILocation(line: 1349, column: 2, scope: !9200)
!9227 = !DILocation(line: 1349, column: 2, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 1349, column: 2)
!9229 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 1349, column: 2)
!9230 = !DILocation(line: 1349, column: 2, scope: !9229)
!9231 = !DILocation(line: 1349, column: 2, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9228, file: !3, line: 1349, column: 2)
!9233 = !DILocation(line: 1349, column: 2, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 1349, column: 2)
!9235 = !DILocation(line: 1349, column: 2, scope: !9236)
!9236 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 1349, column: 2)
!9237 = !{i32 -2140116986, i32 -2140116957, i32 -2140116911, i32 -2140116853, i32 -2140116799, i32 -2140116745, i32 -2140116690, i32 -2140116659}
!9238 = !DILocation(line: 1349, column: 2, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9240, file: !3, line: 1349, column: 2)
!9240 = distinct !DILexicalBlock(scope: !9232, file: !3, line: 1349, column: 2)
!9241 = !{i32 -2140116214, i32 -2140116207, i32 -2140116153, i32 -2140116122, i32 -2140116092}
!9242 = !DILocation(line: 1349, column: 2, scope: !9240)
!9243 = !DILabel(scope: !9200, name: "retry", file: !3, line: 1352)
!9244 = !DILocation(line: 1352, column: 1, scope: !9200)
!9245 = !DILocation(line: 1353, column: 25, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 1353, column: 25)
!9247 = !DILocation(line: 1353, column: 25, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 1353, column: 25)
!9249 = !DILocation(line: 1353, column: 23, scope: !9200)
!9250 = !DILocation(line: 1353, column: 16, scope: !9200)
!9251 = !DILocation(line: 1354, column: 11, scope: !9200)
!9252 = !DILocation(line: 1354, column: 9, scope: !9200)
!9253 = !DILocation(line: 1356, column: 15, scope: !9200)
!9254 = !DILocation(line: 1356, column: 29, scope: !9200)
!9255 = !DILocation(line: 1356, column: 13, scope: !9200)
!9256 = !DILocation(line: 1358, column: 21, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 1358, column: 6)
!9258 = !DILocation(line: 1358, column: 18, scope: !9257)
!9259 = !DILocation(line: 1358, column: 31, scope: !9257)
!9260 = !DILocation(line: 1358, column: 6, scope: !9200)
!9261 = !DILocation(line: 1359, column: 14, scope: !9257)
!9262 = !DILocation(line: 1359, column: 3, scope: !9257)
!9263 = !DILocalVariable(name: "__UNIQUE_ID___x329", scope: !9264, file: !3, line: 1360, type: !288)
!9264 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 1360, column: 11)
!9265 = !DILocation(line: 1360, column: 11, scope: !9264)
!9266 = !DILocalVariable(name: "__UNIQUE_ID___y330", scope: !9264, file: !3, line: 1360, type: !288)
!9267 = !DILocation(line: 1360, column: 9, scope: !9200)
!9268 = !DILocation(line: 1361, column: 6, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 1361, column: 6)
!9270 = !DILocation(line: 1361, column: 15, scope: !9269)
!9271 = !DILocation(line: 1361, column: 13, scope: !9269)
!9272 = !DILocation(line: 1361, column: 6, scope: !9200)
!9273 = !DILocation(line: 1362, column: 10, scope: !9269)
!9274 = !DILocation(line: 1362, column: 3, scope: !9269)
!9275 = !DILocalVariable(name: "__ret_warn_on", scope: !9276, file: !3, line: 1364, type: !74)
!9276 = distinct !DILexicalBlock(scope: !9277, file: !3, line: 1364, column: 6)
!9277 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 1364, column: 6)
!9278 = !DILocation(line: 1364, column: 6, scope: !9276)
!9279 = !DILocation(line: 1364, column: 6, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9276, file: !3, line: 1364, column: 6)
!9281 = !DILocation(line: 1364, column: 6, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9280, file: !3, line: 1364, column: 6)
!9283 = !DILocation(line: 1364, column: 6, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 1364, column: 6)
!9285 = !DILocation(line: 1364, column: 6, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 1364, column: 6)
!9287 = !{i32 -2140111724, i32 -2140111695, i32 -2140111649, i32 -2140111591, i32 -2140111537, i32 -2140111483, i32 -2140111428, i32 -2140111397}
!9288 = !DILocation(line: 1364, column: 6, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 1364, column: 6)
!9290 = !{i32 -2140110993, i32 -2140110986, i32 -2140110934, i32 -2140110903, i32 -2140110873}
!9291 = !DILocation(line: 1364, column: 6, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 1364, column: 6)
!9293 = !DILocation(line: 1364, column: 6, scope: !9277)
!9294 = !DILocation(line: 1364, column: 6, scope: !9200)
!9295 = !DILocation(line: 1365, column: 3, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9277, file: !3, line: 1364, column: 34)
!9297 = !DILocation(line: 1367, column: 17, scope: !9296)
!9298 = !DILocation(line: 1368, column: 2, scope: !9296)
!9299 = !DILocation(line: 1369, column: 10, scope: !9200)
!9300 = !DILocation(line: 1369, column: 17, scope: !9200)
!9301 = !DILocation(line: 1369, column: 8, scope: !9200)
!9302 = !DILocation(line: 1370, column: 15, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 1370, column: 6)
!9304 = !DILocation(line: 1370, column: 6, scope: !9303)
!9305 = !DILocation(line: 1370, column: 31, scope: !9303)
!9306 = !DILocation(line: 1370, column: 29, scope: !9303)
!9307 = !DILocation(line: 1370, column: 6, scope: !9200)
!9308 = !DILocation(line: 1371, column: 20, scope: !9303)
!9309 = !DILocation(line: 1371, column: 17, scope: !9303)
!9310 = !DILocation(line: 1371, column: 3, scope: !9303)
!9311 = !DILocation(line: 1373, column: 17, scope: !9303)
!9312 = !DILocalVariable(name: "__ai_ptr", scope: !9205, file: !3, line: 1375, type: !883)
!9313 = !DILocation(line: 1375, column: 6, scope: !9205)
!9314 = !DILocation(line: 86, column: 20, scope: !6683, inlinedAt: !9204)
!9315 = !DILocation(line: 86, column: 23, scope: !6683, inlinedAt: !9204)
!9316 = !DILocation(line: 86, column: 2, scope: !6683, inlinedAt: !9204)
!9317 = !DILocation(line: 87, column: 2, scope: !6683, inlinedAt: !9204)
!9318 = !DILocalVariable(name: "__ret", scope: !9319, file: !3, line: 1375, type: !74)
!9319 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 1375, column: 6)
!9320 = !DILocation(line: 1375, column: 6, scope: !9319)
!9321 = !DILocalVariable(name: "__old", scope: !9319, file: !3, line: 1375, type: !74)
!9322 = !DILocalVariable(name: "__new", scope: !9319, file: !3, line: 1375, type: !74)
!9323 = !DILocalVariable(name: "__ptr", scope: !9319, file: !3, line: 1375, type: !286)
!9324 = !{i32 -2140108733}
!9325 = !DILocation(line: 1375, column: 57, scope: !9206)
!9326 = !DILocation(line: 1375, column: 54, scope: !9206)
!9327 = !DILocation(line: 1375, column: 6, scope: !9200)
!9328 = !DILocation(line: 1376, column: 3, scope: !9206)
!9329 = !DILocation(line: 1378, column: 22, scope: !9200)
!9330 = !DILocation(line: 1378, column: 25, scope: !9200)
!9331 = !DILocation(line: 1378, column: 35, scope: !9200)
!9332 = !DILocation(line: 1378, column: 33, scope: !9200)
!9333 = !DILocation(line: 1378, column: 31, scope: !9200)
!9334 = !DILocation(line: 1378, column: 2, scope: !9200)
!9335 = !DILocation(line: 1379, column: 6, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 1379, column: 6)
!9337 = !DILocation(line: 1379, column: 13, scope: !9336)
!9338 = !DILocation(line: 1379, column: 16, scope: !9336)
!9339 = !DILocation(line: 1379, column: 34, scope: !9336)
!9340 = !DILocation(line: 1379, column: 32, scope: !9336)
!9341 = !DILocation(line: 1379, column: 6, scope: !9200)
!9342 = !DILocation(line: 1380, column: 3, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 1379, column: 60)
!9344 = !DILocation(line: 1381, column: 3, scope: !9343)
!9345 = !DILocation(line: 1382, column: 2, scope: !9343)
!9346 = !DILocation(line: 1384, column: 9, scope: !9200)
!9347 = !DILocation(line: 1384, column: 2, scope: !9200)
!9348 = distinct !DISubprogram(name: "_extract_entropy", scope: !3, file: !3, line: 1447, type: !9349, scopeLine: 1449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9349 = !DISubroutineType(types: !9350)
!9350 = !{!976, !5886, !183, !288, !74}
!9351 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !9352)
!9352 = distinct !DILocation(line: 1462, column: 4, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9354, file: !3, line: 1457, column: 13)
!9354 = distinct !DILexicalBlock(scope: !9355, file: !3, line: 1457, column: 7)
!9355 = distinct !DILexicalBlock(scope: !9348, file: !3, line: 1454, column: 17)
!9356 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !9352)
!9357 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !9358)
!9358 = distinct !DILocation(line: 1458, column: 4, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 1458, column: 4)
!9360 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 1458, column: 4)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 1458, column: 4)
!9362 = distinct !DILexicalBlock(scope: !9363, file: !3, line: 1458, column: 4)
!9363 = distinct !DILexicalBlock(scope: !9353, file: !3, line: 1458, column: 4)
!9364 = !DILocalVariable(name: "r", arg: 1, scope: !9348, file: !3, line: 1447, type: !5886)
!9365 = !DILocation(line: 1447, column: 55, scope: !9348)
!9366 = !DILocalVariable(name: "buf", arg: 2, scope: !9348, file: !3, line: 1447, type: !183)
!9367 = !DILocation(line: 1447, column: 64, scope: !9348)
!9368 = !DILocalVariable(name: "nbytes", arg: 3, scope: !9348, file: !3, line: 1448, type: !288)
!9369 = !DILocation(line: 1448, column: 12, scope: !9348)
!9370 = !DILocalVariable(name: "fips", arg: 4, scope: !9348, file: !3, line: 1448, type: !74)
!9371 = !DILocation(line: 1448, column: 24, scope: !9348)
!9372 = !DILocalVariable(name: "ret", scope: !9348, file: !3, line: 1450, type: !976)
!9373 = !DILocation(line: 1450, column: 10, scope: !9348)
!9374 = !DILocalVariable(name: "i", scope: !9348, file: !3, line: 1450, type: !976)
!9375 = !DILocation(line: 1450, column: 19, scope: !9348)
!9376 = !DILocalVariable(name: "tmp", scope: !9348, file: !3, line: 1451, type: !5548)
!9377 = !DILocation(line: 1451, column: 7, scope: !9348)
!9378 = !DILocalVariable(name: "flags", scope: !9348, file: !3, line: 1452, type: !168)
!9379 = !DILocation(line: 1452, column: 16, scope: !9348)
!9380 = !DILocation(line: 1454, column: 2, scope: !9348)
!9381 = !DILocation(line: 1454, column: 9, scope: !9348)
!9382 = !DILocation(line: 1455, column: 15, scope: !9355)
!9383 = !DILocation(line: 1455, column: 18, scope: !9355)
!9384 = !DILocation(line: 1455, column: 3, scope: !9355)
!9385 = !DILocation(line: 1457, column: 7, scope: !9354)
!9386 = !DILocation(line: 1457, column: 7, scope: !9355)
!9387 = !DILocation(line: 1458, column: 4, scope: !9353)
!9388 = !DILocation(line: 1458, column: 4, scope: !9363)
!9389 = !DILocalVariable(name: "__dummy", scope: !9390, file: !3, line: 1458, type: !168)
!9390 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 1458, column: 4)
!9391 = !DILocation(line: 1458, column: 4, scope: !9390)
!9392 = !DILocalVariable(name: "__dummy2", scope: !9390, file: !3, line: 1458, type: !168)
!9393 = !DILocation(line: 1458, column: 4, scope: !9362)
!9394 = !DILocation(line: 1458, column: 4, scope: !9361)
!9395 = !DILocation(line: 1458, column: 4, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 1458, column: 4)
!9397 = !DILocalVariable(name: "__dummy", scope: !9398, file: !3, line: 1458, type: !168)
!9398 = distinct !DILexicalBlock(scope: !9399, file: !3, line: 1458, column: 4)
!9399 = distinct !DILexicalBlock(scope: !9396, file: !3, line: 1458, column: 4)
!9400 = !DILocation(line: 1458, column: 4, scope: !9398)
!9401 = !DILocalVariable(name: "__dummy2", scope: !9398, file: !3, line: 1458, type: !168)
!9402 = !DILocation(line: 1458, column: 4, scope: !9399)
!9403 = !DILocation(line: 1458, column: 4, scope: !9360)
!9404 = !{i32 -2140106579}
!9405 = !DILocation(line: 1458, column: 4, scope: !9359)
!9406 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !9358)
!9407 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !9358)
!9408 = !DILocation(line: 1459, column: 16, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9353, file: !3, line: 1459, column: 8)
!9410 = !DILocation(line: 1459, column: 21, scope: !9409)
!9411 = !DILocation(line: 1459, column: 24, scope: !9409)
!9412 = !DILocation(line: 1459, column: 9, scope: !9409)
!9413 = !DILocation(line: 1459, column: 8, scope: !9353)
!9414 = !DILocation(line: 1460, column: 5, scope: !9409)
!9415 = !DILocation(line: 1461, column: 11, scope: !9353)
!9416 = !DILocation(line: 1461, column: 14, scope: !9353)
!9417 = !DILocation(line: 1461, column: 4, scope: !9353)
!9418 = !DILocation(line: 1462, column: 28, scope: !9353)
!9419 = !DILocation(line: 1462, column: 31, scope: !9353)
!9420 = !DILocation(line: 1462, column: 37, scope: !9353)
!9421 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !9352)
!9422 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !9352)
!9423 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !9352)
!9424 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !9352)
!9425 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !9352)
!9426 = !DILocation(line: 1463, column: 3, scope: !9353)
!9427 = !DILocalVariable(name: "__UNIQUE_ID___x332", scope: !9428, file: !3, line: 1464, type: !74)
!9428 = distinct !DILexicalBlock(scope: !9355, file: !3, line: 1464, column: 7)
!9429 = !DILocation(line: 1464, column: 7, scope: !9428)
!9430 = !DILocalVariable(name: "__UNIQUE_ID___y333", scope: !9428, file: !3, line: 1464, type: !74)
!9431 = !DILocation(line: 1464, column: 7, scope: !9355)
!9432 = !DILocation(line: 1464, column: 5, scope: !9355)
!9433 = !DILocation(line: 1465, column: 10, scope: !9355)
!9434 = !DILocation(line: 1465, column: 3, scope: !9355)
!9435 = !DILocation(line: 1465, column: 20, scope: !9355)
!9436 = !DILocation(line: 1466, column: 13, scope: !9355)
!9437 = !DILocation(line: 1466, column: 10, scope: !9355)
!9438 = !DILocation(line: 1467, column: 10, scope: !9355)
!9439 = !DILocation(line: 1467, column: 7, scope: !9355)
!9440 = !DILocation(line: 1468, column: 10, scope: !9355)
!9441 = !DILocation(line: 1468, column: 7, scope: !9355)
!9442 = distinct !{!9442, !9380, !9443}
!9443 = !DILocation(line: 1469, column: 2, scope: !9348)
!9444 = !DILocation(line: 1472, column: 19, scope: !9348)
!9445 = !DILocation(line: 1472, column: 2, scope: !9348)
!9446 = !DILocation(line: 1474, column: 9, scope: !9348)
!9447 = !DILocation(line: 1474, column: 2, scope: !9348)
!9448 = distinct !DISubprogram(name: "trace_debit_entropy", scope: !5866, file: !5866, line: 110, type: !9449, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9449 = !DISubroutineType(types: !9450)
!9450 = !{null, !281, !74}
!9451 = !DILocalVariable(name: "pool_name", arg: 1, scope: !9448, file: !5866, line: 110, type: !281)
!9452 = !DILocation(line: 110, column: 1, scope: !9448)
!9453 = !DILocalVariable(name: "debit_bits", arg: 2, scope: !9448, file: !5866, line: 110, type: !74)
!9454 = distinct !DISubprogram(name: "extract_buf", scope: !3, file: !3, line: 1393, type: !9455, scopeLine: 1394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9455 = !DISubroutineType(types: !9456)
!9456 = !{null, !5886, !292}
!9457 = !DILocation(line: 407, column: 64, scope: !5631, inlinedAt: !9458)
!9458 = distinct !DILocation(line: 1430, column: 2, scope: !9454)
!9459 = !DILocation(line: 407, column: 84, scope: !5631, inlinedAt: !9458)
!9460 = !DILocation(line: 327, column: 67, scope: !5640, inlinedAt: !9461)
!9461 = distinct !DILocation(line: 1416, column: 2, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9463, file: !3, line: 1416, column: 2)
!9463 = distinct !DILexicalBlock(scope: !9464, file: !3, line: 1416, column: 2)
!9464 = distinct !DILexicalBlock(scope: !9465, file: !3, line: 1416, column: 2)
!9465 = distinct !DILexicalBlock(scope: !9466, file: !3, line: 1416, column: 2)
!9466 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 1416, column: 2)
!9467 = !DILocalVariable(name: "r", arg: 1, scope: !9454, file: !3, line: 1393, type: !5886)
!9468 = !DILocation(line: 1393, column: 47, scope: !9454)
!9469 = !DILocalVariable(name: "out", arg: 2, scope: !9454, file: !3, line: 1393, type: !292)
!9470 = !DILocation(line: 1393, column: 56, scope: !9454)
!9471 = !DILocalVariable(name: "i", scope: !9454, file: !3, line: 1395, type: !74)
!9472 = !DILocation(line: 1395, column: 6, scope: !9454)
!9473 = !DILocalVariable(name: "hash", scope: !9454, file: !3, line: 1399, type: !9474)
!9474 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9454, file: !3, line: 1396, size: 192, elements: !9475)
!9475 = !{!9476, !9478}
!9476 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !9474, file: !3, line: 1397, baseType: !9477, size: 160)
!9477 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 160, elements: !1331)
!9478 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !9474, file: !3, line: 1398, baseType: !9479, size: 192)
!9479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !168, size: 192, elements: !813)
!9480 = !DILocation(line: 1399, column: 4, scope: !9454)
!9481 = !DILocalVariable(name: "workspace", scope: !9454, file: !3, line: 1400, type: !5583)
!9482 = !DILocation(line: 1400, column: 8, scope: !9454)
!9483 = !DILocalVariable(name: "flags", scope: !9454, file: !3, line: 1401, type: !168)
!9484 = !DILocation(line: 1401, column: 16, scope: !9454)
!9485 = !DILocation(line: 1407, column: 17, scope: !9454)
!9486 = !DILocation(line: 1407, column: 12, scope: !9454)
!9487 = !DILocation(line: 1407, column: 2, scope: !9454)
!9488 = !DILocation(line: 1408, column: 9, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 1408, column: 2)
!9490 = !DILocation(line: 1408, column: 7, scope: !9489)
!9491 = !DILocation(line: 1408, column: 14, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 1408, column: 2)
!9493 = !DILocation(line: 1408, column: 16, scope: !9492)
!9494 = !DILocation(line: 1408, column: 2, scope: !9489)
!9495 = !DILocalVariable(name: "v", scope: !9496, file: !3, line: 1409, type: !168)
!9496 = distinct !DILexicalBlock(scope: !9492, file: !3, line: 1408, column: 34)
!9497 = !DILocation(line: 1409, column: 17, scope: !9496)
!9498 = !DILocation(line: 1410, column: 8, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9496, file: !3, line: 1410, column: 7)
!9500 = !DILocation(line: 1410, column: 7, scope: !9496)
!9501 = !DILocation(line: 1411, column: 4, scope: !9499)
!9502 = !DILocation(line: 1412, column: 15, scope: !9496)
!9503 = !DILocation(line: 1412, column: 8, scope: !9496)
!9504 = !DILocation(line: 1412, column: 10, scope: !9496)
!9505 = !DILocation(line: 1412, column: 3, scope: !9496)
!9506 = !DILocation(line: 1412, column: 13, scope: !9496)
!9507 = !DILocation(line: 1413, column: 2, scope: !9496)
!9508 = !DILocation(line: 1408, column: 30, scope: !9492)
!9509 = !DILocation(line: 1408, column: 2, scope: !9492)
!9510 = distinct !{!9510, !9494, !9511}
!9511 = !DILocation(line: 1413, column: 2, scope: !9489)
!9512 = !DILocation(line: 1416, column: 2, scope: !9454)
!9513 = !DILocation(line: 1416, column: 2, scope: !9466)
!9514 = !DILocalVariable(name: "__dummy", scope: !9515, file: !3, line: 1416, type: !168)
!9515 = distinct !DILexicalBlock(scope: !9465, file: !3, line: 1416, column: 2)
!9516 = !DILocation(line: 1416, column: 2, scope: !9515)
!9517 = !DILocalVariable(name: "__dummy2", scope: !9515, file: !3, line: 1416, type: !168)
!9518 = !DILocation(line: 1416, column: 2, scope: !9465)
!9519 = !DILocation(line: 1416, column: 2, scope: !9464)
!9520 = !DILocation(line: 1416, column: 2, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9464, file: !3, line: 1416, column: 2)
!9522 = !DILocalVariable(name: "__dummy", scope: !9523, file: !3, line: 1416, type: !168)
!9523 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 1416, column: 2)
!9524 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 1416, column: 2)
!9525 = !DILocation(line: 1416, column: 2, scope: !9523)
!9526 = !DILocalVariable(name: "__dummy2", scope: !9523, file: !3, line: 1416, type: !168)
!9527 = !DILocation(line: 1416, column: 2, scope: !9524)
!9528 = !DILocation(line: 1416, column: 2, scope: !9463)
!9529 = !{i32 -2140107583}
!9530 = !DILocation(line: 1416, column: 2, scope: !9462)
!9531 = !DILocation(line: 329, column: 10, scope: !5640, inlinedAt: !9461)
!9532 = !DILocation(line: 329, column: 16, scope: !5640, inlinedAt: !9461)
!9533 = !DILocation(line: 1417, column: 9, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 1417, column: 2)
!9535 = !DILocation(line: 1417, column: 7, scope: !9534)
!9536 = !DILocation(line: 1417, column: 14, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9534, file: !3, line: 1417, column: 2)
!9538 = !DILocation(line: 1417, column: 18, scope: !9537)
!9539 = !DILocation(line: 1417, column: 21, scope: !9537)
!9540 = !DILocation(line: 1417, column: 31, scope: !9537)
!9541 = !DILocation(line: 1417, column: 16, scope: !9537)
!9542 = !DILocation(line: 1417, column: 2, scope: !9534)
!9543 = !DILocation(line: 1418, column: 23, scope: !9537)
!9544 = !DILocation(line: 1418, column: 18, scope: !9537)
!9545 = !DILocation(line: 1418, column: 35, scope: !9537)
!9546 = !DILocation(line: 1418, column: 38, scope: !9537)
!9547 = !DILocation(line: 1418, column: 45, scope: !9537)
!9548 = !DILocation(line: 1418, column: 43, scope: !9537)
!9549 = !DILocation(line: 1418, column: 26, scope: !9537)
!9550 = !DILocation(line: 1418, column: 49, scope: !9537)
!9551 = !DILocation(line: 1418, column: 3, scope: !9537)
!9552 = !DILocation(line: 1417, column: 44, scope: !9537)
!9553 = !DILocation(line: 1417, column: 2, scope: !9537)
!9554 = distinct !{!9554, !9542, !9555}
!9555 = !DILocation(line: 1418, column: 58, scope: !9534)
!9556 = !DILocation(line: 1429, column: 19, scope: !9454)
!9557 = !DILocation(line: 1429, column: 27, scope: !9454)
!9558 = !DILocation(line: 1429, column: 22, scope: !9454)
!9559 = !DILocation(line: 1429, column: 2, scope: !9454)
!9560 = !DILocation(line: 1430, column: 26, scope: !9454)
!9561 = !DILocation(line: 1430, column: 29, scope: !9454)
!9562 = !DILocation(line: 1430, column: 35, scope: !9454)
!9563 = !DILocation(line: 409, column: 2, scope: !5701, inlinedAt: !9458)
!9564 = !DILocation(line: 409, column: 2, scope: !5706, inlinedAt: !9458)
!9565 = !DILocation(line: 409, column: 2, scope: !5707, inlinedAt: !9458)
!9566 = !DILocation(line: 409, column: 2, scope: !5714, inlinedAt: !9458)
!9567 = !DILocation(line: 409, column: 2, scope: !5717, inlinedAt: !9458)
!9568 = !DILocation(line: 1432, column: 19, scope: !9454)
!9569 = !DILocation(line: 1432, column: 2, scope: !9454)
!9570 = !DILocation(line: 1439, column: 20, scope: !9454)
!9571 = !DILocation(line: 1439, column: 15, scope: !9454)
!9572 = !DILocation(line: 1439, column: 7, scope: !9454)
!9573 = !DILocation(line: 1439, column: 2, scope: !9454)
!9574 = !DILocation(line: 1439, column: 12, scope: !9454)
!9575 = !DILocation(line: 1440, column: 20, scope: !9454)
!9576 = !DILocation(line: 1440, column: 15, scope: !9454)
!9577 = !DILocation(line: 1440, column: 7, scope: !9454)
!9578 = !DILocation(line: 1440, column: 2, scope: !9454)
!9579 = !DILocation(line: 1440, column: 12, scope: !9454)
!9580 = !DILocation(line: 1441, column: 26, scope: !9454)
!9581 = !DILocation(line: 1441, column: 21, scope: !9454)
!9582 = !DILocation(line: 1441, column: 15, scope: !9454)
!9583 = !DILocation(line: 1441, column: 7, scope: !9454)
!9584 = !DILocation(line: 1441, column: 2, scope: !9454)
!9585 = !DILocation(line: 1441, column: 12, scope: !9454)
!9586 = !DILocation(line: 1443, column: 9, scope: !9454)
!9587 = !DILocation(line: 1443, column: 2, scope: !9454)
!9588 = !DILocation(line: 1444, column: 19, scope: !9454)
!9589 = !DILocation(line: 1444, column: 2, scope: !9454)
!9590 = !DILocation(line: 1445, column: 1, scope: !9454)
!9591 = distinct !DISubprogram(name: "chacha20_block", scope: !9592, file: !9592, line: 34, type: !9593, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9592 = !DIFile(filename: "./include/crypto/chacha.h", directory: "/home/lizy2001/genbc/linux")
!9593 = !DISubroutineType(types: !9594)
!9594 = !{null, !4227, !225}
!9595 = !DILocalVariable(name: "state", arg: 1, scope: !9591, file: !9592, line: 34, type: !4227)
!9596 = !DILocation(line: 34, column: 40, scope: !9591)
!9597 = !DILocalVariable(name: "stream", arg: 2, scope: !9591, file: !9592, line: 34, type: !225)
!9598 = !DILocation(line: 34, column: 51, scope: !9591)
!9599 = !DILocation(line: 36, column: 23, scope: !9591)
!9600 = !DILocation(line: 36, column: 30, scope: !9591)
!9601 = !DILocation(line: 36, column: 2, scope: !9591)
!9602 = !DILocation(line: 37, column: 1, scope: !9591)
!9603 = distinct !DISubprogram(name: "trace_get_random_bytes", scope: !5866, file: !5866, line: 211, type: !5867, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9604 = !DILocalVariable(name: "nbytes", arg: 1, scope: !9603, file: !5866, line: 211, type: !74)
!9605 = !DILocation(line: 211, column: 1, scope: !9603)
!9606 = !DILocalVariable(name: "IP", arg: 2, scope: !9603, file: !5866, line: 211, type: !168)
!9607 = distinct !DISubprogram(name: "crng_backtrack_protect", scope: !3, file: !3, line: 1053, type: !9608, scopeLine: 1054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9608 = !DISubroutineType(types: !9609)
!9609 = !{null, !292, !74}
!9610 = !DILocalVariable(name: "tmp", arg: 1, scope: !9607, file: !3, line: 1053, type: !292)
!9611 = !DILocation(line: 1053, column: 41, scope: !9607)
!9612 = !DILocalVariable(name: "used", arg: 2, scope: !9607, file: !3, line: 1053, type: !74)
!9613 = !DILocation(line: 1053, column: 69, scope: !9607)
!9614 = !DILocalVariable(name: "crng", scope: !9607, file: !3, line: 1055, type: !7413)
!9615 = !DILocation(line: 1055, column: 21, scope: !9607)
!9616 = !DILocation(line: 1062, column: 8, scope: !9607)
!9617 = !DILocation(line: 1063, column: 26, scope: !9607)
!9618 = !DILocation(line: 1063, column: 32, scope: !9607)
!9619 = !DILocation(line: 1063, column: 37, scope: !9607)
!9620 = !DILocation(line: 1063, column: 2, scope: !9607)
!9621 = !DILocation(line: 1064, column: 1, scope: !9607)
!9622 = distinct !DISubprogram(name: "init_timer_on_stack_key", scope: !2417, file: !2417, line: 101, type: !9623, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9623 = !DISubroutineType(types: !9624)
!9624 = !{null, !2425, !2422, !7, !281, !9625}
!9625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!9626 = !DILocalVariable(name: "timer", arg: 1, scope: !9622, file: !2417, line: 101, type: !2425)
!9627 = !DILocation(line: 101, column: 63, scope: !9622)
!9628 = !DILocalVariable(name: "func", arg: 2, scope: !9622, file: !2417, line: 102, type: !2422)
!9629 = !DILocation(line: 102, column: 16, scope: !9622)
!9630 = !DILocalVariable(name: "flags", arg: 3, scope: !9622, file: !2417, line: 103, type: !7)
!9631 = !DILocation(line: 103, column: 22, scope: !9622)
!9632 = !DILocalVariable(name: "name", arg: 4, scope: !9622, file: !2417, line: 104, type: !281)
!9633 = !DILocation(line: 104, column: 21, scope: !9622)
!9634 = !DILocalVariable(name: "key", arg: 5, scope: !9622, file: !2417, line: 105, type: !9625)
!9635 = !DILocation(line: 105, column: 32, scope: !9622)
!9636 = !DILocation(line: 107, column: 17, scope: !9622)
!9637 = !DILocation(line: 107, column: 24, scope: !9622)
!9638 = !DILocation(line: 107, column: 30, scope: !9622)
!9639 = !DILocation(line: 107, column: 37, scope: !9622)
!9640 = !DILocation(line: 107, column: 43, scope: !9622)
!9641 = !DILocation(line: 107, column: 2, scope: !9622)
!9642 = !DILocation(line: 108, column: 1, scope: !9622)
!9643 = distinct !DISubprogram(name: "entropy_timer", scope: !3, file: !3, line: 1593, type: !2423, scopeLine: 1594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9644 = !DILocalVariable(name: "t", arg: 1, scope: !9643, file: !3, line: 1593, type: !2425)
!9645 = !DILocation(line: 1593, column: 46, scope: !9643)
!9646 = !DILocation(line: 1595, column: 2, scope: !9643)
!9647 = !DILocation(line: 1596, column: 1, scope: !9643)
!9648 = distinct !DISubprogram(name: "timer_pending", scope: !2417, file: !2417, line: 166, type: !9649, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9649 = !DISubroutineType(types: !9650)
!9650 = !{!74, !9651}
!9651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9652, size: 64)
!9652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2416)
!9653 = !DILocalVariable(name: "timer", arg: 1, scope: !9648, file: !2417, line: 166, type: !9651)
!9654 = !DILocation(line: 166, column: 59, scope: !9648)
!9655 = !DILocation(line: 168, column: 35, scope: !9648)
!9656 = !DILocation(line: 168, column: 42, scope: !9648)
!9657 = !DILocation(line: 168, column: 10, scope: !9648)
!9658 = !DILocation(line: 168, column: 9, scope: !9648)
!9659 = !DILocation(line: 168, column: 2, scope: !9648)
!9660 = distinct !DISubprogram(name: "destroy_timer_on_stack", scope: !2417, file: !2417, line: 150, type: !2423, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9661 = !DILocalVariable(name: "timer", arg: 1, scope: !9660, file: !2417, line: 150, type: !2425)
!9662 = !DILocation(line: 150, column: 62, scope: !9660)
!9663 = !DILocation(line: 150, column: 71, scope: !9660)
!9664 = distinct !DISubprogram(name: "hlist_unhashed_lockless", scope: !7185, file: !7185, line: 819, type: !9665, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9665 = !DISubroutineType(types: !9666)
!9666 = !{!74, !9667}
!9667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9668, size: 64)
!9668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !320)
!9669 = !DILocalVariable(name: "h", arg: 1, scope: !9664, file: !7185, line: 819, type: !9667)
!9670 = !DILocation(line: 819, column: 68, scope: !9664)
!9671 = !DILocation(line: 821, column: 10, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9664, file: !7185, line: 821, column: 10)
!9673 = !DILocation(line: 821, column: 10, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9672, file: !7185, line: 821, column: 10)
!9675 = !DILocation(line: 821, column: 9, scope: !9664)
!9676 = !DILocation(line: 821, column: 2, scope: !9664)
!9677 = distinct !DISubprogram(name: "__list_add", scope: !7185, file: !7185, line: 63, type: !9678, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9678 = !DISubroutineType(types: !9679)
!9679 = !{null, !301, !301, !301}
!9680 = !DILocalVariable(name: "new", arg: 1, scope: !9677, file: !7185, line: 63, type: !301)
!9681 = !DILocation(line: 63, column: 49, scope: !9677)
!9682 = !DILocalVariable(name: "prev", arg: 2, scope: !9677, file: !7185, line: 64, type: !301)
!9683 = !DILocation(line: 64, column: 28, scope: !9677)
!9684 = !DILocalVariable(name: "next", arg: 3, scope: !9677, file: !7185, line: 65, type: !301)
!9685 = !DILocation(line: 65, column: 28, scope: !9677)
!9686 = !DILocation(line: 67, column: 24, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9677, file: !7185, line: 67, column: 6)
!9688 = !DILocation(line: 67, column: 29, scope: !9687)
!9689 = !DILocation(line: 67, column: 35, scope: !9687)
!9690 = !DILocation(line: 67, column: 7, scope: !9687)
!9691 = !DILocation(line: 67, column: 6, scope: !9677)
!9692 = !DILocation(line: 68, column: 3, scope: !9687)
!9693 = !DILocation(line: 70, column: 15, scope: !9677)
!9694 = !DILocation(line: 70, column: 2, scope: !9677)
!9695 = !DILocation(line: 70, column: 8, scope: !9677)
!9696 = !DILocation(line: 70, column: 13, scope: !9677)
!9697 = !DILocation(line: 71, column: 14, scope: !9677)
!9698 = !DILocation(line: 71, column: 2, scope: !9677)
!9699 = !DILocation(line: 71, column: 7, scope: !9677)
!9700 = !DILocation(line: 71, column: 12, scope: !9677)
!9701 = !DILocation(line: 72, column: 14, scope: !9677)
!9702 = !DILocation(line: 72, column: 2, scope: !9677)
!9703 = !DILocation(line: 72, column: 7, scope: !9677)
!9704 = !DILocation(line: 72, column: 12, scope: !9677)
!9705 = !DILocation(line: 73, column: 2, scope: !9677)
!9706 = !DILocation(line: 73, column: 2, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9677, file: !7185, line: 73, column: 2)
!9708 = !DILocation(line: 73, column: 2, scope: !9709)
!9709 = distinct !DILexicalBlock(scope: !9707, file: !7185, line: 73, column: 2)
!9710 = !DILocation(line: 73, column: 2, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9707, file: !7185, line: 73, column: 2)
!9712 = !DILocation(line: 74, column: 1, scope: !9677)
!9713 = distinct !DISubprogram(name: "__list_add_valid", scope: !7185, file: !7185, line: 45, type: !9714, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9714 = !DISubroutineType(types: !9715)
!9715 = !{!754, !301, !301, !301}
!9716 = !DILocalVariable(name: "new", arg: 1, scope: !9713, file: !7185, line: 45, type: !301)
!9717 = !DILocation(line: 45, column: 55, scope: !9713)
!9718 = !DILocalVariable(name: "prev", arg: 2, scope: !9713, file: !7185, line: 46, type: !301)
!9719 = !DILocation(line: 46, column: 23, scope: !9713)
!9720 = !DILocalVariable(name: "next", arg: 3, scope: !9713, file: !7185, line: 47, type: !301)
!9721 = !DILocation(line: 47, column: 23, scope: !9713)
!9722 = !DILocation(line: 49, column: 2, scope: !9713)
!9723 = distinct !DISubprogram(name: "__list_del_entry", scope: !7185, file: !7185, line: 130, type: !7279, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9724 = !DILocalVariable(name: "entry", arg: 1, scope: !9723, file: !7185, line: 130, type: !301)
!9725 = !DILocation(line: 130, column: 55, scope: !9723)
!9726 = !DILocation(line: 132, column: 30, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9723, file: !7185, line: 132, column: 6)
!9728 = !DILocation(line: 132, column: 7, scope: !9727)
!9729 = !DILocation(line: 132, column: 6, scope: !9723)
!9730 = !DILocation(line: 133, column: 3, scope: !9727)
!9731 = !DILocation(line: 135, column: 13, scope: !9723)
!9732 = !DILocation(line: 135, column: 20, scope: !9723)
!9733 = !DILocation(line: 135, column: 26, scope: !9723)
!9734 = !DILocation(line: 135, column: 33, scope: !9723)
!9735 = !DILocation(line: 135, column: 2, scope: !9723)
!9736 = !DILocation(line: 136, column: 1, scope: !9723)
!9737 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !7185, file: !7185, line: 33, type: !7279, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9738 = !DILocalVariable(name: "list", arg: 1, scope: !9737, file: !7185, line: 33, type: !301)
!9739 = !DILocation(line: 33, column: 53, scope: !9737)
!9740 = !DILocation(line: 35, column: 2, scope: !9737)
!9741 = !DILocation(line: 35, column: 2, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9737, file: !7185, line: 35, column: 2)
!9743 = !DILocation(line: 35, column: 2, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9742, file: !7185, line: 35, column: 2)
!9745 = !DILocation(line: 35, column: 2, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9742, file: !7185, line: 35, column: 2)
!9747 = !DILocation(line: 36, column: 15, scope: !9737)
!9748 = !DILocation(line: 36, column: 2, scope: !9737)
!9749 = !DILocation(line: 36, column: 8, scope: !9737)
!9750 = !DILocation(line: 36, column: 13, scope: !9737)
!9751 = !DILocation(line: 37, column: 1, scope: !9737)
!9752 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !7185, file: !7185, line: 51, type: !9753, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9753 = !DISubroutineType(types: !9754)
!9754 = !{!754, !301}
!9755 = !DILocalVariable(name: "entry", arg: 1, scope: !9752, file: !7185, line: 51, type: !301)
!9756 = !DILocation(line: 51, column: 61, scope: !9752)
!9757 = !DILocation(line: 53, column: 2, scope: !9752)
!9758 = distinct !DISubprogram(name: "__list_del", scope: !7185, file: !7185, line: 110, type: !7186, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9759 = !DILocalVariable(name: "prev", arg: 1, scope: !9758, file: !7185, line: 110, type: !301)
!9760 = !DILocation(line: 110, column: 50, scope: !9758)
!9761 = !DILocalVariable(name: "next", arg: 2, scope: !9758, file: !7185, line: 110, type: !301)
!9762 = !DILocation(line: 110, column: 75, scope: !9758)
!9763 = !DILocation(line: 112, column: 15, scope: !9758)
!9764 = !DILocation(line: 112, column: 2, scope: !9758)
!9765 = !DILocation(line: 112, column: 8, scope: !9758)
!9766 = !DILocation(line: 112, column: 13, scope: !9758)
!9767 = !DILocation(line: 113, column: 2, scope: !9758)
!9768 = !DILocation(line: 113, column: 2, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9758, file: !7185, line: 113, column: 2)
!9770 = !DILocation(line: 113, column: 2, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9769, file: !7185, line: 113, column: 2)
!9772 = !DILocation(line: 113, column: 2, scope: !9773)
!9773 = distinct !DILexicalBlock(scope: !9769, file: !7185, line: 113, column: 2)
!9774 = !DILocation(line: 114, column: 1, scope: !9758)
!9775 = distinct !DISubprogram(name: "rdrand_long", scope: !6654, file: !6654, line: 20, type: !6655, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9776 = !DILocalVariable(name: "v", arg: 1, scope: !9775, file: !6654, line: 20, type: !280)
!9777 = !DILocation(line: 20, column: 60, scope: !9775)
!9778 = !DILocalVariable(name: "ok", scope: !9775, file: !6654, line: 22, type: !754)
!9779 = !DILocation(line: 22, column: 7, scope: !9775)
!9780 = !DILocalVariable(name: "retry", scope: !9775, file: !6654, line: 23, type: !7)
!9781 = !DILocation(line: 23, column: 15, scope: !9775)
!9782 = !DILocation(line: 24, column: 2, scope: !9775)
!9783 = !DILocation(line: 27, column: 40, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9775, file: !6654, line: 24, column: 5)
!9785 = !DILocation(line: 25, column: 3, scope: !9784)
!9786 = !{i32 3840772, i32 -2143640891}
!9787 = !DILocation(line: 28, column: 7, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9784, file: !6654, line: 28, column: 7)
!9789 = !DILocation(line: 28, column: 7, scope: !9784)
!9790 = !DILocation(line: 29, column: 4, scope: !9788)
!9791 = !DILocation(line: 30, column: 2, scope: !9784)
!9792 = !DILocation(line: 30, column: 11, scope: !9775)
!9793 = distinct !{!9793, !9782, !9794}
!9794 = !DILocation(line: 30, column: 18, scope: !9775)
!9795 = !DILocation(line: 31, column: 2, scope: !9775)
!9796 = !DILocation(line: 32, column: 1, scope: !9775)
!9797 = distinct !DISubprogram(name: "ktime_get_real", scope: !144, file: !144, line: 77, type: !485, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9798 = !DILocation(line: 79, column: 9, scope: !9797)
!9799 = !DILocation(line: 79, column: 2, scope: !9797)
!9800 = distinct !DISubprogram(name: "utsname", scope: !4352, file: !4352, line: 80, type: !9801, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9801 = !DISubroutineType(types: !9802)
!9802 = !{!9803}
!9803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4356, size: 64)
!9804 = !DILocation(line: 15, column: 9, scope: !7960, inlinedAt: !9805)
!9805 = distinct !DILocation(line: 82, column: 10, scope: !9800)
!9806 = !DILocation(line: 15, column: 9, scope: !7969, inlinedAt: !9805)
!9807 = !DILocation(line: 15, column: 9, scope: !7972, inlinedAt: !9805)
!9808 = !DILocation(line: 82, column: 19, scope: !9800)
!9809 = !DILocation(line: 82, column: 28, scope: !9800)
!9810 = !DILocation(line: 82, column: 36, scope: !9800)
!9811 = !DILocation(line: 82, column: 2, scope: !9800)
!9812 = distinct !DISubprogram(name: "crng_init_try_arch_early", scope: !3, file: !3, line: 802, type: !9813, scopeLine: 803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9813 = !DISubroutineType(types: !9814)
!9814 = !{!754, !7413}
!9815 = !DILocalVariable(name: "crng", arg: 1, scope: !9812, file: !3, line: 802, type: !7413)
!9816 = !DILocation(line: 802, column: 64, scope: !9812)
!9817 = !DILocalVariable(name: "i", scope: !9812, file: !3, line: 804, type: !74)
!9818 = !DILocation(line: 804, column: 7, scope: !9812)
!9819 = !DILocalVariable(name: "arch_init", scope: !9812, file: !3, line: 805, type: !754)
!9820 = !DILocation(line: 805, column: 8, scope: !9812)
!9821 = !DILocalVariable(name: "rv", scope: !9812, file: !3, line: 806, type: !168)
!9822 = !DILocation(line: 806, column: 16, scope: !9812)
!9823 = !DILocation(line: 808, column: 9, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9812, file: !3, line: 808, column: 2)
!9825 = !DILocation(line: 808, column: 7, scope: !9824)
!9826 = !DILocation(line: 808, column: 14, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9824, file: !3, line: 808, column: 2)
!9828 = !DILocation(line: 808, column: 16, scope: !9827)
!9829 = !DILocation(line: 808, column: 2, scope: !9824)
!9830 = !DILocation(line: 809, column: 8, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9832, file: !3, line: 809, column: 7)
!9832 = distinct !DILexicalBlock(scope: !9827, file: !3, line: 808, column: 27)
!9833 = !DILocation(line: 809, column: 45, scope: !9831)
!9834 = !DILocation(line: 810, column: 8, scope: !9831)
!9835 = !DILocation(line: 809, column: 7, scope: !9832)
!9836 = !DILocation(line: 811, column: 9, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9831, file: !3, line: 810, column: 41)
!9838 = !DILocation(line: 811, column: 7, scope: !9837)
!9839 = !DILocation(line: 812, column: 14, scope: !9837)
!9840 = !DILocation(line: 813, column: 3, scope: !9837)
!9841 = !DILocation(line: 814, column: 21, scope: !9832)
!9842 = !DILocation(line: 814, column: 3, scope: !9832)
!9843 = !DILocation(line: 814, column: 9, scope: !9832)
!9844 = !DILocation(line: 814, column: 15, scope: !9832)
!9845 = !DILocation(line: 814, column: 18, scope: !9832)
!9846 = !DILocation(line: 815, column: 2, scope: !9832)
!9847 = !DILocation(line: 808, column: 23, scope: !9827)
!9848 = !DILocation(line: 808, column: 2, scope: !9827)
!9849 = distinct !{!9849, !9829, !9850}
!9850 = !DILocation(line: 815, column: 2, scope: !9824)
!9851 = !DILocation(line: 817, column: 9, scope: !9812)
!9852 = !DILocation(line: 817, column: 2, scope: !9812)
!9853 = distinct !DISubprogram(name: "arch_get_random_seed_long_early", scope: !295, file: !295, line: 146, type: !6655, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9854 = !DILocalVariable(name: "v", arg: 1, scope: !9853, file: !295, line: 146, type: !280)
!9855 = !DILocation(line: 146, column: 74, scope: !9853)
!9856 = !DILocalVariable(name: "__ret_warn_on", scope: !9857, file: !295, line: 148, type: !74)
!9857 = distinct !DILexicalBlock(scope: !9853, file: !295, line: 148, column: 2)
!9858 = !DILocation(line: 148, column: 2, scope: !9857)
!9859 = !DILocation(line: 148, column: 2, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !9857, file: !295, line: 148, column: 2)
!9861 = !DILocation(line: 148, column: 2, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9860, file: !295, line: 148, column: 2)
!9863 = !DILocation(line: 148, column: 2, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9862, file: !295, line: 148, column: 2)
!9865 = !DILocation(line: 148, column: 2, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9862, file: !295, line: 148, column: 2)
!9867 = !{i32 -2143596163, i32 -2143596134, i32 -2143596088, i32 -2143596030, i32 -2143595976, i32 -2143595922, i32 -2143595867, i32 -2143595836}
!9868 = !DILocation(line: 148, column: 2, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9862, file: !295, line: 148, column: 2)
!9870 = !{i32 -2143595432, i32 -2143595425, i32 -2143595373, i32 -2143595342, i32 -2143595312}
!9871 = !DILocation(line: 148, column: 2, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9862, file: !295, line: 148, column: 2)
!9873 = !DILocation(line: 149, column: 35, scope: !9853)
!9874 = !DILocation(line: 149, column: 9, scope: !9853)
!9875 = !DILocation(line: 149, column: 2, scope: !9853)
!9876 = distinct !DISubprogram(name: "arch_get_random_long_early", scope: !295, file: !295, line: 154, type: !6655, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9877 = !DILocalVariable(name: "v", arg: 1, scope: !9876, file: !295, line: 154, type: !280)
!9878 = !DILocation(line: 154, column: 69, scope: !9876)
!9879 = !DILocalVariable(name: "__ret_warn_on", scope: !9880, file: !295, line: 156, type: !74)
!9880 = distinct !DILexicalBlock(scope: !9876, file: !295, line: 156, column: 2)
!9881 = !DILocation(line: 156, column: 2, scope: !9880)
!9882 = !DILocation(line: 156, column: 2, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9880, file: !295, line: 156, column: 2)
!9884 = !DILocation(line: 156, column: 2, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9883, file: !295, line: 156, column: 2)
!9886 = !DILocation(line: 156, column: 2, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9885, file: !295, line: 156, column: 2)
!9888 = !DILocation(line: 156, column: 2, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9885, file: !295, line: 156, column: 2)
!9890 = !{i32 -2143594401, i32 -2143594372, i32 -2143594326, i32 -2143594268, i32 -2143594214, i32 -2143594160, i32 -2143594105, i32 -2143594074}
!9891 = !DILocation(line: 156, column: 2, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9885, file: !295, line: 156, column: 2)
!9893 = !{i32 -2143593670, i32 -2143593663, i32 -2143593611, i32 -2143593580, i32 -2143593550}
!9894 = !DILocation(line: 156, column: 2, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9885, file: !295, line: 156, column: 2)
!9896 = !DILocation(line: 157, column: 30, scope: !9876)
!9897 = !DILocation(line: 157, column: 9, scope: !9876)
!9898 = !DILocation(line: 157, column: 2, scope: !9876)
!9899 = distinct !DISubprogram(name: "get_order", scope: !9900, file: !9900, line: 29, type: !9901, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9900 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!9901 = !DISubroutineType(types: !9902)
!9902 = !{!74, !168}
!9903 = !DILocalVariable(name: "x", arg: 1, scope: !9904, file: !6059, line: 366, type: !199)
!9904 = distinct !DISubprogram(name: "fls64", scope: !6059, file: !6059, line: 366, type: !9905, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9905 = !DISubroutineType(types: !9906)
!9906 = !{!74, !199}
!9907 = !DILocation(line: 366, column: 40, scope: !9904, inlinedAt: !9908)
!9908 = distinct !DILocation(line: 46, column: 9, scope: !9899)
!9909 = !DILocalVariable(name: "bitpos", scope: !9904, file: !6059, line: 368, type: !74)
!9910 = !DILocation(line: 368, column: 6, scope: !9904, inlinedAt: !9908)
!9911 = !DILocalVariable(name: "size", arg: 1, scope: !9899, file: !9900, line: 29, type: !168)
!9912 = !DILocation(line: 29, column: 63, scope: !9899)
!9913 = !DILocation(line: 31, column: 27, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9899, file: !9900, line: 31, column: 6)
!9915 = !DILocation(line: 31, column: 6, scope: !9914)
!9916 = !DILocation(line: 31, column: 6, scope: !9899)
!9917 = !DILocation(line: 32, column: 8, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9919, file: !9900, line: 32, column: 7)
!9919 = distinct !DILexicalBlock(scope: !9914, file: !9900, line: 31, column: 34)
!9920 = !DILocation(line: 32, column: 7, scope: !9919)
!9921 = !DILocation(line: 33, column: 4, scope: !9918)
!9922 = !DILocation(line: 35, column: 7, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !9919, file: !9900, line: 35, column: 7)
!9924 = !DILocation(line: 35, column: 12, scope: !9923)
!9925 = !DILocation(line: 35, column: 7, scope: !9919)
!9926 = !DILocation(line: 36, column: 4, scope: !9923)
!9927 = !DILocation(line: 38, column: 10, scope: !9919)
!9928 = !DILocation(line: 38, column: 28, scope: !9919)
!9929 = !DILocation(line: 38, column: 41, scope: !9919)
!9930 = !DILocation(line: 38, column: 3, scope: !9919)
!9931 = !DILocation(line: 41, column: 6, scope: !9899)
!9932 = !DILocation(line: 42, column: 7, scope: !9899)
!9933 = !DILocation(line: 46, column: 15, scope: !9899)
!9934 = !DILocation(line: 374, column: 2, scope: !9904, inlinedAt: !9908)
!9935 = !DILocation(line: 376, column: 14, scope: !9904, inlinedAt: !9908)
!9936 = !{i32 393253}
!9937 = !DILocation(line: 377, column: 9, scope: !9904, inlinedAt: !9908)
!9938 = !DILocation(line: 377, column: 16, scope: !9904, inlinedAt: !9908)
!9939 = !DILocation(line: 46, column: 2, scope: !9899)
!9940 = !DILocation(line: 48, column: 1, scope: !9899)
!9941 = distinct !DISubprogram(name: "__ilog2_u64", scope: !9942, file: !9942, line: 30, type: !9943, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9942 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!9943 = !DISubroutineType(types: !9944)
!9944 = !{!74, !197}
!9945 = !DILocation(line: 366, column: 40, scope: !9904, inlinedAt: !9946)
!9946 = distinct !DILocation(line: 32, column: 9, scope: !9941)
!9947 = !DILocation(line: 368, column: 6, scope: !9904, inlinedAt: !9946)
!9948 = !DILocalVariable(name: "n", arg: 1, scope: !9941, file: !9942, line: 30, type: !197)
!9949 = !DILocation(line: 30, column: 21, scope: !9941)
!9950 = !DILocation(line: 32, column: 15, scope: !9941)
!9951 = !DILocation(line: 374, column: 2, scope: !9904, inlinedAt: !9946)
!9952 = !DILocation(line: 376, column: 14, scope: !9904, inlinedAt: !9946)
!9953 = !DILocation(line: 377, column: 9, scope: !9904, inlinedAt: !9946)
!9954 = !DILocation(line: 377, column: 16, scope: !9904, inlinedAt: !9946)
!9955 = !DILocation(line: 32, column: 18, scope: !9941)
!9956 = !DILocation(line: 32, column: 2, scope: !9941)
!9957 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !9958, file: !9958, line: 137, type: !9959, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9958 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!9959 = !DISubroutineType(types: !9960)
!9960 = !{!183, !1308, !2095, !288, !187}
!9961 = !DILocalVariable(name: "s", arg: 1, scope: !9957, file: !9958, line: 137, type: !1308)
!9962 = !DILocation(line: 137, column: 54, scope: !9957)
!9963 = !DILocalVariable(name: "object", arg: 2, scope: !9957, file: !9958, line: 137, type: !2095)
!9964 = !DILocation(line: 137, column: 69, scope: !9957)
!9965 = !DILocalVariable(name: "size", arg: 3, scope: !9957, file: !9958, line: 138, type: !288)
!9966 = !DILocation(line: 138, column: 12, scope: !9957)
!9967 = !DILocalVariable(name: "flags", arg: 4, scope: !9957, file: !9958, line: 138, type: !187)
!9968 = !DILocation(line: 138, column: 24, scope: !9957)
!9969 = !DILocation(line: 140, column: 17, scope: !9957)
!9970 = !DILocation(line: 140, column: 2, scope: !9957)
!9971 = distinct !DISubprogram(name: "urandom_read_nowarn", scope: !3, file: !3, line: 1829, type: !974, scopeLine: 1831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9972 = !DILocalVariable(name: "file", arg: 1, scope: !9971, file: !3, line: 1829, type: !971)
!9973 = !DILocation(line: 1829, column: 34, scope: !9971)
!9974 = !DILocalVariable(name: "buf", arg: 2, scope: !9971, file: !3, line: 1829, type: !184)
!9975 = !DILocation(line: 1829, column: 53, scope: !9971)
!9976 = !DILocalVariable(name: "nbytes", arg: 3, scope: !9971, file: !3, line: 1829, type: !288)
!9977 = !DILocation(line: 1829, column: 65, scope: !9971)
!9978 = !DILocalVariable(name: "ppos", arg: 4, scope: !9971, file: !3, line: 1830, type: !922)
!9979 = !DILocation(line: 1830, column: 15, scope: !9971)
!9980 = !DILocalVariable(name: "ret", scope: !9971, file: !3, line: 1832, type: !74)
!9981 = !DILocation(line: 1832, column: 6, scope: !9971)
!9982 = !DILocalVariable(name: "__UNIQUE_ID___x338", scope: !9983, file: !3, line: 1834, type: !288)
!9983 = distinct !DILexicalBlock(scope: !9971, file: !3, line: 1834, column: 11)
!9984 = !DILocation(line: 1834, column: 11, scope: !9983)
!9985 = !DILocalVariable(name: "__UNIQUE_ID___y339", scope: !9983, file: !3, line: 1834, type: !288)
!9986 = !DILocation(line: 1834, column: 9, scope: !9971)
!9987 = !DILocation(line: 1835, column: 26, scope: !9971)
!9988 = !DILocation(line: 1835, column: 31, scope: !9971)
!9989 = !DILocation(line: 1835, column: 8, scope: !9971)
!9990 = !DILocation(line: 1835, column: 6, scope: !9971)
!9991 = !DILocation(line: 1836, column: 25, scope: !9971)
!9992 = !DILocation(line: 1836, column: 23, scope: !9971)
!9993 = !DILocation(line: 1836, column: 21, scope: !9971)
!9994 = !DILocation(line: 1836, column: 36, scope: !9971)
!9995 = !DILocation(line: 1836, column: 2, scope: !9971)
!9996 = !DILocation(line: 1837, column: 9, scope: !9971)
!9997 = !DILocation(line: 1837, column: 2, scope: !9971)
!9998 = distinct !DISubprogram(name: "extract_crng_user", scope: !3, file: !3, line: 1066, type: !9999, scopeLine: 1067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!9999 = !DISubroutineType(types: !10000)
!10000 = !{!976, !183, !288}
!10001 = !DILocalVariable(name: "addr", arg: 1, scope: !10002, file: !10003, line: 138, type: !2095)
!10002 = distinct !DISubprogram(name: "check_copy_size", scope: !10003, file: !10003, line: 138, type: !10004, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10003 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!10004 = !DISubroutineType(types: !10005)
!10005 = !{!754, !2095, !288, !754}
!10006 = !DILocation(line: 138, column: 29, scope: !10002, inlinedAt: !10007)
!10007 = distinct !DILocation(line: 199, column: 6, scope: !10008, inlinedAt: !10013)
!10008 = distinct !DILexicalBlock(scope: !10010, file: !10009, line: 199, column: 6)
!10009 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!10010 = distinct !DISubprogram(name: "copy_to_user", scope: !10009, file: !10009, line: 197, type: !10011, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10011 = !DISubroutineType(types: !10012)
!10012 = !{!168, !183, !2095, !168}
!10013 = distinct !DILocation(line: 1084, column: 7, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 1084, column: 7)
!10015 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 1072, column: 17)
!10016 = !DILocalVariable(name: "bytes", arg: 2, scope: !10002, file: !10003, line: 138, type: !288)
!10017 = !DILocation(line: 138, column: 42, scope: !10002, inlinedAt: !10007)
!10018 = !DILocalVariable(name: "is_source", arg: 3, scope: !10002, file: !10003, line: 138, type: !754)
!10019 = !DILocation(line: 138, column: 54, scope: !10002, inlinedAt: !10007)
!10020 = !DILocalVariable(name: "sz", scope: !10002, file: !10003, line: 140, type: !74)
!10021 = !DILocation(line: 140, column: 6, scope: !10002, inlinedAt: !10007)
!10022 = !DILocalVariable(name: "__ret_warn_on", scope: !10023, file: !10003, line: 150, type: !74)
!10023 = distinct !DILexicalBlock(scope: !10024, file: !10003, line: 150, column: 6)
!10024 = distinct !DILexicalBlock(scope: !10002, file: !10003, line: 150, column: 6)
!10025 = !DILocation(line: 150, column: 6, scope: !10023, inlinedAt: !10007)
!10026 = !DILocalVariable(name: "to", arg: 1, scope: !10010, file: !10009, line: 197, type: !183)
!10027 = !DILocation(line: 197, column: 27, scope: !10010, inlinedAt: !10013)
!10028 = !DILocalVariable(name: "from", arg: 2, scope: !10010, file: !10009, line: 197, type: !2095)
!10029 = !DILocation(line: 197, column: 43, scope: !10010, inlinedAt: !10013)
!10030 = !DILocalVariable(name: "n", arg: 3, scope: !10010, file: !10009, line: 197, type: !168)
!10031 = !DILocation(line: 197, column: 63, scope: !10010, inlinedAt: !10013)
!10032 = !DILocation(line: 15, column: 9, scope: !7960, inlinedAt: !10033)
!10033 = distinct !DILocation(line: 1074, column: 23, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 1074, column: 8)
!10035 = distinct !DILexicalBlock(scope: !10036, file: !3, line: 1073, column: 40)
!10036 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 1073, column: 7)
!10037 = !DILocation(line: 15, column: 9, scope: !7969, inlinedAt: !10033)
!10038 = !DILocation(line: 15, column: 9, scope: !7972, inlinedAt: !10033)
!10039 = !DILocation(line: 15, column: 9, scope: !7960, inlinedAt: !10040)
!10040 = distinct !DILocation(line: 1897, column: 9, scope: !10041, inlinedAt: !10042)
!10041 = distinct !DISubprogram(name: "need_resched", scope: !331, file: !331, line: 1895, type: !2085, scopeLine: 1896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10042 = distinct !DILocation(line: 1073, column: 24, scope: !10036)
!10043 = !DILocation(line: 15, column: 9, scope: !7969, inlinedAt: !10040)
!10044 = !DILocation(line: 15, column: 9, scope: !7972, inlinedAt: !10040)
!10045 = !DILocalVariable(name: "buf", arg: 1, scope: !9998, file: !3, line: 1066, type: !183)
!10046 = !DILocation(line: 1066, column: 47, scope: !9998)
!10047 = !DILocalVariable(name: "nbytes", arg: 2, scope: !9998, file: !3, line: 1066, type: !288)
!10048 = !DILocation(line: 1066, column: 59, scope: !9998)
!10049 = !DILocalVariable(name: "ret", scope: !9998, file: !3, line: 1068, type: !976)
!10050 = !DILocation(line: 1068, column: 10, scope: !9998)
!10051 = !DILocalVariable(name: "i", scope: !9998, file: !3, line: 1068, type: !976)
!10052 = !DILocation(line: 1068, column: 19, scope: !9998)
!10053 = !DILocalVariable(name: "tmp", scope: !9998, file: !3, line: 1069, type: !6951, align: 32)
!10054 = !DILocation(line: 1069, column: 7, scope: !9998)
!10055 = !DILocalVariable(name: "large_request", scope: !9998, file: !3, line: 1070, type: !74)
!10056 = !DILocation(line: 1070, column: 6, scope: !9998)
!10057 = !DILocation(line: 1070, column: 23, scope: !9998)
!10058 = !DILocation(line: 1070, column: 30, scope: !9998)
!10059 = !DILocation(line: 1072, column: 2, scope: !9998)
!10060 = !DILocation(line: 1072, column: 9, scope: !9998)
!10061 = !DILocation(line: 1073, column: 7, scope: !10036)
!10062 = !DILocation(line: 1073, column: 21, scope: !10036)
!10063 = !DILocation(line: 1897, column: 9, scope: !10041, inlinedAt: !10042)
!10064 = !DILocation(line: 1073, column: 7, scope: !10015)
!10065 = !DILocation(line: 1074, column: 8, scope: !10034)
!10066 = !DILocation(line: 1074, column: 8, scope: !10035)
!10067 = !DILocation(line: 1075, column: 9, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10069, file: !3, line: 1075, column: 9)
!10069 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 1074, column: 33)
!10070 = !DILocation(line: 1075, column: 13, scope: !10068)
!10071 = !DILocation(line: 1075, column: 9, scope: !10069)
!10072 = !DILocation(line: 1076, column: 10, scope: !10068)
!10073 = !DILocation(line: 1076, column: 6, scope: !10068)
!10074 = !DILocation(line: 1077, column: 5, scope: !10069)
!10075 = !DILocation(line: 1079, column: 4, scope: !10035)
!10076 = !DILocation(line: 1080, column: 3, scope: !10035)
!10077 = !DILocation(line: 1082, column: 16, scope: !10015)
!10078 = !DILocation(line: 1082, column: 3, scope: !10015)
!10079 = !DILocalVariable(name: "__UNIQUE_ID___x315", scope: !10080, file: !3, line: 1083, type: !74)
!10080 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 1083, column: 7)
!10081 = !DILocation(line: 1083, column: 7, scope: !10080)
!10082 = !DILocalVariable(name: "__UNIQUE_ID___y316", scope: !10080, file: !3, line: 1083, type: !74)
!10083 = !DILocation(line: 1083, column: 7, scope: !10015)
!10084 = !DILocation(line: 1083, column: 5, scope: !10015)
!10085 = !DILocation(line: 1084, column: 20, scope: !10014)
!10086 = !DILocation(line: 1084, column: 25, scope: !10014)
!10087 = !DILocation(line: 1084, column: 30, scope: !10014)
!10088 = !DILocation(line: 199, column: 6, scope: !10008, inlinedAt: !10013)
!10089 = !DILocation(line: 141, column: 6, scope: !10090, inlinedAt: !10007)
!10090 = distinct !DILexicalBlock(scope: !10002, file: !10003, line: 141, column: 6)
!10091 = !DILocation(line: 0, scope: !10090, inlinedAt: !10007)
!10092 = !DILocation(line: 141, column: 6, scope: !10002, inlinedAt: !10007)
!10093 = !DILocation(line: 142, column: 29, scope: !10094, inlinedAt: !10007)
!10094 = distinct !DILexicalBlock(scope: !10095, file: !10003, line: 142, column: 7)
!10095 = distinct !DILexicalBlock(scope: !10090, file: !10003, line: 141, column: 39)
!10096 = !DILocation(line: 142, column: 8, scope: !10094, inlinedAt: !10007)
!10097 = !DILocation(line: 142, column: 7, scope: !10095, inlinedAt: !10007)
!10098 = !DILocation(line: 143, column: 18, scope: !10094, inlinedAt: !10007)
!10099 = !DILocation(line: 143, column: 22, scope: !10094, inlinedAt: !10007)
!10100 = !DILocation(line: 143, column: 4, scope: !10094, inlinedAt: !10007)
!10101 = !DILocation(line: 144, column: 12, scope: !10102, inlinedAt: !10007)
!10102 = distinct !DILexicalBlock(scope: !10094, file: !10003, line: 144, column: 12)
!10103 = !DILocation(line: 144, column: 12, scope: !10094, inlinedAt: !10007)
!10104 = !DILocation(line: 145, column: 4, scope: !10102, inlinedAt: !10007)
!10105 = !DILocation(line: 147, column: 4, scope: !10102, inlinedAt: !10007)
!10106 = !DILocation(line: 148, column: 3, scope: !10095, inlinedAt: !10007)
!10107 = !DILocation(line: 150, column: 6, scope: !10108, inlinedAt: !10007)
!10108 = distinct !DILexicalBlock(scope: !10023, file: !10003, line: 150, column: 6)
!10109 = !DILocation(line: 150, column: 6, scope: !10110, inlinedAt: !10007)
!10110 = distinct !DILexicalBlock(scope: !10111, file: !10003, line: 150, column: 6)
!10111 = distinct !DILexicalBlock(scope: !10108, file: !10003, line: 150, column: 6)
!10112 = !{i32 -2145515948, i32 -2145515919, i32 -2145515873, i32 -2145515815, i32 -2145515761, i32 -2145515707, i32 -2145515652, i32 -2145515621}
!10113 = !DILocation(line: 150, column: 6, scope: !10114, inlinedAt: !10007)
!10114 = distinct !DILexicalBlock(scope: !10111, file: !10003, line: 150, column: 6)
!10115 = !{i32 -2145515201, i32 -2145515194, i32 -2145515142, i32 -2145515111, i32 -2145515081}
!10116 = !DILocation(line: 150, column: 6, scope: !10111, inlinedAt: !10007)
!10117 = !DILocation(line: 150, column: 6, scope: !10024, inlinedAt: !10007)
!10118 = !DILocation(line: 150, column: 6, scope: !10002, inlinedAt: !10007)
!10119 = !DILocation(line: 151, column: 3, scope: !10024, inlinedAt: !10007)
!10120 = !DILocation(line: 152, column: 20, scope: !10002, inlinedAt: !10007)
!10121 = !DILocation(line: 152, column: 26, scope: !10002, inlinedAt: !10007)
!10122 = !DILocation(line: 152, column: 33, scope: !10002, inlinedAt: !10007)
!10123 = !DILocation(line: 152, column: 2, scope: !10002, inlinedAt: !10007)
!10124 = !DILocation(line: 153, column: 2, scope: !10002, inlinedAt: !10007)
!10125 = !DILocation(line: 154, column: 1, scope: !10002, inlinedAt: !10007)
!10126 = !DILocation(line: 199, column: 6, scope: !10010, inlinedAt: !10013)
!10127 = !DILocation(line: 200, column: 21, scope: !10008, inlinedAt: !10013)
!10128 = !DILocation(line: 200, column: 25, scope: !10008, inlinedAt: !10013)
!10129 = !DILocation(line: 200, column: 31, scope: !10008, inlinedAt: !10013)
!10130 = !DILocation(line: 200, column: 7, scope: !10008, inlinedAt: !10013)
!10131 = !DILocation(line: 200, column: 5, scope: !10008, inlinedAt: !10013)
!10132 = !DILocation(line: 200, column: 3, scope: !10008, inlinedAt: !10013)
!10133 = !DILocation(line: 201, column: 9, scope: !10010, inlinedAt: !10013)
!10134 = !DILocation(line: 1084, column: 7, scope: !10014)
!10135 = !DILocation(line: 1084, column: 7, scope: !10015)
!10136 = !DILocation(line: 1085, column: 8, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10014, file: !3, line: 1084, column: 34)
!10138 = !DILocation(line: 1086, column: 4, scope: !10137)
!10139 = !DILocation(line: 1089, column: 13, scope: !10015)
!10140 = !DILocation(line: 1089, column: 10, scope: !10015)
!10141 = !DILocation(line: 1090, column: 10, scope: !10015)
!10142 = !DILocation(line: 1090, column: 7, scope: !10015)
!10143 = !DILocation(line: 1091, column: 10, scope: !10015)
!10144 = !DILocation(line: 1091, column: 7, scope: !10015)
!10145 = distinct !{!10145, !10059, !10146}
!10146 = !DILocation(line: 1092, column: 2, scope: !9998)
!10147 = !DILocation(line: 1093, column: 25, scope: !9998)
!10148 = !DILocation(line: 1093, column: 30, scope: !9998)
!10149 = !DILocation(line: 1093, column: 2, scope: !9998)
!10150 = !DILocation(line: 1096, column: 19, scope: !9998)
!10151 = !DILocation(line: 1096, column: 2, scope: !9998)
!10152 = !DILocation(line: 1098, column: 9, scope: !9998)
!10153 = !DILocation(line: 1098, column: 2, scope: !9998)
!10154 = distinct !DISubprogram(name: "trace_urandom_read", scope: !5866, file: !5866, line: 288, type: !10155, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10155 = !DISubroutineType(types: !10156)
!10156 = !{null, !74, !74, !74}
!10157 = !DILocalVariable(name: "got_bits", arg: 1, scope: !10154, file: !5866, line: 288, type: !74)
!10158 = !DILocation(line: 288, column: 1, scope: !10154)
!10159 = !DILocalVariable(name: "pool_left", arg: 2, scope: !10154, file: !5866, line: 288, type: !74)
!10160 = !DILocalVariable(name: "input_left", arg: 3, scope: !10154, file: !5866, line: 288, type: !74)
!10161 = distinct !DISubprogram(name: "signal_pending", scope: !4401, file: !4401, line: 356, type: !10162, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10162 = !DISubroutineType(types: !10163)
!10163 = !{!74, !329}
!10164 = !DILocalVariable(name: "p", arg: 1, scope: !10161, file: !4401, line: 356, type: !329)
!10165 = !DILocation(line: 356, column: 54, scope: !10161)
!10166 = !DILocation(line: 358, column: 9, scope: !10161)
!10167 = !DILocation(line: 358, column: 2, scope: !10161)
!10168 = distinct !DISubprogram(name: "test_ti_thread_flag", scope: !10003, file: !10003, line: 82, type: !10169, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10169 = !DISubroutineType(types: !10170)
!10170 = !{!74, !5397, !74}
!10171 = !DILocalVariable(name: "ti", arg: 1, scope: !10168, file: !10003, line: 82, type: !5397)
!10172 = !DILocation(line: 82, column: 59, scope: !10168)
!10173 = !DILocalVariable(name: "flag", arg: 2, scope: !10168, file: !10003, line: 82, type: !74)
!10174 = !DILocation(line: 82, column: 67, scope: !10168)
!10175 = !DILocation(line: 84, column: 18, scope: !10168)
!10176 = !DILocation(line: 84, column: 42, scope: !10168)
!10177 = !DILocation(line: 84, column: 46, scope: !10168)
!10178 = !DILocation(line: 84, column: 9, scope: !10168)
!10179 = !DILocation(line: 84, column: 2, scope: !10168)
!10180 = distinct !DISubprogram(name: "test_tsk_thread_flag", scope: !331, file: !331, line: 1828, type: !10181, scopeLine: 1829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10181 = !DISubroutineType(types: !10182)
!10182 = !{!74, !329, !74}
!10183 = !DILocalVariable(name: "tsk", arg: 1, scope: !10180, file: !331, line: 1828, type: !329)
!10184 = !DILocation(line: 1828, column: 60, scope: !10180)
!10185 = !DILocalVariable(name: "flag", arg: 2, scope: !10180, file: !331, line: 1828, type: !74)
!10186 = !DILocation(line: 1828, column: 69, scope: !10180)
!10187 = !DILocation(line: 1830, column: 46, scope: !10180)
!10188 = !DILocation(line: 1830, column: 29, scope: !10180)
!10189 = !DILocation(line: 1830, column: 52, scope: !10180)
!10190 = !DILocation(line: 1830, column: 9, scope: !10180)
!10191 = !DILocation(line: 1830, column: 2, scope: !10180)
!10192 = distinct !DISubprogram(name: "task_thread_info", scope: !331, file: !331, line: 1729, type: !10193, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10193 = !DISubroutineType(types: !10194)
!10194 = !{!5397, !329}
!10195 = !DILocalVariable(name: "task", arg: 1, scope: !10192, file: !331, line: 1729, type: !329)
!10196 = !DILocation(line: 1729, column: 72, scope: !10192)
!10197 = !DILocation(line: 1731, column: 10, scope: !10192)
!10198 = !DILocation(line: 1731, column: 16, scope: !10192)
!10199 = !DILocation(line: 1731, column: 2, scope: !10192)
!10200 = distinct !DISubprogram(name: "copy_overflow", scope: !10003, file: !10003, line: 132, type: !5867, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10201 = !DILocalVariable(name: "size", arg: 1, scope: !10200, file: !10003, line: 132, type: !74)
!10202 = !DILocation(line: 132, column: 38, scope: !10200)
!10203 = !DILocalVariable(name: "count", arg: 2, scope: !10200, file: !10003, line: 132, type: !168)
!10204 = !DILocation(line: 132, column: 58, scope: !10200)
!10205 = !DILocalVariable(name: "__ret_warn_on", scope: !10206, file: !10003, line: 134, type: !74)
!10206 = distinct !DILexicalBlock(scope: !10200, file: !10003, line: 134, column: 2)
!10207 = !DILocation(line: 134, column: 2, scope: !10206)
!10208 = !DILocation(line: 134, column: 2, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10206, file: !10003, line: 134, column: 2)
!10210 = !DILocation(line: 134, column: 2, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10209, file: !10003, line: 134, column: 2)
!10212 = !DILocation(line: 134, column: 2, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10211, file: !10003, line: 134, column: 2)
!10214 = !DILocation(line: 134, column: 2, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10211, file: !10003, line: 134, column: 2)
!10216 = !DILocation(line: 134, column: 2, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10215, file: !10003, line: 134, column: 2)
!10218 = !DILocation(line: 134, column: 2, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10215, file: !10003, line: 134, column: 2)
!10220 = !{i32 -2145517772, i32 -2145517743, i32 -2145517697, i32 -2145517639, i32 -2145517585, i32 -2145517531, i32 -2145517476, i32 -2145517445}
!10221 = !DILocation(line: 134, column: 2, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10215, file: !10003, line: 134, column: 2)
!10223 = !{i32 -2145517025, i32 -2145517018, i32 -2145516966, i32 -2145516935, i32 -2145516905}
!10224 = !DILocation(line: 134, column: 2, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !10215, file: !10003, line: 134, column: 2)
!10226 = !DILocation(line: 134, column: 2, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10211, file: !10003, line: 134, column: 2)
!10228 = !DILocation(line: 135, column: 1, scope: !10200)
!10229 = distinct !DISubprogram(name: "check_object_size", scope: !10003, file: !10003, line: 122, type: !10230, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10230 = !DISubroutineType(types: !10231)
!10231 = !{null, !2095, !168, !754}
!10232 = !DILocalVariable(name: "ptr", arg: 1, scope: !10229, file: !10003, line: 122, type: !2095)
!10233 = !DILocation(line: 122, column: 50, scope: !10229)
!10234 = !DILocalVariable(name: "n", arg: 2, scope: !10229, file: !10003, line: 122, type: !168)
!10235 = !DILocation(line: 122, column: 69, scope: !10229)
!10236 = !DILocalVariable(name: "to_user", arg: 3, scope: !10229, file: !10003, line: 123, type: !754)
!10237 = !DILocation(line: 123, column: 15, scope: !10229)
!10238 = !DILocation(line: 124, column: 3, scope: !10229)
!10239 = distinct !DISubprogram(name: "write_pool", scope: !3, file: !3, line: 1886, type: !10240, scopeLine: 1887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10240 = !DISubroutineType(types: !10241)
!10241 = !{!74, !5886, !281, !288}
!10242 = !DILocation(line: 138, column: 29, scope: !10002, inlinedAt: !10243)
!10243 = distinct !DILocation(line: 191, column: 6, scope: !10244, inlinedAt: !10246)
!10244 = distinct !DILexicalBlock(scope: !10245, file: !10009, line: 191, column: 6)
!10245 = distinct !DISubprogram(name: "copy_from_user", scope: !10009, file: !10009, line: 189, type: !10011, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10246 = distinct !DILocation(line: 1896, column: 7, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 1896, column: 7)
!10248 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 1892, column: 20)
!10249 = !DILocation(line: 138, column: 42, scope: !10002, inlinedAt: !10243)
!10250 = !DILocation(line: 138, column: 54, scope: !10002, inlinedAt: !10243)
!10251 = !DILocation(line: 140, column: 6, scope: !10002, inlinedAt: !10243)
!10252 = !DILocation(line: 150, column: 6, scope: !10023, inlinedAt: !10243)
!10253 = !DILocalVariable(name: "to", arg: 1, scope: !10245, file: !10009, line: 189, type: !183)
!10254 = !DILocation(line: 189, column: 22, scope: !10245, inlinedAt: !10246)
!10255 = !DILocalVariable(name: "from", arg: 2, scope: !10245, file: !10009, line: 189, type: !2095)
!10256 = !DILocation(line: 189, column: 45, scope: !10245, inlinedAt: !10246)
!10257 = !DILocalVariable(name: "n", arg: 3, scope: !10245, file: !10009, line: 189, type: !168)
!10258 = !DILocation(line: 189, column: 65, scope: !10245, inlinedAt: !10246)
!10259 = !DILocalVariable(name: "r", arg: 1, scope: !10239, file: !3, line: 1886, type: !5886)
!10260 = !DILocation(line: 1886, column: 34, scope: !10239)
!10261 = !DILocalVariable(name: "buffer", arg: 2, scope: !10239, file: !3, line: 1886, type: !281)
!10262 = !DILocation(line: 1886, column: 56, scope: !10239)
!10263 = !DILocalVariable(name: "count", arg: 3, scope: !10239, file: !3, line: 1886, type: !288)
!10264 = !DILocation(line: 1886, column: 71, scope: !10239)
!10265 = !DILocalVariable(name: "bytes", scope: !10239, file: !3, line: 1888, type: !288)
!10266 = !DILocation(line: 1888, column: 9, scope: !10239)
!10267 = !DILocalVariable(name: "t", scope: !10239, file: !3, line: 1889, type: !174)
!10268 = !DILocation(line: 1889, column: 8, scope: !10239)
!10269 = !DILocalVariable(name: "buf", scope: !10239, file: !3, line: 1889, type: !5583)
!10270 = !DILocation(line: 1889, column: 11, scope: !10239)
!10271 = !DILocalVariable(name: "p", scope: !10239, file: !3, line: 1890, type: !281)
!10272 = !DILocation(line: 1890, column: 21, scope: !10239)
!10273 = !DILocation(line: 1890, column: 25, scope: !10239)
!10274 = !DILocation(line: 1892, column: 2, scope: !10239)
!10275 = !DILocation(line: 1892, column: 9, scope: !10239)
!10276 = !DILocation(line: 1892, column: 15, scope: !10239)
!10277 = !DILocalVariable(name: "b", scope: !10248, file: !3, line: 1893, type: !74)
!10278 = !DILocation(line: 1893, column: 7, scope: !10248)
!10279 = !DILocalVariable(name: "i", scope: !10248, file: !3, line: 1893, type: !74)
!10280 = !DILocation(line: 1893, column: 10, scope: !10248)
!10281 = !DILocalVariable(name: "__UNIQUE_ID___x340", scope: !10282, file: !3, line: 1895, type: !288)
!10282 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 1895, column: 11)
!10283 = !DILocation(line: 1895, column: 11, scope: !10282)
!10284 = !DILocalVariable(name: "__UNIQUE_ID___y341", scope: !10282, file: !3, line: 1895, type: !168)
!10285 = !DILocation(line: 1895, column: 9, scope: !10248)
!10286 = !DILocation(line: 1896, column: 22, scope: !10247)
!10287 = !DILocation(line: 1896, column: 28, scope: !10247)
!10288 = !DILocation(line: 1896, column: 31, scope: !10247)
!10289 = !DILocation(line: 191, column: 6, scope: !10244, inlinedAt: !10246)
!10290 = !DILocation(line: 141, column: 6, scope: !10090, inlinedAt: !10243)
!10291 = !DILocation(line: 0, scope: !10090, inlinedAt: !10243)
!10292 = !DILocation(line: 141, column: 6, scope: !10002, inlinedAt: !10243)
!10293 = !DILocation(line: 142, column: 29, scope: !10094, inlinedAt: !10243)
!10294 = !DILocation(line: 142, column: 8, scope: !10094, inlinedAt: !10243)
!10295 = !DILocation(line: 142, column: 7, scope: !10095, inlinedAt: !10243)
!10296 = !DILocation(line: 143, column: 18, scope: !10094, inlinedAt: !10243)
!10297 = !DILocation(line: 143, column: 22, scope: !10094, inlinedAt: !10243)
!10298 = !DILocation(line: 143, column: 4, scope: !10094, inlinedAt: !10243)
!10299 = !DILocation(line: 144, column: 12, scope: !10102, inlinedAt: !10243)
!10300 = !DILocation(line: 144, column: 12, scope: !10094, inlinedAt: !10243)
!10301 = !DILocation(line: 145, column: 4, scope: !10102, inlinedAt: !10243)
!10302 = !DILocation(line: 147, column: 4, scope: !10102, inlinedAt: !10243)
!10303 = !DILocation(line: 148, column: 3, scope: !10095, inlinedAt: !10243)
!10304 = !DILocation(line: 150, column: 6, scope: !10108, inlinedAt: !10243)
!10305 = !DILocation(line: 150, column: 6, scope: !10110, inlinedAt: !10243)
!10306 = !DILocation(line: 150, column: 6, scope: !10114, inlinedAt: !10243)
!10307 = !DILocation(line: 150, column: 6, scope: !10111, inlinedAt: !10243)
!10308 = !DILocation(line: 150, column: 6, scope: !10024, inlinedAt: !10243)
!10309 = !DILocation(line: 150, column: 6, scope: !10002, inlinedAt: !10243)
!10310 = !DILocation(line: 151, column: 3, scope: !10024, inlinedAt: !10243)
!10311 = !DILocation(line: 152, column: 20, scope: !10002, inlinedAt: !10243)
!10312 = !DILocation(line: 152, column: 26, scope: !10002, inlinedAt: !10243)
!10313 = !DILocation(line: 152, column: 33, scope: !10002, inlinedAt: !10243)
!10314 = !DILocation(line: 152, column: 2, scope: !10002, inlinedAt: !10243)
!10315 = !DILocation(line: 153, column: 2, scope: !10002, inlinedAt: !10243)
!10316 = !DILocation(line: 154, column: 1, scope: !10002, inlinedAt: !10243)
!10317 = !DILocation(line: 191, column: 6, scope: !10245, inlinedAt: !10246)
!10318 = !DILocation(line: 192, column: 23, scope: !10244, inlinedAt: !10246)
!10319 = !DILocation(line: 192, column: 27, scope: !10244, inlinedAt: !10246)
!10320 = !DILocation(line: 192, column: 33, scope: !10244, inlinedAt: !10246)
!10321 = !DILocation(line: 192, column: 7, scope: !10244, inlinedAt: !10246)
!10322 = !DILocation(line: 192, column: 5, scope: !10244, inlinedAt: !10246)
!10323 = !DILocation(line: 192, column: 3, scope: !10244, inlinedAt: !10246)
!10324 = !DILocation(line: 193, column: 9, scope: !10245, inlinedAt: !10246)
!10325 = !DILocation(line: 1896, column: 7, scope: !10247)
!10326 = !DILocation(line: 1896, column: 7, scope: !10248)
!10327 = !DILocation(line: 1897, column: 4, scope: !10247)
!10328 = !DILocation(line: 1899, column: 12, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 1899, column: 3)
!10330 = !DILocation(line: 1899, column: 10, scope: !10329)
!10331 = !DILocation(line: 1899, column: 8, scope: !10329)
!10332 = !DILocation(line: 1899, column: 20, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10329, file: !3, line: 1899, column: 3)
!10334 = !DILocation(line: 1899, column: 22, scope: !10333)
!10335 = !DILocation(line: 1899, column: 3, scope: !10329)
!10336 = !DILocation(line: 1900, column: 9, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 1900, column: 8)
!10338 = distinct !DILexicalBlock(scope: !10333, file: !3, line: 1899, column: 53)
!10339 = !DILocation(line: 1900, column: 8, scope: !10338)
!10340 = !DILocation(line: 1901, column: 5, scope: !10337)
!10341 = !DILocation(line: 1902, column: 14, scope: !10338)
!10342 = !DILocation(line: 1902, column: 8, scope: !10338)
!10343 = !DILocation(line: 1902, column: 4, scope: !10338)
!10344 = !DILocation(line: 1902, column: 11, scope: !10338)
!10345 = !DILocation(line: 1903, column: 3, scope: !10338)
!10346 = !DILocation(line: 1899, column: 30, scope: !10333)
!10347 = !DILocation(line: 1899, column: 49, scope: !10333)
!10348 = !DILocation(line: 1899, column: 3, scope: !10333)
!10349 = distinct !{!10349, !10335, !10350}
!10350 = !DILocation(line: 1903, column: 3, scope: !10329)
!10351 = !DILocation(line: 1905, column: 12, scope: !10248)
!10352 = !DILocation(line: 1905, column: 9, scope: !10248)
!10353 = !DILocation(line: 1906, column: 8, scope: !10248)
!10354 = !DILocation(line: 1906, column: 5, scope: !10248)
!10355 = !DILocation(line: 1908, column: 18, scope: !10248)
!10356 = !DILocation(line: 1908, column: 21, scope: !10248)
!10357 = !DILocation(line: 1908, column: 26, scope: !10248)
!10358 = !DILocation(line: 1908, column: 3, scope: !10248)
!10359 = !DILocation(line: 1909, column: 3, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 1909, column: 3)
!10361 = distinct !{!10361, !10274, !10362}
!10362 = !DILocation(line: 1910, column: 2, scope: !10239)
!10363 = !DILocation(line: 1912, column: 2, scope: !10239)
!10364 = !DILocation(line: 1913, column: 1, scope: !10239)
!10365 = distinct !DISubprogram(name: "arch_get_random_int", scope: !6654, file: !6654, line: 78, type: !10366, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10366 = !DISubroutineType(types: !10367)
!10367 = !{!754, !3515}
!10368 = !DILocation(line: 173, column: 49, scope: !6658, inlinedAt: !10369)
!10369 = distinct !DILocation(line: 80, column: 9, scope: !10365)
!10370 = !DILocalVariable(name: "v", arg: 1, scope: !10365, file: !6654, line: 78, type: !3515)
!10371 = !DILocation(line: 78, column: 67, scope: !10365)
!10372 = !DILocation(line: 80, column: 9, scope: !10365)
!10373 = !DILocation(line: 175, column: 2, scope: !6658, inlinedAt: !10369)
!10374 = !DILocation(line: 211, column: 1, scope: !6658, inlinedAt: !10369)
!10375 = !DILocation(line: 212, column: 2, scope: !6658, inlinedAt: !10369)
!10376 = !DILocation(line: 213, column: 1, scope: !6658, inlinedAt: !10369)
!10377 = !DILocation(line: 214, column: 2, scope: !6658, inlinedAt: !10369)
!10378 = !DILocation(line: 215, column: 1, scope: !6658, inlinedAt: !10369)
!10379 = !DILocation(line: 80, column: 57, scope: !10365)
!10380 = !DILocation(line: 80, column: 46, scope: !10365)
!10381 = !DILocation(line: 80, column: 2, scope: !10365)
!10382 = distinct !DISubprogram(name: "___might_sleep", scope: !151, file: !151, line: 248, type: !10383, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10383 = !DISubroutineType(types: !10384)
!10384 = !{null, !281, !74, !74}
!10385 = !DILocalVariable(name: "file", arg: 1, scope: !10382, file: !151, line: 248, type: !281)
!10386 = !DILocation(line: 248, column: 49, scope: !10382)
!10387 = !DILocalVariable(name: "line", arg: 2, scope: !10382, file: !151, line: 248, type: !74)
!10388 = !DILocation(line: 248, column: 59, scope: !10382)
!10389 = !DILocalVariable(name: "preempt_offset", arg: 3, scope: !10382, file: !151, line: 249, type: !74)
!10390 = !DILocation(line: 249, column: 12, scope: !10382)
!10391 = !DILocation(line: 249, column: 30, scope: !10382)
!10392 = distinct !DISubprogram(name: "rdrand_int", scope: !6654, file: !6654, line: 34, type: !10366, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10393 = !DILocalVariable(name: "v", arg: 1, scope: !10392, file: !6654, line: 34, type: !3515)
!10394 = !DILocation(line: 34, column: 58, scope: !10392)
!10395 = !DILocalVariable(name: "ok", scope: !10392, file: !6654, line: 36, type: !754)
!10396 = !DILocation(line: 36, column: 7, scope: !10392)
!10397 = !DILocalVariable(name: "retry", scope: !10392, file: !6654, line: 37, type: !7)
!10398 = !DILocation(line: 37, column: 15, scope: !10392)
!10399 = !DILocation(line: 38, column: 2, scope: !10392)
!10400 = !DILocation(line: 41, column: 40, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10392, file: !6654, line: 38, column: 5)
!10402 = !DILocation(line: 39, column: 3, scope: !10401)
!10403 = !{i32 3841049, i32 -2143640623}
!10404 = !DILocation(line: 42, column: 7, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10401, file: !6654, line: 42, column: 7)
!10406 = !DILocation(line: 42, column: 7, scope: !10401)
!10407 = !DILocation(line: 43, column: 4, scope: !10405)
!10408 = !DILocation(line: 44, column: 2, scope: !10401)
!10409 = !DILocation(line: 44, column: 11, scope: !10392)
!10410 = distinct !{!10410, !10399, !10411}
!10411 = !DILocation(line: 44, column: 18, scope: !10392)
!10412 = !DILocation(line: 45, column: 2, scope: !10392)
!10413 = !DILocation(line: 46, column: 1, scope: !10392)
!10414 = distinct !DISubprogram(name: "poll_wait", scope: !1056, file: !1056, line: 48, type: !10415, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10415 = !DISubroutineType(types: !10416)
!10416 = !{null, !971, !1063, !7786}
!10417 = !DILocalVariable(name: "filp", arg: 1, scope: !10414, file: !1056, line: 48, type: !971)
!10418 = !DILocation(line: 48, column: 44, scope: !10414)
!10419 = !DILocalVariable(name: "wait_address", arg: 2, scope: !10414, file: !1056, line: 48, type: !1063)
!10420 = !DILocation(line: 48, column: 70, scope: !10414)
!10421 = !DILocalVariable(name: "p", arg: 3, scope: !10414, file: !1056, line: 48, type: !7786)
!10422 = !DILocation(line: 48, column: 96, scope: !10414)
!10423 = !DILocation(line: 50, column: 6, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10414, file: !1056, line: 50, column: 6)
!10425 = !DILocation(line: 50, column: 8, scope: !10424)
!10426 = !DILocation(line: 50, column: 11, scope: !10424)
!10427 = !DILocation(line: 50, column: 14, scope: !10424)
!10428 = !DILocation(line: 50, column: 21, scope: !10424)
!10429 = !DILocation(line: 50, column: 24, scope: !10424)
!10430 = !DILocation(line: 50, column: 6, scope: !10414)
!10431 = !DILocation(line: 51, column: 3, scope: !10424)
!10432 = !DILocation(line: 51, column: 6, scope: !10424)
!10433 = !DILocation(line: 51, column: 13, scope: !10424)
!10434 = !DILocation(line: 51, column: 19, scope: !10424)
!10435 = !DILocation(line: 51, column: 33, scope: !10424)
!10436 = !DILocation(line: 52, column: 1, scope: !10414)
!10437 = distinct !DISubprogram(name: "might_fault", scope: !151, file: !151, line: 315, type: !4525, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10438 = !DILocation(line: 315, column: 40, scope: !10437)
!10439 = distinct !DISubprogram(name: "credit_entropy_bits_safe", scope: !3, file: !3, line: 740, type: !10440, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10440 = !DISubroutineType(types: !10441)
!10441 = !{!74, !5886, !74}
!10442 = !DILocalVariable(name: "r", arg: 1, scope: !10439, file: !3, line: 740, type: !5886)
!10443 = !DILocation(line: 740, column: 59, scope: !10439)
!10444 = !DILocalVariable(name: "nbits", arg: 2, scope: !10439, file: !3, line: 740, type: !74)
!10445 = !DILocation(line: 740, column: 66, scope: !10439)
!10446 = !DILocalVariable(name: "nbits_max", scope: !10439, file: !3, line: 742, type: !6707)
!10447 = !DILocation(line: 742, column: 12, scope: !10439)
!10448 = !DILocation(line: 742, column: 24, scope: !10439)
!10449 = !DILocation(line: 742, column: 27, scope: !10439)
!10450 = !DILocation(line: 742, column: 37, scope: !10439)
!10451 = !DILocation(line: 742, column: 47, scope: !10439)
!10452 = !DILocation(line: 744, column: 6, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 744, column: 6)
!10454 = !DILocation(line: 744, column: 12, scope: !10453)
!10455 = !DILocation(line: 744, column: 6, scope: !10439)
!10456 = !DILocation(line: 745, column: 3, scope: !10453)
!10457 = !DILocalVariable(name: "__UNIQUE_ID___x313", scope: !10458, file: !3, line: 748, type: !74)
!10458 = distinct !DILexicalBlock(scope: !10439, file: !3, line: 748, column: 10)
!10459 = !DILocation(line: 748, column: 10, scope: !10458)
!10460 = !DILocalVariable(name: "__UNIQUE_ID___y314", scope: !10458, file: !3, line: 748, type: !6707)
!10461 = !DILocation(line: 748, column: 8, scope: !10439)
!10462 = !DILocation(line: 750, column: 22, scope: !10439)
!10463 = !DILocation(line: 750, column: 25, scope: !10439)
!10464 = !DILocation(line: 750, column: 2, scope: !10439)
!10465 = !DILocation(line: 751, column: 2, scope: !10439)
!10466 = !DILocation(line: 752, column: 1, scope: !10439)
!10467 = distinct !DISubprogram(name: "__do_sys_getrandom", scope: !3, file: !3, line: 2007, type: !10468, scopeLine: 2009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10468 = !DISubroutineType(types: !10469)
!10469 = !{!186, !184, !288, !7}
!10470 = !DILocalVariable(name: "buf", arg: 1, scope: !10467, file: !3, line: 2007, type: !184)
!10471 = !DILocation(line: 2007, column: 1, scope: !10467)
!10472 = !DILocalVariable(name: "count", arg: 2, scope: !10467, file: !3, line: 2007, type: !288)
!10473 = !DILocalVariable(name: "flags", arg: 3, scope: !10467, file: !3, line: 2007, type: !7)
!10474 = !DILocalVariable(name: "ret", scope: !10467, file: !3, line: 2010, type: !74)
!10475 = !DILocation(line: 2010, column: 6, scope: !10467)
!10476 = !DILocation(line: 2012, column: 6, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 2012, column: 6)
!10478 = !DILocation(line: 2012, column: 12, scope: !10477)
!10479 = !DILocation(line: 2012, column: 6, scope: !10467)
!10480 = !DILocation(line: 2013, column: 3, scope: !10477)
!10481 = !DILocation(line: 2019, column: 7, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 2019, column: 6)
!10483 = !DILocation(line: 2019, column: 13, scope: !10482)
!10484 = !DILocation(line: 2019, column: 44, scope: !10482)
!10485 = !DILocation(line: 2019, column: 6, scope: !10467)
!10486 = !DILocation(line: 2020, column: 3, scope: !10482)
!10487 = !DILocation(line: 2022, column: 6, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 2022, column: 6)
!10489 = !DILocation(line: 2022, column: 12, scope: !10488)
!10490 = !DILocation(line: 2022, column: 6, scope: !10467)
!10491 = !DILocation(line: 2023, column: 9, scope: !10488)
!10492 = !DILocation(line: 2023, column: 3, scope: !10488)
!10493 = !DILocation(line: 2025, column: 8, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 2025, column: 6)
!10495 = !DILocation(line: 2025, column: 14, scope: !10494)
!10496 = !DILocation(line: 2025, column: 31, scope: !10494)
!10497 = !DILocation(line: 2025, column: 35, scope: !10494)
!10498 = !DILocation(line: 2025, column: 6, scope: !10467)
!10499 = !DILocation(line: 2026, column: 7, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10501, file: !3, line: 2026, column: 7)
!10501 = distinct !DILexicalBlock(scope: !10494, file: !3, line: 2025, column: 49)
!10502 = !DILocation(line: 2026, column: 13, scope: !10500)
!10503 = !DILocation(line: 2026, column: 7, scope: !10501)
!10504 = !DILocation(line: 2027, column: 4, scope: !10500)
!10505 = !DILocation(line: 2028, column: 9, scope: !10501)
!10506 = !DILocation(line: 2028, column: 7, scope: !10501)
!10507 = !DILocation(line: 2029, column: 7, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10501, file: !3, line: 2029, column: 7)
!10509 = !DILocation(line: 2029, column: 7, scope: !10501)
!10510 = !DILocation(line: 2030, column: 11, scope: !10508)
!10511 = !DILocation(line: 2030, column: 4, scope: !10508)
!10512 = !DILocation(line: 2031, column: 2, scope: !10501)
!10513 = !DILocation(line: 2032, column: 35, scope: !10467)
!10514 = !DILocation(line: 2032, column: 40, scope: !10467)
!10515 = !DILocation(line: 2032, column: 9, scope: !10467)
!10516 = !DILocation(line: 2032, column: 2, scope: !10467)
!10517 = !DILocation(line: 2033, column: 1, scope: !10467)
!10518 = distinct !DISubprogram(name: "trace_mix_pool_bytes", scope: !5866, file: !5866, line: 51, type: !8636, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !224)
!10519 = !DILocalVariable(name: "pool_name", arg: 1, scope: !10518, file: !5866, line: 51, type: !281)
!10520 = !DILocation(line: 51, column: 1, scope: !10518)
!10521 = !DILocalVariable(name: "bytes", arg: 2, scope: !10518, file: !5866, line: 51, type: !74)
!10522 = !DILocalVariable(name: "IP", arg: 3, scope: !10518, file: !5866, line: 51, type: !168)
