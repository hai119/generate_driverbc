; ModuleID = '../bcout/drivers/net/xen-netfront.llvm.bc'
source_filename = "drivers/net/xen-netfront.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_netif_init6:\09\09\09"
module asm ".long\09netif_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.xenbus_driver = type { i8*, %struct.xenbus_device_id*, i8, i32 (%struct.xenbus_device*, %struct.xenbus_device_id*)*, void (%struct.xenbus_device*, i32)*, i32 (%struct.xenbus_device*)*, i32 (%struct.xenbus_device*)*, i32 (%struct.xenbus_device*)*, i32 (%struct.xenbus_device*, %struct.kobj_uevent_env*)*, %struct.device_driver, i32 (%struct.xenbus_device*)*, i32 (%struct.xenbus_device*)*, void (%struct.xenbus_device*)* }
%struct.xenbus_device_id = type { [32 x i8] }
%struct.xenbus_device = type { i8*, i8*, i8*, i32, %struct.xenbus_watch, %struct.device, i32, %struct.completion, %struct.work_struct, %struct.semaphore }
%struct.xenbus_watch = type { %struct.list_head, i8*, void (%struct.xenbus_watch*, i8*, i8*)* }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type { %struct.sock_common, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff*, %struct.sk_buff_head, %struct.anon.66, i32, i32, i32, i32, %struct.sk_filter*, %union.anon.95, %struct.dst_entry*, %struct.dst_entry*, %struct.atomic_t, i32, i32, %struct.refcount_struct, i64, %union.anon.98, %struct.sk_buff*, %struct.sk_buff_head, i32, i32, i32, i32, i64, %struct.timer_list, i32, i32, i64, i64, %struct.page_frag, i64, i64, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i64, %struct.proto*, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, %struct.pid*, %struct.cred*, i64, i64, i16, i8, i32, %struct.atomic_t, i8, i8, %struct.socket*, i8*, %struct.sock_cgroup_data, %struct.mem_cgroup*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, %struct.sock_reuseport*, %struct.callback_head }
%struct.sock_common = type { %union.anon.39, %union.anon.41, %union.anon.42, i16, i8, i8, i32, %union.anon.44, %struct.proto*, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.62, [0 x i32], %union.anon.63, i16, %union.anon.64, %struct.refcount_struct, [0 x i32], %union.anon.65 }
%union.anon.39 = type { i64 }
%union.anon.41 = type { i32 }
%union.anon.42 = type { i32 }
%union.anon.44 = type { %struct.hlist_node }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.possible_net_t = type { %struct.net* }
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.34 }
%union.anon.34 = type { %struct.anon.35, [48 x i8] }
%struct.anon.35 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kgid_t = type { i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.26, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.27, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.28, %union.anon.32, %struct.key_restriction* }
%union.anon.26 = type { %struct.rb_node }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.key_user = type opaque
%union.anon.27 = type { i64 }
%union.anon.28 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.29, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.29 = type { i64 }
%struct.key_type = type opaque
%union.anon.32 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.ctl_table_header = type { %union.anon.36, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.36 = type { %struct.anon.37 }
%struct.anon.37 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.rb_root = type { %struct.rb_node* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.151, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.167, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.151 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.ifreq = type { %union.anon.152, %union.anon.153 }
%union.anon.152 = type { [16 x i8] }
%union.anon.153 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type { %struct.possible_net_t, %struct.net_device*, %struct.list_head, i32 (%struct.neighbour*)*, %struct.neigh_table*, i8*, i32, %struct.refcount_struct, %struct.callback_head, i32, [13 x i32], [1 x i64] }
%struct.neighbour = type { %struct.neighbour*, %struct.neigh_table*, %struct.neigh_parms*, i64, i64, %struct.rwlock_t, %struct.refcount_struct, i32, %struct.sk_buff_head, %struct.timer_list, i64, %struct.atomic_t, i8, i8, i8, i8, i8, %struct.seqlock_t, [32 x i8], %struct.hh_cache, i32 (%struct.neighbour*, %struct.sk_buff*)*, %struct.neigh_ops*, %struct.list_head, %struct.callback_head, %struct.net_device*, [0 x i8] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.neigh_ops = type { i32, void (%struct.neighbour*, %struct.sk_buff*)*, void (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)* }
%struct.neigh_table = type { i32, i32, i32, i16, i32 (i8*, %struct.net_device*, i32*)*, i1 (%struct.neighbour*, i8*)*, i32 (%struct.neighbour*)*, i32 (%struct.pneigh_entry*)*, void (%struct.pneigh_entry*)*, void (%struct.sk_buff*)*, i32 (i8*)*, i1 (%struct.net_device*, %struct.netlink_ext_ack*)*, i8*, %struct.neigh_parms, %struct.list_head, i32, i32, i32, i32, i64, %struct.delayed_work, %struct.timer_list, %struct.sk_buff_head, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.rwlock_t, i64, %struct.neigh_statistics*, %struct.neigh_hash_table*, %struct.pneigh_entry** }
%struct.pneigh_entry = type { %struct.pneigh_entry*, %struct.possible_net_t, %struct.net_device*, i8, i8, [0 x i8] }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nlattr = type { i16, i16 }
%struct.nla_policy = type { i8, i8, i16, %union.anon.96 }
%union.anon.96 = type { i8* }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.workqueue_struct = type opaque
%struct.neigh_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.neigh_hash_table = type { %struct.neighbour**, i32, [4 x i32], %struct.callback_head }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.155 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.155 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.156 }
%union.anon.156 = type { %struct.anon.157 }
%struct.anon.157 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.160 }
%union.anon.160 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.161, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.161 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.162 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.162 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type { i32 (i8)*, i32 (%struct.net_device*, %struct.nd_opt_hdr*, %struct.ndisc_options*)*, void (%struct.net_device*, %struct.neighbour*, i32, i8, %struct.ndisc_options*)*, i32 (%struct.net_device*, i8, %struct.neighbour*, i8*, i8**)*, void (%struct.net_device*, %struct.sk_buff*, i8, i8*)*, void (%struct.net*, %struct.net_device*, %struct.prefix_info*, %struct.inet6_dev*, %struct.in6_addr*, i32, i32, i1, i1, i32, i32, i1)* }
%struct.nd_opt_hdr = type { i8, i8 }
%struct.ndisc_options = type { [15 x %struct.nd_opt_hdr*], %struct.nd_opt_hdr*, %struct.nd_opt_hdr* }
%struct.prefix_info = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type { %struct.net_device*, %struct.list_head, %struct.ifmcaddr6*, %struct.ifmcaddr6*, %struct.spinlock, i8, i8, i8, i8, i64, i64, i64, i64, %struct.timer_list, %struct.timer_list, %struct.timer_list, %struct.ifacaddr6*, %struct.rwlock_t, %struct.refcount_struct, i32, i32, i32, %struct.list_head, %struct.in6_addr, %struct.neigh_parms*, %struct.ipv6_devconf, %struct.ipv6_devstat, %struct.timer_list, i32, i8, i64, %struct.callback_head }
%struct.ifmcaddr6 = type { %struct.in6_addr, %struct.inet6_dev*, %struct.ifmcaddr6*, %struct.ip6_sf_list*, %struct.ip6_sf_list*, i32, i8, [2 x i64], %struct.timer_list, i32, i32, %struct.refcount_struct, %struct.spinlock, i64, i64 }
%struct.ip6_sf_list = type { %struct.ip6_sf_list*, %struct.in6_addr, [2 x i64], i8, i8, i8 }
%struct.ifacaddr6 = type { %struct.in6_addr, %struct.fib6_info*, %struct.ifacaddr6*, %struct.hlist_node, i32, %struct.refcount_struct, i64, i64, %struct.callback_head }
%struct.fib6_info = type opaque
%struct.ipv6_devconf = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ipv6_stable_secret, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ctl_table_header* }
%struct.ipv6_stable_secret = type { i8, %struct.in6_addr }
%struct.ipv6_devstat = type { %struct.proc_dir_entry*, %struct.ipstats_mib*, %struct.icmpv6_mib_device*, %struct.icmpv6msg_mib_device* }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib_device = type { [6 x %struct.atomic64_t] }
%struct.icmpv6msg_mib_device = type { [512 x %struct.atomic64_t] }
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], %struct.bpf_prog_aux*, %struct.sock_fprog_kern*, i32 (i8*, %struct.bpf_insn*)*, [0 x %struct.sock_filter], [0 x %struct.bpf_insn] }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.bpf_ctx_arg_aux*, %struct.mutex, %struct.bpf_prog*, %struct.bpf_trampoline*, i32, i32, i8, i8, i8, i8, i8, i8, i32, %struct.hlist_node, %struct.btf_type*, i8*, %struct.bpf_prog**, i8*, %struct.bpf_jit_poke_descriptor*, i32, %struct.bpf_ksym, %struct.bpf_prog_ops*, %struct.bpf_map**, %struct.mutex, %struct.bpf_prog*, %struct.user_struct*, i64, [2 x %struct.bpf_map*], [16 x i8], %struct.bpf_prog_offload*, %struct.btf*, %struct.bpf_func_info*, %struct.bpf_func_info_aux*, %struct.bpf_line_info*, i8**, i32, i32, i32, i32, %struct.exception_table_entry*, %struct.bpf_prog_stats*, %union.anon.94 }
%struct.bpf_ctx_arg_aux = type { i32, i32, i32 }
%struct.bpf_trampoline = type { %struct.hlist_node, %struct.mutex, %struct.refcount_struct, i64, %struct.anon.67, %struct.bpf_prog*, [3 x %struct.hlist_head], [3 x i32], i8*, i64, %struct.bpf_ksym }
%struct.anon.67 = type { %struct.btf_func_model, i8*, i8 }
%struct.btf_func_model = type { i8, i8, [12 x i8] }
%struct.btf_type = type opaque
%struct.bpf_jit_poke_descriptor = type { i8*, i8*, i8*, %union.anon.68, i8, i8, i16, i32 }
%union.anon.68 = type { %struct.anon.69 }
%struct.anon.69 = type { %struct.bpf_map*, i32 }
%struct.bpf_map = type { %struct.bpf_map_ops*, %struct.bpf_map*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.btf*, %struct.bpf_map_memory, [16 x i8], i32, i8, i8, [26 x i8], %struct.atomic64_t, %struct.atomic64_t, %struct.work_struct, %struct.mutex, i64, [48 x i8] }
%struct.bpf_map_ops = type { i32 (%union.bpf_attr*)*, %struct.bpf_map* (%union.bpf_attr*)*, void (%struct.bpf_map*, %struct.file*)*, void (%struct.bpf_map*)*, i32 (%struct.bpf_map*, i8*, i8*)*, void (%struct.bpf_map*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*)*, i8* (%struct.bpf_map*, %struct.file*, i32)*, void (i8*)*, i32 (%struct.bpf_map*, %struct.bpf_insn*)*, i32 (i8*)*, void (%struct.bpf_map*, i8*, %struct.seq_file*)*, i32 (%struct.bpf_map*, %struct.btf*, %struct.btf_type*, %struct.btf_type*)*, i32 (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, i32, %struct.bpf_prog*, %struct.bpf_prog*)*, i32 (%struct.bpf_map*, i64*, i32)*, i32 (%struct.bpf_map*, i64, i32*)*, i32 (%struct.bpf_map*, %struct.vm_area_struct*)*, i32 (%struct.bpf_map*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.bpf_local_storage_map*, i8*, i32)*, void (%struct.bpf_local_storage_map*, i8*, i32)*, %struct.bpf_local_storage** (i8*)*, i1 (%struct.bpf_map*, %struct.bpf_map*)*, i8*, i32*, %struct.bpf_iter_seq_info* }
%union.bpf_attr = type { %struct.anon.74 }
%struct.anon.74 = type { i32, i32, i64, i64, i32, i32, i64, i32, i32, [16 x i8], i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i32 }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.135, %struct.list_head, %struct.list_head, %union.anon.136 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.133 }
%union.anon.133 = type { %struct.anon.134 }
%struct.anon.134 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.page = type { i64, %union.anon.3, %union.anon.125, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.125 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.126, i32 }
%union.anon.126 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.103, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.103 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.142, %union.anon.143, %union.anon.144, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.147, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.142 = type { %struct.hlist_node }
%union.anon.143 = type { %struct.rb_node }
%union.anon.144 = type { %struct.anon.146 }
%struct.anon.146 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.147 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.148, void (i8*)*, i8* }
%union.anon.148 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.149, i16, i16 }
%union.anon.149 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.104, %union.anon.105, i32 }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%union.anon.104 = type { %struct.list_head }
%union.anon.105 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.118, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.19, [0 x i64] }
%struct.anon.19 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.20, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.20 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.21 }
%union.anon.21 = type { %struct.anon.22 }
%struct.anon.22 = type { i32*, i32, i32, i32, i64, i32* }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.pid_namespace = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.106 }
%struct.anon.106 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.110 }
%struct.anon.110 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.117, i32, [12 x i8] }
%union.anon.117 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.118 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.119, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.122 }
%union.anon.119 = type { %struct.anon.120 }
%struct.anon.120 = type { i64, i64 }
%union.anon.122 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.135 = type { %struct.list_head }
%union.anon.136 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.127, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.128, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.129, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.132, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.127 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.128 = type { %struct.callback_head }
%union.anon.129 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type { i32, i64, i64, %union.anon.6, %union.anon.7 }
%union.anon.6 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.7 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.132 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.130 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.130 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.bpf_insn = type { i8, i8, i16, i32 }
%struct.bpf_local_storage_map = type opaque
%struct.bpf_local_storage = type opaque
%struct.bpf_iter_seq_info = type { %struct.seq_operations*, i32 (i8*, %struct.bpf_iter_aux_info*)*, void (i8*)*, i32 }
%struct.bpf_iter_aux_info = type opaque
%struct.bpf_map_memory = type { i32, %struct.user_struct* }
%struct.bpf_ksym = type { i64, i64, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.bpf_prog_ops = type { i32 (%struct.bpf_prog*, %union.bpf_attr*, %union.bpf_attr*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.bpf_prog_offload = type { %struct.bpf_prog*, %struct.net_device*, %struct.bpf_offload_dev*, i8*, %struct.list_head, i8, i8, i8*, i32 }
%struct.bpf_offload_dev = type opaque
%struct.btf = type opaque
%struct.bpf_func_info = type { i32, i32 }
%struct.bpf_func_info_aux = type { i16, i8 }
%struct.bpf_line_info = type { i32, i32, i32, i32 }
%struct.exception_table_entry = type { i32, i32, i32 }
%struct.bpf_prog_stats = type { i64, i64, %struct.u64_stats_sync }
%union.anon.94 = type { %struct.work_struct }
%struct.sock_fprog_kern = type { i16, %struct.sock_filter* }
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type { i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, i32, i32, %struct.Qdisc_ops*, %struct.qdisc_size_table*, %struct.hlist_node, i32, i32, %struct.netdev_queue*, %struct.net_rate_estimator*, %struct.gnet_stats_basic_cpu*, %struct.gnet_stats_queue*, i32, %struct.refcount_struct, %struct.sk_buff_head, %struct.qdisc_skb_head, %struct.gnet_stats_basic_packed, %struct.seqcount, %struct.gnet_stats_queue, i64, %struct.Qdisc*, %struct.sk_buff_head, %struct.spinlock, %struct.spinlock, i8, %struct.callback_head, [0 x i64] }
%struct.Qdisc_ops = type { %struct.Qdisc_ops*, %struct.Qdisc_class_ops*, [16 x i8], i32, i32, i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, %struct.sk_buff* (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, %struct.sk_buff*)*, i32 (%struct.Qdisc*, %struct.gnet_dump*)*, void (%struct.Qdisc*, i32)*, void (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*)*, i32 (%struct.Qdisc*)*, %struct.module* }
%struct.Qdisc_class_ops = type { i32, %struct.netdev_queue* (%struct.Qdisc*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.Qdisc*, %struct.Qdisc**, %struct.netlink_ext_ack*)*, %struct.Qdisc* (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, i64)*, i64 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, i32, i32, %struct.nlattr**, i64*, %struct.netlink_ext_ack*)*, i32 (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, %struct.qdisc_walker*)*, %struct.tcf_block* (%struct.Qdisc*, i64, %struct.netlink_ext_ack*)*, i64 (%struct.Qdisc*, i64, i32)*, void (%struct.Qdisc*, i64)*, i32 (%struct.Qdisc*, i64, %struct.sk_buff*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.gnet_dump*)* }
%struct.tcmsg = type { i8, i8, i16, i32, i32, i32, i32 }
%struct.qdisc_walker = type opaque
%struct.tcf_block = type { %struct.mutex, %struct.list_head, i32, i32, %struct.refcount_struct, %struct.net*, %struct.Qdisc*, %struct.rw_semaphore, %struct.flow_block, %struct.list_head, i8, %struct.atomic_t, i32, i32, %struct.anon.163, %struct.callback_head, [128 x %struct.hlist_head], %struct.mutex }
%struct.flow_block = type { %struct.list_head }
%struct.anon.163 = type { %struct.tcf_chain*, %struct.list_head }
%struct.tcf_chain = type { %struct.mutex, %struct.tcf_proto*, %struct.list_head, %struct.tcf_block*, i32, i32, i32, i8, i8, %struct.tcf_proto_ops*, i8*, %struct.callback_head }
%struct.tcf_proto = type { %struct.tcf_proto*, i8*, i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i16, i32, i8*, %struct.tcf_proto_ops*, %struct.tcf_chain*, %struct.spinlock, i8, %struct.refcount_struct, %struct.callback_head, %struct.hlist_node }
%struct.tcf_result = type { %union.anon.164 }
%union.anon.164 = type { %struct.anon.165 }
%struct.anon.165 = type { i64, i32 }
%struct.tcf_proto_ops = type { %struct.list_head, [16 x i8], i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i32 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, i1, %struct.netlink_ext_ack*)*, i8* (%struct.tcf_proto*, i32)*, void (%struct.tcf_proto*, i8*)*, i32 (%struct.net*, %struct.sk_buff*, %struct.tcf_proto*, i64, i32, %struct.nlattr**, i8**, i1, i1, %struct.netlink_ext_ack*)*, i32 (%struct.tcf_proto*, i8*, i8*, i1, %struct.netlink_ext_ack*)*, i1 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, %struct.tcf_walker*, i1)*, i32 (%struct.tcf_proto*, i1, i32 (i32, i8*, i8*)*, i8*, %struct.netlink_ext_ack*)*, void (%struct.tcf_proto*, i8*)*, void (%struct.tcf_proto*, i8*)*, void (i8*, i32, i64, i8*, i64)*, i8* (%struct.net*, %struct.tcf_chain*, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (i8*)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.sk_buff*, %struct.net*, i8*)*, %struct.module*, i32 }
%struct.tcf_walker = type opaque
%struct.gnet_dump = type { %struct.spinlock*, %struct.sk_buff*, %struct.nlattr*, i32, i32, i32, i8*, i32, %struct.tc_stats }
%struct.tc_stats = type { i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.qdisc_size_table = type { %struct.callback_head, %struct.list_head, %struct.tc_sizespec, i32, [0 x i16] }
%struct.tc_sizespec = type { i8, i8, i16, i32, i32, i32, i32, i32 }
%struct.net_rate_estimator = type opaque
%struct.gnet_stats_basic_cpu = type { %struct.gnet_stats_basic_packed, %struct.u64_stats_sync }
%struct.qdisc_skb_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.gnet_stats_basic_packed = type { i64, i64 }
%struct.gnet_stats_queue = type { i32, i32, i32, i32, i32 }
%struct.xdp_dev_bulk_queue = type opaque
%union.anon.167 = type { i8* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.rtnl_link_ops = type { %struct.list_head, i8*, i64, void (%struct.net_device*)*, i32, %struct.nla_policy*, i32 (%struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (%struct.net_device*, %struct.list_head*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i32 ()*, i32 ()*, i32, %struct.nla_policy*, i32 (%struct.net_device*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i64 (%struct.net_device*, %struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*, %struct.net_device*)*, %struct.net* (%struct.net_device*)*, i64 (%struct.net_device*, i32)*, i32 (%struct.sk_buff*, %struct.net_device*, i32*, i32)* }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type { %struct.ip_ra_chain*, %struct.sock*, %union.anon.100, %struct.callback_head }
%union.anon.100 = type { void (%struct.sock*)* }
%struct.inet_peer_base = type { %struct.rb_root, %struct.seqlock_t, i32 }
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.101, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.101 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type { i32, i32, i32, %struct.list_head, %struct.callback_head, %struct.bucket_table*, %struct.lockdep_map, [0 x %struct.rhash_lock_head*] }
%struct.rhash_lock_head = type {}
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type { %struct.inet_ehash_bucket*, %struct.spinlock*, i32, i32, %struct.kmem_cache*, %struct.inet_bind_hashbucket*, i32, i32, %struct.inet_listen_hashbucket*, [32 x %struct.inet_listen_hashbucket] }
%struct.inet_ehash_bucket = type { %struct.hlist_nulls_head }
%struct.hlist_nulls_head = type { %struct.hlist_nulls_node* }
%struct.hlist_nulls_node = type { %struct.hlist_nulls_node*, %struct.hlist_nulls_node** }
%struct.inet_bind_hashbucket = type { %struct.spinlock, %struct.hlist_head }
%struct.inet_listen_hashbucket = type { %struct.spinlock, i32, %union.anon.60 }
%union.anon.60 = type { %struct.hlist_head }
%struct.tcp_congestion_ops = type { %struct.list_head, i32, i32, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*, i32, i32)*, void (%struct.sock*, i8)*, void (%struct.sock*, i32)*, void (%struct.sock*, i32)*, i32 (%struct.sock*)*, void (%struct.sock*, %struct.ack_sample*)*, i32 (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*, %struct.rate_sample*)*, i64 (%struct.sock*, i32, i32*, %union.tcp_cc_info*)*, [16 x i8], %struct.module* }
%struct.ack_sample = type { i32, i32, i32 }
%struct.rate_sample = type { i64, i32, i32, i64, i32, i32, i64, i32, i32, i32, i8, i8, i8 }
%union.tcp_cc_info = type opaque
%struct.tcp_fastopen_context = type { [2 x %struct.siphash_key_t], i32, %struct.callback_head }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type { i32, %struct.list_head, i32 (%struct.net*)*, i32 (%struct.net*, %struct.notifier_block*, %struct.netlink_ext_ack*)*, %struct.module*, %struct.callback_head }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.102 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.seg6_pernet_data = type opaque
%struct.anon.102 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.in6_addr = type { %union.anon.61 }
%union.anon.61 = type { [4 x i32] }
%struct.atomic64_t = type { i64 }
%union.anon.62 = type { i64 }
%union.anon.63 = type { %struct.hlist_node }
%union.anon.64 = type { i32 }
%union.anon.65 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.anon.66 = type { %struct.atomic_t, i32, %struct.sk_buff*, %struct.sk_buff* }
%struct.sk_filter = type { %struct.refcount_struct, %struct.callback_head, %struct.bpf_prog* }
%union.anon.95 = type { %struct.socket_wq* }
%struct.socket_wq = type { %struct.wait_queue_head, %struct.fasync_struct*, i64, %struct.callback_head }
%struct.dst_entry = type { %struct.net_device*, %struct.dst_ops*, i64, i64, i8*, i32 (%struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i16, i16, i16, i16, %struct.atomic_t, i32, i64, %struct.lwtunnel_state*, %struct.callback_head, i16, i16, i32 }
%struct.lwtunnel_state = type opaque
%struct.refcount_struct = type { %struct.atomic_t }
%union.anon.98 = type { %struct.sk_buff* }
%struct.sk_buff = type { %union.anon.47, %union.anon.50, %union.anon.51, [48 x i8], %union.anon.52, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.54, i32, i32, i32, i16, i16, %union.anon.56, %union.anon.57, %union.anon.58, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.49 }
%union.anon.49 = type { %struct.net_device* }
%union.anon.50 = type { %struct.sock* }
%union.anon.51 = type { i64 }
%union.anon.52 = type { %struct.anon.53 }
%struct.anon.53 = type { i64, void (%struct.sk_buff*)* }
%union.anon.54 = type { i32 }
%union.anon.56 = type { i32 }
%union.anon.57 = type { i32 }
%union.anon.58 = type { i16 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.proto = type { void (%struct.sock*, i64)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, i32)*, %struct.sock* (%struct.sock*, i32, i32*, i1)*, i32 (%struct.sock*, i32, i64)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, i32, i32, i8*, i8, i32)*, i32 (%struct.sock*, i32, i32, i8*, i32*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, %struct.msghdr*, i64, i32, i32, i32*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, i16)*, i32, i1 (%struct.sock*, i32)*, i1 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, %struct.atomic64_t*, %struct.percpu_counter*, i64*, i64*, i32*, i32*, i32, i32, i32, i8, %struct.kmem_cache*, i32, i32, i32, i32, %struct.percpu_counter*, %struct.request_sock_ops*, %struct.timewait_sock_ops*, %union.anon.59, %struct.module*, [32 x i8], %struct.list_head, i32 (%struct.sock*, i32)* }
%struct.msghdr = type { i8*, i32, %struct.iov_iter, %union.anon.46, i8, i64, i32, %struct.kiocb* }
%union.anon.46 = type { i8* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.request_sock_ops = type { i32, i32, %struct.kmem_cache*, i8*, i32 (%struct.sock*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*)*, void (%struct.request_sock*)*, void (%struct.request_sock*)* }
%struct.request_sock = type { %struct.sock_common, %struct.request_sock*, i16, i8, i8, i32, %struct.timer_list, %struct.request_sock_ops*, %struct.sock*, %struct.saved_syn*, i32, i32 }
%struct.saved_syn = type { i32, i32, i32, [0 x i8] }
%struct.timewait_sock_ops = type { %struct.kmem_cache*, i8*, i32, i32 (%struct.sock*, %struct.sock*, i8*)*, void (%struct.sock*)* }
%union.anon.59 = type { %struct.inet_hashinfo* }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.kuid_t = type { i32 }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.38 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.38 = type { %struct.callback_head }
%struct.atomic_t = type { i32 }
%struct.socket = type { i32, i16, i64, %struct.file*, %struct.sock*, %struct.proto_ops*, %struct.socket_wq }
%struct.proto_ops = type { i32, i32, %struct.module*, i32 (%struct.socket*)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.socket*, %struct.sockaddr*, i32, i32)*, i32 (%struct.socket*, %struct.socket*)*, i32 (%struct.socket*, %struct.socket*, i32, i1)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.file*, %struct.socket*, %struct.poll_table_struct*)*, i32 (%struct.socket*, i32, i64)*, i32 (%struct.socket*, i8*, i1, i1)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32, i32, i8*, i8, i32)*, i32 (%struct.socket*, i32, i32, i8*, i32*)*, void (%struct.seq_file*, %struct.socket*)*, i32 (%struct.socket*, %struct.msghdr*, i64)*, i32 (%struct.socket*, %struct.msghdr*, i64, i32)*, i32 (%struct.file*, %struct.socket*, %struct.vm_area_struct*)*, i64 (%struct.socket*, %struct.page*, i32, i64, i32)*, i64 (%struct.socket*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.sock*, i32)*, i32 (%struct.socket*)*, i32 (%struct.sock*, %struct.read_descriptor_t*, i32 (%struct.read_descriptor_t*, %struct.sk_buff*, i32, i64)*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, i32)* }
%struct.read_descriptor_t = type { i64, i64, %union.anon.99, i32 }
%union.anon.99 = type { i8* }
%struct.sock_cgroup_data = type {}
%struct.mem_cgroup = type opaque
%struct.sock_reuseport = type { %struct.callback_head, i16, i16, i32, i32, i8, %struct.bpf_prog*, [0 x %struct.sock*] }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.137, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.137 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type { i32, i32, i64, %struct.irq_common_data*, %struct.irq_chip*, %struct.irq_domain*, %struct.irq_data*, i8* }
%struct.irq_common_data = type { i32, i8*, %struct.msi_desc*, [1 x %struct.cpumask] }
%struct.msi_desc = type { %struct.list_head, i32, i32, %struct.device*, %struct.msi_msg, %struct.irq_affinity_desc*, void (%struct.msi_desc*, i8*)*, i8*, %union.anon.138 }
%struct.msi_msg = type { i32, i32, i32 }
%struct.irq_affinity_desc = type { %struct.cpumask, i8 }
%union.anon.138 = type { %struct.anon.139 }
%struct.anon.139 = type { i32, %struct.anon.140, %union.anon.141 }
%struct.anon.140 = type { i16, i16, i32 }
%union.anon.141 = type { i8* }
%struct.irq_chip = type { %struct.device*, i8*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, i32 (%struct.irq_data*, %struct.cpumask*, i1)*, i32 (%struct.irq_data*)*, i32 (%struct.irq_data*, i32)*, i32 (%struct.irq_data*, i32)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.seq_file*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.msi_msg*)*, void (%struct.irq_data*, %struct.msi_msg*)*, i32 (%struct.irq_data*, i32, i8*)*, i32 (%struct.irq_data*, i32, i1)*, i32 (%struct.irq_data*, i8*)*, void (%struct.irq_data*, i32)*, void (%struct.irq_data*, %struct.cpumask*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, i64 }
%struct.irq_domain_chip_generic = type { i32, i32, i32, i32, i32, [0 x %struct.irq_chip_generic*] }
%struct.irq_chip_generic = type { %struct.raw_spinlock, i8*, i32 (i8*)*, void (i32, i8*)*, void (%struct.irq_chip_generic*)*, void (%struct.irq_chip_generic*)*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, %struct.irq_domain*, %struct.list_head, [0 x %struct.irq_chip_type] }
%struct.irq_chip_type = type { %struct.irq_chip, %struct.irq_chip_regs, void (%struct.irq_desc*)*, i32, i32, i32* }
%struct.irq_chip_regs = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.irq_desc = type { %struct.irq_common_data, %struct.irq_data, i32*, {}*, %struct.irqaction*, i32, i32, i32, i32, i32, i32, i64, i32, %struct.atomic_t, i32, %struct.raw_spinlock, %struct.cpumask*, %struct.cpumask*, i64, %struct.atomic_t, %struct.wait_queue_head, i32, i32, i32, i32, %struct.proc_dir_entry*, %struct.callback_head, %struct.kobject, %struct.mutex, i32, %struct.module*, i8* }
%struct.irqaction = type { i32 (i32, i8*)*, i8*, i8*, %struct.irqaction*, i32 (i32, i8*)*, %struct.task_struct*, %struct.irqaction*, i32, i32, i64, i64, i8*, %struct.proc_dir_entry* }
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.spinlock = type { %union.anon.2 }
%union.anon.2 = type { %struct.raw_spinlock }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.xennet_stat = type { [32 x i8], i16 }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.static_key_false = type { %struct.static_key }
%struct.static_key = type { %struct.atomic_t }
%struct.netfront_info = type { %struct.list_head, %struct.net_device*, %struct.xenbus_device*, %struct.netfront_queue*, %struct.netfront_stats*, %struct.netfront_stats*, i8, i8, %struct.atomic_t }
%struct.netfront_queue = type { i32, [22 x i8], %struct.netfront_info*, %struct.bpf_prog*, %struct.napi_struct, i32, i32, i32, i32, [25 x i8], [25 x i8], %struct.spinlock, %struct.xen_netif_tx_front_ring, i32, [256 x %union.skb_entry], i32, [256 x i32], [256 x %struct.page*], i32, %struct.spinlock, %struct.xen_netif_rx_front_ring, i32, %struct.timer_list, [256 x %struct.sk_buff*], i32, [256 x i32], %struct.page_pool*, %struct.xdp_rxq_info }
%struct.napi_struct = type { %struct.list_head, i64, i32, i32, i64, i32 (%struct.napi_struct*, i32)*, %struct.net_device*, [8 x %struct.gro_list], %struct.sk_buff*, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32 }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.xen_netif_tx_front_ring = type { i32, i32, i32, %struct.xen_netif_tx_sring* }
%struct.xen_netif_tx_sring = type { i32, i32, i32, i32, [48 x i8], [1 x %union.xen_netif_tx_sring_entry] }
%union.xen_netif_tx_sring_entry = type { %struct.xen_netif_tx_request }
%struct.xen_netif_tx_request = type { i32, i16, i16, i16, i16 }
%union.skb_entry = type { %struct.sk_buff* }
%struct.xen_netif_rx_front_ring = type { i32, i32, i32, %struct.xen_netif_rx_sring* }
%struct.xen_netif_rx_sring = type { i32, i32, i32, i32, [48 x i8], [1 x %union.xen_netif_rx_sring_entry] }
%union.xen_netif_rx_sring_entry = type { %struct.xen_netif_rx_request }
%struct.xen_netif_rx_request = type { i16, i16, i32 }
%struct.page_pool = type { %struct.page_pool_params, %struct.delayed_work, void (i8*)*, i64, i64, i32, %struct.pp_alloc_cache, %struct.ptr_ring, %struct.atomic_t, %struct.refcount_struct, i64 }
%struct.page_pool_params = type { i32, i32, i32, i32, %struct.device*, i32, i32, i32 }
%struct.pp_alloc_cache = type { i32, [128 x i8*] }
%struct.ptr_ring = type { i32, %struct.spinlock, i32, i32, %struct.spinlock, i32, i32, i8** }
%struct.netfront_stats = type { i64, i64, %struct.u64_stats_sync }
%struct.xen_netif_extra_info = type { i8, i8, %union.anon.168 }
%union.anon.168 = type { %struct.anon.169 }
%struct.anon.169 = type { i16, i8, i8, i16 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, %struct.sk_buff*, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, i8*, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.xennet_gnttab_make_txreq = type { %struct.netfront_queue*, %struct.sk_buff*, %struct.page*, %struct.xen_netif_tx_request*, i32 }
%struct.xen_netif_tx_response = type { i16, i16 }
%struct.xenbus_transaction = type { i32 }
%struct.netfront_rx_info = type { %struct.xen_netif_rx_response, [5 x %struct.xen_netif_extra_info] }
%struct.xen_netif_rx_response = type { i16, i16, i16, i16 }
%struct.netfront_cb = type { i32 }
%struct.xdp_buff = type { i8*, i8*, i8*, i8*, %struct.xdp_rxq_info*, %struct.xdp_txq_info*, i32 }
%struct.xdp_txq_info = type { %struct.net_device* }
%struct.anon.172 = type { i16, [2 x i16] }
%struct.anon.15 = type { i64, i8, i8, %struct.atomic_t, i32 }

@__param_str_max_queues = internal constant [24 x i8] c"xen_netfront.max_queues\00", align 16, !dbg !0
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 8
@xennet_max_queues = internal global i32 0, align 4, !dbg !10477
@__param_max_queues = internal constant %struct.kernel_param { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__param_str_max_queues, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @xennet_max_queues to i8*) } }, section "__param", align 8, !dbg !10387
@__UNIQUE_ID_max_queuestype632 = internal constant [38 x i8] c"xen_netfront.parmtype=max_queues:uint\00", section ".modinfo", align 1, !dbg !10437
@__UNIQUE_ID_max_queues633 = internal constant [76 x i8] c"xen_netfront.parm=max_queues:Maximum number of queues per virtual interface\00", section ".modinfo", align 1, !dbg !10442
@__UNIQUE_ID___addressable_netif_init653 = internal global i8* bitcast (i32 ()* @netif_init to i8*), section ".discard.addressable", align 8, !dbg !10447
@netfront_driver = internal global %struct.xenbus_driver { i8* null, %struct.xenbus_device_id* getelementptr inbounds ([2 x %struct.xenbus_device_id], [2 x %struct.xenbus_device_id]* @netfront_ids, i32 0, i32 0), i8 0, i32 (%struct.xenbus_device*, %struct.xenbus_device_id*)* @netfront_probe, void (%struct.xenbus_device*, i32)* @netback_changed, i32 (%struct.xenbus_device*)* @xennet_remove, i32 (%struct.xenbus_device*)* null, i32 (%struct.xenbus_device*)* @netfront_resume, i32 (%struct.xenbus_device*, %struct.kobj_uevent_env*)* null, %struct.device_driver zeroinitializer, i32 (%struct.xenbus_device*)* null, i32 (%struct.xenbus_device*)* null, void (%struct.xenbus_device*)* null }, align 8, !dbg !10479
@__exitcall_netif_exit = internal global void ()* @netif_exit, section ".exitcall.exit", align 8, !dbg !10449
@__UNIQUE_ID_description654 = internal constant [61 x i8] c"xen_netfront.description=Xen virtual network device frontend\00", section ".modinfo", align 1, !dbg !10454
@__UNIQUE_ID_file655 = internal constant [43 x i8] c"xen_netfront.file=drivers/net/xen-netfront\00", section ".modinfo", align 1, !dbg !10459
@__UNIQUE_ID_license656 = internal constant [25 x i8] c"xen_netfront.license=GPL\00", section ".modinfo", align 1, !dbg !10464
@__UNIQUE_ID_alias657 = internal constant [27 x i8] c"xen_netfront.alias=xen:vif\00", section ".modinfo", align 1, !dbg !10467
@__UNIQUE_ID_alias658 = internal constant [26 x i8] c"xen_netfront.alias=xennet\00", section ".modinfo", align 1, !dbg !10472
@xen_domain_type = external dso_local global i32, align 4
@.str = private unnamed_addr constant [58 x i8] c"\016xen_netfront: Initialising Xen virtual ethernet driver\0A\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"xen_netfront\00", align 1
@netfront_ids = internal constant [2 x %struct.xenbus_device_id] [%struct.xenbus_device_id { [32 x i8] c"vif\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.xenbus_device_id zeroinitializer], align 16, !dbg !10516
@.str.2 = private unnamed_addr constant [16 x i8] c"creating netdev\00", align 1
@xennet_dev_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([4 x %struct.attribute*], [4 x %struct.attribute*]* @xennet_dev_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !10533
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 8
@xennet_netdev_ops = internal constant %struct.net_device_ops { i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* @xennet_open, i32 (%struct.net_device*)* @xennet_close, i32 (%struct.sk_buff*, %struct.net_device*)* @xennet_start_xmit, i64 (%struct.sk_buff*, %struct.net_device*, i64)* null, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)* @xennet_select_queue, void (%struct.net_device*, i32)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*, i8*)* @eth_mac_addr, i32 (%struct.net_device*)* @eth_validate_addr, i32 (%struct.net_device*, %struct.ifreq*, i32)* null, i32 (%struct.net_device*, %struct.ifmap*)* null, i32 (%struct.net_device*, i32)* @xennet_change_mtu, i32 (%struct.net_device*, %struct.neigh_parms*)* null, void (%struct.net_device*, i32)* null, void (%struct.net_device*, %struct.rtnl_link_stats64*)* @xennet_get_stats64, i1 (%struct.net_device*, i32)* null, i32 (i32, %struct.net_device*, i8*)* null, %struct.net_device_stats* (%struct.net_device*)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i16, i16)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, i32, i16, i8, i16)* null, i32 (%struct.net_device*, i32, i32, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)* null, i32 (%struct.net_device*, i32, %struct.nlattr**)* null, i32 (%struct.net_device*, i32, %struct.sk_buff*)* null, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)* null, i32 (%struct.net_device*, i32, i64, i32)* null, i32 (%struct.net_device*, i32, i1)* null, i32 (%struct.net_device*, i32, i8*)* null, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.net_device*)* null, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)* null, i64 (%struct.net_device*, i64)* @xennet_fix_features, i32 (%struct.net_device*, i64)* @xennet_set_features, i32 (%struct.net_device*, %struct.neighbour*)* null, void (%struct.net_device*, %struct.neighbour*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)* null, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)* null, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)* null, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)* null, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)* null, i32 (%struct.net_device*, i8*, i64)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, void (%struct.net_device*, %struct.udp_tunnel_info*)* null, i8* (%struct.net_device*, %struct.net_device*)* null, void (%struct.net_device*, i8*)* null, i32 (%struct.net_device*, i32, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i1)* null, i32 (%struct.net_device*, %struct.sk_buff*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*, %struct.netdev_bpf*)* @xennet_xdp, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)* @xennet_xdp_xmit, i32 (%struct.net_device*, i32, i32)* null, %struct.devlink_port* (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)* null, %struct.net_device* (%struct.net_device*)* null }, align 8, !dbg !10519
@xennet_ethtool_ops = internal constant %struct.ethtool_ops { i32 0, void (%struct.net_device*, %struct.ethtool_drvinfo*)* null, i32 (%struct.net_device*)* null, void (%struct.net_device*, %struct.ethtool_regs*, i8*)* null, void (%struct.net_device*, %struct.ethtool_wolinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)* null, i32 (%struct.net_device*)* null, void (%struct.net_device*, i32)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* @ethtool_op_get_link, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_coalesce*)* null, void (%struct.net_device*, %struct.ethtool_ringparam*)* null, i32 (%struct.net_device*, %struct.ethtool_ringparam*)* null, void (%struct.net_device*, %struct.ethtool_pause_stats*)* null, void (%struct.net_device*, %struct.ethtool_pauseparam*)* null, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)* null, void (%struct.net_device*, %struct.ethtool_test*, i64*)* null, void (%struct.net_device*, i32, i8*)* @xennet_get_strings, i32 (%struct.net_device*, i32)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* @xennet_get_ethtool_stats, i32 (%struct.net_device*)* null, void (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32)* null, i32 (%struct.net_device*, i32)* @xennet_get_sset_count, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)* null, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)* null, i32 (%struct.net_device*, %struct.ethtool_flash*)* null, i32 (%struct.net_device*, i32*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*)* null, i32 (%struct.net_device*, i32*, i8*, i8*)* null, i32 (%struct.net_device*, i32*, i8*, i8)* null, i32 (%struct.net_device*, i32*, i8*, i8*, i32)* null, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)* null, void (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_channels*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_dump*)* null, i32 (%struct.net_device*, %struct.ethtool_ts_info*)* @ethtool_op_get_ts_info, i32 (%struct.net_device*, %struct.ethtool_modinfo*)* null, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_eee*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)* null, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* null, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)* null, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, i32 (%struct.net_device*, %struct.ethtool_fecparam*)* null, void (%struct.net_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* null }, align 8, !dbg !10521
@module_wq = internal global %struct.wait_queue_head { %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (%struct.wait_queue_head* @module_wq to %struct.list_head*), %struct.list_head* bitcast (%struct.wait_queue_head* @module_wq to %struct.list_head*) } }, align 8, !dbg !10531
@.str.3 = private unnamed_addr constant [26 x i8] c"include/linux/netdevice.h\00", align 1
@__preempt_count = external dso_local global i32, section ".data", align 4
@.str.4 = private unnamed_addr constant [27 x i8] c"drivers/net/xen-netfront.c\00", align 1
@jiffies = external dso_local global i64, align 8
@vmemmap_base = external dso_local global i64, align 8
@xen_features = external dso_local global [32 x i8], align 16
@xen_p2m_size = external dso_local global i64, align 8
@xen_p2m_addr = external dso_local global i64*, align 8
@xen_max_p2m_pfn = external dso_local global i64, align 8
@.str.5 = private unnamed_addr constant [64 x i8] c"\011xen_netfront: xennet: skb->len = %u, too big for wire format\0A\00", align 1
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.6 = private unnamed_addr constant [69 x i8] c"\011xen_netfront: %s: warning -- grant still in use by backend domain\0A\00", align 1
@__func__.xennet_tx_buf_gc = private unnamed_addr constant [17 x i8] c"xennet_tx_buf_gc\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"feature-sg\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"feature-ipv6-csum-offload\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"feature-gso-tcpv4\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"feature-gso-tcpv6\00", align 1
@.str.11 = private unnamed_addr constant [35 x i8] c"Reducing MTU because no SG offload\00", align 1
@.str.12 = private unnamed_addr constant [32 x i8] c"XDP requires MTU less than %lu\0A\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"xdp-headroom\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"%hu\00", align 1
@.str.15 = private unnamed_addr constant [44 x i8] c"\014xen_netfront: Error writing xdp-headroom\0A\00", align 1
@xennet_stats = internal constant [1 x %struct.xennet_stat] [%struct.xennet_stat { [32 x i8] c"rx_gso_checksum_fixup\00\00\00\00\00\00\00\00\00\00\00", i16 60 }], align 16, !dbg !10523
@xennet_dev_attrs = internal global [4 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_rxbuf_min, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_rxbuf_max, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_rxbuf_cur, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !10535
@dev_attr_rxbuf_min = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_rxbuf, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_rxbuf }, align 8, !dbg !10538
@dev_attr_rxbuf_max = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_rxbuf, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_rxbuf }, align 8, !dbg !10552
@dev_attr_rxbuf_cur = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_rxbuf, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !10554
@.str.16 = private unnamed_addr constant [10 x i8] c"rxbuf_min\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"%lu\0A\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"rxbuf_max\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"rxbuf_cur\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"feature-rx-copy\00", align 1
@.str.21 = private unnamed_addr constant [47 x i8] c"backend does not support copying receive path\0A\00", align 1
@.str.22 = private unnamed_addr constant [47 x i8] c"\016xen_netfront: backend supports XDP headroom\0A\00", align 1
@.str.23 = private unnamed_addr constant [44 x i8] c"\014xen_netfront: %s: register_netdev err=%d\0A\00", align 1
@__func__.xennet_connect = private unnamed_addr constant [15 x i8] c"xennet_connect\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"multi-queue-max-queues\00", align 1
@.str.25 = private unnamed_addr constant [29 x i8] c"feature-split-event-channels\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"parsing %s/mac\00", align 1
@.str.27 = private unnamed_addr constant [21 x i8] c"feature-xdp-headroom\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c"creating queues\00", align 1
@.str.29 = private unnamed_addr constant [21 x i8] c"starting transaction\00", align 1
@.str.30 = private unnamed_addr constant [23 x i8] c"multi-queue-num-queues\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.32 = private unnamed_addr constant [31 x i8] c"writing multi-queue-num-queues\00", align 1
@.str.33 = private unnamed_addr constant [16 x i8] c"request-rx-copy\00", align 1
@.str.34 = private unnamed_addr constant [24 x i8] c"writing request-rx-copy\00", align 1
@.str.35 = private unnamed_addr constant [18 x i8] c"feature-rx-notify\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.37 = private unnamed_addr constant [26 x i8] c"writing feature-rx-notify\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"writing feature-sg\00", align 1
@.str.39 = private unnamed_addr constant [26 x i8] c"writing feature-gso-tcpv4\00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.41 = private unnamed_addr constant [26 x i8] c"writing feature-gso-tcpv6\00", align 1
@.str.42 = private unnamed_addr constant [34 x i8] c"writing feature-ipv6-csum-offload\00", align 1
@.str.43 = private unnamed_addr constant [23 x i8] c"completing transaction\00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"mac\00", align 1
@.str.46 = private unnamed_addr constant [24 x i8] c"only created %d queues\0A\00", align 1
@.str.47 = private unnamed_addr constant [26 x i8] c"can't allocate page pool\0A\00", align 1
@.str.48 = private unnamed_addr constant [11 x i8] c"no queues\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.49 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"vif%s-q%u\00", align 1
@.str.51 = private unnamed_addr constant [43 x i8] c"\011xen_netfront: can't alloc tx grant refs\0A\00", align 1
@.str.52 = private unnamed_addr constant [43 x i8] c"\011xen_netfront: can't alloc rx grant refs\0A\00", align 1
@.str.53 = private unnamed_addr constant [25 x i8] c"xdp_rxq_info_reg failed\0A\00", align 1
@.str.54 = private unnamed_addr constant [35 x i8] c"xdp_rxq_info_reg_mem_model failed\0A\00", align 1
@.str.55 = private unnamed_addr constant [26 x i8] c"rx->offset: %u, size: %d\0A\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"Bad rx response id %d.\0A\00", align 1
@.str.57 = private unnamed_addr constant [17 x i8] c"Need more slots\0A\00", align 1
@.str.58 = private unnamed_addr constant [16 x i8] c"Too many slots\0A\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"Missing extra info\0A\00", align 1
@.str.60 = private unnamed_addr constant [24 x i8] c"Invalid extra type: %d\0A\00", align 1
@bpf_stats_enabled_key = external dso_local global %struct.static_key_false, align 4
@.str.61 = private unnamed_addr constant [38 x i8] c"Driver BUG: missing reserved tailroom\00", align 1
@__func__.xdp_update_frame_from_buff = private unnamed_addr constant [27 x i8] c"xdp_update_frame_from_buff\00", align 1
@.str.62 = private unnamed_addr constant [43 x i8] c"\014xen_netfront: GSO size must not be zero\0A\00", align 1
@.str.63 = private unnamed_addr constant [33 x i8] c"\014xen_netfront: Bad GSO type %d\0A\00", align 1
@.str.64 = private unnamed_addr constant [24 x i8] c"allocating tx ring page\00", align 1
@.str.65 = private unnamed_addr constant [24 x i8] c"allocating rx ring page\00", align 1
@.str.66 = private unnamed_addr constant [6 x i8] c"%s-tx\00", align 1
@.str.67 = private unnamed_addr constant [6 x i8] c"%s-rx\00", align 1
@.str.68 = private unnamed_addr constant [44 x i8] c"out of memory while writing ring references\00", align 1
@.str.69 = private unnamed_addr constant [12 x i8] c"%s/queue-%u\00", align 1
@.str.70 = private unnamed_addr constant [12 x i8] c"tx-ring-ref\00", align 1
@.str.71 = private unnamed_addr constant [20 x i8] c"writing tx-ring-ref\00", align 1
@.str.72 = private unnamed_addr constant [12 x i8] c"rx-ring-ref\00", align 1
@.str.73 = private unnamed_addr constant [20 x i8] c"writing rx-ring-ref\00", align 1
@.str.74 = private unnamed_addr constant [14 x i8] c"event-channel\00", align 1
@.str.75 = private unnamed_addr constant [22 x i8] c"writing event-channel\00", align 1
@.str.76 = private unnamed_addr constant [17 x i8] c"event-channel-tx\00", align 1
@.str.77 = private unnamed_addr constant [25 x i8] c"writing event-channel-tx\00", align 1
@.str.78 = private unnamed_addr constant [17 x i8] c"event-channel-rx\00", align 1
@.str.79 = private unnamed_addr constant [25 x i8] c"writing event-channel-rx\00", align 1
@llvm.used = appending global [11 x i8*] [i8* bitcast (%struct.kernel_param* @__param_max_queues to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_max_queuestype632, i32 0, i32 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__UNIQUE_ID_max_queues633, i32 0, i32 0), i8* bitcast (i8** @__UNIQUE_ID___addressable_netif_init653 to i8*), i8* bitcast (void ()* @netif_exit to i8*), i8* bitcast (void ()** @__exitcall_netif_exit to i8*), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__UNIQUE_ID_description654, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_file655, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__UNIQUE_ID_license656, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__UNIQUE_ID_alias657, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__UNIQUE_ID_alias658, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @netif_init() #0 section ".init.text" !dbg !10563 {
entry:
  %retval = alloca i32, align 4
  %0 = load i32, i32* @xen_domain_type, align 4, !dbg !10566
  %cmp = icmp ne i32 %0, 0, !dbg !10566
  br i1 %cmp, label %if.end, label %if.then, !dbg !10568

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !10569
  br label %return, !dbg !10569

if.end:                                           ; preds = %entry
  %call = call zeroext i1 @xen_has_pv_nic_devices() #12, !dbg !10570
  br i1 %call, label %if.end2, label %if.then1, !dbg !10572

if.then1:                                         ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !10573
  br label %return, !dbg !10573

if.end2:                                          ; preds = %if.end
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0)) #13, !dbg !10574
  %1 = load i32, i32* @xennet_max_queues, align 4, !dbg !10575
  %cmp4 = icmp eq i32 %1, 0, !dbg !10577
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !10578

if.then5:                                         ; preds = %if.end2
  store i32 1, i32* @xennet_max_queues, align 4, !dbg !10579
  br label %if.end6, !dbg !10580

if.end6:                                          ; preds = %if.then5, %if.end2
  %call7 = call i32 @__xenbus_register_frontend(%struct.xenbus_driver* @netfront_driver, %struct.module* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !10581
  store i32 %call7, i32* %retval, align 4, !dbg !10582
  br label %return, !dbg !10582

return:                                           ; preds = %if.end6, %if.then1, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !10583
  ret i32 %2, !dbg !10583
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @netif_exit() #0 section ".exit.text" !dbg !10584 {
entry:
  call void @xenbus_unregister_driver(%struct.xenbus_driver* @netfront_driver) #12, !dbg !10585
  ret void, !dbg !10586
}

; Function Attrs: noredzone
declare dso_local void @xenbus_unregister_driver(%struct.xenbus_driver*) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @xen_has_pv_nic_devices() #1

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @__xenbus_register_frontend(%struct.xenbus_driver*, %struct.module*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netfront_probe(%struct.xenbus_device* %dev, %struct.xenbus_device_id* %id) #3 !dbg !10587 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.xenbus_device*, align 8
  %id.addr = alloca %struct.xenbus_device_id*, align 8
  %err = alloca i32, align 4
  %netdev = alloca %struct.net_device*, align 8
  %info = alloca %struct.netfront_info*, align 8
  store %struct.xenbus_device* %dev, %struct.xenbus_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xenbus_device** %dev.addr, metadata !10588, metadata !DIExpression()), !dbg !10589
  store %struct.xenbus_device_id* %id, %struct.xenbus_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xenbus_device_id** %id.addr, metadata !10590, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10592, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !10594, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %info, metadata !10596, metadata !DIExpression()), !dbg !10597
  %0 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10598
  %call = call %struct.net_device* @xennet_create_dev(%struct.xenbus_device* %0) #12, !dbg !10599
  store %struct.net_device* %call, %struct.net_device** %netdev, align 8, !dbg !10600
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10601
  %2 = bitcast %struct.net_device* %1 to i8*, !dbg !10601
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #12, !dbg !10603
  br i1 %call1, label %if.then, label %if.end, !dbg !10604

if.then:                                          ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10605
  %4 = bitcast %struct.net_device* %3 to i8*, !dbg !10605
  %call2 = call i64 @PTR_ERR(i8* %4) #12, !dbg !10607
  %conv = trunc i64 %call2 to i32, !dbg !10607
  store i32 %conv, i32* %err, align 4, !dbg !10608
  %5 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10609
  %6 = load i32, i32* %err, align 4, !dbg !10610
  call void (%struct.xenbus_device*, i32, i8*, ...) @xenbus_dev_fatal(%struct.xenbus_device* %5, i32 %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #12, !dbg !10611
  %7 = load i32, i32* %err, align 4, !dbg !10612
  store i32 %7, i32* %retval, align 4, !dbg !10613
  br label %return, !dbg !10613

if.end:                                           ; preds = %entry
  %8 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10614
  %call3 = call i8* @netdev_priv(%struct.net_device* %8) #12, !dbg !10615
  %9 = bitcast i8* %call3 to %struct.netfront_info*, !dbg !10615
  store %struct.netfront_info* %9, %struct.netfront_info** %info, align 8, !dbg !10616
  %10 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10617
  %dev4 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %10, i32 0, i32 5, !dbg !10618
  %11 = load %struct.netfront_info*, %struct.netfront_info** %info, align 8, !dbg !10619
  %12 = bitcast %struct.netfront_info* %11 to i8*, !dbg !10619
  call void @dev_set_drvdata(%struct.device* %dev4, i8* %12) #12, !dbg !10620
  %13 = load %struct.netfront_info*, %struct.netfront_info** %info, align 8, !dbg !10621
  %netdev5 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %13, i32 0, i32 1, !dbg !10622
  %14 = load %struct.net_device*, %struct.net_device** %netdev5, align 8, !dbg !10622
  %sysfs_groups = getelementptr inbounds %struct.net_device, %struct.net_device* %14, i32 0, i32 107, !dbg !10623
  %arrayidx = getelementptr [4 x %struct.attribute_group*], [4 x %struct.attribute_group*]* %sysfs_groups, i64 0, i64 0, !dbg !10621
  store %struct.attribute_group* @xennet_dev_group, %struct.attribute_group** %arrayidx, align 8, !dbg !10624
  store i32 0, i32* %retval, align 4, !dbg !10625
  br label %return, !dbg !10625

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !10626
  ret i32 %15, !dbg !10626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netback_changed(%struct.xenbus_device* %dev, i32 %backend_state) #3 !dbg !10627 {
entry:
  %dev.addr = alloca %struct.xenbus_device*, align 8
  %backend_state.addr = alloca i32, align 4
  %np = alloca %struct.netfront_info*, align 8
  %netdev = alloca %struct.net_device*, align 8
  store %struct.xenbus_device* %dev, %struct.xenbus_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xenbus_device** %dev.addr, metadata !10628, metadata !DIExpression()), !dbg !10629
  store i32 %backend_state, i32* %backend_state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %backend_state.addr, metadata !10630, metadata !DIExpression()), !dbg !10631
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %np, metadata !10632, metadata !DIExpression()), !dbg !10633
  %0 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10634
  %dev1 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %0, i32 0, i32 5, !dbg !10635
  %call = call i8* @dev_get_drvdata(%struct.device* %dev1) #12, !dbg !10636
  %1 = bitcast i8* %call to %struct.netfront_info*, !dbg !10636
  store %struct.netfront_info* %1, %struct.netfront_info** %np, align 8, !dbg !10633
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !10637, metadata !DIExpression()), !dbg !10638
  %2 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !10639
  %netdev2 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %2, i32 0, i32 1, !dbg !10640
  %3 = load %struct.net_device*, %struct.net_device** %netdev2, align 8, !dbg !10640
  store %struct.net_device* %3, %struct.net_device** %netdev, align 8, !dbg !10638
  call void @__wake_up(%struct.wait_queue_head* @module_wq, i32 3, i32 0, i8* null) #12, !dbg !10641
  %4 = load i32, i32* %backend_state.addr, align 4, !dbg !10642
  switch i32 %4, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 0, label %sw.bb
    i32 2, label %sw.bb3
    i32 4, label %sw.bb9
    i32 6, label %sw.bb10
    i32 5, label %sw.bb15
  ], !dbg !10643

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog, !dbg !10644

sw.bb3:                                           ; preds = %entry
  %5 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10646
  %state = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %5, i32 0, i32 6, !dbg !10648
  %6 = load i32, i32* %state, align 8, !dbg !10648
  %cmp = icmp ne i32 %6, 1, !dbg !10649
  br i1 %cmp, label %if.then, label %if.end, !dbg !10650

if.then:                                          ; preds = %sw.bb3
  br label %sw.epilog, !dbg !10651

if.end:                                           ; preds = %sw.bb3
  %7 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10652
  %call4 = call i32 @xennet_connect(%struct.net_device* %7) #12, !dbg !10654
  %cmp5 = icmp ne i32 %call4, 0, !dbg !10655
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10656

if.then6:                                         ; preds = %if.end
  br label %sw.epilog, !dbg !10657

if.end7:                                          ; preds = %if.end
  %8 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10658
  %call8 = call i32 @xenbus_switch_state(%struct.xenbus_device* %8, i32 4) #12, !dbg !10659
  br label %sw.epilog, !dbg !10660

sw.bb9:                                           ; preds = %entry
  %9 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10661
  call void @netdev_notify_peers(%struct.net_device* %9) #12, !dbg !10662
  br label %sw.epilog, !dbg !10663

sw.bb10:                                          ; preds = %entry
  %10 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10664
  %state11 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %10, i32 0, i32 6, !dbg !10666
  %11 = load i32, i32* %state11, align 8, !dbg !10666
  %cmp12 = icmp eq i32 %11, 6, !dbg !10667
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10668

if.then13:                                        ; preds = %sw.bb10
  br label %sw.epilog, !dbg !10669

if.end14:                                         ; preds = %sw.bb10
  br label %sw.bb15, !dbg !10670

sw.bb15:                                          ; preds = %entry, %if.end14
  %12 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10671
  %call16 = call i32 @xenbus_frontend_closed(%struct.xenbus_device* %12) #12, !dbg !10672
  br label %sw.epilog, !dbg !10673

sw.epilog:                                        ; preds = %entry, %sw.bb15, %if.then13, %sw.bb9, %if.end7, %if.then6, %if.then, %sw.bb
  ret void, !dbg !10674
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_remove(%struct.xenbus_device* %dev) #3 !dbg !10675 {
entry:
  %dev.addr = alloca %struct.xenbus_device*, align 8
  %info = alloca %struct.netfront_info*, align 8
  store %struct.xenbus_device* %dev, %struct.xenbus_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xenbus_device** %dev.addr, metadata !10676, metadata !DIExpression()), !dbg !10677
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %info, metadata !10678, metadata !DIExpression()), !dbg !10679
  %0 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10680
  %dev1 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %0, i32 0, i32 5, !dbg !10681
  %call = call i8* @dev_get_drvdata(%struct.device* %dev1) #12, !dbg !10682
  %1 = bitcast i8* %call to %struct.netfront_info*, !dbg !10682
  store %struct.netfront_info* %1, %struct.netfront_info** %info, align 8, !dbg !10679
  %2 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10683
  call void @xennet_bus_close(%struct.xenbus_device* %2) #12, !dbg !10684
  %3 = load %struct.netfront_info*, %struct.netfront_info** %info, align 8, !dbg !10685
  call void @xennet_disconnect_backend(%struct.netfront_info* %3) #12, !dbg !10686
  %4 = load %struct.netfront_info*, %struct.netfront_info** %info, align 8, !dbg !10687
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %4, i32 0, i32 1, !dbg !10689
  %5 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10689
  %reg_state = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 99, !dbg !10690
  %bf.load = load i8, i8* %reg_state, align 8, !dbg !10690
  %bf.cast = zext i8 %bf.load to i32, !dbg !10690
  %cmp = icmp eq i32 %bf.cast, 1, !dbg !10691
  br i1 %cmp, label %if.then, label %if.end, !dbg !10692

if.then:                                          ; preds = %entry
  %6 = load %struct.netfront_info*, %struct.netfront_info** %info, align 8, !dbg !10693
  %netdev2 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %6, i32 0, i32 1, !dbg !10694
  %7 = load %struct.net_device*, %struct.net_device** %netdev2, align 8, !dbg !10694
  call void @unregister_netdev(%struct.net_device* %7) #12, !dbg !10695
  br label %if.end, !dbg !10695

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.netfront_info*, %struct.netfront_info** %info, align 8, !dbg !10696
  %queues = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %8, i32 0, i32 3, !dbg !10698
  %9 = load %struct.netfront_queue*, %struct.netfront_queue** %queues, align 8, !dbg !10698
  %tobool = icmp ne %struct.netfront_queue* %9, null, !dbg !10696
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !10699

if.then3:                                         ; preds = %if.end
  call void @rtnl_lock() #12, !dbg !10700
  %10 = load %struct.netfront_info*, %struct.netfront_info** %info, align 8, !dbg !10702
  call void @xennet_destroy_queues(%struct.netfront_info* %10) #12, !dbg !10703
  call void @rtnl_unlock() #12, !dbg !10704
  br label %if.end4, !dbg !10705

if.end4:                                          ; preds = %if.then3, %if.end
  %11 = load %struct.netfront_info*, %struct.netfront_info** %info, align 8, !dbg !10706
  %netdev5 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %11, i32 0, i32 1, !dbg !10707
  %12 = load %struct.net_device*, %struct.net_device** %netdev5, align 8, !dbg !10707
  call void @xennet_free_netdev(%struct.net_device* %12) #12, !dbg !10708
  ret i32 0, !dbg !10709
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netfront_resume(%struct.xenbus_device* %dev) #3 !dbg !10710 {
entry:
  %dev.addr = alloca %struct.xenbus_device*, align 8
  %info = alloca %struct.netfront_info*, align 8
  store %struct.xenbus_device* %dev, %struct.xenbus_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xenbus_device** %dev.addr, metadata !10711, metadata !DIExpression()), !dbg !10712
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %info, metadata !10713, metadata !DIExpression()), !dbg !10714
  %0 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10715
  %dev1 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %0, i32 0, i32 5, !dbg !10716
  %call = call i8* @dev_get_drvdata(%struct.device* %dev1) #12, !dbg !10717
  %1 = bitcast i8* %call to %struct.netfront_info*, !dbg !10717
  store %struct.netfront_info* %1, %struct.netfront_info** %info, align 8, !dbg !10714
  %2 = load %struct.netfront_info*, %struct.netfront_info** %info, align 8, !dbg !10718
  call void @xennet_disconnect_backend(%struct.netfront_info* %2) #12, !dbg !10719
  ret i32 0, !dbg !10720
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.net_device* @xennet_create_dev(%struct.xenbus_device* %dev) #3 !dbg !10721 {
entry:
  %retval = alloca %struct.net_device*, align 8
  %dev.addr = alloca %struct.xenbus_device*, align 8
  %err = alloca i32, align 4
  %netdev = alloca %struct.net_device*, align 8
  %np = alloca %struct.netfront_info*, align 8
  %pcpu_stats = alloca %struct.netfront_stats*, align 8
  %__cpu = alloca i32, align 4
  %stat = alloca %struct.netfront_stats*, align 8
  %tmp = alloca %struct.netfront_stats*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp6 = alloca %struct.netfront_stats*, align 8
  %tmp8 = alloca %struct.netfront_stats*, align 8
  %pcpu_stats13 = alloca %struct.netfront_stats*, align 8
  %__cpu17 = alloca i32, align 4
  %stat21 = alloca %struct.netfront_stats*, align 8
  %tmp22 = alloca %struct.netfront_stats*, align 8
  %__vpp_verify24 = alloca i8*, align 8
  %tmp26 = alloca %struct.netfront_stats*, align 8
  %tmp32 = alloca %struct.netfront_stats*, align 8
  %__ret = alloca i64, align 8
  %__cond = alloca i8, align 1
  %tmp57 = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret62 = alloca i64, align 8
  %__int = alloca i64, align 8
  %__cond65 = alloca i8, align 1
  %tmp80 = alloca i32, align 4
  %tmp92 = alloca i64, align 8
  %tmp94 = alloca i64, align 8
  store %struct.xenbus_device* %dev, %struct.xenbus_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xenbus_device** %dev.addr, metadata !10724, metadata !DIExpression()), !dbg !10725
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10726, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !10728, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %np, metadata !10730, metadata !DIExpression()), !dbg !10731
  %0 = load i32, i32* @xennet_max_queues, align 4, !dbg !10732
  %1 = load i32, i32* @xennet_max_queues, align 4, !dbg !10732
  %call = call %struct.net_device* @alloc_etherdev_mqs(i32 64, i32 %0, i32 %1) #12, !dbg !10732
  store %struct.net_device* %call, %struct.net_device** %netdev, align 8, !dbg !10733
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10734
  %tobool = icmp ne %struct.net_device* %2, null, !dbg !10734
  br i1 %tobool, label %if.end, label %if.then, !dbg !10736

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -12) #12, !dbg !10737
  %3 = bitcast i8* %call1 to %struct.net_device*, !dbg !10737
  store %struct.net_device* %3, %struct.net_device** %retval, align 8, !dbg !10738
  br label %return, !dbg !10738

if.end:                                           ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10739
  %call2 = call i8* @netdev_priv(%struct.net_device* %4) #12, !dbg !10740
  %5 = bitcast i8* %call2 to %struct.netfront_info*, !dbg !10740
  store %struct.netfront_info* %5, %struct.netfront_info** %np, align 8, !dbg !10741
  %6 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10742
  %7 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !10743
  %xbdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %7, i32 0, i32 2, !dbg !10744
  store %struct.xenbus_device* %6, %struct.xenbus_device** %xbdev, align 8, !dbg !10745
  %8 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !10746
  %queues = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %8, i32 0, i32 3, !dbg !10747
  store %struct.netfront_queue* null, %struct.netfront_queue** %queues, align 8, !dbg !10748
  store i32 -12, i32* %err, align 4, !dbg !10749
  call void @llvm.dbg.declare(metadata %struct.netfront_stats** %pcpu_stats, metadata !10750, metadata !DIExpression()), !dbg !10752
  %call3 = call i8* @__alloc_percpu_gfp(i64 16, i64 8, i32 3264) #12, !dbg !10752
  %9 = bitcast i8* %call3 to %struct.netfront_stats*, !dbg !10752
  store %struct.netfront_stats* %9, %struct.netfront_stats** %pcpu_stats, align 8, !dbg !10752
  %10 = load %struct.netfront_stats*, %struct.netfront_stats** %pcpu_stats, align 8, !dbg !10753
  %tobool4 = icmp ne %struct.netfront_stats* %10, null, !dbg !10753
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !10752

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__cpu, metadata !10755, metadata !DIExpression()), !dbg !10757
  store i32 0, i32* %__cpu, align 4, !dbg !10758
  br label %for.cond, !dbg !10758

for.cond:                                         ; preds = %for.inc, %if.then5
  %11 = load i32, i32* %__cpu, align 4, !dbg !10760
  %cmp = icmp slt i32 %11, 1, !dbg !10760
  br i1 %cmp, label %for.body, label %for.end, !dbg !10758

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netfront_stats** %stat, metadata !10762, metadata !DIExpression()), !dbg !10764
  %12 = load i32, i32* %__cpu, align 4, !dbg !10765
  br label %do.body, !dbg !10767

do.body:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !10769, metadata !DIExpression()), !dbg !10771
  store i8* null, i8** %__vpp_verify, align 8, !dbg !10771
  %13 = load i8*, i8** %__vpp_verify, align 8, !dbg !10771
  br label %do.end, !dbg !10771

do.end:                                           ; preds = %do.body
  %14 = load %struct.netfront_stats*, %struct.netfront_stats** %pcpu_stats, align 8, !dbg !10767
  store %struct.netfront_stats* %14, %struct.netfront_stats** %tmp6, align 8, !dbg !10771
  %15 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp6, align 8, !dbg !10767
  store %struct.netfront_stats* %15, %struct.netfront_stats** %tmp, align 8, !dbg !10765
  %16 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp, align 8, !dbg !10765
  store %struct.netfront_stats* %16, %struct.netfront_stats** %stat, align 8, !dbg !10764
  %17 = load %struct.netfront_stats*, %struct.netfront_stats** %stat, align 8, !dbg !10764
  %syncp = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %17, i32 0, i32 2, !dbg !10764
  call void @u64_stats_init(%struct.u64_stats_sync* %syncp) #12, !dbg !10764
  br label %for.inc, !dbg !10764

for.inc:                                          ; preds = %do.end
  %18 = load i32, i32* %__cpu, align 4, !dbg !10760
  %inc = add i32 %18, 1, !dbg !10760
  store i32 %inc, i32* %__cpu, align 4, !dbg !10760
  br label %for.cond, !dbg !10760, !llvm.loop !10772

for.end:                                          ; preds = %for.cond
  br label %if.end7, !dbg !10757

if.end7:                                          ; preds = %for.end, %if.end
  %19 = load %struct.netfront_stats*, %struct.netfront_stats** %pcpu_stats, align 8, !dbg !10752
  store %struct.netfront_stats* %19, %struct.netfront_stats** %tmp8, align 8, !dbg !10753
  %20 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp8, align 8, !dbg !10752
  %21 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !10773
  %rx_stats = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %21, i32 0, i32 4, !dbg !10774
  store %struct.netfront_stats* %20, %struct.netfront_stats** %rx_stats, align 8, !dbg !10775
  %22 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !10776
  %rx_stats9 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %22, i32 0, i32 4, !dbg !10778
  %23 = load %struct.netfront_stats*, %struct.netfront_stats** %rx_stats9, align 8, !dbg !10778
  %cmp10 = icmp eq %struct.netfront_stats* %23, null, !dbg !10779
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10780

if.then11:                                        ; preds = %if.end7
  br label %exit, !dbg !10781

if.end12:                                         ; preds = %if.end7
  call void @llvm.dbg.declare(metadata %struct.netfront_stats** %pcpu_stats13, metadata !10782, metadata !DIExpression()), !dbg !10784
  %call14 = call i8* @__alloc_percpu_gfp(i64 16, i64 8, i32 3264) #12, !dbg !10784
  %24 = bitcast i8* %call14 to %struct.netfront_stats*, !dbg !10784
  store %struct.netfront_stats* %24, %struct.netfront_stats** %pcpu_stats13, align 8, !dbg !10784
  %25 = load %struct.netfront_stats*, %struct.netfront_stats** %pcpu_stats13, align 8, !dbg !10785
  %tobool15 = icmp ne %struct.netfront_stats* %25, null, !dbg !10785
  br i1 %tobool15, label %if.then16, label %if.end31, !dbg !10784

if.then16:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata i32* %__cpu17, metadata !10787, metadata !DIExpression()), !dbg !10789
  store i32 0, i32* %__cpu17, align 4, !dbg !10790
  br label %for.cond18, !dbg !10790

for.cond18:                                       ; preds = %for.inc28, %if.then16
  %26 = load i32, i32* %__cpu17, align 4, !dbg !10792
  %cmp19 = icmp slt i32 %26, 1, !dbg !10792
  br i1 %cmp19, label %for.body20, label %for.end30, !dbg !10790

for.body20:                                       ; preds = %for.cond18
  call void @llvm.dbg.declare(metadata %struct.netfront_stats** %stat21, metadata !10794, metadata !DIExpression()), !dbg !10796
  %27 = load i32, i32* %__cpu17, align 4, !dbg !10797
  br label %do.body23, !dbg !10799

do.body23:                                        ; preds = %for.body20
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify24, metadata !10801, metadata !DIExpression()), !dbg !10803
  store i8* null, i8** %__vpp_verify24, align 8, !dbg !10803
  %28 = load i8*, i8** %__vpp_verify24, align 8, !dbg !10803
  br label %do.end25, !dbg !10803

do.end25:                                         ; preds = %do.body23
  %29 = load %struct.netfront_stats*, %struct.netfront_stats** %pcpu_stats13, align 8, !dbg !10799
  store %struct.netfront_stats* %29, %struct.netfront_stats** %tmp26, align 8, !dbg !10803
  %30 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp26, align 8, !dbg !10799
  store %struct.netfront_stats* %30, %struct.netfront_stats** %tmp22, align 8, !dbg !10797
  %31 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp22, align 8, !dbg !10797
  store %struct.netfront_stats* %31, %struct.netfront_stats** %stat21, align 8, !dbg !10796
  %32 = load %struct.netfront_stats*, %struct.netfront_stats** %stat21, align 8, !dbg !10796
  %syncp27 = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %32, i32 0, i32 2, !dbg !10796
  call void @u64_stats_init(%struct.u64_stats_sync* %syncp27) #12, !dbg !10796
  br label %for.inc28, !dbg !10796

for.inc28:                                        ; preds = %do.end25
  %33 = load i32, i32* %__cpu17, align 4, !dbg !10792
  %inc29 = add i32 %33, 1, !dbg !10792
  store i32 %inc29, i32* %__cpu17, align 4, !dbg !10792
  br label %for.cond18, !dbg !10792, !llvm.loop !10804

for.end30:                                        ; preds = %for.cond18
  br label %if.end31, !dbg !10789

if.end31:                                         ; preds = %for.end30, %if.end12
  %34 = load %struct.netfront_stats*, %struct.netfront_stats** %pcpu_stats13, align 8, !dbg !10784
  store %struct.netfront_stats* %34, %struct.netfront_stats** %tmp32, align 8, !dbg !10785
  %35 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp32, align 8, !dbg !10784
  %36 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !10805
  %tx_stats = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %36, i32 0, i32 5, !dbg !10806
  store %struct.netfront_stats* %35, %struct.netfront_stats** %tx_stats, align 8, !dbg !10807
  %37 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !10808
  %tx_stats33 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %37, i32 0, i32 5, !dbg !10810
  %38 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats33, align 8, !dbg !10810
  %cmp34 = icmp eq %struct.netfront_stats* %38, null, !dbg !10811
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !10812

if.then35:                                        ; preds = %if.end31
  br label %exit, !dbg !10813

if.end36:                                         ; preds = %if.end31
  %39 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10814
  %netdev_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %39, i32 0, i32 32, !dbg !10815
  store %struct.net_device_ops* @xennet_netdev_ops, %struct.net_device_ops** %netdev_ops, align 8, !dbg !10816
  %40 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10817
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %40, i32 0, i32 15, !dbg !10818
  store i64 1099511758850, i64* %features, align 8, !dbg !10819
  %41 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10820
  %hw_features = getelementptr inbounds %struct.net_device, %struct.net_device* %41, i32 0, i32 16, !dbg !10821
  store i64 1114129, i64* %hw_features, align 8, !dbg !10822
  %42 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10823
  %hw_features37 = getelementptr inbounds %struct.net_device, %struct.net_device* %42, i32 0, i32 16, !dbg !10824
  %43 = load i64, i64* %hw_features37, align 8, !dbg !10824
  %44 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10825
  %features38 = getelementptr inbounds %struct.net_device, %struct.net_device* %44, i32 0, i32 15, !dbg !10826
  %45 = load i64, i64* %features38, align 8, !dbg !10827
  %or = or i64 %45, %43, !dbg !10827
  store i64 %or, i64* %features38, align 8, !dbg !10827
  %46 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10828
  %ethtool_ops = getelementptr inbounds %struct.net_device, %struct.net_device* %46, i32 0, i32 33, !dbg !10829
  store %struct.ethtool_ops* @xennet_ethtool_ops, %struct.ethtool_ops** %ethtool_ops, align 8, !dbg !10830
  %47 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10831
  %min_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %47, i32 0, i32 45, !dbg !10832
  store i32 68, i32* %min_mtu, align 4, !dbg !10833
  %48 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10834
  %max_mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %48, i32 0, i32 46, !dbg !10835
  store i32 65535, i32* %max_mtu, align 8, !dbg !10836
  %49 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10837
  %dev39 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %49, i32 0, i32 5, !dbg !10837
  %50 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10837
  %dev40 = getelementptr inbounds %struct.net_device, %struct.net_device* %50, i32 0, i32 106, !dbg !10837
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev40, i32 0, i32 1, !dbg !10837
  store %struct.device* %dev39, %struct.device** %parent, align 8, !dbg !10837
  %51 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10838
  %52 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !10839
  %netdev41 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %52, i32 0, i32 1, !dbg !10840
  store %struct.net_device* %51, %struct.net_device** %netdev41, align 8, !dbg !10841
  %53 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !10842
  %netfront_xdp_enabled = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %53, i32 0, i32 7, !dbg !10843
  store i8 0, i8* %netfront_xdp_enabled, align 1, !dbg !10844
  %54 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10845
  call void @netif_carrier_off(%struct.net_device* %54) #12, !dbg !10846
  br label %do.body42, !dbg !10847

do.body42:                                        ; preds = %do.cond, %if.end36
  %55 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10848
  %call43 = call i32 @xenbus_switch_state(%struct.xenbus_device* %55, i32 1) #12, !dbg !10850
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !10851, metadata !DIExpression()), !dbg !10853
  store i64 1250, i64* %__ret, align 8, !dbg !10853
  br label %do.body44, !dbg !10853

do.body44:                                        ; preds = %do.body42
  br label %do.body45, !dbg !10854

do.body45:                                        ; preds = %do.body44
  br label %do.end46, !dbg !10856

do.end46:                                         ; preds = %do.body45
  br label %do.end47, !dbg !10854

do.end47:                                         ; preds = %do.end46
  call void @llvm.dbg.declare(metadata i8* %__cond, metadata !10858, metadata !DIExpression()), !dbg !10861
  %56 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10861
  %otherend = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %56, i32 0, i32 2, !dbg !10861
  %57 = load i8*, i8** %otherend, align 8, !dbg !10861
  %call48 = call i32 @xenbus_read_driver_state(i8* %57) #12, !dbg !10861
  %cmp49 = icmp ne i32 %call48, 6, !dbg !10861
  br i1 %cmp49, label %land.rhs, label %land.end, !dbg !10861

land.rhs:                                         ; preds = %do.end47
  %58 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10861
  %otherend50 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %58, i32 0, i32 2, !dbg !10861
  %59 = load i8*, i8** %otherend50, align 8, !dbg !10861
  %call51 = call i32 @xenbus_read_driver_state(i8* %59) #12, !dbg !10861
  %cmp52 = icmp ne i32 %call51, 0, !dbg !10861
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.end47
  %60 = phi i1 [ false, %do.end47 ], [ %cmp52, %land.rhs ], !dbg !10862
  %frombool = zext i1 %60 to i8, !dbg !10861
  store i8 %frombool, i8* %__cond, align 1, !dbg !10861
  %61 = load i8, i8* %__cond, align 1, !dbg !10863
  %tobool53 = trunc i8 %61 to i1, !dbg !10863
  br i1 %tobool53, label %land.lhs.true, label %if.end56, !dbg !10863

land.lhs.true:                                    ; preds = %land.end
  %62 = load i64, i64* %__ret, align 8, !dbg !10863
  %tobool54 = icmp ne i64 %62, 0, !dbg !10863
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !10861

if.then55:                                        ; preds = %land.lhs.true
  store i64 1, i64* %__ret, align 8, !dbg !10863
  br label %if.end56, !dbg !10863

if.end56:                                         ; preds = %if.then55, %land.lhs.true, %land.end
  %63 = load i8, i8* %__cond, align 1, !dbg !10861
  %tobool58 = trunc i8 %63 to i1, !dbg !10861
  br i1 %tobool58, label %lor.end, label %lor.rhs, !dbg !10861

lor.rhs:                                          ; preds = %if.end56
  %64 = load i64, i64* %__ret, align 8, !dbg !10861
  %tobool59 = icmp ne i64 %64, 0, !dbg !10861
  %lnot = xor i1 %tobool59, true, !dbg !10861
  br label %lor.end, !dbg !10861

lor.end:                                          ; preds = %lor.rhs, %if.end56
  %65 = phi i1 [ true, %if.end56 ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %65 to i32, !dbg !10861
  store i32 %lor.ext, i32* %tmp57, align 4, !dbg !10863
  %66 = load i32, i32* %tmp57, align 4, !dbg !10861
  %tobool60 = icmp ne i32 %66, 0, !dbg !10865
  br i1 %tobool60, label %if.end93, label %if.then61, !dbg !10853

if.then61:                                        ; preds = %lor.end
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !10866, metadata !DIExpression()), !dbg !10868
  call void @llvm.dbg.declare(metadata i64* %__ret62, metadata !10869, metadata !DIExpression()), !dbg !10868
  store i64 1250, i64* %__ret62, align 8, !dbg !10868
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #12, !dbg !10868
  br label %for.cond63, !dbg !10868

for.cond63:                                       ; preds = %if.end89, %if.then61
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !10870, metadata !DIExpression()), !dbg !10874
  %call64 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* @module_wq, %struct.wait_queue_entry* %__wq_entry, i32 2) #12, !dbg !10874
  store i64 %call64, i64* %__int, align 8, !dbg !10874
  call void @llvm.dbg.declare(metadata i8* %__cond65, metadata !10875, metadata !DIExpression()), !dbg !10878
  %67 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10878
  %otherend66 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %67, i32 0, i32 2, !dbg !10878
  %68 = load i8*, i8** %otherend66, align 8, !dbg !10878
  %call67 = call i32 @xenbus_read_driver_state(i8* %68) #12, !dbg !10878
  %cmp68 = icmp ne i32 %call67, 6, !dbg !10878
  br i1 %cmp68, label %land.rhs69, label %land.end73, !dbg !10878

land.rhs69:                                       ; preds = %for.cond63
  %69 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !10878
  %otherend70 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %69, i32 0, i32 2, !dbg !10878
  %70 = load i8*, i8** %otherend70, align 8, !dbg !10878
  %call71 = call i32 @xenbus_read_driver_state(i8* %70) #12, !dbg !10878
  %cmp72 = icmp ne i32 %call71, 0, !dbg !10878
  br label %land.end73

land.end73:                                       ; preds = %land.rhs69, %for.cond63
  %71 = phi i1 [ false, %for.cond63 ], [ %cmp72, %land.rhs69 ], !dbg !10879
  %frombool74 = zext i1 %71 to i8, !dbg !10878
  store i8 %frombool74, i8* %__cond65, align 1, !dbg !10878
  %72 = load i8, i8* %__cond65, align 1, !dbg !10880
  %tobool75 = trunc i8 %72 to i1, !dbg !10880
  br i1 %tobool75, label %land.lhs.true76, label %if.end79, !dbg !10880

land.lhs.true76:                                  ; preds = %land.end73
  %73 = load i64, i64* %__ret62, align 8, !dbg !10880
  %tobool77 = icmp ne i64 %73, 0, !dbg !10880
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !10878

if.then78:                                        ; preds = %land.lhs.true76
  store i64 1, i64* %__ret62, align 8, !dbg !10880
  br label %if.end79, !dbg !10880

if.end79:                                         ; preds = %if.then78, %land.lhs.true76, %land.end73
  %74 = load i8, i8* %__cond65, align 1, !dbg !10878
  %tobool81 = trunc i8 %74 to i1, !dbg !10878
  br i1 %tobool81, label %lor.end85, label %lor.rhs82, !dbg !10878

lor.rhs82:                                        ; preds = %if.end79
  %75 = load i64, i64* %__ret62, align 8, !dbg !10878
  %tobool83 = icmp ne i64 %75, 0, !dbg !10878
  %lnot84 = xor i1 %tobool83, true, !dbg !10878
  br label %lor.end85, !dbg !10878

lor.end85:                                        ; preds = %lor.rhs82, %if.end79
  %76 = phi i1 [ true, %if.end79 ], [ %lnot84, %lor.rhs82 ]
  %lor.ext86 = zext i1 %76 to i32, !dbg !10878
  store i32 %lor.ext86, i32* %tmp80, align 4, !dbg !10880
  %77 = load i32, i32* %tmp80, align 4, !dbg !10878
  %tobool87 = icmp ne i32 %77, 0, !dbg !10882
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !10874

if.then88:                                        ; preds = %lor.end85
  br label %for.end91, !dbg !10882

if.end89:                                         ; preds = %lor.end85
  %78 = load i64, i64* %__ret62, align 8, !dbg !10874
  %call90 = call i64 @schedule_timeout(i64 %78) #12, !dbg !10874
  store i64 %call90, i64* %__ret62, align 8, !dbg !10874
  br label %for.cond63, !dbg !10883, !llvm.loop !10884

for.end91:                                        ; preds = %if.then88
  call void @finish_wait(%struct.wait_queue_head* @module_wq, %struct.wait_queue_entry* %__wq_entry) #12, !dbg !10868
  br label %__out, !dbg !10868

__out:                                            ; preds = %for.end91
  call void @llvm.dbg.label(metadata !10886), !dbg !10868
  %79 = load i64, i64* %__ret62, align 8, !dbg !10868
  store i64 %79, i64* %tmp92, align 8, !dbg !10868
  %80 = load i64, i64* %tmp92, align 8, !dbg !10868
  store i64 %80, i64* %__ret, align 8, !dbg !10865
  br label %if.end93, !dbg !10865

if.end93:                                         ; preds = %__out, %lor.end
  %81 = load i64, i64* %__ret, align 8, !dbg !10853
  store i64 %81, i64* %tmp94, align 8, !dbg !10865
  %82 = load i64, i64* %tmp94, align 8, !dbg !10853
  %conv = trunc i64 %82 to i32, !dbg !10887
  store i32 %conv, i32* %err, align 4, !dbg !10888
  br label %do.cond, !dbg !10889

do.cond:                                          ; preds = %if.end93
  %83 = load i32, i32* %err, align 4, !dbg !10890
  %tobool95 = icmp ne i32 %83, 0, !dbg !10891
  %lnot96 = xor i1 %tobool95, true, !dbg !10891
  br i1 %lnot96, label %do.body42, label %do.end97, !dbg !10889, !llvm.loop !10892

do.end97:                                         ; preds = %do.cond
  %84 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10894
  store %struct.net_device* %84, %struct.net_device** %retval, align 8, !dbg !10895
  br label %return, !dbg !10895

exit:                                             ; preds = %if.then35, %if.then11
  call void @llvm.dbg.label(metadata !10896), !dbg !10897
  %85 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10898
  call void @xennet_free_netdev(%struct.net_device* %85) #12, !dbg !10899
  %86 = load i32, i32* %err, align 4, !dbg !10900
  %conv98 = sext i32 %86 to i64, !dbg !10900
  %call99 = call i8* @ERR_PTR(i64 %conv98) #12, !dbg !10901
  %87 = bitcast i8* %call99 to %struct.net_device*, !dbg !10901
  store %struct.net_device* %87, %struct.net_device** %retval, align 8, !dbg !10902
  br label %return, !dbg !10902

return:                                           ; preds = %exit, %do.end97, %if.then
  %88 = load %struct.net_device*, %struct.net_device** %retval, align 8, !dbg !10903
  ret %struct.net_device* %88, !dbg !10903
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #3 !dbg !10904 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10908, metadata !DIExpression()), !dbg !10909
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10910
  %1 = ptrtoint i8* %0 to i64, !dbg !10910
  %2 = inttoptr i64 %1 to i8*, !dbg !10910
  %3 = ptrtoint i8* %2 to i64, !dbg !10910
  %cmp = icmp uge i64 %3, -4095, !dbg !10910
  %lnot = xor i1 %cmp, true, !dbg !10910
  %lnot1 = xor i1 %lnot, true, !dbg !10910
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10910
  %conv = sext i32 %lnot.ext to i64, !dbg !10910
  %tobool = icmp ne i64 %conv, 0, !dbg !10910
  ret i1 %tobool, !dbg !10911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #3 !dbg !10912 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10915, metadata !DIExpression()), !dbg !10916
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10917
  %1 = ptrtoint i8* %0 to i64, !dbg !10918
  ret i64 %1, !dbg !10919
}

; Function Attrs: noredzone
declare dso_local void @xenbus_dev_fatal(%struct.xenbus_device*, i32, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @netdev_priv(%struct.net_device* %dev) #3 !dbg !10920 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10923, metadata !DIExpression()), !dbg !10924
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10925
  %1 = bitcast %struct.net_device* %0 to i8*, !dbg !10926
  %add.ptr = getelementptr i8, i8* %1, i64 1984, !dbg !10927
  ret i8* %add.ptr, !dbg !10928
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #3 !dbg !10929 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10932, metadata !DIExpression()), !dbg !10933
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10934, metadata !DIExpression()), !dbg !10935
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10936
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10937
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !10938
  store i8* %0, i8** %driver_data, align 8, !dbg !10939
  ret void, !dbg !10940
}

; Function Attrs: noredzone
declare dso_local %struct.net_device* @alloc_etherdev_mqs(i32, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #3 !dbg !10941 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !10944, metadata !DIExpression()), !dbg !10945
  %0 = load i64, i64* %error.addr, align 8, !dbg !10946
  %1 = inttoptr i64 %0 to i8*, !dbg !10947
  ret i8* %1, !dbg !10948
}

; Function Attrs: noredzone
declare dso_local i8* @__alloc_percpu_gfp(i64, i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @u64_stats_init(%struct.u64_stats_sync* %syncp) #3 !dbg !10949 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !10953, metadata !DIExpression()), !dbg !10954
  ret void, !dbg !10955
}

; Function Attrs: noredzone
declare dso_local void @netif_carrier_off(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local i32 @xenbus_switch_state(%struct.xenbus_device*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @xenbus_read_driver_state(i8*) #1

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #1

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #1

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout(i64) #1

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_free_netdev(%struct.net_device* %netdev) #3 !dbg !10956 {
entry:
  %netdev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.netfront_info*, align 8
  store %struct.net_device* %netdev, %struct.net_device** %netdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev.addr, metadata !10957, metadata !DIExpression()), !dbg !10958
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %np, metadata !10959, metadata !DIExpression()), !dbg !10960
  %0 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !10961
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !10962
  %1 = bitcast i8* %call to %struct.netfront_info*, !dbg !10962
  store %struct.netfront_info* %1, %struct.netfront_info** %np, align 8, !dbg !10960
  %2 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !10963
  %rx_stats = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %2, i32 0, i32 4, !dbg !10964
  %3 = load %struct.netfront_stats*, %struct.netfront_stats** %rx_stats, align 8, !dbg !10964
  %4 = bitcast %struct.netfront_stats* %3 to i8*, !dbg !10963
  call void @free_percpu(i8* %4) #12, !dbg !10965
  %5 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !10966
  %tx_stats = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %5, i32 0, i32 5, !dbg !10967
  %6 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats, align 8, !dbg !10967
  %7 = bitcast %struct.netfront_stats* %6 to i8*, !dbg !10966
  call void @free_percpu(i8* %7) #12, !dbg !10968
  %8 = load %struct.net_device*, %struct.net_device** %netdev.addr, align 8, !dbg !10969
  call void @free_netdev(%struct.net_device* %8) #12, !dbg !10970
  ret void, !dbg !10971
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_open(%struct.net_device* %dev) #3 !dbg !10972 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.netfront_info*, align 8
  %num_queues = alloca i32, align 4
  %i = alloca i32, align 4
  %queue = alloca %struct.netfront_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10973, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %np, metadata !10975, metadata !DIExpression()), !dbg !10976
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10977
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !10978
  %1 = bitcast i8* %call to %struct.netfront_info*, !dbg !10978
  store %struct.netfront_info* %1, %struct.netfront_info** %np, align 8, !dbg !10976
  call void @llvm.dbg.declare(metadata i32* %num_queues, metadata !10979, metadata !DIExpression()), !dbg !10980
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10981
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 88, !dbg !10982
  %3 = load i32, i32* %real_num_tx_queues, align 4, !dbg !10982
  store i32 %3, i32* %num_queues, align 4, !dbg !10980
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10983, metadata !DIExpression()), !dbg !10984
  store i32 0, i32* %i, align 4, !dbg !10984
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue, metadata !10985, metadata !DIExpression()), !dbg !10986
  store %struct.netfront_queue* null, %struct.netfront_queue** %queue, align 8, !dbg !10986
  %4 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !10987
  %queues = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %4, i32 0, i32 3, !dbg !10989
  %5 = load %struct.netfront_queue*, %struct.netfront_queue** %queues, align 8, !dbg !10989
  %tobool = icmp ne %struct.netfront_queue* %5, null, !dbg !10987
  br i1 %tobool, label %if.end, label %if.then, !dbg !10990

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !10991
  br label %return, !dbg !10991

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !10992
  br label %for.cond, !dbg !10994

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !10995
  %7 = load i32, i32* %num_queues, align 4, !dbg !10997
  %cmp = icmp ult i32 %6, %7, !dbg !10998
  br i1 %cmp, label %for.body, label %for.end, !dbg !10999

for.body:                                         ; preds = %for.cond
  %8 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !11000
  %queues1 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %8, i32 0, i32 3, !dbg !11002
  %9 = load %struct.netfront_queue*, %struct.netfront_queue** %queues1, align 8, !dbg !11002
  %10 = load i32, i32* %i, align 4, !dbg !11003
  %idxprom = zext i32 %10 to i64, !dbg !11000
  %arrayidx = getelementptr %struct.netfront_queue, %struct.netfront_queue* %9, i64 %idxprom, !dbg !11000
  store %struct.netfront_queue* %arrayidx, %struct.netfront_queue** %queue, align 8, !dbg !11004
  %11 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11005
  %napi = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %11, i32 0, i32 4, !dbg !11006
  call void @napi_enable(%struct.napi_struct* %napi) #12, !dbg !11007
  %12 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11008
  %rx_lock = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %12, i32 0, i32 19, !dbg !11009
  call void @spin_lock_bh(%struct.spinlock* %rx_lock) #12, !dbg !11010
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11011
  %call2 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %13) #12, !dbg !11013
  br i1 %call2, label %if.then3, label %if.end13, !dbg !11014

if.then3:                                         ; preds = %for.body
  %14 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11015
  call void @xennet_alloc_rx_buffers(%struct.netfront_queue* %14) #12, !dbg !11017
  %15 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11018
  %rx = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %15, i32 0, i32 20, !dbg !11019
  %rsp_cons = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx, i32 0, i32 1, !dbg !11020
  %16 = load i32, i32* %rsp_cons, align 4, !dbg !11020
  %add = add i32 %16, 1, !dbg !11021
  %17 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11022
  %rx4 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %17, i32 0, i32 20, !dbg !11023
  %sring = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx4, i32 0, i32 3, !dbg !11024
  %18 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring, align 8, !dbg !11024
  %rsp_event = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %18, i32 0, i32 3, !dbg !11025
  store i32 %add, i32* %rsp_event, align 4, !dbg !11026
  %19 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11027
  %rx5 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %19, i32 0, i32 20, !dbg !11027
  %sring6 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx5, i32 0, i32 3, !dbg !11027
  %20 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring6, align 8, !dbg !11027
  %rsp_prod = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %20, i32 0, i32 2, !dbg !11027
  %21 = load i32, i32* %rsp_prod, align 4, !dbg !11027
  %22 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11027
  %rx7 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %22, i32 0, i32 20, !dbg !11027
  %rsp_cons8 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx7, i32 0, i32 1, !dbg !11027
  %23 = load i32, i32* %rsp_cons8, align 4, !dbg !11027
  %sub = sub i32 %21, %23, !dbg !11027
  %tobool9 = icmp ne i32 %sub, 0, !dbg !11027
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !11029

if.then10:                                        ; preds = %if.then3
  %24 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11030
  %napi11 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %24, i32 0, i32 4, !dbg !11031
  call void @napi_schedule(%struct.napi_struct* %napi11) #12, !dbg !11032
  br label %if.end12, !dbg !11032

if.end12:                                         ; preds = %if.then10, %if.then3
  br label %if.end13, !dbg !11033

if.end13:                                         ; preds = %if.end12, %for.body
  %25 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11034
  %rx_lock14 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %25, i32 0, i32 19, !dbg !11035
  call void @spin_unlock_bh(%struct.spinlock* %rx_lock14) #12, !dbg !11036
  br label %for.inc, !dbg !11037

for.inc:                                          ; preds = %if.end13
  %26 = load i32, i32* %i, align 4, !dbg !11038
  %inc = add i32 %26, 1, !dbg !11038
  store i32 %inc, i32* %i, align 4, !dbg !11038
  br label %for.cond, !dbg !11039, !llvm.loop !11040

for.end:                                          ; preds = %for.cond
  %27 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11042
  call void @netif_tx_start_all_queues(%struct.net_device* %27) #12, !dbg !11043
  store i32 0, i32* %retval, align 4, !dbg !11044
  br label %return, !dbg !11044

return:                                           ; preds = %for.end, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !11045
  ret i32 %28, !dbg !11045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_close(%struct.net_device* %dev) #3 !dbg !11046 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.netfront_info*, align 8
  %num_queues = alloca i32, align 4
  %i = alloca i32, align 4
  %queue = alloca %struct.netfront_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11047, metadata !DIExpression()), !dbg !11048
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %np, metadata !11049, metadata !DIExpression()), !dbg !11050
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11051
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !11052
  %1 = bitcast i8* %call to %struct.netfront_info*, !dbg !11052
  store %struct.netfront_info* %1, %struct.netfront_info** %np, align 8, !dbg !11050
  call void @llvm.dbg.declare(metadata i32* %num_queues, metadata !11053, metadata !DIExpression()), !dbg !11054
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11055
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 88, !dbg !11056
  %3 = load i32, i32* %real_num_tx_queues, align 4, !dbg !11056
  store i32 %3, i32* %num_queues, align 4, !dbg !11054
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11057, metadata !DIExpression()), !dbg !11058
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue, metadata !11059, metadata !DIExpression()), !dbg !11060
  %4 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !11061
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %4, i32 0, i32 1, !dbg !11062
  %5 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11062
  call void @netif_tx_stop_all_queues(%struct.net_device* %5) #12, !dbg !11063
  store i32 0, i32* %i, align 4, !dbg !11064
  br label %for.cond, !dbg !11066

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !11067
  %7 = load i32, i32* %num_queues, align 4, !dbg !11069
  %cmp = icmp ult i32 %6, %7, !dbg !11070
  br i1 %cmp, label %for.body, label %for.end, !dbg !11071

for.body:                                         ; preds = %for.cond
  %8 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !11072
  %queues = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %8, i32 0, i32 3, !dbg !11074
  %9 = load %struct.netfront_queue*, %struct.netfront_queue** %queues, align 8, !dbg !11074
  %10 = load i32, i32* %i, align 4, !dbg !11075
  %idxprom = zext i32 %10 to i64, !dbg !11072
  %arrayidx = getelementptr %struct.netfront_queue, %struct.netfront_queue* %9, i64 %idxprom, !dbg !11072
  store %struct.netfront_queue* %arrayidx, %struct.netfront_queue** %queue, align 8, !dbg !11076
  %11 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11077
  %napi = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %11, i32 0, i32 4, !dbg !11078
  call void @napi_disable(%struct.napi_struct* %napi) #12, !dbg !11079
  br label %for.inc, !dbg !11080

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !11081
  %inc = add i32 %12, 1, !dbg !11081
  store i32 %inc, i32* %i, align 4, !dbg !11081
  br label %for.cond, !dbg !11082, !llvm.loop !11083

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !11085
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_start_xmit(%struct.sk_buff* %skb, %struct.net_device* %dev) #3 !dbg !11086 {
entry:
  %lock.addr.i212 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i212, metadata !11087, metadata !DIExpression()), !dbg !11092
  %flags.addr.i213 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i213, metadata !11094, metadata !DIExpression()), !dbg !11095
  %tmp.i214 = alloca i32, align 4
  %tmp8.i215 = alloca i32, align 4
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !11096, metadata !DIExpression()), !dbg !11100
  %lock.addr.i210 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i210, metadata !11087, metadata !DIExpression()), !dbg !11103
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !11094, metadata !DIExpression()), !dbg !11107
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11108, metadata !DIExpression()), !dbg !11113
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.netfront_info*, align 8
  %tx_stats = alloca %struct.netfront_stats*, align 8
  %tmp = alloca %struct.netfront_stats*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca %struct.netfront_stats*, align 8
  %tx = alloca %struct.xen_netif_tx_request*, align 8
  %first_tx = alloca %struct.xen_netif_tx_request*, align 8
  %i = alloca i32, align 4
  %notify = alloca i32, align 4
  %slots = alloca i32, align 4
  %page = alloca %struct.page*, align 8
  %offset = alloca i32, align 4
  %len = alloca i32, align 4
  %flags = alloca i64, align 8
  %queue = alloca %struct.netfront_queue*, align 8
  %num_queues = alloca i32, align 4
  %queue_index = alloca i16, align 2
  %nskb = alloca %struct.sk_buff*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp65 = alloca i32, align 4
  %__dummy69 = alloca i64, align 8
  %__dummy270 = alloca i64, align 8
  %tmp73 = alloca i32, align 4
  %gso = alloca %struct.xen_netif_extra_info*, align 8
  %frag = alloca %struct.bio_vec*, align 8
  %__old = alloca i32, align 4
  %__new = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !11120, metadata !DIExpression()), !dbg !11121
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11122, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %np, metadata !11124, metadata !DIExpression()), !dbg !11125
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11126
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !11127
  %1 = bitcast i8* %call to %struct.netfront_info*, !dbg !11127
  store %struct.netfront_info* %1, %struct.netfront_info** %np, align 8, !dbg !11125
  call void @llvm.dbg.declare(metadata %struct.netfront_stats** %tx_stats, metadata !11128, metadata !DIExpression()), !dbg !11129
  br label %do.body, !dbg !11130

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !11133, metadata !DIExpression()), !dbg !11135
  store i8* null, i8** %__vpp_verify, align 8, !dbg !11135
  %2 = load i8*, i8** %__vpp_verify, align 8, !dbg !11135
  br label %do.end, !dbg !11135

do.end:                                           ; preds = %do.body
  %3 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !11130
  %tx_stats2 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %3, i32 0, i32 5, !dbg !11130
  %4 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats2, align 8, !dbg !11130
  store %struct.netfront_stats* %4, %struct.netfront_stats** %tmp1, align 8, !dbg !11135
  %5 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp1, align 8, !dbg !11130
  store %struct.netfront_stats* %5, %struct.netfront_stats** %tmp, align 8, !dbg !11136
  %6 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp, align 8, !dbg !11136
  store %struct.netfront_stats* %6, %struct.netfront_stats** %tx_stats, align 8, !dbg !11129
  call void @llvm.dbg.declare(metadata %struct.xen_netif_tx_request** %tx, metadata !11137, metadata !DIExpression()), !dbg !11139
  call void @llvm.dbg.declare(metadata %struct.xen_netif_tx_request** %first_tx, metadata !11140, metadata !DIExpression()), !dbg !11141
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11142, metadata !DIExpression()), !dbg !11143
  call void @llvm.dbg.declare(metadata i32* %notify, metadata !11144, metadata !DIExpression()), !dbg !11145
  call void @llvm.dbg.declare(metadata i32* %slots, metadata !11146, metadata !DIExpression()), !dbg !11147
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !11148, metadata !DIExpression()), !dbg !11149
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !11150, metadata !DIExpression()), !dbg !11151
  call void @llvm.dbg.declare(metadata i32* %len, metadata !11152, metadata !DIExpression()), !dbg !11153
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11154, metadata !DIExpression()), !dbg !11155
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue, metadata !11156, metadata !DIExpression()), !dbg !11157
  store %struct.netfront_queue* null, %struct.netfront_queue** %queue, align 8, !dbg !11157
  call void @llvm.dbg.declare(metadata i32* %num_queues, metadata !11158, metadata !DIExpression()), !dbg !11159
  %7 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11160
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %7, i32 0, i32 88, !dbg !11161
  %8 = load i32, i32* %real_num_tx_queues, align 4, !dbg !11161
  store i32 %8, i32* %num_queues, align 4, !dbg !11159
  call void @llvm.dbg.declare(metadata i16* %queue_index, metadata !11162, metadata !DIExpression()), !dbg !11163
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %nskb, metadata !11164, metadata !DIExpression()), !dbg !11165
  %9 = load i32, i32* %num_queues, align 4, !dbg !11166
  %cmp = icmp ult i32 %9, 1, !dbg !11168
  br i1 %cmp, label %if.then, label %if.end, !dbg !11169

if.then:                                          ; preds = %do.end
  br label %drop, !dbg !11170

if.end:                                           ; preds = %do.end
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11171
  %call3 = call zeroext i16 @skb_get_queue_mapping(%struct.sk_buff* %10) #12, !dbg !11172
  store i16 %call3, i16* %queue_index, align 2, !dbg !11173
  %11 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !11174
  %queues = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %11, i32 0, i32 3, !dbg !11175
  %12 = load %struct.netfront_queue*, %struct.netfront_queue** %queues, align 8, !dbg !11175
  %13 = load i16, i16* %queue_index, align 2, !dbg !11176
  %idxprom = zext i16 %13 to i64, !dbg !11174
  %arrayidx = getelementptr %struct.netfront_queue, %struct.netfront_queue* %12, i64 %idxprom, !dbg !11174
  store %struct.netfront_queue* %arrayidx, %struct.netfront_queue** %queue, align 8, !dbg !11177
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11178
  %len4 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %14, i32 0, i32 5, !dbg !11178
  %15 = load i32, i32* %len4, align 8, !dbg !11178
  %cmp5 = icmp ugt i32 %15, 65535, !dbg !11178
  %lnot = xor i1 %cmp5, true, !dbg !11178
  %lnot6 = xor i1 %lnot, true, !dbg !11178
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !11178
  %conv = sext i32 %lnot.ext to i64, !dbg !11178
  %tobool = icmp ne i64 %conv, 0, !dbg !11178
  br i1 %tobool, label %if.then7, label %if.end16, !dbg !11180

if.then7:                                         ; preds = %if.end
  br label %do.body8, !dbg !11181

do.body8:                                         ; preds = %if.then7
  %call9 = call i32 @net_ratelimit() #12, !dbg !11183
  %tobool10 = icmp ne i32 %call9, 0, !dbg !11183
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !11186

if.then11:                                        ; preds = %do.body8
  %16 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11183
  %len12 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %16, i32 0, i32 5, !dbg !11183
  %17 = load i32, i32* %len12, align 8, !dbg !11183
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.5, i64 0, i64 0), i32 %17) #13, !dbg !11183
  br label %if.end14, !dbg !11183

if.end14:                                         ; preds = %if.then11, %do.body8
  br label %do.end15, !dbg !11186

do.end15:                                         ; preds = %if.end14
  br label %drop, !dbg !11187

if.end16:                                         ; preds = %if.end
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11188
  %call17 = call i32 @xennet_count_skb_slots(%struct.sk_buff* %18) #12, !dbg !11189
  store i32 %call17, i32* %slots, align 4, !dbg !11190
  %19 = load i32, i32* %slots, align 4, !dbg !11191
  %conv18 = sext i32 %19 to i64, !dbg !11191
  %cmp19 = icmp ugt i64 %conv18, 18, !dbg !11191
  %lnot21 = xor i1 %cmp19, true, !dbg !11191
  %lnot23 = xor i1 %lnot21, true, !dbg !11191
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !11191
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !11191
  %tobool26 = icmp ne i64 %conv25, 0, !dbg !11191
  br i1 %tobool26, label %if.then27, label %if.end34, !dbg !11193

if.then27:                                        ; preds = %if.end16
  br label %do.body28, !dbg !11194

do.body28:                                        ; preds = %if.then27
  br label %do.end29, !dbg !11196

do.end29:                                         ; preds = %do.body28
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11198
  %call30 = call i32 @skb_linearize(%struct.sk_buff* %20) #12, !dbg !11200
  %tobool31 = icmp ne i32 %call30, 0, !dbg !11200
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !11201

if.then32:                                        ; preds = %do.end29
  br label %drop, !dbg !11202

if.end33:                                         ; preds = %do.end29
  br label %if.end34, !dbg !11203

if.end34:                                         ; preds = %if.end33, %if.end16
  %21 = load i64, i64* @vmemmap_base, align 8, !dbg !11204
  %22 = inttoptr i64 %21 to %struct.page*, !dbg !11204
  %23 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11204
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %23, i32 0, i32 37, !dbg !11204
  %24 = load i8*, i8** %data, align 8, !dbg !11204
  %25 = ptrtoint i8* %24 to i64, !dbg !11204
  %call35 = call i64 @__phys_addr_nodebug(i64 %25) #12, !dbg !11204
  %shr = lshr i64 %call35, 12, !dbg !11204
  %add.ptr = getelementptr %struct.page, %struct.page* %22, i64 %shr, !dbg !11204
  store %struct.page* %add.ptr, %struct.page** %page, align 8, !dbg !11205
  %26 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11206
  %data36 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %26, i32 0, i32 37, !dbg !11206
  %27 = load i8*, i8** %data36, align 8, !dbg !11206
  %28 = ptrtoint i8* %27 to i64, !dbg !11206
  %and = and i64 %28, 4095, !dbg !11206
  %conv37 = trunc i64 %and to i32, !dbg !11206
  store i32 %conv37, i32* %offset, align 4, !dbg !11207
  %29 = load i32, i32* %offset, align 4, !dbg !11208
  %conv38 = zext i32 %29 to i64, !dbg !11208
  %sub = sub i64 4096, %conv38, !dbg !11208
  %cmp39 = icmp ult i64 %sub, 14, !dbg !11208
  %lnot41 = xor i1 %cmp39, true, !dbg !11208
  %lnot43 = xor i1 %lnot41, true, !dbg !11208
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !11208
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !11208
  %tobool46 = icmp ne i64 %conv45, 0, !dbg !11208
  br i1 %tobool46, label %if.then47, label %if.end59, !dbg !11210

if.then47:                                        ; preds = %if.end34
  %30 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11211
  %call48 = call %struct.sk_buff* @skb_copy(%struct.sk_buff* %30, i32 2592) #12, !dbg !11213
  store %struct.sk_buff* %call48, %struct.sk_buff** %nskb, align 8, !dbg !11214
  %31 = load %struct.sk_buff*, %struct.sk_buff** %nskb, align 8, !dbg !11215
  %tobool49 = icmp ne %struct.sk_buff* %31, null, !dbg !11215
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !11217

if.then50:                                        ; preds = %if.then47
  br label %drop, !dbg !11218

if.end51:                                         ; preds = %if.then47
  %32 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11219
  call void @dev_consume_skb_any(%struct.sk_buff* %32) #12, !dbg !11220
  %33 = load %struct.sk_buff*, %struct.sk_buff** %nskb, align 8, !dbg !11221
  store %struct.sk_buff* %33, %struct.sk_buff** %skb.addr, align 8, !dbg !11222
  %34 = load i64, i64* @vmemmap_base, align 8, !dbg !11223
  %35 = inttoptr i64 %34 to %struct.page*, !dbg !11223
  %36 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11223
  %data52 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %36, i32 0, i32 37, !dbg !11223
  %37 = load i8*, i8** %data52, align 8, !dbg !11223
  %38 = ptrtoint i8* %37 to i64, !dbg !11223
  %call53 = call i64 @__phys_addr_nodebug(i64 %38) #12, !dbg !11223
  %shr54 = lshr i64 %call53, 12, !dbg !11223
  %add.ptr55 = getelementptr %struct.page, %struct.page* %35, i64 %shr54, !dbg !11223
  store %struct.page* %add.ptr55, %struct.page** %page, align 8, !dbg !11224
  %39 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11225
  %data56 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %39, i32 0, i32 37, !dbg !11225
  %40 = load i8*, i8** %data56, align 8, !dbg !11225
  %41 = ptrtoint i8* %40 to i64, !dbg !11225
  %and57 = and i64 %41, 4095, !dbg !11225
  %conv58 = trunc i64 %and57 to i32, !dbg !11225
  store i32 %conv58, i32* %offset, align 4, !dbg !11226
  br label %if.end59, !dbg !11227

if.end59:                                         ; preds = %if.end51, %if.end34
  %42 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11228
  %call60 = call i32 @skb_headlen(%struct.sk_buff* %42) #12, !dbg !11229
  store i32 %call60, i32* %len, align 4, !dbg !11230
  br label %do.body61, !dbg !11231

do.body61:                                        ; preds = %if.end59
  br label %do.body62, !dbg !11232

do.body62:                                        ; preds = %do.body61
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11233, metadata !DIExpression()), !dbg !11235
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11236, metadata !DIExpression()), !dbg !11235
  %cmp63 = icmp eq i64* %__dummy, %__dummy2, !dbg !11235
  %conv64 = zext i1 %cmp63 to i32, !dbg !11235
  store i32 1, i32* %tmp65, align 4, !dbg !11235
  %43 = load i32, i32* %tmp65, align 4, !dbg !11235
  br label %do.body66, !dbg !11237

do.body66:                                        ; preds = %do.body62
  br label %do.body67, !dbg !11238

do.body67:                                        ; preds = %do.body66
  br label %do.body68, !dbg !11239

do.body68:                                        ; preds = %do.body67
  call void @llvm.dbg.declare(metadata i64* %__dummy69, metadata !11241, metadata !DIExpression()), !dbg !11244
  call void @llvm.dbg.declare(metadata i64* %__dummy270, metadata !11245, metadata !DIExpression()), !dbg !11244
  %cmp71 = icmp eq i64* %__dummy69, %__dummy270, !dbg !11244
  %conv72 = zext i1 %cmp71 to i32, !dbg !11244
  store i32 1, i32* %tmp73, align 4, !dbg !11244
  %44 = load i32, i32* %tmp73, align 4, !dbg !11244
  %call74 = call i64 @arch_local_irq_save() #12, !dbg !11246
  store i64 %call74, i64* %flags, align 8, !dbg !11246
  br label %do.end75, !dbg !11246

do.end75:                                         ; preds = %do.body68
  br label %do.end76, !dbg !11239

do.end76:                                         ; preds = %do.end75
  br label %do.body77, !dbg !11238

do.body77:                                        ; preds = %do.end76
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11247, !srcloc !11248
  br label %do.body78, !dbg !11247

do.body78:                                        ; preds = %do.body77
  %45 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11249
  %tx_lock = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %45, i32 0, i32 11, !dbg !11249
  store %struct.spinlock* %tx_lock, %struct.spinlock** %lock.addr.i, align 8
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11250
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !11251
  %rlock.i = bitcast %union.anon.2* %47 to %struct.raw_spinlock*, !dbg !11251
  br label %do.end80, !dbg !11249

do.end80:                                         ; preds = %do.body78
  br label %do.end81, !dbg !11247

do.end81:                                         ; preds = %do.end80
  br label %do.end82, !dbg !11238

do.end82:                                         ; preds = %do.end81
  br label %do.end83, !dbg !11237

do.end83:                                         ; preds = %do.end82
  br label %do.end84, !dbg !11232

do.end84:                                         ; preds = %do.end83
  %48 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11252
  %call85 = call zeroext i1 @netif_carrier_ok(%struct.net_device* %48) #12, !dbg !11252
  br i1 %call85, label %lor.lhs.false, label %lor.end, !dbg !11252

lor.lhs.false:                                    ; preds = %do.end84
  %49 = load i32, i32* %slots, align 4, !dbg !11252
  %cmp86 = icmp sgt i32 %49, 1, !dbg !11252
  br i1 %cmp86, label %land.lhs.true, label %lor.rhs, !dbg !11252

land.lhs.true:                                    ; preds = %lor.lhs.false
  %50 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11252
  %call88 = call zeroext i1 @xennet_can_sg(%struct.net_device* %50) #12, !dbg !11252
  br i1 %call88, label %lor.rhs, label %lor.end, !dbg !11252

lor.rhs:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %51 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11252
  %52 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11252
  %call89 = call i64 @netif_skb_features(%struct.sk_buff* %52) #12, !dbg !11252
  %call90 = call zeroext i1 @netif_needs_gso(%struct.sk_buff* %51, i64 %call89) #12, !dbg !11252
  br label %lor.end, !dbg !11252

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true, %do.end84
  %53 = phi i1 [ true, %land.lhs.true ], [ true, %do.end84 ], [ %call90, %lor.rhs ]
  %lnot92 = xor i1 %53, true, !dbg !11252
  %lnot94 = xor i1 %lnot92, true, !dbg !11252
  %lnot.ext95 = zext i1 %lnot94 to i32, !dbg !11252
  %conv96 = sext i32 %lnot.ext95 to i64, !dbg !11252
  %tobool97 = icmp ne i64 %conv96, 0, !dbg !11252
  br i1 %tobool97, label %if.then98, label %if.end100, !dbg !11253

if.then98:                                        ; preds = %lor.end
  %54 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11254
  %tx_lock99 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %54, i32 0, i32 11, !dbg !11255
  %55 = load i64, i64* %flags, align 8, !dbg !11256
  store %struct.spinlock* %tx_lock99, %struct.spinlock** %lock.addr.i210, align 8
  store i64 %55, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !749, metadata !11257, metadata !DIExpression()) #8, !dbg !11260
  call void @llvm.dbg.declare(metadata !749, metadata !11261, metadata !DIExpression()) #8, !dbg !11260
  store i32 1, i32* %tmp.i, align 4, !dbg !11260
  %56 = load i32, i32* %tmp.i, align 4, !dbg !11260
  call void @llvm.dbg.declare(metadata !749, metadata !11262, metadata !DIExpression()) #8, !dbg !11267
  call void @llvm.dbg.declare(metadata !749, metadata !11268, metadata !DIExpression()) #8, !dbg !11267
  store i32 1, i32* %tmp8.i, align 4, !dbg !11267
  %57 = load i32, i32* %tmp8.i, align 4, !dbg !11267
  %58 = load i64, i64* %flags.addr.i, align 8, !dbg !11269
  call void @arch_local_irq_restore(i64 %58) #14, !dbg !11269
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11270, !srcloc !11272
  %59 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i210, align 8, !dbg !11273
  %60 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %59, i32 0, i32 0, !dbg !11273
  %rlock.i211 = bitcast %union.anon.2* %60 to %struct.raw_spinlock*, !dbg !11273
  br label %drop, !dbg !11275

if.end100:                                        ; preds = %lor.end
  %61 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11276
  %62 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11277
  %63 = load %struct.page*, %struct.page** %page, align 8, !dbg !11278
  %64 = load i32, i32* %offset, align 4, !dbg !11279
  %65 = load i32, i32* %len, align 4, !dbg !11280
  %call101 = call %struct.xen_netif_tx_request* @xennet_make_first_txreq(%struct.netfront_queue* %61, %struct.sk_buff* %62, %struct.page* %63, i32 %64, i32 %65) #12, !dbg !11281
  store %struct.xen_netif_tx_request* %call101, %struct.xen_netif_tx_request** %tx, align 8, !dbg !11282
  store %struct.xen_netif_tx_request* %call101, %struct.xen_netif_tx_request** %first_tx, align 8, !dbg !11283
  %66 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx, align 8, !dbg !11284
  %size = getelementptr inbounds %struct.xen_netif_tx_request, %struct.xen_netif_tx_request* %66, i32 0, i32 4, !dbg !11285
  %67 = load i16, i16* %size, align 2, !dbg !11285
  %conv102 = zext i16 %67 to i32, !dbg !11284
  %68 = load i32, i32* %offset, align 4, !dbg !11286
  %add = add i32 %68, %conv102, !dbg !11286
  store i32 %add, i32* %offset, align 4, !dbg !11286
  %69 = load i32, i32* %offset, align 4, !dbg !11287
  %conv103 = zext i32 %69 to i64, !dbg !11287
  %cmp104 = icmp eq i64 %conv103, 4096, !dbg !11289
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !11290

if.then106:                                       ; preds = %if.end100
  %70 = load %struct.page*, %struct.page** %page, align 8, !dbg !11291
  %incdec.ptr = getelementptr %struct.page, %struct.page* %70, i32 1, !dbg !11291
  store %struct.page* %incdec.ptr, %struct.page** %page, align 8, !dbg !11291
  store i32 0, i32* %offset, align 4, !dbg !11293
  br label %if.end107, !dbg !11294

if.end107:                                        ; preds = %if.then106, %if.end100
  %71 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx, align 8, !dbg !11295
  %size108 = getelementptr inbounds %struct.xen_netif_tx_request, %struct.xen_netif_tx_request* %71, i32 0, i32 4, !dbg !11296
  %72 = load i16, i16* %size108, align 2, !dbg !11296
  %conv109 = zext i16 %72 to i32, !dbg !11295
  %73 = load i32, i32* %len, align 4, !dbg !11297
  %sub110 = sub i32 %73, %conv109, !dbg !11297
  store i32 %sub110, i32* %len, align 4, !dbg !11297
  %74 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11298
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %74, i32 0, i32 14, !dbg !11300
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !11300
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !11300
  %bf.clear = and i16 %bf.lshr, 3, !dbg !11300
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !11300
  %conv111 = zext i8 %bf.cast to i32, !dbg !11298
  %cmp112 = icmp eq i32 %conv111, 3, !dbg !11301
  br i1 %cmp112, label %if.then114, label %if.else, !dbg !11302

if.then114:                                       ; preds = %if.end107
  %75 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx, align 8, !dbg !11303
  %flags115 = getelementptr inbounds %struct.xen_netif_tx_request, %struct.xen_netif_tx_request* %75, i32 0, i32 2, !dbg !11304
  %76 = load i16, i16* %flags115, align 2, !dbg !11305
  %conv116 = zext i16 %76 to i32, !dbg !11305
  %or = or i32 %conv116, 3, !dbg !11305
  %conv117 = trunc i32 %or to i16, !dbg !11305
  store i16 %conv117, i16* %flags115, align 2, !dbg !11305
  br label %if.end132, !dbg !11303

if.else:                                          ; preds = %if.end107
  %77 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11306
  %ip_summed118 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %77, i32 0, i32 14, !dbg !11308
  %bf.load119 = load i16, i16* %ip_summed118, align 8, !dbg !11308
  %bf.lshr120 = lshr i16 %bf.load119, 5, !dbg !11308
  %bf.clear121 = and i16 %bf.lshr120, 3, !dbg !11308
  %bf.cast122 = trunc i16 %bf.clear121 to i8, !dbg !11308
  %conv123 = zext i8 %bf.cast122 to i32, !dbg !11306
  %cmp124 = icmp eq i32 %conv123, 1, !dbg !11309
  br i1 %cmp124, label %if.then126, label %if.end131, !dbg !11310

if.then126:                                       ; preds = %if.else
  %78 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx, align 8, !dbg !11311
  %flags127 = getelementptr inbounds %struct.xen_netif_tx_request, %struct.xen_netif_tx_request* %78, i32 0, i32 2, !dbg !11312
  %79 = load i16, i16* %flags127, align 2, !dbg !11313
  %conv128 = zext i16 %79 to i32, !dbg !11313
  %or129 = or i32 %conv128, 2, !dbg !11313
  %conv130 = trunc i32 %or129 to i16, !dbg !11313
  store i16 %conv130, i16* %flags127, align 2, !dbg !11313
  br label %if.end131, !dbg !11311

if.end131:                                        ; preds = %if.then126, %if.else
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then114
  %80 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11314
  %call133 = call i8* @skb_end_pointer(%struct.sk_buff* %80) #12, !dbg !11314
  %81 = bitcast i8* %call133 to %struct.skb_shared_info*, !dbg !11316
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %81, i32 0, i32 4, !dbg !11316
  %82 = load i16, i16* %gso_size, align 4, !dbg !11316
  %tobool134 = icmp ne i16 %82, 0, !dbg !11314
  br i1 %tobool134, label %if.then135, label %if.end163, !dbg !11317

if.then135:                                       ; preds = %if.end132
  call void @llvm.dbg.declare(metadata %struct.xen_netif_extra_info** %gso, metadata !11318, metadata !DIExpression()), !dbg !11320
  %83 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11321
  %tx136 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %83, i32 0, i32 12, !dbg !11321
  %sring = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx136, i32 0, i32 3, !dbg !11321
  %84 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %sring, align 8, !dbg !11321
  %ring = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %84, i32 0, i32 5, !dbg !11321
  %85 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11321
  %tx137 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %85, i32 0, i32 12, !dbg !11321
  %req_prod_pvt = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx137, i32 0, i32 0, !dbg !11321
  %86 = load i32, i32* %req_prod_pvt, align 8, !dbg !11321
  %inc = add i32 %86, 1, !dbg !11321
  store i32 %inc, i32* %req_prod_pvt, align 8, !dbg !11321
  %87 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11321
  %tx138 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %87, i32 0, i32 12, !dbg !11321
  %nr_ents = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx138, i32 0, i32 2, !dbg !11321
  %88 = load i32, i32* %nr_ents, align 8, !dbg !11321
  %sub139 = sub i32 %88, 1, !dbg !11321
  %and140 = and i32 %86, %sub139, !dbg !11321
  %idxprom141 = zext i32 %and140 to i64, !dbg !11321
  %arrayidx142 = getelementptr [1 x %union.xen_netif_tx_sring_entry], [1 x %union.xen_netif_tx_sring_entry]* %ring, i64 0, i64 %idxprom141, !dbg !11321
  %req = bitcast %union.xen_netif_tx_sring_entry* %arrayidx142 to %struct.xen_netif_tx_request*, !dbg !11321
  %89 = bitcast %struct.xen_netif_tx_request* %req to %struct.xen_netif_extra_info*, !dbg !11322
  store %struct.xen_netif_extra_info* %89, %struct.xen_netif_extra_info** %gso, align 8, !dbg !11323
  %90 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx, align 8, !dbg !11324
  %flags143 = getelementptr inbounds %struct.xen_netif_tx_request, %struct.xen_netif_tx_request* %90, i32 0, i32 2, !dbg !11325
  %91 = load i16, i16* %flags143, align 2, !dbg !11326
  %conv144 = zext i16 %91 to i32, !dbg !11326
  %or145 = or i32 %conv144, 8, !dbg !11326
  %conv146 = trunc i32 %or145 to i16, !dbg !11326
  store i16 %conv146, i16* %flags143, align 2, !dbg !11326
  %92 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11327
  %call147 = call i8* @skb_end_pointer(%struct.sk_buff* %92) #12, !dbg !11327
  %93 = bitcast i8* %call147 to %struct.skb_shared_info*, !dbg !11328
  %gso_size148 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %93, i32 0, i32 4, !dbg !11328
  %94 = load i16, i16* %gso_size148, align 4, !dbg !11328
  %95 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %gso, align 8, !dbg !11329
  %u = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %95, i32 0, i32 2, !dbg !11330
  %gso149 = bitcast %union.anon.168* %u to %struct.anon.169*, !dbg !11331
  %size150 = getelementptr inbounds %struct.anon.169, %struct.anon.169* %gso149, i32 0, i32 0, !dbg !11332
  store i16 %94, i16* %size150, align 2, !dbg !11333
  %96 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11334
  %call151 = call i8* @skb_end_pointer(%struct.sk_buff* %96) #12, !dbg !11334
  %97 = bitcast i8* %call151 to %struct.skb_shared_info*, !dbg !11335
  %gso_type = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %97, i32 0, i32 8, !dbg !11335
  %98 = load i32, i32* %gso_type, align 8, !dbg !11335
  %and152 = and i32 %98, 16, !dbg !11336
  %tobool153 = icmp ne i32 %and152, 0, !dbg !11337
  %99 = zext i1 %tobool153 to i64, !dbg !11337
  %cond = select i1 %tobool153, i32 2, i32 1, !dbg !11337
  %conv154 = trunc i32 %cond to i8, !dbg !11337
  %100 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %gso, align 8, !dbg !11338
  %u155 = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %100, i32 0, i32 2, !dbg !11339
  %gso156 = bitcast %union.anon.168* %u155 to %struct.anon.169*, !dbg !11340
  %type = getelementptr inbounds %struct.anon.169, %struct.anon.169* %gso156, i32 0, i32 1, !dbg !11341
  store i8 %conv154, i8* %type, align 2, !dbg !11342
  %101 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %gso, align 8, !dbg !11343
  %u157 = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %101, i32 0, i32 2, !dbg !11344
  %gso158 = bitcast %union.anon.168* %u157 to %struct.anon.169*, !dbg !11345
  %pad = getelementptr inbounds %struct.anon.169, %struct.anon.169* %gso158, i32 0, i32 2, !dbg !11346
  store i8 0, i8* %pad, align 1, !dbg !11347
  %102 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %gso, align 8, !dbg !11348
  %u159 = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %102, i32 0, i32 2, !dbg !11349
  %gso160 = bitcast %union.anon.168* %u159 to %struct.anon.169*, !dbg !11350
  %features = getelementptr inbounds %struct.anon.169, %struct.anon.169* %gso160, i32 0, i32 3, !dbg !11351
  store i16 0, i16* %features, align 2, !dbg !11352
  %103 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %gso, align 8, !dbg !11353
  %type161 = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %103, i32 0, i32 0, !dbg !11354
  store i8 1, i8* %type161, align 2, !dbg !11355
  %104 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %gso, align 8, !dbg !11356
  %flags162 = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %104, i32 0, i32 1, !dbg !11357
  store i8 0, i8* %flags162, align 1, !dbg !11358
  br label %if.end163, !dbg !11359

if.end163:                                        ; preds = %if.then135, %if.end132
  %105 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11360
  %106 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx, align 8, !dbg !11361
  %107 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11362
  %108 = load %struct.page*, %struct.page** %page, align 8, !dbg !11363
  %109 = load i32, i32* %offset, align 4, !dbg !11364
  %110 = load i32, i32* %len, align 4, !dbg !11365
  %call164 = call %struct.xen_netif_tx_request* @xennet_make_txreqs(%struct.netfront_queue* %105, %struct.xen_netif_tx_request* %106, %struct.sk_buff* %107, %struct.page* %108, i32 %109, i32 %110) #12, !dbg !11366
  store %struct.xen_netif_tx_request* %call164, %struct.xen_netif_tx_request** %tx, align 8, !dbg !11367
  store i32 0, i32* %i, align 4, !dbg !11368
  br label %for.cond, !dbg !11370

for.cond:                                         ; preds = %for.inc, %if.end163
  %111 = load i32, i32* %i, align 4, !dbg !11371
  %112 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11373
  %call165 = call i8* @skb_end_pointer(%struct.sk_buff* %112) #12, !dbg !11373
  %113 = bitcast i8* %call165 to %struct.skb_shared_info*, !dbg !11374
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %113, i32 0, i32 2, !dbg !11374
  %114 = load i8, i8* %nr_frags, align 2, !dbg !11374
  %conv166 = zext i8 %114 to i32, !dbg !11373
  %cmp167 = icmp ult i32 %111, %conv166, !dbg !11375
  br i1 %cmp167, label %for.body, label %for.end, !dbg !11376

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !11377, metadata !DIExpression()), !dbg !11380
  %115 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11381
  %call169 = call i8* @skb_end_pointer(%struct.sk_buff* %115) #12, !dbg !11381
  %116 = bitcast i8* %call169 to %struct.skb_shared_info*, !dbg !11382
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %116, i32 0, i32 12, !dbg !11382
  %117 = load i32, i32* %i, align 4, !dbg !11383
  %idxprom170 = zext i32 %117 to i64, !dbg !11381
  %arrayidx171 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 %idxprom170, !dbg !11381
  store %struct.bio_vec* %arrayidx171, %struct.bio_vec** %frag, align 8, !dbg !11380
  %118 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11384
  %119 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx, align 8, !dbg !11385
  %120 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11386
  %121 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !11387
  %call172 = call %struct.page* @skb_frag_page(%struct.bio_vec* %121) #12, !dbg !11388
  %122 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !11389
  %call173 = call i32 @skb_frag_off(%struct.bio_vec* %122) #12, !dbg !11390
  %123 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !11391
  %call174 = call i32 @skb_frag_size(%struct.bio_vec* %123) #12, !dbg !11392
  %call175 = call %struct.xen_netif_tx_request* @xennet_make_txreqs(%struct.netfront_queue* %118, %struct.xen_netif_tx_request* %119, %struct.sk_buff* %120, %struct.page* %call172, i32 %call173, i32 %call174) #12, !dbg !11393
  store %struct.xen_netif_tx_request* %call175, %struct.xen_netif_tx_request** %tx, align 8, !dbg !11394
  br label %for.inc, !dbg !11395

for.inc:                                          ; preds = %for.body
  %124 = load i32, i32* %i, align 4, !dbg !11396
  %inc176 = add i32 %124, 1, !dbg !11396
  store i32 %inc176, i32* %i, align 4, !dbg !11396
  br label %for.cond, !dbg !11397, !llvm.loop !11398

for.end:                                          ; preds = %for.cond
  %125 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11400
  %len177 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %125, i32 0, i32 5, !dbg !11401
  %126 = load i32, i32* %len177, align 8, !dbg !11401
  %conv178 = trunc i32 %126 to i16, !dbg !11400
  %127 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %first_tx, align 8, !dbg !11402
  %size179 = getelementptr inbounds %struct.xen_netif_tx_request, %struct.xen_netif_tx_request* %127, i32 0, i32 4, !dbg !11403
  store i16 %conv178, i16* %size179, align 2, !dbg !11404
  %128 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11405
  call void @skb_tx_timestamp(%struct.sk_buff* %128) #12, !dbg !11406
  br label %do.body180, !dbg !11407

do.body180:                                       ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %__old, metadata !11408, metadata !DIExpression()), !dbg !11410
  %129 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11410
  %tx181 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %129, i32 0, i32 12, !dbg !11410
  %sring182 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx181, i32 0, i32 3, !dbg !11410
  %130 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %sring182, align 8, !dbg !11410
  %req_prod = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %130, i32 0, i32 0, !dbg !11410
  %131 = load i32, i32* %req_prod, align 4, !dbg !11410
  store i32 %131, i32* %__old, align 4, !dbg !11410
  call void @llvm.dbg.declare(metadata i32* %__new, metadata !11411, metadata !DIExpression()), !dbg !11410
  %132 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11410
  %tx183 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %132, i32 0, i32 12, !dbg !11410
  %req_prod_pvt184 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx183, i32 0, i32 0, !dbg !11410
  %133 = load i32, i32* %req_prod_pvt184, align 8, !dbg !11410
  store i32 %133, i32* %__new, align 4, !dbg !11410
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11410, !srcloc !11412
  %134 = load i32, i32* %__new, align 4, !dbg !11410
  %135 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11410
  %tx185 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %135, i32 0, i32 12, !dbg !11410
  %sring186 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx185, i32 0, i32 3, !dbg !11410
  %136 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %sring186, align 8, !dbg !11410
  %req_prod187 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %136, i32 0, i32 0, !dbg !11410
  store i32 %134, i32* %req_prod187, align 4, !dbg !11410
  call void asm sideeffect "lock; addl $$0,-4(%rsp)", "~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11410, !srcloc !11413
  %137 = load i32, i32* %__new, align 4, !dbg !11410
  %138 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11410
  %tx188 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %138, i32 0, i32 12, !dbg !11410
  %sring189 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx188, i32 0, i32 3, !dbg !11410
  %139 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %sring189, align 8, !dbg !11410
  %req_event = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %139, i32 0, i32 1, !dbg !11410
  %140 = load i32, i32* %req_event, align 4, !dbg !11410
  %sub190 = sub i32 %137, %140, !dbg !11410
  %141 = load i32, i32* %__new, align 4, !dbg !11410
  %142 = load i32, i32* %__old, align 4, !dbg !11410
  %sub191 = sub i32 %141, %142, !dbg !11410
  %cmp192 = icmp ult i32 %sub190, %sub191, !dbg !11410
  %conv193 = zext i1 %cmp192 to i32, !dbg !11410
  store i32 %conv193, i32* %notify, align 4, !dbg !11410
  br label %do.end194, !dbg !11410

do.end194:                                        ; preds = %do.body180
  %143 = load i32, i32* %notify, align 4, !dbg !11414
  %tobool195 = icmp ne i32 %143, 0, !dbg !11414
  br i1 %tobool195, label %if.then196, label %if.end197, !dbg !11416

if.then196:                                       ; preds = %do.end194
  %144 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11417
  %tx_irq = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %144, i32 0, i32 7, !dbg !11418
  %145 = load i32, i32* %tx_irq, align 8, !dbg !11418
  call void @notify_remote_via_irq(i32 %145) #12, !dbg !11419
  br label %if.end197, !dbg !11419

if.end197:                                        ; preds = %if.then196, %do.end194
  %146 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats, align 8, !dbg !11420
  %syncp = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %146, i32 0, i32 2, !dbg !11421
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %syncp) #12, !dbg !11422
  %147 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11423
  %len198 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %147, i32 0, i32 5, !dbg !11424
  %148 = load i32, i32* %len198, align 8, !dbg !11424
  %conv199 = zext i32 %148 to i64, !dbg !11423
  %149 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats, align 8, !dbg !11425
  %bytes = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %149, i32 0, i32 1, !dbg !11426
  %150 = load i64, i64* %bytes, align 8, !dbg !11427
  %add200 = add i64 %150, %conv199, !dbg !11427
  store i64 %add200, i64* %bytes, align 8, !dbg !11427
  %151 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats, align 8, !dbg !11428
  %packets = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %151, i32 0, i32 0, !dbg !11429
  %152 = load i64, i64* %packets, align 8, !dbg !11430
  %inc201 = add i64 %152, 1, !dbg !11430
  store i64 %inc201, i64* %packets, align 8, !dbg !11430
  %153 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats, align 8, !dbg !11431
  %syncp202 = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %153, i32 0, i32 2, !dbg !11432
  call void @u64_stats_update_end(%struct.u64_stats_sync* %syncp202) #12, !dbg !11433
  %154 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11434
  call void @xennet_tx_buf_gc(%struct.netfront_queue* %154) #12, !dbg !11435
  %155 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11436
  %call203 = call i32 @netfront_tx_slot_available(%struct.netfront_queue* %155) #12, !dbg !11437
  %tobool204 = icmp ne i32 %call203, 0, !dbg !11437
  br i1 %tobool204, label %if.end207, label %if.then205, !dbg !11438

if.then205:                                       ; preds = %if.end197
  %156 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11439
  %157 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11440
  %id = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %157, i32 0, i32 0, !dbg !11441
  %158 = load i32, i32* %id, align 64, !dbg !11441
  %call206 = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %156, i32 %158) #12, !dbg !11442
  store %struct.netdev_queue* %call206, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %159 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !11443
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %159, i32 0, i32 10, !dbg !11444
  call void @set_bit(i64 0, i64* %state.i) #14, !dbg !11445
  br label %if.end207, !dbg !11446

if.end207:                                        ; preds = %if.then205, %if.end197
  %160 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11447
  %tx_lock208 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %160, i32 0, i32 11, !dbg !11448
  %161 = load i64, i64* %flags, align 8, !dbg !11449
  store %struct.spinlock* %tx_lock208, %struct.spinlock** %lock.addr.i212, align 8
  store i64 %161, i64* %flags.addr.i213, align 8
  call void @llvm.dbg.declare(metadata !749, metadata !11257, metadata !DIExpression()) #8, !dbg !11450
  call void @llvm.dbg.declare(metadata !749, metadata !11261, metadata !DIExpression()) #8, !dbg !11450
  store i32 1, i32* %tmp.i214, align 4, !dbg !11450
  %162 = load i32, i32* %tmp.i214, align 4, !dbg !11450
  call void @llvm.dbg.declare(metadata !749, metadata !11262, metadata !DIExpression()) #8, !dbg !11451
  call void @llvm.dbg.declare(metadata !749, metadata !11268, metadata !DIExpression()) #8, !dbg !11451
  store i32 1, i32* %tmp8.i215, align 4, !dbg !11451
  %163 = load i32, i32* %tmp8.i215, align 4, !dbg !11451
  %164 = load i64, i64* %flags.addr.i213, align 8, !dbg !11452
  call void @arch_local_irq_restore(i64 %164) #14, !dbg !11452
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11453, !srcloc !11272
  %165 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i212, align 8, !dbg !11454
  %166 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %165, i32 0, i32 0, !dbg !11454
  %rlock.i216 = bitcast %union.anon.2* %166 to %struct.raw_spinlock*, !dbg !11454
  store i32 0, i32* %retval, align 4, !dbg !11455
  br label %return, !dbg !11455

drop:                                             ; preds = %if.then98, %if.then50, %if.then32, %do.end15, %if.then
  call void @llvm.dbg.label(metadata !11456), !dbg !11457
  %167 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11458
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %167, i32 0, i32 24, !dbg !11459
  %tx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 7, !dbg !11460
  %168 = load i64, i64* %tx_dropped, align 8, !dbg !11461
  %inc209 = add i64 %168, 1, !dbg !11461
  store i64 %inc209, i64* %tx_dropped, align 8, !dbg !11461
  %169 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11462
  call void @dev_kfree_skb_any(%struct.sk_buff* %169) #12, !dbg !11463
  store i32 0, i32* %retval, align 4, !dbg !11464
  br label %return, !dbg !11464

return:                                           ; preds = %drop, %if.end207
  %170 = load i32, i32* %retval, align 4, !dbg !11465
  ret i32 %170, !dbg !11465
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @xennet_select_queue(%struct.net_device* %dev, %struct.sk_buff* %skb, %struct.net_device* %sb_dev) #3 !dbg !11466 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %sb_dev.addr = alloca %struct.net_device*, align 8
  %num_queues = alloca i32, align 4
  %hash = alloca i32, align 4
  %queue_idx = alloca i16, align 2
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11467, metadata !DIExpression()), !dbg !11468
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !11469, metadata !DIExpression()), !dbg !11470
  store %struct.net_device* %sb_dev, %struct.net_device** %sb_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %sb_dev.addr, metadata !11471, metadata !DIExpression()), !dbg !11472
  call void @llvm.dbg.declare(metadata i32* %num_queues, metadata !11473, metadata !DIExpression()), !dbg !11474
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11475
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 88, !dbg !11476
  %1 = load i32, i32* %real_num_tx_queues, align 4, !dbg !11476
  store i32 %1, i32* %num_queues, align 4, !dbg !11474
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !11477, metadata !DIExpression()), !dbg !11478
  call void @llvm.dbg.declare(metadata i16* %queue_idx, metadata !11479, metadata !DIExpression()), !dbg !11480
  %2 = load i32, i32* %num_queues, align 4, !dbg !11481
  %cmp = icmp eq i32 %2, 1, !dbg !11483
  br i1 %cmp, label %if.then, label %if.else, !dbg !11484

if.then:                                          ; preds = %entry
  store i16 0, i16* %queue_idx, align 2, !dbg !11485
  br label %if.end, !dbg !11487

if.else:                                          ; preds = %entry
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !11488
  %call = call i32 @skb_get_hash(%struct.sk_buff* %3) #12, !dbg !11490
  store i32 %call, i32* %hash, align 4, !dbg !11491
  %4 = load i32, i32* %hash, align 4, !dbg !11492
  %5 = load i32, i32* %num_queues, align 4, !dbg !11493
  %rem = urem i32 %4, %5, !dbg !11494
  %conv = trunc i32 %rem to i16, !dbg !11492
  store i16 %conv, i16* %queue_idx, align 2, !dbg !11495
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i16, i16* %queue_idx, align 2, !dbg !11496
  ret i16 %6, !dbg !11497
}

; Function Attrs: noredzone
declare dso_local i32 @eth_mac_addr(%struct.net_device*, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @eth_validate_addr(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_change_mtu(%struct.net_device* %dev, i32 %mtu) #3 !dbg !11498 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %mtu.addr = alloca i32, align 4
  %max = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11499, metadata !DIExpression()), !dbg !11500
  store i32 %mtu, i32* %mtu.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mtu.addr, metadata !11501, metadata !DIExpression()), !dbg !11502
  call void @llvm.dbg.declare(metadata i32* %max, metadata !11503, metadata !DIExpression()), !dbg !11504
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11505
  %call = call zeroext i1 @xennet_can_sg(%struct.net_device* %0) #12, !dbg !11506
  %1 = zext i1 %call to i64, !dbg !11506
  %cond = select i1 %call, i32 65535, i32 1500, !dbg !11506
  store i32 %cond, i32* %max, align 4, !dbg !11504
  %2 = load i32, i32* %mtu.addr, align 4, !dbg !11507
  %3 = load i32, i32* %max, align 4, !dbg !11509
  %cmp = icmp sgt i32 %2, %3, !dbg !11510
  br i1 %cmp, label %if.then, label %if.end, !dbg !11511

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11512
  br label %return, !dbg !11512

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %mtu.addr, align 4, !dbg !11513
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11514
  %mtu1 = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 44, !dbg !11515
  store i32 %4, i32* %mtu1, align 8, !dbg !11516
  store i32 0, i32* %retval, align 4, !dbg !11517
  br label %return, !dbg !11517

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !11518
  ret i32 %6, !dbg !11518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_get_stats64(%struct.net_device* %dev, %struct.rtnl_link_stats64* %tot) #3 !dbg !11519 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %tot.addr = alloca %struct.rtnl_link_stats64*, align 8
  %np = alloca %struct.netfront_info*, align 8
  %cpu = alloca i32, align 4
  %rx_stats = alloca %struct.netfront_stats*, align 8
  %tmp = alloca %struct.netfront_stats*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca %struct.netfront_stats*, align 8
  %tx_stats = alloca %struct.netfront_stats*, align 8
  %tmp3 = alloca %struct.netfront_stats*, align 8
  %__vpp_verify5 = alloca i8*, align 8
  %tmp7 = alloca %struct.netfront_stats*, align 8
  %rx_packets = alloca i64, align 8
  %rx_bytes = alloca i64, align 8
  %tx_packets = alloca i64, align 8
  %tx_bytes = alloca i64, align 8
  %start = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11520, metadata !DIExpression()), !dbg !11521
  store %struct.rtnl_link_stats64* %tot, %struct.rtnl_link_stats64** %tot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtnl_link_stats64** %tot.addr, metadata !11522, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %np, metadata !11524, metadata !DIExpression()), !dbg !11525
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11526
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !11527
  %1 = bitcast i8* %call to %struct.netfront_info*, !dbg !11527
  store %struct.netfront_info* %1, %struct.netfront_info** %np, align 8, !dbg !11525
  call void @llvm.dbg.declare(metadata i32* %cpu, metadata !11528, metadata !DIExpression()), !dbg !11529
  store i32 0, i32* %cpu, align 4, !dbg !11530
  br label %for.cond, !dbg !11530

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %cpu, align 4, !dbg !11532
  %cmp = icmp slt i32 %2, 1, !dbg !11532
  br i1 %cmp, label %for.body, label %for.end, !dbg !11530

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netfront_stats** %rx_stats, metadata !11534, metadata !DIExpression()), !dbg !11536
  %3 = load i32, i32* %cpu, align 4, !dbg !11537
  br label %do.body, !dbg !11539

do.body:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !11541, metadata !DIExpression()), !dbg !11543
  store i8* null, i8** %__vpp_verify, align 8, !dbg !11543
  %4 = load i8*, i8** %__vpp_verify, align 8, !dbg !11543
  br label %do.end, !dbg !11543

do.end:                                           ; preds = %do.body
  %5 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !11539
  %rx_stats2 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %5, i32 0, i32 4, !dbg !11539
  %6 = load %struct.netfront_stats*, %struct.netfront_stats** %rx_stats2, align 8, !dbg !11539
  store %struct.netfront_stats* %6, %struct.netfront_stats** %tmp1, align 8, !dbg !11543
  %7 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp1, align 8, !dbg !11539
  store %struct.netfront_stats* %7, %struct.netfront_stats** %tmp, align 8, !dbg !11537
  %8 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp, align 8, !dbg !11537
  store %struct.netfront_stats* %8, %struct.netfront_stats** %rx_stats, align 8, !dbg !11536
  call void @llvm.dbg.declare(metadata %struct.netfront_stats** %tx_stats, metadata !11544, metadata !DIExpression()), !dbg !11545
  %9 = load i32, i32* %cpu, align 4, !dbg !11546
  br label %do.body4, !dbg !11548

do.body4:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify5, metadata !11550, metadata !DIExpression()), !dbg !11552
  store i8* null, i8** %__vpp_verify5, align 8, !dbg !11552
  %10 = load i8*, i8** %__vpp_verify5, align 8, !dbg !11552
  br label %do.end6, !dbg !11552

do.end6:                                          ; preds = %do.body4
  %11 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !11548
  %tx_stats8 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %11, i32 0, i32 5, !dbg !11548
  %12 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats8, align 8, !dbg !11548
  store %struct.netfront_stats* %12, %struct.netfront_stats** %tmp7, align 8, !dbg !11552
  %13 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp7, align 8, !dbg !11548
  store %struct.netfront_stats* %13, %struct.netfront_stats** %tmp3, align 8, !dbg !11546
  %14 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp3, align 8, !dbg !11546
  store %struct.netfront_stats* %14, %struct.netfront_stats** %tx_stats, align 8, !dbg !11545
  call void @llvm.dbg.declare(metadata i64* %rx_packets, metadata !11553, metadata !DIExpression()), !dbg !11554
  call void @llvm.dbg.declare(metadata i64* %rx_bytes, metadata !11555, metadata !DIExpression()), !dbg !11556
  call void @llvm.dbg.declare(metadata i64* %tx_packets, metadata !11557, metadata !DIExpression()), !dbg !11558
  call void @llvm.dbg.declare(metadata i64* %tx_bytes, metadata !11559, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.declare(metadata i32* %start, metadata !11561, metadata !DIExpression()), !dbg !11562
  br label %do.body9, !dbg !11563

do.body9:                                         ; preds = %do.cond, %do.end6
  %15 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats, align 8, !dbg !11564
  %syncp = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %15, i32 0, i32 2, !dbg !11566
  %call10 = call i32 @u64_stats_fetch_begin_irq(%struct.u64_stats_sync* %syncp) #12, !dbg !11567
  store i32 %call10, i32* %start, align 4, !dbg !11568
  %16 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats, align 8, !dbg !11569
  %packets = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %16, i32 0, i32 0, !dbg !11570
  %17 = load i64, i64* %packets, align 8, !dbg !11570
  store i64 %17, i64* %tx_packets, align 8, !dbg !11571
  %18 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats, align 8, !dbg !11572
  %bytes = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %18, i32 0, i32 1, !dbg !11573
  %19 = load i64, i64* %bytes, align 8, !dbg !11573
  store i64 %19, i64* %tx_bytes, align 8, !dbg !11574
  br label %do.cond, !dbg !11575

do.cond:                                          ; preds = %do.body9
  %20 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats, align 8, !dbg !11576
  %syncp11 = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %20, i32 0, i32 2, !dbg !11577
  %21 = load i32, i32* %start, align 4, !dbg !11578
  %call12 = call zeroext i1 @u64_stats_fetch_retry_irq(%struct.u64_stats_sync* %syncp11, i32 %21) #12, !dbg !11579
  br i1 %call12, label %do.body9, label %do.end13, !dbg !11575, !llvm.loop !11580

do.end13:                                         ; preds = %do.cond
  br label %do.body14, !dbg !11582

do.body14:                                        ; preds = %do.cond19, %do.end13
  %22 = load %struct.netfront_stats*, %struct.netfront_stats** %rx_stats, align 8, !dbg !11583
  %syncp15 = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %22, i32 0, i32 2, !dbg !11585
  %call16 = call i32 @u64_stats_fetch_begin_irq(%struct.u64_stats_sync* %syncp15) #12, !dbg !11586
  store i32 %call16, i32* %start, align 4, !dbg !11587
  %23 = load %struct.netfront_stats*, %struct.netfront_stats** %rx_stats, align 8, !dbg !11588
  %packets17 = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %23, i32 0, i32 0, !dbg !11589
  %24 = load i64, i64* %packets17, align 8, !dbg !11589
  store i64 %24, i64* %rx_packets, align 8, !dbg !11590
  %25 = load %struct.netfront_stats*, %struct.netfront_stats** %rx_stats, align 8, !dbg !11591
  %bytes18 = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %25, i32 0, i32 1, !dbg !11592
  %26 = load i64, i64* %bytes18, align 8, !dbg !11592
  store i64 %26, i64* %rx_bytes, align 8, !dbg !11593
  br label %do.cond19, !dbg !11594

do.cond19:                                        ; preds = %do.body14
  %27 = load %struct.netfront_stats*, %struct.netfront_stats** %rx_stats, align 8, !dbg !11595
  %syncp20 = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %27, i32 0, i32 2, !dbg !11596
  %28 = load i32, i32* %start, align 4, !dbg !11597
  %call21 = call zeroext i1 @u64_stats_fetch_retry_irq(%struct.u64_stats_sync* %syncp20, i32 %28) #12, !dbg !11598
  br i1 %call21, label %do.body14, label %do.end22, !dbg !11594, !llvm.loop !11599

do.end22:                                         ; preds = %do.cond19
  %29 = load i64, i64* %rx_packets, align 8, !dbg !11601
  %30 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %tot.addr, align 8, !dbg !11602
  %rx_packets23 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %30, i32 0, i32 0, !dbg !11603
  %31 = load i64, i64* %rx_packets23, align 8, !dbg !11604
  %add = add i64 %31, %29, !dbg !11604
  store i64 %add, i64* %rx_packets23, align 8, !dbg !11604
  %32 = load i64, i64* %tx_packets, align 8, !dbg !11605
  %33 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %tot.addr, align 8, !dbg !11606
  %tx_packets24 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %33, i32 0, i32 1, !dbg !11607
  %34 = load i64, i64* %tx_packets24, align 8, !dbg !11608
  %add25 = add i64 %34, %32, !dbg !11608
  store i64 %add25, i64* %tx_packets24, align 8, !dbg !11608
  %35 = load i64, i64* %rx_bytes, align 8, !dbg !11609
  %36 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %tot.addr, align 8, !dbg !11610
  %rx_bytes26 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %36, i32 0, i32 2, !dbg !11611
  %37 = load i64, i64* %rx_bytes26, align 8, !dbg !11612
  %add27 = add i64 %37, %35, !dbg !11612
  store i64 %add27, i64* %rx_bytes26, align 8, !dbg !11612
  %38 = load i64, i64* %tx_bytes, align 8, !dbg !11613
  %39 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %tot.addr, align 8, !dbg !11614
  %tx_bytes28 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %39, i32 0, i32 3, !dbg !11615
  %40 = load i64, i64* %tx_bytes28, align 8, !dbg !11616
  %add29 = add i64 %40, %38, !dbg !11616
  store i64 %add29, i64* %tx_bytes28, align 8, !dbg !11616
  br label %for.inc, !dbg !11617

for.inc:                                          ; preds = %do.end22
  %41 = load i32, i32* %cpu, align 4, !dbg !11532
  %inc = add i32 %41, 1, !dbg !11532
  store i32 %inc, i32* %cpu, align 4, !dbg !11532
  br label %for.cond, !dbg !11532, !llvm.loop !11618

for.end:                                          ; preds = %for.cond
  %42 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11620
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %42, i32 0, i32 24, !dbg !11621
  %rx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 4, !dbg !11622
  %43 = load i64, i64* %rx_errors, align 8, !dbg !11622
  %44 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %tot.addr, align 8, !dbg !11623
  %rx_errors30 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %44, i32 0, i32 4, !dbg !11624
  store i64 %43, i64* %rx_errors30, align 8, !dbg !11625
  %45 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11626
  %stats31 = getelementptr inbounds %struct.net_device, %struct.net_device* %45, i32 0, i32 24, !dbg !11627
  %tx_dropped = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats31, i32 0, i32 7, !dbg !11628
  %46 = load i64, i64* %tx_dropped, align 8, !dbg !11628
  %47 = load %struct.rtnl_link_stats64*, %struct.rtnl_link_stats64** %tot.addr, align 8, !dbg !11629
  %tx_dropped32 = getelementptr inbounds %struct.rtnl_link_stats64, %struct.rtnl_link_stats64* %47, i32 0, i32 7, !dbg !11630
  store i64 %46, i64* %tx_dropped32, align 8, !dbg !11631
  ret void, !dbg !11632
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @xennet_fix_features(%struct.net_device* %dev, i64 %features) #3 !dbg !11633 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  %np = alloca %struct.netfront_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11634, metadata !DIExpression()), !dbg !11635
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !11636, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %np, metadata !11638, metadata !DIExpression()), !dbg !11639
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11640
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !11641
  %1 = bitcast i8* %call to %struct.netfront_info*, !dbg !11641
  store %struct.netfront_info* %1, %struct.netfront_info** %np, align 8, !dbg !11639
  %2 = load i64, i64* %features.addr, align 8, !dbg !11642
  %and = and i64 %2, 1, !dbg !11644
  %tobool = icmp ne i64 %and, 0, !dbg !11644
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11645

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !11646
  %xbdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %3, i32 0, i32 2, !dbg !11647
  %4 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev, align 8, !dbg !11647
  %otherend = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %4, i32 0, i32 2, !dbg !11648
  %5 = load i8*, i8** %otherend, align 8, !dbg !11648
  %call1 = call i32 @xenbus_read_unsigned(i8* %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 0) #12, !dbg !11649
  %tobool2 = icmp ne i32 %call1, 0, !dbg !11649
  br i1 %tobool2, label %if.end, label %if.then, !dbg !11650

if.then:                                          ; preds = %land.lhs.true
  %6 = load i64, i64* %features.addr, align 8, !dbg !11651
  %and3 = and i64 %6, -2, !dbg !11651
  store i64 %and3, i64* %features.addr, align 8, !dbg !11651
  br label %if.end, !dbg !11652

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i64, i64* %features.addr, align 8, !dbg !11653
  %and4 = and i64 %7, 16, !dbg !11655
  %tobool5 = icmp ne i64 %and4, 0, !dbg !11655
  br i1 %tobool5, label %land.lhs.true6, label %if.end13, !dbg !11656

land.lhs.true6:                                   ; preds = %if.end
  %8 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !11657
  %xbdev7 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %8, i32 0, i32 2, !dbg !11658
  %9 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev7, align 8, !dbg !11658
  %otherend8 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %9, i32 0, i32 2, !dbg !11659
  %10 = load i8*, i8** %otherend8, align 8, !dbg !11659
  %call9 = call i32 @xenbus_read_unsigned(i8* %10, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0), i32 0) #12, !dbg !11660
  %tobool10 = icmp ne i32 %call9, 0, !dbg !11660
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !11661

if.then11:                                        ; preds = %land.lhs.true6
  %11 = load i64, i64* %features.addr, align 8, !dbg !11662
  %and12 = and i64 %11, -17, !dbg !11662
  store i64 %and12, i64* %features.addr, align 8, !dbg !11662
  br label %if.end13, !dbg !11663

if.end13:                                         ; preds = %if.then11, %land.lhs.true6, %if.end
  %12 = load i64, i64* %features.addr, align 8, !dbg !11664
  %and14 = and i64 %12, 65536, !dbg !11666
  %tobool15 = icmp ne i64 %and14, 0, !dbg !11666
  br i1 %tobool15, label %land.lhs.true16, label %if.end23, !dbg !11667

land.lhs.true16:                                  ; preds = %if.end13
  %13 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !11668
  %xbdev17 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %13, i32 0, i32 2, !dbg !11669
  %14 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev17, align 8, !dbg !11669
  %otherend18 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %14, i32 0, i32 2, !dbg !11670
  %15 = load i8*, i8** %otherend18, align 8, !dbg !11670
  %call19 = call i32 @xenbus_read_unsigned(i8* %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i32 0) #12, !dbg !11671
  %tobool20 = icmp ne i32 %call19, 0, !dbg !11671
  br i1 %tobool20, label %if.end23, label %if.then21, !dbg !11672

if.then21:                                        ; preds = %land.lhs.true16
  %16 = load i64, i64* %features.addr, align 8, !dbg !11673
  %and22 = and i64 %16, -65537, !dbg !11673
  store i64 %and22, i64* %features.addr, align 8, !dbg !11673
  br label %if.end23, !dbg !11674

if.end23:                                         ; preds = %if.then21, %land.lhs.true16, %if.end13
  %17 = load i64, i64* %features.addr, align 8, !dbg !11675
  %and24 = and i64 %17, 1048576, !dbg !11677
  %tobool25 = icmp ne i64 %and24, 0, !dbg !11677
  br i1 %tobool25, label %land.lhs.true26, label %if.end33, !dbg !11678

land.lhs.true26:                                  ; preds = %if.end23
  %18 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !11679
  %xbdev27 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %18, i32 0, i32 2, !dbg !11680
  %19 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev27, align 8, !dbg !11680
  %otherend28 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %19, i32 0, i32 2, !dbg !11681
  %20 = load i8*, i8** %otherend28, align 8, !dbg !11681
  %call29 = call i32 @xenbus_read_unsigned(i8* %20, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i32 0) #12, !dbg !11682
  %tobool30 = icmp ne i32 %call29, 0, !dbg !11682
  br i1 %tobool30, label %if.end33, label %if.then31, !dbg !11683

if.then31:                                        ; preds = %land.lhs.true26
  %21 = load i64, i64* %features.addr, align 8, !dbg !11684
  %and32 = and i64 %21, -1048577, !dbg !11684
  store i64 %and32, i64* %features.addr, align 8, !dbg !11684
  br label %if.end33, !dbg !11685

if.end33:                                         ; preds = %if.then31, %land.lhs.true26, %if.end23
  %22 = load i64, i64* %features.addr, align 8, !dbg !11686
  ret i64 %22, !dbg !11687
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_set_features(%struct.net_device* %dev, i64 %features) #3 !dbg !11688 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %features.addr = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11689, metadata !DIExpression()), !dbg !11690
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !11691, metadata !DIExpression()), !dbg !11692
  %0 = load i64, i64* %features.addr, align 8, !dbg !11693
  %and = and i64 %0, 1, !dbg !11695
  %tobool = icmp ne i64 %and, 0, !dbg !11695
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !11696

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11697
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 44, !dbg !11698
  %2 = load i32, i32* %mtu, align 8, !dbg !11698
  %cmp = icmp ugt i32 %2, 1500, !dbg !11699
  br i1 %cmp, label %if.then, label %if.end, !dbg !11700

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11701
  call void (%struct.net_device*, i8*, ...) @netdev_info(%struct.net_device* %3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0)) #13, !dbg !11703
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11704
  %mtu1 = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 44, !dbg !11705
  store i32 1500, i32* %mtu1, align 8, !dbg !11706
  br label %if.end, !dbg !11707

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret i32 0, !dbg !11708
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_xdp(%struct.net_device* %dev, %struct.netdev_bpf* %xdp) #3 !dbg !11709 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %xdp.addr = alloca %struct.netdev_bpf*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11710, metadata !DIExpression()), !dbg !11711
  store %struct.netdev_bpf* %xdp, %struct.netdev_bpf** %xdp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_bpf** %xdp.addr, metadata !11712, metadata !DIExpression()), !dbg !11713
  %0 = load %struct.netdev_bpf*, %struct.netdev_bpf** %xdp.addr, align 8, !dbg !11714
  %command = getelementptr inbounds %struct.netdev_bpf, %struct.netdev_bpf* %0, i32 0, i32 0, !dbg !11715
  %1 = load i32, i32* %command, align 8, !dbg !11715
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !11716

sw.bb:                                            ; preds = %entry
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11717
  %3 = load %struct.netdev_bpf*, %struct.netdev_bpf** %xdp.addr, align 8, !dbg !11719
  %4 = getelementptr inbounds %struct.netdev_bpf, %struct.netdev_bpf* %3, i32 0, i32 1, !dbg !11720
  %5 = bitcast %union.anon.156* %4 to %struct.anon.157*, !dbg !11720
  %prog = getelementptr inbounds %struct.anon.157, %struct.anon.157* %5, i32 0, i32 1, !dbg !11720
  %6 = load %struct.bpf_prog*, %struct.bpf_prog** %prog, align 8, !dbg !11720
  %7 = load %struct.netdev_bpf*, %struct.netdev_bpf** %xdp.addr, align 8, !dbg !11721
  %8 = getelementptr inbounds %struct.netdev_bpf, %struct.netdev_bpf* %7, i32 0, i32 1, !dbg !11722
  %9 = bitcast %union.anon.156* %8 to %struct.anon.157*, !dbg !11722
  %extack = getelementptr inbounds %struct.anon.157, %struct.anon.157* %9, i32 0, i32 2, !dbg !11722
  %10 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack, align 8, !dbg !11722
  %call = call i32 @xennet_xdp_set(%struct.net_device* %2, %struct.bpf_prog* %6, %struct.netlink_ext_ack* %10) #12, !dbg !11723
  store i32 %call, i32* %retval, align 4, !dbg !11724
  br label %return, !dbg !11724

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11725
  br label %return, !dbg !11725

return:                                           ; preds = %sw.default, %sw.bb
  %11 = load i32, i32* %retval, align 4, !dbg !11726
  ret i32 %11, !dbg !11726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_xdp_xmit(%struct.net_device* %dev, i32 %n, %struct.xdp_frame** %frames, i32 %flags) #3 !dbg !11727 {
entry:
  %lock.addr.i36 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i36, metadata !11087, metadata !DIExpression()), !dbg !11728
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !11094, metadata !DIExpression()), !dbg !11730
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11108, metadata !DIExpression()), !dbg !11731
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %n.addr = alloca i32, align 4
  %frames.addr = alloca %struct.xdp_frame**, align 8
  %flags.addr = alloca i32, align 4
  %num_queues = alloca i32, align 4
  %np = alloca %struct.netfront_info*, align 8
  %queue = alloca %struct.netfront_queue*, align 8
  %irq_flags = alloca i64, align 8
  %drops = alloca i32, align 4
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %xdpf = alloca %struct.xdp_frame*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11738, metadata !DIExpression()), !dbg !11739
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !11740, metadata !DIExpression()), !dbg !11741
  store %struct.xdp_frame** %frames, %struct.xdp_frame*** %frames.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xdp_frame*** %frames.addr, metadata !11742, metadata !DIExpression()), !dbg !11743
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11744, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.declare(metadata i32* %num_queues, metadata !11746, metadata !DIExpression()), !dbg !11747
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11748
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 88, !dbg !11749
  %1 = load i32, i32* %real_num_tx_queues, align 4, !dbg !11749
  store i32 %1, i32* %num_queues, align 4, !dbg !11747
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %np, metadata !11750, metadata !DIExpression()), !dbg !11751
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11752
  %call = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !11753
  %3 = bitcast i8* %call to %struct.netfront_info*, !dbg !11753
  store %struct.netfront_info* %3, %struct.netfront_info** %np, align 8, !dbg !11751
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue, metadata !11754, metadata !DIExpression()), !dbg !11755
  store %struct.netfront_queue* null, %struct.netfront_queue** %queue, align 8, !dbg !11755
  call void @llvm.dbg.declare(metadata i64* %irq_flags, metadata !11756, metadata !DIExpression()), !dbg !11757
  call void @llvm.dbg.declare(metadata i32* %drops, metadata !11758, metadata !DIExpression()), !dbg !11759
  store i32 0, i32* %drops, align 4, !dbg !11759
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11760, metadata !DIExpression()), !dbg !11761
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11762, metadata !DIExpression()), !dbg !11763
  %4 = load i32, i32* %flags.addr, align 4, !dbg !11764
  %and = and i32 %4, -2, !dbg !11764
  %tobool = icmp ne i32 %and, 0, !dbg !11764
  %lnot = xor i1 %tobool, true, !dbg !11764
  %lnot1 = xor i1 %lnot, true, !dbg !11764
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11764
  %conv = sext i32 %lnot.ext to i64, !dbg !11764
  %tobool2 = icmp ne i64 %conv, 0, !dbg !11764
  br i1 %tobool2, label %if.then, label %if.end, !dbg !11766

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11767
  br label %return, !dbg !11767

if.end:                                           ; preds = %entry
  %5 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !11768
  %queues = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %5, i32 0, i32 3, !dbg !11769
  %6 = load %struct.netfront_queue*, %struct.netfront_queue** %queues, align 8, !dbg !11769
  %7 = load i32, i32* %num_queues, align 4, !dbg !11770
  %rem = urem i32 0, %7, !dbg !11771
  %idxprom = zext i32 %rem to i64, !dbg !11768
  %arrayidx = getelementptr %struct.netfront_queue, %struct.netfront_queue* %6, i64 %idxprom, !dbg !11768
  store %struct.netfront_queue* %arrayidx, %struct.netfront_queue** %queue, align 8, !dbg !11772
  br label %do.body, !dbg !11773

do.body:                                          ; preds = %if.end
  br label %do.body3, !dbg !11774

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11775, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11778, metadata !DIExpression()), !dbg !11777
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11777
  %conv4 = zext i1 %cmp to i32, !dbg !11777
  store i32 1, i32* %tmp, align 4, !dbg !11777
  %8 = load i32, i32* %tmp, align 4, !dbg !11777
  br label %do.body5, !dbg !11779

do.body5:                                         ; preds = %do.body3
  br label %do.body6, !dbg !11780

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !11781

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !11783, metadata !DIExpression()), !dbg !11786
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !11787, metadata !DIExpression()), !dbg !11786
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !11786
  %conv11 = zext i1 %cmp10 to i32, !dbg !11786
  store i32 1, i32* %tmp12, align 4, !dbg !11786
  %9 = load i32, i32* %tmp12, align 4, !dbg !11786
  %call13 = call i64 @arch_local_irq_save() #12, !dbg !11788
  store i64 %call13, i64* %irq_flags, align 8, !dbg !11788
  br label %do.end, !dbg !11788

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !11781

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !11780

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11789, !srcloc !11790
  br label %do.body16, !dbg !11789

do.body16:                                        ; preds = %do.body15
  %10 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11791
  %tx_lock = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %10, i32 0, i32 11, !dbg !11791
  store %struct.spinlock* %tx_lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11792
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !11793
  %rlock.i = bitcast %union.anon.2* %12 to %struct.raw_spinlock*, !dbg !11793
  br label %do.end18, !dbg !11791

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !11789

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11780

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !11779

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !11774

do.end22:                                         ; preds = %do.end21
  store i32 0, i32* %i, align 4, !dbg !11794
  br label %for.cond, !dbg !11796

for.cond:                                         ; preds = %for.inc, %do.end22
  %13 = load i32, i32* %i, align 4, !dbg !11797
  %14 = load i32, i32* %n.addr, align 4, !dbg !11799
  %cmp23 = icmp slt i32 %13, %14, !dbg !11800
  br i1 %cmp23, label %for.body, label %for.end, !dbg !11801

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.xdp_frame** %xdpf, metadata !11802, metadata !DIExpression()), !dbg !11804
  %15 = load %struct.xdp_frame**, %struct.xdp_frame*** %frames.addr, align 8, !dbg !11805
  %16 = load i32, i32* %i, align 4, !dbg !11806
  %idxprom25 = sext i32 %16 to i64, !dbg !11805
  %arrayidx26 = getelementptr %struct.xdp_frame*, %struct.xdp_frame** %15, i64 %idxprom25, !dbg !11805
  %17 = load %struct.xdp_frame*, %struct.xdp_frame** %arrayidx26, align 8, !dbg !11805
  store %struct.xdp_frame* %17, %struct.xdp_frame** %xdpf, align 8, !dbg !11804
  %18 = load %struct.xdp_frame*, %struct.xdp_frame** %xdpf, align 8, !dbg !11807
  %tobool27 = icmp ne %struct.xdp_frame* %18, null, !dbg !11807
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !11809

if.then28:                                        ; preds = %for.body
  br label %for.inc, !dbg !11810

if.end29:                                         ; preds = %for.body
  %19 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11811
  %20 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11812
  %21 = load %struct.xdp_frame*, %struct.xdp_frame** %xdpf, align 8, !dbg !11813
  %call30 = call i32 @xennet_xdp_xmit_one(%struct.net_device* %19, %struct.netfront_queue* %20, %struct.xdp_frame* %21) #12, !dbg !11814
  store i32 %call30, i32* %err, align 4, !dbg !11815
  %22 = load i32, i32* %err, align 4, !dbg !11816
  %tobool31 = icmp ne i32 %22, 0, !dbg !11816
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !11818

if.then32:                                        ; preds = %if.end29
  %23 = load %struct.xdp_frame*, %struct.xdp_frame** %xdpf, align 8, !dbg !11819
  call void @xdp_return_frame_rx_napi(%struct.xdp_frame* %23) #12, !dbg !11821
  %24 = load i32, i32* %drops, align 4, !dbg !11822
  %inc = add i32 %24, 1, !dbg !11822
  store i32 %inc, i32* %drops, align 4, !dbg !11822
  br label %if.end33, !dbg !11823

if.end33:                                         ; preds = %if.then32, %if.end29
  br label %for.inc, !dbg !11824

for.inc:                                          ; preds = %if.end33, %if.then28
  %25 = load i32, i32* %i, align 4, !dbg !11825
  %inc34 = add i32 %25, 1, !dbg !11825
  store i32 %inc34, i32* %i, align 4, !dbg !11825
  br label %for.cond, !dbg !11826, !llvm.loop !11827

for.end:                                          ; preds = %for.cond
  %26 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !11829
  %tx_lock35 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %26, i32 0, i32 11, !dbg !11830
  %27 = load i64, i64* %irq_flags, align 8, !dbg !11831
  store %struct.spinlock* %tx_lock35, %struct.spinlock** %lock.addr.i36, align 8
  store i64 %27, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !749, metadata !11257, metadata !DIExpression()) #8, !dbg !11832
  call void @llvm.dbg.declare(metadata !749, metadata !11261, metadata !DIExpression()) #8, !dbg !11832
  store i32 1, i32* %tmp.i, align 4, !dbg !11832
  %28 = load i32, i32* %tmp.i, align 4, !dbg !11832
  call void @llvm.dbg.declare(metadata !749, metadata !11262, metadata !DIExpression()) #8, !dbg !11833
  call void @llvm.dbg.declare(metadata !749, metadata !11268, metadata !DIExpression()) #8, !dbg !11833
  store i32 1, i32* %tmp8.i, align 4, !dbg !11833
  %29 = load i32, i32* %tmp8.i, align 4, !dbg !11833
  %30 = load i64, i64* %flags.addr.i, align 8, !dbg !11834
  call void @arch_local_irq_restore(i64 %30) #14, !dbg !11834
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11835, !srcloc !11272
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i36, align 8, !dbg !11836
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !11836
  %rlock.i37 = bitcast %union.anon.2* %32 to %struct.raw_spinlock*, !dbg !11836
  %33 = load i32, i32* %n.addr, align 4, !dbg !11837
  %34 = load i32, i32* %drops, align 4, !dbg !11838
  %sub = sub i32 %33, %34, !dbg !11839
  store i32 %sub, i32* %retval, align 4, !dbg !11840
  br label %return, !dbg !11840

return:                                           ; preds = %for.end, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !11841
  ret i32 %35, !dbg !11841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_enable(%struct.napi_struct* %n) #3 !dbg !11842 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !11845, metadata !DIExpression()), !dbg !11846
  br label %do.body, !dbg !11847

do.body:                                          ; preds = %entry
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !11848
  %state = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %0, i32 0, i32 1, !dbg !11848
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !11848
  %lnot = xor i1 %call, true, !dbg !11848
  %lnot1 = xor i1 %lnot, true, !dbg !11848
  %lnot2 = xor i1 %lnot1, true, !dbg !11848
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11848
  %conv = sext i32 %lnot.ext to i64, !dbg !11848
  %tobool = icmp ne i64 %conv, 0, !dbg !11848
  br i1 %tobool, label %if.then, label %if.end, !dbg !11851

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !11848

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !11852

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !11854

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !11852

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i32 509, i32 0, i64 12) #8, !dbg !11856, !srcloc !11858
  br label %do.end6, !dbg !11856

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !11852

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 278) #8, !dbg !11859, !srcloc !11862
  unreachable, !dbg !11863

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !11852

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !11852

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !11851

do.end10:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11864, !srcloc !11865
  %1 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !11866
  %state11 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %1, i32 0, i32 1, !dbg !11867
  call void @clear_bit(i64 0, i64* %state11) #12, !dbg !11868
  %2 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !11869
  %state12 = getelementptr inbounds %struct.napi_struct, %struct.napi_struct* %2, i32 0, i32 1, !dbg !11870
  call void @clear_bit(i64 3, i64* %state12) #12, !dbg !11871
  ret void, !dbg !11872
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_lock_bh(%struct.spinlock* %lock) #5 !dbg !11873 {
entry:
  %val.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i.i, metadata !11876, metadata !DIExpression()), !dbg !11879
  %pao_ID__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pao_ID__.i.i, metadata !11887, metadata !DIExpression()), !dbg !11890
  %pto_val__.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pto_val__.i.i, metadata !11891, metadata !DIExpression()), !dbg !11895
  %ip.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %ip.addr.i, metadata !11896, metadata !DIExpression()), !dbg !11897
  %cnt.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %cnt.addr.i, metadata !11898, metadata !DIExpression()), !dbg !11899
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !11900, metadata !DIExpression()), !dbg !11901
  br label %do.body, !dbg !11902

do.body:                                          ; preds = %entry
  br label %__here, !dbg !11903

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !11905), !dbg !11903
  store i64 ptrtoint (i8* blockaddress(@spin_lock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !11903
  %0 = load i64, i64* %tmp, align 8, !dbg !11903
  store i64 %0, i64* %ip.addr.i, align 8
  store i32 512, i32* %cnt.addr.i, align 4
  %1 = load i32, i32* %cnt.addr.i, align 4, !dbg !11906
  store i32 %1, i32* %val.addr.i.i, align 4
  %2 = load i32, i32* %val.addr.i.i, align 4, !dbg !11890
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #8, !dbg !11890
  br i1 %3, label %land.lhs.true.i.i, label %cond.false.i.i, !dbg !11890

land.lhs.true.i.i:                                ; preds = %__here
  %4 = load i32, i32* %val.addr.i.i, align 4, !dbg !11890
  %cmp.i.i = icmp eq i32 %4, 1, !dbg !11890
  br i1 %cmp.i.i, label %cond.true.i.i, label %lor.lhs.false.i.i, !dbg !11890

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i
  %5 = load i32, i32* %val.addr.i.i, align 4, !dbg !11890
  %cmp1.i.i = icmp eq i32 %5, -1, !dbg !11890
  br i1 %cmp1.i.i, label %cond.true.i.i, label %cond.false.i.i, !dbg !11890

cond.true.i.i:                                    ; preds = %lor.lhs.false.i.i, %land.lhs.true.i.i
  %6 = load i32, i32* %val.addr.i.i, align 4, !dbg !11890
  br label %__local_bh_disable_ip.exit, !dbg !11890

cond.false.i.i:                                   ; preds = %lor.lhs.false.i.i, %__here
  br label %__local_bh_disable_ip.exit, !dbg !11890

__local_bh_disable_ip.exit:                       ; preds = %cond.true.i.i, %cond.false.i.i
  %cond.i.i = phi i32 [ %6, %cond.true.i.i ], [ 0, %cond.false.i.i ], !dbg !11890
  store i32 %cond.i.i, i32* %pao_ID__.i.i, align 4, !dbg !11890
  %7 = load i32, i32* %val.addr.i.i, align 4, !dbg !11895
  %conv.i.i = sext i32 %7 to i64, !dbg !11895
  %and.i.i = and i64 %conv.i.i, 4294967295, !dbg !11895
  %conv3.i.i = trunc i64 %and.i.i to i32, !dbg !11895
  store i32 %conv3.i.i, i32* %pto_val__.i.i, align 4, !dbg !11895
  %8 = load i32, i32* %pto_val__.i.i, align 4, !dbg !11895
  call void asm "addl $1, $0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %8, i32* @__preempt_count) #8, !dbg !11895, !srcloc !11907
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11908, !srcloc !11909
  br label %do.body1, !dbg !11910

do.body1:                                         ; preds = %__local_bh_disable_ip.exit
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !11911
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !11911
  %rlock = bitcast %union.anon.2* %10 to %struct.raw_spinlock*, !dbg !11911
  br label %do.end, !dbg !11911

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !11910

do.end2:                                          ; preds = %do.end
  ret void, !dbg !11913

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_carrier_ok(%struct.net_device* %dev) #3 !dbg !11914 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !11917, metadata !DIExpression()), !dbg !11918
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !11919
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !11920
  %call = call zeroext i1 @test_bit(i64 2, i64* %state) #12, !dbg !11921
  %lnot = xor i1 %call, true, !dbg !11922
  ret i1 %lnot, !dbg !11923
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_alloc_rx_buffers(%struct.netfront_queue* %queue) #3 !dbg !11924 {
entry:
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %req_prod = alloca i32, align 4
  %notify = alloca i32, align 4
  %err = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %id = alloca i16, align 2
  %ref = alloca i32, align 4
  %page = alloca %struct.page*, align 8
  %req = alloca %struct.xen_netif_rx_request*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__old = alloca i32, align 4
  %__new = alloca i32, align 4
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !11927, metadata !DIExpression()), !dbg !11928
  call void @llvm.dbg.declare(metadata i32* %req_prod, metadata !11929, metadata !DIExpression()), !dbg !11930
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !11931
  %rx = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %0, i32 0, i32 20, !dbg !11932
  %req_prod_pvt = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx, i32 0, i32 0, !dbg !11933
  %1 = load i32, i32* %req_prod_pvt, align 8, !dbg !11933
  store i32 %1, i32* %req_prod, align 4, !dbg !11930
  call void @llvm.dbg.declare(metadata i32* %notify, metadata !11934, metadata !DIExpression()), !dbg !11935
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11936, metadata !DIExpression()), !dbg !11937
  store i32 0, i32* %err, align 4, !dbg !11937
  %2 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !11938
  %info = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %2, i32 0, i32 2, !dbg !11938
  %3 = load %struct.netfront_info*, %struct.netfront_info** %info, align 32, !dbg !11938
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %3, i32 0, i32 1, !dbg !11938
  %4 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !11938
  %call = call zeroext i1 @netif_carrier_ok(%struct.net_device* %4) #12, !dbg !11938
  %lnot = xor i1 %call, true, !dbg !11938
  %lnot1 = xor i1 %lnot, true, !dbg !11938
  %lnot2 = xor i1 %lnot1, true, !dbg !11938
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11938
  %conv = sext i32 %lnot.ext to i64, !dbg !11938
  %tobool = icmp ne i64 %conv, 0, !dbg !11938
  br i1 %tobool, label %if.then, label %if.end, !dbg !11940

if.then:                                          ; preds = %entry
  br label %if.end120, !dbg !11941

if.end:                                           ; preds = %entry
  %5 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !11942
  %rx3 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %5, i32 0, i32 20, !dbg !11944
  %req_prod_pvt4 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx3, i32 0, i32 0, !dbg !11945
  %6 = load i32, i32* %req_prod_pvt4, align 8, !dbg !11945
  store i32 %6, i32* %req_prod, align 4, !dbg !11946
  br label %for.cond, !dbg !11947

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %req_prod, align 4, !dbg !11948
  %8 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !11950
  %rx5 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %8, i32 0, i32 20, !dbg !11951
  %rsp_cons = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx5, i32 0, i32 1, !dbg !11952
  %9 = load i32, i32* %rsp_cons, align 4, !dbg !11952
  %sub = sub i32 %7, %9, !dbg !11953
  %conv6 = zext i32 %sub to i64, !dbg !11948
  %cmp = icmp ult i64 %conv6, 256, !dbg !11954
  br i1 %cmp, label %for.body, label %for.end, !dbg !11955

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !11956, metadata !DIExpression()), !dbg !11958
  call void @llvm.dbg.declare(metadata i16* %id, metadata !11959, metadata !DIExpression()), !dbg !11960
  call void @llvm.dbg.declare(metadata i32* %ref, metadata !11961, metadata !DIExpression()), !dbg !11962
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !11963, metadata !DIExpression()), !dbg !11964
  call void @llvm.dbg.declare(metadata %struct.xen_netif_rx_request** %req, metadata !11965, metadata !DIExpression()), !dbg !11967
  %10 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !11968
  %call8 = call %struct.sk_buff* @xennet_alloc_one_rx_buffer(%struct.netfront_queue* %10) #12, !dbg !11969
  store %struct.sk_buff* %call8, %struct.sk_buff** %skb, align 8, !dbg !11970
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !11971
  %tobool9 = icmp ne %struct.sk_buff* %11, null, !dbg !11971
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !11973

if.then10:                                        ; preds = %for.body
  store i32 -12, i32* %err, align 4, !dbg !11974
  br label %for.end, !dbg !11976

if.end11:                                         ; preds = %for.body
  %12 = load i32, i32* %req_prod, align 4, !dbg !11977
  %call12 = call i32 @xennet_rxidx(i32 %12) #12, !dbg !11978
  %conv13 = trunc i32 %call12 to i16, !dbg !11978
  store i16 %conv13, i16* %id, align 2, !dbg !11979
  br label %do.body, !dbg !11980

do.body:                                          ; preds = %if.end11
  %13 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !11981
  %rx_skbs = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %13, i32 0, i32 23, !dbg !11981
  %14 = load i16, i16* %id, align 2, !dbg !11981
  %idxprom = zext i16 %14 to i64, !dbg !11981
  %arrayidx = getelementptr [256 x %struct.sk_buff*], [256 x %struct.sk_buff*]* %rx_skbs, i64 0, i64 %idxprom, !dbg !11981
  %15 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx, align 8, !dbg !11981
  %tobool14 = icmp ne %struct.sk_buff* %15, null, !dbg !11981
  %lnot15 = xor i1 %tobool14, true, !dbg !11981
  %lnot17 = xor i1 %lnot15, true, !dbg !11981
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !11981
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !11981
  %tobool20 = icmp ne i64 %conv19, 0, !dbg !11981
  br i1 %tobool20, label %if.then21, label %if.end29, !dbg !11984

if.then21:                                        ; preds = %do.body
  br label %do.body22, !dbg !11981

do.body22:                                        ; preds = %if.then21
  br label %do.body23, !dbg !11985

do.body23:                                        ; preds = %do.body22
  br label %do.end, !dbg !11987

do.end:                                           ; preds = %do.body23
  br label %do.body24, !dbg !11985

do.body24:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i32 323, i32 0, i64 12) #8, !dbg !11989, !srcloc !11991
  br label %do.end25, !dbg !11989

do.end25:                                         ; preds = %do.body24
  br label %do.body26, !dbg !11985

do.body26:                                        ; preds = %do.end25
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 636) #8, !dbg !11992, !srcloc !11995
  unreachable, !dbg !11996

do.end27:                                         ; No predecessors!
  br label %do.end28, !dbg !11985

do.end28:                                         ; preds = %do.end27
  br label %if.end29, !dbg !11985

if.end29:                                         ; preds = %do.end28, %do.body
  br label %do.end30, !dbg !11984

do.end30:                                         ; preds = %if.end29
  %16 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !11997
  %17 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !11998
  %rx_skbs31 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %17, i32 0, i32 23, !dbg !11999
  %18 = load i16, i16* %id, align 2, !dbg !12000
  %idxprom32 = zext i16 %18 to i64, !dbg !11998
  %arrayidx33 = getelementptr [256 x %struct.sk_buff*], [256 x %struct.sk_buff*]* %rx_skbs31, i64 0, i64 %idxprom32, !dbg !11998
  store %struct.sk_buff* %16, %struct.sk_buff** %arrayidx33, align 8, !dbg !12001
  %19 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12002
  %gref_rx_head = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %19, i32 0, i32 24, !dbg !12003
  %call34 = call i32 @gnttab_claim_grant_reference(i32* %gref_rx_head) #12, !dbg !12004
  store i32 %call34, i32* %ref, align 4, !dbg !12005
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12006, metadata !DIExpression()), !dbg !12008
  %20 = load i32, i32* %ref, align 4, !dbg !12008
  %conv35 = sext i32 %20 to i64, !dbg !12008
  %21 = inttoptr i64 %conv35 to i8*, !dbg !12008
  %22 = ptrtoint i8* %21 to i64, !dbg !12008
  %cmp36 = icmp uge i64 %22, -4095, !dbg !12008
  %lnot38 = xor i1 %cmp36, true, !dbg !12008
  %lnot40 = xor i1 %lnot38, true, !dbg !12008
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !12008
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !12008
  %tobool43 = icmp ne i64 %conv42, 0, !dbg !12008
  %lnot44 = xor i1 %tobool43, true, !dbg !12008
  %lnot46 = xor i1 %lnot44, true, !dbg !12008
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !12008
  store i32 %lnot.ext47, i32* %__ret_warn_on, align 4, !dbg !12008
  %23 = load i32, i32* %__ret_warn_on, align 4, !dbg !12009
  %tobool48 = icmp ne i32 %23, 0, !dbg !12009
  %lnot49 = xor i1 %tobool48, true, !dbg !12009
  %lnot51 = xor i1 %lnot49, true, !dbg !12009
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !12009
  %conv53 = sext i32 %lnot.ext52 to i64, !dbg !12009
  %tobool54 = icmp ne i64 %conv53, 0, !dbg !12009
  br i1 %tobool54, label %if.then55, label %if.end64, !dbg !12008

if.then55:                                        ; preds = %do.end30
  br label %do.body56, !dbg !12009

do.body56:                                        ; preds = %if.then55
  br label %do.body57, !dbg !12011

do.body57:                                        ; preds = %do.body56
  br label %do.end58, !dbg !12013

do.end58:                                         ; preds = %do.body57
  br label %do.body59, !dbg !12011

do.body59:                                        ; preds = %do.end58
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i32 327, i32 2307, i64 12) #8, !dbg !12015, !srcloc !12017
  br label %do.end60, !dbg !12015

do.end60:                                         ; preds = %do.body59
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 637) #8, !dbg !12018, !srcloc !12020
  br label %do.body61, !dbg !12011

do.body61:                                        ; preds = %do.end60
  br label %do.end62, !dbg !12021

do.end62:                                         ; preds = %do.body61
  br label %do.end63, !dbg !12011

do.end63:                                         ; preds = %do.end62
  br label %if.end64, !dbg !12011

if.end64:                                         ; preds = %do.end63, %do.end30
  %24 = load i32, i32* %__ret_warn_on, align 4, !dbg !12008
  %tobool65 = icmp ne i32 %24, 0, !dbg !12008
  %lnot66 = xor i1 %tobool65, true, !dbg !12008
  %lnot68 = xor i1 %lnot66, true, !dbg !12008
  %lnot.ext69 = zext i1 %lnot68 to i32, !dbg !12008
  %conv70 = sext i32 %lnot.ext69 to i64, !dbg !12008
  store i64 %conv70, i64* %tmp, align 8, !dbg !12009
  %25 = load i64, i64* %tmp, align 8, !dbg !12008
  %26 = load i32, i32* %ref, align 4, !dbg !12023
  %27 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12024
  %grant_rx_ref = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %27, i32 0, i32 25, !dbg !12025
  %28 = load i16, i16* %id, align 2, !dbg !12026
  %idxprom71 = zext i16 %28 to i64, !dbg !12024
  %arrayidx72 = getelementptr [256 x i32], [256 x i32]* %grant_rx_ref, i64 0, i64 %idxprom71, !dbg !12024
  store i32 %26, i32* %arrayidx72, align 4, !dbg !12027
  %29 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12028
  %call73 = call i8* @skb_end_pointer(%struct.sk_buff* %29) #12, !dbg !12028
  %30 = bitcast i8* %call73 to %struct.skb_shared_info*, !dbg !12029
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %30, i32 0, i32 12, !dbg !12029
  %arrayidx74 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 0, !dbg !12028
  %call75 = call %struct.page* @skb_frag_page(%struct.bio_vec* %arrayidx74) #12, !dbg !12030
  store %struct.page* %call75, %struct.page** %page, align 8, !dbg !12031
  %31 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12032
  %rx76 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %31, i32 0, i32 20, !dbg !12032
  %sring = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx76, i32 0, i32 3, !dbg !12032
  %32 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring, align 8, !dbg !12032
  %ring = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %32, i32 0, i32 5, !dbg !12032
  %33 = load i32, i32* %req_prod, align 4, !dbg !12032
  %34 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12032
  %rx77 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %34, i32 0, i32 20, !dbg !12032
  %nr_ents = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx77, i32 0, i32 2, !dbg !12032
  %35 = load i32, i32* %nr_ents, align 8, !dbg !12032
  %sub78 = sub i32 %35, 1, !dbg !12032
  %and = and i32 %33, %sub78, !dbg !12032
  %idxprom79 = zext i32 %and to i64, !dbg !12032
  %arrayidx80 = getelementptr [1 x %union.xen_netif_rx_sring_entry], [1 x %union.xen_netif_rx_sring_entry]* %ring, i64 0, i64 %idxprom79, !dbg !12032
  %req81 = bitcast %union.xen_netif_rx_sring_entry* %arrayidx80 to %struct.xen_netif_rx_request*, !dbg !12032
  store %struct.xen_netif_rx_request* %req81, %struct.xen_netif_rx_request** %req, align 8, !dbg !12033
  %36 = load i32, i32* %ref, align 4, !dbg !12034
  %37 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12035
  %info82 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %37, i32 0, i32 2, !dbg !12036
  %38 = load %struct.netfront_info*, %struct.netfront_info** %info82, align 32, !dbg !12036
  %xbdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %38, i32 0, i32 2, !dbg !12037
  %39 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev, align 8, !dbg !12037
  %otherend_id = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %39, i32 0, i32 3, !dbg !12038
  %40 = load i32, i32* %otherend_id, align 8, !dbg !12038
  %conv83 = trunc i32 %40 to i16, !dbg !12035
  %41 = load %struct.page*, %struct.page** %page, align 8, !dbg !12039
  call void @gnttab_page_grant_foreign_access_ref_one(i32 %36, i16 zeroext %conv83, %struct.page* %41, i32 0) #12, !dbg !12040
  %42 = load i16, i16* %id, align 2, !dbg !12041
  %43 = load %struct.xen_netif_rx_request*, %struct.xen_netif_rx_request** %req, align 8, !dbg !12042
  %id84 = getelementptr inbounds %struct.xen_netif_rx_request, %struct.xen_netif_rx_request* %43, i32 0, i32 0, !dbg !12043
  store i16 %42, i16* %id84, align 4, !dbg !12044
  %44 = load i32, i32* %ref, align 4, !dbg !12045
  %45 = load %struct.xen_netif_rx_request*, %struct.xen_netif_rx_request** %req, align 8, !dbg !12046
  %gref = getelementptr inbounds %struct.xen_netif_rx_request, %struct.xen_netif_rx_request* %45, i32 0, i32 2, !dbg !12047
  store i32 %44, i32* %gref, align 4, !dbg !12048
  br label %for.inc, !dbg !12049

for.inc:                                          ; preds = %if.end64
  %46 = load i32, i32* %req_prod, align 4, !dbg !12050
  %inc = add i32 %46, 1, !dbg !12050
  store i32 %inc, i32* %req_prod, align 4, !dbg !12050
  br label %for.cond, !dbg !12051, !llvm.loop !12052

for.end:                                          ; preds = %if.then10, %for.cond
  %47 = load i32, i32* %req_prod, align 4, !dbg !12054
  %48 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12055
  %rx85 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %48, i32 0, i32 20, !dbg !12056
  %req_prod_pvt86 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx85, i32 0, i32 0, !dbg !12057
  store i32 %47, i32* %req_prod_pvt86, align 8, !dbg !12058
  %49 = load i32, i32* %req_prod, align 4, !dbg !12059
  %50 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12061
  %rx87 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %50, i32 0, i32 20, !dbg !12062
  %rsp_cons88 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx87, i32 0, i32 1, !dbg !12063
  %51 = load i32, i32* %rsp_cons88, align 4, !dbg !12063
  %sub89 = sub i32 %49, %51, !dbg !12064
  %cmp90 = icmp ult i32 %sub89, 19, !dbg !12065
  br i1 %cmp90, label %if.then99, label %lor.lhs.false, !dbg !12066

lor.lhs.false:                                    ; preds = %for.end
  %52 = load i32, i32* %err, align 4, !dbg !12067
  %tobool92 = icmp ne i32 %52, 0, !dbg !12067
  %lnot93 = xor i1 %tobool92, true, !dbg !12067
  %lnot95 = xor i1 %lnot93, true, !dbg !12067
  %lnot.ext96 = zext i1 %lnot95 to i32, !dbg !12067
  %conv97 = sext i32 %lnot.ext96 to i64, !dbg !12067
  %tobool98 = icmp ne i64 %conv97, 0, !dbg !12067
  br i1 %tobool98, label %if.then99, label %if.end101, !dbg !12068

if.then99:                                        ; preds = %lor.lhs.false, %for.end
  %53 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12069
  %rx_refill_timer = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %53, i32 0, i32 22, !dbg !12071
  %54 = load volatile i64, i64* @jiffies, align 8, !dbg !12072
  %add = add i64 %54, 25, !dbg !12073
  %call100 = call i32 @mod_timer(%struct.timer_list* %rx_refill_timer, i64 %add) #12, !dbg !12074
  br label %if.end120, !dbg !12075

if.end101:                                        ; preds = %lor.lhs.false
  br label %do.body102, !dbg !12076

do.body102:                                       ; preds = %if.end101
  call void @llvm.dbg.declare(metadata i32* %__old, metadata !12077, metadata !DIExpression()), !dbg !12079
  %55 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12079
  %rx103 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %55, i32 0, i32 20, !dbg !12079
  %sring104 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx103, i32 0, i32 3, !dbg !12079
  %56 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring104, align 8, !dbg !12079
  %req_prod105 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %56, i32 0, i32 0, !dbg !12079
  %57 = load i32, i32* %req_prod105, align 4, !dbg !12079
  store i32 %57, i32* %__old, align 4, !dbg !12079
  call void @llvm.dbg.declare(metadata i32* %__new, metadata !12080, metadata !DIExpression()), !dbg !12079
  %58 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12079
  %rx106 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %58, i32 0, i32 20, !dbg !12079
  %req_prod_pvt107 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx106, i32 0, i32 0, !dbg !12079
  %59 = load i32, i32* %req_prod_pvt107, align 8, !dbg !12079
  store i32 %59, i32* %__new, align 4, !dbg !12079
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12079, !srcloc !12081
  %60 = load i32, i32* %__new, align 4, !dbg !12079
  %61 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12079
  %rx108 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %61, i32 0, i32 20, !dbg !12079
  %sring109 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx108, i32 0, i32 3, !dbg !12079
  %62 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring109, align 8, !dbg !12079
  %req_prod110 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %62, i32 0, i32 0, !dbg !12079
  store i32 %60, i32* %req_prod110, align 4, !dbg !12079
  call void asm sideeffect "lock; addl $$0,-4(%rsp)", "~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12079, !srcloc !12082
  %63 = load i32, i32* %__new, align 4, !dbg !12079
  %64 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12079
  %rx111 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %64, i32 0, i32 20, !dbg !12079
  %sring112 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx111, i32 0, i32 3, !dbg !12079
  %65 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring112, align 8, !dbg !12079
  %req_event = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %65, i32 0, i32 1, !dbg !12079
  %66 = load i32, i32* %req_event, align 4, !dbg !12079
  %sub113 = sub i32 %63, %66, !dbg !12079
  %67 = load i32, i32* %__new, align 4, !dbg !12079
  %68 = load i32, i32* %__old, align 4, !dbg !12079
  %sub114 = sub i32 %67, %68, !dbg !12079
  %cmp115 = icmp ult i32 %sub113, %sub114, !dbg !12079
  %conv116 = zext i1 %cmp115 to i32, !dbg !12079
  store i32 %conv116, i32* %notify, align 4, !dbg !12079
  br label %do.end117, !dbg !12079

do.end117:                                        ; preds = %do.body102
  %69 = load i32, i32* %notify, align 4, !dbg !12083
  %tobool118 = icmp ne i32 %69, 0, !dbg !12083
  br i1 %tobool118, label %if.then119, label %if.end120, !dbg !12085

if.then119:                                       ; preds = %do.end117
  %70 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12086
  %rx_irq = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %70, i32 0, i32 8, !dbg !12087
  %71 = load i32, i32* %rx_irq, align 4, !dbg !12087
  call void @notify_remote_via_irq(i32 %71) #12, !dbg !12088
  br label %if.end120, !dbg !12088

if.end120:                                        ; preds = %if.then, %if.then99, %if.then119, %do.end117
  ret void, !dbg !12089
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_schedule(%struct.napi_struct* %n) #3 !dbg !12090 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !12091, metadata !DIExpression()), !dbg !12092
  %0 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !12093
  %call = call zeroext i1 @napi_schedule_prep(%struct.napi_struct* %0) #12, !dbg !12095
  br i1 %call, label %if.then, label %if.end, !dbg !12096

if.then:                                          ; preds = %entry
  %1 = load %struct.napi_struct*, %struct.napi_struct** %n.addr, align 8, !dbg !12097
  call void @__napi_schedule(%struct.napi_struct* %1) #12, !dbg !12098
  br label %if.end, !dbg !12098

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12099
}

; Function Attrs: alwaysinline noredzone nounwind sspstrong
define internal void @spin_unlock_bh(%struct.spinlock* %lock) #5 !dbg !12100 {
entry:
  %lock.addr = alloca %struct.spinlock*, align 8
  %tmp = alloca i64, align 8
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr, metadata !12101, metadata !DIExpression()), !dbg !12102
  br label %do.body, !dbg !12103

do.body:                                          ; preds = %entry
  br label %__here, !dbg !12104

__here:                                           ; preds = %indirectgoto, %do.body
  call void @llvm.dbg.label(metadata !12107), !dbg !12104
  store i64 ptrtoint (i8* blockaddress(@spin_unlock_bh, %__here) to i64), i64* %tmp, align 8, !dbg !12104
  %0 = load i64, i64* %tmp, align 8, !dbg !12104
  call void @__local_bh_enable_ip(i64 %0, i32 512) #12, !dbg !12108
  br label %do.body1, !dbg !12108

do.body1:                                         ; preds = %__here
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr, align 8, !dbg !12109
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !12109
  %rlock = bitcast %union.anon.2* %2 to %struct.raw_spinlock*, !dbg !12109
  br label %do.end, !dbg !12109

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !12108

do.end2:                                          ; preds = %do.end
  ret void, !dbg !12111

indirectgoto:                                     ; No predecessors!
  indirectbr i8* undef, [label %__here]
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_tx_start_all_queues(%struct.net_device* %dev) #3 !dbg !12112 {
entry:
  %dev_queue.addr.i = alloca %struct.netdev_queue*, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr.i, metadata !12113, metadata !DIExpression()), !dbg !12115
  %dev.addr = alloca %struct.net_device*, align 8
  %i = alloca i32, align 4
  %txq = alloca %struct.netdev_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12120, metadata !DIExpression()), !dbg !12121
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12122, metadata !DIExpression()), !dbg !12123
  store i32 0, i32* %i, align 4, !dbg !12124
  br label %for.cond, !dbg !12125

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12126
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12127
  %num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 87, !dbg !12128
  %2 = load i32, i32* %num_tx_queues, align 8, !dbg !12128
  %cmp = icmp ult i32 %0, %2, !dbg !12129
  br i1 %cmp, label %for.body, label %for.end, !dbg !12130

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %txq, metadata !12131, metadata !DIExpression()), !dbg !12132
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12133
  %4 = load i32, i32* %i, align 4, !dbg !12134
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %3, i32 %4) #12, !dbg !12135
  store %struct.netdev_queue* %call, %struct.netdev_queue** %txq, align 8, !dbg !12132
  %5 = load %struct.netdev_queue*, %struct.netdev_queue** %txq, align 8, !dbg !12136
  store %struct.netdev_queue* %5, %struct.netdev_queue** %dev_queue.addr.i, align 8
  %6 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr.i, align 8, !dbg !12137
  %state.i = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %6, i32 0, i32 10, !dbg !12138
  call void @clear_bit(i64 0, i64* %state.i) #14, !dbg !12139
  br label %for.inc, !dbg !12140

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !12141
  %inc = add i32 %7, 1, !dbg !12141
  store i32 %inc, i32* %i, align 4, !dbg !12141
  br label %for.cond, !dbg !12142, !llvm.loop !12143

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #3 !dbg !12146 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !12150, metadata !DIExpression()), !dbg !12153
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !12155, metadata !DIExpression()), !dbg !12156
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !12157, metadata !DIExpression()), !dbg !12158
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12159, metadata !DIExpression()), !dbg !12161
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12163, metadata !DIExpression()), !dbg !12164
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12165, metadata !DIExpression()), !dbg !12173
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12175, metadata !DIExpression()), !dbg !12176
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12177, metadata !DIExpression()), !dbg !12178
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12179, metadata !DIExpression()), !dbg !12180
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12181
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12182
  %div = sdiv i64 %1, 64, !dbg !12182
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12183
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12181
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12184
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12185
  %conv.i = trunc i64 %4 to i32, !dbg !12185
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #14, !dbg !12186
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12187
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12187
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !12187
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12188
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !12188
  br i1 %8, label %cond.true, label %cond.false, !dbg !12188

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !12188
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !12188
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !12189
  %and.i = and i64 %11, 63, !dbg !12190
  %shl.i = shl i64 1, %and.i, !dbg !12191
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !12192
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !12193
  %shr.i = ashr i64 %13, 6, !dbg !12194
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !12192
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !12192
  %and1.i = and i64 %shl.i, %14, !dbg !12195
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !12196
  %conv = zext i1 %cmp.i to i32, !dbg !12188
  br label %cond.end, !dbg !12188

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !12188
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !12188
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !12197
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !12198
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #8, !dbg !12199, !srcloc !12200
  store i8 %19, i8* %oldbit.i, align 1, !dbg !12199
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !12201
  %tobool.i = trunc i8 %20 to i1, !dbg !12201
  %conv2 = zext i1 %tobool.i to i32, !dbg !12188
  br label %cond.end, !dbg !12188

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !12188
  %tobool = icmp ne i32 %cond, 0, !dbg !12188
  ret i1 %tobool, !dbg !12202
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #3 !dbg !12203 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !12208, metadata !DIExpression()), !dbg !12210
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !12212, metadata !DIExpression()), !dbg !12213
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12214, metadata !DIExpression()), !dbg !12216
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12218, metadata !DIExpression()), !dbg !12219
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !12220, metadata !DIExpression()), !dbg !12221
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12222, metadata !DIExpression()), !dbg !12223
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !12224
  %1 = load i64, i64* %nr.addr, align 8, !dbg !12225
  %div = sdiv i64 %1, 64, !dbg !12225
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !12226
  %2 = bitcast i64* %add.ptr to i8*, !dbg !12224
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !12227
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !12228
  %conv.i = trunc i64 %4 to i32, !dbg !12228
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !12229
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !12230
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !12230
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !12230
  %7 = load i64, i64* %nr.addr, align 8, !dbg !12231
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !12232
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !12233
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #8, !dbg !12235
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !12236

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !12237
  %12 = bitcast i64* %11 to i8*, !dbg !12237
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !12237
  %shr.i = ashr i64 %13, 3, !dbg !12237
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !12237
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !12239
  %and.i = and i64 %14, 7, !dbg !12239
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !12239
  %shl.i = shl i32 1, %sh_prom.i, !dbg !12239
  %neg.i = xor i32 %shl.i, -1, !dbg !12240
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #8, !dbg !12241, !srcloc !12242
  br label %arch_clear_bit.exit, !dbg !12243

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !12244
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !12246
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #8, !dbg !12247, !srcloc !12248
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !12249
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #3 !dbg !12250 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !12254, metadata !DIExpression()), !dbg !12255
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12256, metadata !DIExpression()), !dbg !12257
  ret i1 true, !dbg !12258
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #3 !dbg !12259 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12263, metadata !DIExpression()), !dbg !12264
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12265, metadata !DIExpression()), !dbg !12266
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12267, metadata !DIExpression()), !dbg !12268
  ret void, !dbg !12269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #3 !dbg !12270 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !12271, metadata !DIExpression()), !dbg !12272
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12273, metadata !DIExpression()), !dbg !12274
  ret i1 true, !dbg !12275
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @xennet_alloc_one_rx_buffer(%struct.netfront_queue* %queue) #3 !dbg !12276 {
entry:
  %retval = alloca %struct.sk_buff*, align 8
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %page = alloca %struct.page*, align 8
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !12279, metadata !DIExpression()), !dbg !12280
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !12281, metadata !DIExpression()), !dbg !12282
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !12283, metadata !DIExpression()), !dbg !12284
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12285
  %info = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %0, i32 0, i32 2, !dbg !12286
  %1 = load %struct.netfront_info*, %struct.netfront_info** %info, align 32, !dbg !12286
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %1, i32 0, i32 1, !dbg !12287
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12287
  %call = call %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device* %2, i32 256, i32 10784) #12, !dbg !12288
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !12289
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12290
  %tobool = icmp ne %struct.sk_buff* %3, null, !dbg !12290
  %lnot = xor i1 %tobool, true, !dbg !12290
  %lnot1 = xor i1 %lnot, true, !dbg !12290
  %lnot2 = xor i1 %lnot1, true, !dbg !12290
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12290
  %conv = sext i32 %lnot.ext to i64, !dbg !12290
  %tobool3 = icmp ne i64 %conv, 0, !dbg !12290
  br i1 %tobool3, label %if.then, label %if.end, !dbg !12292

if.then:                                          ; preds = %entry
  store %struct.sk_buff* null, %struct.sk_buff** %retval, align 8, !dbg !12293
  br label %return, !dbg !12293

if.end:                                           ; preds = %entry
  %4 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12294
  %page_pool = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %4, i32 0, i32 26, !dbg !12295
  %5 = load %struct.page_pool*, %struct.page_pool** %page_pool, align 8, !dbg !12295
  %call4 = call %struct.page* @page_pool_dev_alloc_pages(%struct.page_pool* %5) #12, !dbg !12296
  store %struct.page* %call4, %struct.page** %page, align 8, !dbg !12297
  %6 = load %struct.page*, %struct.page** %page, align 8, !dbg !12298
  %tobool5 = icmp ne %struct.page* %6, null, !dbg !12298
  %lnot6 = xor i1 %tobool5, true, !dbg !12298
  %lnot8 = xor i1 %lnot6, true, !dbg !12298
  %lnot10 = xor i1 %lnot8, true, !dbg !12298
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !12298
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !12298
  %tobool13 = icmp ne i64 %conv12, 0, !dbg !12298
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !12300

if.then14:                                        ; preds = %if.end
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12301
  call void @kfree_skb(%struct.sk_buff* %7) #12, !dbg !12303
  store %struct.sk_buff* null, %struct.sk_buff** %retval, align 8, !dbg !12304
  br label %return, !dbg !12304

if.end15:                                         ; preds = %if.end
  %8 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12305
  %9 = load %struct.page*, %struct.page** %page, align 8, !dbg !12306
  call void @skb_add_rx_frag(%struct.sk_buff* %8, i32 0, %struct.page* %9, i32 0, i32 0, i32 4096) #12, !dbg !12307
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12308
  call void @skb_reserve(%struct.sk_buff* %10, i32 0) #12, !dbg !12309
  %11 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12310
  %info16 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %11, i32 0, i32 2, !dbg !12311
  %12 = load %struct.netfront_info*, %struct.netfront_info** %info16, align 32, !dbg !12311
  %netdev17 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %12, i32 0, i32 1, !dbg !12312
  %13 = load %struct.net_device*, %struct.net_device** %netdev17, align 8, !dbg !12312
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12313
  %15 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %14, i32 0, i32 0, !dbg !12314
  %16 = bitcast %union.anon.47* %15 to %struct.anon.48*, !dbg !12314
  %17 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %16, i32 0, i32 2, !dbg !12314
  %dev = bitcast %union.anon.49* %17 to %struct.net_device**, !dbg !12314
  store %struct.net_device* %13, %struct.net_device** %dev, align 8, !dbg !12315
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12316
  store %struct.sk_buff* %18, %struct.sk_buff** %retval, align 8, !dbg !12317
  br label %return, !dbg !12317

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %19 = load %struct.sk_buff*, %struct.sk_buff** %retval, align 8, !dbg !12318
  ret %struct.sk_buff* %19, !dbg !12318
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_rxidx(i32 %idx) #3 !dbg !12319 {
entry:
  %idx.addr = alloca i32, align 4
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !12322, metadata !DIExpression()), !dbg !12323
  %0 = load i32, i32* %idx.addr, align 4, !dbg !12324
  %conv = zext i32 %0 to i64, !dbg !12324
  %and = and i64 %conv, 255, !dbg !12325
  %conv1 = trunc i64 %and to i32, !dbg !12324
  ret i32 %conv1, !dbg !12326
}

; Function Attrs: noredzone
declare dso_local i32 @gnttab_claim_grant_reference(i32*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @skb_frag_page(%struct.bio_vec* %frag) #3 !dbg !12327 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !12332, metadata !DIExpression()), !dbg !12333
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !12334
  %bv_page = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 0, !dbg !12335
  %1 = load %struct.page*, %struct.page** %bv_page, align 8, !dbg !12335
  ret %struct.page* %1, !dbg !12336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @skb_end_pointer(%struct.sk_buff* %skb) #3 !dbg !12337 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12340, metadata !DIExpression()), !dbg !12341
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12342
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 36, !dbg !12343
  %1 = load i8*, i8** %head, align 8, !dbg !12343
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12344
  %end = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 35, !dbg !12345
  %3 = load i32, i32* %end, align 4, !dbg !12345
  %idx.ext = zext i32 %3 to i64, !dbg !12346
  %add.ptr = getelementptr i8, i8* %1, i64 %idx.ext, !dbg !12346
  ret i8* %add.ptr, !dbg !12347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gnttab_page_grant_foreign_access_ref_one(i32 %ref, i16 zeroext %domid, %struct.page* %page, i32 %readonly) #3 !dbg !12348 {
entry:
  %ref.addr = alloca i32, align 4
  %domid.addr = alloca i16, align 2
  %page.addr = alloca %struct.page*, align 8
  %readonly.addr = alloca i32, align 4
  store i32 %ref, i32* %ref.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref.addr, metadata !12354, metadata !DIExpression()), !dbg !12355
  store i16 %domid, i16* %domid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %domid.addr, metadata !12356, metadata !DIExpression()), !dbg !12357
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !12358, metadata !DIExpression()), !dbg !12359
  store i32 %readonly, i32* %readonly.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %readonly.addr, metadata !12360, metadata !DIExpression()), !dbg !12361
  %0 = load i32, i32* %ref.addr, align 4, !dbg !12362
  %1 = load i16, i16* %domid.addr, align 2, !dbg !12363
  %2 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !12364
  %call = call i64 @xen_page_to_gfn(%struct.page* %2) #12, !dbg !12365
  %3 = load i32, i32* %readonly.addr, align 4, !dbg !12366
  call void @gnttab_grant_foreign_access_ref(i32 %0, i16 zeroext %1, i64 %call, i32 %3) #12, !dbg !12367
  ret void, !dbg !12368
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #1

; Function Attrs: noredzone
declare dso_local void @notify_remote_via_irq(i32) #1

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @__netdev_alloc_skb(%struct.net_device*, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @page_pool_dev_alloc_pages(%struct.page_pool* %pool) #3 !dbg !12369 {
entry:
  %pool.addr = alloca %struct.page_pool*, align 8
  %gfp = alloca i32, align 4
  store %struct.page_pool* %pool, %struct.page_pool** %pool.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page_pool** %pool.addr, metadata !12372, metadata !DIExpression()), !dbg !12373
  call void @llvm.dbg.declare(metadata i32* %gfp, metadata !12374, metadata !DIExpression()), !dbg !12375
  store i32 10784, i32* %gfp, align 4, !dbg !12375
  %0 = load %struct.page_pool*, %struct.page_pool** %pool.addr, align 8, !dbg !12376
  %1 = load i32, i32* %gfp, align 4, !dbg !12377
  %call = call %struct.page* @page_pool_alloc_pages(%struct.page_pool* %0, i32 %1) #12, !dbg !12378
  ret %struct.page* %call, !dbg !12379
}

; Function Attrs: noredzone
declare dso_local void @kfree_skb(%struct.sk_buff*) #1

; Function Attrs: noredzone
declare dso_local void @skb_add_rx_frag(%struct.sk_buff*, i32, %struct.page*, i32, i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reserve(%struct.sk_buff* %skb, i32 %len) #3 !dbg !12380 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %len.addr = alloca i32, align 4
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12383, metadata !DIExpression()), !dbg !12384
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !12385, metadata !DIExpression()), !dbg !12386
  %0 = load i32, i32* %len.addr, align 4, !dbg !12387
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12388
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 37, !dbg !12389
  %2 = load i8*, i8** %data, align 8, !dbg !12390
  %idx.ext = sext i32 %0 to i64, !dbg !12390
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !12390
  store i8* %add.ptr, i8** %data, align 8, !dbg !12390
  %3 = load i32, i32* %len.addr, align 4, !dbg !12391
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12392
  %tail = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 34, !dbg !12393
  %5 = load i32, i32* %tail, align 8, !dbg !12394
  %add = add i32 %5, %3, !dbg !12394
  store i32 %add, i32* %tail, align 8, !dbg !12394
  ret void, !dbg !12395
}

; Function Attrs: noredzone
declare dso_local %struct.page* @page_pool_alloc_pages(%struct.page_pool*, i32) #1

; Function Attrs: noredzone
declare dso_local void @gnttab_grant_foreign_access_ref(i32, i16 zeroext, i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @xen_page_to_gfn(%struct.page* %page) #3 !dbg !12396 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !12400, metadata !DIExpression()), !dbg !12401
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !12402
  %1 = load i64, i64* @vmemmap_base, align 8, !dbg !12402
  %2 = inttoptr i64 %1 to %struct.page*, !dbg !12402
  %sub.ptr.lhs.cast = ptrtoint %struct.page* %0 to i64, !dbg !12402
  %sub.ptr.rhs.cast = ptrtoint %struct.page* %2 to i64, !dbg !12402
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12402
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64, !dbg !12402
  %shl = shl i64 %sub.ptr.div, 0, !dbg !12402
  %call = call i64 @pfn_to_gfn(i64 %shl) #12, !dbg !12403
  ret i64 %call, !dbg !12404
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @pfn_to_gfn(i64 %pfn) #3 !dbg !12405 {
entry:
  %retval = alloca i64, align 8
  %pfn.addr = alloca i64, align 8
  store i64 %pfn, i64* %pfn.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pfn.addr, metadata !12409, metadata !DIExpression()), !dbg !12410
  %call = call i32 @xen_feature(i32 2) #12, !dbg !12411
  %tobool = icmp ne i32 %call, 0, !dbg !12411
  br i1 %tobool, label %if.then, label %if.else, !dbg !12413

if.then:                                          ; preds = %entry
  %0 = load i64, i64* %pfn.addr, align 8, !dbg !12414
  store i64 %0, i64* %retval, align 8, !dbg !12415
  br label %return, !dbg !12415

if.else:                                          ; preds = %entry
  %1 = load i64, i64* %pfn.addr, align 8, !dbg !12416
  %call1 = call i64 @pfn_to_mfn(i64 %1) #12, !dbg !12417
  store i64 %call1, i64* %retval, align 8, !dbg !12418
  br label %return, !dbg !12418

return:                                           ; preds = %if.else, %if.then
  %2 = load i64, i64* %retval, align 8, !dbg !12419
  ret i64 %2, !dbg !12419
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_feature(i32 %flag) #3 !dbg !12420 {
entry:
  %flag.addr = alloca i32, align 4
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !12422, metadata !DIExpression()), !dbg !12423
  %0 = load i32, i32* %flag.addr, align 4, !dbg !12424
  %idxprom = sext i32 %0 to i64, !dbg !12425
  %arrayidx = getelementptr [32 x i8], [32 x i8]* @xen_features, i64 0, i64 %idxprom, !dbg !12425
  %1 = load i8, i8* %arrayidx, align 1, !dbg !12425
  %conv = zext i8 %1 to i32, !dbg !12425
  ret i32 %conv, !dbg !12426
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @pfn_to_mfn(i64 %pfn) #3 !dbg !12427 {
entry:
  %retval = alloca i64, align 8
  %pfn.addr = alloca i64, align 8
  %mfn = alloca i64, align 8
  store i64 %pfn, i64* %pfn.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pfn.addr, metadata !12428, metadata !DIExpression()), !dbg !12429
  call void @llvm.dbg.declare(metadata i64* %mfn, metadata !12430, metadata !DIExpression()), !dbg !12431
  %call = call i32 @xen_feature(i32 2) #12, !dbg !12432
  %tobool = icmp ne i32 %call, 0, !dbg !12432
  br i1 %tobool, label %if.then, label %if.end, !dbg !12434

if.then:                                          ; preds = %entry
  %0 = load i64, i64* %pfn.addr, align 8, !dbg !12435
  store i64 %0, i64* %retval, align 8, !dbg !12436
  br label %return, !dbg !12436

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %pfn.addr, align 8, !dbg !12437
  %call1 = call i64 @__pfn_to_mfn(i64 %1) #12, !dbg !12438
  store i64 %call1, i64* %mfn, align 8, !dbg !12439
  %2 = load i64, i64* %mfn, align 8, !dbg !12440
  %cmp = icmp ne i64 %2, -1, !dbg !12442
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12443

if.then2:                                         ; preds = %if.end
  %3 = load i64, i64* %mfn, align 8, !dbg !12444
  %and = and i64 %3, 4611686018427387903, !dbg !12444
  store i64 %and, i64* %mfn, align 8, !dbg !12444
  br label %if.end3, !dbg !12445

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load i64, i64* %mfn, align 8, !dbg !12446
  store i64 %4, i64* %retval, align 8, !dbg !12447
  br label %return, !dbg !12447

return:                                           ; preds = %if.end3, %if.then
  %5 = load i64, i64* %retval, align 8, !dbg !12448
  ret i64 %5, !dbg !12448
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__pfn_to_mfn(i64 %pfn) #3 !dbg !12449 {
entry:
  %retval = alloca i64, align 8
  %pfn.addr = alloca i64, align 8
  %mfn = alloca i64, align 8
  store i64 %pfn, i64* %pfn.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %pfn.addr, metadata !12450, metadata !DIExpression()), !dbg !12451
  call void @llvm.dbg.declare(metadata i64* %mfn, metadata !12452, metadata !DIExpression()), !dbg !12453
  %0 = load i64, i64* %pfn.addr, align 8, !dbg !12454
  %1 = load i64, i64* @xen_p2m_size, align 8, !dbg !12456
  %cmp = icmp ult i64 %0, %1, !dbg !12457
  br i1 %cmp, label %if.then, label %if.else, !dbg !12458

if.then:                                          ; preds = %entry
  %2 = load i64*, i64** @xen_p2m_addr, align 8, !dbg !12459
  %3 = load i64, i64* %pfn.addr, align 8, !dbg !12460
  %arrayidx = getelementptr i64, i64* %2, i64 %3, !dbg !12459
  %4 = load i64, i64* %arrayidx, align 8, !dbg !12459
  store i64 %4, i64* %mfn, align 8, !dbg !12461
  br label %if.end, !dbg !12462

if.else:                                          ; preds = %entry
  %5 = load i64, i64* %pfn.addr, align 8, !dbg !12463
  %6 = load i64, i64* @xen_max_p2m_pfn, align 8, !dbg !12463
  %cmp1 = icmp ult i64 %5, %6, !dbg !12463
  %lnot = xor i1 %cmp1, true, !dbg !12463
  %lnot2 = xor i1 %lnot, true, !dbg !12463
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12463
  %conv = sext i32 %lnot.ext to i64, !dbg !12463
  %tobool = icmp ne i64 %conv, 0, !dbg !12463
  br i1 %tobool, label %if.then3, label %if.else4, !dbg !12465

if.then3:                                         ; preds = %if.else
  %7 = load i64, i64* %pfn.addr, align 8, !dbg !12466
  %call = call i64 @get_phys_to_machine(i64 %7) #12, !dbg !12467
  store i64 %call, i64* %retval, align 8, !dbg !12468
  br label %return, !dbg !12468

if.else4:                                         ; preds = %if.else
  %8 = load i64, i64* %pfn.addr, align 8, !dbg !12469
  %or = or i64 %8, 4611686018427387904, !dbg !12469
  store i64 %or, i64* %retval, align 8, !dbg !12470
  br label %return, !dbg !12470

if.end:                                           ; preds = %if.then
  %9 = load i64, i64* %mfn, align 8, !dbg !12471
  %cmp5 = icmp eq i64 %9, -1, !dbg !12471
  %lnot7 = xor i1 %cmp5, true, !dbg !12471
  %lnot9 = xor i1 %lnot7, true, !dbg !12471
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !12471
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !12471
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !12471
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !12473

if.then13:                                        ; preds = %if.end
  %10 = load i64, i64* %pfn.addr, align 8, !dbg !12474
  %call14 = call i64 @get_phys_to_machine(i64 %10) #12, !dbg !12475
  store i64 %call14, i64* %retval, align 8, !dbg !12476
  br label %return, !dbg !12476

if.end15:                                         ; preds = %if.end
  %11 = load i64, i64* %mfn, align 8, !dbg !12477
  store i64 %11, i64* %retval, align 8, !dbg !12478
  br label %return, !dbg !12478

return:                                           ; preds = %if.end15, %if.then13, %if.else4, %if.then3
  %12 = load i64, i64* %retval, align 8, !dbg !12479
  ret i64 %12, !dbg !12479
}

; Function Attrs: noredzone
declare dso_local i64 @get_phys_to_machine(i64) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_schedule_prep(%struct.napi_struct*) #1

; Function Attrs: noredzone
declare dso_local void @__napi_schedule(%struct.napi_struct*) #1

; Function Attrs: noredzone
declare dso_local void @__local_bh_enable_ip(i64, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %dev, i32 %index) #3 !dbg !12480 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %index.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12483, metadata !DIExpression()), !dbg !12484
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !12485, metadata !DIExpression()), !dbg !12486
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12487
  %_tx = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 86, !dbg !12488
  %1 = load %struct.netdev_queue*, %struct.netdev_queue** %_tx, align 8, !dbg !12488
  %2 = load i32, i32* %index.addr, align 4, !dbg !12489
  %idxprom = zext i32 %2 to i64, !dbg !12487
  %arrayidx = getelementptr %struct.netdev_queue, %struct.netdev_queue* %1, i64 %idxprom, !dbg !12487
  ret %struct.netdev_queue* %arrayidx, !dbg !12490
}

; Function Attrs: noredzone
declare dso_local void @netif_tx_stop_all_queues(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @napi_disable(%struct.napi_struct*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @skb_get_queue_mapping(%struct.sk_buff* %skb) #3 !dbg !12491 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12494, metadata !DIExpression()), !dbg !12495
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12496
  %queue_mapping = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 9, !dbg !12497
  %1 = load i16, i16* %queue_mapping, align 4, !dbg !12497
  ret i16 %1, !dbg !12498
}

; Function Attrs: noredzone
declare dso_local i32 @net_ratelimit() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_count_skb_slots(%struct.sk_buff* %skb) #3 !dbg !12499 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %i = alloca i32, align 4
  %frags = alloca i32, align 4
  %slots = alloca i32, align 4
  %frag = alloca %struct.bio_vec*, align 8
  %size = alloca i64, align 8
  %offset = alloca i64, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12500, metadata !DIExpression()), !dbg !12501
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12502, metadata !DIExpression()), !dbg !12503
  call void @llvm.dbg.declare(metadata i32* %frags, metadata !12504, metadata !DIExpression()), !dbg !12505
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12506
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %0) #12, !dbg !12506
  %1 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !12507
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %1, i32 0, i32 2, !dbg !12507
  %2 = load i8, i8* %nr_frags, align 2, !dbg !12507
  %conv = zext i8 %2 to i32, !dbg !12506
  store i32 %conv, i32* %frags, align 4, !dbg !12505
  call void @llvm.dbg.declare(metadata i32* %slots, metadata !12508, metadata !DIExpression()), !dbg !12509
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12510
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 37, !dbg !12510
  %4 = load i8*, i8** %data, align 8, !dbg !12510
  %5 = ptrtoint i8* %4 to i64, !dbg !12510
  %and = and i64 %5, 4095, !dbg !12510
  %conv1 = trunc i64 %and to i32, !dbg !12510
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12511
  %call2 = call i32 @skb_headlen(%struct.sk_buff* %6) #12, !dbg !12512
  %call3 = call i32 @gnttab_count_grant(i32 %conv1, i32 %call2) #12, !dbg !12513
  store i32 %call3, i32* %slots, align 4, !dbg !12514
  store i32 0, i32* %i, align 4, !dbg !12515
  br label %for.cond, !dbg !12517

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !12518
  %8 = load i32, i32* %frags, align 4, !dbg !12520
  %cmp = icmp slt i32 %7, %8, !dbg !12521
  br i1 %cmp, label %for.body, label %for.end, !dbg !12522

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag, metadata !12523, metadata !DIExpression()), !dbg !12525
  %9 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12526
  %call5 = call i8* @skb_end_pointer(%struct.sk_buff* %9) #12, !dbg !12526
  %10 = bitcast i8* %call5 to %struct.skb_shared_info*, !dbg !12527
  %frags6 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %10, i32 0, i32 12, !dbg !12527
  %arraydecay = getelementptr inbounds [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags6, i64 0, i64 0, !dbg !12526
  %11 = load i32, i32* %i, align 4, !dbg !12528
  %idx.ext = sext i32 %11 to i64, !dbg !12529
  %add.ptr = getelementptr %struct.bio_vec, %struct.bio_vec* %arraydecay, i64 %idx.ext, !dbg !12529
  store %struct.bio_vec* %add.ptr, %struct.bio_vec** %frag, align 8, !dbg !12525
  call void @llvm.dbg.declare(metadata i64* %size, metadata !12530, metadata !DIExpression()), !dbg !12531
  %12 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !12532
  %call7 = call i32 @skb_frag_size(%struct.bio_vec* %12) #12, !dbg !12533
  %conv8 = zext i32 %call7 to i64, !dbg !12533
  store i64 %conv8, i64* %size, align 8, !dbg !12531
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !12534, metadata !DIExpression()), !dbg !12535
  %13 = load %struct.bio_vec*, %struct.bio_vec** %frag, align 8, !dbg !12536
  %call9 = call i32 @skb_frag_off(%struct.bio_vec* %13) #12, !dbg !12537
  %conv10 = zext i32 %call9 to i64, !dbg !12537
  store i64 %conv10, i64* %offset, align 8, !dbg !12535
  %14 = load i64, i64* %offset, align 8, !dbg !12538
  %and11 = and i64 %14, 4095, !dbg !12538
  store i64 %and11, i64* %offset, align 8, !dbg !12538
  %15 = load i64, i64* %offset, align 8, !dbg !12539
  %conv12 = trunc i64 %15 to i32, !dbg !12539
  %16 = load i64, i64* %size, align 8, !dbg !12540
  %conv13 = trunc i64 %16 to i32, !dbg !12540
  %call14 = call i32 @gnttab_count_grant(i32 %conv12, i32 %conv13) #12, !dbg !12541
  %17 = load i32, i32* %slots, align 4, !dbg !12542
  %add = add i32 %17, %call14, !dbg !12542
  store i32 %add, i32* %slots, align 4, !dbg !12542
  br label %for.inc, !dbg !12543

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !12544
  %inc = add i32 %18, 1, !dbg !12544
  store i32 %inc, i32* %i, align 4, !dbg !12544
  br label %for.cond, !dbg !12545, !llvm.loop !12546

for.end:                                          ; preds = %for.cond
  %19 = load i32, i32* %slots, align 4, !dbg !12548
  ret i32 %19, !dbg !12549
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_linearize(%struct.sk_buff* %skb) #3 !dbg !12550 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12551, metadata !DIExpression()), !dbg !12552
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12553
  %call = call zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %0) #12, !dbg !12554
  br i1 %call, label %cond.true, label %cond.false, !dbg !12554

cond.true:                                        ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12555
  %call1 = call i32 @__skb_linearize(%struct.sk_buff* %1) #12, !dbg !12556
  br label %cond.end, !dbg !12554

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12554

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call1, %cond.true ], [ 0, %cond.false ], !dbg !12554
  ret i32 %cond, !dbg !12557
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #3 !dbg !12558 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !12560, metadata !DIExpression()), !dbg !12561
  call void @llvm.dbg.declare(metadata i64* %y, metadata !12562, metadata !DIExpression()), !dbg !12563
  %0 = load i64, i64* %x.addr, align 8, !dbg !12564
  %sub = sub i64 %0, -2147483648, !dbg !12565
  store i64 %sub, i64* %y, align 8, !dbg !12563
  %1 = load i64, i64* %y, align 8, !dbg !12566
  %2 = load i64, i64* %x.addr, align 8, !dbg !12567
  %3 = load i64, i64* %y, align 8, !dbg !12568
  %cmp = icmp ugt i64 %2, %3, !dbg !12569
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12570

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !12571
  br label %cond.end, !dbg !12570

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !12572
  %sub1 = sub i64 -2147483648, %5, !dbg !12573
  br label %cond.end, !dbg !12570

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !12570
  %add = add i64 %1, %cond, !dbg !12574
  store i64 %add, i64* %x.addr, align 8, !dbg !12575
  %6 = load i64, i64* %x.addr, align 8, !dbg !12576
  ret i64 %6, !dbg !12577
}

; Function Attrs: noredzone
declare dso_local %struct.sk_buff* @skb_copy(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_consume_skb_any(%struct.sk_buff* %skb) #3 !dbg !12578 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12579, metadata !DIExpression()), !dbg !12580
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12581
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 0) #12, !dbg !12582
  ret void, !dbg !12583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_headlen(%struct.sk_buff* %skb) #3 !dbg !12584 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12587, metadata !DIExpression()), !dbg !12588
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12589
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 5, !dbg !12590
  %1 = load i32, i32* %len, align 8, !dbg !12590
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12591
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 6, !dbg !12592
  %3 = load i32, i32* %data_len, align 4, !dbg !12592
  %sub = sub i32 %1, %3, !dbg !12593
  ret i32 %sub, !dbg !12594
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #3 !dbg !12595 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !12599, metadata !DIExpression()), !dbg !12600
  %call = call i64 @arch_local_save_flags() #12, !dbg !12601
  store i64 %call, i64* %f, align 8, !dbg !12602
  call void @arch_local_irq_disable() #12, !dbg !12603
  %0 = load i64, i64* %f, align 8, !dbg !12604
  ret i64 %0, !dbg !12605
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @xennet_can_sg(%struct.net_device* %dev) #3 !dbg !12606 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !12609, metadata !DIExpression()), !dbg !12610
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !12611
  %features = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 15, !dbg !12612
  %1 = load i64, i64* %features, align 8, !dbg !12612
  %and = and i64 %1, 1, !dbg !12613
  %tobool = icmp ne i64 %and, 0, !dbg !12611
  ret i1 %tobool, !dbg !12614
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_needs_gso(%struct.sk_buff* %skb, i64 %features) #3 !dbg !12615 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %features.addr = alloca i64, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12618, metadata !DIExpression()), !dbg !12619
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !12620, metadata !DIExpression()), !dbg !12621
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12622
  %call = call zeroext i1 @skb_is_gso(%struct.sk_buff* %0) #12, !dbg !12623
  br i1 %call, label %land.rhs, label %land.end14, !dbg !12624

land.rhs:                                         ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12625
  %2 = load i64, i64* %features.addr, align 8, !dbg !12626
  %call1 = call zeroext i1 @skb_gso_ok(%struct.sk_buff* %1, i64 %2) #12, !dbg !12627
  br i1 %call1, label %lor.rhs, label %lor.end, !dbg !12628

lor.rhs:                                          ; preds = %land.rhs
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12629
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 14, !dbg !12629
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !12629
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !12629
  %bf.clear = and i16 %bf.lshr, 3, !dbg !12629
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !12629
  %conv = zext i8 %bf.cast to i32, !dbg !12629
  %cmp = icmp ne i32 %conv, 3, !dbg !12629
  br i1 %cmp, label %land.rhs3, label %land.end, !dbg !12629

land.rhs3:                                        ; preds = %lor.rhs
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12629
  %ip_summed4 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 14, !dbg !12629
  %bf.load5 = load i16, i16* %ip_summed4, align 8, !dbg !12629
  %bf.lshr6 = lshr i16 %bf.load5, 5, !dbg !12629
  %bf.clear7 = and i16 %bf.lshr6, 3, !dbg !12629
  %bf.cast8 = trunc i16 %bf.clear7 to i8, !dbg !12629
  %conv9 = zext i8 %bf.cast8 to i32, !dbg !12629
  %cmp10 = icmp ne i32 %conv9, 1, !dbg !12629
  br label %land.end

land.end:                                         ; preds = %land.rhs3, %lor.rhs
  %5 = phi i1 [ false, %lor.rhs ], [ %cmp10, %land.rhs3 ], !dbg !12630
  %lnot = xor i1 %5, true, !dbg !12629
  %lnot12 = xor i1 %lnot, true, !dbg !12629
  %lnot.ext = zext i1 %lnot12 to i32, !dbg !12629
  %conv13 = sext i32 %lnot.ext to i64, !dbg !12629
  %tobool = icmp ne i64 %conv13, 0, !dbg !12628
  br label %lor.end, !dbg !12628

lor.end:                                          ; preds = %land.end, %land.rhs
  %6 = phi i1 [ true, %land.rhs ], [ %tobool, %land.end ]
  br label %land.end14

land.end14:                                       ; preds = %lor.end, %entry
  %7 = phi i1 [ false, %entry ], [ %6, %lor.end ], !dbg !12630
  ret i1 %7, !dbg !12631
}

; Function Attrs: noredzone
declare dso_local i64 @netif_skb_features(%struct.sk_buff*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.xen_netif_tx_request* @xennet_make_first_txreq(%struct.netfront_queue* %queue, %struct.sk_buff* %skb, %struct.page* %page, i32 %offset, i32 %len) #3 !dbg !12632 {
entry:
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %page.addr = alloca %struct.page*, align 8
  %offset.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %info = alloca %struct.xennet_gnttab_make_txreq, align 8
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !12635, metadata !DIExpression()), !dbg !12636
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12637, metadata !DIExpression()), !dbg !12638
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !12639, metadata !DIExpression()), !dbg !12640
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !12641, metadata !DIExpression()), !dbg !12642
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !12643, metadata !DIExpression()), !dbg !12644
  call void @llvm.dbg.declare(metadata %struct.xennet_gnttab_make_txreq* %info, metadata !12645, metadata !DIExpression()), !dbg !12653
  %queue1 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %info, i32 0, i32 0, !dbg !12654
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12655
  store %struct.netfront_queue* %0, %struct.netfront_queue** %queue1, align 8, !dbg !12654
  %skb2 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %info, i32 0, i32 1, !dbg !12654
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12656
  store %struct.sk_buff* %1, %struct.sk_buff** %skb2, align 8, !dbg !12654
  %page3 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %info, i32 0, i32 2, !dbg !12654
  %2 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !12657
  store %struct.page* %2, %struct.page** %page3, align 8, !dbg !12654
  %tx = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %info, i32 0, i32 3, !dbg !12654
  store %struct.xen_netif_tx_request* null, %struct.xen_netif_tx_request** %tx, align 8, !dbg !12654
  %size = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %info, i32 0, i32 4, !dbg !12654
  store i32 0, i32* %size, align 8, !dbg !12654
  %3 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !12658
  %4 = load i32, i32* %offset.addr, align 4, !dbg !12659
  %5 = load i32, i32* %len.addr, align 4, !dbg !12660
  %6 = bitcast %struct.xennet_gnttab_make_txreq* %info to i8*, !dbg !12661
  call void @gnttab_for_one_grant(%struct.page* %3, i32 %4, i32 %5, void (i64, i32, i32, i8*)* @xennet_tx_setup_grant, i8* %6) #12, !dbg !12662
  %tx4 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %info, i32 0, i32 3, !dbg !12663
  %7 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx4, align 8, !dbg !12663
  ret %struct.xen_netif_tx_request* %7, !dbg !12664
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.xen_netif_tx_request* @xennet_make_txreqs(%struct.netfront_queue* %queue, %struct.xen_netif_tx_request* %tx, %struct.sk_buff* %skb, %struct.page* %page, i32 %offset, i32 %len) #3 !dbg !12665 {
entry:
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %tx.addr = alloca %struct.xen_netif_tx_request*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %page.addr = alloca %struct.page*, align 8
  %offset.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %info = alloca %struct.xennet_gnttab_make_txreq, align 8
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !12668, metadata !DIExpression()), !dbg !12669
  store %struct.xen_netif_tx_request* %tx, %struct.xen_netif_tx_request** %tx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xen_netif_tx_request** %tx.addr, metadata !12670, metadata !DIExpression()), !dbg !12671
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12672, metadata !DIExpression()), !dbg !12673
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !12674, metadata !DIExpression()), !dbg !12675
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !12676, metadata !DIExpression()), !dbg !12677
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !12678, metadata !DIExpression()), !dbg !12679
  call void @llvm.dbg.declare(metadata %struct.xennet_gnttab_make_txreq* %info, metadata !12680, metadata !DIExpression()), !dbg !12681
  %queue1 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %info, i32 0, i32 0, !dbg !12682
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12683
  store %struct.netfront_queue* %0, %struct.netfront_queue** %queue1, align 8, !dbg !12682
  %skb2 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %info, i32 0, i32 1, !dbg !12682
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12684
  store %struct.sk_buff* %1, %struct.sk_buff** %skb2, align 8, !dbg !12682
  %page3 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %info, i32 0, i32 2, !dbg !12682
  store %struct.page* null, %struct.page** %page3, align 8, !dbg !12682
  %tx4 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %info, i32 0, i32 3, !dbg !12682
  %2 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx.addr, align 8, !dbg !12685
  store %struct.xen_netif_tx_request* %2, %struct.xen_netif_tx_request** %tx4, align 8, !dbg !12682
  %size = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %info, i32 0, i32 4, !dbg !12682
  store i32 0, i32* %size, align 8, !dbg !12682
  %3 = load i32, i32* %offset.addr, align 4, !dbg !12686
  %shr = lshr i32 %3, 12, !dbg !12687
  %4 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !12688
  %idx.ext = zext i32 %shr to i64, !dbg !12688
  %add.ptr = getelementptr %struct.page, %struct.page* %4, i64 %idx.ext, !dbg !12688
  store %struct.page* %add.ptr, %struct.page** %page.addr, align 8, !dbg !12688
  %5 = load i32, i32* %offset.addr, align 4, !dbg !12689
  %conv = zext i32 %5 to i64, !dbg !12689
  %and = and i64 %conv, 4095, !dbg !12689
  %conv5 = trunc i64 %and to i32, !dbg !12689
  store i32 %conv5, i32* %offset.addr, align 4, !dbg !12689
  br label %while.cond, !dbg !12690

while.cond:                                       ; preds = %while.body, %entry
  %6 = load i32, i32* %len.addr, align 4, !dbg !12691
  %tobool = icmp ne i32 %6, 0, !dbg !12690
  br i1 %tobool, label %while.body, label %while.end, !dbg !12690

while.body:                                       ; preds = %while.cond
  %7 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !12692
  %page6 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %info, i32 0, i32 2, !dbg !12694
  store %struct.page* %7, %struct.page** %page6, align 8, !dbg !12695
  %size7 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %info, i32 0, i32 4, !dbg !12696
  store i32 0, i32* %size7, align 8, !dbg !12697
  %8 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !12698
  %9 = load i32, i32* %offset.addr, align 4, !dbg !12699
  %10 = load i32, i32* %len.addr, align 4, !dbg !12700
  %11 = bitcast %struct.xennet_gnttab_make_txreq* %info to i8*, !dbg !12701
  call void @gnttab_foreach_grant_in_range(%struct.page* %8, i32 %9, i32 %10, void (i64, i32, i32, i8*)* @xennet_make_one_txreq, i8* %11) #12, !dbg !12702
  %12 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !12703
  %incdec.ptr = getelementptr %struct.page, %struct.page* %12, i32 1, !dbg !12703
  store %struct.page* %incdec.ptr, %struct.page** %page.addr, align 8, !dbg !12703
  store i32 0, i32* %offset.addr, align 4, !dbg !12704
  %size8 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %info, i32 0, i32 4, !dbg !12705
  %13 = load i32, i32* %size8, align 8, !dbg !12705
  %14 = load i32, i32* %len.addr, align 4, !dbg !12706
  %sub = sub i32 %14, %13, !dbg !12706
  store i32 %sub, i32* %len.addr, align 4, !dbg !12706
  br label %while.cond, !dbg !12690, !llvm.loop !12707

while.end:                                        ; preds = %while.cond
  %tx9 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %info, i32 0, i32 3, !dbg !12709
  %15 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx9, align 8, !dbg !12709
  ret %struct.xen_netif_tx_request* %15, !dbg !12710
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_off(%struct.bio_vec* %frag) #3 !dbg !12711 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !12714, metadata !DIExpression()), !dbg !12715
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !12716
  %bv_offset = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 2, !dbg !12717
  %1 = load i32, i32* %bv_offset, align 4, !dbg !12717
  ret i32 %1, !dbg !12718
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_frag_size(%struct.bio_vec* %frag) #3 !dbg !12719 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !12720, metadata !DIExpression()), !dbg !12721
  %0 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !12722
  %bv_len = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %0, i32 0, i32 1, !dbg !12723
  %1 = load i32, i32* %bv_len, align 8, !dbg !12723
  ret i32 %1, !dbg !12724
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_tx_timestamp(%struct.sk_buff* %skb) #3 !dbg !12725 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12726, metadata !DIExpression()), !dbg !12727
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12728
  call void @skb_clone_tx_timestamp(%struct.sk_buff* %0) #12, !dbg !12729
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12730
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %1) #12, !dbg !12730
  %2 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !12732
  %tx_flags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %2, i32 0, i32 3, !dbg !12732
  %3 = load i8, i8* %tx_flags, align 1, !dbg !12732
  %conv = zext i8 %3 to i32, !dbg !12730
  %and = and i32 %conv, 2, !dbg !12733
  %tobool = icmp ne i32 %and, 0, !dbg !12733
  br i1 %tobool, label %if.then, label %if.end, !dbg !12734

if.then:                                          ; preds = %entry
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12735
  call void @skb_tstamp_tx(%struct.sk_buff* %4, %struct.skb_shared_hwtstamps* null) #12, !dbg !12736
  br label %if.end, !dbg !12736

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12737
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @u64_stats_update_begin(%struct.u64_stats_sync* %syncp) #3 !dbg !12738 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !12739, metadata !DIExpression()), !dbg !12740
  ret void, !dbg !12741
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @u64_stats_update_end(%struct.u64_stats_sync* %syncp) #3 !dbg !12742 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !12743, metadata !DIExpression()), !dbg !12744
  ret void, !dbg !12745
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_tx_buf_gc(%struct.netfront_queue* %queue) #3 !dbg !12746 {
entry:
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %cons = alloca i32, align 4
  %prod = alloca i32, align 4
  %id = alloca i16, align 2
  %skb = alloca %struct.sk_buff*, align 8
  %more_to_do = alloca i8, align 1
  %txrsp = alloca %struct.xen_netif_tx_response*, align 8
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !12747, metadata !DIExpression()), !dbg !12748
  call void @llvm.dbg.declare(metadata i32* %cons, metadata !12749, metadata !DIExpression()), !dbg !12750
  call void @llvm.dbg.declare(metadata i32* %prod, metadata !12751, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.declare(metadata i16* %id, metadata !12753, metadata !DIExpression()), !dbg !12754
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !12755, metadata !DIExpression()), !dbg !12756
  call void @llvm.dbg.declare(metadata i8* %more_to_do, metadata !12757, metadata !DIExpression()), !dbg !12758
  br label %do.body, !dbg !12759

do.body:                                          ; preds = %entry
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12760
  %info = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %0, i32 0, i32 2, !dbg !12760
  %1 = load %struct.netfront_info*, %struct.netfront_info** %info, align 32, !dbg !12760
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %1, i32 0, i32 1, !dbg !12760
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !12760
  %call = call zeroext i1 @netif_carrier_ok(%struct.net_device* %2) #12, !dbg !12760
  %lnot = xor i1 %call, true, !dbg !12760
  %lnot1 = xor i1 %lnot, true, !dbg !12760
  %lnot2 = xor i1 %lnot1, true, !dbg !12760
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !12760
  %conv = sext i32 %lnot.ext to i64, !dbg !12760
  %tobool = icmp ne i64 %conv, 0, !dbg !12760
  br i1 %tobool, label %if.then, label %if.end, !dbg !12763

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !12760

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !12764

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !12766

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !12764

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i32 395, i32 0, i64 12) #8, !dbg !12768, !srcloc !12770
  br label %do.end6, !dbg !12768

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !12764

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 638) #8, !dbg !12771, !srcloc !12774
  unreachable, !dbg !12775

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !12764

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !12764

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !12763

do.end10:                                         ; preds = %if.end
  br label %do.body11, !dbg !12776

do.body11:                                        ; preds = %do.cond, %do.end10
  %3 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12777
  %tx = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %3, i32 0, i32 12, !dbg !12779
  %sring = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx, i32 0, i32 3, !dbg !12780
  %4 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %sring, align 8, !dbg !12780
  %rsp_prod = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %4, i32 0, i32 2, !dbg !12781
  %5 = load i32, i32* %rsp_prod, align 4, !dbg !12781
  store i32 %5, i32* %prod, align 4, !dbg !12782
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12783, !srcloc !12784
  %6 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12785
  %tx12 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %6, i32 0, i32 12, !dbg !12787
  %rsp_cons = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx12, i32 0, i32 1, !dbg !12788
  %7 = load i32, i32* %rsp_cons, align 4, !dbg !12788
  store i32 %7, i32* %cons, align 4, !dbg !12789
  br label %for.cond, !dbg !12790

for.cond:                                         ; preds = %for.inc, %do.body11
  %8 = load i32, i32* %cons, align 4, !dbg !12791
  %9 = load i32, i32* %prod, align 4, !dbg !12793
  %cmp = icmp ne i32 %8, %9, !dbg !12794
  br i1 %cmp, label %for.body, label %for.end, !dbg !12795

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.xen_netif_tx_response** %txrsp, metadata !12796, metadata !DIExpression()), !dbg !12799
  %10 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12800
  %tx14 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %10, i32 0, i32 12, !dbg !12800
  %sring15 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx14, i32 0, i32 3, !dbg !12800
  %11 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %sring15, align 8, !dbg !12800
  %ring = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %11, i32 0, i32 5, !dbg !12800
  %12 = load i32, i32* %cons, align 4, !dbg !12800
  %13 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12800
  %tx16 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %13, i32 0, i32 12, !dbg !12800
  %nr_ents = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx16, i32 0, i32 2, !dbg !12800
  %14 = load i32, i32* %nr_ents, align 8, !dbg !12800
  %sub = sub i32 %14, 1, !dbg !12800
  %and = and i32 %12, %sub, !dbg !12800
  %idxprom = zext i32 %and to i64, !dbg !12800
  %arrayidx = getelementptr [1 x %union.xen_netif_tx_sring_entry], [1 x %union.xen_netif_tx_sring_entry]* %ring, i64 0, i64 %idxprom, !dbg !12800
  %rsp = bitcast %union.xen_netif_tx_sring_entry* %arrayidx to %struct.xen_netif_tx_response*, !dbg !12800
  store %struct.xen_netif_tx_response* %rsp, %struct.xen_netif_tx_response** %txrsp, align 8, !dbg !12801
  %15 = load %struct.xen_netif_tx_response*, %struct.xen_netif_tx_response** %txrsp, align 8, !dbg !12802
  %status = getelementptr inbounds %struct.xen_netif_tx_response, %struct.xen_netif_tx_response* %15, i32 0, i32 1, !dbg !12804
  %16 = load i16, i16* %status, align 2, !dbg !12804
  %conv17 = sext i16 %16 to i32, !dbg !12802
  %cmp18 = icmp eq i32 %conv17, 1, !dbg !12805
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !12806

if.then20:                                        ; preds = %for.body
  br label %for.inc, !dbg !12807

if.end21:                                         ; preds = %for.body
  %17 = load %struct.xen_netif_tx_response*, %struct.xen_netif_tx_response** %txrsp, align 8, !dbg !12808
  %id22 = getelementptr inbounds %struct.xen_netif_tx_response, %struct.xen_netif_tx_response* %17, i32 0, i32 0, !dbg !12809
  %18 = load i16, i16* %id22, align 2, !dbg !12809
  store i16 %18, i16* %id, align 2, !dbg !12810
  %19 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12811
  %tx_skbs = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %19, i32 0, i32 14, !dbg !12812
  %20 = load i16, i16* %id, align 2, !dbg !12813
  %idxprom23 = zext i16 %20 to i64, !dbg !12811
  %arrayidx24 = getelementptr [256 x %union.skb_entry], [256 x %union.skb_entry]* %tx_skbs, i64 0, i64 %idxprom23, !dbg !12811
  %skb25 = bitcast %union.skb_entry* %arrayidx24 to %struct.sk_buff**, !dbg !12814
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb25, align 8, !dbg !12814
  store %struct.sk_buff* %21, %struct.sk_buff** %skb, align 8, !dbg !12815
  %22 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12816
  %grant_tx_ref = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %22, i32 0, i32 16, !dbg !12816
  %23 = load i16, i16* %id, align 2, !dbg !12816
  %idxprom26 = zext i16 %23 to i64, !dbg !12816
  %arrayidx27 = getelementptr [256 x i32], [256 x i32]* %grant_tx_ref, i64 0, i64 %idxprom26, !dbg !12816
  %24 = load i32, i32* %arrayidx27, align 4, !dbg !12816
  %call28 = call i32 @gnttab_query_foreign_access(i32 %24) #12, !dbg !12816
  %cmp29 = icmp ne i32 %call28, 0, !dbg !12816
  %lnot31 = xor i1 %cmp29, true, !dbg !12816
  %lnot33 = xor i1 %lnot31, true, !dbg !12816
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !12816
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !12816
  %tobool36 = icmp ne i64 %conv35, 0, !dbg !12816
  br i1 %tobool36, label %if.then37, label %if.end47, !dbg !12818

if.then37:                                        ; preds = %if.end21
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.xennet_tx_buf_gc, i64 0, i64 0)) #13, !dbg !12819
  br label %do.body39, !dbg !12821

do.body39:                                        ; preds = %if.then37
  br label %do.body40, !dbg !12822

do.body40:                                        ; preds = %do.body39
  br label %do.end41, !dbg !12824

do.end41:                                         ; preds = %do.body40
  br label %do.body42, !dbg !12822

do.body42:                                        ; preds = %do.end41
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i32 414, i32 0, i64 12) #8, !dbg !12826, !srcloc !12828
  br label %do.end43, !dbg !12826

do.end43:                                         ; preds = %do.body42
  br label %do.body44, !dbg !12822

do.body44:                                        ; preds = %do.end43
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 639) #8, !dbg !12829, !srcloc !12832
  unreachable, !dbg !12833

do.end45:                                         ; No predecessors!
  br label %do.end46, !dbg !12822

do.end46:                                         ; preds = %do.end45
  br label %if.end47, !dbg !12834

if.end47:                                         ; preds = %do.end46, %if.end21
  %25 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12835
  %grant_tx_ref48 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %25, i32 0, i32 16, !dbg !12836
  %26 = load i16, i16* %id, align 2, !dbg !12837
  %idxprom49 = zext i16 %26 to i64, !dbg !12835
  %arrayidx50 = getelementptr [256 x i32], [256 x i32]* %grant_tx_ref48, i64 0, i64 %idxprom49, !dbg !12835
  %27 = load i32, i32* %arrayidx50, align 4, !dbg !12835
  %call51 = call i32 @gnttab_end_foreign_access_ref(i32 %27, i32 4) #12, !dbg !12838
  %28 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12839
  %gref_tx_head = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %28, i32 0, i32 15, !dbg !12840
  %29 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12841
  %grant_tx_ref52 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %29, i32 0, i32 16, !dbg !12842
  %30 = load i16, i16* %id, align 2, !dbg !12843
  %idxprom53 = zext i16 %30 to i64, !dbg !12841
  %arrayidx54 = getelementptr [256 x i32], [256 x i32]* %grant_tx_ref52, i64 0, i64 %idxprom53, !dbg !12841
  %31 = load i32, i32* %arrayidx54, align 4, !dbg !12841
  call void @gnttab_release_grant_reference(i32* %gref_tx_head, i32 %31) #12, !dbg !12844
  %32 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12845
  %grant_tx_ref55 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %32, i32 0, i32 16, !dbg !12846
  %33 = load i16, i16* %id, align 2, !dbg !12847
  %idxprom56 = zext i16 %33 to i64, !dbg !12845
  %arrayidx57 = getelementptr [256 x i32], [256 x i32]* %grant_tx_ref55, i64 0, i64 %idxprom56, !dbg !12845
  store i32 0, i32* %arrayidx57, align 4, !dbg !12848
  %34 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12849
  %grant_tx_page = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %34, i32 0, i32 17, !dbg !12850
  %35 = load i16, i16* %id, align 2, !dbg !12851
  %idxprom58 = zext i16 %35 to i64, !dbg !12849
  %arrayidx59 = getelementptr [256 x %struct.page*], [256 x %struct.page*]* %grant_tx_page, i64 0, i64 %idxprom58, !dbg !12849
  store %struct.page* null, %struct.page** %arrayidx59, align 8, !dbg !12852
  %36 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12853
  %tx_skb_freelist = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %36, i32 0, i32 18, !dbg !12854
  %37 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12855
  %tx_skbs60 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %37, i32 0, i32 14, !dbg !12856
  %arraydecay = getelementptr inbounds [256 x %union.skb_entry], [256 x %union.skb_entry]* %tx_skbs60, i64 0, i64 0, !dbg !12855
  %38 = load i16, i16* %id, align 2, !dbg !12857
  call void @add_id_to_freelist(i32* %tx_skb_freelist, %union.skb_entry* %arraydecay, i16 zeroext %38) #12, !dbg !12858
  %39 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !12859
  call void @dev_kfree_skb_irq(%struct.sk_buff* %39) #12, !dbg !12860
  br label %for.inc, !dbg !12861

for.inc:                                          ; preds = %if.end47, %if.then20
  %40 = load i32, i32* %cons, align 4, !dbg !12862
  %inc = add i32 %40, 1, !dbg !12862
  store i32 %inc, i32* %cons, align 4, !dbg !12862
  br label %for.cond, !dbg !12863, !llvm.loop !12864

for.end:                                          ; preds = %for.cond
  %41 = load i32, i32* %prod, align 4, !dbg !12866
  %42 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12867
  %tx61 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %42, i32 0, i32 12, !dbg !12868
  %rsp_cons62 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx61, i32 0, i32 1, !dbg !12869
  store i32 %41, i32* %rsp_cons62, align 4, !dbg !12870
  br label %do.body63, !dbg !12871

do.body63:                                        ; preds = %for.end
  %43 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12872
  %tx64 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %43, i32 0, i32 12, !dbg !12872
  %sring65 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx64, i32 0, i32 3, !dbg !12872
  %44 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %sring65, align 8, !dbg !12872
  %rsp_prod66 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %44, i32 0, i32 2, !dbg !12872
  %45 = load i32, i32* %rsp_prod66, align 4, !dbg !12872
  %46 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12872
  %tx67 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %46, i32 0, i32 12, !dbg !12872
  %rsp_cons68 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx67, i32 0, i32 1, !dbg !12872
  %47 = load i32, i32* %rsp_cons68, align 4, !dbg !12872
  %sub69 = sub i32 %45, %47, !dbg !12872
  %tobool70 = icmp ne i32 %sub69, 0, !dbg !12872
  %frombool = zext i1 %tobool70 to i8, !dbg !12872
  store i8 %frombool, i8* %more_to_do, align 1, !dbg !12872
  %48 = load i8, i8* %more_to_do, align 1, !dbg !12874
  %tobool71 = trunc i8 %48 to i1, !dbg !12874
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !12872

if.then72:                                        ; preds = %do.body63
  br label %do.end86, !dbg !12874

if.end73:                                         ; preds = %do.body63
  %49 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12872
  %tx74 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %49, i32 0, i32 12, !dbg !12872
  %rsp_cons75 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx74, i32 0, i32 1, !dbg !12872
  %50 = load i32, i32* %rsp_cons75, align 4, !dbg !12872
  %add = add i32 %50, 1, !dbg !12872
  %51 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12872
  %tx76 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %51, i32 0, i32 12, !dbg !12872
  %sring77 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx76, i32 0, i32 3, !dbg !12872
  %52 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %sring77, align 8, !dbg !12872
  %rsp_event = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %52, i32 0, i32 3, !dbg !12872
  store i32 %add, i32* %rsp_event, align 4, !dbg !12872
  call void asm sideeffect "lock; addl $$0,-4(%rsp)", "~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12872, !srcloc !12876
  %53 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12872
  %tx78 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %53, i32 0, i32 12, !dbg !12872
  %sring79 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx78, i32 0, i32 3, !dbg !12872
  %54 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %sring79, align 8, !dbg !12872
  %rsp_prod80 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %54, i32 0, i32 2, !dbg !12872
  %55 = load i32, i32* %rsp_prod80, align 4, !dbg !12872
  %56 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12872
  %tx81 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %56, i32 0, i32 12, !dbg !12872
  %rsp_cons82 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx81, i32 0, i32 1, !dbg !12872
  %57 = load i32, i32* %rsp_cons82, align 4, !dbg !12872
  %sub83 = sub i32 %55, %57, !dbg !12872
  %tobool84 = icmp ne i32 %sub83, 0, !dbg !12872
  %frombool85 = zext i1 %tobool84 to i8, !dbg !12872
  store i8 %frombool85, i8* %more_to_do, align 1, !dbg !12872
  br label %do.end86, !dbg !12872

do.end86:                                         ; preds = %if.end73, %if.then72
  br label %do.cond, !dbg !12877

do.cond:                                          ; preds = %do.end86
  %58 = load i8, i8* %more_to_do, align 1, !dbg !12878
  %tobool87 = trunc i8 %58 to i1, !dbg !12878
  br i1 %tobool87, label %do.body11, label %do.end88, !dbg !12877, !llvm.loop !12879

do.end88:                                         ; preds = %do.cond
  %59 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12881
  call void @xennet_maybe_wake_tx(%struct.netfront_queue* %59) #12, !dbg !12882
  ret void, !dbg !12883
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @netfront_tx_slot_available(%struct.netfront_queue* %queue) #3 !dbg !12884 {
entry:
  %queue.addr = alloca %struct.netfront_queue*, align 8
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !12887, metadata !DIExpression()), !dbg !12888
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12889
  %tx = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %0, i32 0, i32 12, !dbg !12890
  %req_prod_pvt = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx, i32 0, i32 0, !dbg !12891
  %1 = load i32, i32* %req_prod_pvt, align 8, !dbg !12891
  %2 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !12892
  %tx1 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %2, i32 0, i32 12, !dbg !12893
  %rsp_cons = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx1, i32 0, i32 1, !dbg !12894
  %3 = load i32, i32* %rsp_cons, align 4, !dbg !12894
  %sub = sub i32 %1, %3, !dbg !12895
  %conv = zext i32 %sub to i64, !dbg !12896
  %cmp = icmp ult i64 %conv, 237, !dbg !12897
  %conv2 = zext i1 %cmp to i32, !dbg !12897
  ret i32 %conv2, !dbg !12898
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_kfree_skb_any(%struct.sk_buff* %skb) #3 !dbg !12899 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12900, metadata !DIExpression()), !dbg !12901
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12902
  call void @__dev_kfree_skb_any(%struct.sk_buff* %0, i32 1) #12, !dbg !12903
  ret void, !dbg !12904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @gnttab_count_grant(i32 %start, i32 %len) #3 !dbg !12905 {
entry:
  %start.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !12908, metadata !DIExpression()), !dbg !12909
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !12910, metadata !DIExpression()), !dbg !12911
  %0 = load i32, i32* %start.addr, align 4, !dbg !12912
  %conv = zext i32 %0 to i64, !dbg !12912
  %and = and i64 %conv, 4095, !dbg !12912
  %1 = load i32, i32* %len.addr, align 4, !dbg !12912
  %conv1 = zext i32 %1 to i64, !dbg !12912
  %add = add i64 %and, %conv1, !dbg !12912
  %add2 = add i64 %add, 4096, !dbg !12912
  %sub = sub i64 %add2, 1, !dbg !12912
  %shr = lshr i64 %sub, 12, !dbg !12912
  %conv3 = trunc i64 %shr to i32, !dbg !12912
  ret i32 %conv3, !dbg !12913
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @skb_is_nonlinear(%struct.sk_buff* %skb) #3 !dbg !12914 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12917, metadata !DIExpression()), !dbg !12918
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12919
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 6, !dbg !12920
  %1 = load i32, i32* %data_len, align 4, !dbg !12920
  %tobool = icmp ne i32 %1, 0, !dbg !12919
  ret i1 %tobool, !dbg !12921
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__skb_linearize(%struct.sk_buff* %skb) #3 !dbg !12922 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12923, metadata !DIExpression()), !dbg !12924
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12925
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12926
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 6, !dbg !12927
  %2 = load i32, i32* %data_len, align 4, !dbg !12927
  %call = call i8* @__pskb_pull_tail(%struct.sk_buff* %0, i32 %2) #12, !dbg !12928
  %tobool = icmp ne i8* %call, null, !dbg !12928
  %3 = zext i1 %tobool to i64, !dbg !12928
  %cond = select i1 %tobool, i32 0, i32 -12, !dbg !12928
  ret i32 %cond, !dbg !12929
}

; Function Attrs: noredzone
declare dso_local i8* @__pskb_pull_tail(%struct.sk_buff*, i32) #1

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_any(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #3 !dbg !12930 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !12931, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12934, metadata !DIExpression()), !dbg !12933
  %0 = load i64, i64* %__edi, align 8, !dbg !12933
  store i64 %0, i64* %__edi, align 8, !dbg !12933
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12935, metadata !DIExpression()), !dbg !12933
  %1 = load i64, i64* %__esi, align 8, !dbg !12933
  store i64 %1, i64* %__esi, align 8, !dbg !12933
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12936, metadata !DIExpression()), !dbg !12933
  %2 = load i64, i64* %__edx, align 8, !dbg !12933
  store i64 %2, i64* %__edx, align 8, !dbg !12933
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12937, metadata !DIExpression()), !dbg !12933
  %3 = load i64, i64* %__ecx, align 8, !dbg !12933
  store i64 %3, i64* %__ecx, align 8, !dbg !12933
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12938, metadata !DIExpression()), !dbg !12933
  %4 = load i64, i64* %__eax, align 8, !dbg !12933
  store i64 %4, i64* %__eax, align 8, !dbg !12933
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !12933
  %6 = call i64 @llvm.read_register.i64(metadata !10557), !dbg !12939
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #8, !dbg !12939, !srcloc !12942
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !12939
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !12939
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12939
  call void @llvm.write_register.i64(metadata !10557, i64 %asmresult1), !dbg !12939
  %8 = load i64, i64* %__eax, align 8, !dbg !12939
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !12943, metadata !DIExpression()), !dbg !12945
  store i64 -1, i64* %__mask, align 8, !dbg !12945
  %9 = load i64, i64* %__mask, align 8, !dbg !12945
  store i64 %9, i64* %tmp, align 8, !dbg !12945
  %10 = load i64, i64* %tmp, align 8, !dbg !12945
  %and = and i64 %8, %10, !dbg !12939
  store i64 %and, i64* %__ret, align 8, !dbg !12939
  %11 = load i64, i64* %__ret, align 8, !dbg !12933
  store i64 %11, i64* %tmp2, align 8, !dbg !12946
  %12 = load i64, i64* %tmp2, align 8, !dbg !12933
  ret i64 %12, !dbg !12947
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #3 !dbg !12948 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12949, metadata !DIExpression()), !dbg !12951
  %0 = load i64, i64* %__edi, align 8, !dbg !12951
  store i64 %0, i64* %__edi, align 8, !dbg !12951
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12952, metadata !DIExpression()), !dbg !12951
  %1 = load i64, i64* %__esi, align 8, !dbg !12951
  store i64 %1, i64* %__esi, align 8, !dbg !12951
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12953, metadata !DIExpression()), !dbg !12951
  %2 = load i64, i64* %__edx, align 8, !dbg !12951
  store i64 %2, i64* %__edx, align 8, !dbg !12951
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12954, metadata !DIExpression()), !dbg !12951
  %3 = load i64, i64* %__ecx, align 8, !dbg !12951
  store i64 %3, i64* %__ecx, align 8, !dbg !12951
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12955, metadata !DIExpression()), !dbg !12951
  %4 = load i64, i64* %__eax, align 8, !dbg !12951
  store i64 %4, i64* %__eax, align 8, !dbg !12951
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !12951
  %6 = call i64 @llvm.read_register.i64(metadata !10557), !dbg !12951
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #8, !dbg !12951, !srcloc !12956
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !12951
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !12951
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12951
  call void @llvm.write_register.i64(metadata !10557, i64 %asmresult1), !dbg !12951
  ret void, !dbg !12957
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #7

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @skb_is_gso(%struct.sk_buff* %skb) #3 !dbg !12958 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12959, metadata !DIExpression()), !dbg !12960
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12961
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %0) #12, !dbg !12961
  %1 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !12962
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %1, i32 0, i32 4, !dbg !12962
  %2 = load i16, i16* %gso_size, align 4, !dbg !12962
  %tobool = icmp ne i16 %2, 0, !dbg !12961
  ret i1 %tobool, !dbg !12963
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @skb_gso_ok(%struct.sk_buff* %skb, i64 %features) #3 !dbg !12964 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %features.addr = alloca i64, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !12965, metadata !DIExpression()), !dbg !12966
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !12967, metadata !DIExpression()), !dbg !12968
  %0 = load i64, i64* %features.addr, align 8, !dbg !12969
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12970
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %1) #12, !dbg !12970
  %2 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !12971
  %gso_type = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %2, i32 0, i32 8, !dbg !12971
  %3 = load i32, i32* %gso_type, align 8, !dbg !12971
  %call1 = call zeroext i1 @net_gso_ok(i64 %0, i32 %3) #12, !dbg !12972
  br i1 %call1, label %land.rhs, label %land.end, !dbg !12973

land.rhs:                                         ; preds = %entry
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !12974
  %call2 = call zeroext i1 @skb_has_frag_list(%struct.sk_buff* %4) #12, !dbg !12975
  br i1 %call2, label %lor.rhs, label %lor.end, !dbg !12976

lor.rhs:                                          ; preds = %land.rhs
  %5 = load i64, i64* %features.addr, align 8, !dbg !12977
  %and = and i64 %5, 64, !dbg !12978
  %tobool = icmp ne i64 %and, 0, !dbg !12976
  br label %lor.end, !dbg !12976

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %6 = phi i1 [ true, %land.rhs ], [ %tobool, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %entry
  %7 = phi i1 [ false, %entry ], [ %6, %lor.end ], !dbg !12979
  ret i1 %7, !dbg !12980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @net_gso_ok(i64 %features, i32 %gso_type) #3 !dbg !12981 {
entry:
  %features.addr = alloca i64, align 8
  %gso_type.addr = alloca i32, align 4
  %feature = alloca i64, align 8
  store i64 %features, i64* %features.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %features.addr, metadata !12984, metadata !DIExpression()), !dbg !12985
  store i32 %gso_type, i32* %gso_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gso_type.addr, metadata !12986, metadata !DIExpression()), !dbg !12987
  call void @llvm.dbg.declare(metadata i64* %feature, metadata !12988, metadata !DIExpression()), !dbg !12989
  %0 = load i32, i32* %gso_type.addr, align 4, !dbg !12990
  %conv = sext i32 %0 to i64, !dbg !12991
  %shl = shl i64 %conv, 16, !dbg !12992
  store i64 %shl, i64* %feature, align 8, !dbg !12989
  br label %do.body, !dbg !12993

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12994

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !12996

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !12997

do.end2:                                          ; preds = %do.body1
  br label %do.body3, !dbg !12999

do.body3:                                         ; preds = %do.end2
  br label %do.end4, !dbg !13000

do.end4:                                          ; preds = %do.body3
  br label %do.body5, !dbg !13002

do.body5:                                         ; preds = %do.end4
  br label %do.end6, !dbg !13003

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !13005

do.body7:                                         ; preds = %do.end6
  br label %do.end8, !dbg !13006

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !13008

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !13009

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !13011

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !13012

do.end12:                                         ; preds = %do.body11
  br label %do.body13, !dbg !13014

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !13015

do.end14:                                         ; preds = %do.body13
  br label %do.body15, !dbg !13017

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !13018

do.end16:                                         ; preds = %do.body15
  br label %do.body17, !dbg !13020

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !13021

do.end18:                                         ; preds = %do.body17
  br label %do.body19, !dbg !13023

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !13024

do.end20:                                         ; preds = %do.body19
  br label %do.body21, !dbg !13026

do.body21:                                        ; preds = %do.end20
  br label %do.end22, !dbg !13027

do.end22:                                         ; preds = %do.body21
  br label %do.body23, !dbg !13029

do.body23:                                        ; preds = %do.end22
  br label %do.end24, !dbg !13030

do.end24:                                         ; preds = %do.body23
  br label %do.body25, !dbg !13032

do.body25:                                        ; preds = %do.end24
  br label %do.end26, !dbg !13033

do.end26:                                         ; preds = %do.body25
  br label %do.body27, !dbg !13035

do.body27:                                        ; preds = %do.end26
  br label %do.end28, !dbg !13036

do.end28:                                         ; preds = %do.body27
  br label %do.body29, !dbg !13038

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !13039

do.end30:                                         ; preds = %do.body29
  br label %do.body31, !dbg !13041

do.body31:                                        ; preds = %do.end30
  br label %do.end32, !dbg !13042

do.end32:                                         ; preds = %do.body31
  br label %do.body33, !dbg !13044

do.body33:                                        ; preds = %do.end32
  br label %do.end34, !dbg !13045

do.end34:                                         ; preds = %do.body33
  br label %do.body35, !dbg !13047

do.body35:                                        ; preds = %do.end34
  br label %do.end36, !dbg !13048

do.end36:                                         ; preds = %do.body35
  %1 = load i64, i64* %features.addr, align 8, !dbg !13050
  %2 = load i64, i64* %feature, align 8, !dbg !13051
  %and = and i64 %1, %2, !dbg !13052
  %3 = load i64, i64* %feature, align 8, !dbg !13053
  %cmp = icmp eq i64 %and, %3, !dbg !13054
  ret i1 %cmp, !dbg !13055
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @skb_has_frag_list(%struct.sk_buff* %skb) #3 !dbg !13056 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13057, metadata !DIExpression()), !dbg !13058
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13059
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %0) #12, !dbg !13059
  %1 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !13060
  %frag_list = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %1, i32 0, i32 6, !dbg !13060
  %2 = load %struct.sk_buff*, %struct.sk_buff** %frag_list, align 8, !dbg !13060
  %cmp = icmp ne %struct.sk_buff* %2, null, !dbg !13061
  ret i1 %cmp, !dbg !13062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #3 !dbg !13063 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !13066, metadata !DIExpression()), !dbg !13067
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !13068, metadata !DIExpression()), !dbg !13070
  %0 = load i64, i64* %__edi, align 8, !dbg !13070
  store i64 %0, i64* %__edi, align 8, !dbg !13070
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !13071, metadata !DIExpression()), !dbg !13070
  %1 = load i64, i64* %__esi, align 8, !dbg !13070
  store i64 %1, i64* %__esi, align 8, !dbg !13070
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !13072, metadata !DIExpression()), !dbg !13070
  %2 = load i64, i64* %__edx, align 8, !dbg !13070
  store i64 %2, i64* %__edx, align 8, !dbg !13070
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !13073, metadata !DIExpression()), !dbg !13070
  %3 = load i64, i64* %__ecx, align 8, !dbg !13070
  store i64 %3, i64* %__ecx, align 8, !dbg !13070
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !13074, metadata !DIExpression()), !dbg !13070
  %4 = load i64, i64* %__eax, align 8, !dbg !13070
  store i64 %4, i64* %__eax, align 8, !dbg !13070
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !13070
  %6 = call i64 @llvm.read_register.i64(metadata !10557), !dbg !13070
  %7 = load i64, i64* %f.addr, align 8, !dbg !13070
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #8, !dbg !13070, !srcloc !13075
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !13070
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !13070
  store i64 %asmresult, i64* %__eax, align 8, !dbg !13070
  call void @llvm.write_register.i64(metadata !10557, i64 %asmresult1), !dbg !13070
  ret void, !dbg !13076
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gnttab_for_one_grant(%struct.page* %page, i32 %offset, i32 %len, void (i64, i32, i32, i8*)* %fn, i8* %data) #3 !dbg !13077 {
entry:
  %page.addr = alloca %struct.page*, align 8
  %offset.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %fn.addr = alloca void (i64, i32, i32, i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %__UNIQUE_ID___x630 = alloca i32, align 4
  %__UNIQUE_ID___y631 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !13084, metadata !DIExpression()), !dbg !13085
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !13086, metadata !DIExpression()), !dbg !13087
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !13088, metadata !DIExpression()), !dbg !13089
  store void (i64, i32, i32, i8*)* %fn, void (i64, i32, i32, i8*)** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata void (i64, i32, i32, i8*)** %fn.addr, metadata !13090, metadata !DIExpression()), !dbg !13091
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !13092, metadata !DIExpression()), !dbg !13093
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x630, metadata !13094, metadata !DIExpression()), !dbg !13096
  %0 = load i32, i32* %offset.addr, align 4, !dbg !13096
  %conv = zext i32 %0 to i64, !dbg !13096
  %and = and i64 %conv, 4095, !dbg !13096
  %sub = sub i64 4096, %and, !dbg !13096
  %conv1 = trunc i64 %sub to i32, !dbg !13096
  store i32 %conv1, i32* %__UNIQUE_ID___x630, align 4, !dbg !13096
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y631, metadata !13097, metadata !DIExpression()), !dbg !13096
  %1 = load i32, i32* %len.addr, align 4, !dbg !13096
  store i32 %1, i32* %__UNIQUE_ID___y631, align 4, !dbg !13096
  %2 = load i32, i32* %__UNIQUE_ID___x630, align 4, !dbg !13096
  %3 = load i32, i32* %__UNIQUE_ID___y631, align 4, !dbg !13096
  %cmp = icmp ult i32 %2, %3, !dbg !13096
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13096

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %__UNIQUE_ID___x630, align 4, !dbg !13096
  br label %cond.end, !dbg !13096

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %__UNIQUE_ID___y631, align 4, !dbg !13096
  br label %cond.end, !dbg !13096

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %5, %cond.false ], !dbg !13096
  store i32 %cond, i32* %tmp, align 4, !dbg !13096
  %6 = load i32, i32* %tmp, align 4, !dbg !13096
  store i32 %6, i32* %len.addr, align 4, !dbg !13098
  %7 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !13099
  %8 = load i32, i32* %offset.addr, align 4, !dbg !13100
  %9 = load i32, i32* %len.addr, align 4, !dbg !13101
  %10 = load void (i64, i32, i32, i8*)*, void (i64, i32, i32, i8*)** %fn.addr, align 8, !dbg !13102
  %11 = load i8*, i8** %data.addr, align 8, !dbg !13103
  call void @gnttab_foreach_grant_in_range(%struct.page* %7, i32 %8, i32 %9, void (i64, i32, i32, i8*)* %10, i8* %11) #12, !dbg !13104
  ret void, !dbg !13105
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_tx_setup_grant(i64 %gfn, i32 %offset, i32 %len, i8* %data) #3 !dbg !13106 {
entry:
  %gfn.addr = alloca i64, align 8
  %offset.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %info = alloca %struct.xennet_gnttab_make_txreq*, align 8
  %id = alloca i32, align 4
  %tx = alloca %struct.xen_netif_tx_request*, align 8
  %ref = alloca i32, align 4
  %page = alloca %struct.page*, align 8
  %queue = alloca %struct.netfront_queue*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i64 %gfn, i64* %gfn.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %gfn.addr, metadata !13107, metadata !DIExpression()), !dbg !13108
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !13109, metadata !DIExpression()), !dbg !13110
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !13111, metadata !DIExpression()), !dbg !13112
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !13113, metadata !DIExpression()), !dbg !13114
  call void @llvm.dbg.declare(metadata %struct.xennet_gnttab_make_txreq** %info, metadata !13115, metadata !DIExpression()), !dbg !13117
  %0 = load i8*, i8** %data.addr, align 8, !dbg !13118
  %1 = bitcast i8* %0 to %struct.xennet_gnttab_make_txreq*, !dbg !13118
  store %struct.xennet_gnttab_make_txreq* %1, %struct.xennet_gnttab_make_txreq** %info, align 8, !dbg !13117
  call void @llvm.dbg.declare(metadata i32* %id, metadata !13119, metadata !DIExpression()), !dbg !13120
  call void @llvm.dbg.declare(metadata %struct.xen_netif_tx_request** %tx, metadata !13121, metadata !DIExpression()), !dbg !13122
  call void @llvm.dbg.declare(metadata i32* %ref, metadata !13123, metadata !DIExpression()), !dbg !13124
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !13125, metadata !DIExpression()), !dbg !13126
  %2 = load %struct.xennet_gnttab_make_txreq*, %struct.xennet_gnttab_make_txreq** %info, align 8, !dbg !13127
  %page1 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %2, i32 0, i32 2, !dbg !13128
  %3 = load %struct.page*, %struct.page** %page1, align 8, !dbg !13128
  store %struct.page* %3, %struct.page** %page, align 8, !dbg !13126
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue, metadata !13129, metadata !DIExpression()), !dbg !13130
  %4 = load %struct.xennet_gnttab_make_txreq*, %struct.xennet_gnttab_make_txreq** %info, align 8, !dbg !13131
  %queue2 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %4, i32 0, i32 0, !dbg !13132
  %5 = load %struct.netfront_queue*, %struct.netfront_queue** %queue2, align 8, !dbg !13132
  store %struct.netfront_queue* %5, %struct.netfront_queue** %queue, align 8, !dbg !13130
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !13133, metadata !DIExpression()), !dbg !13134
  %6 = load %struct.xennet_gnttab_make_txreq*, %struct.xennet_gnttab_make_txreq** %info, align 8, !dbg !13135
  %skb3 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %6, i32 0, i32 1, !dbg !13136
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb3, align 8, !dbg !13136
  store %struct.sk_buff* %7, %struct.sk_buff** %skb, align 8, !dbg !13134
  %8 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !13137
  %tx_skb_freelist = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %8, i32 0, i32 18, !dbg !13138
  %9 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !13139
  %tx_skbs = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %9, i32 0, i32 14, !dbg !13140
  %arraydecay = getelementptr inbounds [256 x %union.skb_entry], [256 x %union.skb_entry]* %tx_skbs, i64 0, i64 0, !dbg !13139
  %call = call zeroext i16 @get_id_from_freelist(i32* %tx_skb_freelist, %union.skb_entry* %arraydecay) #12, !dbg !13141
  %conv = zext i16 %call to i32, !dbg !13141
  store i32 %conv, i32* %id, align 4, !dbg !13142
  %10 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !13143
  %tx4 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %10, i32 0, i32 12, !dbg !13143
  %sring = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx4, i32 0, i32 3, !dbg !13143
  %11 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %sring, align 8, !dbg !13143
  %ring = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %11, i32 0, i32 5, !dbg !13143
  %12 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !13143
  %tx5 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %12, i32 0, i32 12, !dbg !13143
  %req_prod_pvt = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx5, i32 0, i32 0, !dbg !13143
  %13 = load i32, i32* %req_prod_pvt, align 8, !dbg !13143
  %inc = add i32 %13, 1, !dbg !13143
  store i32 %inc, i32* %req_prod_pvt, align 8, !dbg !13143
  %14 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !13143
  %tx6 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %14, i32 0, i32 12, !dbg !13143
  %nr_ents = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx6, i32 0, i32 2, !dbg !13143
  %15 = load i32, i32* %nr_ents, align 8, !dbg !13143
  %sub = sub i32 %15, 1, !dbg !13143
  %and = and i32 %13, %sub, !dbg !13143
  %idxprom = zext i32 %and to i64, !dbg !13143
  %arrayidx = getelementptr [1 x %union.xen_netif_tx_sring_entry], [1 x %union.xen_netif_tx_sring_entry]* %ring, i64 0, i64 %idxprom, !dbg !13143
  %req = bitcast %union.xen_netif_tx_sring_entry* %arrayidx to %struct.xen_netif_tx_request*, !dbg !13143
  store %struct.xen_netif_tx_request* %req, %struct.xen_netif_tx_request** %tx, align 8, !dbg !13144
  %16 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !13145
  %gref_tx_head = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %16, i32 0, i32 15, !dbg !13146
  %call7 = call i32 @gnttab_claim_grant_reference(i32* %gref_tx_head) #12, !dbg !13147
  store i32 %call7, i32* %ref, align 4, !dbg !13148
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13149, metadata !DIExpression()), !dbg !13151
  %17 = load i32, i32* %ref, align 4, !dbg !13151
  %conv8 = sext i32 %17 to i64, !dbg !13151
  %18 = inttoptr i64 %conv8 to i8*, !dbg !13151
  %19 = ptrtoint i8* %18 to i64, !dbg !13151
  %cmp = icmp uge i64 %19, -4095, !dbg !13151
  %lnot = xor i1 %cmp, true, !dbg !13151
  %lnot10 = xor i1 %lnot, true, !dbg !13151
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !13151
  %conv11 = sext i32 %lnot.ext to i64, !dbg !13151
  %tobool = icmp ne i64 %conv11, 0, !dbg !13151
  %lnot12 = xor i1 %tobool, true, !dbg !13151
  %lnot14 = xor i1 %lnot12, true, !dbg !13151
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !13151
  store i32 %lnot.ext15, i32* %__ret_warn_on, align 4, !dbg !13151
  %20 = load i32, i32* %__ret_warn_on, align 4, !dbg !13152
  %tobool16 = icmp ne i32 %20, 0, !dbg !13152
  %lnot17 = xor i1 %tobool16, true, !dbg !13152
  %lnot19 = xor i1 %lnot17, true, !dbg !13152
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !13152
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !13152
  %tobool22 = icmp ne i64 %conv21, 0, !dbg !13152
  br i1 %tobool22, label %if.then, label %if.end, !dbg !13151

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13152

do.body:                                          ; preds = %if.then
  br label %do.body23, !dbg !13154

do.body23:                                        ; preds = %do.body
  br label %do.end, !dbg !13156

do.end:                                           ; preds = %do.body23
  br label %do.body24, !dbg !13154

do.body24:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i32 457, i32 2307, i64 12) #8, !dbg !13158, !srcloc !13160
  br label %do.end25, !dbg !13158

do.end25:                                         ; preds = %do.body24
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 640) #8, !dbg !13161, !srcloc !13163
  br label %do.body26, !dbg !13154

do.body26:                                        ; preds = %do.end25
  br label %do.end27, !dbg !13164

do.end27:                                         ; preds = %do.body26
  br label %do.end28, !dbg !13154

do.end28:                                         ; preds = %do.end27
  br label %if.end, !dbg !13154

if.end:                                           ; preds = %do.end28, %entry
  %21 = load i32, i32* %__ret_warn_on, align 4, !dbg !13151
  %tobool29 = icmp ne i32 %21, 0, !dbg !13151
  %lnot30 = xor i1 %tobool29, true, !dbg !13151
  %lnot32 = xor i1 %lnot30, true, !dbg !13151
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !13151
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !13151
  store i64 %conv34, i64* %tmp, align 8, !dbg !13152
  %22 = load i64, i64* %tmp, align 8, !dbg !13151
  %23 = load i32, i32* %ref, align 4, !dbg !13166
  %24 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !13167
  %info35 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %24, i32 0, i32 2, !dbg !13168
  %25 = load %struct.netfront_info*, %struct.netfront_info** %info35, align 32, !dbg !13168
  %xbdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %25, i32 0, i32 2, !dbg !13169
  %26 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev, align 8, !dbg !13169
  %otherend_id = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %26, i32 0, i32 3, !dbg !13170
  %27 = load i32, i32* %otherend_id, align 8, !dbg !13170
  %conv36 = trunc i32 %27 to i16, !dbg !13167
  %28 = load i64, i64* %gfn.addr, align 8, !dbg !13171
  call void @gnttab_grant_foreign_access_ref(i32 %23, i16 zeroext %conv36, i64 %28, i32 4) #12, !dbg !13172
  %29 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13173
  %30 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !13174
  %tx_skbs37 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %30, i32 0, i32 14, !dbg !13175
  %31 = load i32, i32* %id, align 4, !dbg !13176
  %idxprom38 = zext i32 %31 to i64, !dbg !13174
  %arrayidx39 = getelementptr [256 x %union.skb_entry], [256 x %union.skb_entry]* %tx_skbs37, i64 0, i64 %idxprom38, !dbg !13174
  %skb40 = bitcast %union.skb_entry* %arrayidx39 to %struct.sk_buff**, !dbg !13177
  store %struct.sk_buff* %29, %struct.sk_buff** %skb40, align 8, !dbg !13178
  %32 = load %struct.page*, %struct.page** %page, align 8, !dbg !13179
  %33 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !13180
  %grant_tx_page = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %33, i32 0, i32 17, !dbg !13181
  %34 = load i32, i32* %id, align 4, !dbg !13182
  %idxprom41 = zext i32 %34 to i64, !dbg !13180
  %arrayidx42 = getelementptr [256 x %struct.page*], [256 x %struct.page*]* %grant_tx_page, i64 0, i64 %idxprom41, !dbg !13180
  store %struct.page* %32, %struct.page** %arrayidx42, align 8, !dbg !13183
  %35 = load i32, i32* %ref, align 4, !dbg !13184
  %36 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !13185
  %grant_tx_ref = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %36, i32 0, i32 16, !dbg !13186
  %37 = load i32, i32* %id, align 4, !dbg !13187
  %idxprom43 = zext i32 %37 to i64, !dbg !13185
  %arrayidx44 = getelementptr [256 x i32], [256 x i32]* %grant_tx_ref, i64 0, i64 %idxprom43, !dbg !13185
  store i32 %35, i32* %arrayidx44, align 4, !dbg !13188
  %38 = load i32, i32* %id, align 4, !dbg !13189
  %conv45 = trunc i32 %38 to i16, !dbg !13189
  %39 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx, align 8, !dbg !13190
  %id46 = getelementptr inbounds %struct.xen_netif_tx_request, %struct.xen_netif_tx_request* %39, i32 0, i32 3, !dbg !13191
  store i16 %conv45, i16* %id46, align 4, !dbg !13192
  %40 = load i32, i32* %ref, align 4, !dbg !13193
  %41 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx, align 8, !dbg !13194
  %gref = getelementptr inbounds %struct.xen_netif_tx_request, %struct.xen_netif_tx_request* %41, i32 0, i32 0, !dbg !13195
  store i32 %40, i32* %gref, align 4, !dbg !13196
  %42 = load i32, i32* %offset.addr, align 4, !dbg !13197
  %conv47 = trunc i32 %42 to i16, !dbg !13197
  %43 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx, align 8, !dbg !13198
  %offset48 = getelementptr inbounds %struct.xen_netif_tx_request, %struct.xen_netif_tx_request* %43, i32 0, i32 1, !dbg !13199
  store i16 %conv47, i16* %offset48, align 4, !dbg !13200
  %44 = load i32, i32* %len.addr, align 4, !dbg !13201
  %conv49 = trunc i32 %44 to i16, !dbg !13201
  %45 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx, align 8, !dbg !13202
  %size = getelementptr inbounds %struct.xen_netif_tx_request, %struct.xen_netif_tx_request* %45, i32 0, i32 4, !dbg !13203
  store i16 %conv49, i16* %size, align 2, !dbg !13204
  %46 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx, align 8, !dbg !13205
  %flags = getelementptr inbounds %struct.xen_netif_tx_request, %struct.xen_netif_tx_request* %46, i32 0, i32 2, !dbg !13206
  store i16 0, i16* %flags, align 2, !dbg !13207
  %47 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx, align 8, !dbg !13208
  %48 = load %struct.xennet_gnttab_make_txreq*, %struct.xennet_gnttab_make_txreq** %info, align 8, !dbg !13209
  %tx50 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %48, i32 0, i32 3, !dbg !13210
  store %struct.xen_netif_tx_request* %47, %struct.xen_netif_tx_request** %tx50, align 8, !dbg !13211
  %49 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx, align 8, !dbg !13212
  %size51 = getelementptr inbounds %struct.xen_netif_tx_request, %struct.xen_netif_tx_request* %49, i32 0, i32 4, !dbg !13213
  %50 = load i16, i16* %size51, align 2, !dbg !13213
  %conv52 = zext i16 %50 to i32, !dbg !13212
  %51 = load %struct.xennet_gnttab_make_txreq*, %struct.xennet_gnttab_make_txreq** %info, align 8, !dbg !13214
  %size53 = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %51, i32 0, i32 4, !dbg !13215
  %52 = load i32, i32* %size53, align 8, !dbg !13216
  %add = add i32 %52, %conv52, !dbg !13216
  store i32 %add, i32* %size53, align 8, !dbg !13216
  ret void, !dbg !13217
}

; Function Attrs: noredzone
declare dso_local void @gnttab_foreach_grant_in_range(%struct.page*, i32, i32, void (i64, i32, i32, i8*)*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @get_id_from_freelist(i32* %head, %union.skb_entry* %list) #3 !dbg !13218 {
entry:
  %head.addr = alloca i32*, align 8
  %list.addr = alloca %union.skb_entry*, align 8
  %id = alloca i32, align 4
  store i32* %head, i32** %head.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %head.addr, metadata !13222, metadata !DIExpression()), !dbg !13223
  store %union.skb_entry* %list, %union.skb_entry** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %union.skb_entry** %list.addr, metadata !13224, metadata !DIExpression()), !dbg !13225
  call void @llvm.dbg.declare(metadata i32* %id, metadata !13226, metadata !DIExpression()), !dbg !13227
  %0 = load i32*, i32** %head.addr, align 8, !dbg !13228
  %1 = load i32, i32* %0, align 4, !dbg !13229
  store i32 %1, i32* %id, align 4, !dbg !13227
  %2 = load %union.skb_entry*, %union.skb_entry** %list.addr, align 8, !dbg !13230
  %3 = load i32, i32* %id, align 4, !dbg !13231
  %idxprom = zext i32 %3 to i64, !dbg !13230
  %arrayidx = getelementptr %union.skb_entry, %union.skb_entry* %2, i64 %idxprom, !dbg !13230
  %link = bitcast %union.skb_entry* %arrayidx to i64*, !dbg !13232
  %4 = load i64, i64* %link, align 8, !dbg !13232
  %conv = trunc i64 %4 to i32, !dbg !13230
  %5 = load i32*, i32** %head.addr, align 8, !dbg !13233
  store i32 %conv, i32* %5, align 4, !dbg !13234
  %6 = load i32, i32* %id, align 4, !dbg !13235
  %conv1 = trunc i32 %6 to i16, !dbg !13235
  ret i16 %conv1, !dbg !13236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_make_one_txreq(i64 %gfn, i32 %offset, i32 %len, i8* %data) #3 !dbg !13237 {
entry:
  %gfn.addr = alloca i64, align 8
  %offset.addr = alloca i32, align 4
  %len.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %info = alloca %struct.xennet_gnttab_make_txreq*, align 8
  store i64 %gfn, i64* %gfn.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %gfn.addr, metadata !13238, metadata !DIExpression()), !dbg !13239
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !13240, metadata !DIExpression()), !dbg !13241
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !13242, metadata !DIExpression()), !dbg !13243
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !13244, metadata !DIExpression()), !dbg !13245
  call void @llvm.dbg.declare(metadata %struct.xennet_gnttab_make_txreq** %info, metadata !13246, metadata !DIExpression()), !dbg !13247
  %0 = load i8*, i8** %data.addr, align 8, !dbg !13248
  %1 = bitcast i8* %0 to %struct.xennet_gnttab_make_txreq*, !dbg !13248
  store %struct.xennet_gnttab_make_txreq* %1, %struct.xennet_gnttab_make_txreq** %info, align 8, !dbg !13247
  %2 = load %struct.xennet_gnttab_make_txreq*, %struct.xennet_gnttab_make_txreq** %info, align 8, !dbg !13249
  %tx = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %2, i32 0, i32 3, !dbg !13250
  %3 = load %struct.xen_netif_tx_request*, %struct.xen_netif_tx_request** %tx, align 8, !dbg !13250
  %flags = getelementptr inbounds %struct.xen_netif_tx_request, %struct.xen_netif_tx_request* %3, i32 0, i32 2, !dbg !13251
  %4 = load i16, i16* %flags, align 2, !dbg !13252
  %conv = zext i16 %4 to i32, !dbg !13252
  %or = or i32 %conv, 4, !dbg !13252
  %conv1 = trunc i32 %or to i16, !dbg !13252
  store i16 %conv1, i16* %flags, align 2, !dbg !13252
  %5 = load %struct.xennet_gnttab_make_txreq*, %struct.xennet_gnttab_make_txreq** %info, align 8, !dbg !13253
  %skb = getelementptr inbounds %struct.xennet_gnttab_make_txreq, %struct.xennet_gnttab_make_txreq* %5, i32 0, i32 1, !dbg !13254
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !13254
  %call = call %struct.sk_buff* @skb_get(%struct.sk_buff* %6) #12, !dbg !13255
  %7 = load i64, i64* %gfn.addr, align 8, !dbg !13256
  %8 = load i32, i32* %offset.addr, align 4, !dbg !13257
  %9 = load i32, i32* %len.addr, align 4, !dbg !13258
  %10 = load i8*, i8** %data.addr, align 8, !dbg !13259
  call void @xennet_tx_setup_grant(i64 %7, i32 %8, i32 %9, i8* %10) #12, !dbg !13260
  ret void, !dbg !13261
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @skb_get(%struct.sk_buff* %skb) #3 !dbg !13262 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13265, metadata !DIExpression()), !dbg !13266
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13267
  %users = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 39, !dbg !13268
  call void @refcount_inc(%struct.refcount_struct* %users) #12, !dbg !13269
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13270
  ret %struct.sk_buff* %1, !dbg !13271
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_inc(%struct.refcount_struct* %r) #3 !dbg !13272 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !13276, metadata !DIExpression()), !dbg !13277
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13278
  call void @__refcount_inc(%struct.refcount_struct* %0, i32* null) #12, !dbg !13279
  ret void, !dbg !13280
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_inc(%struct.refcount_struct* %r, i32* %oldp) #3 !dbg !13281 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !13284, metadata !DIExpression()), !dbg !13285
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !13286, metadata !DIExpression()), !dbg !13287
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13288
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !13289
  call void @__refcount_add(i32 1, %struct.refcount_struct* %0, i32* %1) #12, !dbg !13290
  ret void, !dbg !13291
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_add(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #3 !dbg !13292 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !13295, metadata !DIExpression()), !dbg !13300
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !13305, metadata !DIExpression()), !dbg !13306
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !13307, metadata !DIExpression()), !dbg !13309
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !13310, metadata !DIExpression()), !dbg !13312
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !13314, metadata !DIExpression()), !dbg !13315
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !13316, metadata !DIExpression()), !dbg !13317
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !13318, metadata !DIExpression()), !dbg !13319
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13320, metadata !DIExpression()), !dbg !13321
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !13322, metadata !DIExpression()), !dbg !13323
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !13324, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.declare(metadata i32* %old, metadata !13326, metadata !DIExpression()), !dbg !13327
  %0 = load i32, i32* %i.addr, align 4, !dbg !13328
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13329
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !13330
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13331
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !13331
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13332
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !13333
  %conv.i.i = trunc i64 %5 to i32, !dbg !13333
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #14, !dbg !13334
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13335
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !13335
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #14, !dbg !13335
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !13336
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13337
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !13309
  store i32 %10, i32* %__ret.i.i, align 4, !dbg !13309
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !13309
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !13309
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !13309
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #8, !dbg !13309, !srcloc !13338
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !13309
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !13309
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !13309
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !13309
  store i32 %15, i32* %old, align 4, !dbg !13327
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !13339
  %tobool = icmp ne i32* %16, null, !dbg !13339
  br i1 %tobool, label %if.then, label %if.end, !dbg !13341

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !13342
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !13343
  store i32 %17, i32* %18, align 4, !dbg !13344
  br label %if.end, !dbg !13345

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !13346
  %tobool1 = icmp ne i32 %19, 0, !dbg !13346
  %lnot = xor i1 %tobool1, true, !dbg !13346
  %lnot2 = xor i1 %lnot, true, !dbg !13346
  %lnot3 = xor i1 %lnot2, true, !dbg !13346
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !13346
  %conv = sext i32 %lnot.ext to i64, !dbg !13346
  %tobool4 = icmp ne i64 %conv, 0, !dbg !13346
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !13348

if.then5:                                         ; preds = %if.end
  %20 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13349
  call void @refcount_warn_saturate(%struct.refcount_struct* %20, i32 2) #12, !dbg !13350
  br label %if.end17, !dbg !13350

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !13351
  %cmp = icmp slt i32 %21, 0, !dbg !13351
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !13351

lor.rhs:                                          ; preds = %if.else
  %22 = load i32, i32* %old, align 4, !dbg !13351
  %23 = load i32, i32* %i.addr, align 4, !dbg !13351
  %add = add i32 %22, %23, !dbg !13351
  %cmp7 = icmp slt i32 %add, 0, !dbg !13351
  br label %lor.end, !dbg !13351

lor.end:                                          ; preds = %lor.rhs, %if.else
  %24 = phi i1 [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %24, true, !dbg !13351
  %lnot11 = xor i1 %lnot9, true, !dbg !13351
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !13351
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !13351
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !13351
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !13353

if.then15:                                        ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13354
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 1) #12, !dbg !13355
  br label %if.end16, !dbg !13355

if.end16:                                         ; preds = %if.then15, %lor.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  ret void, !dbg !13356
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_clone_tx_timestamp(%struct.sk_buff* %skb) #3 !dbg !13357 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13358, metadata !DIExpression()), !dbg !13359
  ret void, !dbg !13360
}

; Function Attrs: noredzone
declare dso_local void @skb_tstamp_tx(%struct.sk_buff*, %struct.skb_shared_hwtstamps*) #1

; Function Attrs: noredzone
declare dso_local i32 @gnttab_query_foreign_access(i32) #1

; Function Attrs: noredzone
declare dso_local i32 @gnttab_end_foreign_access_ref(i32, i32) #1

; Function Attrs: noredzone
declare dso_local void @gnttab_release_grant_reference(i32*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @add_id_to_freelist(i32* %head, %union.skb_entry* %list, i16 zeroext %id) #3 !dbg !13361 {
entry:
  %head.addr = alloca i32*, align 8
  %list.addr = alloca %union.skb_entry*, align 8
  %id.addr = alloca i16, align 2
  store i32* %head, i32** %head.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %head.addr, metadata !13364, metadata !DIExpression()), !dbg !13365
  store %union.skb_entry* %list, %union.skb_entry** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %union.skb_entry** %list.addr, metadata !13366, metadata !DIExpression()), !dbg !13367
  store i16 %id, i16* %id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %id.addr, metadata !13368, metadata !DIExpression()), !dbg !13369
  %0 = load %union.skb_entry*, %union.skb_entry** %list.addr, align 8, !dbg !13370
  %1 = load i16, i16* %id.addr, align 2, !dbg !13371
  %idxprom = zext i16 %1 to i64, !dbg !13370
  %arrayidx = getelementptr %union.skb_entry, %union.skb_entry* %0, i64 %idxprom, !dbg !13370
  %2 = load i32*, i32** %head.addr, align 8, !dbg !13372
  %3 = load i32, i32* %2, align 4, !dbg !13373
  %conv = trunc i32 %3 to i16, !dbg !13373
  call void @skb_entry_set_link(%union.skb_entry* %arrayidx, i16 zeroext %conv) #12, !dbg !13374
  %4 = load i16, i16* %id.addr, align 2, !dbg !13375
  %conv1 = zext i16 %4 to i32, !dbg !13375
  %5 = load i32*, i32** %head.addr, align 8, !dbg !13376
  store i32 %conv1, i32* %5, align 4, !dbg !13377
  ret void, !dbg !13378
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_kfree_skb_irq(%struct.sk_buff* %skb) #3 !dbg !13379 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13380, metadata !DIExpression()), !dbg !13381
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13382
  call void @__dev_kfree_skb_irq(%struct.sk_buff* %0, i32 1) #12, !dbg !13383
  ret void, !dbg !13384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_maybe_wake_tx(%struct.netfront_queue* %queue) #3 !dbg !13385 {
entry:
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %dev = alloca %struct.net_device*, align 8
  %dev_queue = alloca %struct.netdev_queue*, align 8
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !13386, metadata !DIExpression()), !dbg !13387
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !13388, metadata !DIExpression()), !dbg !13389
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !13390
  %info = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %0, i32 0, i32 2, !dbg !13391
  %1 = load %struct.netfront_info*, %struct.netfront_info** %info, align 32, !dbg !13391
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %1, i32 0, i32 1, !dbg !13392
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13392
  store %struct.net_device* %2, %struct.net_device** %dev, align 8, !dbg !13389
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue, metadata !13393, metadata !DIExpression()), !dbg !13394
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13395
  %4 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !13396
  %id = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %4, i32 0, i32 0, !dbg !13397
  %5 = load i32, i32* %id, align 64, !dbg !13397
  %call = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %3, i32 %5) #12, !dbg !13398
  store %struct.netdev_queue* %call, %struct.netdev_queue** %dev_queue, align 8, !dbg !13394
  %6 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue, align 8, !dbg !13399
  %call1 = call zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %6) #12, !dbg !13399
  %lnot = xor i1 %call1, true, !dbg !13399
  %lnot2 = xor i1 %lnot, true, !dbg !13399
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !13399
  %conv = sext i32 %lnot.ext to i64, !dbg !13399
  %tobool = icmp ne i64 %conv, 0, !dbg !13399
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13401

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !13402
  %call3 = call i32 @netfront_tx_slot_available(%struct.netfront_queue* %7) #12, !dbg !13403
  %tobool4 = icmp ne i32 %call3, 0, !dbg !13403
  br i1 %tobool4, label %land.lhs.true5, label %if.end, !dbg !13404

land.lhs.true5:                                   ; preds = %land.lhs.true
  %8 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13405
  %call6 = call zeroext i1 @netif_running(%struct.net_device* %8) #12, !dbg !13405
  %lnot7 = xor i1 %call6, true, !dbg !13405
  %lnot9 = xor i1 %lnot7, true, !dbg !13405
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !13405
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !13405
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !13405
  br i1 %tobool12, label %if.then, label %if.end, !dbg !13406

if.then:                                          ; preds = %land.lhs.true5
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !13407
  %10 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !13408
  %id13 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %10, i32 0, i32 0, !dbg !13409
  %11 = load i32, i32* %id13, align 64, !dbg !13409
  %call14 = call %struct.netdev_queue* @netdev_get_tx_queue(%struct.net_device* %9, i32 %11) #12, !dbg !13410
  call void @netif_tx_wake_queue(%struct.netdev_queue* %call14) #12, !dbg !13411
  br label %if.end, !dbg !13411

if.end:                                           ; preds = %if.then, %land.lhs.true5, %land.lhs.true, %entry
  ret void, !dbg !13412
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_entry_set_link(%union.skb_entry* %list, i16 zeroext %id) #3 !dbg !13413 {
entry:
  %list.addr = alloca %union.skb_entry*, align 8
  %id.addr = alloca i16, align 2
  store %union.skb_entry* %list, %union.skb_entry** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %union.skb_entry** %list.addr, metadata !13416, metadata !DIExpression()), !dbg !13417
  store i16 %id, i16* %id.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %id.addr, metadata !13418, metadata !DIExpression()), !dbg !13419
  %0 = load i16, i16* %id.addr, align 2, !dbg !13420
  %conv = zext i16 %0 to i64, !dbg !13420
  %1 = load %union.skb_entry*, %union.skb_entry** %list.addr, align 8, !dbg !13421
  %link = bitcast %union.skb_entry* %1 to i64*, !dbg !13422
  store i64 %conv, i64* %link, align 8, !dbg !13423
  ret void, !dbg !13424
}

; Function Attrs: noredzone
declare dso_local void @__dev_kfree_skb_irq(%struct.sk_buff*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_tx_queue_stopped(%struct.netdev_queue* %dev_queue) #3 !dbg !13425 {
entry:
  %dev_queue.addr = alloca %struct.netdev_queue*, align 8
  store %struct.netdev_queue* %dev_queue, %struct.netdev_queue** %dev_queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netdev_queue** %dev_queue.addr, metadata !13430, metadata !DIExpression()), !dbg !13431
  %0 = load %struct.netdev_queue*, %struct.netdev_queue** %dev_queue.addr, align 8, !dbg !13432
  %state = getelementptr inbounds %struct.netdev_queue, %struct.netdev_queue* %0, i32 0, i32 10, !dbg !13433
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !13434
  ret i1 %call, !dbg !13435
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @netif_running(%struct.net_device* %dev) #3 !dbg !13436 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13437, metadata !DIExpression()), !dbg !13438
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13439
  %state = getelementptr inbounds %struct.net_device, %struct.net_device* %0, i32 0, i32 7, !dbg !13440
  %call = call zeroext i1 @test_bit(i64 0, i64* %state) #12, !dbg !13441
  ret i1 %call, !dbg !13442
}

; Function Attrs: noredzone
declare dso_local void @netif_tx_wake_queue(%struct.netdev_queue*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #3 !dbg !13443 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13444, metadata !DIExpression()), !dbg !13446
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13448, metadata !DIExpression()), !dbg !13449
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !12214, metadata !DIExpression()), !dbg !13450
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !12218, metadata !DIExpression()), !dbg !13452
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13453, metadata !DIExpression()), !dbg !13454
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13455, metadata !DIExpression()), !dbg !13456
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13457
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13458
  %div = sdiv i64 %1, 64, !dbg !13458
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13459
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13457
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13460
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13461
  %conv.i = trunc i64 %4 to i32, !dbg !13461
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !13462
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13463
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13463
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #14, !dbg !13463
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13464
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !13465
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !13466
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #8, !dbg !13468
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !13469

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !13470
  %12 = bitcast i64* %11 to i8*, !dbg !13470
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !13470
  %shr.i = ashr i64 %13, 3, !dbg !13470
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !13470
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !13472
  %and.i = and i64 %14, 7, !dbg !13472
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !13472
  %shl.i = shl i32 1, %sh_prom.i, !dbg !13472
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #8, !dbg !13473, !srcloc !13474
  br label %arch_set_bit.exit, !dbg !13475

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !13476
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !13478
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #8, !dbg !13479, !srcloc !13480
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !13481
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_get_hash(%struct.sk_buff* %skb) #3 !dbg !13482 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !13485, metadata !DIExpression()), !dbg !13486
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13487
  %l4_hash = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 14, !dbg !13489
  %bf.load = load i16, i16* %l4_hash, align 8, !dbg !13489
  %bf.lshr = lshr i16 %bf.load, 8, !dbg !13489
  %bf.clear = and i16 %bf.lshr, 1, !dbg !13489
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !13489
  %tobool = icmp ne i8 %bf.cast, 0, !dbg !13487
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !13490

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13491
  %sw_hash = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 14, !dbg !13492
  %bf.load1 = load i16, i16* %sw_hash, align 8, !dbg !13492
  %bf.lshr2 = lshr i16 %bf.load1, 9, !dbg !13492
  %bf.clear3 = and i16 %bf.lshr2, 1, !dbg !13492
  %bf.cast4 = trunc i16 %bf.clear3 to i8, !dbg !13492
  %tobool5 = icmp ne i8 %bf.cast4, 0, !dbg !13491
  br i1 %tobool5, label %if.end, label %if.then, !dbg !13493

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13494
  call void @__skb_get_hash(%struct.sk_buff* %2) #12, !dbg !13495
  br label %if.end, !dbg !13495

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !13496
  %hash = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 20, !dbg !13497
  %4 = load i32, i32* %hash, align 8, !dbg !13497
  ret i32 %4, !dbg !13498
}

; Function Attrs: noredzone
declare dso_local void @__skb_get_hash(%struct.sk_buff*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @u64_stats_fetch_begin_irq(%struct.u64_stats_sync* %syncp) #3 !dbg !13499 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !13504, metadata !DIExpression()), !dbg !13505
  %0 = load %struct.u64_stats_sync*, %struct.u64_stats_sync** %syncp.addr, align 8, !dbg !13506
  %call = call i32 @__u64_stats_fetch_begin(%struct.u64_stats_sync* %0) #12, !dbg !13507
  ret i32 %call, !dbg !13508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @u64_stats_fetch_retry_irq(%struct.u64_stats_sync* %syncp, i32 %start) #3 !dbg !13509 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  %start.addr = alloca i32, align 4
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !13512, metadata !DIExpression()), !dbg !13513
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !13514, metadata !DIExpression()), !dbg !13515
  %0 = load %struct.u64_stats_sync*, %struct.u64_stats_sync** %syncp.addr, align 8, !dbg !13516
  %1 = load i32, i32* %start.addr, align 4, !dbg !13517
  %call = call zeroext i1 @__u64_stats_fetch_retry(%struct.u64_stats_sync* %0, i32 %1) #12, !dbg !13518
  ret i1 %call, !dbg !13519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__u64_stats_fetch_begin(%struct.u64_stats_sync* %syncp) #3 !dbg !13520 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !13521, metadata !DIExpression()), !dbg !13522
  ret i32 0, !dbg !13523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__u64_stats_fetch_retry(%struct.u64_stats_sync* %syncp, i32 %start) #3 !dbg !13524 {
entry:
  %syncp.addr = alloca %struct.u64_stats_sync*, align 8
  %start.addr = alloca i32, align 4
  store %struct.u64_stats_sync* %syncp, %struct.u64_stats_sync** %syncp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.u64_stats_sync** %syncp.addr, metadata !13525, metadata !DIExpression()), !dbg !13526
  store i32 %start, i32* %start.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr, metadata !13527, metadata !DIExpression()), !dbg !13528
  ret i1 false, !dbg !13529
}

; Function Attrs: noredzone
declare dso_local i32 @xenbus_read_unsigned(i8*, i8*, i32) #1

; Function Attrs: cold noredzone
declare dso_local void @netdev_info(%struct.net_device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_xdp_set(%struct.net_device* %dev, %struct.bpf_prog* %prog, %struct.netlink_ext_ack* %extack) #3 !dbg !13530 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %prog.addr = alloca %struct.bpf_prog*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %max_mtu = alloca i64, align 8
  %np = alloca %struct.netfront_info*, align 8
  %old_prog = alloca %struct.bpf_prog*, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret = alloca i64, align 8
  %__int = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp30 = alloca %struct.bpf_prog*, align 8
  %_r_a_p__v = alloca i64, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13533, metadata !DIExpression()), !dbg !13534
  store %struct.bpf_prog* %prog, %struct.bpf_prog** %prog.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bpf_prog** %prog.addr, metadata !13535, metadata !DIExpression()), !dbg !13536
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !13537, metadata !DIExpression()), !dbg !13538
  call void @llvm.dbg.declare(metadata i64* %max_mtu, metadata !13539, metadata !DIExpression()), !dbg !13540
  store i64 3840, i64* %max_mtu, align 8, !dbg !13540
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %np, metadata !13541, metadata !DIExpression()), !dbg !13542
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13543
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13544
  %1 = bitcast i8* %call to %struct.netfront_info*, !dbg !13544
  store %struct.netfront_info* %1, %struct.netfront_info** %np, align 8, !dbg !13542
  call void @llvm.dbg.declare(metadata %struct.bpf_prog** %old_prog, metadata !13545, metadata !DIExpression()), !dbg !13546
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13547, metadata !DIExpression()), !dbg !13548
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13549, metadata !DIExpression()), !dbg !13550
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13551
  %mtu = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 44, !dbg !13553
  %3 = load i32, i32* %mtu, align 8, !dbg !13553
  %conv = zext i32 %3 to i64, !dbg !13551
  %4 = load i64, i64* %max_mtu, align 8, !dbg !13554
  %cmp = icmp ugt i64 %conv, %4, !dbg !13555
  br i1 %cmp, label %if.then, label %if.end, !dbg !13556

if.then:                                          ; preds = %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13557
  %6 = load i64, i64* %max_mtu, align 8, !dbg !13559
  call void (%struct.net_device*, i8*, ...) @netdev_warn(%struct.net_device* %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0), i64 %6) #13, !dbg !13560
  store i32 -22, i32* %retval, align 4, !dbg !13561
  br label %return, !dbg !13561

if.end:                                           ; preds = %entry
  %7 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13562
  %netback_has_xdp_headroom = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %7, i32 0, i32 6, !dbg !13564
  %8 = load i8, i8* %netback_has_xdp_headroom, align 8, !dbg !13564
  %tobool = trunc i8 %8 to i1, !dbg !13564
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !13565

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13566
  br label %return, !dbg !13566

if.end3:                                          ; preds = %if.end
  %9 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13567
  %xbdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %9, i32 0, i32 2, !dbg !13568
  %10 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev, align 8, !dbg !13568
  %call4 = call i32 @xenbus_switch_state(%struct.xenbus_device* %10, i32 7) #12, !dbg !13569
  %11 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13570
  %12 = load %struct.bpf_prog*, %struct.bpf_prog** %prog.addr, align 8, !dbg !13571
  %tobool5 = icmp ne %struct.bpf_prog* %12, null, !dbg !13571
  %13 = zext i1 %tobool5 to i64, !dbg !13571
  %cond = select i1 %tobool5, i32 1, i32 0, !dbg !13571
  %call6 = call i32 @talk_to_netback_xdp(%struct.netfront_info* %11, i32 %cond) #12, !dbg !13572
  store i32 %call6, i32* %err, align 4, !dbg !13573
  %14 = load i32, i32* %err, align 4, !dbg !13574
  %tobool7 = icmp ne i32 %14, 0, !dbg !13574
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !13576

if.then8:                                         ; preds = %if.end3
  %15 = load i32, i32* %err, align 4, !dbg !13577
  store i32 %15, i32* %retval, align 4, !dbg !13578
  br label %return, !dbg !13578

if.end9:                                          ; preds = %if.end3
  br label %do.body, !dbg !13579

do.body:                                          ; preds = %if.end9
  br label %do.body10, !dbg !13580

do.body10:                                        ; preds = %do.body
  br label %do.body11, !dbg !13582

do.body11:                                        ; preds = %do.body10
  br label %do.end, !dbg !13584

do.end:                                           ; preds = %do.body11
  br label %do.end12, !dbg !13582

do.end12:                                         ; preds = %do.end
  %16 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13586
  %xbdev13 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %16, i32 0, i32 2, !dbg !13586
  %17 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev13, align 8, !dbg !13586
  %otherend = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %17, i32 0, i32 2, !dbg !13586
  %18 = load i8*, i8** %otherend, align 8, !dbg !13586
  %call14 = call i32 @xenbus_read_driver_state(i8* %18) #12, !dbg !13586
  %cmp15 = icmp eq i32 %call14, 8, !dbg !13586
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !13580

if.then17:                                        ; preds = %do.end12
  br label %do.end27, !dbg !13586

if.end18:                                         ; preds = %do.end12
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !13588, metadata !DIExpression()), !dbg !13590
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !13591, metadata !DIExpression()), !dbg !13590
  store i64 0, i64* %__ret, align 8, !dbg !13590
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #12, !dbg !13590
  br label %for.cond, !dbg !13590

for.cond:                                         ; preds = %if.end26, %if.end18
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !13592, metadata !DIExpression()), !dbg !13596
  %call19 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* @module_wq, %struct.wait_queue_entry* %__wq_entry, i32 2) #12, !dbg !13596
  store i64 %call19, i64* %__int, align 8, !dbg !13596
  %19 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13597
  %xbdev20 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %19, i32 0, i32 2, !dbg !13597
  %20 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev20, align 8, !dbg !13597
  %otherend21 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %20, i32 0, i32 2, !dbg !13597
  %21 = load i8*, i8** %otherend21, align 8, !dbg !13597
  %call22 = call i32 @xenbus_read_driver_state(i8* %21) #12, !dbg !13597
  %cmp23 = icmp eq i32 %call22, 8, !dbg !13597
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !13596

if.then25:                                        ; preds = %for.cond
  br label %for.end, !dbg !13597

if.end26:                                         ; preds = %for.cond
  call void @schedule() #12, !dbg !13596
  br label %for.cond, !dbg !13599, !llvm.loop !13600

for.end:                                          ; preds = %if.then25
  call void @finish_wait(%struct.wait_queue_head* @module_wq, %struct.wait_queue_entry* %__wq_entry) #12, !dbg !13590
  br label %__out, !dbg !13590

__out:                                            ; preds = %for.end
  call void @llvm.dbg.label(metadata !13602), !dbg !13590
  %22 = load i64, i64* %__ret, align 8, !dbg !13590
  store i64 %22, i64* %tmp, align 8, !dbg !13590
  %23 = load i64, i64* %tmp, align 8, !dbg !13590
  br label %do.end27, !dbg !13580

do.end27:                                         ; preds = %__out, %if.then17
  %24 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13603
  %netfront_xdp_enabled = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %24, i32 0, i32 7, !dbg !13604
  store i8 1, i8* %netfront_xdp_enabled, align 1, !dbg !13605
  br label %do.body28, !dbg !13606

do.body28:                                        ; preds = %do.end27
  br label %do.end29, !dbg !13608

do.end29:                                         ; preds = %do.body28
  %25 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13606
  %queues = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %25, i32 0, i32 3, !dbg !13606
  %26 = load %struct.netfront_queue*, %struct.netfront_queue** %queues, align 8, !dbg !13606
  %arrayidx = getelementptr %struct.netfront_queue, %struct.netfront_queue* %26, i64 0, !dbg !13606
  %xdp_prog = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %arrayidx, i32 0, i32 3, !dbg !13606
  %27 = load %struct.bpf_prog*, %struct.bpf_prog** %xdp_prog, align 8, !dbg !13606
  store %struct.bpf_prog* %27, %struct.bpf_prog** %tmp30, align 8, !dbg !13608
  %28 = load %struct.bpf_prog*, %struct.bpf_prog** %tmp30, align 8, !dbg !13606
  store %struct.bpf_prog* %28, %struct.bpf_prog** %old_prog, align 8, !dbg !13610
  %29 = load %struct.bpf_prog*, %struct.bpf_prog** %prog.addr, align 8, !dbg !13611
  %tobool31 = icmp ne %struct.bpf_prog* %29, null, !dbg !13611
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !13613

if.then32:                                        ; preds = %do.end29
  %30 = load %struct.bpf_prog*, %struct.bpf_prog** %prog.addr, align 8, !dbg !13614
  %31 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13615
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %31, i32 0, i32 88, !dbg !13616
  %32 = load i32, i32* %real_num_tx_queues, align 4, !dbg !13616
  call void @bpf_prog_add(%struct.bpf_prog* %30, i32 %32) #12, !dbg !13617
  br label %if.end33, !dbg !13617

if.end33:                                         ; preds = %if.then32, %do.end29
  store i32 0, i32* %i, align 4, !dbg !13618
  br label %for.cond34, !dbg !13620

for.cond34:                                       ; preds = %for.inc, %if.end33
  %33 = load i32, i32* %i, align 4, !dbg !13621
  %34 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13623
  %real_num_tx_queues35 = getelementptr inbounds %struct.net_device, %struct.net_device* %34, i32 0, i32 88, !dbg !13624
  %35 = load i32, i32* %real_num_tx_queues35, align 4, !dbg !13624
  %cmp36 = icmp ult i32 %33, %35, !dbg !13625
  br i1 %cmp36, label %for.body, label %for.end67, !dbg !13626

for.body:                                         ; preds = %for.cond34
  br label %do.body38, !dbg !13627

do.body38:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i64* %_r_a_p__v, metadata !13628, metadata !DIExpression()), !dbg !13630
  %36 = load %struct.bpf_prog*, %struct.bpf_prog** %prog.addr, align 8, !dbg !13630
  %37 = ptrtoint %struct.bpf_prog* %36 to i64, !dbg !13630
  store i64 %37, i64* %_r_a_p__v, align 8, !dbg !13630
  br i1 false, label %land.lhs.true, label %if.else, !dbg !13631

land.lhs.true:                                    ; preds = %do.body38
  %38 = load i64, i64* %_r_a_p__v, align 8, !dbg !13631
  %cmp39 = icmp eq i64 %38, 0, !dbg !13631
  br i1 %cmp39, label %if.then41, label %if.else, !dbg !13630

if.then41:                                        ; preds = %land.lhs.true
  br label %do.body42, !dbg !13631

do.body42:                                        ; preds = %if.then41
  br label %do.body43, !dbg !13633

do.body43:                                        ; preds = %do.body42
  br label %do.end44, !dbg !13635

do.end44:                                         ; preds = %do.body43
  br label %do.body45, !dbg !13633

do.body45:                                        ; preds = %do.end44
  %39 = load i64, i64* %_r_a_p__v, align 8, !dbg !13637
  %40 = inttoptr i64 %39 to %struct.bpf_prog*, !dbg !13637
  %41 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13637
  %queues46 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %41, i32 0, i32 3, !dbg !13637
  %42 = load %struct.netfront_queue*, %struct.netfront_queue** %queues46, align 8, !dbg !13637
  %43 = load i32, i32* %i, align 4, !dbg !13637
  %idxprom = zext i32 %43 to i64, !dbg !13637
  %arrayidx47 = getelementptr %struct.netfront_queue, %struct.netfront_queue* %42, i64 %idxprom, !dbg !13637
  %xdp_prog48 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %arrayidx47, i32 0, i32 3, !dbg !13637
  store volatile %struct.bpf_prog* %40, %struct.bpf_prog** %xdp_prog48, align 8, !dbg !13637
  br label %do.end49, !dbg !13637

do.end49:                                         ; preds = %do.body45
  br label %do.end50, !dbg !13633

do.end50:                                         ; preds = %do.end49
  br label %if.end65, !dbg !13633

if.else:                                          ; preds = %land.lhs.true, %do.body38
  br label %do.body51, !dbg !13631

do.body51:                                        ; preds = %if.else
  br label %do.body52, !dbg !13639

do.body52:                                        ; preds = %do.body51
  br label %do.end53, !dbg !13641

do.end53:                                         ; preds = %do.body52
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13639, !srcloc !13643
  br label %do.body54, !dbg !13639

do.body54:                                        ; preds = %do.end53
  br label %do.body55, !dbg !13644

do.body55:                                        ; preds = %do.body54
  br label %do.end56, !dbg !13646

do.end56:                                         ; preds = %do.body55
  br label %do.body57, !dbg !13644

do.body57:                                        ; preds = %do.end56
  %44 = load i64, i64* %_r_a_p__v, align 8, !dbg !13648
  %45 = inttoptr i64 %44 to %struct.bpf_prog*, !dbg !13648
  %46 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13648
  %queues58 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %46, i32 0, i32 3, !dbg !13648
  %47 = load %struct.netfront_queue*, %struct.netfront_queue** %queues58, align 8, !dbg !13648
  %48 = load i32, i32* %i, align 4, !dbg !13648
  %idxprom59 = zext i32 %48 to i64, !dbg !13648
  %arrayidx60 = getelementptr %struct.netfront_queue, %struct.netfront_queue* %47, i64 %idxprom59, !dbg !13648
  %xdp_prog61 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %arrayidx60, i32 0, i32 3, !dbg !13648
  store volatile %struct.bpf_prog* %45, %struct.bpf_prog** %xdp_prog61, align 8, !dbg !13648
  br label %do.end62, !dbg !13648

do.end62:                                         ; preds = %do.body57
  br label %do.end63, !dbg !13644

do.end63:                                         ; preds = %do.end62
  br label %do.end64, !dbg !13639

do.end64:                                         ; preds = %do.end63
  br label %if.end65

if.end65:                                         ; preds = %do.end64, %do.end50
  br label %do.end66, !dbg !13630

do.end66:                                         ; preds = %if.end65
  br label %for.inc, !dbg !13630

for.inc:                                          ; preds = %do.end66
  %49 = load i32, i32* %i, align 4, !dbg !13650
  %inc = add i32 %49, 1, !dbg !13650
  store i32 %inc, i32* %i, align 4, !dbg !13650
  br label %for.cond34, !dbg !13651, !llvm.loop !13652

for.end67:                                        ; preds = %for.cond34
  %50 = load %struct.bpf_prog*, %struct.bpf_prog** %old_prog, align 8, !dbg !13654
  %tobool68 = icmp ne %struct.bpf_prog* %50, null, !dbg !13654
  br i1 %tobool68, label %if.then69, label %if.end78, !dbg !13656

if.then69:                                        ; preds = %for.end67
  store i32 0, i32* %i, align 4, !dbg !13657
  br label %for.cond70, !dbg !13659

for.cond70:                                       ; preds = %for.inc75, %if.then69
  %51 = load i32, i32* %i, align 4, !dbg !13660
  %52 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13662
  %real_num_tx_queues71 = getelementptr inbounds %struct.net_device, %struct.net_device* %52, i32 0, i32 88, !dbg !13663
  %53 = load i32, i32* %real_num_tx_queues71, align 4, !dbg !13663
  %cmp72 = icmp ult i32 %51, %53, !dbg !13664
  br i1 %cmp72, label %for.body74, label %for.end77, !dbg !13665

for.body74:                                       ; preds = %for.cond70
  %54 = load %struct.bpf_prog*, %struct.bpf_prog** %old_prog, align 8, !dbg !13666
  call void @bpf_prog_put(%struct.bpf_prog* %54) #12, !dbg !13667
  br label %for.inc75, !dbg !13667

for.inc75:                                        ; preds = %for.body74
  %55 = load i32, i32* %i, align 4, !dbg !13668
  %inc76 = add i32 %55, 1, !dbg !13668
  store i32 %inc76, i32* %i, align 4, !dbg !13668
  br label %for.cond70, !dbg !13669, !llvm.loop !13670

for.end77:                                        ; preds = %for.cond70
  br label %if.end78, !dbg !13671

if.end78:                                         ; preds = %for.end77, %for.end67
  %56 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13672
  %xbdev79 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %56, i32 0, i32 2, !dbg !13673
  %57 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev79, align 8, !dbg !13673
  %call80 = call i32 @xenbus_switch_state(%struct.xenbus_device* %57, i32 4) #12, !dbg !13674
  store i32 0, i32* %retval, align 4, !dbg !13675
  br label %return, !dbg !13675

return:                                           ; preds = %if.end78, %if.then8, %if.then2, %if.then
  %58 = load i32, i32* %retval, align 4, !dbg !13676
  ret i32 %58, !dbg !13676
}

; Function Attrs: cold noredzone
declare dso_local void @netdev_warn(%struct.net_device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @talk_to_netback_xdp(%struct.netfront_info* %np, i32 %xdp) #3 !dbg !13677 {
entry:
  %np.addr = alloca %struct.netfront_info*, align 8
  %xdp.addr = alloca i32, align 4
  %err = alloca i32, align 4
  %headroom = alloca i16, align 2
  %.compoundliteral = alloca %struct.xenbus_transaction, align 4
  store %struct.netfront_info* %np, %struct.netfront_info** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %np.addr, metadata !13680, metadata !DIExpression()), !dbg !13681
  store i32 %xdp, i32* %xdp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xdp.addr, metadata !13682, metadata !DIExpression()), !dbg !13683
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13684, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.declare(metadata i16* %headroom, metadata !13686, metadata !DIExpression()), !dbg !13687
  %0 = load i32, i32* %xdp.addr, align 4, !dbg !13688
  %tobool = icmp ne i32 %0, 0, !dbg !13688
  %1 = zext i1 %tobool to i64, !dbg !13688
  %cond = select i1 %tobool, i32 256, i32 0, !dbg !13688
  %conv = trunc i32 %cond to i16, !dbg !13688
  store i16 %conv, i16* %headroom, align 2, !dbg !13689
  %id = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %.compoundliteral, i32 0, i32 0, !dbg !13690
  store i32 0, i32* %id, align 4, !dbg !13690
  %2 = load %struct.netfront_info*, %struct.netfront_info** %np.addr, align 8, !dbg !13691
  %xbdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %2, i32 0, i32 2, !dbg !13692
  %3 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev, align 8, !dbg !13692
  %nodename = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %3, i32 0, i32 1, !dbg !13693
  %4 = load i8*, i8** %nodename, align 8, !dbg !13693
  %5 = load i16, i16* %headroom, align 2, !dbg !13694
  %conv1 = zext i16 %5 to i32, !dbg !13694
  %coerce.dive = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %.compoundliteral, i32 0, i32 0, !dbg !13695
  %6 = load i32, i32* %coerce.dive, align 4, !dbg !13695
  %call = call i32 (i32, i8*, i8*, i8*, ...) @xenbus_printf(i32 %6, i8* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0), i32 %conv1) #12, !dbg !13695
  store i32 %call, i32* %err, align 4, !dbg !13696
  %7 = load i32, i32* %err, align 4, !dbg !13697
  %tobool2 = icmp ne i32 %7, 0, !dbg !13697
  br i1 %tobool2, label %if.then, label %if.end, !dbg !13699

if.then:                                          ; preds = %entry
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0)) #13, !dbg !13700
  br label %if.end, !dbg !13700

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %err, align 4, !dbg !13701
  ret i32 %8, !dbg !13702
}

; Function Attrs: noredzone
declare dso_local void @schedule() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bpf_prog_add(%struct.bpf_prog* %prog, i32 %i) #3 !dbg !13703 {
entry:
  %prog.addr = alloca %struct.bpf_prog*, align 8
  %i.addr = alloca i32, align 4
  store %struct.bpf_prog* %prog, %struct.bpf_prog** %prog.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bpf_prog** %prog.addr, metadata !13706, metadata !DIExpression()), !dbg !13707
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13708, metadata !DIExpression()), !dbg !13709
  ret void, !dbg !13710
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bpf_prog_put(%struct.bpf_prog* %prog) #3 !dbg !13711 {
entry:
  %prog.addr = alloca %struct.bpf_prog*, align 8
  store %struct.bpf_prog* %prog, %struct.bpf_prog** %prog.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bpf_prog** %prog.addr, metadata !13714, metadata !DIExpression()), !dbg !13715
  ret void, !dbg !13716
}

; Function Attrs: noredzone
declare dso_local i32 @xenbus_printf(i32, i8*, i8*, i8*, ...) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_xdp_xmit_one(%struct.net_device* %dev, %struct.netfront_queue* %queue, %struct.xdp_frame* %xdpf) #3 !dbg !13717 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %xdpf.addr = alloca %struct.xdp_frame*, align 8
  %np = alloca %struct.netfront_info*, align 8
  %tx_stats = alloca %struct.netfront_stats*, align 8
  %tmp = alloca %struct.netfront_stats*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca %struct.netfront_stats*, align 8
  %notify = alloca i32, align 4
  %__old = alloca i32, align 4
  %__new = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13720, metadata !DIExpression()), !dbg !13721
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !13722, metadata !DIExpression()), !dbg !13723
  store %struct.xdp_frame* %xdpf, %struct.xdp_frame** %xdpf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xdp_frame** %xdpf.addr, metadata !13724, metadata !DIExpression()), !dbg !13725
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %np, metadata !13726, metadata !DIExpression()), !dbg !13727
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13728
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13729
  %1 = bitcast i8* %call to %struct.netfront_info*, !dbg !13729
  store %struct.netfront_info* %1, %struct.netfront_info** %np, align 8, !dbg !13727
  call void @llvm.dbg.declare(metadata %struct.netfront_stats** %tx_stats, metadata !13730, metadata !DIExpression()), !dbg !13731
  br label %do.body, !dbg !13732

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !13735, metadata !DIExpression()), !dbg !13737
  store i8* null, i8** %__vpp_verify, align 8, !dbg !13737
  %2 = load i8*, i8** %__vpp_verify, align 8, !dbg !13737
  br label %do.end, !dbg !13737

do.end:                                           ; preds = %do.body
  %3 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13732
  %tx_stats2 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %3, i32 0, i32 5, !dbg !13732
  %4 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats2, align 8, !dbg !13732
  store %struct.netfront_stats* %4, %struct.netfront_stats** %tmp1, align 8, !dbg !13737
  %5 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp1, align 8, !dbg !13732
  store %struct.netfront_stats* %5, %struct.netfront_stats** %tmp, align 8, !dbg !13738
  %6 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp, align 8, !dbg !13738
  store %struct.netfront_stats* %6, %struct.netfront_stats** %tx_stats, align 8, !dbg !13731
  call void @llvm.dbg.declare(metadata i32* %notify, metadata !13739, metadata !DIExpression()), !dbg !13740
  %7 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !13741
  %8 = load i64, i64* @vmemmap_base, align 8, !dbg !13742
  %9 = inttoptr i64 %8 to %struct.page*, !dbg !13742
  %10 = load %struct.xdp_frame*, %struct.xdp_frame** %xdpf.addr, align 8, !dbg !13742
  %data = getelementptr inbounds %struct.xdp_frame, %struct.xdp_frame* %10, i32 0, i32 0, !dbg !13742
  %11 = load i8*, i8** %data, align 8, !dbg !13742
  %12 = ptrtoint i8* %11 to i64, !dbg !13742
  %call3 = call i64 @__phys_addr_nodebug(i64 %12) #12, !dbg !13742
  %shr = lshr i64 %call3, 12, !dbg !13742
  %add.ptr = getelementptr %struct.page, %struct.page* %9, i64 %shr, !dbg !13742
  %13 = load %struct.xdp_frame*, %struct.xdp_frame** %xdpf.addr, align 8, !dbg !13743
  %data4 = getelementptr inbounds %struct.xdp_frame, %struct.xdp_frame* %13, i32 0, i32 0, !dbg !13743
  %14 = load i8*, i8** %data4, align 8, !dbg !13743
  %15 = ptrtoint i8* %14 to i64, !dbg !13743
  %and = and i64 %15, 4095, !dbg !13743
  %conv = trunc i64 %and to i32, !dbg !13743
  %16 = load %struct.xdp_frame*, %struct.xdp_frame** %xdpf.addr, align 8, !dbg !13744
  %len = getelementptr inbounds %struct.xdp_frame, %struct.xdp_frame* %16, i32 0, i32 1, !dbg !13745
  %17 = load i16, i16* %len, align 8, !dbg !13745
  %conv5 = zext i16 %17 to i32, !dbg !13744
  %call6 = call %struct.xen_netif_tx_request* @xennet_make_first_txreq(%struct.netfront_queue* %7, %struct.sk_buff* null, %struct.page* %add.ptr, i32 %conv, i32 %conv5) #12, !dbg !13746
  br label %do.body7, !dbg !13747

do.body7:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %__old, metadata !13748, metadata !DIExpression()), !dbg !13750
  %18 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !13750
  %tx = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %18, i32 0, i32 12, !dbg !13750
  %sring = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx, i32 0, i32 3, !dbg !13750
  %19 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %sring, align 8, !dbg !13750
  %req_prod = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %19, i32 0, i32 0, !dbg !13750
  %20 = load i32, i32* %req_prod, align 4, !dbg !13750
  store i32 %20, i32* %__old, align 4, !dbg !13750
  call void @llvm.dbg.declare(metadata i32* %__new, metadata !13751, metadata !DIExpression()), !dbg !13750
  %21 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !13750
  %tx8 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %21, i32 0, i32 12, !dbg !13750
  %req_prod_pvt = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx8, i32 0, i32 0, !dbg !13750
  %22 = load i32, i32* %req_prod_pvt, align 8, !dbg !13750
  store i32 %22, i32* %__new, align 4, !dbg !13750
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13750, !srcloc !13752
  %23 = load i32, i32* %__new, align 4, !dbg !13750
  %24 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !13750
  %tx9 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %24, i32 0, i32 12, !dbg !13750
  %sring10 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx9, i32 0, i32 3, !dbg !13750
  %25 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %sring10, align 8, !dbg !13750
  %req_prod11 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %25, i32 0, i32 0, !dbg !13750
  store i32 %23, i32* %req_prod11, align 4, !dbg !13750
  call void asm sideeffect "lock; addl $$0,-4(%rsp)", "~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13750, !srcloc !13753
  %26 = load i32, i32* %__new, align 4, !dbg !13750
  %27 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !13750
  %tx12 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %27, i32 0, i32 12, !dbg !13750
  %sring13 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx12, i32 0, i32 3, !dbg !13750
  %28 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %sring13, align 8, !dbg !13750
  %req_event = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %28, i32 0, i32 1, !dbg !13750
  %29 = load i32, i32* %req_event, align 4, !dbg !13750
  %sub = sub i32 %26, %29, !dbg !13750
  %30 = load i32, i32* %__new, align 4, !dbg !13750
  %31 = load i32, i32* %__old, align 4, !dbg !13750
  %sub14 = sub i32 %30, %31, !dbg !13750
  %cmp = icmp ult i32 %sub, %sub14, !dbg !13750
  %conv15 = zext i1 %cmp to i32, !dbg !13750
  store i32 %conv15, i32* %notify, align 4, !dbg !13750
  br label %do.end16, !dbg !13750

do.end16:                                         ; preds = %do.body7
  %32 = load i32, i32* %notify, align 4, !dbg !13754
  %tobool = icmp ne i32 %32, 0, !dbg !13754
  br i1 %tobool, label %if.then, label %if.end, !dbg !13756

if.then:                                          ; preds = %do.end16
  %33 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !13757
  %tx_irq = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %33, i32 0, i32 7, !dbg !13758
  %34 = load i32, i32* %tx_irq, align 8, !dbg !13758
  call void @notify_remote_via_irq(i32 %34) #12, !dbg !13759
  br label %if.end, !dbg !13759

if.end:                                           ; preds = %if.then, %do.end16
  %35 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats, align 8, !dbg !13760
  %syncp = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %35, i32 0, i32 2, !dbg !13761
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %syncp) #12, !dbg !13762
  %36 = load %struct.xdp_frame*, %struct.xdp_frame** %xdpf.addr, align 8, !dbg !13763
  %len17 = getelementptr inbounds %struct.xdp_frame, %struct.xdp_frame* %36, i32 0, i32 1, !dbg !13764
  %37 = load i16, i16* %len17, align 8, !dbg !13764
  %conv18 = zext i16 %37 to i64, !dbg !13763
  %38 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats, align 8, !dbg !13765
  %bytes = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %38, i32 0, i32 1, !dbg !13766
  %39 = load i64, i64* %bytes, align 8, !dbg !13767
  %add = add i64 %39, %conv18, !dbg !13767
  store i64 %add, i64* %bytes, align 8, !dbg !13767
  %40 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats, align 8, !dbg !13768
  %packets = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %40, i32 0, i32 0, !dbg !13769
  %41 = load i64, i64* %packets, align 8, !dbg !13770
  %inc = add i64 %41, 1, !dbg !13770
  store i64 %inc, i64* %packets, align 8, !dbg !13770
  %42 = load %struct.netfront_stats*, %struct.netfront_stats** %tx_stats, align 8, !dbg !13771
  %syncp19 = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %42, i32 0, i32 2, !dbg !13772
  call void @u64_stats_update_end(%struct.u64_stats_sync* %syncp19) #12, !dbg !13773
  %43 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !13774
  call void @xennet_tx_buf_gc(%struct.netfront_queue* %43) #12, !dbg !13775
  ret i32 0, !dbg !13776
}

; Function Attrs: noredzone
declare dso_local void @xdp_return_frame_rx_napi(%struct.xdp_frame*) #1

; Function Attrs: noredzone
declare dso_local i32 @ethtool_op_get_link(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_get_strings(%struct.net_device* %dev, i32 %stringset, i8* %data) #3 !dbg !13777 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %stringset.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13778, metadata !DIExpression()), !dbg !13779
  store i32 %stringset, i32* %stringset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stringset.addr, metadata !13780, metadata !DIExpression()), !dbg !13781
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !13782, metadata !DIExpression()), !dbg !13783
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13784, metadata !DIExpression()), !dbg !13785
  %0 = load i32, i32* %stringset.addr, align 4, !dbg !13786
  switch i32 %0, label %sw.epilog [
    i32 1, label %sw.bb
  ], !dbg !13787

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !13788
  br label %for.cond, !dbg !13791

for.cond:                                         ; preds = %for.inc, %sw.bb
  %1 = load i32, i32* %i, align 4, !dbg !13792
  %conv = sext i32 %1 to i64, !dbg !13792
  %cmp = icmp ult i64 %conv, 1, !dbg !13794
  br i1 %cmp, label %for.body, label %for.end, !dbg !13795

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %data.addr, align 8, !dbg !13796
  %3 = load i32, i32* %i, align 4, !dbg !13797
  %mul = mul i32 %3, 32, !dbg !13798
  %idx.ext = sext i32 %mul to i64, !dbg !13799
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !13799
  %4 = load i32, i32* %i, align 4, !dbg !13800
  %idxprom = sext i32 %4 to i64, !dbg !13801
  %arrayidx = getelementptr [1 x %struct.xennet_stat], [1 x %struct.xennet_stat]* @xennet_stats, i64 0, i64 %idxprom, !dbg !13801
  %name = getelementptr inbounds %struct.xennet_stat, %struct.xennet_stat* %arrayidx, i32 0, i32 0, !dbg !13802
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !13803
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 2 %arraydecay, i64 32, i1 false), !dbg !13803
  br label %for.inc, !dbg !13803

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !13804
  %inc = add i32 %5, 1, !dbg !13804
  store i32 %inc, i32* %i, align 4, !dbg !13804
  br label %for.cond, !dbg !13805, !llvm.loop !13806

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !13808

sw.epilog:                                        ; preds = %entry, %for.end
  ret void, !dbg !13809
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_get_ethtool_stats(%struct.net_device* %dev, %struct.ethtool_stats* %stats, i64* %data) #3 !dbg !13810 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !13811, metadata !DIExpression()), !dbg !13817
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !12165, metadata !DIExpression()), !dbg !13823
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12175, metadata !DIExpression()), !dbg !13825
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !13826, metadata !DIExpression()), !dbg !13827
  %dev.addr = alloca %struct.net_device*, align 8
  %stats.addr = alloca %struct.ethtool_stats*, align 8
  %data.addr = alloca i64*, align 8
  %np = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13828, metadata !DIExpression()), !dbg !13829
  store %struct.ethtool_stats* %stats, %struct.ethtool_stats** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_stats** %stats.addr, metadata !13830, metadata !DIExpression()), !dbg !13831
  store i64* %data, i64** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %data.addr, metadata !13832, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.declare(metadata i8** %np, metadata !13834, metadata !DIExpression()), !dbg !13835
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13836
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13837
  store i8* %call, i8** %np, align 8, !dbg !13835
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13838, metadata !DIExpression()), !dbg !13839
  store i32 0, i32* %i, align 4, !dbg !13840
  br label %for.cond, !dbg !13841

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !13842
  %conv = sext i32 %1 to i64, !dbg !13842
  %cmp = icmp ult i64 %conv, 1, !dbg !13843
  br i1 %cmp, label %for.body, label %for.end, !dbg !13844

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %np, align 8, !dbg !13845
  %3 = load i32, i32* %i, align 4, !dbg !13846
  %idxprom = sext i32 %3 to i64, !dbg !13847
  %arrayidx = getelementptr [1 x %struct.xennet_stat], [1 x %struct.xennet_stat]* @xennet_stats, i64 0, i64 %idxprom, !dbg !13847
  %offset = getelementptr inbounds %struct.xennet_stat, %struct.xennet_stat* %arrayidx, i32 0, i32 1, !dbg !13848
  %4 = load i16, i16* %offset, align 2, !dbg !13848
  %conv2 = zext i16 %4 to i32, !dbg !13847
  %idx.ext = sext i32 %conv2 to i64, !dbg !13849
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !13849
  %5 = bitcast i8* %add.ptr to %struct.atomic_t*, !dbg !13850
  store %struct.atomic_t* %5, %struct.atomic_t** %v.addr.i, align 8
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13851
  %7 = bitcast %struct.atomic_t* %6 to i8*, !dbg !13851
  store i8* %7, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13852
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !13853
  %conv.i.i = trunc i64 %9 to i32, !dbg !13853
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %8, i32 %conv.i.i) #14, !dbg !13854
  %10 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13855
  %11 = load i64, i64* %size.addr.i.i, align 8, !dbg !13855
  call void @kcsan_check_access(i8* %10, i64 %11, i32 4) #14, !dbg !13855
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13856
  store %struct.atomic_t* %12, %struct.atomic_t** %v.addr.i1.i, align 8
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !13857
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %13, i32 0, i32 0, !dbg !13857
  %14 = load volatile i32, i32* %counter.i.i, align 4, !dbg !13857
  %conv4 = sext i32 %14 to i64, !dbg !13858
  %15 = load i64*, i64** %data.addr, align 8, !dbg !13859
  %16 = load i32, i32* %i, align 4, !dbg !13860
  %idxprom5 = sext i32 %16 to i64, !dbg !13859
  %arrayidx6 = getelementptr i64, i64* %15, i64 %idxprom5, !dbg !13859
  store i64 %conv4, i64* %arrayidx6, align 8, !dbg !13861
  br label %for.inc, !dbg !13859

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !13862
  %inc = add i32 %17, 1, !dbg !13862
  store i32 %inc, i32* %i, align 4, !dbg !13862
  br label %for.cond, !dbg !13863, !llvm.loop !13864

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_get_sset_count(%struct.net_device* %dev, i32 %string_set) #3 !dbg !13867 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %string_set.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13868, metadata !DIExpression()), !dbg !13869
  store i32 %string_set, i32* %string_set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %string_set.addr, metadata !13870, metadata !DIExpression()), !dbg !13871
  %0 = load i32, i32* %string_set.addr, align 4, !dbg !13872
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
  ], !dbg !13873

sw.bb:                                            ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !13874
  br label %return, !dbg !13874

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !13876
  br label %return, !dbg !13876

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i32, i32* %retval, align 4, !dbg !13877
  ret i32 %1, !dbg !13877
}

; Function Attrs: noredzone
declare dso_local i32 @ethtool_op_get_ts_info(%struct.net_device*, %struct.ethtool_ts_info*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #9

; Function Attrs: noredzone
declare dso_local void @free_percpu(i8*) #1

; Function Attrs: noredzone
declare dso_local void @free_netdev(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_rxbuf(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #3 !dbg !13878 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13879, metadata !DIExpression()), !dbg !13880
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13881, metadata !DIExpression()), !dbg !13882
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13883, metadata !DIExpression()), !dbg !13884
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13885
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i64 256) #12, !dbg !13886
  %conv = sext i32 %call to i64, !dbg !13886
  ret i64 %conv, !dbg !13887
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_rxbuf(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %len) #3 !dbg !13888 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %endp = alloca i8*, align 8
  %target = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13889, metadata !DIExpression()), !dbg !13890
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13891, metadata !DIExpression()), !dbg !13892
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13893, metadata !DIExpression()), !dbg !13894
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !13895, metadata !DIExpression()), !dbg !13896
  call void @llvm.dbg.declare(metadata i8** %endp, metadata !13897, metadata !DIExpression()), !dbg !13898
  call void @llvm.dbg.declare(metadata i64* %target, metadata !13899, metadata !DIExpression()), !dbg !13900
  %call = call zeroext i1 @capable(i32 12) #12, !dbg !13901
  br i1 %call, label %if.end, label %if.then, !dbg !13903

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !13904
  br label %return, !dbg !13904

if.end:                                           ; preds = %entry
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !13905
  %call1 = call i64 @simple_strtoul(i8* %0, i8** %endp, i32 0) #12, !dbg !13906
  store i64 %call1, i64* %target, align 8, !dbg !13907
  %1 = load i8*, i8** %endp, align 8, !dbg !13908
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13910
  %cmp = icmp eq i8* %1, %2, !dbg !13911
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !13912

if.then2:                                         ; preds = %if.end
  store i64 -74, i64* %retval, align 8, !dbg !13913
  br label %return, !dbg !13913

if.end3:                                          ; preds = %if.end
  %3 = load i64, i64* %len.addr, align 8, !dbg !13914
  store i64 %3, i64* %retval, align 8, !dbg !13915
  br label %return, !dbg !13915

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %4 = load i64, i64* %retval, align 8, !dbg !13916
  ret i64 %4, !dbg !13916
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local zeroext i1 @capable(i32) #1

; Function Attrs: noredzone
declare dso_local i64 @simple_strtoul(i8*, i8**, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #3 !dbg !13917 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13920, metadata !DIExpression()), !dbg !13921
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13922
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !13923
  %1 = load i8*, i8** %driver_data, align 8, !dbg !13923
  ret i8* %1, !dbg !13924
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_connect(%struct.net_device* %dev) #3 !dbg !13925 {
entry:
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !13926, metadata !DIExpression()), !dbg !13928
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !13933, metadata !DIExpression()), !dbg !13935
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %np = alloca %struct.netfront_info*, align 8
  %num_queues = alloca i32, align 4
  %err = alloca i32, align 4
  %j = alloca i32, align 4
  %queue = alloca %struct.netfront_queue*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !13937, metadata !DIExpression()), !dbg !13938
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %np, metadata !13939, metadata !DIExpression()), !dbg !13940
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13941
  %call = call i8* @netdev_priv(%struct.net_device* %0) #12, !dbg !13942
  %1 = bitcast i8* %call to %struct.netfront_info*, !dbg !13942
  store %struct.netfront_info* %1, %struct.netfront_info** %np, align 8, !dbg !13940
  call void @llvm.dbg.declare(metadata i32* %num_queues, metadata !13943, metadata !DIExpression()), !dbg !13944
  store i32 0, i32* %num_queues, align 4, !dbg !13944
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13945, metadata !DIExpression()), !dbg !13946
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13947, metadata !DIExpression()), !dbg !13948
  store i32 0, i32* %j, align 4, !dbg !13948
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue, metadata !13949, metadata !DIExpression()), !dbg !13950
  store %struct.netfront_queue* null, %struct.netfront_queue** %queue, align 8, !dbg !13950
  %2 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13951
  %xbdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %2, i32 0, i32 2, !dbg !13953
  %3 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev, align 8, !dbg !13953
  %otherend = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %3, i32 0, i32 2, !dbg !13954
  %4 = load i8*, i8** %otherend, align 8, !dbg !13954
  %call1 = call i32 @xenbus_read_unsigned(i8* %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i32 0) #12, !dbg !13955
  %tobool = icmp ne i32 %call1, 0, !dbg !13955
  br i1 %tobool, label %if.end, label %if.then, !dbg !13956

if.then:                                          ; preds = %entry
  %5 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13957
  %dev2 = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 106, !dbg !13957
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev2, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.21, i64 0, i64 0)) #13, !dbg !13957
  store i32 -19, i32* %retval, align 4, !dbg !13959
  br label %return, !dbg !13959

if.end:                                           ; preds = %entry
  %6 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13960
  %xbdev3 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %6, i32 0, i32 2, !dbg !13961
  %7 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev3, align 8, !dbg !13961
  %8 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13962
  %call4 = call i32 @talk_to_netback(%struct.xenbus_device* %7, %struct.netfront_info* %8) #12, !dbg !13963
  store i32 %call4, i32* %err, align 4, !dbg !13964
  %9 = load i32, i32* %err, align 4, !dbg !13965
  %tobool5 = icmp ne i32 %9, 0, !dbg !13965
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !13967

if.then6:                                         ; preds = %if.end
  %10 = load i32, i32* %err, align 4, !dbg !13968
  store i32 %10, i32* %retval, align 4, !dbg !13969
  br label %return, !dbg !13969

if.end7:                                          ; preds = %if.end
  %11 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13970
  %netback_has_xdp_headroom = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %11, i32 0, i32 6, !dbg !13972
  %12 = load i8, i8* %netback_has_xdp_headroom, align 8, !dbg !13972
  %tobool8 = trunc i8 %12 to i1, !dbg !13972
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !13973

if.then9:                                         ; preds = %if.end7
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.22, i64 0, i64 0)) #13, !dbg !13974
  br label %if.end11, !dbg !13974

if.end11:                                         ; preds = %if.then9, %if.end7
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13975
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %13, i32 0, i32 88, !dbg !13976
  %14 = load i32, i32* %real_num_tx_queues, align 4, !dbg !13976
  store i32 %14, i32* %num_queues, align 4, !dbg !13977
  %15 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13978
  %reg_state = getelementptr inbounds %struct.net_device, %struct.net_device* %15, i32 0, i32 99, !dbg !13980
  %bf.load = load i8, i8* %reg_state, align 8, !dbg !13980
  %bf.cast = zext i8 %bf.load to i32, !dbg !13980
  %cmp = icmp eq i32 %bf.cast, 0, !dbg !13981
  br i1 %cmp, label %if.then12, label %if.end20, !dbg !13982

if.then12:                                        ; preds = %if.end11
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !13983
  %call13 = call i32 @register_netdev(%struct.net_device* %16) #12, !dbg !13985
  store i32 %call13, i32* %err, align 4, !dbg !13986
  %17 = load i32, i32* %err, align 4, !dbg !13987
  %tobool14 = icmp ne i32 %17, 0, !dbg !13987
  br i1 %tobool14, label %if.then15, label %if.end19, !dbg !13989

if.then15:                                        ; preds = %if.then12
  %18 = load i32, i32* %err, align 4, !dbg !13990
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.xennet_connect, i64 0, i64 0), i32 %18) #13, !dbg !13990
  %19 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !13992
  %xbdev17 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %19, i32 0, i32 2, !dbg !13993
  %20 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev17, align 8, !dbg !13993
  %dev18 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %20, i32 0, i32 5, !dbg !13994
  call void @device_unregister(%struct.device* %dev18) #12, !dbg !13995
  %21 = load i32, i32* %err, align 4, !dbg !13996
  store i32 %21, i32* %retval, align 4, !dbg !13997
  br label %return, !dbg !13997

if.end19:                                         ; preds = %if.then12
  br label %if.end20, !dbg !13998

if.end20:                                         ; preds = %if.end19, %if.end11
  call void @rtnl_lock() #12, !dbg !13999
  %22 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !14000
  call void @netdev_update_features(%struct.net_device* %22) #12, !dbg !14001
  call void @rtnl_unlock() #12, !dbg !14002
  %23 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !14003
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %23, i32 0, i32 1, !dbg !14004
  %24 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !14004
  call void @netif_carrier_on(%struct.net_device* %24) #12, !dbg !14005
  store i32 0, i32* %j, align 4, !dbg !14006
  br label %for.cond, !dbg !14007

for.cond:                                         ; preds = %for.inc, %if.end20
  %25 = load i32, i32* %j, align 4, !dbg !14008
  %26 = load i32, i32* %num_queues, align 4, !dbg !14009
  %cmp21 = icmp ult i32 %25, %26, !dbg !14010
  br i1 %cmp21, label %for.body, label %for.end, !dbg !14011

for.body:                                         ; preds = %for.cond
  %27 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !14012
  %queues = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %27, i32 0, i32 3, !dbg !14013
  %28 = load %struct.netfront_queue*, %struct.netfront_queue** %queues, align 8, !dbg !14013
  %29 = load i32, i32* %j, align 4, !dbg !14014
  %idxprom = zext i32 %29 to i64, !dbg !14012
  %arrayidx = getelementptr %struct.netfront_queue, %struct.netfront_queue* %28, i64 %idxprom, !dbg !14012
  store %struct.netfront_queue* %arrayidx, %struct.netfront_queue** %queue, align 8, !dbg !14015
  %30 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14016
  %tx_irq = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %30, i32 0, i32 7, !dbg !14017
  %31 = load i32, i32* %tx_irq, align 8, !dbg !14017
  call void @notify_remote_via_irq(i32 %31) #12, !dbg !14018
  %32 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14019
  %tx_irq22 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %32, i32 0, i32 7, !dbg !14021
  %33 = load i32, i32* %tx_irq22, align 8, !dbg !14021
  %34 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14022
  %rx_irq = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %34, i32 0, i32 8, !dbg !14023
  %35 = load i32, i32* %rx_irq, align 4, !dbg !14023
  %cmp23 = icmp ne i32 %33, %35, !dbg !14024
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !14025

if.then24:                                        ; preds = %for.body
  %36 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14026
  %rx_irq25 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %36, i32 0, i32 8, !dbg !14027
  %37 = load i32, i32* %rx_irq25, align 4, !dbg !14027
  call void @notify_remote_via_irq(i32 %37) #12, !dbg !14028
  br label %if.end26, !dbg !14028

if.end26:                                         ; preds = %if.then24, %for.body
  %38 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14029
  %tx_lock = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %38, i32 0, i32 11, !dbg !14030
  store %struct.spinlock* %tx_lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #14, !dbg !14031
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !14034, !srcloc !14036
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14037
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !14037
  %rlock.i = bitcast %union.anon.2* %40 to %struct.raw_spinlock*, !dbg !14037
  %41 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14039
  call void @xennet_tx_buf_gc(%struct.netfront_queue* %41) #12, !dbg !14040
  %42 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14041
  %tx_lock27 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %42, i32 0, i32 11, !dbg !14042
  store %struct.spinlock* %tx_lock27, %struct.spinlock** %lock.addr.i29, align 8
  call void @arch_local_irq_enable() #14, !dbg !14043
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !14046, !srcloc !14048
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !14049
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !14049
  %rlock.i30 = bitcast %union.anon.2* %44 to %struct.raw_spinlock*, !dbg !14049
  %45 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14051
  %rx_lock = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %45, i32 0, i32 19, !dbg !14052
  call void @spin_lock_bh(%struct.spinlock* %rx_lock) #12, !dbg !14053
  %46 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14054
  call void @xennet_alloc_rx_buffers(%struct.netfront_queue* %46) #12, !dbg !14055
  %47 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14056
  %rx_lock28 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %47, i32 0, i32 19, !dbg !14057
  call void @spin_unlock_bh(%struct.spinlock* %rx_lock28) #12, !dbg !14058
  br label %for.inc, !dbg !14059

for.inc:                                          ; preds = %if.end26
  %48 = load i32, i32* %j, align 4, !dbg !14060
  %inc = add i32 %48, 1, !dbg !14060
  store i32 %inc, i32* %j, align 4, !dbg !14060
  br label %for.cond, !dbg !14061, !llvm.loop !14062

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !14064
  br label %return, !dbg !14064

return:                                           ; preds = %for.end, %if.then15, %if.then6, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !14065
  ret i32 %49, !dbg !14065
}

; Function Attrs: noredzone
declare dso_local void @netdev_notify_peers(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local i32 @xenbus_frontend_closed(%struct.xenbus_device*) #1

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @talk_to_netback(%struct.xenbus_device* %dev, %struct.netfront_info* %info) #3 !dbg !14066 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.xenbus_device*, align 8
  %info.addr = alloca %struct.netfront_info*, align 8
  %message = alloca i8*, align 8
  %xbt = alloca %struct.xenbus_transaction, align 4
  %err = alloca i32, align 4
  %feature_split_evtchn = alloca i32, align 4
  %i = alloca i32, align 4
  %max_queues = alloca i32, align 4
  %queue = alloca %struct.netfront_queue*, align 8
  %num_queues = alloca i32, align 4
  %__UNIQUE_ID___x649 = alloca i32, align 4
  %__UNIQUE_ID___y650 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %.compoundliteral = alloca %struct.xenbus_transaction, align 4
  store %struct.xenbus_device* %dev, %struct.xenbus_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xenbus_device** %dev.addr, metadata !14069, metadata !DIExpression()), !dbg !14070
  store %struct.netfront_info* %info, %struct.netfront_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %info.addr, metadata !14071, metadata !DIExpression()), !dbg !14072
  call void @llvm.dbg.declare(metadata i8** %message, metadata !14073, metadata !DIExpression()), !dbg !14074
  call void @llvm.dbg.declare(metadata %struct.xenbus_transaction* %xbt, metadata !14075, metadata !DIExpression()), !dbg !14079
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14080, metadata !DIExpression()), !dbg !14081
  call void @llvm.dbg.declare(metadata i32* %feature_split_evtchn, metadata !14082, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14084, metadata !DIExpression()), !dbg !14085
  store i32 0, i32* %i, align 4, !dbg !14085
  call void @llvm.dbg.declare(metadata i32* %max_queues, metadata !14086, metadata !DIExpression()), !dbg !14087
  store i32 0, i32* %max_queues, align 4, !dbg !14087
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue, metadata !14088, metadata !DIExpression()), !dbg !14089
  store %struct.netfront_queue* null, %struct.netfront_queue** %queue, align 8, !dbg !14089
  call void @llvm.dbg.declare(metadata i32* %num_queues, metadata !14090, metadata !DIExpression()), !dbg !14091
  store i32 1, i32* %num_queues, align 4, !dbg !14091
  %0 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14092
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %0, i32 0, i32 1, !dbg !14093
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !14093
  %irq = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 6, !dbg !14094
  store i32 0, i32* %irq, align 8, !dbg !14095
  %2 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14096
  %xbdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %2, i32 0, i32 2, !dbg !14097
  %3 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev, align 8, !dbg !14097
  %otherend = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %3, i32 0, i32 2, !dbg !14098
  %4 = load i8*, i8** %otherend, align 8, !dbg !14098
  %call = call i32 @xenbus_read_unsigned(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i32 1) #12, !dbg !14099
  store i32 %call, i32* %max_queues, align 4, !dbg !14100
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x649, metadata !14101, metadata !DIExpression()), !dbg !14103
  %5 = load i32, i32* %max_queues, align 4, !dbg !14103
  store i32 %5, i32* %__UNIQUE_ID___x649, align 4, !dbg !14103
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y650, metadata !14104, metadata !DIExpression()), !dbg !14103
  %6 = load i32, i32* @xennet_max_queues, align 4, !dbg !14103
  store i32 %6, i32* %__UNIQUE_ID___y650, align 4, !dbg !14103
  %7 = load i32, i32* %__UNIQUE_ID___x649, align 4, !dbg !14103
  %8 = load i32, i32* %__UNIQUE_ID___y650, align 4, !dbg !14103
  %cmp = icmp ult i32 %7, %8, !dbg !14103
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14103

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %__UNIQUE_ID___x649, align 4, !dbg !14103
  br label %cond.end, !dbg !14103

cond.false:                                       ; preds = %entry
  %10 = load i32, i32* %__UNIQUE_ID___y650, align 4, !dbg !14103
  br label %cond.end, !dbg !14103

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ %10, %cond.false ], !dbg !14103
  store i32 %cond, i32* %tmp, align 4, !dbg !14103
  %11 = load i32, i32* %tmp, align 4, !dbg !14103
  store i32 %11, i32* %num_queues, align 4, !dbg !14105
  %12 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14106
  %xbdev1 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %12, i32 0, i32 2, !dbg !14107
  %13 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev1, align 8, !dbg !14107
  %otherend2 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %13, i32 0, i32 2, !dbg !14108
  %14 = load i8*, i8** %otherend2, align 8, !dbg !14108
  %call3 = call i32 @xenbus_read_unsigned(i8* %14, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.25, i64 0, i64 0), i32 0) #12, !dbg !14109
  store i32 %call3, i32* %feature_split_evtchn, align 4, !dbg !14110
  %15 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14111
  %16 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14112
  %netdev4 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %16, i32 0, i32 1, !dbg !14113
  %17 = load %struct.net_device*, %struct.net_device** %netdev4, align 8, !dbg !14113
  %dev_addr = getelementptr inbounds %struct.net_device, %struct.net_device* %17, i32 0, i32 74, !dbg !14114
  %18 = load i8*, i8** %dev_addr, align 8, !dbg !14114
  %call5 = call i32 @xen_net_read_mac(%struct.xenbus_device* %15, i8* %18) #12, !dbg !14115
  store i32 %call5, i32* %err, align 4, !dbg !14116
  %19 = load i32, i32* %err, align 4, !dbg !14117
  %tobool = icmp ne i32 %19, 0, !dbg !14117
  br i1 %tobool, label %if.then, label %if.end, !dbg !14119

if.then:                                          ; preds = %cond.end
  %20 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14120
  %21 = load i32, i32* %err, align 4, !dbg !14122
  %22 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14123
  %nodename = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %22, i32 0, i32 1, !dbg !14124
  %23 = load i8*, i8** %nodename, align 8, !dbg !14124
  call void (%struct.xenbus_device*, i32, i8*, ...) @xenbus_dev_fatal(%struct.xenbus_device* %20, i32 %21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0), i8* %23) #12, !dbg !14125
  br label %out_unlocked, !dbg !14126

if.end:                                           ; preds = %cond.end
  %24 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14127
  %xbdev6 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %24, i32 0, i32 2, !dbg !14128
  %25 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev6, align 8, !dbg !14128
  %otherend7 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %25, i32 0, i32 2, !dbg !14129
  %26 = load i8*, i8** %otherend7, align 8, !dbg !14129
  %call8 = call i32 @xenbus_read_unsigned(i8* %26, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i64 0, i64 0), i32 0) #12, !dbg !14130
  %tobool9 = icmp ne i32 %call8, 0, !dbg !14130
  %27 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14131
  %netback_has_xdp_headroom = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %27, i32 0, i32 6, !dbg !14132
  %frombool = zext i1 %tobool9 to i8, !dbg !14133
  store i8 %frombool, i8* %netback_has_xdp_headroom, align 8, !dbg !14133
  %28 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14134
  %netback_has_xdp_headroom10 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %28, i32 0, i32 6, !dbg !14136
  %29 = load i8, i8* %netback_has_xdp_headroom10, align 8, !dbg !14136
  %tobool11 = trunc i8 %29 to i1, !dbg !14136
  br i1 %tobool11, label %if.then12, label %if.end19, !dbg !14137

if.then12:                                        ; preds = %if.end
  %30 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14138
  %31 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14140
  %netfront_xdp_enabled = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %31, i32 0, i32 7, !dbg !14141
  %32 = load i8, i8* %netfront_xdp_enabled, align 1, !dbg !14141
  %tobool13 = trunc i8 %32 to i1, !dbg !14141
  %33 = zext i1 %tobool13 to i64, !dbg !14140
  %cond14 = select i1 %tobool13, i32 1, i32 0, !dbg !14140
  %call15 = call i32 @talk_to_netback_xdp(%struct.netfront_info* %30, i32 %cond14) #12, !dbg !14142
  store i32 %call15, i32* %err, align 4, !dbg !14143
  %34 = load i32, i32* %err, align 4, !dbg !14144
  %tobool16 = icmp ne i32 %34, 0, !dbg !14144
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !14146

if.then17:                                        ; preds = %if.then12
  br label %out_unlocked, !dbg !14147

if.end18:                                         ; preds = %if.then12
  br label %if.end19, !dbg !14148

if.end19:                                         ; preds = %if.end18, %if.end
  call void @rtnl_lock() #12, !dbg !14149
  %35 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14150
  %queues = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %35, i32 0, i32 3, !dbg !14152
  %36 = load %struct.netfront_queue*, %struct.netfront_queue** %queues, align 8, !dbg !14152
  %tobool20 = icmp ne %struct.netfront_queue* %36, null, !dbg !14150
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !14153

if.then21:                                        ; preds = %if.end19
  %37 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14154
  call void @xennet_destroy_queues(%struct.netfront_info* %37) #12, !dbg !14155
  br label %if.end22, !dbg !14155

if.end22:                                         ; preds = %if.then21, %if.end19
  %38 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14156
  %call23 = call i32 @xennet_create_queues(%struct.netfront_info* %38, i32* %num_queues) #12, !dbg !14157
  store i32 %call23, i32* %err, align 4, !dbg !14158
  %39 = load i32, i32* %err, align 4, !dbg !14159
  %cmp24 = icmp slt i32 %39, 0, !dbg !14161
  br i1 %cmp24, label %if.then25, label %if.end28, !dbg !14162

if.then25:                                        ; preds = %if.end22
  %40 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14163
  %41 = load i32, i32* %err, align 4, !dbg !14165
  call void (%struct.xenbus_device*, i32, i8*, ...) @xenbus_dev_fatal(%struct.xenbus_device* %40, i32 %41, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i64 0, i64 0)) #12, !dbg !14166
  %42 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14167
  %queues26 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %42, i32 0, i32 3, !dbg !14168
  %43 = load %struct.netfront_queue*, %struct.netfront_queue** %queues26, align 8, !dbg !14168
  %44 = bitcast %struct.netfront_queue* %43 to i8*, !dbg !14167
  call void @kfree(i8* %44) #12, !dbg !14169
  %45 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14170
  %queues27 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %45, i32 0, i32 3, !dbg !14171
  store %struct.netfront_queue* null, %struct.netfront_queue** %queues27, align 8, !dbg !14172
  br label %out, !dbg !14173

if.end28:                                         ; preds = %if.end22
  call void @rtnl_unlock() #12, !dbg !14174
  store i32 0, i32* %i, align 4, !dbg !14175
  br label %for.cond, !dbg !14177

for.cond:                                         ; preds = %for.inc, %if.end28
  %46 = load i32, i32* %i, align 4, !dbg !14178
  %47 = load i32, i32* %num_queues, align 4, !dbg !14180
  %cmp29 = icmp ult i32 %46, %47, !dbg !14181
  br i1 %cmp29, label %for.body, label %for.end, !dbg !14182

for.body:                                         ; preds = %for.cond
  %48 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14183
  %queues30 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %48, i32 0, i32 3, !dbg !14185
  %49 = load %struct.netfront_queue*, %struct.netfront_queue** %queues30, align 8, !dbg !14185
  %50 = load i32, i32* %i, align 4, !dbg !14186
  %idxprom = zext i32 %50 to i64, !dbg !14183
  %arrayidx = getelementptr %struct.netfront_queue, %struct.netfront_queue* %49, i64 %idxprom, !dbg !14183
  store %struct.netfront_queue* %arrayidx, %struct.netfront_queue** %queue, align 8, !dbg !14187
  %51 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14188
  %52 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14189
  %53 = load i32, i32* %feature_split_evtchn, align 4, !dbg !14190
  %call31 = call i32 @setup_netfront(%struct.xenbus_device* %51, %struct.netfront_queue* %52, i32 %53) #12, !dbg !14191
  store i32 %call31, i32* %err, align 4, !dbg !14192
  %54 = load i32, i32* %err, align 4, !dbg !14193
  %tobool32 = icmp ne i32 %54, 0, !dbg !14193
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !14195

if.then33:                                        ; preds = %for.body
  br label %destroy_ring, !dbg !14196

if.end34:                                         ; preds = %for.body
  br label %for.inc, !dbg !14197

for.inc:                                          ; preds = %if.end34
  %55 = load i32, i32* %i, align 4, !dbg !14198
  %inc = add i32 %55, 1, !dbg !14198
  store i32 %inc, i32* %i, align 4, !dbg !14198
  br label %for.cond, !dbg !14199, !llvm.loop !14200

for.end:                                          ; preds = %for.cond
  br label %again, !dbg !14201

again:                                            ; preds = %if.then114, %for.end
  call void @llvm.dbg.label(metadata !14202), !dbg !14203
  %call35 = call i32 @xenbus_transaction_start(%struct.xenbus_transaction* %xbt) #12, !dbg !14204
  store i32 %call35, i32* %err, align 4, !dbg !14205
  %56 = load i32, i32* %err, align 4, !dbg !14206
  %tobool36 = icmp ne i32 %56, 0, !dbg !14206
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !14208

if.then37:                                        ; preds = %again
  %57 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14209
  %58 = load i32, i32* %err, align 4, !dbg !14211
  call void (%struct.xenbus_device*, i32, i8*, ...) @xenbus_dev_fatal(%struct.xenbus_device* %57, i32 %58, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0)) #12, !dbg !14212
  br label %destroy_ring, !dbg !14213

if.end38:                                         ; preds = %again
  %id = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %.compoundliteral, i32 0, i32 0, !dbg !14214
  store i32 0, i32* %id, align 4, !dbg !14214
  %59 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14216
  %xbdev39 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %59, i32 0, i32 2, !dbg !14217
  %60 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev39, align 8, !dbg !14217
  %otherend40 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %60, i32 0, i32 2, !dbg !14218
  %61 = load i8*, i8** %otherend40, align 8, !dbg !14218
  %coerce.dive = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %.compoundliteral, i32 0, i32 0, !dbg !14219
  %62 = load i32, i32* %coerce.dive, align 4, !dbg !14219
  %call41 = call i32 @xenbus_exists(i32 %62, i8* %61, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0)) #12, !dbg !14219
  %tobool42 = icmp ne i32 %call41, 0, !dbg !14219
  br i1 %tobool42, label %if.then43, label %if.end50, !dbg !14220

if.then43:                                        ; preds = %if.end38
  %63 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14221
  %nodename44 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %63, i32 0, i32 1, !dbg !14223
  %64 = load i8*, i8** %nodename44, align 8, !dbg !14223
  %65 = load i32, i32* %num_queues, align 4, !dbg !14224
  %coerce.dive45 = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %xbt, i32 0, i32 0, !dbg !14225
  %66 = load i32, i32* %coerce.dive45, align 4, !dbg !14225
  %call46 = call i32 (i32, i8*, i8*, i8*, ...) @xenbus_printf(i32 %66, i8* %64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i32 %65) #12, !dbg !14225
  store i32 %call46, i32* %err, align 4, !dbg !14226
  %67 = load i32, i32* %err, align 4, !dbg !14227
  %tobool47 = icmp ne i32 %67, 0, !dbg !14227
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !14229

if.then48:                                        ; preds = %if.then43
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i64 0, i64 0), i8** %message, align 8, !dbg !14230
  br label %abort_transaction_no_dev_fatal, !dbg !14232

if.end49:                                         ; preds = %if.then43
  br label %if.end50, !dbg !14233

if.end50:                                         ; preds = %if.end49, %if.end38
  %68 = load i32, i32* %num_queues, align 4, !dbg !14234
  %cmp51 = icmp eq i32 %68, 1, !dbg !14236
  br i1 %cmp51, label %if.then52, label %if.else, !dbg !14237

if.then52:                                        ; preds = %if.end50
  %69 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14238
  %queues53 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %69, i32 0, i32 3, !dbg !14240
  %70 = load %struct.netfront_queue*, %struct.netfront_queue** %queues53, align 8, !dbg !14240
  %arrayidx54 = getelementptr %struct.netfront_queue, %struct.netfront_queue* %70, i64 0, !dbg !14238
  %call55 = call i32 @write_queue_xenstore_keys(%struct.netfront_queue* %arrayidx54, %struct.xenbus_transaction* %xbt, i32 0) #12, !dbg !14241
  store i32 %call55, i32* %err, align 4, !dbg !14242
  %71 = load i32, i32* %err, align 4, !dbg !14243
  %tobool56 = icmp ne i32 %71, 0, !dbg !14243
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !14245

if.then57:                                        ; preds = %if.then52
  br label %abort_transaction_no_dev_fatal, !dbg !14246

if.end58:                                         ; preds = %if.then52
  br label %if.end72, !dbg !14247

if.else:                                          ; preds = %if.end50
  store i32 0, i32* %i, align 4, !dbg !14248
  br label %for.cond59, !dbg !14251

for.cond59:                                       ; preds = %for.inc69, %if.else
  %72 = load i32, i32* %i, align 4, !dbg !14252
  %73 = load i32, i32* %num_queues, align 4, !dbg !14254
  %cmp60 = icmp ult i32 %72, %73, !dbg !14255
  br i1 %cmp60, label %for.body61, label %for.end71, !dbg !14256

for.body61:                                       ; preds = %for.cond59
  %74 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14257
  %queues62 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %74, i32 0, i32 3, !dbg !14259
  %75 = load %struct.netfront_queue*, %struct.netfront_queue** %queues62, align 8, !dbg !14259
  %76 = load i32, i32* %i, align 4, !dbg !14260
  %idxprom63 = zext i32 %76 to i64, !dbg !14257
  %arrayidx64 = getelementptr %struct.netfront_queue, %struct.netfront_queue* %75, i64 %idxprom63, !dbg !14257
  store %struct.netfront_queue* %arrayidx64, %struct.netfront_queue** %queue, align 8, !dbg !14261
  %77 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14262
  %call65 = call i32 @write_queue_xenstore_keys(%struct.netfront_queue* %77, %struct.xenbus_transaction* %xbt, i32 1) #12, !dbg !14263
  store i32 %call65, i32* %err, align 4, !dbg !14264
  %78 = load i32, i32* %err, align 4, !dbg !14265
  %tobool66 = icmp ne i32 %78, 0, !dbg !14265
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !14267

if.then67:                                        ; preds = %for.body61
  br label %abort_transaction_no_dev_fatal, !dbg !14268

if.end68:                                         ; preds = %for.body61
  br label %for.inc69, !dbg !14269

for.inc69:                                        ; preds = %if.end68
  %79 = load i32, i32* %i, align 4, !dbg !14270
  %inc70 = add i32 %79, 1, !dbg !14270
  store i32 %inc70, i32* %i, align 4, !dbg !14270
  br label %for.cond59, !dbg !14271, !llvm.loop !14272

for.end71:                                        ; preds = %for.cond59
  br label %if.end72

if.end72:                                         ; preds = %for.end71, %if.end58
  %80 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14274
  %nodename73 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %80, i32 0, i32 1, !dbg !14275
  %81 = load i8*, i8** %nodename73, align 8, !dbg !14275
  %coerce.dive74 = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %xbt, i32 0, i32 0, !dbg !14276
  %82 = load i32, i32* %coerce.dive74, align 4, !dbg !14276
  %call75 = call i32 (i32, i8*, i8*, i8*, ...) @xenbus_printf(i32 %82, i8* %81, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i32 1) #12, !dbg !14276
  store i32 %call75, i32* %err, align 4, !dbg !14277
  %83 = load i32, i32* %err, align 4, !dbg !14278
  %tobool76 = icmp ne i32 %83, 0, !dbg !14278
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !14280

if.then77:                                        ; preds = %if.end72
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34, i64 0, i64 0), i8** %message, align 8, !dbg !14281
  br label %abort_transaction, !dbg !14283

if.end78:                                         ; preds = %if.end72
  %84 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14284
  %nodename79 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %84, i32 0, i32 1, !dbg !14285
  %85 = load i8*, i8** %nodename79, align 8, !dbg !14285
  %coerce.dive80 = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %xbt, i32 0, i32 0, !dbg !14286
  %86 = load i32, i32* %coerce.dive80, align 4, !dbg !14286
  %call81 = call i32 (i32, i8*, i8*, i8*, ...) @xenbus_printf(i32 %86, i8* %85, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i64 0, i64 0), i32 1) #12, !dbg !14286
  store i32 %call81, i32* %err, align 4, !dbg !14287
  %87 = load i32, i32* %err, align 4, !dbg !14288
  %tobool82 = icmp ne i32 %87, 0, !dbg !14288
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !14290

if.then83:                                        ; preds = %if.end78
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i64 0, i64 0), i8** %message, align 8, !dbg !14291
  br label %abort_transaction, !dbg !14293

if.end84:                                         ; preds = %if.end78
  %88 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14294
  %nodename85 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %88, i32 0, i32 1, !dbg !14295
  %89 = load i8*, i8** %nodename85, align 8, !dbg !14295
  %coerce.dive86 = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %xbt, i32 0, i32 0, !dbg !14296
  %90 = load i32, i32* %coerce.dive86, align 4, !dbg !14296
  %call87 = call i32 (i32, i8*, i8*, i8*, ...) @xenbus_printf(i32 %90, i8* %89, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i64 0, i64 0), i32 1) #12, !dbg !14296
  store i32 %call87, i32* %err, align 4, !dbg !14297
  %91 = load i32, i32* %err, align 4, !dbg !14298
  %tobool88 = icmp ne i32 %91, 0, !dbg !14298
  br i1 %tobool88, label %if.then89, label %if.end90, !dbg !14300

if.then89:                                        ; preds = %if.end84
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0), i8** %message, align 8, !dbg !14301
  br label %abort_transaction, !dbg !14303

if.end90:                                         ; preds = %if.end84
  %92 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14304
  %nodename91 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %92, i32 0, i32 1, !dbg !14305
  %93 = load i8*, i8** %nodename91, align 8, !dbg !14305
  %coerce.dive92 = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %xbt, i32 0, i32 0, !dbg !14306
  %94 = load i32, i32* %coerce.dive92, align 4, !dbg !14306
  %call93 = call i32 (i32, i8*, i8*, i8*, ...) @xenbus_printf(i32 %94, i8* %93, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i64 0, i64 0), i32 1) #12, !dbg !14306
  store i32 %call93, i32* %err, align 4, !dbg !14307
  %95 = load i32, i32* %err, align 4, !dbg !14308
  %tobool94 = icmp ne i32 %95, 0, !dbg !14308
  br i1 %tobool94, label %if.then95, label %if.end96, !dbg !14310

if.then95:                                        ; preds = %if.end90
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.39, i64 0, i64 0), i8** %message, align 8, !dbg !14311
  br label %abort_transaction, !dbg !14313

if.end96:                                         ; preds = %if.end90
  %96 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14314
  %nodename97 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %96, i32 0, i32 1, !dbg !14315
  %97 = load i8*, i8** %nodename97, align 8, !dbg !14315
  %coerce.dive98 = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %xbt, i32 0, i32 0, !dbg !14316
  %98 = load i32, i32* %coerce.dive98, align 4, !dbg !14316
  %call99 = call i32 @xenbus_write(i32 %98, i8* %97, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i64 0, i64 0)) #12, !dbg !14316
  store i32 %call99, i32* %err, align 4, !dbg !14317
  %99 = load i32, i32* %err, align 4, !dbg !14318
  %tobool100 = icmp ne i32 %99, 0, !dbg !14318
  br i1 %tobool100, label %if.then101, label %if.end102, !dbg !14320

if.then101:                                       ; preds = %if.end96
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.41, i64 0, i64 0), i8** %message, align 8, !dbg !14321
  br label %abort_transaction, !dbg !14323

if.end102:                                        ; preds = %if.end96
  %100 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14324
  %nodename103 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %100, i32 0, i32 1, !dbg !14325
  %101 = load i8*, i8** %nodename103, align 8, !dbg !14325
  %coerce.dive104 = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %xbt, i32 0, i32 0, !dbg !14326
  %102 = load i32, i32* %coerce.dive104, align 4, !dbg !14326
  %call105 = call i32 @xenbus_write(i32 %102, i8* %101, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i64 0, i64 0)) #12, !dbg !14326
  store i32 %call105, i32* %err, align 4, !dbg !14327
  %103 = load i32, i32* %err, align 4, !dbg !14328
  %tobool106 = icmp ne i32 %103, 0, !dbg !14328
  br i1 %tobool106, label %if.then107, label %if.end108, !dbg !14330

if.then107:                                       ; preds = %if.end102
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.42, i64 0, i64 0), i8** %message, align 8, !dbg !14331
  br label %abort_transaction, !dbg !14333

if.end108:                                        ; preds = %if.end102
  %coerce.dive109 = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %xbt, i32 0, i32 0, !dbg !14334
  %104 = load i32, i32* %coerce.dive109, align 4, !dbg !14334
  %call110 = call i32 @xenbus_transaction_end(i32 %104, i32 0) #12, !dbg !14334
  store i32 %call110, i32* %err, align 4, !dbg !14335
  %105 = load i32, i32* %err, align 4, !dbg !14336
  %tobool111 = icmp ne i32 %105, 0, !dbg !14336
  br i1 %tobool111, label %if.then112, label %if.end116, !dbg !14338

if.then112:                                       ; preds = %if.end108
  %106 = load i32, i32* %err, align 4, !dbg !14339
  %cmp113 = icmp eq i32 %106, -11, !dbg !14342
  br i1 %cmp113, label %if.then114, label %if.end115, !dbg !14343

if.then114:                                       ; preds = %if.then112
  br label %again, !dbg !14344

if.end115:                                        ; preds = %if.then112
  %107 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14345
  %108 = load i32, i32* %err, align 4, !dbg !14346
  call void (%struct.xenbus_device*, i32, i8*, ...) @xenbus_dev_fatal(%struct.xenbus_device* %107, i32 %108, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i64 0, i64 0)) #12, !dbg !14347
  br label %destroy_ring, !dbg !14348

if.end116:                                        ; preds = %if.end108
  store i32 0, i32* %retval, align 4, !dbg !14349
  br label %return, !dbg !14349

abort_transaction:                                ; preds = %if.then107, %if.then101, %if.then95, %if.then89, %if.then83, %if.then77
  call void @llvm.dbg.label(metadata !14350), !dbg !14351
  %109 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14352
  %110 = load i32, i32* %err, align 4, !dbg !14353
  %111 = load i8*, i8** %message, align 8, !dbg !14354
  call void (%struct.xenbus_device*, i32, i8*, ...) @xenbus_dev_fatal(%struct.xenbus_device* %109, i32 %110, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0), i8* %111) #12, !dbg !14355
  br label %abort_transaction_no_dev_fatal, !dbg !14355

abort_transaction_no_dev_fatal:                   ; preds = %abort_transaction, %if.then67, %if.then57, %if.then48
  call void @llvm.dbg.label(metadata !14356), !dbg !14357
  %coerce.dive117 = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %xbt, i32 0, i32 0, !dbg !14358
  %112 = load i32, i32* %coerce.dive117, align 4, !dbg !14358
  %call118 = call i32 @xenbus_transaction_end(i32 %112, i32 1) #12, !dbg !14358
  br label %destroy_ring, !dbg !14358

destroy_ring:                                     ; preds = %abort_transaction_no_dev_fatal, %if.end115, %if.then37, %if.then33
  call void @llvm.dbg.label(metadata !14359), !dbg !14360
  %113 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14361
  call void @xennet_disconnect_backend(%struct.netfront_info* %113) #12, !dbg !14362
  call void @rtnl_lock() #12, !dbg !14363
  %114 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14364
  call void @xennet_destroy_queues(%struct.netfront_info* %114) #12, !dbg !14365
  br label %out, !dbg !14365

out:                                              ; preds = %destroy_ring, %if.then25
  call void @llvm.dbg.label(metadata !14366), !dbg !14367
  call void @rtnl_unlock() #12, !dbg !14368
  br label %out_unlocked, !dbg !14368

out_unlocked:                                     ; preds = %out, %if.then17, %if.then
  call void @llvm.dbg.label(metadata !14369), !dbg !14370
  %115 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14371
  %dev119 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %115, i32 0, i32 5, !dbg !14372
  call void @device_unregister(%struct.device* %dev119) #12, !dbg !14373
  %116 = load i32, i32* %err, align 4, !dbg !14374
  store i32 %116, i32* %retval, align 4, !dbg !14375
  br label %return, !dbg !14375

return:                                           ; preds = %out_unlocked, %if.end116
  %117 = load i32, i32* %retval, align 4, !dbg !14376
  ret i32 %117, !dbg !14376
}

; Function Attrs: noredzone
declare dso_local i32 @register_netdev(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @device_unregister(%struct.device*) #1

; Function Attrs: noredzone
declare dso_local void @rtnl_lock() #1

; Function Attrs: noredzone
declare dso_local void @netdev_update_features(%struct.net_device*) #1

; Function Attrs: noredzone
declare dso_local void @rtnl_unlock() #1

; Function Attrs: noredzone
declare dso_local void @netif_carrier_on(%struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xen_net_read_mac(%struct.xenbus_device* %dev, i8* %mac) #3 !dbg !14377 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.xenbus_device*, align 8
  %mac.addr = alloca i8*, align 8
  %s = alloca i8*, align 8
  %e = alloca i8*, align 8
  %macstr = alloca i8*, align 8
  %i = alloca i32, align 4
  %.compoundliteral = alloca %struct.xenbus_transaction, align 4
  store %struct.xenbus_device* %dev, %struct.xenbus_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xenbus_device** %dev.addr, metadata !14380, metadata !DIExpression()), !dbg !14381
  store i8* %mac, i8** %mac.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mac.addr, metadata !14382, metadata !DIExpression()), !dbg !14383
  call void @llvm.dbg.declare(metadata i8** %s, metadata !14384, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.declare(metadata i8** %e, metadata !14386, metadata !DIExpression()), !dbg !14387
  call void @llvm.dbg.declare(metadata i8** %macstr, metadata !14388, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14390, metadata !DIExpression()), !dbg !14391
  %id = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %.compoundliteral, i32 0, i32 0, !dbg !14392
  store i32 0, i32* %id, align 4, !dbg !14392
  %0 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14393
  %nodename = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %0, i32 0, i32 1, !dbg !14394
  %1 = load i8*, i8** %nodename, align 8, !dbg !14394
  %coerce.dive = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %.compoundliteral, i32 0, i32 0, !dbg !14395
  %2 = load i32, i32* %coerce.dive, align 4, !dbg !14395
  %call = call i8* @xenbus_read(i32 %2, i8* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i64 0, i64 0), i32* null) #12, !dbg !14395
  store i8* %call, i8** %s, align 8, !dbg !14396
  store i8* %call, i8** %macstr, align 8, !dbg !14397
  %3 = load i8*, i8** %macstr, align 8, !dbg !14398
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #12, !dbg !14400
  br i1 %call1, label %if.then, label %if.end, !dbg !14401

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %macstr, align 8, !dbg !14402
  %call2 = call i64 @PTR_ERR(i8* %4) #12, !dbg !14403
  %conv = trunc i64 %call2 to i32, !dbg !14403
  store i32 %conv, i32* %retval, align 4, !dbg !14404
  br label %return, !dbg !14404

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !14405
  br label %for.cond, !dbg !14407

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !14408
  %cmp = icmp slt i32 %5, 6, !dbg !14410
  br i1 %cmp, label %for.body, label %for.end, !dbg !14411

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %s, align 8, !dbg !14412
  %call4 = call i64 @simple_strtoul(i8* %6, i8** %e, i32 16) #12, !dbg !14414
  %conv5 = trunc i64 %call4 to i8, !dbg !14414
  %7 = load i8*, i8** %mac.addr, align 8, !dbg !14415
  %8 = load i32, i32* %i, align 4, !dbg !14416
  %idxprom = sext i32 %8 to i64, !dbg !14415
  %arrayidx = getelementptr i8, i8* %7, i64 %idxprom, !dbg !14415
  store i8 %conv5, i8* %arrayidx, align 1, !dbg !14417
  %9 = load i8*, i8** %s, align 8, !dbg !14418
  %10 = load i8*, i8** %e, align 8, !dbg !14420
  %cmp6 = icmp eq i8* %9, %10, !dbg !14421
  br i1 %cmp6, label %if.then13, label %lor.lhs.false, !dbg !14422

lor.lhs.false:                                    ; preds = %for.body
  %11 = load i8*, i8** %e, align 8, !dbg !14423
  %12 = load i8, i8* %11, align 1, !dbg !14424
  %conv8 = sext i8 %12 to i32, !dbg !14424
  %13 = load i32, i32* %i, align 4, !dbg !14425
  %cmp9 = icmp eq i32 %13, 5, !dbg !14426
  %14 = zext i1 %cmp9 to i64, !dbg !14427
  %cond = select i1 %cmp9, i32 0, i32 58, !dbg !14427
  %cmp11 = icmp ne i32 %conv8, %cond, !dbg !14428
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !14429

if.then13:                                        ; preds = %lor.lhs.false, %for.body
  %15 = load i8*, i8** %macstr, align 8, !dbg !14430
  call void @kfree(i8* %15) #12, !dbg !14432
  store i32 -2, i32* %retval, align 4, !dbg !14433
  br label %return, !dbg !14433

if.end14:                                         ; preds = %lor.lhs.false
  %16 = load i8*, i8** %e, align 8, !dbg !14434
  %add.ptr = getelementptr i8, i8* %16, i64 1, !dbg !14435
  store i8* %add.ptr, i8** %s, align 8, !dbg !14436
  br label %for.inc, !dbg !14437

for.inc:                                          ; preds = %if.end14
  %17 = load i32, i32* %i, align 4, !dbg !14438
  %inc = add i32 %17, 1, !dbg !14438
  store i32 %inc, i32* %i, align 4, !dbg !14438
  br label %for.cond, !dbg !14439, !llvm.loop !14440

for.end:                                          ; preds = %for.cond
  %18 = load i8*, i8** %macstr, align 8, !dbg !14442
  call void @kfree(i8* %18) #12, !dbg !14443
  store i32 0, i32* %retval, align 4, !dbg !14444
  br label %return, !dbg !14444

return:                                           ; preds = %for.end, %if.then13, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !14445
  ret i32 %19, !dbg !14445
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_destroy_queues(%struct.netfront_info* %info) #3 !dbg !14446 {
entry:
  %info.addr = alloca %struct.netfront_info*, align 8
  %i = alloca i32, align 4
  %queue = alloca %struct.netfront_queue*, align 8
  store %struct.netfront_info* %info, %struct.netfront_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %info.addr, metadata !14449, metadata !DIExpression()), !dbg !14450
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14451, metadata !DIExpression()), !dbg !14452
  store i32 0, i32* %i, align 4, !dbg !14453
  br label %for.cond, !dbg !14455

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !14456
  %1 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14458
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %1, i32 0, i32 1, !dbg !14459
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !14459
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 88, !dbg !14460
  %3 = load i32, i32* %real_num_tx_queues, align 4, !dbg !14460
  %cmp = icmp ult i32 %0, %3, !dbg !14461
  br i1 %cmp, label %for.body, label %for.end, !dbg !14462

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue, metadata !14463, metadata !DIExpression()), !dbg !14465
  %4 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14466
  %queues = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %4, i32 0, i32 3, !dbg !14467
  %5 = load %struct.netfront_queue*, %struct.netfront_queue** %queues, align 8, !dbg !14467
  %6 = load i32, i32* %i, align 4, !dbg !14468
  %idxprom = zext i32 %6 to i64, !dbg !14466
  %arrayidx = getelementptr %struct.netfront_queue, %struct.netfront_queue* %5, i64 %idxprom, !dbg !14466
  store %struct.netfront_queue* %arrayidx, %struct.netfront_queue** %queue, align 8, !dbg !14465
  %7 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14469
  %netdev1 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %7, i32 0, i32 1, !dbg !14471
  %8 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !14471
  %call = call zeroext i1 @netif_running(%struct.net_device* %8) #12, !dbg !14472
  br i1 %call, label %if.then, label %if.end, !dbg !14473

if.then:                                          ; preds = %for.body
  %9 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14474
  %napi = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %9, i32 0, i32 4, !dbg !14475
  call void @napi_disable(%struct.napi_struct* %napi) #12, !dbg !14476
  br label %if.end, !dbg !14476

if.end:                                           ; preds = %if.then, %for.body
  %10 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14477
  %napi2 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %10, i32 0, i32 4, !dbg !14478
  call void @netif_napi_del(%struct.napi_struct* %napi2) #12, !dbg !14479
  br label %for.inc, !dbg !14480

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !14481
  %inc = add i32 %11, 1, !dbg !14481
  store i32 %inc, i32* %i, align 4, !dbg !14481
  br label %for.cond, !dbg !14482, !llvm.loop !14483

for.end:                                          ; preds = %for.cond
  %12 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14485
  %queues3 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %12, i32 0, i32 3, !dbg !14486
  %13 = load %struct.netfront_queue*, %struct.netfront_queue** %queues3, align 8, !dbg !14486
  %14 = bitcast %struct.netfront_queue* %13 to i8*, !dbg !14485
  call void @kfree(i8* %14) #12, !dbg !14487
  %15 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14488
  %queues4 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %15, i32 0, i32 3, !dbg !14489
  store %struct.netfront_queue* null, %struct.netfront_queue** %queues4, align 8, !dbg !14490
  ret void, !dbg !14491
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_create_queues(%struct.netfront_info* %info, i32* %num_queues) #3 !dbg !14492 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.netfront_info*, align 8
  %num_queues.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %queue = alloca %struct.netfront_queue*, align 8
  store %struct.netfront_info* %info, %struct.netfront_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %info.addr, metadata !14495, metadata !DIExpression()), !dbg !14496
  store i32* %num_queues, i32** %num_queues.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num_queues.addr, metadata !14497, metadata !DIExpression()), !dbg !14498
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14499, metadata !DIExpression()), !dbg !14500
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14501, metadata !DIExpression()), !dbg !14502
  %0 = load i32*, i32** %num_queues.addr, align 8, !dbg !14503
  %1 = load i32, i32* %0, align 4, !dbg !14504
  %conv = zext i32 %1 to i64, !dbg !14504
  %call = call i8* @kcalloc(i64 %conv, i64 8896, i32 3264) #12, !dbg !14505
  %2 = bitcast i8* %call to %struct.netfront_queue*, !dbg !14505
  %3 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14506
  %queues = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %3, i32 0, i32 3, !dbg !14507
  store %struct.netfront_queue* %2, %struct.netfront_queue** %queues, align 8, !dbg !14508
  %4 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14509
  %queues1 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %4, i32 0, i32 3, !dbg !14511
  %5 = load %struct.netfront_queue*, %struct.netfront_queue** %queues1, align 8, !dbg !14511
  %tobool = icmp ne %struct.netfront_queue* %5, null, !dbg !14509
  br i1 %tobool, label %if.end, label %if.then, !dbg !14512

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !14513
  br label %return, !dbg !14513

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !14514
  br label %for.cond, !dbg !14516

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !14517
  %7 = load i32*, i32** %num_queues.addr, align 8, !dbg !14519
  %8 = load i32, i32* %7, align 4, !dbg !14520
  %cmp = icmp ult i32 %6, %8, !dbg !14521
  br i1 %cmp, label %for.body, label %for.end, !dbg !14522

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue, metadata !14523, metadata !DIExpression()), !dbg !14525
  %9 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14526
  %queues3 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %9, i32 0, i32 3, !dbg !14527
  %10 = load %struct.netfront_queue*, %struct.netfront_queue** %queues3, align 8, !dbg !14527
  %11 = load i32, i32* %i, align 4, !dbg !14528
  %idxprom = zext i32 %11 to i64, !dbg !14526
  %arrayidx = getelementptr %struct.netfront_queue, %struct.netfront_queue* %10, i64 %idxprom, !dbg !14526
  store %struct.netfront_queue* %arrayidx, %struct.netfront_queue** %queue, align 8, !dbg !14525
  %12 = load i32, i32* %i, align 4, !dbg !14529
  %13 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14530
  %id = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %13, i32 0, i32 0, !dbg !14531
  store i32 %12, i32* %id, align 64, !dbg !14532
  %14 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14533
  %15 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14534
  %info4 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %15, i32 0, i32 2, !dbg !14535
  store %struct.netfront_info* %14, %struct.netfront_info** %info4, align 32, !dbg !14536
  %16 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14537
  %call5 = call i32 @xennet_init_queue(%struct.netfront_queue* %16) #12, !dbg !14538
  store i32 %call5, i32* %ret, align 4, !dbg !14539
  %17 = load i32, i32* %ret, align 4, !dbg !14540
  %cmp6 = icmp slt i32 %17, 0, !dbg !14542
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !14543

if.then8:                                         ; preds = %for.body
  %18 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14544
  %xbdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %18, i32 0, i32 2, !dbg !14544
  %19 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev, align 8, !dbg !14544
  %dev = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %19, i32 0, i32 5, !dbg !14544
  %20 = load i32, i32* %i, align 4, !dbg !14544
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.46, i64 0, i64 0), i32 %20) #13, !dbg !14544
  %21 = load i32, i32* %i, align 4, !dbg !14546
  %22 = load i32*, i32** %num_queues.addr, align 8, !dbg !14547
  store i32 %21, i32* %22, align 4, !dbg !14548
  br label %for.end, !dbg !14549

if.end9:                                          ; preds = %for.body
  %23 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14550
  %call10 = call i32 @xennet_create_page_pool(%struct.netfront_queue* %23) #12, !dbg !14551
  store i32 %call10, i32* %ret, align 4, !dbg !14552
  %24 = load i32, i32* %ret, align 4, !dbg !14553
  %cmp11 = icmp slt i32 %24, 0, !dbg !14555
  br i1 %cmp11, label %if.then13, label %if.end16, !dbg !14556

if.then13:                                        ; preds = %if.end9
  %25 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14557
  %xbdev14 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %25, i32 0, i32 2, !dbg !14557
  %26 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev14, align 8, !dbg !14557
  %dev15 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %26, i32 0, i32 5, !dbg !14557
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev15, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.47, i64 0, i64 0)) #13, !dbg !14557
  %27 = load i32, i32* %i, align 4, !dbg !14559
  %28 = load i32*, i32** %num_queues.addr, align 8, !dbg !14560
  store i32 %27, i32* %28, align 4, !dbg !14561
  %29 = load i32, i32* %ret, align 4, !dbg !14562
  store i32 %29, i32* %retval, align 4, !dbg !14563
  br label %return, !dbg !14563

if.end16:                                         ; preds = %if.end9
  %30 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14564
  %info17 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %30, i32 0, i32 2, !dbg !14565
  %31 = load %struct.netfront_info*, %struct.netfront_info** %info17, align 32, !dbg !14565
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %31, i32 0, i32 1, !dbg !14566
  %32 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !14566
  %33 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14567
  %napi = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %33, i32 0, i32 4, !dbg !14568
  call void @netif_napi_add(%struct.net_device* %32, %struct.napi_struct* %napi, i32 (%struct.napi_struct*, i32)* @xennet_poll, i32 64) #12, !dbg !14569
  %34 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14570
  %netdev18 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %34, i32 0, i32 1, !dbg !14572
  %35 = load %struct.net_device*, %struct.net_device** %netdev18, align 8, !dbg !14572
  %call19 = call zeroext i1 @netif_running(%struct.net_device* %35) #12, !dbg !14573
  br i1 %call19, label %if.then20, label %if.end22, !dbg !14574

if.then20:                                        ; preds = %if.end16
  %36 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14575
  %napi21 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %36, i32 0, i32 4, !dbg !14576
  call void @napi_enable(%struct.napi_struct* %napi21) #12, !dbg !14577
  br label %if.end22, !dbg !14577

if.end22:                                         ; preds = %if.then20, %if.end16
  br label %for.inc, !dbg !14578

for.inc:                                          ; preds = %if.end22
  %37 = load i32, i32* %i, align 4, !dbg !14579
  %inc = add i32 %37, 1, !dbg !14579
  store i32 %inc, i32* %i, align 4, !dbg !14579
  br label %for.cond, !dbg !14580, !llvm.loop !14581

for.end:                                          ; preds = %if.then8, %for.cond
  %38 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14583
  %netdev23 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %38, i32 0, i32 1, !dbg !14584
  %39 = load %struct.net_device*, %struct.net_device** %netdev23, align 8, !dbg !14584
  %40 = load i32*, i32** %num_queues.addr, align 8, !dbg !14585
  %41 = load i32, i32* %40, align 4, !dbg !14586
  %call24 = call i32 @netif_set_real_num_tx_queues(%struct.net_device* %39, i32 %41) #12, !dbg !14587
  %42 = load i32*, i32** %num_queues.addr, align 8, !dbg !14588
  %43 = load i32, i32* %42, align 4, !dbg !14590
  %cmp25 = icmp eq i32 %43, 0, !dbg !14591
  br i1 %cmp25, label %if.then27, label %if.end30, !dbg !14592

if.then27:                                        ; preds = %for.end
  %44 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14593
  %xbdev28 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %44, i32 0, i32 2, !dbg !14593
  %45 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev28, align 8, !dbg !14593
  %dev29 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %45, i32 0, i32 5, !dbg !14593
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev29, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.48, i64 0, i64 0)) #13, !dbg !14593
  store i32 -22, i32* %retval, align 4, !dbg !14595
  br label %return, !dbg !14595

if.end30:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !14596
  br label %return, !dbg !14596

return:                                           ; preds = %if.end30, %if.then27, %if.then13, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !14597
  ret i32 %46, !dbg !14597
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @setup_netfront(%struct.xenbus_device* %dev, %struct.netfront_queue* %queue, i32 %feature_split_evtchn) #3 !dbg !14598 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.xenbus_device*, align 8
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %feature_split_evtchn.addr = alloca i32, align 4
  %txs = alloca %struct.xen_netif_tx_sring*, align 8
  %rxs = alloca %struct.xen_netif_rx_sring*, align 8
  %gref = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.xenbus_device* %dev, %struct.xenbus_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xenbus_device** %dev.addr, metadata !14601, metadata !DIExpression()), !dbg !14602
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !14603, metadata !DIExpression()), !dbg !14604
  store i32 %feature_split_evtchn, i32* %feature_split_evtchn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %feature_split_evtchn.addr, metadata !14605, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.declare(metadata %struct.xen_netif_tx_sring** %txs, metadata !14607, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.declare(metadata %struct.xen_netif_rx_sring** %rxs, metadata !14609, metadata !DIExpression()), !dbg !14610
  call void @llvm.dbg.declare(metadata i32* %gref, metadata !14611, metadata !DIExpression()), !dbg !14612
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14613, metadata !DIExpression()), !dbg !14614
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14615
  %tx_ring_ref = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %0, i32 0, i32 13, !dbg !14616
  store i32 0, i32* %tx_ring_ref, align 16, !dbg !14617
  %1 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14618
  %rx_ring_ref = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %1, i32 0, i32 21, !dbg !14619
  store i32 0, i32* %rx_ring_ref, align 64, !dbg !14620
  %2 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14621
  %rx = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %2, i32 0, i32 20, !dbg !14622
  %sring = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx, i32 0, i32 3, !dbg !14623
  store %struct.xen_netif_rx_sring* null, %struct.xen_netif_rx_sring** %sring, align 8, !dbg !14624
  %3 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14625
  %tx = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %3, i32 0, i32 12, !dbg !14626
  %sring1 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx, i32 0, i32 3, !dbg !14627
  store %struct.xen_netif_tx_sring* null, %struct.xen_netif_tx_sring** %sring1, align 8, !dbg !14628
  %call = call i64 @get_zeroed_page(i32 3104) #12, !dbg !14629
  %4 = inttoptr i64 %call to %struct.xen_netif_tx_sring*, !dbg !14630
  store %struct.xen_netif_tx_sring* %4, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14631
  %5 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14632
  %tobool = icmp ne %struct.xen_netif_tx_sring* %5, null, !dbg !14632
  br i1 %tobool, label %if.end, label %if.then, !dbg !14634

if.then:                                          ; preds = %entry
  store i32 -12, i32* %err, align 4, !dbg !14635
  %6 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14637
  %7 = load i32, i32* %err, align 4, !dbg !14638
  call void (%struct.xenbus_device*, i32, i8*, ...) @xenbus_dev_fatal(%struct.xenbus_device* %6, i32 %7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.64, i64 0, i64 0)) #12, !dbg !14639
  br label %fail, !dbg !14640

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !14641

do.body:                                          ; preds = %if.end
  %8 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14642
  %rsp_prod = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %8, i32 0, i32 2, !dbg !14642
  store i32 0, i32* %rsp_prod, align 4, !dbg !14642
  %9 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14642
  %req_prod = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %9, i32 0, i32 0, !dbg !14642
  store i32 0, i32* %req_prod, align 4, !dbg !14642
  %10 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14642
  %rsp_event = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %10, i32 0, i32 3, !dbg !14642
  store i32 1, i32* %rsp_event, align 4, !dbg !14642
  %11 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14642
  %req_event = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %11, i32 0, i32 1, !dbg !14642
  store i32 1, i32* %req_event, align 4, !dbg !14642
  %12 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14642
  %pad = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %12, i32 0, i32 4, !dbg !14642
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %pad, i64 0, i64 0, !dbg !14642
  call void @llvm.memset.p0i8.i64(i8* align 4 %arraydecay, i8 0, i64 48, i1 false), !dbg !14642
  br label %do.end, !dbg !14642

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !14644

do.body2:                                         ; preds = %do.end
  %13 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14645
  %tx3 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %13, i32 0, i32 12, !dbg !14645
  %req_prod_pvt = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx3, i32 0, i32 0, !dbg !14645
  store i32 0, i32* %req_prod_pvt, align 8, !dbg !14645
  %14 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14645
  %tx4 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %14, i32 0, i32 12, !dbg !14645
  %rsp_cons = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx4, i32 0, i32 1, !dbg !14645
  store i32 0, i32* %rsp_cons, align 4, !dbg !14645
  %15 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %15, i32 0, i32 5, !dbg !14645
  %16 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring to i64, !dbg !14645
  %sub = sub i64 4096, %16, !dbg !14645
  %17 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %18 = ptrtoint %struct.xen_netif_tx_sring* %17 to i64, !dbg !14645
  %add = add i64 %sub, %18, !dbg !14645
  %div = udiv i64 %add, 12, !dbg !14645
  %and = and i64 %div, 4294901760, !dbg !14645
  %tobool5 = icmp ne i64 %and, 0, !dbg !14645
  br i1 %tobool5, label %cond.true, label %cond.false251, !dbg !14645

cond.true:                                        ; preds = %do.body2
  %19 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring6 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %19, i32 0, i32 5, !dbg !14645
  %20 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring6 to i64, !dbg !14645
  %sub7 = sub i64 4096, %20, !dbg !14645
  %21 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %22 = ptrtoint %struct.xen_netif_tx_sring* %21 to i64, !dbg !14645
  %add8 = add i64 %sub7, %22, !dbg !14645
  %div9 = udiv i64 %add8, 12, !dbg !14645
  %shr = lshr i64 %div9, 16, !dbg !14645
  %and10 = and i64 %shr, 65280, !dbg !14645
  %tobool11 = icmp ne i64 %and10, 0, !dbg !14645
  br i1 %tobool11, label %cond.true12, label %cond.false134, !dbg !14645

cond.true12:                                      ; preds = %cond.true
  %23 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring13 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %23, i32 0, i32 5, !dbg !14645
  %24 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring13 to i64, !dbg !14645
  %sub14 = sub i64 4096, %24, !dbg !14645
  %25 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %26 = ptrtoint %struct.xen_netif_tx_sring* %25 to i64, !dbg !14645
  %add15 = add i64 %sub14, %26, !dbg !14645
  %div16 = udiv i64 %add15, 12, !dbg !14645
  %shr17 = lshr i64 %div16, 16, !dbg !14645
  %shr18 = lshr i64 %shr17, 8, !dbg !14645
  %and19 = and i64 %shr18, 240, !dbg !14645
  %tobool20 = icmp ne i64 %and19, 0, !dbg !14645
  br i1 %tobool20, label %cond.true21, label %cond.false77, !dbg !14645

cond.true21:                                      ; preds = %cond.true12
  %27 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring22 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %27, i32 0, i32 5, !dbg !14645
  %28 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring22 to i64, !dbg !14645
  %sub23 = sub i64 4096, %28, !dbg !14645
  %29 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %30 = ptrtoint %struct.xen_netif_tx_sring* %29 to i64, !dbg !14645
  %add24 = add i64 %sub23, %30, !dbg !14645
  %div25 = udiv i64 %add24, 12, !dbg !14645
  %shr26 = lshr i64 %div25, 16, !dbg !14645
  %shr27 = lshr i64 %shr26, 8, !dbg !14645
  %shr28 = lshr i64 %shr27, 4, !dbg !14645
  %and29 = and i64 %shr28, 12, !dbg !14645
  %tobool30 = icmp ne i64 %and29, 0, !dbg !14645
  br i1 %tobool30, label %cond.true31, label %cond.false52, !dbg !14645

cond.true31:                                      ; preds = %cond.true21
  %31 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring32 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %31, i32 0, i32 5, !dbg !14645
  %32 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring32 to i64, !dbg !14645
  %sub33 = sub i64 4096, %32, !dbg !14645
  %33 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %34 = ptrtoint %struct.xen_netif_tx_sring* %33 to i64, !dbg !14645
  %add34 = add i64 %sub33, %34, !dbg !14645
  %div35 = udiv i64 %add34, 12, !dbg !14645
  %shr36 = lshr i64 %div35, 16, !dbg !14645
  %shr37 = lshr i64 %shr36, 8, !dbg !14645
  %shr38 = lshr i64 %shr37, 4, !dbg !14645
  %shr39 = lshr i64 %shr38, 2, !dbg !14645
  %and40 = and i64 %shr39, 2, !dbg !14645
  %tobool41 = icmp ne i64 %and40, 0, !dbg !14645
  br i1 %tobool41, label %cond.true42, label %cond.false, !dbg !14645

cond.true42:                                      ; preds = %cond.true31
  br label %cond.end, !dbg !14645

cond.false:                                       ; preds = %cond.true31
  %35 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring43 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %35, i32 0, i32 5, !dbg !14645
  %36 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring43 to i64, !dbg !14645
  %sub44 = sub i64 4096, %36, !dbg !14645
  %37 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %38 = ptrtoint %struct.xen_netif_tx_sring* %37 to i64, !dbg !14645
  %add45 = add i64 %sub44, %38, !dbg !14645
  %div46 = udiv i64 %add45, 12, !dbg !14645
  %shr47 = lshr i64 %div46, 16, !dbg !14645
  %shr48 = lshr i64 %shr47, 8, !dbg !14645
  %shr49 = lshr i64 %shr48, 4, !dbg !14645
  %shr50 = lshr i64 %shr49, 2, !dbg !14645
  %and51 = and i64 %shr50, 1, !dbg !14645
  br label %cond.end, !dbg !14645

cond.end:                                         ; preds = %cond.false, %cond.true42
  %cond = phi i64 [ 2, %cond.true42 ], [ %and51, %cond.false ], !dbg !14645
  %shl = shl i64 %cond, 2, !dbg !14645
  br label %cond.end74, !dbg !14645

cond.false52:                                     ; preds = %cond.true21
  %39 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring53 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %39, i32 0, i32 5, !dbg !14645
  %40 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring53 to i64, !dbg !14645
  %sub54 = sub i64 4096, %40, !dbg !14645
  %41 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %42 = ptrtoint %struct.xen_netif_tx_sring* %41 to i64, !dbg !14645
  %add55 = add i64 %sub54, %42, !dbg !14645
  %div56 = udiv i64 %add55, 12, !dbg !14645
  %shr57 = lshr i64 %div56, 16, !dbg !14645
  %shr58 = lshr i64 %shr57, 8, !dbg !14645
  %shr59 = lshr i64 %shr58, 4, !dbg !14645
  %and60 = and i64 %shr59, 2, !dbg !14645
  %tobool61 = icmp ne i64 %and60, 0, !dbg !14645
  br i1 %tobool61, label %cond.true62, label %cond.false63, !dbg !14645

cond.true62:                                      ; preds = %cond.false52
  br label %cond.end72, !dbg !14645

cond.false63:                                     ; preds = %cond.false52
  %43 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring64 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %43, i32 0, i32 5, !dbg !14645
  %44 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring64 to i64, !dbg !14645
  %sub65 = sub i64 4096, %44, !dbg !14645
  %45 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %46 = ptrtoint %struct.xen_netif_tx_sring* %45 to i64, !dbg !14645
  %add66 = add i64 %sub65, %46, !dbg !14645
  %div67 = udiv i64 %add66, 12, !dbg !14645
  %shr68 = lshr i64 %div67, 16, !dbg !14645
  %shr69 = lshr i64 %shr68, 8, !dbg !14645
  %shr70 = lshr i64 %shr69, 4, !dbg !14645
  %and71 = and i64 %shr70, 1, !dbg !14645
  br label %cond.end72, !dbg !14645

cond.end72:                                       ; preds = %cond.false63, %cond.true62
  %cond73 = phi i64 [ 2, %cond.true62 ], [ %and71, %cond.false63 ], !dbg !14645
  br label %cond.end74, !dbg !14645

cond.end74:                                       ; preds = %cond.end72, %cond.end
  %cond75 = phi i64 [ %shl, %cond.end ], [ %cond73, %cond.end72 ], !dbg !14645
  %shl76 = shl i64 %cond75, 4, !dbg !14645
  br label %cond.end131, !dbg !14645

cond.false77:                                     ; preds = %cond.true12
  %47 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring78 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %47, i32 0, i32 5, !dbg !14645
  %48 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring78 to i64, !dbg !14645
  %sub79 = sub i64 4096, %48, !dbg !14645
  %49 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %50 = ptrtoint %struct.xen_netif_tx_sring* %49 to i64, !dbg !14645
  %add80 = add i64 %sub79, %50, !dbg !14645
  %div81 = udiv i64 %add80, 12, !dbg !14645
  %shr82 = lshr i64 %div81, 16, !dbg !14645
  %shr83 = lshr i64 %shr82, 8, !dbg !14645
  %and84 = and i64 %shr83, 12, !dbg !14645
  %tobool85 = icmp ne i64 %and84, 0, !dbg !14645
  br i1 %tobool85, label %cond.true86, label %cond.false109, !dbg !14645

cond.true86:                                      ; preds = %cond.false77
  %51 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring87 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %51, i32 0, i32 5, !dbg !14645
  %52 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring87 to i64, !dbg !14645
  %sub88 = sub i64 4096, %52, !dbg !14645
  %53 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %54 = ptrtoint %struct.xen_netif_tx_sring* %53 to i64, !dbg !14645
  %add89 = add i64 %sub88, %54, !dbg !14645
  %div90 = udiv i64 %add89, 12, !dbg !14645
  %shr91 = lshr i64 %div90, 16, !dbg !14645
  %shr92 = lshr i64 %shr91, 8, !dbg !14645
  %shr93 = lshr i64 %shr92, 2, !dbg !14645
  %and94 = and i64 %shr93, 2, !dbg !14645
  %tobool95 = icmp ne i64 %and94, 0, !dbg !14645
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !14645

cond.true96:                                      ; preds = %cond.true86
  br label %cond.end106, !dbg !14645

cond.false97:                                     ; preds = %cond.true86
  %55 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring98 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %55, i32 0, i32 5, !dbg !14645
  %56 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring98 to i64, !dbg !14645
  %sub99 = sub i64 4096, %56, !dbg !14645
  %57 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %58 = ptrtoint %struct.xen_netif_tx_sring* %57 to i64, !dbg !14645
  %add100 = add i64 %sub99, %58, !dbg !14645
  %div101 = udiv i64 %add100, 12, !dbg !14645
  %shr102 = lshr i64 %div101, 16, !dbg !14645
  %shr103 = lshr i64 %shr102, 8, !dbg !14645
  %shr104 = lshr i64 %shr103, 2, !dbg !14645
  %and105 = and i64 %shr104, 1, !dbg !14645
  br label %cond.end106, !dbg !14645

cond.end106:                                      ; preds = %cond.false97, %cond.true96
  %cond107 = phi i64 [ 2, %cond.true96 ], [ %and105, %cond.false97 ], !dbg !14645
  %shl108 = shl i64 %cond107, 2, !dbg !14645
  br label %cond.end129, !dbg !14645

cond.false109:                                    ; preds = %cond.false77
  %59 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring110 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %59, i32 0, i32 5, !dbg !14645
  %60 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring110 to i64, !dbg !14645
  %sub111 = sub i64 4096, %60, !dbg !14645
  %61 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %62 = ptrtoint %struct.xen_netif_tx_sring* %61 to i64, !dbg !14645
  %add112 = add i64 %sub111, %62, !dbg !14645
  %div113 = udiv i64 %add112, 12, !dbg !14645
  %shr114 = lshr i64 %div113, 16, !dbg !14645
  %shr115 = lshr i64 %shr114, 8, !dbg !14645
  %and116 = and i64 %shr115, 2, !dbg !14645
  %tobool117 = icmp ne i64 %and116, 0, !dbg !14645
  br i1 %tobool117, label %cond.true118, label %cond.false119, !dbg !14645

cond.true118:                                     ; preds = %cond.false109
  br label %cond.end127, !dbg !14645

cond.false119:                                    ; preds = %cond.false109
  %63 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring120 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %63, i32 0, i32 5, !dbg !14645
  %64 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring120 to i64, !dbg !14645
  %sub121 = sub i64 4096, %64, !dbg !14645
  %65 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %66 = ptrtoint %struct.xen_netif_tx_sring* %65 to i64, !dbg !14645
  %add122 = add i64 %sub121, %66, !dbg !14645
  %div123 = udiv i64 %add122, 12, !dbg !14645
  %shr124 = lshr i64 %div123, 16, !dbg !14645
  %shr125 = lshr i64 %shr124, 8, !dbg !14645
  %and126 = and i64 %shr125, 1, !dbg !14645
  br label %cond.end127, !dbg !14645

cond.end127:                                      ; preds = %cond.false119, %cond.true118
  %cond128 = phi i64 [ 2, %cond.true118 ], [ %and126, %cond.false119 ], !dbg !14645
  br label %cond.end129, !dbg !14645

cond.end129:                                      ; preds = %cond.end127, %cond.end106
  %cond130 = phi i64 [ %shl108, %cond.end106 ], [ %cond128, %cond.end127 ], !dbg !14645
  br label %cond.end131, !dbg !14645

cond.end131:                                      ; preds = %cond.end129, %cond.end74
  %cond132 = phi i64 [ %shl76, %cond.end74 ], [ %cond130, %cond.end129 ], !dbg !14645
  %shl133 = shl i64 %cond132, 8, !dbg !14645
  br label %cond.end248, !dbg !14645

cond.false134:                                    ; preds = %cond.true
  %67 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring135 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %67, i32 0, i32 5, !dbg !14645
  %68 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring135 to i64, !dbg !14645
  %sub136 = sub i64 4096, %68, !dbg !14645
  %69 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %70 = ptrtoint %struct.xen_netif_tx_sring* %69 to i64, !dbg !14645
  %add137 = add i64 %sub136, %70, !dbg !14645
  %div138 = udiv i64 %add137, 12, !dbg !14645
  %shr139 = lshr i64 %div138, 16, !dbg !14645
  %and140 = and i64 %shr139, 240, !dbg !14645
  %tobool141 = icmp ne i64 %and140, 0, !dbg !14645
  br i1 %tobool141, label %cond.true142, label %cond.false197, !dbg !14645

cond.true142:                                     ; preds = %cond.false134
  %71 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring143 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %71, i32 0, i32 5, !dbg !14645
  %72 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring143 to i64, !dbg !14645
  %sub144 = sub i64 4096, %72, !dbg !14645
  %73 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %74 = ptrtoint %struct.xen_netif_tx_sring* %73 to i64, !dbg !14645
  %add145 = add i64 %sub144, %74, !dbg !14645
  %div146 = udiv i64 %add145, 12, !dbg !14645
  %shr147 = lshr i64 %div146, 16, !dbg !14645
  %shr148 = lshr i64 %shr147, 4, !dbg !14645
  %and149 = and i64 %shr148, 12, !dbg !14645
  %tobool150 = icmp ne i64 %and149, 0, !dbg !14645
  br i1 %tobool150, label %cond.true151, label %cond.false174, !dbg !14645

cond.true151:                                     ; preds = %cond.true142
  %75 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring152 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %75, i32 0, i32 5, !dbg !14645
  %76 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring152 to i64, !dbg !14645
  %sub153 = sub i64 4096, %76, !dbg !14645
  %77 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %78 = ptrtoint %struct.xen_netif_tx_sring* %77 to i64, !dbg !14645
  %add154 = add i64 %sub153, %78, !dbg !14645
  %div155 = udiv i64 %add154, 12, !dbg !14645
  %shr156 = lshr i64 %div155, 16, !dbg !14645
  %shr157 = lshr i64 %shr156, 4, !dbg !14645
  %shr158 = lshr i64 %shr157, 2, !dbg !14645
  %and159 = and i64 %shr158, 2, !dbg !14645
  %tobool160 = icmp ne i64 %and159, 0, !dbg !14645
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !14645

cond.true161:                                     ; preds = %cond.true151
  br label %cond.end171, !dbg !14645

cond.false162:                                    ; preds = %cond.true151
  %79 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring163 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %79, i32 0, i32 5, !dbg !14645
  %80 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring163 to i64, !dbg !14645
  %sub164 = sub i64 4096, %80, !dbg !14645
  %81 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %82 = ptrtoint %struct.xen_netif_tx_sring* %81 to i64, !dbg !14645
  %add165 = add i64 %sub164, %82, !dbg !14645
  %div166 = udiv i64 %add165, 12, !dbg !14645
  %shr167 = lshr i64 %div166, 16, !dbg !14645
  %shr168 = lshr i64 %shr167, 4, !dbg !14645
  %shr169 = lshr i64 %shr168, 2, !dbg !14645
  %and170 = and i64 %shr169, 1, !dbg !14645
  br label %cond.end171, !dbg !14645

cond.end171:                                      ; preds = %cond.false162, %cond.true161
  %cond172 = phi i64 [ 2, %cond.true161 ], [ %and170, %cond.false162 ], !dbg !14645
  %shl173 = shl i64 %cond172, 2, !dbg !14645
  br label %cond.end194, !dbg !14645

cond.false174:                                    ; preds = %cond.true142
  %83 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring175 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %83, i32 0, i32 5, !dbg !14645
  %84 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring175 to i64, !dbg !14645
  %sub176 = sub i64 4096, %84, !dbg !14645
  %85 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %86 = ptrtoint %struct.xen_netif_tx_sring* %85 to i64, !dbg !14645
  %add177 = add i64 %sub176, %86, !dbg !14645
  %div178 = udiv i64 %add177, 12, !dbg !14645
  %shr179 = lshr i64 %div178, 16, !dbg !14645
  %shr180 = lshr i64 %shr179, 4, !dbg !14645
  %and181 = and i64 %shr180, 2, !dbg !14645
  %tobool182 = icmp ne i64 %and181, 0, !dbg !14645
  br i1 %tobool182, label %cond.true183, label %cond.false184, !dbg !14645

cond.true183:                                     ; preds = %cond.false174
  br label %cond.end192, !dbg !14645

cond.false184:                                    ; preds = %cond.false174
  %87 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring185 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %87, i32 0, i32 5, !dbg !14645
  %88 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring185 to i64, !dbg !14645
  %sub186 = sub i64 4096, %88, !dbg !14645
  %89 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %90 = ptrtoint %struct.xen_netif_tx_sring* %89 to i64, !dbg !14645
  %add187 = add i64 %sub186, %90, !dbg !14645
  %div188 = udiv i64 %add187, 12, !dbg !14645
  %shr189 = lshr i64 %div188, 16, !dbg !14645
  %shr190 = lshr i64 %shr189, 4, !dbg !14645
  %and191 = and i64 %shr190, 1, !dbg !14645
  br label %cond.end192, !dbg !14645

cond.end192:                                      ; preds = %cond.false184, %cond.true183
  %cond193 = phi i64 [ 2, %cond.true183 ], [ %and191, %cond.false184 ], !dbg !14645
  br label %cond.end194, !dbg !14645

cond.end194:                                      ; preds = %cond.end192, %cond.end171
  %cond195 = phi i64 [ %shl173, %cond.end171 ], [ %cond193, %cond.end192 ], !dbg !14645
  %shl196 = shl i64 %cond195, 4, !dbg !14645
  br label %cond.end246, !dbg !14645

cond.false197:                                    ; preds = %cond.false134
  %91 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring198 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %91, i32 0, i32 5, !dbg !14645
  %92 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring198 to i64, !dbg !14645
  %sub199 = sub i64 4096, %92, !dbg !14645
  %93 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %94 = ptrtoint %struct.xen_netif_tx_sring* %93 to i64, !dbg !14645
  %add200 = add i64 %sub199, %94, !dbg !14645
  %div201 = udiv i64 %add200, 12, !dbg !14645
  %shr202 = lshr i64 %div201, 16, !dbg !14645
  %and203 = and i64 %shr202, 12, !dbg !14645
  %tobool204 = icmp ne i64 %and203, 0, !dbg !14645
  br i1 %tobool204, label %cond.true205, label %cond.false226, !dbg !14645

cond.true205:                                     ; preds = %cond.false197
  %95 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring206 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %95, i32 0, i32 5, !dbg !14645
  %96 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring206 to i64, !dbg !14645
  %sub207 = sub i64 4096, %96, !dbg !14645
  %97 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %98 = ptrtoint %struct.xen_netif_tx_sring* %97 to i64, !dbg !14645
  %add208 = add i64 %sub207, %98, !dbg !14645
  %div209 = udiv i64 %add208, 12, !dbg !14645
  %shr210 = lshr i64 %div209, 16, !dbg !14645
  %shr211 = lshr i64 %shr210, 2, !dbg !14645
  %and212 = and i64 %shr211, 2, !dbg !14645
  %tobool213 = icmp ne i64 %and212, 0, !dbg !14645
  br i1 %tobool213, label %cond.true214, label %cond.false215, !dbg !14645

cond.true214:                                     ; preds = %cond.true205
  br label %cond.end223, !dbg !14645

cond.false215:                                    ; preds = %cond.true205
  %99 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring216 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %99, i32 0, i32 5, !dbg !14645
  %100 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring216 to i64, !dbg !14645
  %sub217 = sub i64 4096, %100, !dbg !14645
  %101 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %102 = ptrtoint %struct.xen_netif_tx_sring* %101 to i64, !dbg !14645
  %add218 = add i64 %sub217, %102, !dbg !14645
  %div219 = udiv i64 %add218, 12, !dbg !14645
  %shr220 = lshr i64 %div219, 16, !dbg !14645
  %shr221 = lshr i64 %shr220, 2, !dbg !14645
  %and222 = and i64 %shr221, 1, !dbg !14645
  br label %cond.end223, !dbg !14645

cond.end223:                                      ; preds = %cond.false215, %cond.true214
  %cond224 = phi i64 [ 2, %cond.true214 ], [ %and222, %cond.false215 ], !dbg !14645
  %shl225 = shl i64 %cond224, 2, !dbg !14645
  br label %cond.end244, !dbg !14645

cond.false226:                                    ; preds = %cond.false197
  %103 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring227 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %103, i32 0, i32 5, !dbg !14645
  %104 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring227 to i64, !dbg !14645
  %sub228 = sub i64 4096, %104, !dbg !14645
  %105 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %106 = ptrtoint %struct.xen_netif_tx_sring* %105 to i64, !dbg !14645
  %add229 = add i64 %sub228, %106, !dbg !14645
  %div230 = udiv i64 %add229, 12, !dbg !14645
  %shr231 = lshr i64 %div230, 16, !dbg !14645
  %and232 = and i64 %shr231, 2, !dbg !14645
  %tobool233 = icmp ne i64 %and232, 0, !dbg !14645
  br i1 %tobool233, label %cond.true234, label %cond.false235, !dbg !14645

cond.true234:                                     ; preds = %cond.false226
  br label %cond.end242, !dbg !14645

cond.false235:                                    ; preds = %cond.false226
  %107 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring236 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %107, i32 0, i32 5, !dbg !14645
  %108 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring236 to i64, !dbg !14645
  %sub237 = sub i64 4096, %108, !dbg !14645
  %109 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %110 = ptrtoint %struct.xen_netif_tx_sring* %109 to i64, !dbg !14645
  %add238 = add i64 %sub237, %110, !dbg !14645
  %div239 = udiv i64 %add238, 12, !dbg !14645
  %shr240 = lshr i64 %div239, 16, !dbg !14645
  %and241 = and i64 %shr240, 1, !dbg !14645
  br label %cond.end242, !dbg !14645

cond.end242:                                      ; preds = %cond.false235, %cond.true234
  %cond243 = phi i64 [ 2, %cond.true234 ], [ %and241, %cond.false235 ], !dbg !14645
  br label %cond.end244, !dbg !14645

cond.end244:                                      ; preds = %cond.end242, %cond.end223
  %cond245 = phi i64 [ %shl225, %cond.end223 ], [ %cond243, %cond.end242 ], !dbg !14645
  br label %cond.end246, !dbg !14645

cond.end246:                                      ; preds = %cond.end244, %cond.end194
  %cond247 = phi i64 [ %shl196, %cond.end194 ], [ %cond245, %cond.end244 ], !dbg !14645
  br label %cond.end248, !dbg !14645

cond.end248:                                      ; preds = %cond.end246, %cond.end131
  %cond249 = phi i64 [ %shl133, %cond.end131 ], [ %cond247, %cond.end246 ], !dbg !14645
  %shl250 = shl i64 %cond249, 16, !dbg !14645
  br label %cond.end478, !dbg !14645

cond.false251:                                    ; preds = %do.body2
  %111 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring252 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %111, i32 0, i32 5, !dbg !14645
  %112 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring252 to i64, !dbg !14645
  %sub253 = sub i64 4096, %112, !dbg !14645
  %113 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %114 = ptrtoint %struct.xen_netif_tx_sring* %113 to i64, !dbg !14645
  %add254 = add i64 %sub253, %114, !dbg !14645
  %div255 = udiv i64 %add254, 12, !dbg !14645
  %and256 = and i64 %div255, 65280, !dbg !14645
  %tobool257 = icmp ne i64 %and256, 0, !dbg !14645
  br i1 %tobool257, label %cond.true258, label %cond.false373, !dbg !14645

cond.true258:                                     ; preds = %cond.false251
  %115 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring259 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %115, i32 0, i32 5, !dbg !14645
  %116 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring259 to i64, !dbg !14645
  %sub260 = sub i64 4096, %116, !dbg !14645
  %117 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %118 = ptrtoint %struct.xen_netif_tx_sring* %117 to i64, !dbg !14645
  %add261 = add i64 %sub260, %118, !dbg !14645
  %div262 = udiv i64 %add261, 12, !dbg !14645
  %shr263 = lshr i64 %div262, 8, !dbg !14645
  %and264 = and i64 %shr263, 240, !dbg !14645
  %tobool265 = icmp ne i64 %and264, 0, !dbg !14645
  br i1 %tobool265, label %cond.true266, label %cond.false321, !dbg !14645

cond.true266:                                     ; preds = %cond.true258
  %119 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring267 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %119, i32 0, i32 5, !dbg !14645
  %120 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring267 to i64, !dbg !14645
  %sub268 = sub i64 4096, %120, !dbg !14645
  %121 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %122 = ptrtoint %struct.xen_netif_tx_sring* %121 to i64, !dbg !14645
  %add269 = add i64 %sub268, %122, !dbg !14645
  %div270 = udiv i64 %add269, 12, !dbg !14645
  %shr271 = lshr i64 %div270, 8, !dbg !14645
  %shr272 = lshr i64 %shr271, 4, !dbg !14645
  %and273 = and i64 %shr272, 12, !dbg !14645
  %tobool274 = icmp ne i64 %and273, 0, !dbg !14645
  br i1 %tobool274, label %cond.true275, label %cond.false298, !dbg !14645

cond.true275:                                     ; preds = %cond.true266
  %123 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring276 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %123, i32 0, i32 5, !dbg !14645
  %124 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring276 to i64, !dbg !14645
  %sub277 = sub i64 4096, %124, !dbg !14645
  %125 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %126 = ptrtoint %struct.xen_netif_tx_sring* %125 to i64, !dbg !14645
  %add278 = add i64 %sub277, %126, !dbg !14645
  %div279 = udiv i64 %add278, 12, !dbg !14645
  %shr280 = lshr i64 %div279, 8, !dbg !14645
  %shr281 = lshr i64 %shr280, 4, !dbg !14645
  %shr282 = lshr i64 %shr281, 2, !dbg !14645
  %and283 = and i64 %shr282, 2, !dbg !14645
  %tobool284 = icmp ne i64 %and283, 0, !dbg !14645
  br i1 %tobool284, label %cond.true285, label %cond.false286, !dbg !14645

cond.true285:                                     ; preds = %cond.true275
  br label %cond.end295, !dbg !14645

cond.false286:                                    ; preds = %cond.true275
  %127 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring287 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %127, i32 0, i32 5, !dbg !14645
  %128 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring287 to i64, !dbg !14645
  %sub288 = sub i64 4096, %128, !dbg !14645
  %129 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %130 = ptrtoint %struct.xen_netif_tx_sring* %129 to i64, !dbg !14645
  %add289 = add i64 %sub288, %130, !dbg !14645
  %div290 = udiv i64 %add289, 12, !dbg !14645
  %shr291 = lshr i64 %div290, 8, !dbg !14645
  %shr292 = lshr i64 %shr291, 4, !dbg !14645
  %shr293 = lshr i64 %shr292, 2, !dbg !14645
  %and294 = and i64 %shr293, 1, !dbg !14645
  br label %cond.end295, !dbg !14645

cond.end295:                                      ; preds = %cond.false286, %cond.true285
  %cond296 = phi i64 [ 2, %cond.true285 ], [ %and294, %cond.false286 ], !dbg !14645
  %shl297 = shl i64 %cond296, 2, !dbg !14645
  br label %cond.end318, !dbg !14645

cond.false298:                                    ; preds = %cond.true266
  %131 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring299 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %131, i32 0, i32 5, !dbg !14645
  %132 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring299 to i64, !dbg !14645
  %sub300 = sub i64 4096, %132, !dbg !14645
  %133 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %134 = ptrtoint %struct.xen_netif_tx_sring* %133 to i64, !dbg !14645
  %add301 = add i64 %sub300, %134, !dbg !14645
  %div302 = udiv i64 %add301, 12, !dbg !14645
  %shr303 = lshr i64 %div302, 8, !dbg !14645
  %shr304 = lshr i64 %shr303, 4, !dbg !14645
  %and305 = and i64 %shr304, 2, !dbg !14645
  %tobool306 = icmp ne i64 %and305, 0, !dbg !14645
  br i1 %tobool306, label %cond.true307, label %cond.false308, !dbg !14645

cond.true307:                                     ; preds = %cond.false298
  br label %cond.end316, !dbg !14645

cond.false308:                                    ; preds = %cond.false298
  %135 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring309 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %135, i32 0, i32 5, !dbg !14645
  %136 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring309 to i64, !dbg !14645
  %sub310 = sub i64 4096, %136, !dbg !14645
  %137 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %138 = ptrtoint %struct.xen_netif_tx_sring* %137 to i64, !dbg !14645
  %add311 = add i64 %sub310, %138, !dbg !14645
  %div312 = udiv i64 %add311, 12, !dbg !14645
  %shr313 = lshr i64 %div312, 8, !dbg !14645
  %shr314 = lshr i64 %shr313, 4, !dbg !14645
  %and315 = and i64 %shr314, 1, !dbg !14645
  br label %cond.end316, !dbg !14645

cond.end316:                                      ; preds = %cond.false308, %cond.true307
  %cond317 = phi i64 [ 2, %cond.true307 ], [ %and315, %cond.false308 ], !dbg !14645
  br label %cond.end318, !dbg !14645

cond.end318:                                      ; preds = %cond.end316, %cond.end295
  %cond319 = phi i64 [ %shl297, %cond.end295 ], [ %cond317, %cond.end316 ], !dbg !14645
  %shl320 = shl i64 %cond319, 4, !dbg !14645
  br label %cond.end370, !dbg !14645

cond.false321:                                    ; preds = %cond.true258
  %139 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring322 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %139, i32 0, i32 5, !dbg !14645
  %140 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring322 to i64, !dbg !14645
  %sub323 = sub i64 4096, %140, !dbg !14645
  %141 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %142 = ptrtoint %struct.xen_netif_tx_sring* %141 to i64, !dbg !14645
  %add324 = add i64 %sub323, %142, !dbg !14645
  %div325 = udiv i64 %add324, 12, !dbg !14645
  %shr326 = lshr i64 %div325, 8, !dbg !14645
  %and327 = and i64 %shr326, 12, !dbg !14645
  %tobool328 = icmp ne i64 %and327, 0, !dbg !14645
  br i1 %tobool328, label %cond.true329, label %cond.false350, !dbg !14645

cond.true329:                                     ; preds = %cond.false321
  %143 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring330 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %143, i32 0, i32 5, !dbg !14645
  %144 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring330 to i64, !dbg !14645
  %sub331 = sub i64 4096, %144, !dbg !14645
  %145 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %146 = ptrtoint %struct.xen_netif_tx_sring* %145 to i64, !dbg !14645
  %add332 = add i64 %sub331, %146, !dbg !14645
  %div333 = udiv i64 %add332, 12, !dbg !14645
  %shr334 = lshr i64 %div333, 8, !dbg !14645
  %shr335 = lshr i64 %shr334, 2, !dbg !14645
  %and336 = and i64 %shr335, 2, !dbg !14645
  %tobool337 = icmp ne i64 %and336, 0, !dbg !14645
  br i1 %tobool337, label %cond.true338, label %cond.false339, !dbg !14645

cond.true338:                                     ; preds = %cond.true329
  br label %cond.end347, !dbg !14645

cond.false339:                                    ; preds = %cond.true329
  %147 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring340 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %147, i32 0, i32 5, !dbg !14645
  %148 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring340 to i64, !dbg !14645
  %sub341 = sub i64 4096, %148, !dbg !14645
  %149 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %150 = ptrtoint %struct.xen_netif_tx_sring* %149 to i64, !dbg !14645
  %add342 = add i64 %sub341, %150, !dbg !14645
  %div343 = udiv i64 %add342, 12, !dbg !14645
  %shr344 = lshr i64 %div343, 8, !dbg !14645
  %shr345 = lshr i64 %shr344, 2, !dbg !14645
  %and346 = and i64 %shr345, 1, !dbg !14645
  br label %cond.end347, !dbg !14645

cond.end347:                                      ; preds = %cond.false339, %cond.true338
  %cond348 = phi i64 [ 2, %cond.true338 ], [ %and346, %cond.false339 ], !dbg !14645
  %shl349 = shl i64 %cond348, 2, !dbg !14645
  br label %cond.end368, !dbg !14645

cond.false350:                                    ; preds = %cond.false321
  %151 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring351 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %151, i32 0, i32 5, !dbg !14645
  %152 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring351 to i64, !dbg !14645
  %sub352 = sub i64 4096, %152, !dbg !14645
  %153 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %154 = ptrtoint %struct.xen_netif_tx_sring* %153 to i64, !dbg !14645
  %add353 = add i64 %sub352, %154, !dbg !14645
  %div354 = udiv i64 %add353, 12, !dbg !14645
  %shr355 = lshr i64 %div354, 8, !dbg !14645
  %and356 = and i64 %shr355, 2, !dbg !14645
  %tobool357 = icmp ne i64 %and356, 0, !dbg !14645
  br i1 %tobool357, label %cond.true358, label %cond.false359, !dbg !14645

cond.true358:                                     ; preds = %cond.false350
  br label %cond.end366, !dbg !14645

cond.false359:                                    ; preds = %cond.false350
  %155 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring360 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %155, i32 0, i32 5, !dbg !14645
  %156 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring360 to i64, !dbg !14645
  %sub361 = sub i64 4096, %156, !dbg !14645
  %157 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %158 = ptrtoint %struct.xen_netif_tx_sring* %157 to i64, !dbg !14645
  %add362 = add i64 %sub361, %158, !dbg !14645
  %div363 = udiv i64 %add362, 12, !dbg !14645
  %shr364 = lshr i64 %div363, 8, !dbg !14645
  %and365 = and i64 %shr364, 1, !dbg !14645
  br label %cond.end366, !dbg !14645

cond.end366:                                      ; preds = %cond.false359, %cond.true358
  %cond367 = phi i64 [ 2, %cond.true358 ], [ %and365, %cond.false359 ], !dbg !14645
  br label %cond.end368, !dbg !14645

cond.end368:                                      ; preds = %cond.end366, %cond.end347
  %cond369 = phi i64 [ %shl349, %cond.end347 ], [ %cond367, %cond.end366 ], !dbg !14645
  br label %cond.end370, !dbg !14645

cond.end370:                                      ; preds = %cond.end368, %cond.end318
  %cond371 = phi i64 [ %shl320, %cond.end318 ], [ %cond369, %cond.end368 ], !dbg !14645
  %shl372 = shl i64 %cond371, 8, !dbg !14645
  br label %cond.end476, !dbg !14645

cond.false373:                                    ; preds = %cond.false251
  %159 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring374 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %159, i32 0, i32 5, !dbg !14645
  %160 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring374 to i64, !dbg !14645
  %sub375 = sub i64 4096, %160, !dbg !14645
  %161 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %162 = ptrtoint %struct.xen_netif_tx_sring* %161 to i64, !dbg !14645
  %add376 = add i64 %sub375, %162, !dbg !14645
  %div377 = udiv i64 %add376, 12, !dbg !14645
  %and378 = and i64 %div377, 240, !dbg !14645
  %tobool379 = icmp ne i64 %and378, 0, !dbg !14645
  br i1 %tobool379, label %cond.true380, label %cond.false430, !dbg !14645

cond.true380:                                     ; preds = %cond.false373
  %163 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring381 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %163, i32 0, i32 5, !dbg !14645
  %164 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring381 to i64, !dbg !14645
  %sub382 = sub i64 4096, %164, !dbg !14645
  %165 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %166 = ptrtoint %struct.xen_netif_tx_sring* %165 to i64, !dbg !14645
  %add383 = add i64 %sub382, %166, !dbg !14645
  %div384 = udiv i64 %add383, 12, !dbg !14645
  %shr385 = lshr i64 %div384, 4, !dbg !14645
  %and386 = and i64 %shr385, 12, !dbg !14645
  %tobool387 = icmp ne i64 %and386, 0, !dbg !14645
  br i1 %tobool387, label %cond.true388, label %cond.false409, !dbg !14645

cond.true388:                                     ; preds = %cond.true380
  %167 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring389 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %167, i32 0, i32 5, !dbg !14645
  %168 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring389 to i64, !dbg !14645
  %sub390 = sub i64 4096, %168, !dbg !14645
  %169 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %170 = ptrtoint %struct.xen_netif_tx_sring* %169 to i64, !dbg !14645
  %add391 = add i64 %sub390, %170, !dbg !14645
  %div392 = udiv i64 %add391, 12, !dbg !14645
  %shr393 = lshr i64 %div392, 4, !dbg !14645
  %shr394 = lshr i64 %shr393, 2, !dbg !14645
  %and395 = and i64 %shr394, 2, !dbg !14645
  %tobool396 = icmp ne i64 %and395, 0, !dbg !14645
  br i1 %tobool396, label %cond.true397, label %cond.false398, !dbg !14645

cond.true397:                                     ; preds = %cond.true388
  br label %cond.end406, !dbg !14645

cond.false398:                                    ; preds = %cond.true388
  %171 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring399 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %171, i32 0, i32 5, !dbg !14645
  %172 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring399 to i64, !dbg !14645
  %sub400 = sub i64 4096, %172, !dbg !14645
  %173 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %174 = ptrtoint %struct.xen_netif_tx_sring* %173 to i64, !dbg !14645
  %add401 = add i64 %sub400, %174, !dbg !14645
  %div402 = udiv i64 %add401, 12, !dbg !14645
  %shr403 = lshr i64 %div402, 4, !dbg !14645
  %shr404 = lshr i64 %shr403, 2, !dbg !14645
  %and405 = and i64 %shr404, 1, !dbg !14645
  br label %cond.end406, !dbg !14645

cond.end406:                                      ; preds = %cond.false398, %cond.true397
  %cond407 = phi i64 [ 2, %cond.true397 ], [ %and405, %cond.false398 ], !dbg !14645
  %shl408 = shl i64 %cond407, 2, !dbg !14645
  br label %cond.end427, !dbg !14645

cond.false409:                                    ; preds = %cond.true380
  %175 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring410 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %175, i32 0, i32 5, !dbg !14645
  %176 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring410 to i64, !dbg !14645
  %sub411 = sub i64 4096, %176, !dbg !14645
  %177 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %178 = ptrtoint %struct.xen_netif_tx_sring* %177 to i64, !dbg !14645
  %add412 = add i64 %sub411, %178, !dbg !14645
  %div413 = udiv i64 %add412, 12, !dbg !14645
  %shr414 = lshr i64 %div413, 4, !dbg !14645
  %and415 = and i64 %shr414, 2, !dbg !14645
  %tobool416 = icmp ne i64 %and415, 0, !dbg !14645
  br i1 %tobool416, label %cond.true417, label %cond.false418, !dbg !14645

cond.true417:                                     ; preds = %cond.false409
  br label %cond.end425, !dbg !14645

cond.false418:                                    ; preds = %cond.false409
  %179 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring419 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %179, i32 0, i32 5, !dbg !14645
  %180 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring419 to i64, !dbg !14645
  %sub420 = sub i64 4096, %180, !dbg !14645
  %181 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %182 = ptrtoint %struct.xen_netif_tx_sring* %181 to i64, !dbg !14645
  %add421 = add i64 %sub420, %182, !dbg !14645
  %div422 = udiv i64 %add421, 12, !dbg !14645
  %shr423 = lshr i64 %div422, 4, !dbg !14645
  %and424 = and i64 %shr423, 1, !dbg !14645
  br label %cond.end425, !dbg !14645

cond.end425:                                      ; preds = %cond.false418, %cond.true417
  %cond426 = phi i64 [ 2, %cond.true417 ], [ %and424, %cond.false418 ], !dbg !14645
  br label %cond.end427, !dbg !14645

cond.end427:                                      ; preds = %cond.end425, %cond.end406
  %cond428 = phi i64 [ %shl408, %cond.end406 ], [ %cond426, %cond.end425 ], !dbg !14645
  %shl429 = shl i64 %cond428, 4, !dbg !14645
  br label %cond.end474, !dbg !14645

cond.false430:                                    ; preds = %cond.false373
  %183 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring431 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %183, i32 0, i32 5, !dbg !14645
  %184 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring431 to i64, !dbg !14645
  %sub432 = sub i64 4096, %184, !dbg !14645
  %185 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %186 = ptrtoint %struct.xen_netif_tx_sring* %185 to i64, !dbg !14645
  %add433 = add i64 %sub432, %186, !dbg !14645
  %div434 = udiv i64 %add433, 12, !dbg !14645
  %and435 = and i64 %div434, 12, !dbg !14645
  %tobool436 = icmp ne i64 %and435, 0, !dbg !14645
  br i1 %tobool436, label %cond.true437, label %cond.false456, !dbg !14645

cond.true437:                                     ; preds = %cond.false430
  %187 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring438 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %187, i32 0, i32 5, !dbg !14645
  %188 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring438 to i64, !dbg !14645
  %sub439 = sub i64 4096, %188, !dbg !14645
  %189 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %190 = ptrtoint %struct.xen_netif_tx_sring* %189 to i64, !dbg !14645
  %add440 = add i64 %sub439, %190, !dbg !14645
  %div441 = udiv i64 %add440, 12, !dbg !14645
  %shr442 = lshr i64 %div441, 2, !dbg !14645
  %and443 = and i64 %shr442, 2, !dbg !14645
  %tobool444 = icmp ne i64 %and443, 0, !dbg !14645
  br i1 %tobool444, label %cond.true445, label %cond.false446, !dbg !14645

cond.true445:                                     ; preds = %cond.true437
  br label %cond.end453, !dbg !14645

cond.false446:                                    ; preds = %cond.true437
  %191 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring447 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %191, i32 0, i32 5, !dbg !14645
  %192 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring447 to i64, !dbg !14645
  %sub448 = sub i64 4096, %192, !dbg !14645
  %193 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %194 = ptrtoint %struct.xen_netif_tx_sring* %193 to i64, !dbg !14645
  %add449 = add i64 %sub448, %194, !dbg !14645
  %div450 = udiv i64 %add449, 12, !dbg !14645
  %shr451 = lshr i64 %div450, 2, !dbg !14645
  %and452 = and i64 %shr451, 1, !dbg !14645
  br label %cond.end453, !dbg !14645

cond.end453:                                      ; preds = %cond.false446, %cond.true445
  %cond454 = phi i64 [ 2, %cond.true445 ], [ %and452, %cond.false446 ], !dbg !14645
  %shl455 = shl i64 %cond454, 2, !dbg !14645
  br label %cond.end472, !dbg !14645

cond.false456:                                    ; preds = %cond.false430
  %195 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring457 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %195, i32 0, i32 5, !dbg !14645
  %196 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring457 to i64, !dbg !14645
  %sub458 = sub i64 4096, %196, !dbg !14645
  %197 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %198 = ptrtoint %struct.xen_netif_tx_sring* %197 to i64, !dbg !14645
  %add459 = add i64 %sub458, %198, !dbg !14645
  %div460 = udiv i64 %add459, 12, !dbg !14645
  %and461 = and i64 %div460, 2, !dbg !14645
  %tobool462 = icmp ne i64 %and461, 0, !dbg !14645
  br i1 %tobool462, label %cond.true463, label %cond.false464, !dbg !14645

cond.true463:                                     ; preds = %cond.false456
  br label %cond.end470, !dbg !14645

cond.false464:                                    ; preds = %cond.false456
  %199 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %ring465 = getelementptr inbounds %struct.xen_netif_tx_sring, %struct.xen_netif_tx_sring* %199, i32 0, i32 5, !dbg !14645
  %200 = ptrtoint [1 x %union.xen_netif_tx_sring_entry]* %ring465 to i64, !dbg !14645
  %sub466 = sub i64 4096, %200, !dbg !14645
  %201 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %202 = ptrtoint %struct.xen_netif_tx_sring* %201 to i64, !dbg !14645
  %add467 = add i64 %sub466, %202, !dbg !14645
  %div468 = udiv i64 %add467, 12, !dbg !14645
  %and469 = and i64 %div468, 1, !dbg !14645
  br label %cond.end470, !dbg !14645

cond.end470:                                      ; preds = %cond.false464, %cond.true463
  %cond471 = phi i64 [ 2, %cond.true463 ], [ %and469, %cond.false464 ], !dbg !14645
  br label %cond.end472, !dbg !14645

cond.end472:                                      ; preds = %cond.end470, %cond.end453
  %cond473 = phi i64 [ %shl455, %cond.end453 ], [ %cond471, %cond.end470 ], !dbg !14645
  br label %cond.end474, !dbg !14645

cond.end474:                                      ; preds = %cond.end472, %cond.end427
  %cond475 = phi i64 [ %shl429, %cond.end427 ], [ %cond473, %cond.end472 ], !dbg !14645
  br label %cond.end476, !dbg !14645

cond.end476:                                      ; preds = %cond.end474, %cond.end370
  %cond477 = phi i64 [ %shl372, %cond.end370 ], [ %cond475, %cond.end474 ], !dbg !14645
  br label %cond.end478, !dbg !14645

cond.end478:                                      ; preds = %cond.end476, %cond.end248
  %cond479 = phi i64 [ %shl250, %cond.end248 ], [ %cond477, %cond.end476 ], !dbg !14645
  %conv = trunc i64 %cond479 to i32, !dbg !14645
  %203 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14645
  %tx480 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %203, i32 0, i32 12, !dbg !14645
  %nr_ents = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx480, i32 0, i32 2, !dbg !14645
  store i32 %conv, i32* %nr_ents, align 8, !dbg !14645
  %204 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14645
  %205 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14645
  %tx481 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %205, i32 0, i32 12, !dbg !14645
  %sring482 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx481, i32 0, i32 3, !dbg !14645
  store %struct.xen_netif_tx_sring* %204, %struct.xen_netif_tx_sring** %sring482, align 8, !dbg !14645
  br label %do.end483, !dbg !14645

do.end483:                                        ; preds = %cond.end478
  %206 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14647
  %207 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14648
  %208 = bitcast %struct.xen_netif_tx_sring* %207 to i8*, !dbg !14648
  %call484 = call i32 @xenbus_grant_ring(%struct.xenbus_device* %206, i8* %208, i32 1, i32* %gref) #12, !dbg !14649
  store i32 %call484, i32* %err, align 4, !dbg !14650
  %209 = load i32, i32* %err, align 4, !dbg !14651
  %cmp = icmp slt i32 %209, 0, !dbg !14653
  br i1 %cmp, label %if.then486, label %if.end487, !dbg !14654

if.then486:                                       ; preds = %do.end483
  br label %grant_tx_ring_fail, !dbg !14655

if.end487:                                        ; preds = %do.end483
  %210 = load i32, i32* %gref, align 4, !dbg !14656
  %211 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14657
  %tx_ring_ref488 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %211, i32 0, i32 13, !dbg !14658
  store i32 %210, i32* %tx_ring_ref488, align 16, !dbg !14659
  %call489 = call i64 @get_zeroed_page(i32 3104) #12, !dbg !14660
  %212 = inttoptr i64 %call489 to %struct.xen_netif_rx_sring*, !dbg !14661
  store %struct.xen_netif_rx_sring* %212, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14662
  %213 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14663
  %tobool490 = icmp ne %struct.xen_netif_rx_sring* %213, null, !dbg !14663
  br i1 %tobool490, label %if.end492, label %if.then491, !dbg !14665

if.then491:                                       ; preds = %if.end487
  store i32 -12, i32* %err, align 4, !dbg !14666
  %214 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14668
  %215 = load i32, i32* %err, align 4, !dbg !14669
  call void (%struct.xenbus_device*, i32, i8*, ...) @xenbus_dev_fatal(%struct.xenbus_device* %214, i32 %215, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !14670
  br label %alloc_rx_ring_fail, !dbg !14671

if.end492:                                        ; preds = %if.end487
  br label %do.body493, !dbg !14672

do.body493:                                       ; preds = %if.end492
  %216 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14673
  %rsp_prod494 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %216, i32 0, i32 2, !dbg !14673
  store i32 0, i32* %rsp_prod494, align 4, !dbg !14673
  %217 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14673
  %req_prod495 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %217, i32 0, i32 0, !dbg !14673
  store i32 0, i32* %req_prod495, align 4, !dbg !14673
  %218 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14673
  %rsp_event496 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %218, i32 0, i32 3, !dbg !14673
  store i32 1, i32* %rsp_event496, align 4, !dbg !14673
  %219 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14673
  %req_event497 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %219, i32 0, i32 1, !dbg !14673
  store i32 1, i32* %req_event497, align 4, !dbg !14673
  %220 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14673
  %pad498 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %220, i32 0, i32 4, !dbg !14673
  %arraydecay499 = getelementptr inbounds [48 x i8], [48 x i8]* %pad498, i64 0, i64 0, !dbg !14673
  call void @llvm.memset.p0i8.i64(i8* align 4 %arraydecay499, i8 0, i64 48, i1 false), !dbg !14673
  br label %do.end500, !dbg !14673

do.end500:                                        ; preds = %do.body493
  br label %do.body501, !dbg !14675

do.body501:                                       ; preds = %do.end500
  %221 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14676
  %rx502 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %221, i32 0, i32 20, !dbg !14676
  %req_prod_pvt503 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx502, i32 0, i32 0, !dbg !14676
  store i32 0, i32* %req_prod_pvt503, align 8, !dbg !14676
  %222 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14676
  %rx504 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %222, i32 0, i32 20, !dbg !14676
  %rsp_cons505 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx504, i32 0, i32 1, !dbg !14676
  store i32 0, i32* %rsp_cons505, align 4, !dbg !14676
  %223 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring506 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %223, i32 0, i32 5, !dbg !14676
  %224 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring506 to i64, !dbg !14676
  %sub507 = sub i64 4096, %224, !dbg !14676
  %225 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %226 = ptrtoint %struct.xen_netif_rx_sring* %225 to i64, !dbg !14676
  %add508 = add i64 %sub507, %226, !dbg !14676
  %div509 = udiv i64 %add508, 8, !dbg !14676
  %and510 = and i64 %div509, 4294901760, !dbg !14676
  %tobool511 = icmp ne i64 %and510, 0, !dbg !14676
  br i1 %tobool511, label %cond.true512, label %cond.false763, !dbg !14676

cond.true512:                                     ; preds = %do.body501
  %227 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring513 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %227, i32 0, i32 5, !dbg !14676
  %228 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring513 to i64, !dbg !14676
  %sub514 = sub i64 4096, %228, !dbg !14676
  %229 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %230 = ptrtoint %struct.xen_netif_rx_sring* %229 to i64, !dbg !14676
  %add515 = add i64 %sub514, %230, !dbg !14676
  %div516 = udiv i64 %add515, 8, !dbg !14676
  %shr517 = lshr i64 %div516, 16, !dbg !14676
  %and518 = and i64 %shr517, 65280, !dbg !14676
  %tobool519 = icmp ne i64 %and518, 0, !dbg !14676
  br i1 %tobool519, label %cond.true520, label %cond.false646, !dbg !14676

cond.true520:                                     ; preds = %cond.true512
  %231 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring521 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %231, i32 0, i32 5, !dbg !14676
  %232 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring521 to i64, !dbg !14676
  %sub522 = sub i64 4096, %232, !dbg !14676
  %233 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %234 = ptrtoint %struct.xen_netif_rx_sring* %233 to i64, !dbg !14676
  %add523 = add i64 %sub522, %234, !dbg !14676
  %div524 = udiv i64 %add523, 8, !dbg !14676
  %shr525 = lshr i64 %div524, 16, !dbg !14676
  %shr526 = lshr i64 %shr525, 8, !dbg !14676
  %and527 = and i64 %shr526, 240, !dbg !14676
  %tobool528 = icmp ne i64 %and527, 0, !dbg !14676
  br i1 %tobool528, label %cond.true529, label %cond.false589, !dbg !14676

cond.true529:                                     ; preds = %cond.true520
  %235 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring530 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %235, i32 0, i32 5, !dbg !14676
  %236 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring530 to i64, !dbg !14676
  %sub531 = sub i64 4096, %236, !dbg !14676
  %237 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %238 = ptrtoint %struct.xen_netif_rx_sring* %237 to i64, !dbg !14676
  %add532 = add i64 %sub531, %238, !dbg !14676
  %div533 = udiv i64 %add532, 8, !dbg !14676
  %shr534 = lshr i64 %div533, 16, !dbg !14676
  %shr535 = lshr i64 %shr534, 8, !dbg !14676
  %shr536 = lshr i64 %shr535, 4, !dbg !14676
  %and537 = and i64 %shr536, 12, !dbg !14676
  %tobool538 = icmp ne i64 %and537, 0, !dbg !14676
  br i1 %tobool538, label %cond.true539, label %cond.false564, !dbg !14676

cond.true539:                                     ; preds = %cond.true529
  %239 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring540 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %239, i32 0, i32 5, !dbg !14676
  %240 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring540 to i64, !dbg !14676
  %sub541 = sub i64 4096, %240, !dbg !14676
  %241 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %242 = ptrtoint %struct.xen_netif_rx_sring* %241 to i64, !dbg !14676
  %add542 = add i64 %sub541, %242, !dbg !14676
  %div543 = udiv i64 %add542, 8, !dbg !14676
  %shr544 = lshr i64 %div543, 16, !dbg !14676
  %shr545 = lshr i64 %shr544, 8, !dbg !14676
  %shr546 = lshr i64 %shr545, 4, !dbg !14676
  %shr547 = lshr i64 %shr546, 2, !dbg !14676
  %and548 = and i64 %shr547, 2, !dbg !14676
  %tobool549 = icmp ne i64 %and548, 0, !dbg !14676
  br i1 %tobool549, label %cond.true550, label %cond.false551, !dbg !14676

cond.true550:                                     ; preds = %cond.true539
  br label %cond.end561, !dbg !14676

cond.false551:                                    ; preds = %cond.true539
  %243 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring552 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %243, i32 0, i32 5, !dbg !14676
  %244 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring552 to i64, !dbg !14676
  %sub553 = sub i64 4096, %244, !dbg !14676
  %245 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %246 = ptrtoint %struct.xen_netif_rx_sring* %245 to i64, !dbg !14676
  %add554 = add i64 %sub553, %246, !dbg !14676
  %div555 = udiv i64 %add554, 8, !dbg !14676
  %shr556 = lshr i64 %div555, 16, !dbg !14676
  %shr557 = lshr i64 %shr556, 8, !dbg !14676
  %shr558 = lshr i64 %shr557, 4, !dbg !14676
  %shr559 = lshr i64 %shr558, 2, !dbg !14676
  %and560 = and i64 %shr559, 1, !dbg !14676
  br label %cond.end561, !dbg !14676

cond.end561:                                      ; preds = %cond.false551, %cond.true550
  %cond562 = phi i64 [ 2, %cond.true550 ], [ %and560, %cond.false551 ], !dbg !14676
  %shl563 = shl i64 %cond562, 2, !dbg !14676
  br label %cond.end586, !dbg !14676

cond.false564:                                    ; preds = %cond.true529
  %247 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring565 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %247, i32 0, i32 5, !dbg !14676
  %248 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring565 to i64, !dbg !14676
  %sub566 = sub i64 4096, %248, !dbg !14676
  %249 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %250 = ptrtoint %struct.xen_netif_rx_sring* %249 to i64, !dbg !14676
  %add567 = add i64 %sub566, %250, !dbg !14676
  %div568 = udiv i64 %add567, 8, !dbg !14676
  %shr569 = lshr i64 %div568, 16, !dbg !14676
  %shr570 = lshr i64 %shr569, 8, !dbg !14676
  %shr571 = lshr i64 %shr570, 4, !dbg !14676
  %and572 = and i64 %shr571, 2, !dbg !14676
  %tobool573 = icmp ne i64 %and572, 0, !dbg !14676
  br i1 %tobool573, label %cond.true574, label %cond.false575, !dbg !14676

cond.true574:                                     ; preds = %cond.false564
  br label %cond.end584, !dbg !14676

cond.false575:                                    ; preds = %cond.false564
  %251 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring576 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %251, i32 0, i32 5, !dbg !14676
  %252 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring576 to i64, !dbg !14676
  %sub577 = sub i64 4096, %252, !dbg !14676
  %253 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %254 = ptrtoint %struct.xen_netif_rx_sring* %253 to i64, !dbg !14676
  %add578 = add i64 %sub577, %254, !dbg !14676
  %div579 = udiv i64 %add578, 8, !dbg !14676
  %shr580 = lshr i64 %div579, 16, !dbg !14676
  %shr581 = lshr i64 %shr580, 8, !dbg !14676
  %shr582 = lshr i64 %shr581, 4, !dbg !14676
  %and583 = and i64 %shr582, 1, !dbg !14676
  br label %cond.end584, !dbg !14676

cond.end584:                                      ; preds = %cond.false575, %cond.true574
  %cond585 = phi i64 [ 2, %cond.true574 ], [ %and583, %cond.false575 ], !dbg !14676
  br label %cond.end586, !dbg !14676

cond.end586:                                      ; preds = %cond.end584, %cond.end561
  %cond587 = phi i64 [ %shl563, %cond.end561 ], [ %cond585, %cond.end584 ], !dbg !14676
  %shl588 = shl i64 %cond587, 4, !dbg !14676
  br label %cond.end643, !dbg !14676

cond.false589:                                    ; preds = %cond.true520
  %255 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring590 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %255, i32 0, i32 5, !dbg !14676
  %256 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring590 to i64, !dbg !14676
  %sub591 = sub i64 4096, %256, !dbg !14676
  %257 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %258 = ptrtoint %struct.xen_netif_rx_sring* %257 to i64, !dbg !14676
  %add592 = add i64 %sub591, %258, !dbg !14676
  %div593 = udiv i64 %add592, 8, !dbg !14676
  %shr594 = lshr i64 %div593, 16, !dbg !14676
  %shr595 = lshr i64 %shr594, 8, !dbg !14676
  %and596 = and i64 %shr595, 12, !dbg !14676
  %tobool597 = icmp ne i64 %and596, 0, !dbg !14676
  br i1 %tobool597, label %cond.true598, label %cond.false621, !dbg !14676

cond.true598:                                     ; preds = %cond.false589
  %259 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring599 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %259, i32 0, i32 5, !dbg !14676
  %260 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring599 to i64, !dbg !14676
  %sub600 = sub i64 4096, %260, !dbg !14676
  %261 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %262 = ptrtoint %struct.xen_netif_rx_sring* %261 to i64, !dbg !14676
  %add601 = add i64 %sub600, %262, !dbg !14676
  %div602 = udiv i64 %add601, 8, !dbg !14676
  %shr603 = lshr i64 %div602, 16, !dbg !14676
  %shr604 = lshr i64 %shr603, 8, !dbg !14676
  %shr605 = lshr i64 %shr604, 2, !dbg !14676
  %and606 = and i64 %shr605, 2, !dbg !14676
  %tobool607 = icmp ne i64 %and606, 0, !dbg !14676
  br i1 %tobool607, label %cond.true608, label %cond.false609, !dbg !14676

cond.true608:                                     ; preds = %cond.true598
  br label %cond.end618, !dbg !14676

cond.false609:                                    ; preds = %cond.true598
  %263 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring610 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %263, i32 0, i32 5, !dbg !14676
  %264 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring610 to i64, !dbg !14676
  %sub611 = sub i64 4096, %264, !dbg !14676
  %265 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %266 = ptrtoint %struct.xen_netif_rx_sring* %265 to i64, !dbg !14676
  %add612 = add i64 %sub611, %266, !dbg !14676
  %div613 = udiv i64 %add612, 8, !dbg !14676
  %shr614 = lshr i64 %div613, 16, !dbg !14676
  %shr615 = lshr i64 %shr614, 8, !dbg !14676
  %shr616 = lshr i64 %shr615, 2, !dbg !14676
  %and617 = and i64 %shr616, 1, !dbg !14676
  br label %cond.end618, !dbg !14676

cond.end618:                                      ; preds = %cond.false609, %cond.true608
  %cond619 = phi i64 [ 2, %cond.true608 ], [ %and617, %cond.false609 ], !dbg !14676
  %shl620 = shl i64 %cond619, 2, !dbg !14676
  br label %cond.end641, !dbg !14676

cond.false621:                                    ; preds = %cond.false589
  %267 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring622 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %267, i32 0, i32 5, !dbg !14676
  %268 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring622 to i64, !dbg !14676
  %sub623 = sub i64 4096, %268, !dbg !14676
  %269 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %270 = ptrtoint %struct.xen_netif_rx_sring* %269 to i64, !dbg !14676
  %add624 = add i64 %sub623, %270, !dbg !14676
  %div625 = udiv i64 %add624, 8, !dbg !14676
  %shr626 = lshr i64 %div625, 16, !dbg !14676
  %shr627 = lshr i64 %shr626, 8, !dbg !14676
  %and628 = and i64 %shr627, 2, !dbg !14676
  %tobool629 = icmp ne i64 %and628, 0, !dbg !14676
  br i1 %tobool629, label %cond.true630, label %cond.false631, !dbg !14676

cond.true630:                                     ; preds = %cond.false621
  br label %cond.end639, !dbg !14676

cond.false631:                                    ; preds = %cond.false621
  %271 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring632 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %271, i32 0, i32 5, !dbg !14676
  %272 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring632 to i64, !dbg !14676
  %sub633 = sub i64 4096, %272, !dbg !14676
  %273 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %274 = ptrtoint %struct.xen_netif_rx_sring* %273 to i64, !dbg !14676
  %add634 = add i64 %sub633, %274, !dbg !14676
  %div635 = udiv i64 %add634, 8, !dbg !14676
  %shr636 = lshr i64 %div635, 16, !dbg !14676
  %shr637 = lshr i64 %shr636, 8, !dbg !14676
  %and638 = and i64 %shr637, 1, !dbg !14676
  br label %cond.end639, !dbg !14676

cond.end639:                                      ; preds = %cond.false631, %cond.true630
  %cond640 = phi i64 [ 2, %cond.true630 ], [ %and638, %cond.false631 ], !dbg !14676
  br label %cond.end641, !dbg !14676

cond.end641:                                      ; preds = %cond.end639, %cond.end618
  %cond642 = phi i64 [ %shl620, %cond.end618 ], [ %cond640, %cond.end639 ], !dbg !14676
  br label %cond.end643, !dbg !14676

cond.end643:                                      ; preds = %cond.end641, %cond.end586
  %cond644 = phi i64 [ %shl588, %cond.end586 ], [ %cond642, %cond.end641 ], !dbg !14676
  %shl645 = shl i64 %cond644, 8, !dbg !14676
  br label %cond.end760, !dbg !14676

cond.false646:                                    ; preds = %cond.true512
  %275 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring647 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %275, i32 0, i32 5, !dbg !14676
  %276 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring647 to i64, !dbg !14676
  %sub648 = sub i64 4096, %276, !dbg !14676
  %277 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %278 = ptrtoint %struct.xen_netif_rx_sring* %277 to i64, !dbg !14676
  %add649 = add i64 %sub648, %278, !dbg !14676
  %div650 = udiv i64 %add649, 8, !dbg !14676
  %shr651 = lshr i64 %div650, 16, !dbg !14676
  %and652 = and i64 %shr651, 240, !dbg !14676
  %tobool653 = icmp ne i64 %and652, 0, !dbg !14676
  br i1 %tobool653, label %cond.true654, label %cond.false709, !dbg !14676

cond.true654:                                     ; preds = %cond.false646
  %279 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring655 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %279, i32 0, i32 5, !dbg !14676
  %280 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring655 to i64, !dbg !14676
  %sub656 = sub i64 4096, %280, !dbg !14676
  %281 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %282 = ptrtoint %struct.xen_netif_rx_sring* %281 to i64, !dbg !14676
  %add657 = add i64 %sub656, %282, !dbg !14676
  %div658 = udiv i64 %add657, 8, !dbg !14676
  %shr659 = lshr i64 %div658, 16, !dbg !14676
  %shr660 = lshr i64 %shr659, 4, !dbg !14676
  %and661 = and i64 %shr660, 12, !dbg !14676
  %tobool662 = icmp ne i64 %and661, 0, !dbg !14676
  br i1 %tobool662, label %cond.true663, label %cond.false686, !dbg !14676

cond.true663:                                     ; preds = %cond.true654
  %283 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring664 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %283, i32 0, i32 5, !dbg !14676
  %284 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring664 to i64, !dbg !14676
  %sub665 = sub i64 4096, %284, !dbg !14676
  %285 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %286 = ptrtoint %struct.xen_netif_rx_sring* %285 to i64, !dbg !14676
  %add666 = add i64 %sub665, %286, !dbg !14676
  %div667 = udiv i64 %add666, 8, !dbg !14676
  %shr668 = lshr i64 %div667, 16, !dbg !14676
  %shr669 = lshr i64 %shr668, 4, !dbg !14676
  %shr670 = lshr i64 %shr669, 2, !dbg !14676
  %and671 = and i64 %shr670, 2, !dbg !14676
  %tobool672 = icmp ne i64 %and671, 0, !dbg !14676
  br i1 %tobool672, label %cond.true673, label %cond.false674, !dbg !14676

cond.true673:                                     ; preds = %cond.true663
  br label %cond.end683, !dbg !14676

cond.false674:                                    ; preds = %cond.true663
  %287 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring675 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %287, i32 0, i32 5, !dbg !14676
  %288 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring675 to i64, !dbg !14676
  %sub676 = sub i64 4096, %288, !dbg !14676
  %289 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %290 = ptrtoint %struct.xen_netif_rx_sring* %289 to i64, !dbg !14676
  %add677 = add i64 %sub676, %290, !dbg !14676
  %div678 = udiv i64 %add677, 8, !dbg !14676
  %shr679 = lshr i64 %div678, 16, !dbg !14676
  %shr680 = lshr i64 %shr679, 4, !dbg !14676
  %shr681 = lshr i64 %shr680, 2, !dbg !14676
  %and682 = and i64 %shr681, 1, !dbg !14676
  br label %cond.end683, !dbg !14676

cond.end683:                                      ; preds = %cond.false674, %cond.true673
  %cond684 = phi i64 [ 2, %cond.true673 ], [ %and682, %cond.false674 ], !dbg !14676
  %shl685 = shl i64 %cond684, 2, !dbg !14676
  br label %cond.end706, !dbg !14676

cond.false686:                                    ; preds = %cond.true654
  %291 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring687 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %291, i32 0, i32 5, !dbg !14676
  %292 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring687 to i64, !dbg !14676
  %sub688 = sub i64 4096, %292, !dbg !14676
  %293 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %294 = ptrtoint %struct.xen_netif_rx_sring* %293 to i64, !dbg !14676
  %add689 = add i64 %sub688, %294, !dbg !14676
  %div690 = udiv i64 %add689, 8, !dbg !14676
  %shr691 = lshr i64 %div690, 16, !dbg !14676
  %shr692 = lshr i64 %shr691, 4, !dbg !14676
  %and693 = and i64 %shr692, 2, !dbg !14676
  %tobool694 = icmp ne i64 %and693, 0, !dbg !14676
  br i1 %tobool694, label %cond.true695, label %cond.false696, !dbg !14676

cond.true695:                                     ; preds = %cond.false686
  br label %cond.end704, !dbg !14676

cond.false696:                                    ; preds = %cond.false686
  %295 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring697 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %295, i32 0, i32 5, !dbg !14676
  %296 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring697 to i64, !dbg !14676
  %sub698 = sub i64 4096, %296, !dbg !14676
  %297 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %298 = ptrtoint %struct.xen_netif_rx_sring* %297 to i64, !dbg !14676
  %add699 = add i64 %sub698, %298, !dbg !14676
  %div700 = udiv i64 %add699, 8, !dbg !14676
  %shr701 = lshr i64 %div700, 16, !dbg !14676
  %shr702 = lshr i64 %shr701, 4, !dbg !14676
  %and703 = and i64 %shr702, 1, !dbg !14676
  br label %cond.end704, !dbg !14676

cond.end704:                                      ; preds = %cond.false696, %cond.true695
  %cond705 = phi i64 [ 2, %cond.true695 ], [ %and703, %cond.false696 ], !dbg !14676
  br label %cond.end706, !dbg !14676

cond.end706:                                      ; preds = %cond.end704, %cond.end683
  %cond707 = phi i64 [ %shl685, %cond.end683 ], [ %cond705, %cond.end704 ], !dbg !14676
  %shl708 = shl i64 %cond707, 4, !dbg !14676
  br label %cond.end758, !dbg !14676

cond.false709:                                    ; preds = %cond.false646
  %299 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring710 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %299, i32 0, i32 5, !dbg !14676
  %300 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring710 to i64, !dbg !14676
  %sub711 = sub i64 4096, %300, !dbg !14676
  %301 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %302 = ptrtoint %struct.xen_netif_rx_sring* %301 to i64, !dbg !14676
  %add712 = add i64 %sub711, %302, !dbg !14676
  %div713 = udiv i64 %add712, 8, !dbg !14676
  %shr714 = lshr i64 %div713, 16, !dbg !14676
  %and715 = and i64 %shr714, 12, !dbg !14676
  %tobool716 = icmp ne i64 %and715, 0, !dbg !14676
  br i1 %tobool716, label %cond.true717, label %cond.false738, !dbg !14676

cond.true717:                                     ; preds = %cond.false709
  %303 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring718 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %303, i32 0, i32 5, !dbg !14676
  %304 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring718 to i64, !dbg !14676
  %sub719 = sub i64 4096, %304, !dbg !14676
  %305 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %306 = ptrtoint %struct.xen_netif_rx_sring* %305 to i64, !dbg !14676
  %add720 = add i64 %sub719, %306, !dbg !14676
  %div721 = udiv i64 %add720, 8, !dbg !14676
  %shr722 = lshr i64 %div721, 16, !dbg !14676
  %shr723 = lshr i64 %shr722, 2, !dbg !14676
  %and724 = and i64 %shr723, 2, !dbg !14676
  %tobool725 = icmp ne i64 %and724, 0, !dbg !14676
  br i1 %tobool725, label %cond.true726, label %cond.false727, !dbg !14676

cond.true726:                                     ; preds = %cond.true717
  br label %cond.end735, !dbg !14676

cond.false727:                                    ; preds = %cond.true717
  %307 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring728 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %307, i32 0, i32 5, !dbg !14676
  %308 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring728 to i64, !dbg !14676
  %sub729 = sub i64 4096, %308, !dbg !14676
  %309 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %310 = ptrtoint %struct.xen_netif_rx_sring* %309 to i64, !dbg !14676
  %add730 = add i64 %sub729, %310, !dbg !14676
  %div731 = udiv i64 %add730, 8, !dbg !14676
  %shr732 = lshr i64 %div731, 16, !dbg !14676
  %shr733 = lshr i64 %shr732, 2, !dbg !14676
  %and734 = and i64 %shr733, 1, !dbg !14676
  br label %cond.end735, !dbg !14676

cond.end735:                                      ; preds = %cond.false727, %cond.true726
  %cond736 = phi i64 [ 2, %cond.true726 ], [ %and734, %cond.false727 ], !dbg !14676
  %shl737 = shl i64 %cond736, 2, !dbg !14676
  br label %cond.end756, !dbg !14676

cond.false738:                                    ; preds = %cond.false709
  %311 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring739 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %311, i32 0, i32 5, !dbg !14676
  %312 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring739 to i64, !dbg !14676
  %sub740 = sub i64 4096, %312, !dbg !14676
  %313 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %314 = ptrtoint %struct.xen_netif_rx_sring* %313 to i64, !dbg !14676
  %add741 = add i64 %sub740, %314, !dbg !14676
  %div742 = udiv i64 %add741, 8, !dbg !14676
  %shr743 = lshr i64 %div742, 16, !dbg !14676
  %and744 = and i64 %shr743, 2, !dbg !14676
  %tobool745 = icmp ne i64 %and744, 0, !dbg !14676
  br i1 %tobool745, label %cond.true746, label %cond.false747, !dbg !14676

cond.true746:                                     ; preds = %cond.false738
  br label %cond.end754, !dbg !14676

cond.false747:                                    ; preds = %cond.false738
  %315 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring748 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %315, i32 0, i32 5, !dbg !14676
  %316 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring748 to i64, !dbg !14676
  %sub749 = sub i64 4096, %316, !dbg !14676
  %317 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %318 = ptrtoint %struct.xen_netif_rx_sring* %317 to i64, !dbg !14676
  %add750 = add i64 %sub749, %318, !dbg !14676
  %div751 = udiv i64 %add750, 8, !dbg !14676
  %shr752 = lshr i64 %div751, 16, !dbg !14676
  %and753 = and i64 %shr752, 1, !dbg !14676
  br label %cond.end754, !dbg !14676

cond.end754:                                      ; preds = %cond.false747, %cond.true746
  %cond755 = phi i64 [ 2, %cond.true746 ], [ %and753, %cond.false747 ], !dbg !14676
  br label %cond.end756, !dbg !14676

cond.end756:                                      ; preds = %cond.end754, %cond.end735
  %cond757 = phi i64 [ %shl737, %cond.end735 ], [ %cond755, %cond.end754 ], !dbg !14676
  br label %cond.end758, !dbg !14676

cond.end758:                                      ; preds = %cond.end756, %cond.end706
  %cond759 = phi i64 [ %shl708, %cond.end706 ], [ %cond757, %cond.end756 ], !dbg !14676
  br label %cond.end760, !dbg !14676

cond.end760:                                      ; preds = %cond.end758, %cond.end643
  %cond761 = phi i64 [ %shl645, %cond.end643 ], [ %cond759, %cond.end758 ], !dbg !14676
  %shl762 = shl i64 %cond761, 16, !dbg !14676
  br label %cond.end990, !dbg !14676

cond.false763:                                    ; preds = %do.body501
  %319 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring764 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %319, i32 0, i32 5, !dbg !14676
  %320 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring764 to i64, !dbg !14676
  %sub765 = sub i64 4096, %320, !dbg !14676
  %321 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %322 = ptrtoint %struct.xen_netif_rx_sring* %321 to i64, !dbg !14676
  %add766 = add i64 %sub765, %322, !dbg !14676
  %div767 = udiv i64 %add766, 8, !dbg !14676
  %and768 = and i64 %div767, 65280, !dbg !14676
  %tobool769 = icmp ne i64 %and768, 0, !dbg !14676
  br i1 %tobool769, label %cond.true770, label %cond.false885, !dbg !14676

cond.true770:                                     ; preds = %cond.false763
  %323 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring771 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %323, i32 0, i32 5, !dbg !14676
  %324 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring771 to i64, !dbg !14676
  %sub772 = sub i64 4096, %324, !dbg !14676
  %325 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %326 = ptrtoint %struct.xen_netif_rx_sring* %325 to i64, !dbg !14676
  %add773 = add i64 %sub772, %326, !dbg !14676
  %div774 = udiv i64 %add773, 8, !dbg !14676
  %shr775 = lshr i64 %div774, 8, !dbg !14676
  %and776 = and i64 %shr775, 240, !dbg !14676
  %tobool777 = icmp ne i64 %and776, 0, !dbg !14676
  br i1 %tobool777, label %cond.true778, label %cond.false833, !dbg !14676

cond.true778:                                     ; preds = %cond.true770
  %327 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring779 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %327, i32 0, i32 5, !dbg !14676
  %328 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring779 to i64, !dbg !14676
  %sub780 = sub i64 4096, %328, !dbg !14676
  %329 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %330 = ptrtoint %struct.xen_netif_rx_sring* %329 to i64, !dbg !14676
  %add781 = add i64 %sub780, %330, !dbg !14676
  %div782 = udiv i64 %add781, 8, !dbg !14676
  %shr783 = lshr i64 %div782, 8, !dbg !14676
  %shr784 = lshr i64 %shr783, 4, !dbg !14676
  %and785 = and i64 %shr784, 12, !dbg !14676
  %tobool786 = icmp ne i64 %and785, 0, !dbg !14676
  br i1 %tobool786, label %cond.true787, label %cond.false810, !dbg !14676

cond.true787:                                     ; preds = %cond.true778
  %331 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring788 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %331, i32 0, i32 5, !dbg !14676
  %332 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring788 to i64, !dbg !14676
  %sub789 = sub i64 4096, %332, !dbg !14676
  %333 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %334 = ptrtoint %struct.xen_netif_rx_sring* %333 to i64, !dbg !14676
  %add790 = add i64 %sub789, %334, !dbg !14676
  %div791 = udiv i64 %add790, 8, !dbg !14676
  %shr792 = lshr i64 %div791, 8, !dbg !14676
  %shr793 = lshr i64 %shr792, 4, !dbg !14676
  %shr794 = lshr i64 %shr793, 2, !dbg !14676
  %and795 = and i64 %shr794, 2, !dbg !14676
  %tobool796 = icmp ne i64 %and795, 0, !dbg !14676
  br i1 %tobool796, label %cond.true797, label %cond.false798, !dbg !14676

cond.true797:                                     ; preds = %cond.true787
  br label %cond.end807, !dbg !14676

cond.false798:                                    ; preds = %cond.true787
  %335 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring799 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %335, i32 0, i32 5, !dbg !14676
  %336 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring799 to i64, !dbg !14676
  %sub800 = sub i64 4096, %336, !dbg !14676
  %337 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %338 = ptrtoint %struct.xen_netif_rx_sring* %337 to i64, !dbg !14676
  %add801 = add i64 %sub800, %338, !dbg !14676
  %div802 = udiv i64 %add801, 8, !dbg !14676
  %shr803 = lshr i64 %div802, 8, !dbg !14676
  %shr804 = lshr i64 %shr803, 4, !dbg !14676
  %shr805 = lshr i64 %shr804, 2, !dbg !14676
  %and806 = and i64 %shr805, 1, !dbg !14676
  br label %cond.end807, !dbg !14676

cond.end807:                                      ; preds = %cond.false798, %cond.true797
  %cond808 = phi i64 [ 2, %cond.true797 ], [ %and806, %cond.false798 ], !dbg !14676
  %shl809 = shl i64 %cond808, 2, !dbg !14676
  br label %cond.end830, !dbg !14676

cond.false810:                                    ; preds = %cond.true778
  %339 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring811 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %339, i32 0, i32 5, !dbg !14676
  %340 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring811 to i64, !dbg !14676
  %sub812 = sub i64 4096, %340, !dbg !14676
  %341 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %342 = ptrtoint %struct.xen_netif_rx_sring* %341 to i64, !dbg !14676
  %add813 = add i64 %sub812, %342, !dbg !14676
  %div814 = udiv i64 %add813, 8, !dbg !14676
  %shr815 = lshr i64 %div814, 8, !dbg !14676
  %shr816 = lshr i64 %shr815, 4, !dbg !14676
  %and817 = and i64 %shr816, 2, !dbg !14676
  %tobool818 = icmp ne i64 %and817, 0, !dbg !14676
  br i1 %tobool818, label %cond.true819, label %cond.false820, !dbg !14676

cond.true819:                                     ; preds = %cond.false810
  br label %cond.end828, !dbg !14676

cond.false820:                                    ; preds = %cond.false810
  %343 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring821 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %343, i32 0, i32 5, !dbg !14676
  %344 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring821 to i64, !dbg !14676
  %sub822 = sub i64 4096, %344, !dbg !14676
  %345 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %346 = ptrtoint %struct.xen_netif_rx_sring* %345 to i64, !dbg !14676
  %add823 = add i64 %sub822, %346, !dbg !14676
  %div824 = udiv i64 %add823, 8, !dbg !14676
  %shr825 = lshr i64 %div824, 8, !dbg !14676
  %shr826 = lshr i64 %shr825, 4, !dbg !14676
  %and827 = and i64 %shr826, 1, !dbg !14676
  br label %cond.end828, !dbg !14676

cond.end828:                                      ; preds = %cond.false820, %cond.true819
  %cond829 = phi i64 [ 2, %cond.true819 ], [ %and827, %cond.false820 ], !dbg !14676
  br label %cond.end830, !dbg !14676

cond.end830:                                      ; preds = %cond.end828, %cond.end807
  %cond831 = phi i64 [ %shl809, %cond.end807 ], [ %cond829, %cond.end828 ], !dbg !14676
  %shl832 = shl i64 %cond831, 4, !dbg !14676
  br label %cond.end882, !dbg !14676

cond.false833:                                    ; preds = %cond.true770
  %347 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring834 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %347, i32 0, i32 5, !dbg !14676
  %348 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring834 to i64, !dbg !14676
  %sub835 = sub i64 4096, %348, !dbg !14676
  %349 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %350 = ptrtoint %struct.xen_netif_rx_sring* %349 to i64, !dbg !14676
  %add836 = add i64 %sub835, %350, !dbg !14676
  %div837 = udiv i64 %add836, 8, !dbg !14676
  %shr838 = lshr i64 %div837, 8, !dbg !14676
  %and839 = and i64 %shr838, 12, !dbg !14676
  %tobool840 = icmp ne i64 %and839, 0, !dbg !14676
  br i1 %tobool840, label %cond.true841, label %cond.false862, !dbg !14676

cond.true841:                                     ; preds = %cond.false833
  %351 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring842 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %351, i32 0, i32 5, !dbg !14676
  %352 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring842 to i64, !dbg !14676
  %sub843 = sub i64 4096, %352, !dbg !14676
  %353 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %354 = ptrtoint %struct.xen_netif_rx_sring* %353 to i64, !dbg !14676
  %add844 = add i64 %sub843, %354, !dbg !14676
  %div845 = udiv i64 %add844, 8, !dbg !14676
  %shr846 = lshr i64 %div845, 8, !dbg !14676
  %shr847 = lshr i64 %shr846, 2, !dbg !14676
  %and848 = and i64 %shr847, 2, !dbg !14676
  %tobool849 = icmp ne i64 %and848, 0, !dbg !14676
  br i1 %tobool849, label %cond.true850, label %cond.false851, !dbg !14676

cond.true850:                                     ; preds = %cond.true841
  br label %cond.end859, !dbg !14676

cond.false851:                                    ; preds = %cond.true841
  %355 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring852 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %355, i32 0, i32 5, !dbg !14676
  %356 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring852 to i64, !dbg !14676
  %sub853 = sub i64 4096, %356, !dbg !14676
  %357 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %358 = ptrtoint %struct.xen_netif_rx_sring* %357 to i64, !dbg !14676
  %add854 = add i64 %sub853, %358, !dbg !14676
  %div855 = udiv i64 %add854, 8, !dbg !14676
  %shr856 = lshr i64 %div855, 8, !dbg !14676
  %shr857 = lshr i64 %shr856, 2, !dbg !14676
  %and858 = and i64 %shr857, 1, !dbg !14676
  br label %cond.end859, !dbg !14676

cond.end859:                                      ; preds = %cond.false851, %cond.true850
  %cond860 = phi i64 [ 2, %cond.true850 ], [ %and858, %cond.false851 ], !dbg !14676
  %shl861 = shl i64 %cond860, 2, !dbg !14676
  br label %cond.end880, !dbg !14676

cond.false862:                                    ; preds = %cond.false833
  %359 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring863 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %359, i32 0, i32 5, !dbg !14676
  %360 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring863 to i64, !dbg !14676
  %sub864 = sub i64 4096, %360, !dbg !14676
  %361 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %362 = ptrtoint %struct.xen_netif_rx_sring* %361 to i64, !dbg !14676
  %add865 = add i64 %sub864, %362, !dbg !14676
  %div866 = udiv i64 %add865, 8, !dbg !14676
  %shr867 = lshr i64 %div866, 8, !dbg !14676
  %and868 = and i64 %shr867, 2, !dbg !14676
  %tobool869 = icmp ne i64 %and868, 0, !dbg !14676
  br i1 %tobool869, label %cond.true870, label %cond.false871, !dbg !14676

cond.true870:                                     ; preds = %cond.false862
  br label %cond.end878, !dbg !14676

cond.false871:                                    ; preds = %cond.false862
  %363 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring872 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %363, i32 0, i32 5, !dbg !14676
  %364 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring872 to i64, !dbg !14676
  %sub873 = sub i64 4096, %364, !dbg !14676
  %365 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %366 = ptrtoint %struct.xen_netif_rx_sring* %365 to i64, !dbg !14676
  %add874 = add i64 %sub873, %366, !dbg !14676
  %div875 = udiv i64 %add874, 8, !dbg !14676
  %shr876 = lshr i64 %div875, 8, !dbg !14676
  %and877 = and i64 %shr876, 1, !dbg !14676
  br label %cond.end878, !dbg !14676

cond.end878:                                      ; preds = %cond.false871, %cond.true870
  %cond879 = phi i64 [ 2, %cond.true870 ], [ %and877, %cond.false871 ], !dbg !14676
  br label %cond.end880, !dbg !14676

cond.end880:                                      ; preds = %cond.end878, %cond.end859
  %cond881 = phi i64 [ %shl861, %cond.end859 ], [ %cond879, %cond.end878 ], !dbg !14676
  br label %cond.end882, !dbg !14676

cond.end882:                                      ; preds = %cond.end880, %cond.end830
  %cond883 = phi i64 [ %shl832, %cond.end830 ], [ %cond881, %cond.end880 ], !dbg !14676
  %shl884 = shl i64 %cond883, 8, !dbg !14676
  br label %cond.end988, !dbg !14676

cond.false885:                                    ; preds = %cond.false763
  %367 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring886 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %367, i32 0, i32 5, !dbg !14676
  %368 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring886 to i64, !dbg !14676
  %sub887 = sub i64 4096, %368, !dbg !14676
  %369 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %370 = ptrtoint %struct.xen_netif_rx_sring* %369 to i64, !dbg !14676
  %add888 = add i64 %sub887, %370, !dbg !14676
  %div889 = udiv i64 %add888, 8, !dbg !14676
  %and890 = and i64 %div889, 240, !dbg !14676
  %tobool891 = icmp ne i64 %and890, 0, !dbg !14676
  br i1 %tobool891, label %cond.true892, label %cond.false942, !dbg !14676

cond.true892:                                     ; preds = %cond.false885
  %371 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring893 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %371, i32 0, i32 5, !dbg !14676
  %372 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring893 to i64, !dbg !14676
  %sub894 = sub i64 4096, %372, !dbg !14676
  %373 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %374 = ptrtoint %struct.xen_netif_rx_sring* %373 to i64, !dbg !14676
  %add895 = add i64 %sub894, %374, !dbg !14676
  %div896 = udiv i64 %add895, 8, !dbg !14676
  %shr897 = lshr i64 %div896, 4, !dbg !14676
  %and898 = and i64 %shr897, 12, !dbg !14676
  %tobool899 = icmp ne i64 %and898, 0, !dbg !14676
  br i1 %tobool899, label %cond.true900, label %cond.false921, !dbg !14676

cond.true900:                                     ; preds = %cond.true892
  %375 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring901 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %375, i32 0, i32 5, !dbg !14676
  %376 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring901 to i64, !dbg !14676
  %sub902 = sub i64 4096, %376, !dbg !14676
  %377 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %378 = ptrtoint %struct.xen_netif_rx_sring* %377 to i64, !dbg !14676
  %add903 = add i64 %sub902, %378, !dbg !14676
  %div904 = udiv i64 %add903, 8, !dbg !14676
  %shr905 = lshr i64 %div904, 4, !dbg !14676
  %shr906 = lshr i64 %shr905, 2, !dbg !14676
  %and907 = and i64 %shr906, 2, !dbg !14676
  %tobool908 = icmp ne i64 %and907, 0, !dbg !14676
  br i1 %tobool908, label %cond.true909, label %cond.false910, !dbg !14676

cond.true909:                                     ; preds = %cond.true900
  br label %cond.end918, !dbg !14676

cond.false910:                                    ; preds = %cond.true900
  %379 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring911 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %379, i32 0, i32 5, !dbg !14676
  %380 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring911 to i64, !dbg !14676
  %sub912 = sub i64 4096, %380, !dbg !14676
  %381 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %382 = ptrtoint %struct.xen_netif_rx_sring* %381 to i64, !dbg !14676
  %add913 = add i64 %sub912, %382, !dbg !14676
  %div914 = udiv i64 %add913, 8, !dbg !14676
  %shr915 = lshr i64 %div914, 4, !dbg !14676
  %shr916 = lshr i64 %shr915, 2, !dbg !14676
  %and917 = and i64 %shr916, 1, !dbg !14676
  br label %cond.end918, !dbg !14676

cond.end918:                                      ; preds = %cond.false910, %cond.true909
  %cond919 = phi i64 [ 2, %cond.true909 ], [ %and917, %cond.false910 ], !dbg !14676
  %shl920 = shl i64 %cond919, 2, !dbg !14676
  br label %cond.end939, !dbg !14676

cond.false921:                                    ; preds = %cond.true892
  %383 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring922 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %383, i32 0, i32 5, !dbg !14676
  %384 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring922 to i64, !dbg !14676
  %sub923 = sub i64 4096, %384, !dbg !14676
  %385 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %386 = ptrtoint %struct.xen_netif_rx_sring* %385 to i64, !dbg !14676
  %add924 = add i64 %sub923, %386, !dbg !14676
  %div925 = udiv i64 %add924, 8, !dbg !14676
  %shr926 = lshr i64 %div925, 4, !dbg !14676
  %and927 = and i64 %shr926, 2, !dbg !14676
  %tobool928 = icmp ne i64 %and927, 0, !dbg !14676
  br i1 %tobool928, label %cond.true929, label %cond.false930, !dbg !14676

cond.true929:                                     ; preds = %cond.false921
  br label %cond.end937, !dbg !14676

cond.false930:                                    ; preds = %cond.false921
  %387 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring931 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %387, i32 0, i32 5, !dbg !14676
  %388 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring931 to i64, !dbg !14676
  %sub932 = sub i64 4096, %388, !dbg !14676
  %389 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %390 = ptrtoint %struct.xen_netif_rx_sring* %389 to i64, !dbg !14676
  %add933 = add i64 %sub932, %390, !dbg !14676
  %div934 = udiv i64 %add933, 8, !dbg !14676
  %shr935 = lshr i64 %div934, 4, !dbg !14676
  %and936 = and i64 %shr935, 1, !dbg !14676
  br label %cond.end937, !dbg !14676

cond.end937:                                      ; preds = %cond.false930, %cond.true929
  %cond938 = phi i64 [ 2, %cond.true929 ], [ %and936, %cond.false930 ], !dbg !14676
  br label %cond.end939, !dbg !14676

cond.end939:                                      ; preds = %cond.end937, %cond.end918
  %cond940 = phi i64 [ %shl920, %cond.end918 ], [ %cond938, %cond.end937 ], !dbg !14676
  %shl941 = shl i64 %cond940, 4, !dbg !14676
  br label %cond.end986, !dbg !14676

cond.false942:                                    ; preds = %cond.false885
  %391 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring943 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %391, i32 0, i32 5, !dbg !14676
  %392 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring943 to i64, !dbg !14676
  %sub944 = sub i64 4096, %392, !dbg !14676
  %393 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %394 = ptrtoint %struct.xen_netif_rx_sring* %393 to i64, !dbg !14676
  %add945 = add i64 %sub944, %394, !dbg !14676
  %div946 = udiv i64 %add945, 8, !dbg !14676
  %and947 = and i64 %div946, 12, !dbg !14676
  %tobool948 = icmp ne i64 %and947, 0, !dbg !14676
  br i1 %tobool948, label %cond.true949, label %cond.false968, !dbg !14676

cond.true949:                                     ; preds = %cond.false942
  %395 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring950 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %395, i32 0, i32 5, !dbg !14676
  %396 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring950 to i64, !dbg !14676
  %sub951 = sub i64 4096, %396, !dbg !14676
  %397 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %398 = ptrtoint %struct.xen_netif_rx_sring* %397 to i64, !dbg !14676
  %add952 = add i64 %sub951, %398, !dbg !14676
  %div953 = udiv i64 %add952, 8, !dbg !14676
  %shr954 = lshr i64 %div953, 2, !dbg !14676
  %and955 = and i64 %shr954, 2, !dbg !14676
  %tobool956 = icmp ne i64 %and955, 0, !dbg !14676
  br i1 %tobool956, label %cond.true957, label %cond.false958, !dbg !14676

cond.true957:                                     ; preds = %cond.true949
  br label %cond.end965, !dbg !14676

cond.false958:                                    ; preds = %cond.true949
  %399 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring959 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %399, i32 0, i32 5, !dbg !14676
  %400 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring959 to i64, !dbg !14676
  %sub960 = sub i64 4096, %400, !dbg !14676
  %401 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %402 = ptrtoint %struct.xen_netif_rx_sring* %401 to i64, !dbg !14676
  %add961 = add i64 %sub960, %402, !dbg !14676
  %div962 = udiv i64 %add961, 8, !dbg !14676
  %shr963 = lshr i64 %div962, 2, !dbg !14676
  %and964 = and i64 %shr963, 1, !dbg !14676
  br label %cond.end965, !dbg !14676

cond.end965:                                      ; preds = %cond.false958, %cond.true957
  %cond966 = phi i64 [ 2, %cond.true957 ], [ %and964, %cond.false958 ], !dbg !14676
  %shl967 = shl i64 %cond966, 2, !dbg !14676
  br label %cond.end984, !dbg !14676

cond.false968:                                    ; preds = %cond.false942
  %403 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring969 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %403, i32 0, i32 5, !dbg !14676
  %404 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring969 to i64, !dbg !14676
  %sub970 = sub i64 4096, %404, !dbg !14676
  %405 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %406 = ptrtoint %struct.xen_netif_rx_sring* %405 to i64, !dbg !14676
  %add971 = add i64 %sub970, %406, !dbg !14676
  %div972 = udiv i64 %add971, 8, !dbg !14676
  %and973 = and i64 %div972, 2, !dbg !14676
  %tobool974 = icmp ne i64 %and973, 0, !dbg !14676
  br i1 %tobool974, label %cond.true975, label %cond.false976, !dbg !14676

cond.true975:                                     ; preds = %cond.false968
  br label %cond.end982, !dbg !14676

cond.false976:                                    ; preds = %cond.false968
  %407 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %ring977 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %407, i32 0, i32 5, !dbg !14676
  %408 = ptrtoint [1 x %union.xen_netif_rx_sring_entry]* %ring977 to i64, !dbg !14676
  %sub978 = sub i64 4096, %408, !dbg !14676
  %409 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %410 = ptrtoint %struct.xen_netif_rx_sring* %409 to i64, !dbg !14676
  %add979 = add i64 %sub978, %410, !dbg !14676
  %div980 = udiv i64 %add979, 8, !dbg !14676
  %and981 = and i64 %div980, 1, !dbg !14676
  br label %cond.end982, !dbg !14676

cond.end982:                                      ; preds = %cond.false976, %cond.true975
  %cond983 = phi i64 [ 2, %cond.true975 ], [ %and981, %cond.false976 ], !dbg !14676
  br label %cond.end984, !dbg !14676

cond.end984:                                      ; preds = %cond.end982, %cond.end965
  %cond985 = phi i64 [ %shl967, %cond.end965 ], [ %cond983, %cond.end982 ], !dbg !14676
  br label %cond.end986, !dbg !14676

cond.end986:                                      ; preds = %cond.end984, %cond.end939
  %cond987 = phi i64 [ %shl941, %cond.end939 ], [ %cond985, %cond.end984 ], !dbg !14676
  br label %cond.end988, !dbg !14676

cond.end988:                                      ; preds = %cond.end986, %cond.end882
  %cond989 = phi i64 [ %shl884, %cond.end882 ], [ %cond987, %cond.end986 ], !dbg !14676
  br label %cond.end990, !dbg !14676

cond.end990:                                      ; preds = %cond.end988, %cond.end760
  %cond991 = phi i64 [ %shl762, %cond.end760 ], [ %cond989, %cond.end988 ], !dbg !14676
  %conv992 = trunc i64 %cond991 to i32, !dbg !14676
  %411 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14676
  %rx993 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %411, i32 0, i32 20, !dbg !14676
  %nr_ents994 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx993, i32 0, i32 2, !dbg !14676
  store i32 %conv992, i32* %nr_ents994, align 8, !dbg !14676
  %412 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14676
  %413 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14676
  %rx995 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %413, i32 0, i32 20, !dbg !14676
  %sring996 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx995, i32 0, i32 3, !dbg !14676
  store %struct.xen_netif_rx_sring* %412, %struct.xen_netif_rx_sring** %sring996, align 8, !dbg !14676
  br label %do.end997, !dbg !14676

do.end997:                                        ; preds = %cond.end990
  %414 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !14678
  %415 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14679
  %416 = bitcast %struct.xen_netif_rx_sring* %415 to i8*, !dbg !14679
  %call998 = call i32 @xenbus_grant_ring(%struct.xenbus_device* %414, i8* %416, i32 1, i32* %gref) #12, !dbg !14680
  store i32 %call998, i32* %err, align 4, !dbg !14681
  %417 = load i32, i32* %err, align 4, !dbg !14682
  %cmp999 = icmp slt i32 %417, 0, !dbg !14684
  br i1 %cmp999, label %if.then1001, label %if.end1002, !dbg !14685

if.then1001:                                      ; preds = %do.end997
  br label %grant_rx_ring_fail, !dbg !14686

if.end1002:                                       ; preds = %do.end997
  %418 = load i32, i32* %gref, align 4, !dbg !14687
  %419 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14688
  %rx_ring_ref1003 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %419, i32 0, i32 21, !dbg !14689
  store i32 %418, i32* %rx_ring_ref1003, align 64, !dbg !14690
  %420 = load i32, i32* %feature_split_evtchn.addr, align 4, !dbg !14691
  %tobool1004 = icmp ne i32 %420, 0, !dbg !14691
  br i1 %tobool1004, label %if.then1005, label %if.end1007, !dbg !14693

if.then1005:                                      ; preds = %if.end1002
  %421 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14694
  %call1006 = call i32 @setup_netfront_split(%struct.netfront_queue* %421) #12, !dbg !14695
  store i32 %call1006, i32* %err, align 4, !dbg !14696
  br label %if.end1007, !dbg !14697

if.end1007:                                       ; preds = %if.then1005, %if.end1002
  %422 = load i32, i32* %feature_split_evtchn.addr, align 4, !dbg !14698
  %tobool1008 = icmp ne i32 %422, 0, !dbg !14698
  br i1 %tobool1008, label %lor.lhs.false, label %if.then1011, !dbg !14700

lor.lhs.false:                                    ; preds = %if.end1007
  %423 = load i32, i32* %feature_split_evtchn.addr, align 4, !dbg !14701
  %tobool1009 = icmp ne i32 %423, 0, !dbg !14701
  br i1 %tobool1009, label %land.lhs.true, label %if.end1013, !dbg !14702

land.lhs.true:                                    ; preds = %lor.lhs.false
  %424 = load i32, i32* %err, align 4, !dbg !14703
  %tobool1010 = icmp ne i32 %424, 0, !dbg !14703
  br i1 %tobool1010, label %if.then1011, label %if.end1013, !dbg !14704

if.then1011:                                      ; preds = %land.lhs.true, %if.end1007
  %425 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14705
  %call1012 = call i32 @setup_netfront_single(%struct.netfront_queue* %425) #12, !dbg !14706
  store i32 %call1012, i32* %err, align 4, !dbg !14707
  br label %if.end1013, !dbg !14708

if.end1013:                                       ; preds = %if.then1011, %land.lhs.true, %lor.lhs.false
  %426 = load i32, i32* %err, align 4, !dbg !14709
  %tobool1014 = icmp ne i32 %426, 0, !dbg !14709
  br i1 %tobool1014, label %if.then1015, label %if.end1016, !dbg !14711

if.then1015:                                      ; preds = %if.end1013
  br label %alloc_evtchn_fail, !dbg !14712

if.end1016:                                       ; preds = %if.end1013
  store i32 0, i32* %retval, align 4, !dbg !14713
  br label %return, !dbg !14713

alloc_evtchn_fail:                                ; preds = %if.then1015
  call void @llvm.dbg.label(metadata !14714), !dbg !14715
  %427 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14716
  %rx_ring_ref1017 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %427, i32 0, i32 21, !dbg !14717
  %428 = load i32, i32* %rx_ring_ref1017, align 64, !dbg !14717
  %call1018 = call i32 @gnttab_end_foreign_access_ref(i32 %428, i32 0) #12, !dbg !14718
  br label %grant_rx_ring_fail, !dbg !14718

grant_rx_ring_fail:                               ; preds = %alloc_evtchn_fail, %if.then1001
  call void @llvm.dbg.label(metadata !14719), !dbg !14720
  %429 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %rxs, align 8, !dbg !14721
  %430 = ptrtoint %struct.xen_netif_rx_sring* %429 to i64, !dbg !14721
  call void @free_pages(i64 %430, i32 0) #12, !dbg !14721
  br label %alloc_rx_ring_fail, !dbg !14721

alloc_rx_ring_fail:                               ; preds = %grant_rx_ring_fail, %if.then491
  call void @llvm.dbg.label(metadata !14722), !dbg !14723
  %431 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14724
  %tx_ring_ref1019 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %431, i32 0, i32 13, !dbg !14725
  %432 = load i32, i32* %tx_ring_ref1019, align 16, !dbg !14725
  %call1020 = call i32 @gnttab_end_foreign_access_ref(i32 %432, i32 0) #12, !dbg !14726
  br label %grant_tx_ring_fail, !dbg !14726

grant_tx_ring_fail:                               ; preds = %alloc_rx_ring_fail, %if.then486
  call void @llvm.dbg.label(metadata !14727), !dbg !14728
  %433 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %txs, align 8, !dbg !14729
  %434 = ptrtoint %struct.xen_netif_tx_sring* %433 to i64, !dbg !14729
  call void @free_pages(i64 %434, i32 0) #12, !dbg !14729
  br label %fail, !dbg !14729

fail:                                             ; preds = %grant_tx_ring_fail, %if.then
  call void @llvm.dbg.label(metadata !14730), !dbg !14731
  %435 = load i32, i32* %err, align 4, !dbg !14732
  store i32 %435, i32* %retval, align 4, !dbg !14733
  br label %return, !dbg !14733

return:                                           ; preds = %fail, %if.end1016
  %436 = load i32, i32* %retval, align 4, !dbg !14734
  ret i32 %436, !dbg !14734
}

; Function Attrs: noredzone
declare dso_local i32 @xenbus_transaction_start(%struct.xenbus_transaction*) #1

; Function Attrs: noredzone
declare dso_local i32 @xenbus_exists(i32, i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @write_queue_xenstore_keys(%struct.netfront_queue* %queue, %struct.xenbus_transaction* %xbt, i32 %write_hierarchical) #3 !dbg !14735 {
entry:
  %retval = alloca i32, align 4
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %xbt.addr = alloca %struct.xenbus_transaction*, align 8
  %write_hierarchical.addr = alloca i32, align 4
  %dev = alloca %struct.xenbus_device*, align 8
  %err = alloca i32, align 4
  %message = alloca i8*, align 8
  %path = alloca i8*, align 8
  %pathsize = alloca i64, align 8
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !14739, metadata !DIExpression()), !dbg !14740
  store %struct.xenbus_transaction* %xbt, %struct.xenbus_transaction** %xbt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xenbus_transaction** %xbt.addr, metadata !14741, metadata !DIExpression()), !dbg !14742
  store i32 %write_hierarchical, i32* %write_hierarchical.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %write_hierarchical.addr, metadata !14743, metadata !DIExpression()), !dbg !14744
  call void @llvm.dbg.declare(metadata %struct.xenbus_device** %dev, metadata !14745, metadata !DIExpression()), !dbg !14746
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14747
  %info = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %0, i32 0, i32 2, !dbg !14748
  %1 = load %struct.netfront_info*, %struct.netfront_info** %info, align 32, !dbg !14748
  %xbdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %1, i32 0, i32 2, !dbg !14749
  %2 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev, align 8, !dbg !14749
  store %struct.xenbus_device* %2, %struct.xenbus_device** %dev, align 8, !dbg !14746
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14750, metadata !DIExpression()), !dbg !14751
  call void @llvm.dbg.declare(metadata i8** %message, metadata !14752, metadata !DIExpression()), !dbg !14753
  call void @llvm.dbg.declare(metadata i8** %path, metadata !14754, metadata !DIExpression()), !dbg !14755
  call void @llvm.dbg.declare(metadata i64* %pathsize, metadata !14756, metadata !DIExpression()), !dbg !14757
  %3 = load i32, i32* %write_hierarchical.addr, align 4, !dbg !14758
  %tobool = icmp ne i32 %3, 0, !dbg !14758
  br i1 %tobool, label %if.then, label %if.else, !dbg !14760

if.then:                                          ; preds = %entry
  %4 = load %struct.xenbus_device*, %struct.xenbus_device** %dev, align 8, !dbg !14761
  %nodename = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %4, i32 0, i32 1, !dbg !14763
  %5 = load i8*, i8** %nodename, align 8, !dbg !14763
  %call = call i64 @strlen(i8* %5) #12, !dbg !14764
  %add = add i64 %call, 10, !dbg !14765
  store i64 %add, i64* %pathsize, align 8, !dbg !14766
  %6 = load i64, i64* %pathsize, align 8, !dbg !14767
  %call1 = call i8* @kzalloc(i64 %6, i32 3264) #12, !dbg !14768
  store i8* %call1, i8** %path, align 8, !dbg !14769
  %7 = load i8*, i8** %path, align 8, !dbg !14770
  %tobool2 = icmp ne i8* %7, null, !dbg !14770
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !14772

if.then3:                                         ; preds = %if.then
  store i32 -12, i32* %err, align 4, !dbg !14773
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.68, i64 0, i64 0), i8** %message, align 8, !dbg !14775
  br label %error, !dbg !14776

if.end:                                           ; preds = %if.then
  %8 = load i8*, i8** %path, align 8, !dbg !14777
  %9 = load i64, i64* %pathsize, align 8, !dbg !14778
  %10 = load %struct.xenbus_device*, %struct.xenbus_device** %dev, align 8, !dbg !14779
  %nodename4 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %10, i32 0, i32 1, !dbg !14780
  %11 = load i8*, i8** %nodename4, align 8, !dbg !14780
  %12 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14781
  %id = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %12, i32 0, i32 0, !dbg !14782
  %13 = load i32, i32* %id, align 64, !dbg !14782
  %call5 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %8, i64 %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i64 0, i64 0), i8* %11, i32 %13) #12, !dbg !14783
  br label %if.end7, !dbg !14784

if.else:                                          ; preds = %entry
  %14 = load %struct.xenbus_device*, %struct.xenbus_device** %dev, align 8, !dbg !14785
  %nodename6 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %14, i32 0, i32 1, !dbg !14787
  %15 = load i8*, i8** %nodename6, align 8, !dbg !14787
  store i8* %15, i8** %path, align 8, !dbg !14788
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.end
  %16 = load %struct.xenbus_transaction*, %struct.xenbus_transaction** %xbt.addr, align 8, !dbg !14789
  %17 = load i8*, i8** %path, align 8, !dbg !14790
  %18 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14791
  %tx_ring_ref = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %18, i32 0, i32 13, !dbg !14792
  %19 = load i32, i32* %tx_ring_ref, align 16, !dbg !14792
  %coerce.dive = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %16, i32 0, i32 0, !dbg !14793
  %20 = load i32, i32* %coerce.dive, align 4, !dbg !14793
  %call8 = call i32 (i32, i8*, i8*, i8*, ...) @xenbus_printf(i32 %20, i8* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i32 %19) #12, !dbg !14793
  store i32 %call8, i32* %err, align 4, !dbg !14794
  %21 = load i32, i32* %err, align 4, !dbg !14795
  %tobool9 = icmp ne i32 %21, 0, !dbg !14795
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !14797

if.then10:                                        ; preds = %if.end7
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.71, i64 0, i64 0), i8** %message, align 8, !dbg !14798
  br label %error, !dbg !14800

if.end11:                                         ; preds = %if.end7
  %22 = load %struct.xenbus_transaction*, %struct.xenbus_transaction** %xbt.addr, align 8, !dbg !14801
  %23 = load i8*, i8** %path, align 8, !dbg !14802
  %24 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14803
  %rx_ring_ref = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %24, i32 0, i32 21, !dbg !14804
  %25 = load i32, i32* %rx_ring_ref, align 64, !dbg !14804
  %coerce.dive12 = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %22, i32 0, i32 0, !dbg !14805
  %26 = load i32, i32* %coerce.dive12, align 4, !dbg !14805
  %call13 = call i32 (i32, i8*, i8*, i8*, ...) @xenbus_printf(i32 %26, i8* %23, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i32 %25) #12, !dbg !14805
  store i32 %call13, i32* %err, align 4, !dbg !14806
  %27 = load i32, i32* %err, align 4, !dbg !14807
  %tobool14 = icmp ne i32 %27, 0, !dbg !14807
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !14809

if.then15:                                        ; preds = %if.end11
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.73, i64 0, i64 0), i8** %message, align 8, !dbg !14810
  br label %error, !dbg !14812

if.end16:                                         ; preds = %if.end11
  %28 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14813
  %tx_evtchn = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %28, i32 0, i32 5, !dbg !14815
  %29 = load i32, i32* %tx_evtchn, align 16, !dbg !14815
  %30 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14816
  %rx_evtchn = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %30, i32 0, i32 6, !dbg !14817
  %31 = load i32, i32* %rx_evtchn, align 4, !dbg !14817
  %cmp = icmp eq i32 %29, %31, !dbg !14818
  br i1 %cmp, label %if.then17, label %if.else24, !dbg !14819

if.then17:                                        ; preds = %if.end16
  %32 = load %struct.xenbus_transaction*, %struct.xenbus_transaction** %xbt.addr, align 8, !dbg !14820
  %33 = load i8*, i8** %path, align 8, !dbg !14822
  %34 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14823
  %tx_evtchn18 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %34, i32 0, i32 5, !dbg !14824
  %35 = load i32, i32* %tx_evtchn18, align 16, !dbg !14824
  %coerce.dive19 = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %32, i32 0, i32 0, !dbg !14825
  %36 = load i32, i32* %coerce.dive19, align 4, !dbg !14825
  %call20 = call i32 (i32, i8*, i8*, i8*, ...) @xenbus_printf(i32 %36, i8* %33, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i32 %35) #12, !dbg !14825
  store i32 %call20, i32* %err, align 4, !dbg !14826
  %37 = load i32, i32* %err, align 4, !dbg !14827
  %tobool21 = icmp ne i32 %37, 0, !dbg !14827
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !14829

if.then22:                                        ; preds = %if.then17
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.75, i64 0, i64 0), i8** %message, align 8, !dbg !14830
  br label %error, !dbg !14832

if.end23:                                         ; preds = %if.then17
  br label %if.end37, !dbg !14833

if.else24:                                        ; preds = %if.end16
  %38 = load %struct.xenbus_transaction*, %struct.xenbus_transaction** %xbt.addr, align 8, !dbg !14834
  %39 = load i8*, i8** %path, align 8, !dbg !14836
  %40 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14837
  %tx_evtchn25 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %40, i32 0, i32 5, !dbg !14838
  %41 = load i32, i32* %tx_evtchn25, align 16, !dbg !14838
  %coerce.dive26 = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %38, i32 0, i32 0, !dbg !14839
  %42 = load i32, i32* %coerce.dive26, align 4, !dbg !14839
  %call27 = call i32 (i32, i8*, i8*, i8*, ...) @xenbus_printf(i32 %42, i8* %39, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i32 %41) #12, !dbg !14839
  store i32 %call27, i32* %err, align 4, !dbg !14840
  %43 = load i32, i32* %err, align 4, !dbg !14841
  %tobool28 = icmp ne i32 %43, 0, !dbg !14841
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !14843

if.then29:                                        ; preds = %if.else24
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.77, i64 0, i64 0), i8** %message, align 8, !dbg !14844
  br label %error, !dbg !14846

if.end30:                                         ; preds = %if.else24
  %44 = load %struct.xenbus_transaction*, %struct.xenbus_transaction** %xbt.addr, align 8, !dbg !14847
  %45 = load i8*, i8** %path, align 8, !dbg !14848
  %46 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !14849
  %rx_evtchn31 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %46, i32 0, i32 6, !dbg !14850
  %47 = load i32, i32* %rx_evtchn31, align 4, !dbg !14850
  %coerce.dive32 = getelementptr inbounds %struct.xenbus_transaction, %struct.xenbus_transaction* %44, i32 0, i32 0, !dbg !14851
  %48 = load i32, i32* %coerce.dive32, align 4, !dbg !14851
  %call33 = call i32 (i32, i8*, i8*, i8*, ...) @xenbus_printf(i32 %48, i8* %45, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i32 %47) #12, !dbg !14851
  store i32 %call33, i32* %err, align 4, !dbg !14852
  %49 = load i32, i32* %err, align 4, !dbg !14853
  %tobool34 = icmp ne i32 %49, 0, !dbg !14853
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !14855

if.then35:                                        ; preds = %if.end30
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.79, i64 0, i64 0), i8** %message, align 8, !dbg !14856
  br label %error, !dbg !14858

if.end36:                                         ; preds = %if.end30
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end23
  %50 = load i32, i32* %write_hierarchical.addr, align 4, !dbg !14859
  %tobool38 = icmp ne i32 %50, 0, !dbg !14859
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !14861

if.then39:                                        ; preds = %if.end37
  %51 = load i8*, i8** %path, align 8, !dbg !14862
  call void @kfree(i8* %51) #12, !dbg !14863
  br label %if.end40, !dbg !14863

if.end40:                                         ; preds = %if.then39, %if.end37
  store i32 0, i32* %retval, align 4, !dbg !14864
  br label %return, !dbg !14864

error:                                            ; preds = %if.then35, %if.then29, %if.then22, %if.then15, %if.then10, %if.then3
  call void @llvm.dbg.label(metadata !14865), !dbg !14866
  %52 = load i32, i32* %write_hierarchical.addr, align 4, !dbg !14867
  %tobool41 = icmp ne i32 %52, 0, !dbg !14867
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !14869

if.then42:                                        ; preds = %error
  %53 = load i8*, i8** %path, align 8, !dbg !14870
  call void @kfree(i8* %53) #12, !dbg !14871
  br label %if.end43, !dbg !14871

if.end43:                                         ; preds = %if.then42, %error
  %54 = load %struct.xenbus_device*, %struct.xenbus_device** %dev, align 8, !dbg !14872
  %55 = load i32, i32* %err, align 4, !dbg !14873
  %56 = load i8*, i8** %message, align 8, !dbg !14874
  call void (%struct.xenbus_device*, i32, i8*, ...) @xenbus_dev_fatal(%struct.xenbus_device* %54, i32 %55, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0), i8* %56) #12, !dbg !14875
  %57 = load i32, i32* %err, align 4, !dbg !14876
  store i32 %57, i32* %retval, align 4, !dbg !14877
  br label %return, !dbg !14877

return:                                           ; preds = %if.end43, %if.end40
  %58 = load i32, i32* %retval, align 4, !dbg !14878
  ret i32 %58, !dbg !14878
}

; Function Attrs: noredzone
declare dso_local i32 @xenbus_write(i32, i8*, i8*, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @xenbus_transaction_end(i32, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_disconnect_backend(%struct.netfront_info* %info) #3 !dbg !14879 {
entry:
  %info.addr = alloca %struct.netfront_info*, align 8
  %i = alloca i32, align 4
  %num_queues = alloca i32, align 4
  %queue = alloca %struct.netfront_queue*, align 8
  store %struct.netfront_info* %info, %struct.netfront_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %info.addr, metadata !14880, metadata !DIExpression()), !dbg !14881
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14882, metadata !DIExpression()), !dbg !14883
  store i32 0, i32* %i, align 4, !dbg !14883
  call void @llvm.dbg.declare(metadata i32* %num_queues, metadata !14884, metadata !DIExpression()), !dbg !14885
  %0 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14886
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %0, i32 0, i32 1, !dbg !14887
  %1 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !14887
  %real_num_tx_queues = getelementptr inbounds %struct.net_device, %struct.net_device* %1, i32 0, i32 88, !dbg !14888
  %2 = load i32, i32* %real_num_tx_queues, align 4, !dbg !14888
  store i32 %2, i32* %num_queues, align 4, !dbg !14885
  %3 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14889
  %netdev1 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %3, i32 0, i32 1, !dbg !14890
  %4 = load %struct.net_device*, %struct.net_device** %netdev1, align 8, !dbg !14890
  call void @netif_carrier_off(%struct.net_device* %4) #12, !dbg !14891
  store i32 0, i32* %i, align 4, !dbg !14892
  br label %for.cond, !dbg !14894

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !14895
  %6 = load i32, i32* %num_queues, align 4, !dbg !14897
  %cmp = icmp ult i32 %5, %6, !dbg !14898
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !14899

land.rhs:                                         ; preds = %for.cond
  %7 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14900
  %queues = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %7, i32 0, i32 3, !dbg !14901
  %8 = load %struct.netfront_queue*, %struct.netfront_queue** %queues, align 8, !dbg !14901
  %tobool = icmp ne %struct.netfront_queue* %8, null, !dbg !14899
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %tobool, %land.rhs ], !dbg !14902
  br i1 %9, label %for.body, label %for.end, !dbg !14903

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue, metadata !14904, metadata !DIExpression()), !dbg !14906
  %10 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14907
  %queues2 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %10, i32 0, i32 3, !dbg !14908
  %11 = load %struct.netfront_queue*, %struct.netfront_queue** %queues2, align 8, !dbg !14908
  %12 = load i32, i32* %i, align 4, !dbg !14909
  %idxprom = zext i32 %12 to i64, !dbg !14907
  %arrayidx = getelementptr %struct.netfront_queue, %struct.netfront_queue* %11, i64 %idxprom, !dbg !14907
  store %struct.netfront_queue* %arrayidx, %struct.netfront_queue** %queue, align 8, !dbg !14906
  %13 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14910
  %rx_refill_timer = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %13, i32 0, i32 22, !dbg !14910
  %call = call i32 @del_timer(%struct.timer_list* %rx_refill_timer) #12, !dbg !14910
  %14 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14911
  %tx_irq = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %14, i32 0, i32 7, !dbg !14913
  %15 = load i32, i32* %tx_irq, align 8, !dbg !14913
  %tobool3 = icmp ne i32 %15, 0, !dbg !14911
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !14914

land.lhs.true:                                    ; preds = %for.body
  %16 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14915
  %tx_irq4 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %16, i32 0, i32 7, !dbg !14916
  %17 = load i32, i32* %tx_irq4, align 8, !dbg !14916
  %18 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14917
  %rx_irq = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %18, i32 0, i32 8, !dbg !14918
  %19 = load i32, i32* %rx_irq, align 4, !dbg !14918
  %cmp5 = icmp eq i32 %17, %19, !dbg !14919
  br i1 %cmp5, label %if.then, label %if.end, !dbg !14920

if.then:                                          ; preds = %land.lhs.true
  %20 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14921
  %tx_irq6 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %20, i32 0, i32 7, !dbg !14922
  %21 = load i32, i32* %tx_irq6, align 8, !dbg !14922
  %22 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14923
  %23 = bitcast %struct.netfront_queue* %22 to i8*, !dbg !14923
  call void @unbind_from_irqhandler(i32 %21, i8* %23) #12, !dbg !14924
  br label %if.end, !dbg !14924

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %24 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14925
  %tx_irq7 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %24, i32 0, i32 7, !dbg !14927
  %25 = load i32, i32* %tx_irq7, align 8, !dbg !14927
  %tobool8 = icmp ne i32 %25, 0, !dbg !14925
  br i1 %tobool8, label %land.lhs.true9, label %if.end16, !dbg !14928

land.lhs.true9:                                   ; preds = %if.end
  %26 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14929
  %tx_irq10 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %26, i32 0, i32 7, !dbg !14930
  %27 = load i32, i32* %tx_irq10, align 8, !dbg !14930
  %28 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14931
  %rx_irq11 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %28, i32 0, i32 8, !dbg !14932
  %29 = load i32, i32* %rx_irq11, align 4, !dbg !14932
  %cmp12 = icmp ne i32 %27, %29, !dbg !14933
  br i1 %cmp12, label %if.then13, label %if.end16, !dbg !14934

if.then13:                                        ; preds = %land.lhs.true9
  %30 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14935
  %tx_irq14 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %30, i32 0, i32 7, !dbg !14937
  %31 = load i32, i32* %tx_irq14, align 8, !dbg !14937
  %32 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14938
  %33 = bitcast %struct.netfront_queue* %32 to i8*, !dbg !14938
  call void @unbind_from_irqhandler(i32 %31, i8* %33) #12, !dbg !14939
  %34 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14940
  %rx_irq15 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %34, i32 0, i32 8, !dbg !14941
  %35 = load i32, i32* %rx_irq15, align 4, !dbg !14941
  %36 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14942
  %37 = bitcast %struct.netfront_queue* %36 to i8*, !dbg !14942
  call void @unbind_from_irqhandler(i32 %35, i8* %37) #12, !dbg !14943
  br label %if.end16, !dbg !14944

if.end16:                                         ; preds = %if.then13, %land.lhs.true9, %if.end
  %38 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14945
  %rx_evtchn = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %38, i32 0, i32 6, !dbg !14946
  store i32 0, i32* %rx_evtchn, align 4, !dbg !14947
  %39 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14948
  %tx_evtchn = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %39, i32 0, i32 5, !dbg !14949
  store i32 0, i32* %tx_evtchn, align 16, !dbg !14950
  %40 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14951
  %rx_irq17 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %40, i32 0, i32 8, !dbg !14952
  store i32 0, i32* %rx_irq17, align 4, !dbg !14953
  %41 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14954
  %tx_irq18 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %41, i32 0, i32 7, !dbg !14955
  store i32 0, i32* %tx_irq18, align 8, !dbg !14956
  %42 = load %struct.netfront_info*, %struct.netfront_info** %info.addr, align 8, !dbg !14957
  %netdev19 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %42, i32 0, i32 1, !dbg !14959
  %43 = load %struct.net_device*, %struct.net_device** %netdev19, align 8, !dbg !14959
  %call20 = call zeroext i1 @netif_running(%struct.net_device* %43) #12, !dbg !14960
  br i1 %call20, label %if.then21, label %if.end22, !dbg !14961

if.then21:                                        ; preds = %if.end16
  %44 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14962
  %napi = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %44, i32 0, i32 4, !dbg !14963
  call void @napi_synchronize(%struct.napi_struct* %napi) #12, !dbg !14964
  br label %if.end22, !dbg !14964

if.end22:                                         ; preds = %if.then21, %if.end16
  %45 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14965
  call void @xennet_release_tx_bufs(%struct.netfront_queue* %45) #12, !dbg !14966
  %46 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14967
  call void @xennet_release_rx_bufs(%struct.netfront_queue* %46) #12, !dbg !14968
  %47 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14969
  %gref_tx_head = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %47, i32 0, i32 15, !dbg !14970
  %48 = load i32, i32* %gref_tx_head, align 8, !dbg !14970
  call void @gnttab_free_grant_references(i32 %48) #12, !dbg !14971
  %49 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14972
  %gref_rx_head = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %49, i32 0, i32 24, !dbg !14973
  %50 = load i32, i32* %gref_rx_head, align 16, !dbg !14973
  call void @gnttab_free_grant_references(i32 %50) #12, !dbg !14974
  %51 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14975
  %tx_ring_ref = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %51, i32 0, i32 13, !dbg !14976
  %52 = load i32, i32* %tx_ring_ref, align 16, !dbg !14976
  %53 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14977
  %tx = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %53, i32 0, i32 12, !dbg !14978
  %sring = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx, i32 0, i32 3, !dbg !14979
  %54 = load %struct.xen_netif_tx_sring*, %struct.xen_netif_tx_sring** %sring, align 8, !dbg !14979
  %55 = bitcast %struct.xen_netif_tx_sring* %54 to i8*, !dbg !14977
  call void @xennet_end_access(i32 %52, i8* %55) #12, !dbg !14980
  %56 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14981
  %rx_ring_ref = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %56, i32 0, i32 21, !dbg !14982
  %57 = load i32, i32* %rx_ring_ref, align 64, !dbg !14982
  %58 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14983
  %rx = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %58, i32 0, i32 20, !dbg !14984
  %sring23 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx, i32 0, i32 3, !dbg !14985
  %59 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring23, align 8, !dbg !14985
  %60 = bitcast %struct.xen_netif_rx_sring* %59 to i8*, !dbg !14983
  call void @xennet_end_access(i32 %57, i8* %60) #12, !dbg !14986
  %61 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14987
  %tx_ring_ref24 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %61, i32 0, i32 13, !dbg !14988
  store i32 0, i32* %tx_ring_ref24, align 16, !dbg !14989
  %62 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14990
  %rx_ring_ref25 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %62, i32 0, i32 21, !dbg !14991
  store i32 0, i32* %rx_ring_ref25, align 64, !dbg !14992
  %63 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14993
  %tx26 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %63, i32 0, i32 12, !dbg !14994
  %sring27 = getelementptr inbounds %struct.xen_netif_tx_front_ring, %struct.xen_netif_tx_front_ring* %tx26, i32 0, i32 3, !dbg !14995
  store %struct.xen_netif_tx_sring* null, %struct.xen_netif_tx_sring** %sring27, align 8, !dbg !14996
  %64 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !14997
  %rx28 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %64, i32 0, i32 20, !dbg !14998
  %sring29 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx28, i32 0, i32 3, !dbg !14999
  store %struct.xen_netif_rx_sring* null, %struct.xen_netif_rx_sring** %sring29, align 8, !dbg !15000
  %65 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15001
  %page_pool = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %65, i32 0, i32 26, !dbg !15002
  %66 = load %struct.page_pool*, %struct.page_pool** %page_pool, align 8, !dbg !15002
  call void @page_pool_destroy(%struct.page_pool* %66) #12, !dbg !15003
  br label %for.inc, !dbg !15004

for.inc:                                          ; preds = %if.end22
  %67 = load i32, i32* %i, align 4, !dbg !15005
  %inc = add i32 %67, 1, !dbg !15005
  store i32 %inc, i32* %i, align 4, !dbg !15005
  br label %for.cond, !dbg !15006, !llvm.loop !15007

for.end:                                          ; preds = %land.end
  ret void, !dbg !15009
}

; Function Attrs: noredzone
declare dso_local i8* @xenbus_read(i32, i8*, i8*, i32*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @netif_napi_del(%struct.napi_struct* %napi) #3 !dbg !15010 {
entry:
  %napi.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !15011, metadata !DIExpression()), !dbg !15012
  %0 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !15013
  call void @__netif_napi_del(%struct.napi_struct* %0) #12, !dbg !15014
  call void @synchronize_net() #12, !dbg !15015
  ret void, !dbg !15016
}

; Function Attrs: noredzone
declare dso_local void @__netif_napi_del(%struct.napi_struct*) #1

; Function Attrs: noredzone
declare dso_local void @synchronize_net() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #3 !dbg !15017 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15020, metadata !DIExpression()), !dbg !15021
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15022, metadata !DIExpression()), !dbg !15023
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15024, metadata !DIExpression()), !dbg !15025
  %0 = load i64, i64* %n.addr, align 8, !dbg !15026
  %1 = load i64, i64* %size.addr, align 8, !dbg !15027
  %2 = load i32, i32* %flags.addr, align 4, !dbg !15028
  %or = or i32 %2, 256, !dbg !15029
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #12, !dbg !15030
  ret i8* %call, !dbg !15031
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_init_queue(%struct.netfront_queue* %queue) #3 !dbg !15032 {
entry:
  %lock.addr.i40 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i40, metadata !11108, metadata !DIExpression()), !dbg !15033
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11108, metadata !DIExpression()), !dbg !15036
  %retval = alloca i32, align 4
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %i = alloca i16, align 2
  %err = alloca i32, align 4
  %devid = alloca i8*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  %.compoundliteral5 = alloca %struct.spinlock, align 1
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !15039, metadata !DIExpression()), !dbg !15040
  call void @llvm.dbg.declare(metadata i16* %i, metadata !15041, metadata !DIExpression()), !dbg !15042
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15043, metadata !DIExpression()), !dbg !15044
  store i32 0, i32* %err, align 4, !dbg !15044
  call void @llvm.dbg.declare(metadata i8** %devid, metadata !15045, metadata !DIExpression()), !dbg !15046
  br label %do.body, !dbg !15047

do.body:                                          ; preds = %entry
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15048
  %tx_lock = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %0, i32 0, i32 11, !dbg !15048
  store %struct.spinlock* %tx_lock, %struct.spinlock** %lock.addr.i, align 8
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15049
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !15050
  %rlock.i = bitcast %union.anon.2* %2 to %struct.raw_spinlock*, !dbg !15050
  %3 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15048
  %tx_lock1 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %3, i32 0, i32 11, !dbg !15048
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !15048
  %rlock = bitcast %union.anon.2* %4 to %struct.raw_spinlock*, !dbg !15048
  %5 = bitcast %struct.spinlock* %tx_lock1 to i8*, !dbg !15048
  %6 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !15048
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %5, i8* align 1 %6, i64 0, i1 false), !dbg !15048
  br label %do.end, !dbg !15048

do.end:                                           ; preds = %do.body
  br label %do.body2, !dbg !15051

do.body2:                                         ; preds = %do.end
  %7 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15052
  %rx_lock = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %7, i32 0, i32 19, !dbg !15052
  store %struct.spinlock* %rx_lock, %struct.spinlock** %lock.addr.i40, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i40, align 8, !dbg !15053
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !15054
  %rlock.i41 = bitcast %union.anon.2* %9 to %struct.raw_spinlock*, !dbg !15054
  %10 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15052
  %rx_lock4 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %10, i32 0, i32 19, !dbg !15052
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral5, i32 0, i32 0, !dbg !15052
  %rlock6 = bitcast %union.anon.2* %11 to %struct.raw_spinlock*, !dbg !15052
  %12 = bitcast %struct.spinlock* %rx_lock4 to i8*, !dbg !15052
  %13 = bitcast %struct.spinlock* %.compoundliteral5 to i8*, !dbg !15052
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 1 %13, i64 0, i1 false), !dbg !15052
  br label %do.end7, !dbg !15052

do.end7:                                          ; preds = %do.body2
  %14 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15055
  %rx_refill_timer = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %14, i32 0, i32 22, !dbg !15055
  call void @init_timer_key(%struct.timer_list* %rx_refill_timer, void (%struct.timer_list*)* @rx_refill_timeout, i32 0, i8* null, %struct.lock_class_key* null) #12, !dbg !15055
  %15 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15056
  %info = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %15, i32 0, i32 2, !dbg !15057
  %16 = load %struct.netfront_info*, %struct.netfront_info** %info, align 32, !dbg !15057
  %xbdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %16, i32 0, i32 2, !dbg !15058
  %17 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev, align 8, !dbg !15058
  %nodename = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %17, i32 0, i32 1, !dbg !15059
  %18 = load i8*, i8** %nodename, align 8, !dbg !15059
  %call8 = call i8* @strrchr(i8* %18, i32 47) #12, !dbg !15060
  %add.ptr = getelementptr i8, i8* %call8, i64 1, !dbg !15061
  store i8* %add.ptr, i8** %devid, align 8, !dbg !15062
  %19 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15063
  %name = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %19, i32 0, i32 1, !dbg !15064
  %arraydecay = getelementptr inbounds [22 x i8], [22 x i8]* %name, i64 0, i64 0, !dbg !15063
  %20 = load i8*, i8** %devid, align 8, !dbg !15065
  %21 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15066
  %id = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %21, i32 0, i32 0, !dbg !15067
  %22 = load i32, i32* %id, align 64, !dbg !15067
  %call9 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i64 0, i64 0), i8* %20, i32 %22) #12, !dbg !15068
  %23 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15069
  %tx_skb_freelist = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %23, i32 0, i32 18, !dbg !15070
  store i32 0, i32* %tx_skb_freelist, align 32, !dbg !15071
  store i16 0, i16* %i, align 2, !dbg !15072
  br label %for.cond, !dbg !15074

for.cond:                                         ; preds = %for.inc, %do.end7
  %24 = load i16, i16* %i, align 2, !dbg !15075
  %conv = zext i16 %24 to i64, !dbg !15075
  %cmp = icmp ult i64 %conv, 256, !dbg !15077
  br i1 %cmp, label %for.body, label %for.end, !dbg !15078

for.body:                                         ; preds = %for.cond
  %25 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15079
  %tx_skbs = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %25, i32 0, i32 14, !dbg !15081
  %26 = load i16, i16* %i, align 2, !dbg !15082
  %idxprom = zext i16 %26 to i64, !dbg !15079
  %arrayidx = getelementptr [256 x %union.skb_entry], [256 x %union.skb_entry]* %tx_skbs, i64 0, i64 %idxprom, !dbg !15079
  %27 = load i16, i16* %i, align 2, !dbg !15083
  %conv11 = zext i16 %27 to i32, !dbg !15083
  %add = add i32 %conv11, 1, !dbg !15084
  %conv12 = trunc i32 %add to i16, !dbg !15083
  call void @skb_entry_set_link(%union.skb_entry* %arrayidx, i16 zeroext %conv12) #12, !dbg !15085
  %28 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15086
  %grant_tx_ref = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %28, i32 0, i32 16, !dbg !15087
  %29 = load i16, i16* %i, align 2, !dbg !15088
  %idxprom13 = zext i16 %29 to i64, !dbg !15086
  %arrayidx14 = getelementptr [256 x i32], [256 x i32]* %grant_tx_ref, i64 0, i64 %idxprom13, !dbg !15086
  store i32 0, i32* %arrayidx14, align 4, !dbg !15089
  %30 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15090
  %grant_tx_page = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %30, i32 0, i32 17, !dbg !15091
  %31 = load i16, i16* %i, align 2, !dbg !15092
  %idxprom15 = zext i16 %31 to i64, !dbg !15090
  %arrayidx16 = getelementptr [256 x %struct.page*], [256 x %struct.page*]* %grant_tx_page, i64 0, i64 %idxprom15, !dbg !15090
  store %struct.page* null, %struct.page** %arrayidx16, align 8, !dbg !15093
  br label %for.inc, !dbg !15094

for.inc:                                          ; preds = %for.body
  %32 = load i16, i16* %i, align 2, !dbg !15095
  %inc = add i16 %32, 1, !dbg !15095
  store i16 %inc, i16* %i, align 2, !dbg !15095
  br label %for.cond, !dbg !15096, !llvm.loop !15097

for.end:                                          ; preds = %for.cond
  store i16 0, i16* %i, align 2, !dbg !15099
  br label %for.cond17, !dbg !15101

for.cond17:                                       ; preds = %for.inc26, %for.end
  %33 = load i16, i16* %i, align 2, !dbg !15102
  %conv18 = zext i16 %33 to i64, !dbg !15102
  %cmp19 = icmp ult i64 %conv18, 256, !dbg !15104
  br i1 %cmp19, label %for.body21, label %for.end28, !dbg !15105

for.body21:                                       ; preds = %for.cond17
  %34 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15106
  %rx_skbs = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %34, i32 0, i32 23, !dbg !15108
  %35 = load i16, i16* %i, align 2, !dbg !15109
  %idxprom22 = zext i16 %35 to i64, !dbg !15106
  %arrayidx23 = getelementptr [256 x %struct.sk_buff*], [256 x %struct.sk_buff*]* %rx_skbs, i64 0, i64 %idxprom22, !dbg !15106
  store %struct.sk_buff* null, %struct.sk_buff** %arrayidx23, align 8, !dbg !15110
  %36 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15111
  %grant_rx_ref = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %36, i32 0, i32 25, !dbg !15112
  %37 = load i16, i16* %i, align 2, !dbg !15113
  %idxprom24 = zext i16 %37 to i64, !dbg !15111
  %arrayidx25 = getelementptr [256 x i32], [256 x i32]* %grant_rx_ref, i64 0, i64 %idxprom24, !dbg !15111
  store i32 0, i32* %arrayidx25, align 4, !dbg !15114
  br label %for.inc26, !dbg !15115

for.inc26:                                        ; preds = %for.body21
  %38 = load i16, i16* %i, align 2, !dbg !15116
  %inc27 = add i16 %38, 1, !dbg !15116
  store i16 %inc27, i16* %i, align 2, !dbg !15116
  br label %for.cond17, !dbg !15117, !llvm.loop !15118

for.end28:                                        ; preds = %for.cond17
  %39 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15120
  %gref_tx_head = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %39, i32 0, i32 15, !dbg !15122
  %call29 = call i32 @gnttab_alloc_grant_references(i16 zeroext 256, i32* %gref_tx_head) #12, !dbg !15123
  %cmp30 = icmp slt i32 %call29, 0, !dbg !15124
  br i1 %cmp30, label %if.then, label %if.end, !dbg !15125

if.then:                                          ; preds = %for.end28
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.51, i64 0, i64 0)) #13, !dbg !15126
  store i32 -12, i32* %err, align 4, !dbg !15128
  br label %exit, !dbg !15129

if.end:                                           ; preds = %for.end28
  %40 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15130
  %gref_rx_head = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %40, i32 0, i32 24, !dbg !15132
  %call33 = call i32 @gnttab_alloc_grant_references(i16 zeroext 256, i32* %gref_rx_head) #12, !dbg !15133
  %cmp34 = icmp slt i32 %call33, 0, !dbg !15134
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !15135

if.then36:                                        ; preds = %if.end
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.52, i64 0, i64 0)) #13, !dbg !15136
  store i32 -12, i32* %err, align 4, !dbg !15138
  br label %exit_free_tx, !dbg !15139

if.end38:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !15140
  br label %return, !dbg !15140

exit_free_tx:                                     ; preds = %if.then36
  call void @llvm.dbg.label(metadata !15141), !dbg !15142
  %41 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15143
  %gref_tx_head39 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %41, i32 0, i32 15, !dbg !15144
  %42 = load i32, i32* %gref_tx_head39, align 8, !dbg !15144
  call void @gnttab_free_grant_references(i32 %42) #12, !dbg !15145
  br label %exit, !dbg !15145

exit:                                             ; preds = %exit_free_tx, %if.then
  call void @llvm.dbg.label(metadata !15146), !dbg !15147
  %43 = load i32, i32* %err, align 4, !dbg !15148
  store i32 %43, i32* %retval, align 4, !dbg !15149
  br label %return, !dbg !15149

return:                                           ; preds = %exit, %if.end38
  %44 = load i32, i32* %retval, align 4, !dbg !15150
  ret i32 %44, !dbg !15150
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_create_page_pool(%struct.netfront_queue* %queue) #3 !dbg !15151 {
entry:
  %retval = alloca i32, align 4
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %err = alloca i32, align 4
  %pp_params = alloca %struct.page_pool_params, align 8
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !15152, metadata !DIExpression()), !dbg !15153
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15154, metadata !DIExpression()), !dbg !15155
  call void @llvm.dbg.declare(metadata %struct.page_pool_params* %pp_params, metadata !15156, metadata !DIExpression()), !dbg !15157
  %flags = getelementptr inbounds %struct.page_pool_params, %struct.page_pool_params* %pp_params, i32 0, i32 0, !dbg !15158
  store i32 0, i32* %flags, align 8, !dbg !15158
  %order = getelementptr inbounds %struct.page_pool_params, %struct.page_pool_params* %pp_params, i32 0, i32 1, !dbg !15158
  store i32 0, i32* %order, align 4, !dbg !15158
  %pool_size = getelementptr inbounds %struct.page_pool_params, %struct.page_pool_params* %pp_params, i32 0, i32 2, !dbg !15158
  store i32 256, i32* %pool_size, align 8, !dbg !15158
  %nid = getelementptr inbounds %struct.page_pool_params, %struct.page_pool_params* %pp_params, i32 0, i32 3, !dbg !15158
  store i32 -1, i32* %nid, align 4, !dbg !15158
  %dev = getelementptr inbounds %struct.page_pool_params, %struct.page_pool_params* %pp_params, i32 0, i32 4, !dbg !15158
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15159
  %info = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %0, i32 0, i32 2, !dbg !15160
  %1 = load %struct.netfront_info*, %struct.netfront_info** %info, align 32, !dbg !15160
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %1, i32 0, i32 1, !dbg !15161
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !15161
  %dev1 = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 106, !dbg !15162
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !15158
  %dma_dir = getelementptr inbounds %struct.page_pool_params, %struct.page_pool_params* %pp_params, i32 0, i32 5, !dbg !15158
  store i32 0, i32* %dma_dir, align 8, !dbg !15158
  %max_len = getelementptr inbounds %struct.page_pool_params, %struct.page_pool_params* %pp_params, i32 0, i32 6, !dbg !15158
  store i32 3840, i32* %max_len, align 4, !dbg !15158
  %offset = getelementptr inbounds %struct.page_pool_params, %struct.page_pool_params* %pp_params, i32 0, i32 7, !dbg !15158
  store i32 256, i32* %offset, align 8, !dbg !15158
  %call = call %struct.page_pool* @page_pool_create(%struct.page_pool_params* %pp_params) #12, !dbg !15163
  %3 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15164
  %page_pool = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %3, i32 0, i32 26, !dbg !15165
  store %struct.page_pool* %call, %struct.page_pool** %page_pool, align 8, !dbg !15166
  %4 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15167
  %page_pool2 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %4, i32 0, i32 26, !dbg !15169
  %5 = load %struct.page_pool*, %struct.page_pool** %page_pool2, align 8, !dbg !15169
  %6 = bitcast %struct.page_pool* %5 to i8*, !dbg !15167
  %call3 = call zeroext i1 @IS_ERR(i8* %6) #12, !dbg !15170
  br i1 %call3, label %if.then, label %if.end, !dbg !15171

if.then:                                          ; preds = %entry
  %7 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15172
  %page_pool4 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %7, i32 0, i32 26, !dbg !15174
  %8 = load %struct.page_pool*, %struct.page_pool** %page_pool4, align 8, !dbg !15174
  %9 = bitcast %struct.page_pool* %8 to i8*, !dbg !15172
  %call5 = call i64 @PTR_ERR(i8* %9) #12, !dbg !15175
  %conv = trunc i64 %call5 to i32, !dbg !15175
  store i32 %conv, i32* %err, align 4, !dbg !15176
  %10 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15177
  %page_pool6 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %10, i32 0, i32 26, !dbg !15178
  store %struct.page_pool* null, %struct.page_pool** %page_pool6, align 8, !dbg !15179
  %11 = load i32, i32* %err, align 4, !dbg !15180
  store i32 %11, i32* %retval, align 4, !dbg !15181
  br label %return, !dbg !15181

if.end:                                           ; preds = %entry
  %12 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15182
  %xdp_rxq = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %12, i32 0, i32 27, !dbg !15183
  %13 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15184
  %info7 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %13, i32 0, i32 2, !dbg !15185
  %14 = load %struct.netfront_info*, %struct.netfront_info** %info7, align 32, !dbg !15185
  %netdev8 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %14, i32 0, i32 1, !dbg !15186
  %15 = load %struct.net_device*, %struct.net_device** %netdev8, align 8, !dbg !15186
  %16 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15187
  %id = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %16, i32 0, i32 0, !dbg !15188
  %17 = load i32, i32* %id, align 64, !dbg !15188
  %call9 = call i32 @xdp_rxq_info_reg(%struct.xdp_rxq_info* %xdp_rxq, %struct.net_device* %15, i32 %17) #12, !dbg !15189
  store i32 %call9, i32* %err, align 4, !dbg !15190
  %18 = load i32, i32* %err, align 4, !dbg !15191
  %tobool = icmp ne i32 %18, 0, !dbg !15191
  br i1 %tobool, label %if.then10, label %if.end13, !dbg !15193

if.then10:                                        ; preds = %if.end
  %19 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15194
  %info11 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %19, i32 0, i32 2, !dbg !15196
  %20 = load %struct.netfront_info*, %struct.netfront_info** %info11, align 32, !dbg !15196
  %netdev12 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %20, i32 0, i32 1, !dbg !15197
  %21 = load %struct.net_device*, %struct.net_device** %netdev12, align 8, !dbg !15197
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %21, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.53, i64 0, i64 0)) #13, !dbg !15198
  br label %err_free_pp, !dbg !15199

if.end13:                                         ; preds = %if.end
  %22 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15200
  %xdp_rxq14 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %22, i32 0, i32 27, !dbg !15201
  %23 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15202
  %page_pool15 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %23, i32 0, i32 26, !dbg !15203
  %24 = load %struct.page_pool*, %struct.page_pool** %page_pool15, align 8, !dbg !15203
  %25 = bitcast %struct.page_pool* %24 to i8*, !dbg !15202
  %call16 = call i32 @xdp_rxq_info_reg_mem_model(%struct.xdp_rxq_info* %xdp_rxq14, i32 2, i8* %25) #12, !dbg !15204
  store i32 %call16, i32* %err, align 4, !dbg !15205
  %26 = load i32, i32* %err, align 4, !dbg !15206
  %tobool17 = icmp ne i32 %26, 0, !dbg !15206
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !15208

if.then18:                                        ; preds = %if.end13
  %27 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15209
  %info19 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %27, i32 0, i32 2, !dbg !15211
  %28 = load %struct.netfront_info*, %struct.netfront_info** %info19, align 32, !dbg !15211
  %netdev20 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %28, i32 0, i32 1, !dbg !15212
  %29 = load %struct.net_device*, %struct.net_device** %netdev20, align 8, !dbg !15212
  call void (%struct.net_device*, i8*, ...) @netdev_err(%struct.net_device* %29, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.54, i64 0, i64 0)) #13, !dbg !15213
  br label %err_unregister_rxq, !dbg !15214

if.end21:                                         ; preds = %if.end13
  store i32 0, i32* %retval, align 4, !dbg !15215
  br label %return, !dbg !15215

err_unregister_rxq:                               ; preds = %if.then18
  call void @llvm.dbg.label(metadata !15216), !dbg !15217
  %30 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15218
  %xdp_rxq22 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %30, i32 0, i32 27, !dbg !15219
  call void @xdp_rxq_info_unreg(%struct.xdp_rxq_info* %xdp_rxq22) #12, !dbg !15220
  br label %err_free_pp, !dbg !15220

err_free_pp:                                      ; preds = %err_unregister_rxq, %if.then10
  call void @llvm.dbg.label(metadata !15221), !dbg !15222
  %31 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15223
  %page_pool23 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %31, i32 0, i32 26, !dbg !15224
  %32 = load %struct.page_pool*, %struct.page_pool** %page_pool23, align 8, !dbg !15224
  call void @page_pool_destroy(%struct.page_pool* %32) #12, !dbg !15225
  %33 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15226
  %page_pool24 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %33, i32 0, i32 26, !dbg !15227
  store %struct.page_pool* null, %struct.page_pool** %page_pool24, align 8, !dbg !15228
  %34 = load i32, i32* %err, align 4, !dbg !15229
  store i32 %34, i32* %retval, align 4, !dbg !15230
  br label %return, !dbg !15230

return:                                           ; preds = %err_free_pp, %if.end21, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !15231
  ret i32 %35, !dbg !15231
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @netif_napi_add(%struct.net_device*, %struct.napi_struct*, i32 (%struct.napi_struct*, i32)*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_poll(%struct.napi_struct* %napi, i32 %budget) #3 !dbg !15232 {
entry:
  %lock.addr.i128 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i128, metadata !15233, metadata !DIExpression()), !dbg !15235
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !15237, metadata !DIExpression()), !dbg !15239
  %napi.addr = alloca %struct.napi_struct*, align 8
  %budget.addr = alloca i32, align 4
  %queue = alloca %struct.netfront_queue*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netfront_queue*, align 8
  %dev = alloca %struct.net_device*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %rinfo = alloca %struct.netfront_rx_info, align 2
  %rx = alloca %struct.xen_netif_rx_response*, align 8
  %extras = alloca %struct.xen_netif_extra_info*, align 8
  %i = alloca i32, align 4
  %rp = alloca i32, align 4
  %work_done = alloca i32, align 4
  %rxq = alloca %struct.sk_buff_head, align 8
  %errq = alloca %struct.sk_buff_head, align 8
  %tmpq = alloca %struct.sk_buff_head, align 8
  %err = alloca i32, align 4
  %need_xdp_flush = alloca i8, align 1
  %gso = alloca %struct.xen_netif_extra_info*, align 8
  %more_to_do = alloca i32, align 4
  store %struct.napi_struct* %napi, %struct.napi_struct** %napi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %napi.addr, metadata !15241, metadata !DIExpression()), !dbg !15242
  store i32 %budget, i32* %budget.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %budget.addr, metadata !15243, metadata !DIExpression()), !dbg !15244
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue, metadata !15245, metadata !DIExpression()), !dbg !15246
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15247, metadata !DIExpression()), !dbg !15249
  %0 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !15249
  %1 = bitcast %struct.napi_struct* %0 to i8*, !dbg !15249
  store i8* %1, i8** %__mptr, align 8, !dbg !15249
  br label %do.body, !dbg !15249

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15250

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15249
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !15249
  %3 = bitcast i8* %add.ptr to %struct.netfront_queue*, !dbg !15249
  store %struct.netfront_queue* %3, %struct.netfront_queue** %tmp, align 8, !dbg !15250
  %4 = load %struct.netfront_queue*, %struct.netfront_queue** %tmp, align 8, !dbg !15249
  store %struct.netfront_queue* %4, %struct.netfront_queue** %queue, align 8, !dbg !15246
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !15252, metadata !DIExpression()), !dbg !15253
  %5 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15254
  %info = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %5, i32 0, i32 2, !dbg !15255
  %6 = load %struct.netfront_info*, %struct.netfront_info** %info, align 32, !dbg !15255
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %6, i32 0, i32 1, !dbg !15256
  %7 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !15256
  store %struct.net_device* %7, %struct.net_device** %dev, align 8, !dbg !15253
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !15257, metadata !DIExpression()), !dbg !15258
  call void @llvm.dbg.declare(metadata %struct.netfront_rx_info* %rinfo, metadata !15259, metadata !DIExpression()), !dbg !15265
  call void @llvm.dbg.declare(metadata %struct.xen_netif_rx_response** %rx, metadata !15266, metadata !DIExpression()), !dbg !15268
  %rx1 = getelementptr inbounds %struct.netfront_rx_info, %struct.netfront_rx_info* %rinfo, i32 0, i32 0, !dbg !15269
  store %struct.xen_netif_rx_response* %rx1, %struct.xen_netif_rx_response** %rx, align 8, !dbg !15268
  call void @llvm.dbg.declare(metadata %struct.xen_netif_extra_info** %extras, metadata !15270, metadata !DIExpression()), !dbg !15271
  %extras2 = getelementptr inbounds %struct.netfront_rx_info, %struct.netfront_rx_info* %rinfo, i32 0, i32 1, !dbg !15272
  %arraydecay = getelementptr inbounds [5 x %struct.xen_netif_extra_info], [5 x %struct.xen_netif_extra_info]* %extras2, i64 0, i64 0, !dbg !15273
  store %struct.xen_netif_extra_info* %arraydecay, %struct.xen_netif_extra_info** %extras, align 8, !dbg !15271
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15274, metadata !DIExpression()), !dbg !15275
  call void @llvm.dbg.declare(metadata i32* %rp, metadata !15276, metadata !DIExpression()), !dbg !15277
  call void @llvm.dbg.declare(metadata i32* %work_done, metadata !15278, metadata !DIExpression()), !dbg !15279
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head* %rxq, metadata !15280, metadata !DIExpression()), !dbg !15281
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head* %errq, metadata !15282, metadata !DIExpression()), !dbg !15283
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head* %tmpq, metadata !15284, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15286, metadata !DIExpression()), !dbg !15287
  call void @llvm.dbg.declare(metadata i8* %need_xdp_flush, metadata !15288, metadata !DIExpression()), !dbg !15289
  store i8 0, i8* %need_xdp_flush, align 1, !dbg !15289
  %8 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15290
  %rx_lock = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %8, i32 0, i32 19, !dbg !15291
  store %struct.spinlock* %rx_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !15292, !srcloc !15294
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15295
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !15295
  %rlock.i = bitcast %union.anon.2* %10 to %struct.raw_spinlock*, !dbg !15295
  call void @skb_queue_head_init(%struct.sk_buff_head* %rxq) #12, !dbg !15297
  call void @skb_queue_head_init(%struct.sk_buff_head* %errq) #12, !dbg !15298
  call void @skb_queue_head_init(%struct.sk_buff_head* %tmpq) #12, !dbg !15299
  %11 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15300
  %rx3 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %11, i32 0, i32 20, !dbg !15301
  %sring = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx3, i32 0, i32 3, !dbg !15302
  %12 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring, align 8, !dbg !15302
  %rsp_prod = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %12, i32 0, i32 2, !dbg !15303
  %13 = load i32, i32* %rsp_prod, align 4, !dbg !15303
  store i32 %13, i32* %rp, align 4, !dbg !15304
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !15305, !srcloc !15306
  %14 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15307
  %rx4 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %14, i32 0, i32 20, !dbg !15308
  %rsp_cons = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx4, i32 0, i32 1, !dbg !15309
  %15 = load i32, i32* %rsp_cons, align 4, !dbg !15309
  store i32 %15, i32* %i, align 4, !dbg !15310
  store i32 0, i32* %work_done, align 4, !dbg !15311
  br label %while.cond, !dbg !15312

while.cond:                                       ; preds = %if.end86, %while.end, %do.end
  %16 = load i32, i32* %i, align 4, !dbg !15313
  %17 = load i32, i32* %rp, align 4, !dbg !15314
  %cmp = icmp ne i32 %16, %17, !dbg !15315
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !15316

land.rhs:                                         ; preds = %while.cond
  %18 = load i32, i32* %work_done, align 4, !dbg !15317
  %19 = load i32, i32* %budget.addr, align 4, !dbg !15318
  %cmp5 = icmp slt i32 %18, %19, !dbg !15319
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %20 = phi i1 [ false, %while.cond ], [ %cmp5, %land.rhs ], !dbg !15320
  br i1 %20, label %while.body, label %while.end91, !dbg !15312

while.body:                                       ; preds = %land.end
  %21 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !15321
  %22 = bitcast %struct.xen_netif_rx_response* %21 to i8*, !dbg !15323
  %23 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15324
  %rx6 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %23, i32 0, i32 20, !dbg !15324
  %sring7 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx6, i32 0, i32 3, !dbg !15324
  %24 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring7, align 8, !dbg !15324
  %ring = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %24, i32 0, i32 5, !dbg !15324
  %25 = load i32, i32* %i, align 4, !dbg !15324
  %26 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15324
  %rx8 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %26, i32 0, i32 20, !dbg !15324
  %nr_ents = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx8, i32 0, i32 2, !dbg !15324
  %27 = load i32, i32* %nr_ents, align 8, !dbg !15324
  %sub = sub i32 %27, 1, !dbg !15324
  %and = and i32 %25, %sub, !dbg !15324
  %idxprom = zext i32 %and to i64, !dbg !15324
  %arrayidx = getelementptr [1 x %union.xen_netif_rx_sring_entry], [1 x %union.xen_netif_rx_sring_entry]* %ring, i64 0, i64 %idxprom, !dbg !15324
  %rsp = bitcast %union.xen_netif_rx_sring_entry* %arrayidx to %struct.xen_netif_rx_response*, !dbg !15324
  %28 = bitcast %struct.xen_netif_rx_response* %rsp to i8*, !dbg !15323
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %22, i8* align 4 %28, i64 8, i1 false), !dbg !15323
  %29 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %extras, align 8, !dbg !15325
  %30 = bitcast %struct.xen_netif_extra_info* %29 to i8*, !dbg !15326
  call void @llvm.memset.p0i8.i64(i8* align 2 %30, i8 0, i64 40, i1 false), !dbg !15326
  %31 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15327
  %32 = load i32, i32* %rp, align 4, !dbg !15328
  %call = call i32 @xennet_get_responses(%struct.netfront_queue* %31, %struct.netfront_rx_info* %rinfo, i32 %32, %struct.sk_buff_head* %tmpq, i8* %need_xdp_flush) #12, !dbg !15329
  store i32 %call, i32* %err, align 4, !dbg !15330
  %33 = load i32, i32* %err, align 4, !dbg !15331
  %tobool = icmp ne i32 %33, 0, !dbg !15331
  %lnot = xor i1 %tobool, true, !dbg !15331
  %lnot9 = xor i1 %lnot, true, !dbg !15331
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !15331
  %conv = sext i32 %lnot.ext to i64, !dbg !15331
  %tobool10 = icmp ne i64 %conv, 0, !dbg !15331
  br i1 %tobool10, label %if.then, label %if.end, !dbg !15333

if.then:                                          ; preds = %while.body
  br label %err11, !dbg !15334

err11:                                            ; preds = %if.then70, %if.then31, %if.then
  call void @llvm.dbg.label(metadata !15335), !dbg !15337
  br label %while.cond12, !dbg !15338

while.cond12:                                     ; preds = %while.body15, %err11
  %call13 = call %struct.sk_buff* @__skb_dequeue(%struct.sk_buff_head* %tmpq) #12, !dbg !15339
  store %struct.sk_buff* %call13, %struct.sk_buff** %skb, align 8, !dbg !15340
  %tobool14 = icmp ne %struct.sk_buff* %call13, null, !dbg !15338
  br i1 %tobool14, label %while.body15, label %while.end, !dbg !15338

while.body15:                                     ; preds = %while.cond12
  %34 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15341
  call void @__skb_queue_tail(%struct.sk_buff_head* %errq, %struct.sk_buff* %34) #12, !dbg !15342
  br label %while.cond12, !dbg !15338, !llvm.loop !15343

while.end:                                        ; preds = %while.cond12
  %35 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !15345
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %35, i32 0, i32 24, !dbg !15346
  %rx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 4, !dbg !15347
  %36 = load i64, i64* %rx_errors, align 8, !dbg !15348
  %inc = add i64 %36, 1, !dbg !15348
  store i64 %inc, i64* %rx_errors, align 8, !dbg !15348
  %37 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15349
  %rx16 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %37, i32 0, i32 20, !dbg !15350
  %rsp_cons17 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx16, i32 0, i32 1, !dbg !15351
  %38 = load i32, i32* %rsp_cons17, align 4, !dbg !15351
  store i32 %38, i32* %i, align 4, !dbg !15352
  br label %while.cond, !dbg !15353, !llvm.loop !15354

if.end:                                           ; preds = %while.body
  %call18 = call %struct.sk_buff* @__skb_dequeue(%struct.sk_buff_head* %tmpq) #12, !dbg !15356
  store %struct.sk_buff* %call18, %struct.sk_buff** %skb, align 8, !dbg !15357
  %39 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %extras, align 8, !dbg !15358
  %arrayidx19 = getelementptr %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %39, i64 0, !dbg !15358
  %type = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %arrayidx19, i32 0, i32 0, !dbg !15360
  %40 = load i8, i8* %type, align 2, !dbg !15360
  %tobool20 = icmp ne i8 %40, 0, !dbg !15358
  br i1 %tobool20, label %if.then21, label %if.end36, !dbg !15361

if.then21:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.xen_netif_extra_info** %gso, metadata !15362, metadata !DIExpression()), !dbg !15364
  %41 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %extras, align 8, !dbg !15365
  %arrayidx22 = getelementptr %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %41, i64 0, !dbg !15365
  store %struct.xen_netif_extra_info* %arrayidx22, %struct.xen_netif_extra_info** %gso, align 8, !dbg !15366
  %42 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15367
  %43 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %gso, align 8, !dbg !15367
  %call23 = call i32 @xennet_set_skb_gso(%struct.sk_buff* %42, %struct.xen_netif_extra_info* %43) #12, !dbg !15367
  %tobool24 = icmp ne i32 %call23, 0, !dbg !15367
  %lnot25 = xor i1 %tobool24, true, !dbg !15367
  %lnot27 = xor i1 %lnot25, true, !dbg !15367
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !15367
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !15367
  %tobool30 = icmp ne i64 %conv29, 0, !dbg !15367
  br i1 %tobool30, label %if.then31, label %if.end35, !dbg !15369

if.then31:                                        ; preds = %if.then21
  %44 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15370
  call void @__skb_queue_head(%struct.sk_buff_head* %tmpq, %struct.sk_buff* %44) #12, !dbg !15372
  %call32 = call i32 @skb_queue_len(%struct.sk_buff_head* %tmpq) #12, !dbg !15373
  %45 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15374
  %rx33 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %45, i32 0, i32 20, !dbg !15375
  %rsp_cons34 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx33, i32 0, i32 1, !dbg !15376
  %46 = load i32, i32* %rsp_cons34, align 4, !dbg !15377
  %add = add i32 %46, %call32, !dbg !15377
  store i32 %add, i32* %rsp_cons34, align 4, !dbg !15377
  br label %err11, !dbg !15378

if.end35:                                         ; preds = %if.then21
  br label %if.end36, !dbg !15379

if.end36:                                         ; preds = %if.end35, %if.end
  %47 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !15380
  %status = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %47, i32 0, i32 3, !dbg !15381
  %48 = load i16, i16* %status, align 2, !dbg !15381
  %conv37 = sext i16 %48 to i32, !dbg !15380
  %49 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15382
  %cb = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %49, i32 0, i32 3, !dbg !15382
  %arraydecay38 = getelementptr inbounds [48 x i8], [48 x i8]* %cb, i64 0, i64 0, !dbg !15383
  %50 = bitcast i8* %arraydecay38 to %struct.netfront_cb*, !dbg !15383
  %pull_to = getelementptr inbounds %struct.netfront_cb, %struct.netfront_cb* %50, i32 0, i32 0, !dbg !15383
  store i32 %conv37, i32* %pull_to, align 8, !dbg !15384
  %51 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15385
  %cb39 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %51, i32 0, i32 3, !dbg !15385
  %arraydecay40 = getelementptr inbounds [48 x i8], [48 x i8]* %cb39, i64 0, i64 0, !dbg !15387
  %52 = bitcast i8* %arraydecay40 to %struct.netfront_cb*, !dbg !15387
  %pull_to41 = getelementptr inbounds %struct.netfront_cb, %struct.netfront_cb* %52, i32 0, i32 0, !dbg !15387
  %53 = load i32, i32* %pull_to41, align 8, !dbg !15387
  %cmp42 = icmp sgt i32 %53, 256, !dbg !15388
  br i1 %cmp42, label %if.then44, label %if.end48, !dbg !15389

if.then44:                                        ; preds = %if.end36
  %54 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15390
  %cb45 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %54, i32 0, i32 3, !dbg !15390
  %arraydecay46 = getelementptr inbounds [48 x i8], [48 x i8]* %cb45, i64 0, i64 0, !dbg !15391
  %55 = bitcast i8* %arraydecay46 to %struct.netfront_cb*, !dbg !15391
  %pull_to47 = getelementptr inbounds %struct.netfront_cb, %struct.netfront_cb* %55, i32 0, i32 0, !dbg !15391
  store i32 256, i32* %pull_to47, align 8, !dbg !15392
  br label %if.end48, !dbg !15390

if.end48:                                         ; preds = %if.then44, %if.end36
  %56 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15393
  %call49 = call i8* @skb_end_pointer(%struct.sk_buff* %56) #12, !dbg !15393
  %57 = bitcast i8* %call49 to %struct.skb_shared_info*, !dbg !15394
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %57, i32 0, i32 12, !dbg !15394
  %arrayidx50 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 0, !dbg !15393
  %58 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !15395
  %offset = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %58, i32 0, i32 1, !dbg !15396
  %59 = load i16, i16* %offset, align 2, !dbg !15396
  %conv51 = zext i16 %59 to i32, !dbg !15395
  call void @skb_frag_off_set(%struct.bio_vec* %arrayidx50, i32 %conv51) #12, !dbg !15397
  %60 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15398
  %call52 = call i8* @skb_end_pointer(%struct.sk_buff* %60) #12, !dbg !15398
  %61 = bitcast i8* %call52 to %struct.skb_shared_info*, !dbg !15399
  %frags53 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %61, i32 0, i32 12, !dbg !15399
  %arrayidx54 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags53, i64 0, i64 0, !dbg !15398
  %62 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !15400
  %status55 = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %62, i32 0, i32 3, !dbg !15401
  %63 = load i16, i16* %status55, align 2, !dbg !15401
  %conv56 = sext i16 %63 to i32, !dbg !15400
  call void @skb_frag_size_set(%struct.bio_vec* %arrayidx54, i32 %conv56) #12, !dbg !15402
  %64 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !15403
  %status57 = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %64, i32 0, i32 3, !dbg !15404
  %65 = load i16, i16* %status57, align 2, !dbg !15404
  %conv58 = sext i16 %65 to i32, !dbg !15403
  %66 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15405
  %data_len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %66, i32 0, i32 6, !dbg !15406
  store i32 %conv58, i32* %data_len, align 4, !dbg !15407
  %67 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !15408
  %status59 = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %67, i32 0, i32 3, !dbg !15409
  %68 = load i16, i16* %status59, align 2, !dbg !15409
  %conv60 = sext i16 %68 to i32, !dbg !15408
  %69 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15410
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %69, i32 0, i32 5, !dbg !15411
  %70 = load i32, i32* %len, align 8, !dbg !15412
  %add61 = add i32 %70, %conv60, !dbg !15412
  store i32 %add61, i32* %len, align 8, !dbg !15412
  %71 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15413
  %72 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15413
  %call62 = call i32 @xennet_fill_frags(%struct.netfront_queue* %71, %struct.sk_buff* %72, %struct.sk_buff_head* %tmpq) #12, !dbg !15413
  %tobool63 = icmp ne i32 %call62, 0, !dbg !15413
  %lnot64 = xor i1 %tobool63, true, !dbg !15413
  %lnot66 = xor i1 %lnot64, true, !dbg !15413
  %lnot.ext67 = zext i1 %lnot66 to i32, !dbg !15413
  %conv68 = sext i32 %lnot.ext67 to i64, !dbg !15413
  %tobool69 = icmp ne i64 %conv68, 0, !dbg !15413
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !15415

if.then70:                                        ; preds = %if.end48
  br label %err11, !dbg !15416

if.end71:                                         ; preds = %if.end48
  %73 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !15417
  %flags = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %73, i32 0, i32 2, !dbg !15419
  %74 = load i16, i16* %flags, align 2, !dbg !15419
  %conv72 = zext i16 %74 to i32, !dbg !15417
  %and73 = and i32 %conv72, 2, !dbg !15420
  %tobool74 = icmp ne i32 %and73, 0, !dbg !15420
  br i1 %tobool74, label %if.then75, label %if.else, !dbg !15421

if.then75:                                        ; preds = %if.end71
  %75 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15422
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %75, i32 0, i32 14, !dbg !15423
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !15424
  %bf.clear = and i16 %bf.load, -97, !dbg !15424
  %bf.set = or i16 %bf.clear, 96, !dbg !15424
  store i16 %bf.set, i16* %ip_summed, align 8, !dbg !15424
  br label %if.end86, !dbg !15422

if.else:                                          ; preds = %if.end71
  %76 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !15425
  %flags76 = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %76, i32 0, i32 2, !dbg !15427
  %77 = load i16, i16* %flags76, align 2, !dbg !15427
  %conv77 = zext i16 %77 to i32, !dbg !15425
  %and78 = and i32 %conv77, 1, !dbg !15428
  %tobool79 = icmp ne i32 %and78, 0, !dbg !15428
  br i1 %tobool79, label %if.then80, label %if.end85, !dbg !15429

if.then80:                                        ; preds = %if.else
  %78 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15430
  %ip_summed81 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %78, i32 0, i32 14, !dbg !15431
  %bf.load82 = load i16, i16* %ip_summed81, align 8, !dbg !15432
  %bf.clear83 = and i16 %bf.load82, -97, !dbg !15432
  %bf.set84 = or i16 %bf.clear83, 32, !dbg !15432
  store i16 %bf.set84, i16* %ip_summed81, align 8, !dbg !15432
  br label %if.end85, !dbg !15430

if.end85:                                         ; preds = %if.then80, %if.else
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then75
  %79 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !15433
  call void @__skb_queue_tail(%struct.sk_buff_head* %rxq, %struct.sk_buff* %79) #12, !dbg !15434
  %80 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15435
  %rx87 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %80, i32 0, i32 20, !dbg !15436
  %rsp_cons88 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx87, i32 0, i32 1, !dbg !15437
  %81 = load i32, i32* %rsp_cons88, align 4, !dbg !15438
  %inc89 = add i32 %81, 1, !dbg !15438
  store i32 %inc89, i32* %rsp_cons88, align 4, !dbg !15438
  store i32 %inc89, i32* %i, align 4, !dbg !15439
  %82 = load i32, i32* %work_done, align 4, !dbg !15440
  %inc90 = add i32 %82, 1, !dbg !15440
  store i32 %inc90, i32* %work_done, align 4, !dbg !15440
  br label %while.cond, !dbg !15312, !llvm.loop !15354

while.end91:                                      ; preds = %land.end
  %83 = load i8, i8* %need_xdp_flush, align 1, !dbg !15441
  %tobool92 = trunc i8 %83 to i1, !dbg !15441
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !15443

if.then93:                                        ; preds = %while.end91
  call void @xdp_do_flush() #12, !dbg !15444
  br label %if.end94, !dbg !15444

if.end94:                                         ; preds = %if.then93, %while.end91
  call void @__skb_queue_purge(%struct.sk_buff_head* %errq) #12, !dbg !15445
  %84 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15446
  %call95 = call i32 @handle_incoming_queue(%struct.netfront_queue* %84, %struct.sk_buff_head* %rxq) #12, !dbg !15447
  %85 = load i32, i32* %work_done, align 4, !dbg !15448
  %sub96 = sub i32 %85, %call95, !dbg !15448
  store i32 %sub96, i32* %work_done, align 4, !dbg !15448
  %86 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15449
  call void @xennet_alloc_rx_buffers(%struct.netfront_queue* %86) #12, !dbg !15450
  %87 = load i32, i32* %work_done, align 4, !dbg !15451
  %88 = load i32, i32* %budget.addr, align 4, !dbg !15453
  %cmp97 = icmp slt i32 %87, %88, !dbg !15454
  br i1 %cmp97, label %if.then99, label %if.end126, !dbg !15455

if.then99:                                        ; preds = %if.end94
  call void @llvm.dbg.declare(metadata i32* %more_to_do, metadata !15456, metadata !DIExpression()), !dbg !15458
  store i32 0, i32* %more_to_do, align 4, !dbg !15458
  %89 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !15459
  %90 = load i32, i32* %work_done, align 4, !dbg !15460
  %call100 = call zeroext i1 @napi_complete_done(%struct.napi_struct* %89, i32 %90) #12, !dbg !15461
  br label %do.body101, !dbg !15462

do.body101:                                       ; preds = %if.then99
  %91 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15463
  %rx102 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %91, i32 0, i32 20, !dbg !15463
  %sring103 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx102, i32 0, i32 3, !dbg !15463
  %92 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring103, align 8, !dbg !15463
  %rsp_prod104 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %92, i32 0, i32 2, !dbg !15463
  %93 = load i32, i32* %rsp_prod104, align 4, !dbg !15463
  %94 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15463
  %rx105 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %94, i32 0, i32 20, !dbg !15463
  %rsp_cons106 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx105, i32 0, i32 1, !dbg !15463
  %95 = load i32, i32* %rsp_cons106, align 4, !dbg !15463
  %sub107 = sub i32 %93, %95, !dbg !15463
  store i32 %sub107, i32* %more_to_do, align 4, !dbg !15463
  %96 = load i32, i32* %more_to_do, align 4, !dbg !15465
  %tobool108 = icmp ne i32 %96, 0, !dbg !15465
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !15463

if.then109:                                       ; preds = %do.body101
  br label %do.end122, !dbg !15465

if.end110:                                        ; preds = %do.body101
  %97 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15463
  %rx111 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %97, i32 0, i32 20, !dbg !15463
  %rsp_cons112 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx111, i32 0, i32 1, !dbg !15463
  %98 = load i32, i32* %rsp_cons112, align 4, !dbg !15463
  %add113 = add i32 %98, 1, !dbg !15463
  %99 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15463
  %rx114 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %99, i32 0, i32 20, !dbg !15463
  %sring115 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx114, i32 0, i32 3, !dbg !15463
  %100 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring115, align 8, !dbg !15463
  %rsp_event = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %100, i32 0, i32 3, !dbg !15463
  store i32 %add113, i32* %rsp_event, align 4, !dbg !15463
  call void asm sideeffect "lock; addl $$0,-4(%rsp)", "~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !15463, !srcloc !15467
  %101 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15463
  %rx116 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %101, i32 0, i32 20, !dbg !15463
  %sring117 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx116, i32 0, i32 3, !dbg !15463
  %102 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring117, align 8, !dbg !15463
  %rsp_prod118 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %102, i32 0, i32 2, !dbg !15463
  %103 = load i32, i32* %rsp_prod118, align 4, !dbg !15463
  %104 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15463
  %rx119 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %104, i32 0, i32 20, !dbg !15463
  %rsp_cons120 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx119, i32 0, i32 1, !dbg !15463
  %105 = load i32, i32* %rsp_cons120, align 4, !dbg !15463
  %sub121 = sub i32 %103, %105, !dbg !15463
  store i32 %sub121, i32* %more_to_do, align 4, !dbg !15463
  br label %do.end122, !dbg !15463

do.end122:                                        ; preds = %if.end110, %if.then109
  %106 = load i32, i32* %more_to_do, align 4, !dbg !15468
  %tobool123 = icmp ne i32 %106, 0, !dbg !15468
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !15470

if.then124:                                       ; preds = %do.end122
  %107 = load %struct.napi_struct*, %struct.napi_struct** %napi.addr, align 8, !dbg !15471
  call void @napi_schedule(%struct.napi_struct* %107) #12, !dbg !15472
  br label %if.end125, !dbg !15472

if.end125:                                        ; preds = %if.then124, %do.end122
  br label %if.end126, !dbg !15473

if.end126:                                        ; preds = %if.end125, %if.end94
  %108 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15474
  %rx_lock127 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %108, i32 0, i32 19, !dbg !15475
  store %struct.spinlock* %rx_lock127, %struct.spinlock** %lock.addr.i128, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !15476, !srcloc !15478
  %109 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i128, align 8, !dbg !15479
  %110 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %109, i32 0, i32 0, !dbg !15479
  %rlock.i129 = bitcast %union.anon.2* %110 to %struct.raw_spinlock*, !dbg !15479
  %111 = load i32, i32* %work_done, align 4, !dbg !15481
  ret i32 %111, !dbg !15482
}

; Function Attrs: noredzone
declare dso_local i32 @netif_set_real_num_tx_queues(%struct.net_device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #3 !dbg !15483 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !15484, metadata !DIExpression()), !dbg !15488
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !15497, metadata !DIExpression()), !dbg !15498
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !15499, metadata !DIExpression()), !dbg !15500
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !15501, metadata !DIExpression()), !dbg !15502
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !15503, metadata !DIExpression()), !dbg !15507
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !15509, metadata !DIExpression()), !dbg !15513
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !15515, metadata !DIExpression()), !dbg !15519
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !15524, metadata !DIExpression()), !dbg !15525
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !15526, metadata !DIExpression()), !dbg !15527
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15528, metadata !DIExpression()), !dbg !15529
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !15530, metadata !DIExpression()), !dbg !15531
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !15532, metadata !DIExpression()), !dbg !15533
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !15534, metadata !DIExpression()), !dbg !15535
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !15536, metadata !DIExpression()), !dbg !15537
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !15538, metadata !DIExpression()), !dbg !15539
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15540, metadata !DIExpression()), !dbg !15541
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15542, metadata !DIExpression()), !dbg !15543
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15544, metadata !DIExpression()), !dbg !15545
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !15546, metadata !DIExpression()), !dbg !15547
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !15548, metadata !DIExpression()), !dbg !15551
  %0 = load i64, i64* %n.addr, align 8, !dbg !15551
  store i64 %0, i64* %__a, align 8, !dbg !15551
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !15552, metadata !DIExpression()), !dbg !15551
  %1 = load i64, i64* %size.addr, align 8, !dbg !15551
  store i64 %1, i64* %__b, align 8, !dbg !15551
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !15553, metadata !DIExpression()), !dbg !15551
  store i64* %bytes, i64** %__d, align 8, !dbg !15551
  %cmp = icmp eq i64* %__a, %__b, !dbg !15551
  %conv = zext i1 %cmp to i32, !dbg !15551
  %2 = load i64*, i64** %__d, align 8, !dbg !15551
  %cmp1 = icmp eq i64* %__a, %2, !dbg !15551
  %conv2 = zext i1 %cmp1 to i32, !dbg !15551
  %3 = load i64, i64* %__a, align 8, !dbg !15551
  %4 = load i64, i64* %__b, align 8, !dbg !15551
  %5 = load i64*, i64** %__d, align 8, !dbg !15551
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !15551
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !15551
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !15551
  store i64 %8, i64* %5, align 8, !dbg !15551
  %frombool = zext i1 %7 to i8, !dbg !15551
  store i8 %frombool, i8* %tmp, align 1, !dbg !15551
  %9 = load i8, i8* %tmp, align 1, !dbg !15551
  %tobool = trunc i8 %9 to i1, !dbg !15551
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #12, !dbg !15554
  %lnot = xor i1 %call, true, !dbg !15554
  %lnot3 = xor i1 %lnot, true, !dbg !15554
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !15554
  %conv4 = sext i32 %lnot.ext to i64, !dbg !15554
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !15554
  br i1 %tobool5, label %if.then, label %if.end, !dbg !15555

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15556
  br label %return, !dbg !15556

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !15557
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !15558
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !15559

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !15560
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !15561
  br i1 %13, label %if.then6, label %if.end8, !dbg !15562

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !15563
  %15 = load i32, i32* %flags.addr, align 4, !dbg !15564
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !15565
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #8, !dbg !15566
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !15567

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !15568
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !15569
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !15570

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !15571
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !15572
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !15573
  %call.i.i = call i32 @get_order(i64 %21) #15, !dbg !15574
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !15533
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !15575
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !15576
  %24 = load i32, i32* %order.i.i, align 4, !dbg !15577
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !15578
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !15579
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !15580
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #14, !dbg !15581
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !15581
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !15581
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !15581
  call void @llvm.assume(i1 %maskcond.i.i.i) #8, !dbg !15581
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !15582
  br label %kmalloc.exit, !dbg !15582

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !15583
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15584
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !15584
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !15586

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !15587
  br label %kmalloc_index.exit.i, !dbg !15587

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15588
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !15590
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !15591

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15592
  br label %kmalloc_index.exit.i, !dbg !15592

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15593
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !15595
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !15596

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15597
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !15598
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !15599

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !15600
  br label %kmalloc_index.exit.i, !dbg !15600

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15601
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !15603
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !15604

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15605
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !15606
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !15607

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !15608
  br label %kmalloc_index.exit.i, !dbg !15608

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15609
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !15611
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !15612

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15613
  br label %kmalloc_index.exit.i, !dbg !15613

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15614
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !15616
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !15617

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !15618
  br label %kmalloc_index.exit.i, !dbg !15618

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15619
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !15621
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !15622

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !15623
  br label %kmalloc_index.exit.i, !dbg !15623

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15624
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !15626
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !15627

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !15628
  br label %kmalloc_index.exit.i, !dbg !15628

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15629
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !15631
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !15632

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !15633
  br label %kmalloc_index.exit.i, !dbg !15633

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15634
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !15636
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !15637

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !15638
  br label %kmalloc_index.exit.i, !dbg !15638

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15639
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !15641
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !15642

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !15643
  br label %kmalloc_index.exit.i, !dbg !15643

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15644
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !15646
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !15647

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !15648
  br label %kmalloc_index.exit.i, !dbg !15648

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15649
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !15651
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !15652

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !15653
  br label %kmalloc_index.exit.i, !dbg !15653

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15654
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !15656
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !15657

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !15658
  br label %kmalloc_index.exit.i, !dbg !15658

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15659
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !15661
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !15662

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !15663
  br label %kmalloc_index.exit.i, !dbg !15663

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15664
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !15666
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !15667

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !15668
  br label %kmalloc_index.exit.i, !dbg !15668

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15669
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !15671
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !15672

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !15673
  br label %kmalloc_index.exit.i, !dbg !15673

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15674
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !15676
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !15677

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !15678
  br label %kmalloc_index.exit.i, !dbg !15678

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15679
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !15681
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !15682

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !15683
  br label %kmalloc_index.exit.i, !dbg !15683

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15684
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !15686
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !15687

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !15688
  br label %kmalloc_index.exit.i, !dbg !15688

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15689
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !15691
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !15692

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !15693
  br label %kmalloc_index.exit.i, !dbg !15693

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15694
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !15696
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !15697

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !15698
  br label %kmalloc_index.exit.i, !dbg !15698

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15699
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !15701
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !15702

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !15703
  br label %kmalloc_index.exit.i, !dbg !15703

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15704
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !15706
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !15707

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !15708
  br label %kmalloc_index.exit.i, !dbg !15708

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15709
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !15711
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !15712

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !15713
  br label %kmalloc_index.exit.i, !dbg !15713

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15714
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !15716
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !15717

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !15718
  br label %kmalloc_index.exit.i, !dbg !15718

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15719
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !15721
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !15722

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !15723
  br label %kmalloc_index.exit.i, !dbg !15723

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15724
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !15726
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !15727

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !15728
  br label %kmalloc_index.exit.i, !dbg !15728

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 382, i32 0, i64 12) #8, !dbg !15729, !srcloc !15732
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 235) #8, !dbg !15733, !srcloc !15736
  unreachable, !dbg !15737

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !15738
  store i32 %59, i32* %index.i, align 4, !dbg !15739
  %60 = load i32, i32* %index.i, align 4, !dbg !15740
  %tobool.i = icmp ne i32 %60, 0, !dbg !15740
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !15742

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !15743
  br label %kmalloc.exit, !dbg !15743

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !15744
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15745
  %and.i.i = and i32 %62, 17, !dbg !15745
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !15745
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !15745
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !15745
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !15745
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !15747

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !15748
  br label %kmalloc_type.exit.i, !dbg !15748

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15749
  %and2.i.i = and i32 %63, 1, !dbg !15750
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !15749
  %64 = zext i1 %tobool3.i.i to i64, !dbg !15749
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !15749
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !15751
  br label %kmalloc_type.exit.i, !dbg !15751

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !15752
  %idxprom.i = zext i32 %65 to i64, !dbg !15753
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !15753
  %66 = load i32, i32* %index.i, align 4, !dbg !15754
  %idxprom6.i = zext i32 %66 to i64, !dbg !15753
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !15753
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !15753
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !15755
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !15756
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15757
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15758
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #14, !dbg !15759
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !15759
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !15759
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !15759
  call void @llvm.assume(i1 %maskcond.i.i) #8, !dbg !15759
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !15502
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15760
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !15761
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !15762
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15763
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #14, !dbg !15764
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !15765
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !15766
  store i8* %76, i8** %retval.i, align 8, !dbg !15767
  br label %kmalloc.exit, !dbg !15767

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !15768
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !15769
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #14, !dbg !15770
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !15770
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !15770
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !15770
  call void @llvm.assume(i1 %maskcond.i) #8, !dbg !15770
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !15771
  br label %kmalloc.exit, !dbg !15771

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !15772
  store i8* %79, i8** %retval, align 8, !dbg !15773
  br label %return, !dbg !15773

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !15774
  %81 = load i32, i32* %flags.addr, align 4, !dbg !15775
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #12, !dbg !15776
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !15776
  %maskedptr = and i64 %ptrint, 7, !dbg !15776
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !15776
  call void @llvm.assume(i1 %maskcond), !dbg !15776
  store i8* %call9, i8** %retval, align 8, !dbg !15777
  br label %return, !dbg !15777

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !15778
  ret i8* %82, !dbg !15778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #3 !dbg !15779 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !15783, metadata !DIExpression()), !dbg !15784
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !15785
  %tobool = trunc i8 %0 to i1, !dbg !15785
  %lnot = xor i1 %tobool, true, !dbg !15785
  %lnot1 = xor i1 %lnot, true, !dbg !15785
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !15785
  %conv = sext i32 %lnot.ext to i64, !dbg !15785
  %tobool2 = icmp ne i64 %conv, 0, !dbg !15785
  ret i1 %tobool2, !dbg !15786
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #10

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #11 !dbg !15787 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !15791, metadata !DIExpression()), !dbg !15795
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !15797, metadata !DIExpression()), !dbg !15798
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15799, metadata !DIExpression()), !dbg !15800
  %0 = load i64, i64* %size.addr, align 8, !dbg !15801
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !15803
  br i1 %1, label %if.then, label %if.end447, !dbg !15804

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !15805
  %tobool = icmp ne i64 %2, 0, !dbg !15805
  br i1 %tobool, label %if.end, label %if.then1, !dbg !15808

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !15809
  br label %return, !dbg !15809

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !15810
  %cmp = icmp ult i64 %3, 4096, !dbg !15812
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !15813

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !15814
  br label %return, !dbg !15814

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub = sub i64 %4, 1, !dbg !15815
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !15815
  br i1 %5, label %cond.true, label %cond.false442, !dbg !15815

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub4 = sub i64 %6, 1, !dbg !15815
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !15815
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !15815

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub6 = sub i64 %8, 1, !dbg !15815
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !15815
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !15815

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !15815

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub9 = sub i64 %9, 1, !dbg !15815
  %and = and i64 %sub9, -9223372036854775808, !dbg !15815
  %tobool10 = icmp ne i64 %and, 0, !dbg !15815
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !15815

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !15815

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub13 = sub i64 %10, 1, !dbg !15815
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !15815
  %tobool15 = icmp ne i64 %and14, 0, !dbg !15815
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !15815

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !15815

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub18 = sub i64 %11, 1, !dbg !15815
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !15815
  %tobool20 = icmp ne i64 %and19, 0, !dbg !15815
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !15815

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !15815

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub23 = sub i64 %12, 1, !dbg !15815
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !15815
  %tobool25 = icmp ne i64 %and24, 0, !dbg !15815
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !15815

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !15815

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub28 = sub i64 %13, 1, !dbg !15815
  %and29 = and i64 %sub28, 576460752303423488, !dbg !15815
  %tobool30 = icmp ne i64 %and29, 0, !dbg !15815
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !15815

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !15815

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub33 = sub i64 %14, 1, !dbg !15815
  %and34 = and i64 %sub33, 288230376151711744, !dbg !15815
  %tobool35 = icmp ne i64 %and34, 0, !dbg !15815
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !15815

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !15815

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub38 = sub i64 %15, 1, !dbg !15815
  %and39 = and i64 %sub38, 144115188075855872, !dbg !15815
  %tobool40 = icmp ne i64 %and39, 0, !dbg !15815
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !15815

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !15815

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub43 = sub i64 %16, 1, !dbg !15815
  %and44 = and i64 %sub43, 72057594037927936, !dbg !15815
  %tobool45 = icmp ne i64 %and44, 0, !dbg !15815
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !15815

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !15815

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub48 = sub i64 %17, 1, !dbg !15815
  %and49 = and i64 %sub48, 36028797018963968, !dbg !15815
  %tobool50 = icmp ne i64 %and49, 0, !dbg !15815
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !15815

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !15815

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub53 = sub i64 %18, 1, !dbg !15815
  %and54 = and i64 %sub53, 18014398509481984, !dbg !15815
  %tobool55 = icmp ne i64 %and54, 0, !dbg !15815
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !15815

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !15815

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub58 = sub i64 %19, 1, !dbg !15815
  %and59 = and i64 %sub58, 9007199254740992, !dbg !15815
  %tobool60 = icmp ne i64 %and59, 0, !dbg !15815
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !15815

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !15815

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub63 = sub i64 %20, 1, !dbg !15815
  %and64 = and i64 %sub63, 4503599627370496, !dbg !15815
  %tobool65 = icmp ne i64 %and64, 0, !dbg !15815
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !15815

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !15815

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub68 = sub i64 %21, 1, !dbg !15815
  %and69 = and i64 %sub68, 2251799813685248, !dbg !15815
  %tobool70 = icmp ne i64 %and69, 0, !dbg !15815
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !15815

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !15815

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub73 = sub i64 %22, 1, !dbg !15815
  %and74 = and i64 %sub73, 1125899906842624, !dbg !15815
  %tobool75 = icmp ne i64 %and74, 0, !dbg !15815
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !15815

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !15815

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub78 = sub i64 %23, 1, !dbg !15815
  %and79 = and i64 %sub78, 562949953421312, !dbg !15815
  %tobool80 = icmp ne i64 %and79, 0, !dbg !15815
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !15815

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !15815

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub83 = sub i64 %24, 1, !dbg !15815
  %and84 = and i64 %sub83, 281474976710656, !dbg !15815
  %tobool85 = icmp ne i64 %and84, 0, !dbg !15815
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !15815

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !15815

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub88 = sub i64 %25, 1, !dbg !15815
  %and89 = and i64 %sub88, 140737488355328, !dbg !15815
  %tobool90 = icmp ne i64 %and89, 0, !dbg !15815
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !15815

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !15815

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub93 = sub i64 %26, 1, !dbg !15815
  %and94 = and i64 %sub93, 70368744177664, !dbg !15815
  %tobool95 = icmp ne i64 %and94, 0, !dbg !15815
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !15815

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !15815

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub98 = sub i64 %27, 1, !dbg !15815
  %and99 = and i64 %sub98, 35184372088832, !dbg !15815
  %tobool100 = icmp ne i64 %and99, 0, !dbg !15815
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !15815

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !15815

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub103 = sub i64 %28, 1, !dbg !15815
  %and104 = and i64 %sub103, 17592186044416, !dbg !15815
  %tobool105 = icmp ne i64 %and104, 0, !dbg !15815
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !15815

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !15815

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub108 = sub i64 %29, 1, !dbg !15815
  %and109 = and i64 %sub108, 8796093022208, !dbg !15815
  %tobool110 = icmp ne i64 %and109, 0, !dbg !15815
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !15815

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !15815

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub113 = sub i64 %30, 1, !dbg !15815
  %and114 = and i64 %sub113, 4398046511104, !dbg !15815
  %tobool115 = icmp ne i64 %and114, 0, !dbg !15815
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !15815

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !15815

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub118 = sub i64 %31, 1, !dbg !15815
  %and119 = and i64 %sub118, 2199023255552, !dbg !15815
  %tobool120 = icmp ne i64 %and119, 0, !dbg !15815
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !15815

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !15815

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub123 = sub i64 %32, 1, !dbg !15815
  %and124 = and i64 %sub123, 1099511627776, !dbg !15815
  %tobool125 = icmp ne i64 %and124, 0, !dbg !15815
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !15815

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !15815

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub128 = sub i64 %33, 1, !dbg !15815
  %and129 = and i64 %sub128, 549755813888, !dbg !15815
  %tobool130 = icmp ne i64 %and129, 0, !dbg !15815
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !15815

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !15815

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub133 = sub i64 %34, 1, !dbg !15815
  %and134 = and i64 %sub133, 274877906944, !dbg !15815
  %tobool135 = icmp ne i64 %and134, 0, !dbg !15815
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !15815

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !15815

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub138 = sub i64 %35, 1, !dbg !15815
  %and139 = and i64 %sub138, 137438953472, !dbg !15815
  %tobool140 = icmp ne i64 %and139, 0, !dbg !15815
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !15815

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !15815

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub143 = sub i64 %36, 1, !dbg !15815
  %and144 = and i64 %sub143, 68719476736, !dbg !15815
  %tobool145 = icmp ne i64 %and144, 0, !dbg !15815
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !15815

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !15815

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub148 = sub i64 %37, 1, !dbg !15815
  %and149 = and i64 %sub148, 34359738368, !dbg !15815
  %tobool150 = icmp ne i64 %and149, 0, !dbg !15815
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !15815

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !15815

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub153 = sub i64 %38, 1, !dbg !15815
  %and154 = and i64 %sub153, 17179869184, !dbg !15815
  %tobool155 = icmp ne i64 %and154, 0, !dbg !15815
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !15815

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !15815

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub158 = sub i64 %39, 1, !dbg !15815
  %and159 = and i64 %sub158, 8589934592, !dbg !15815
  %tobool160 = icmp ne i64 %and159, 0, !dbg !15815
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !15815

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !15815

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub163 = sub i64 %40, 1, !dbg !15815
  %and164 = and i64 %sub163, 4294967296, !dbg !15815
  %tobool165 = icmp ne i64 %and164, 0, !dbg !15815
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !15815

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !15815

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub168 = sub i64 %41, 1, !dbg !15815
  %and169 = and i64 %sub168, 2147483648, !dbg !15815
  %tobool170 = icmp ne i64 %and169, 0, !dbg !15815
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !15815

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !15815

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub173 = sub i64 %42, 1, !dbg !15815
  %and174 = and i64 %sub173, 1073741824, !dbg !15815
  %tobool175 = icmp ne i64 %and174, 0, !dbg !15815
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !15815

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !15815

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub178 = sub i64 %43, 1, !dbg !15815
  %and179 = and i64 %sub178, 536870912, !dbg !15815
  %tobool180 = icmp ne i64 %and179, 0, !dbg !15815
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !15815

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !15815

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub183 = sub i64 %44, 1, !dbg !15815
  %and184 = and i64 %sub183, 268435456, !dbg !15815
  %tobool185 = icmp ne i64 %and184, 0, !dbg !15815
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !15815

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !15815

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub188 = sub i64 %45, 1, !dbg !15815
  %and189 = and i64 %sub188, 134217728, !dbg !15815
  %tobool190 = icmp ne i64 %and189, 0, !dbg !15815
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !15815

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !15815

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub193 = sub i64 %46, 1, !dbg !15815
  %and194 = and i64 %sub193, 67108864, !dbg !15815
  %tobool195 = icmp ne i64 %and194, 0, !dbg !15815
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !15815

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !15815

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub198 = sub i64 %47, 1, !dbg !15815
  %and199 = and i64 %sub198, 33554432, !dbg !15815
  %tobool200 = icmp ne i64 %and199, 0, !dbg !15815
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !15815

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !15815

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub203 = sub i64 %48, 1, !dbg !15815
  %and204 = and i64 %sub203, 16777216, !dbg !15815
  %tobool205 = icmp ne i64 %and204, 0, !dbg !15815
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !15815

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !15815

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub208 = sub i64 %49, 1, !dbg !15815
  %and209 = and i64 %sub208, 8388608, !dbg !15815
  %tobool210 = icmp ne i64 %and209, 0, !dbg !15815
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !15815

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !15815

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub213 = sub i64 %50, 1, !dbg !15815
  %and214 = and i64 %sub213, 4194304, !dbg !15815
  %tobool215 = icmp ne i64 %and214, 0, !dbg !15815
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !15815

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !15815

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub218 = sub i64 %51, 1, !dbg !15815
  %and219 = and i64 %sub218, 2097152, !dbg !15815
  %tobool220 = icmp ne i64 %and219, 0, !dbg !15815
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !15815

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !15815

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub223 = sub i64 %52, 1, !dbg !15815
  %and224 = and i64 %sub223, 1048576, !dbg !15815
  %tobool225 = icmp ne i64 %and224, 0, !dbg !15815
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !15815

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !15815

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub228 = sub i64 %53, 1, !dbg !15815
  %and229 = and i64 %sub228, 524288, !dbg !15815
  %tobool230 = icmp ne i64 %and229, 0, !dbg !15815
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !15815

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !15815

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub233 = sub i64 %54, 1, !dbg !15815
  %and234 = and i64 %sub233, 262144, !dbg !15815
  %tobool235 = icmp ne i64 %and234, 0, !dbg !15815
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !15815

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !15815

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub238 = sub i64 %55, 1, !dbg !15815
  %and239 = and i64 %sub238, 131072, !dbg !15815
  %tobool240 = icmp ne i64 %and239, 0, !dbg !15815
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !15815

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !15815

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub243 = sub i64 %56, 1, !dbg !15815
  %and244 = and i64 %sub243, 65536, !dbg !15815
  %tobool245 = icmp ne i64 %and244, 0, !dbg !15815
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !15815

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !15815

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub248 = sub i64 %57, 1, !dbg !15815
  %and249 = and i64 %sub248, 32768, !dbg !15815
  %tobool250 = icmp ne i64 %and249, 0, !dbg !15815
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !15815

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !15815

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub253 = sub i64 %58, 1, !dbg !15815
  %and254 = and i64 %sub253, 16384, !dbg !15815
  %tobool255 = icmp ne i64 %and254, 0, !dbg !15815
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !15815

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !15815

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub258 = sub i64 %59, 1, !dbg !15815
  %and259 = and i64 %sub258, 8192, !dbg !15815
  %tobool260 = icmp ne i64 %and259, 0, !dbg !15815
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !15815

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !15815

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub263 = sub i64 %60, 1, !dbg !15815
  %and264 = and i64 %sub263, 4096, !dbg !15815
  %tobool265 = icmp ne i64 %and264, 0, !dbg !15815
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !15815

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !15815

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub268 = sub i64 %61, 1, !dbg !15815
  %and269 = and i64 %sub268, 2048, !dbg !15815
  %tobool270 = icmp ne i64 %and269, 0, !dbg !15815
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !15815

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !15815

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub273 = sub i64 %62, 1, !dbg !15815
  %and274 = and i64 %sub273, 1024, !dbg !15815
  %tobool275 = icmp ne i64 %and274, 0, !dbg !15815
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !15815

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !15815

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub278 = sub i64 %63, 1, !dbg !15815
  %and279 = and i64 %sub278, 512, !dbg !15815
  %tobool280 = icmp ne i64 %and279, 0, !dbg !15815
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !15815

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !15815

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub283 = sub i64 %64, 1, !dbg !15815
  %and284 = and i64 %sub283, 256, !dbg !15815
  %tobool285 = icmp ne i64 %and284, 0, !dbg !15815
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !15815

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !15815

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub288 = sub i64 %65, 1, !dbg !15815
  %and289 = and i64 %sub288, 128, !dbg !15815
  %tobool290 = icmp ne i64 %and289, 0, !dbg !15815
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !15815

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !15815

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub293 = sub i64 %66, 1, !dbg !15815
  %and294 = and i64 %sub293, 64, !dbg !15815
  %tobool295 = icmp ne i64 %and294, 0, !dbg !15815
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !15815

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !15815

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub298 = sub i64 %67, 1, !dbg !15815
  %and299 = and i64 %sub298, 32, !dbg !15815
  %tobool300 = icmp ne i64 %and299, 0, !dbg !15815
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !15815

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !15815

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub303 = sub i64 %68, 1, !dbg !15815
  %and304 = and i64 %sub303, 16, !dbg !15815
  %tobool305 = icmp ne i64 %and304, 0, !dbg !15815
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !15815

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !15815

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub308 = sub i64 %69, 1, !dbg !15815
  %and309 = and i64 %sub308, 8, !dbg !15815
  %tobool310 = icmp ne i64 %and309, 0, !dbg !15815
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !15815

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !15815

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub313 = sub i64 %70, 1, !dbg !15815
  %and314 = and i64 %sub313, 4, !dbg !15815
  %tobool315 = icmp ne i64 %and314, 0, !dbg !15815
  %71 = zext i1 %tobool315 to i64, !dbg !15815
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !15815
  br label %cond.end, !dbg !15815

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !15815
  br label %cond.end317, !dbg !15815

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !15815
  br label %cond.end319, !dbg !15815

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !15815
  br label %cond.end321, !dbg !15815

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !15815
  br label %cond.end323, !dbg !15815

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !15815
  br label %cond.end325, !dbg !15815

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !15815
  br label %cond.end327, !dbg !15815

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !15815
  br label %cond.end329, !dbg !15815

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !15815
  br label %cond.end331, !dbg !15815

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !15815
  br label %cond.end333, !dbg !15815

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !15815
  br label %cond.end335, !dbg !15815

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !15815
  br label %cond.end337, !dbg !15815

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !15815
  br label %cond.end339, !dbg !15815

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !15815
  br label %cond.end341, !dbg !15815

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !15815
  br label %cond.end343, !dbg !15815

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !15815
  br label %cond.end345, !dbg !15815

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !15815
  br label %cond.end347, !dbg !15815

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !15815
  br label %cond.end349, !dbg !15815

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !15815
  br label %cond.end351, !dbg !15815

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !15815
  br label %cond.end353, !dbg !15815

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !15815
  br label %cond.end355, !dbg !15815

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !15815
  br label %cond.end357, !dbg !15815

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !15815
  br label %cond.end359, !dbg !15815

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !15815
  br label %cond.end361, !dbg !15815

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !15815
  br label %cond.end363, !dbg !15815

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !15815
  br label %cond.end365, !dbg !15815

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !15815
  br label %cond.end367, !dbg !15815

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !15815
  br label %cond.end369, !dbg !15815

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !15815
  br label %cond.end371, !dbg !15815

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !15815
  br label %cond.end373, !dbg !15815

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !15815
  br label %cond.end375, !dbg !15815

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !15815
  br label %cond.end377, !dbg !15815

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !15815
  br label %cond.end379, !dbg !15815

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !15815
  br label %cond.end381, !dbg !15815

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !15815
  br label %cond.end383, !dbg !15815

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !15815
  br label %cond.end385, !dbg !15815

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !15815
  br label %cond.end387, !dbg !15815

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !15815
  br label %cond.end389, !dbg !15815

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !15815
  br label %cond.end391, !dbg !15815

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !15815
  br label %cond.end393, !dbg !15815

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !15815
  br label %cond.end395, !dbg !15815

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !15815
  br label %cond.end397, !dbg !15815

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !15815
  br label %cond.end399, !dbg !15815

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !15815
  br label %cond.end401, !dbg !15815

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !15815
  br label %cond.end403, !dbg !15815

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !15815
  br label %cond.end405, !dbg !15815

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !15815
  br label %cond.end407, !dbg !15815

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !15815
  br label %cond.end409, !dbg !15815

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !15815
  br label %cond.end411, !dbg !15815

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !15815
  br label %cond.end413, !dbg !15815

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !15815
  br label %cond.end415, !dbg !15815

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !15815
  br label %cond.end417, !dbg !15815

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !15815
  br label %cond.end419, !dbg !15815

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !15815
  br label %cond.end421, !dbg !15815

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !15815
  br label %cond.end423, !dbg !15815

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !15815
  br label %cond.end425, !dbg !15815

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !15815
  br label %cond.end427, !dbg !15815

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !15815
  br label %cond.end429, !dbg !15815

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !15815
  br label %cond.end431, !dbg !15815

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !15815
  br label %cond.end433, !dbg !15815

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !15815
  br label %cond.end435, !dbg !15815

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !15815
  br label %cond.end437, !dbg !15815

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !15815
  br label %cond.end440, !dbg !15815

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !15815

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !15815
  br label %cond.end444, !dbg !15815

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !15815
  %sub443 = sub i64 %72, 1, !dbg !15815
  %call = call i32 @__ilog2_u64(i64 %sub443) #15, !dbg !15815
  br label %cond.end444, !dbg !15815

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !15815
  %sub446 = sub i32 %cond445, 12, !dbg !15816
  %add = add i32 %sub446, 1, !dbg !15817
  store i32 %add, i32* %retval, align 4, !dbg !15818
  br label %return, !dbg !15818

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !15819
  %dec = add i64 %73, -1, !dbg !15819
  store i64 %dec, i64* %size.addr, align 8, !dbg !15819
  %74 = load i64, i64* %size.addr, align 8, !dbg !15820
  %shr = lshr i64 %74, 12, !dbg !15820
  store i64 %shr, i64* %size.addr, align 8, !dbg !15820
  %75 = load i64, i64* %size.addr, align 8, !dbg !15821
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !15798
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !15822
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !15823
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #7, !dbg !15822, !srcloc !15824
  store i32 %78, i32* %bitpos.i, align 4, !dbg !15822
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !15825
  %add.i = add i32 %79, 1, !dbg !15826
  store i32 %add.i, i32* %retval, align 4, !dbg !15827
  br label %return, !dbg !15827

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !15828
  ret i32 %80, !dbg !15828
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #11 !dbg !15829 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !15791, metadata !DIExpression()), !dbg !15833
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !15797, metadata !DIExpression()), !dbg !15835
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15836, metadata !DIExpression()), !dbg !15837
  %0 = load i64, i64* %n.addr, align 8, !dbg !15838
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !15835
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !15839
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !15840
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #7, !dbg !15839, !srcloc !15824
  store i32 %3, i32* %bitpos.i, align 4, !dbg !15839
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !15841
  %add.i = add i32 %4, 1, !dbg !15842
  %sub = sub i32 %add.i, 1, !dbg !15843
  ret i32 %sub, !dbg !15844
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #3 !dbg !15845 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !15849, metadata !DIExpression()), !dbg !15850
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !15851, metadata !DIExpression()), !dbg !15852
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15853, metadata !DIExpression()), !dbg !15854
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15855, metadata !DIExpression()), !dbg !15856
  %0 = load i8*, i8** %object.addr, align 8, !dbg !15857
  ret i8* %0, !dbg !15858
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rx_refill_timeout(%struct.timer_list* %t) #3 !dbg !15859 {
entry:
  %t.addr = alloca %struct.timer_list*, align 8
  %queue = alloca %struct.netfront_queue*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.netfront_queue*, align 8
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !15860, metadata !DIExpression()), !dbg !15861
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue, metadata !15862, metadata !DIExpression()), !dbg !15863
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15864, metadata !DIExpression()), !dbg !15866
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !15866
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !15866
  store i8* %1, i8** %__mptr, align 8, !dbg !15866
  br label %do.body, !dbg !15866

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15867

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15866
  %add.ptr = getelementptr i8, i8* %2, i64 -5704, !dbg !15866
  %3 = bitcast i8* %add.ptr to %struct.netfront_queue*, !dbg !15866
  store %struct.netfront_queue* %3, %struct.netfront_queue** %tmp, align 8, !dbg !15867
  %4 = load %struct.netfront_queue*, %struct.netfront_queue** %tmp, align 8, !dbg !15866
  store %struct.netfront_queue* %4, %struct.netfront_queue** %queue, align 8, !dbg !15863
  %5 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !15869
  %napi = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %5, i32 0, i32 4, !dbg !15870
  call void @napi_schedule(%struct.napi_struct* %napi) #12, !dbg !15871
  ret void, !dbg !15872
}

; Function Attrs: noredzone
declare dso_local i8* @strrchr(i8*, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #1

; Function Attrs: noredzone
declare dso_local i32 @gnttab_alloc_grant_references(i16 zeroext, i32*) #1

; Function Attrs: noredzone
declare dso_local void @gnttab_free_grant_references(i32) #1

; Function Attrs: noredzone
declare dso_local %struct.page_pool* @page_pool_create(%struct.page_pool_params*) #1

; Function Attrs: noredzone
declare dso_local i32 @xdp_rxq_info_reg(%struct.xdp_rxq_info*, %struct.net_device*, i32) #1

; Function Attrs: cold noredzone
declare dso_local void @netdev_err(%struct.net_device*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @xdp_rxq_info_reg_mem_model(%struct.xdp_rxq_info*, i32, i8*) #1

; Function Attrs: noredzone
declare dso_local void @xdp_rxq_info_unreg(%struct.xdp_rxq_info*) #1

; Function Attrs: noredzone
declare dso_local void @page_pool_destroy(%struct.page_pool*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_queue_head_init(%struct.sk_buff_head* %list) #3 !dbg !15873 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11108, metadata !DIExpression()), !dbg !15877
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !15880, metadata !DIExpression()), !dbg !15881
  br label %do.body, !dbg !15882

do.body:                                          ; preds = %entry
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15883
  %lock = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %0, i32 0, i32 3, !dbg !15883
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15884
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !15885
  %rlock.i = bitcast %union.anon.2* %2 to %struct.raw_spinlock*, !dbg !15885
  %3 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15883
  %lock1 = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %3, i32 0, i32 3, !dbg !15883
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !15883
  %rlock = bitcast %union.anon.2* %4 to %struct.raw_spinlock*, !dbg !15883
  %5 = bitcast %struct.spinlock* %lock1 to i8*, !dbg !15883
  %6 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !15883
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 1 %6, i64 0, i1 false), !dbg !15883
  br label %do.end, !dbg !15883

do.end:                                           ; preds = %do.body
  %7 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !15886
  call void @__skb_queue_head_init(%struct.sk_buff_head* %7) #12, !dbg !15887
  ret void, !dbg !15888
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #9

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_get_responses(%struct.netfront_queue* %queue, %struct.netfront_rx_info* %rinfo, i32 %rp, %struct.sk_buff_head* %list, i8* %need_xdp_flush) #3 !dbg !15889 {
entry:
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %rinfo.addr = alloca %struct.netfront_rx_info*, align 8
  %rp.addr = alloca i32, align 4
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %need_xdp_flush.addr = alloca i8*, align 8
  %rx = alloca %struct.xen_netif_rx_response*, align 8
  %max = alloca i32, align 4
  %cons = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %extras = alloca %struct.xen_netif_extra_info*, align 8
  %ref = alloca i32, align 4
  %dev = alloca %struct.device*, align 8
  %xdp_prog = alloca %struct.bpf_prog*, align 8
  %xdp = alloca %struct.xdp_buff, align 8
  %ret = alloca i64, align 8
  %slots = alloca i32, align 4
  %err = alloca i32, align 4
  %verdict = alloca i32, align 4
  %xdp13 = alloca %struct.xen_netif_extra_info*, align 8
  %________p1 = alloca %struct.bpf_prog*, align 8
  %tmp = alloca %struct.bpf_prog*, align 8
  %tmp80 = alloca %struct.bpf_prog*, align 8
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !15893, metadata !DIExpression()), !dbg !15894
  store %struct.netfront_rx_info* %rinfo, %struct.netfront_rx_info** %rinfo.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_rx_info** %rinfo.addr, metadata !15895, metadata !DIExpression()), !dbg !15896
  store i32 %rp, i32* %rp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rp.addr, metadata !15897, metadata !DIExpression()), !dbg !15898
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !15899, metadata !DIExpression()), !dbg !15900
  store i8* %need_xdp_flush, i8** %need_xdp_flush.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %need_xdp_flush.addr, metadata !15901, metadata !DIExpression()), !dbg !15902
  call void @llvm.dbg.declare(metadata %struct.xen_netif_rx_response** %rx, metadata !15903, metadata !DIExpression()), !dbg !15904
  %0 = load %struct.netfront_rx_info*, %struct.netfront_rx_info** %rinfo.addr, align 8, !dbg !15905
  %rx1 = getelementptr inbounds %struct.netfront_rx_info, %struct.netfront_rx_info* %0, i32 0, i32 0, !dbg !15906
  store %struct.xen_netif_rx_response* %rx1, %struct.xen_netif_rx_response** %rx, align 8, !dbg !15904
  call void @llvm.dbg.declare(metadata i32* %max, metadata !15907, metadata !DIExpression()), !dbg !15908
  %1 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !15909
  %status = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %1, i32 0, i32 3, !dbg !15910
  %2 = load i16, i16* %status, align 2, !dbg !15910
  %conv = sext i16 %2 to i32, !dbg !15909
  %cmp = icmp sle i32 %conv, 256, !dbg !15911
  %conv2 = zext i1 %cmp to i32, !dbg !15911
  %add = add i32 18, %conv2, !dbg !15912
  store i32 %add, i32* %max, align 4, !dbg !15908
  call void @llvm.dbg.declare(metadata i32* %cons, metadata !15913, metadata !DIExpression()), !dbg !15914
  %3 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15915
  %rx3 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %3, i32 0, i32 20, !dbg !15916
  %rsp_cons = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx3, i32 0, i32 1, !dbg !15917
  %4 = load i32, i32* %rsp_cons, align 4, !dbg !15917
  store i32 %4, i32* %cons, align 4, !dbg !15914
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !15918, metadata !DIExpression()), !dbg !15919
  %5 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15920
  %6 = load i32, i32* %cons, align 4, !dbg !15921
  %call = call %struct.sk_buff* @xennet_get_rx_skb(%struct.netfront_queue* %5, i32 %6) #12, !dbg !15922
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !15919
  call void @llvm.dbg.declare(metadata %struct.xen_netif_extra_info** %extras, metadata !15923, metadata !DIExpression()), !dbg !15924
  %7 = load %struct.netfront_rx_info*, %struct.netfront_rx_info** %rinfo.addr, align 8, !dbg !15925
  %extras4 = getelementptr inbounds %struct.netfront_rx_info, %struct.netfront_rx_info* %7, i32 0, i32 1, !dbg !15926
  %arraydecay = getelementptr inbounds [5 x %struct.xen_netif_extra_info], [5 x %struct.xen_netif_extra_info]* %extras4, i64 0, i64 0, !dbg !15925
  store %struct.xen_netif_extra_info* %arraydecay, %struct.xen_netif_extra_info** %extras, align 8, !dbg !15924
  call void @llvm.dbg.declare(metadata i32* %ref, metadata !15927, metadata !DIExpression()), !dbg !15928
  %8 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15929
  %9 = load i32, i32* %cons, align 4, !dbg !15930
  %call5 = call i32 @xennet_get_rx_ref(%struct.netfront_queue* %8, i32 %9) #12, !dbg !15931
  store i32 %call5, i32* %ref, align 4, !dbg !15928
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !15932, metadata !DIExpression()), !dbg !15933
  %10 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15934
  %info = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %10, i32 0, i32 2, !dbg !15935
  %11 = load %struct.netfront_info*, %struct.netfront_info** %info, align 32, !dbg !15935
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %11, i32 0, i32 1, !dbg !15936
  %12 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !15936
  %dev6 = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 106, !dbg !15937
  store %struct.device* %dev6, %struct.device** %dev, align 8, !dbg !15933
  call void @llvm.dbg.declare(metadata %struct.bpf_prog** %xdp_prog, metadata !15938, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.declare(metadata %struct.xdp_buff* %xdp, metadata !15940, metadata !DIExpression()), !dbg !15955
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !15956, metadata !DIExpression()), !dbg !15957
  call void @llvm.dbg.declare(metadata i32* %slots, metadata !15958, metadata !DIExpression()), !dbg !15959
  store i32 1, i32* %slots, align 4, !dbg !15959
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15960, metadata !DIExpression()), !dbg !15961
  store i32 0, i32* %err, align 4, !dbg !15961
  call void @llvm.dbg.declare(metadata i32* %verdict, metadata !15962, metadata !DIExpression()), !dbg !15963
  %13 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !15964
  %flags = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %13, i32 0, i32 2, !dbg !15966
  %14 = load i16, i16* %flags, align 2, !dbg !15966
  %conv7 = zext i16 %14 to i32, !dbg !15964
  %and = and i32 %conv7, 8, !dbg !15967
  %tobool = icmp ne i32 %and, 0, !dbg !15967
  br i1 %tobool, label %if.then, label %if.end19, !dbg !15968

if.then:                                          ; preds = %entry
  %15 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15969
  %16 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %extras, align 8, !dbg !15971
  %17 = load i32, i32* %rp.addr, align 4, !dbg !15972
  %call8 = call i32 @xennet_get_extras(%struct.netfront_queue* %15, %struct.xen_netif_extra_info* %16, i32 %17) #12, !dbg !15973
  store i32 %call8, i32* %err, align 4, !dbg !15974
  %18 = load i32, i32* %err, align 4, !dbg !15975
  %tobool9 = icmp ne i32 %18, 0, !dbg !15975
  br i1 %tobool9, label %if.end16, label %if.then10, !dbg !15977

if.then10:                                        ; preds = %if.then
  %19 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %extras, align 8, !dbg !15978
  %arrayidx = getelementptr %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %19, i64 4, !dbg !15978
  %type = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %arrayidx, i32 0, i32 0, !dbg !15981
  %20 = load i8, i8* %type, align 2, !dbg !15981
  %tobool11 = icmp ne i8 %20, 0, !dbg !15978
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !15982

if.then12:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.xen_netif_extra_info** %xdp13, metadata !15983, metadata !DIExpression()), !dbg !15985
  %21 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %extras, align 8, !dbg !15986
  %arrayidx14 = getelementptr %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %21, i64 4, !dbg !15986
  store %struct.xen_netif_extra_info* %arrayidx14, %struct.xen_netif_extra_info** %xdp13, align 8, !dbg !15987
  %22 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %xdp13, align 8, !dbg !15988
  %u = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %22, i32 0, i32 2, !dbg !15989
  %xdp15 = bitcast %union.anon.168* %u to %struct.anon.172*, !dbg !15990
  %headroom = getelementptr inbounds %struct.anon.172, %struct.anon.172* %xdp15, i32 0, i32 0, !dbg !15991
  %23 = load i16, i16* %headroom, align 2, !dbg !15991
  %24 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !15992
  %offset = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %24, i32 0, i32 1, !dbg !15993
  store i16 %23, i16* %offset, align 2, !dbg !15994
  br label %if.end, !dbg !15995

if.end:                                           ; preds = %if.then12, %if.then10
  br label %if.end16, !dbg !15996

if.end16:                                         ; preds = %if.end, %if.then
  %25 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !15997
  %rx17 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %25, i32 0, i32 20, !dbg !15998
  %rsp_cons18 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx17, i32 0, i32 1, !dbg !15999
  %26 = load i32, i32* %rsp_cons18, align 4, !dbg !15999
  store i32 %26, i32* %cons, align 4, !dbg !16000
  br label %if.end19, !dbg !16001

if.end19:                                         ; preds = %if.end16, %entry
  br label %for.cond, !dbg !16002

for.cond:                                         ; preds = %if.end112, %if.end19
  %27 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !16003
  %status20 = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %27, i32 0, i32 3, !dbg !16003
  %28 = load i16, i16* %status20, align 2, !dbg !16003
  %conv21 = sext i16 %28 to i32, !dbg !16003
  %cmp22 = icmp slt i32 %conv21, 0, !dbg !16003
  br i1 %cmp22, label %lor.end, label %lor.rhs, !dbg !16003

lor.rhs:                                          ; preds = %for.cond
  %29 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !16003
  %offset24 = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %29, i32 0, i32 1, !dbg !16003
  %30 = load i16, i16* %offset24, align 2, !dbg !16003
  %conv25 = zext i16 %30 to i32, !dbg !16003
  %31 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !16003
  %status26 = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %31, i32 0, i32 3, !dbg !16003
  %32 = load i16, i16* %status26, align 2, !dbg !16003
  %conv27 = sext i16 %32 to i32, !dbg !16003
  %add28 = add i32 %conv25, %conv27, !dbg !16003
  %conv29 = sext i32 %add28 to i64, !dbg !16003
  %cmp30 = icmp ugt i64 %conv29, 4096, !dbg !16003
  br label %lor.end, !dbg !16003

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %33 = phi i1 [ true, %for.cond ], [ %cmp30, %lor.rhs ]
  %lnot = xor i1 %33, true, !dbg !16003
  %lnot32 = xor i1 %lnot, true, !dbg !16003
  %lnot.ext = zext i1 %lnot32 to i32, !dbg !16003
  %conv33 = sext i32 %lnot.ext to i64, !dbg !16003
  %tobool34 = icmp ne i64 %conv33, 0, !dbg !16003
  br i1 %tobool34, label %if.then35, label %if.end44, !dbg !16008

if.then35:                                        ; preds = %lor.end
  %call36 = call i32 @net_ratelimit() #12, !dbg !16009
  %tobool37 = icmp ne i32 %call36, 0, !dbg !16009
  br i1 %tobool37, label %if.then38, label %if.end43, !dbg !16012

if.then38:                                        ; preds = %if.then35
  %34 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16013
  %35 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !16013
  %offset39 = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %35, i32 0, i32 1, !dbg !16013
  %36 = load i16, i16* %offset39, align 2, !dbg !16013
  %conv40 = zext i16 %36 to i32, !dbg !16013
  %37 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !16013
  %status41 = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %37, i32 0, i32 3, !dbg !16013
  %38 = load i16, i16* %status41, align 2, !dbg !16013
  %conv42 = sext i16 %38 to i32, !dbg !16013
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %34, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.55, i64 0, i64 0), i32 %conv40, i32 %conv42) #13, !dbg !16013
  br label %if.end43, !dbg !16013

if.end43:                                         ; preds = %if.then38, %if.then35
  %39 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16014
  %40 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16015
  %41 = load i32, i32* %ref, align 4, !dbg !16016
  call void @xennet_move_rx_slot(%struct.netfront_queue* %39, %struct.sk_buff* %40, i32 %41) #12, !dbg !16017
  store i32 -22, i32* %err, align 4, !dbg !16018
  br label %next, !dbg !16019

if.end44:                                         ; preds = %lor.end
  %42 = load i32, i32* %ref, align 4, !dbg !16020
  %cmp45 = icmp eq i32 %42, 0, !dbg !16022
  br i1 %cmp45, label %if.then47, label %if.end53, !dbg !16023

if.then47:                                        ; preds = %if.end44
  %call48 = call i32 @net_ratelimit() #12, !dbg !16024
  %tobool49 = icmp ne i32 %call48, 0, !dbg !16024
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !16027

if.then50:                                        ; preds = %if.then47
  %43 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16028
  %44 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !16028
  %id = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %44, i32 0, i32 0, !dbg !16028
  %45 = load i16, i16* %id, align 2, !dbg !16028
  %conv51 = zext i16 %45 to i32, !dbg !16028
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %43, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0), i32 %conv51) #13, !dbg !16028
  br label %if.end52, !dbg !16028

if.end52:                                         ; preds = %if.then50, %if.then47
  store i32 -22, i32* %err, align 4, !dbg !16029
  br label %next, !dbg !16030

if.end53:                                         ; preds = %if.end44
  %46 = load i32, i32* %ref, align 4, !dbg !16031
  %call54 = call i32 @gnttab_end_foreign_access_ref(i32 %46, i32 0) #12, !dbg !16032
  %conv55 = sext i32 %call54 to i64, !dbg !16032
  store i64 %conv55, i64* %ret, align 8, !dbg !16033
  br label %do.body, !dbg !16034

do.body:                                          ; preds = %if.end53
  %47 = load i64, i64* %ret, align 8, !dbg !16035
  %tobool56 = icmp ne i64 %47, 0, !dbg !16035
  %lnot57 = xor i1 %tobool56, true, !dbg !16035
  %lnot59 = xor i1 %lnot57, true, !dbg !16035
  %lnot61 = xor i1 %lnot59, true, !dbg !16035
  %lnot.ext62 = zext i1 %lnot61 to i32, !dbg !16035
  %conv63 = sext i32 %lnot.ext62 to i64, !dbg !16035
  %tobool64 = icmp ne i64 %conv63, 0, !dbg !16035
  br i1 %tobool64, label %if.then65, label %if.end73, !dbg !16038

if.then65:                                        ; preds = %do.body
  br label %do.body66, !dbg !16035

do.body66:                                        ; preds = %if.then65
  br label %do.body67, !dbg !16039

do.body67:                                        ; preds = %do.body66
  br label %do.end, !dbg !16041

do.end:                                           ; preds = %do.body67
  br label %do.body68, !dbg !16039

do.body68:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i32 962, i32 0, i64 12) #8, !dbg !16043, !srcloc !16045
  br label %do.end69, !dbg !16043

do.end69:                                         ; preds = %do.body68
  br label %do.body70, !dbg !16039

do.body70:                                        ; preds = %do.end69
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 642) #8, !dbg !16046, !srcloc !16049
  unreachable, !dbg !16050

do.end71:                                         ; No predecessors!
  br label %do.end72, !dbg !16039

do.end72:                                         ; preds = %do.end71
  br label %if.end73, !dbg !16039

if.end73:                                         ; preds = %do.end72, %do.body
  br label %do.end74, !dbg !16038

do.end74:                                         ; preds = %if.end73
  %48 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16051
  %gref_rx_head = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %48, i32 0, i32 24, !dbg !16052
  %49 = load i32, i32* %ref, align 4, !dbg !16053
  call void @gnttab_release_grant_reference(i32* %gref_rx_head, i32 %49) #12, !dbg !16054
  call void @__rcu_read_lock() #14, !dbg !16055
  call void @llvm.dbg.declare(metadata %struct.bpf_prog** %________p1, metadata !16059, metadata !DIExpression()), !dbg !16061
  br label %do.body75, !dbg !16062

do.body75:                                        ; preds = %do.end74
  br label %do.end76, !dbg !16064

do.end76:                                         ; preds = %do.body75
  %50 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16062
  %xdp_prog77 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %50, i32 0, i32 3, !dbg !16062
  %51 = load volatile %struct.bpf_prog*, %struct.bpf_prog** %xdp_prog77, align 8, !dbg !16062
  store %struct.bpf_prog* %51, %struct.bpf_prog** %tmp, align 8, !dbg !16064
  %52 = load %struct.bpf_prog*, %struct.bpf_prog** %tmp, align 8, !dbg !16062
  store %struct.bpf_prog* %52, %struct.bpf_prog** %________p1, align 8, !dbg !16061
  br label %do.body78, !dbg !16061

do.body78:                                        ; preds = %do.end76
  br label %do.end79, !dbg !16066

do.end79:                                         ; preds = %do.body78
  %53 = load %struct.bpf_prog*, %struct.bpf_prog** %________p1, align 8, !dbg !16061
  store %struct.bpf_prog* %53, %struct.bpf_prog** %tmp80, align 8, !dbg !16066
  %54 = load %struct.bpf_prog*, %struct.bpf_prog** %tmp80, align 8, !dbg !16061
  store %struct.bpf_prog* %54, %struct.bpf_prog** %xdp_prog, align 8, !dbg !16068
  %55 = load %struct.bpf_prog*, %struct.bpf_prog** %xdp_prog, align 8, !dbg !16069
  %tobool81 = icmp ne %struct.bpf_prog* %55, null, !dbg !16069
  br i1 %tobool81, label %if.then82, label %if.end97, !dbg !16071

if.then82:                                        ; preds = %do.end79
  %56 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !16072
  %flags83 = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %56, i32 0, i32 2, !dbg !16075
  %57 = load i16, i16* %flags83, align 2, !dbg !16075
  %conv84 = zext i16 %57 to i32, !dbg !16072
  %and85 = and i32 %conv84, 4, !dbg !16076
  %tobool86 = icmp ne i32 %and85, 0, !dbg !16076
  br i1 %tobool86, label %if.else, label %if.then87, !dbg !16077

if.then87:                                        ; preds = %if.then82
  %58 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16078
  %59 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16080
  %call88 = call i8* @skb_end_pointer(%struct.sk_buff* %59) #12, !dbg !16080
  %60 = bitcast i8* %call88 to %struct.skb_shared_info*, !dbg !16081
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %60, i32 0, i32 12, !dbg !16081
  %arrayidx89 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 0, !dbg !16080
  %call90 = call %struct.page* @skb_frag_page(%struct.bio_vec* %arrayidx89) #12, !dbg !16082
  %61 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !16083
  %62 = load %struct.bpf_prog*, %struct.bpf_prog** %xdp_prog, align 8, !dbg !16084
  %63 = load i8*, i8** %need_xdp_flush.addr, align 8, !dbg !16085
  %call91 = call i32 @xennet_run_xdp(%struct.netfront_queue* %58, %struct.page* %call90, %struct.xen_netif_rx_response* %61, %struct.bpf_prog* %62, %struct.xdp_buff* %xdp, i8* %63) #12, !dbg !16086
  store i32 %call91, i32* %verdict, align 4, !dbg !16087
  %64 = load i32, i32* %verdict, align 4, !dbg !16088
  %cmp92 = icmp ne i32 %64, 2, !dbg !16090
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !16091

if.then94:                                        ; preds = %if.then87
  store i32 -22, i32* %err, align 4, !dbg !16092
  br label %if.end95, !dbg !16093

if.end95:                                         ; preds = %if.then94, %if.then87
  br label %if.end96, !dbg !16094

if.else:                                          ; preds = %if.then82
  store i32 -22, i32* %err, align 4, !dbg !16095
  br label %if.end96

if.end96:                                         ; preds = %if.else, %if.end95
  br label %if.end97, !dbg !16097

if.end97:                                         ; preds = %if.end96, %do.end79
  call void @rcu_read_unlock() #12, !dbg !16098
  br label %next, !dbg !16098

next:                                             ; preds = %if.end97, %if.end52, %if.end43
  call void @llvm.dbg.label(metadata !16099), !dbg !16100
  %65 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !16101
  %66 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16102
  call void @__skb_queue_tail(%struct.sk_buff_head* %65, %struct.sk_buff* %66) #12, !dbg !16103
  %67 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx, align 8, !dbg !16104
  %flags98 = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %67, i32 0, i32 2, !dbg !16106
  %68 = load i16, i16* %flags98, align 2, !dbg !16106
  %conv99 = zext i16 %68 to i32, !dbg !16104
  %and100 = and i32 %conv99, 4, !dbg !16107
  %tobool101 = icmp ne i32 %and100, 0, !dbg !16107
  br i1 %tobool101, label %if.end103, label %if.then102, !dbg !16108

if.then102:                                       ; preds = %next
  br label %for.end, !dbg !16109

if.end103:                                        ; preds = %next
  %69 = load i32, i32* %cons, align 4, !dbg !16110
  %70 = load i32, i32* %slots, align 4, !dbg !16112
  %add104 = add i32 %69, %70, !dbg !16113
  %71 = load i32, i32* %rp.addr, align 4, !dbg !16114
  %cmp105 = icmp eq i32 %add104, %71, !dbg !16115
  br i1 %cmp105, label %if.then107, label %if.end112, !dbg !16116

if.then107:                                       ; preds = %if.end103
  %call108 = call i32 @net_ratelimit() #12, !dbg !16117
  %tobool109 = icmp ne i32 %call108, 0, !dbg !16117
  br i1 %tobool109, label %if.then110, label %if.end111, !dbg !16120

if.then110:                                       ; preds = %if.then107
  %72 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16121
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %72, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0)) #13, !dbg !16121
  br label %if.end111, !dbg !16121

if.end111:                                        ; preds = %if.then110, %if.then107
  store i32 -2, i32* %err, align 4, !dbg !16122
  br label %for.end, !dbg !16123

if.end112:                                        ; preds = %if.end103
  %73 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16124
  %rx113 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %73, i32 0, i32 20, !dbg !16124
  %sring = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx113, i32 0, i32 3, !dbg !16124
  %74 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring, align 8, !dbg !16124
  %ring = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %74, i32 0, i32 5, !dbg !16124
  %75 = load i32, i32* %cons, align 4, !dbg !16124
  %76 = load i32, i32* %slots, align 4, !dbg !16124
  %add114 = add i32 %75, %76, !dbg !16124
  %77 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16124
  %rx115 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %77, i32 0, i32 20, !dbg !16124
  %nr_ents = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx115, i32 0, i32 2, !dbg !16124
  %78 = load i32, i32* %nr_ents, align 8, !dbg !16124
  %sub = sub i32 %78, 1, !dbg !16124
  %and116 = and i32 %add114, %sub, !dbg !16124
  %idxprom = zext i32 %and116 to i64, !dbg !16124
  %arrayidx117 = getelementptr [1 x %union.xen_netif_rx_sring_entry], [1 x %union.xen_netif_rx_sring_entry]* %ring, i64 0, i64 %idxprom, !dbg !16124
  %rsp = bitcast %union.xen_netif_rx_sring_entry* %arrayidx117 to %struct.xen_netif_rx_response*, !dbg !16124
  store %struct.xen_netif_rx_response* %rsp, %struct.xen_netif_rx_response** %rx, align 8, !dbg !16125
  %79 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16126
  %80 = load i32, i32* %cons, align 4, !dbg !16127
  %81 = load i32, i32* %slots, align 4, !dbg !16128
  %add118 = add i32 %80, %81, !dbg !16129
  %call119 = call %struct.sk_buff* @xennet_get_rx_skb(%struct.netfront_queue* %79, i32 %add118) #12, !dbg !16130
  store %struct.sk_buff* %call119, %struct.sk_buff** %skb, align 8, !dbg !16131
  %82 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16132
  %83 = load i32, i32* %cons, align 4, !dbg !16133
  %84 = load i32, i32* %slots, align 4, !dbg !16134
  %add120 = add i32 %83, %84, !dbg !16135
  %call121 = call i32 @xennet_get_rx_ref(%struct.netfront_queue* %82, i32 %add120) #12, !dbg !16136
  store i32 %call121, i32* %ref, align 4, !dbg !16137
  %85 = load i32, i32* %slots, align 4, !dbg !16138
  %inc = add i32 %85, 1, !dbg !16138
  store i32 %inc, i32* %slots, align 4, !dbg !16138
  br label %for.cond, !dbg !16139, !llvm.loop !16140

for.end:                                          ; preds = %if.end111, %if.then102
  %86 = load i32, i32* %slots, align 4, !dbg !16143
  %87 = load i32, i32* %max, align 4, !dbg !16143
  %cmp122 = icmp sgt i32 %86, %87, !dbg !16143
  %lnot124 = xor i1 %cmp122, true, !dbg !16143
  %lnot126 = xor i1 %lnot124, true, !dbg !16143
  %lnot.ext127 = zext i1 %lnot126 to i32, !dbg !16143
  %conv128 = sext i32 %lnot.ext127 to i64, !dbg !16143
  %tobool129 = icmp ne i64 %conv128, 0, !dbg !16143
  br i1 %tobool129, label %if.then130, label %if.end135, !dbg !16145

if.then130:                                       ; preds = %for.end
  %call131 = call i32 @net_ratelimit() #12, !dbg !16146
  %tobool132 = icmp ne i32 %call131, 0, !dbg !16146
  br i1 %tobool132, label %if.then133, label %if.end134, !dbg !16149

if.then133:                                       ; preds = %if.then130
  %88 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16150
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %88, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.58, i64 0, i64 0)) #13, !dbg !16150
  br label %if.end134, !dbg !16150

if.end134:                                        ; preds = %if.then133, %if.then130
  store i32 -7, i32* %err, align 4, !dbg !16151
  br label %if.end135, !dbg !16152

if.end135:                                        ; preds = %if.end134, %for.end
  %89 = load i32, i32* %err, align 4, !dbg !16153
  %tobool136 = icmp ne i32 %89, 0, !dbg !16153
  %lnot137 = xor i1 %tobool136, true, !dbg !16153
  %lnot139 = xor i1 %lnot137, true, !dbg !16153
  %lnot.ext140 = zext i1 %lnot139 to i32, !dbg !16153
  %conv141 = sext i32 %lnot.ext140 to i64, !dbg !16153
  %tobool142 = icmp ne i64 %conv141, 0, !dbg !16153
  br i1 %tobool142, label %if.then143, label %if.end147, !dbg !16155

if.then143:                                       ; preds = %if.end135
  %90 = load i32, i32* %cons, align 4, !dbg !16156
  %91 = load i32, i32* %slots, align 4, !dbg !16157
  %add144 = add i32 %90, %91, !dbg !16158
  %92 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16159
  %rx145 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %92, i32 0, i32 20, !dbg !16160
  %rsp_cons146 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx145, i32 0, i32 1, !dbg !16161
  store i32 %add144, i32* %rsp_cons146, align 4, !dbg !16162
  br label %if.end147, !dbg !16159

if.end147:                                        ; preds = %if.then143, %if.end135
  %93 = load i32, i32* %err, align 4, !dbg !16163
  ret i32 %93, !dbg !16164
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @__skb_dequeue(%struct.sk_buff_head* %list) #3 !dbg !16165 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !16168, metadata !DIExpression()), !dbg !16169
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !16170, metadata !DIExpression()), !dbg !16171
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !16172
  %call = call %struct.sk_buff* @skb_peek(%struct.sk_buff_head* %0) #12, !dbg !16173
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !16171
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16174
  %tobool = icmp ne %struct.sk_buff* %1, null, !dbg !16174
  br i1 %tobool, label %if.then, label %if.end, !dbg !16176

if.then:                                          ; preds = %entry
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16177
  %3 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !16178
  call void @__skb_unlink(%struct.sk_buff* %2, %struct.sk_buff_head* %3) #12, !dbg !16179
  br label %if.end, !dbg !16179

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16180
  ret %struct.sk_buff* %4, !dbg !16181
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_queue_tail(%struct.sk_buff_head* %list, %struct.sk_buff* %newsk) #3 !dbg !16182 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %newsk.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !16185, metadata !DIExpression()), !dbg !16186
  store %struct.sk_buff* %newsk, %struct.sk_buff** %newsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %newsk.addr, metadata !16187, metadata !DIExpression()), !dbg !16188
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !16189
  %1 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !16190
  %2 = bitcast %struct.sk_buff_head* %1 to %struct.sk_buff*, !dbg !16191
  %3 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !16192
  call void @__skb_queue_before(%struct.sk_buff_head* %0, %struct.sk_buff* %2, %struct.sk_buff* %3) #12, !dbg !16193
  ret void, !dbg !16194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_set_skb_gso(%struct.sk_buff* %skb, %struct.xen_netif_extra_info* %gso) #3 !dbg !16195 {
entry:
  %retval = alloca i32, align 4
  %skb.addr = alloca %struct.sk_buff*, align 8
  %gso.addr = alloca %struct.xen_netif_extra_info*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16198, metadata !DIExpression()), !dbg !16199
  store %struct.xen_netif_extra_info* %gso, %struct.xen_netif_extra_info** %gso.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xen_netif_extra_info** %gso.addr, metadata !16200, metadata !DIExpression()), !dbg !16201
  %0 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %gso.addr, align 8, !dbg !16202
  %u = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %0, i32 0, i32 2, !dbg !16204
  %gso1 = bitcast %union.anon.168* %u to %struct.anon.169*, !dbg !16205
  %size = getelementptr inbounds %struct.anon.169, %struct.anon.169* %gso1, i32 0, i32 0, !dbg !16206
  %1 = load i16, i16* %size, align 2, !dbg !16206
  %tobool = icmp ne i16 %1, 0, !dbg !16202
  br i1 %tobool, label %if.end5, label %if.then, !dbg !16207

if.then:                                          ; preds = %entry
  %call = call i32 @net_ratelimit() #12, !dbg !16208
  %tobool2 = icmp ne i32 %call, 0, !dbg !16208
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !16211

if.then3:                                         ; preds = %if.then
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.62, i64 0, i64 0)) #13, !dbg !16212
  br label %if.end, !dbg !16212

if.end:                                           ; preds = %if.then3, %if.then
  store i32 -22, i32* %retval, align 4, !dbg !16213
  br label %return, !dbg !16213

if.end5:                                          ; preds = %entry
  %2 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %gso.addr, align 8, !dbg !16214
  %u6 = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %2, i32 0, i32 2, !dbg !16216
  %gso7 = bitcast %union.anon.168* %u6 to %struct.anon.169*, !dbg !16217
  %type = getelementptr inbounds %struct.anon.169, %struct.anon.169* %gso7, i32 0, i32 1, !dbg !16218
  %3 = load i8, i8* %type, align 2, !dbg !16218
  %conv = zext i8 %3 to i32, !dbg !16214
  %cmp = icmp ne i32 %conv, 1, !dbg !16219
  br i1 %cmp, label %land.lhs.true, label %if.end25, !dbg !16220

land.lhs.true:                                    ; preds = %if.end5
  %4 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %gso.addr, align 8, !dbg !16221
  %u9 = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %4, i32 0, i32 2, !dbg !16222
  %gso10 = bitcast %union.anon.168* %u9 to %struct.anon.169*, !dbg !16223
  %type11 = getelementptr inbounds %struct.anon.169, %struct.anon.169* %gso10, i32 0, i32 1, !dbg !16224
  %5 = load i8, i8* %type11, align 2, !dbg !16224
  %conv12 = zext i8 %5 to i32, !dbg !16221
  %cmp13 = icmp ne i32 %conv12, 2, !dbg !16225
  br i1 %cmp13, label %if.then15, label %if.end25, !dbg !16226

if.then15:                                        ; preds = %land.lhs.true
  %call16 = call i32 @net_ratelimit() #12, !dbg !16227
  %tobool17 = icmp ne i32 %call16, 0, !dbg !16227
  br i1 %tobool17, label %if.then18, label %if.end24, !dbg !16230

if.then18:                                        ; preds = %if.then15
  %6 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %gso.addr, align 8, !dbg !16231
  %u19 = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %6, i32 0, i32 2, !dbg !16231
  %gso20 = bitcast %union.anon.168* %u19 to %struct.anon.169*, !dbg !16231
  %type21 = getelementptr inbounds %struct.anon.169, %struct.anon.169* %gso20, i32 0, i32 1, !dbg !16231
  %7 = load i8, i8* %type21, align 2, !dbg !16231
  %conv22 = zext i8 %7 to i32, !dbg !16231
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.63, i64 0, i64 0), i32 %conv22) #13, !dbg !16231
  br label %if.end24, !dbg !16231

if.end24:                                         ; preds = %if.then18, %if.then15
  store i32 -22, i32* %retval, align 4, !dbg !16232
  br label %return, !dbg !16232

if.end25:                                         ; preds = %land.lhs.true, %if.end5
  %8 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %gso.addr, align 8, !dbg !16233
  %u26 = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %8, i32 0, i32 2, !dbg !16234
  %gso27 = bitcast %union.anon.168* %u26 to %struct.anon.169*, !dbg !16235
  %size28 = getelementptr inbounds %struct.anon.169, %struct.anon.169* %gso27, i32 0, i32 0, !dbg !16236
  %9 = load i16, i16* %size28, align 2, !dbg !16236
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16237
  %call29 = call i8* @skb_end_pointer(%struct.sk_buff* %10) #12, !dbg !16237
  %11 = bitcast i8* %call29 to %struct.skb_shared_info*, !dbg !16238
  %gso_size = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %11, i32 0, i32 4, !dbg !16238
  store i16 %9, i16* %gso_size, align 4, !dbg !16239
  %12 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %gso.addr, align 8, !dbg !16240
  %u30 = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %12, i32 0, i32 2, !dbg !16241
  %gso31 = bitcast %union.anon.168* %u30 to %struct.anon.169*, !dbg !16242
  %type32 = getelementptr inbounds %struct.anon.169, %struct.anon.169* %gso31, i32 0, i32 1, !dbg !16243
  %13 = load i8, i8* %type32, align 2, !dbg !16243
  %conv33 = zext i8 %13 to i32, !dbg !16240
  %cmp34 = icmp eq i32 %conv33, 1, !dbg !16244
  %14 = zext i1 %cmp34 to i64, !dbg !16245
  %cond = select i1 %cmp34, i32 1, i32 16, !dbg !16245
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16246
  %call36 = call i8* @skb_end_pointer(%struct.sk_buff* %15) #12, !dbg !16246
  %16 = bitcast i8* %call36 to %struct.skb_shared_info*, !dbg !16247
  %gso_type = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %16, i32 0, i32 8, !dbg !16247
  store i32 %cond, i32* %gso_type, align 8, !dbg !16248
  %17 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16249
  %call37 = call i8* @skb_end_pointer(%struct.sk_buff* %17) #12, !dbg !16249
  %18 = bitcast i8* %call37 to %struct.skb_shared_info*, !dbg !16250
  %gso_type38 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %18, i32 0, i32 8, !dbg !16250
  %19 = load i32, i32* %gso_type38, align 8, !dbg !16251
  %or = or i32 %19, 2, !dbg !16251
  store i32 %or, i32* %gso_type38, align 8, !dbg !16251
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16252
  %call39 = call i8* @skb_end_pointer(%struct.sk_buff* %20) #12, !dbg !16252
  %21 = bitcast i8* %call39 to %struct.skb_shared_info*, !dbg !16253
  %gso_segs = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %21, i32 0, i32 5, !dbg !16253
  store i16 0, i16* %gso_segs, align 2, !dbg !16254
  store i32 0, i32* %retval, align 4, !dbg !16255
  br label %return, !dbg !16255

return:                                           ; preds = %if.end25, %if.end24, %if.end
  %22 = load i32, i32* %retval, align 4, !dbg !16256
  ret i32 %22, !dbg !16256
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_queue_head(%struct.sk_buff_head* %list, %struct.sk_buff* %newsk) #3 !dbg !16257 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %newsk.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !16258, metadata !DIExpression()), !dbg !16259
  store %struct.sk_buff* %newsk, %struct.sk_buff** %newsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %newsk.addr, metadata !16260, metadata !DIExpression()), !dbg !16261
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !16262
  %1 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !16263
  %2 = bitcast %struct.sk_buff_head* %1 to %struct.sk_buff*, !dbg !16264
  %3 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !16265
  call void @__skb_queue_after(%struct.sk_buff_head* %0, %struct.sk_buff* %2, %struct.sk_buff* %3) #12, !dbg !16266
  ret void, !dbg !16267
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_queue_len(%struct.sk_buff_head* %list_) #3 !dbg !16268 {
entry:
  %list_.addr = alloca %struct.sk_buff_head*, align 8
  store %struct.sk_buff_head* %list_, %struct.sk_buff_head** %list_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list_.addr, metadata !16273, metadata !DIExpression()), !dbg !16274
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list_.addr, align 8, !dbg !16275
  %qlen = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %0, i32 0, i32 2, !dbg !16276
  %1 = load i32, i32* %qlen, align 8, !dbg !16276
  ret i32 %1, !dbg !16277
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_frag_off_set(%struct.bio_vec* %frag, i32 %offset) #3 !dbg !16278 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !16281, metadata !DIExpression()), !dbg !16282
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !16283, metadata !DIExpression()), !dbg !16284
  %0 = load i32, i32* %offset.addr, align 4, !dbg !16285
  %1 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !16286
  %bv_offset = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %1, i32 0, i32 2, !dbg !16287
  store i32 %0, i32* %bv_offset, align 4, !dbg !16288
  ret void, !dbg !16289
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_frag_size_set(%struct.bio_vec* %frag, i32 %size) #3 !dbg !16290 {
entry:
  %frag.addr = alloca %struct.bio_vec*, align 8
  %size.addr = alloca i32, align 4
  store %struct.bio_vec* %frag, %struct.bio_vec** %frag.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %frag.addr, metadata !16291, metadata !DIExpression()), !dbg !16292
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !16293, metadata !DIExpression()), !dbg !16294
  %0 = load i32, i32* %size.addr, align 4, !dbg !16295
  %1 = load %struct.bio_vec*, %struct.bio_vec** %frag.addr, align 8, !dbg !16296
  %bv_len = getelementptr inbounds %struct.bio_vec, %struct.bio_vec* %1, i32 0, i32 1, !dbg !16297
  store i32 %0, i32* %bv_len, align 8, !dbg !16298
  ret void, !dbg !16299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_fill_frags(%struct.netfront_queue* %queue, %struct.sk_buff* %skb, %struct.sk_buff_head* %list) #3 !dbg !16300 {
entry:
  %retval = alloca i32, align 4
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %cons = alloca i32, align 4
  %nskb = alloca %struct.sk_buff*, align 8
  %rx1 = alloca %struct.xen_netif_rx_response*, align 8
  %nfrag = alloca %struct.bio_vec*, align 8
  %pull_to = alloca i32, align 4
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !16303, metadata !DIExpression()), !dbg !16304
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16305, metadata !DIExpression()), !dbg !16306
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !16307, metadata !DIExpression()), !dbg !16308
  call void @llvm.dbg.declare(metadata i32* %cons, metadata !16309, metadata !DIExpression()), !dbg !16310
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16311
  %rx = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %0, i32 0, i32 20, !dbg !16312
  %rsp_cons = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx, i32 0, i32 1, !dbg !16313
  %1 = load i32, i32* %rsp_cons, align 4, !dbg !16313
  store i32 %1, i32* %cons, align 4, !dbg !16310
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %nskb, metadata !16314, metadata !DIExpression()), !dbg !16315
  br label %while.cond, !dbg !16316

while.cond:                                       ; preds = %if.end44, %entry
  %2 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !16317
  %call = call %struct.sk_buff* @__skb_dequeue(%struct.sk_buff_head* %2) #12, !dbg !16318
  store %struct.sk_buff* %call, %struct.sk_buff** %nskb, align 8, !dbg !16319
  %tobool = icmp ne %struct.sk_buff* %call, null, !dbg !16316
  br i1 %tobool, label %while.body, label %while.end, !dbg !16316

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.xen_netif_rx_response** %rx1, metadata !16320, metadata !DIExpression()), !dbg !16322
  %3 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16323
  %rx2 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %3, i32 0, i32 20, !dbg !16323
  %sring = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx2, i32 0, i32 3, !dbg !16323
  %4 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring, align 8, !dbg !16323
  %ring = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %4, i32 0, i32 5, !dbg !16323
  %5 = load i32, i32* %cons, align 4, !dbg !16323
  %inc = add i32 %5, 1, !dbg !16323
  store i32 %inc, i32* %cons, align 4, !dbg !16323
  %6 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16323
  %rx3 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %6, i32 0, i32 20, !dbg !16323
  %nr_ents = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx3, i32 0, i32 2, !dbg !16323
  %7 = load i32, i32* %nr_ents, align 8, !dbg !16323
  %sub = sub i32 %7, 1, !dbg !16323
  %and = and i32 %inc, %sub, !dbg !16323
  %idxprom = zext i32 %and to i64, !dbg !16323
  %arrayidx = getelementptr [1 x %union.xen_netif_rx_sring_entry], [1 x %union.xen_netif_rx_sring_entry]* %ring, i64 0, i64 %idxprom, !dbg !16323
  %rsp = bitcast %union.xen_netif_rx_sring_entry* %arrayidx to %struct.xen_netif_rx_response*, !dbg !16323
  store %struct.xen_netif_rx_response* %rsp, %struct.xen_netif_rx_response** %rx1, align 8, !dbg !16322
  call void @llvm.dbg.declare(metadata %struct.bio_vec** %nfrag, metadata !16324, metadata !DIExpression()), !dbg !16325
  %8 = load %struct.sk_buff*, %struct.sk_buff** %nskb, align 8, !dbg !16326
  %call4 = call i8* @skb_end_pointer(%struct.sk_buff* %8) #12, !dbg !16326
  %9 = bitcast i8* %call4 to %struct.skb_shared_info*, !dbg !16327
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %9, i32 0, i32 12, !dbg !16327
  %arrayidx5 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 0, !dbg !16326
  store %struct.bio_vec* %arrayidx5, %struct.bio_vec** %nfrag, align 8, !dbg !16325
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16328
  %call6 = call i8* @skb_end_pointer(%struct.sk_buff* %10) #12, !dbg !16328
  %11 = bitcast i8* %call6 to %struct.skb_shared_info*, !dbg !16330
  %nr_frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %11, i32 0, i32 2, !dbg !16330
  %12 = load i8, i8* %nr_frags, align 2, !dbg !16330
  %conv = zext i8 %12 to i64, !dbg !16328
  %cmp = icmp eq i64 %conv, 17, !dbg !16331
  br i1 %cmp, label %if.then, label %if.end27, !dbg !16332

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %pull_to, metadata !16333, metadata !DIExpression()), !dbg !16335
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16336
  %cb = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %13, i32 0, i32 3, !dbg !16336
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %cb, i64 0, i64 0, !dbg !16337
  %14 = bitcast i8* %arraydecay to %struct.netfront_cb*, !dbg !16337
  %pull_to8 = getelementptr inbounds %struct.netfront_cb, %struct.netfront_cb* %14, i32 0, i32 0, !dbg !16337
  %15 = load i32, i32* %pull_to8, align 8, !dbg !16337
  store i32 %15, i32* %pull_to, align 4, !dbg !16335
  br label %do.body, !dbg !16338

do.body:                                          ; preds = %if.then
  %16 = load i32, i32* %pull_to, align 4, !dbg !16339
  %17 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16339
  %call9 = call i32 @skb_headlen(%struct.sk_buff* %17) #12, !dbg !16339
  %cmp10 = icmp ult i32 %16, %call9, !dbg !16339
  %lnot = xor i1 %cmp10, true, !dbg !16339
  %lnot12 = xor i1 %lnot, true, !dbg !16339
  %lnot.ext = zext i1 %lnot12 to i32, !dbg !16339
  %conv13 = sext i32 %lnot.ext to i64, !dbg !16339
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !16339
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !16342

if.then15:                                        ; preds = %do.body
  br label %do.body16, !dbg !16339

do.body16:                                        ; preds = %if.then15
  br label %do.body17, !dbg !16343

do.body17:                                        ; preds = %do.body16
  br label %do.end, !dbg !16345

do.end:                                           ; preds = %do.body17
  br label %do.body18, !dbg !16343

do.body18:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i32 1056, i32 0, i64 12) #8, !dbg !16347, !srcloc !16349
  br label %do.end19, !dbg !16347

do.end19:                                         ; preds = %do.body18
  br label %do.body20, !dbg !16343

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 644) #8, !dbg !16350, !srcloc !16353
  unreachable, !dbg !16354

do.end21:                                         ; No predecessors!
  br label %do.end22, !dbg !16343

do.end22:                                         ; preds = %do.end21
  br label %if.end, !dbg !16343

if.end:                                           ; preds = %do.end22, %do.body
  br label %do.end23, !dbg !16342

do.end23:                                         ; preds = %if.end
  %18 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16355
  %19 = load i32, i32* %pull_to, align 4, !dbg !16356
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16357
  %call24 = call i32 @skb_headlen(%struct.sk_buff* %20) #12, !dbg !16358
  %sub25 = sub i32 %19, %call24, !dbg !16359
  %call26 = call i8* @__pskb_pull_tail(%struct.sk_buff* %18, i32 %sub25) #12, !dbg !16360
  br label %if.end27, !dbg !16361

if.end27:                                         ; preds = %do.end23, %while.body
  %21 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16362
  %call28 = call i8* @skb_end_pointer(%struct.sk_buff* %21) #12, !dbg !16362
  %22 = bitcast i8* %call28 to %struct.skb_shared_info*, !dbg !16362
  %nr_frags29 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %22, i32 0, i32 2, !dbg !16362
  %23 = load i8, i8* %nr_frags29, align 2, !dbg !16362
  %conv30 = zext i8 %23 to i64, !dbg !16362
  %cmp31 = icmp uge i64 %conv30, 17, !dbg !16362
  %lnot33 = xor i1 %cmp31, true, !dbg !16362
  %lnot35 = xor i1 %lnot33, true, !dbg !16362
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !16362
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !16362
  %tobool38 = icmp ne i64 %conv37, 0, !dbg !16362
  br i1 %tobool38, label %if.then39, label %if.end44, !dbg !16364

if.then39:                                        ; preds = %if.end27
  %24 = load i32, i32* %cons, align 4, !dbg !16365
  %inc40 = add i32 %24, 1, !dbg !16365
  store i32 %inc40, i32* %cons, align 4, !dbg !16365
  %25 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !16367
  %call41 = call i32 @skb_queue_len(%struct.sk_buff_head* %25) #12, !dbg !16368
  %add = add i32 %inc40, %call41, !dbg !16369
  %26 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16370
  %rx42 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %26, i32 0, i32 20, !dbg !16371
  %rsp_cons43 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx42, i32 0, i32 1, !dbg !16372
  store i32 %add, i32* %rsp_cons43, align 4, !dbg !16373
  %27 = load %struct.sk_buff*, %struct.sk_buff** %nskb, align 8, !dbg !16374
  call void @kfree_skb(%struct.sk_buff* %27) #12, !dbg !16375
  store i32 -2, i32* %retval, align 4, !dbg !16376
  br label %return, !dbg !16376

if.end44:                                         ; preds = %if.end27
  %28 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16377
  %29 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16378
  %call45 = call i8* @skb_end_pointer(%struct.sk_buff* %29) #12, !dbg !16378
  %30 = bitcast i8* %call45 to %struct.skb_shared_info*, !dbg !16379
  %nr_frags46 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %30, i32 0, i32 2, !dbg !16379
  %31 = load i8, i8* %nr_frags46, align 2, !dbg !16379
  %conv47 = zext i8 %31 to i32, !dbg !16378
  %32 = load %struct.bio_vec*, %struct.bio_vec** %nfrag, align 8, !dbg !16380
  %call48 = call %struct.page* @skb_frag_page(%struct.bio_vec* %32) #12, !dbg !16381
  %33 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx1, align 8, !dbg !16382
  %offset = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %33, i32 0, i32 1, !dbg !16383
  %34 = load i16, i16* %offset, align 2, !dbg !16383
  %conv49 = zext i16 %34 to i32, !dbg !16382
  %35 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx1, align 8, !dbg !16384
  %status = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %35, i32 0, i32 3, !dbg !16385
  %36 = load i16, i16* %status, align 2, !dbg !16385
  %conv50 = sext i16 %36 to i32, !dbg !16384
  call void @skb_add_rx_frag(%struct.sk_buff* %28, i32 %conv47, %struct.page* %call48, i32 %conv49, i32 %conv50, i32 4096) #12, !dbg !16386
  %37 = load %struct.sk_buff*, %struct.sk_buff** %nskb, align 8, !dbg !16387
  %call51 = call i8* @skb_end_pointer(%struct.sk_buff* %37) #12, !dbg !16387
  %38 = bitcast i8* %call51 to %struct.skb_shared_info*, !dbg !16388
  %nr_frags52 = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %38, i32 0, i32 2, !dbg !16388
  store i8 0, i8* %nr_frags52, align 2, !dbg !16389
  %39 = load %struct.sk_buff*, %struct.sk_buff** %nskb, align 8, !dbg !16390
  call void @kfree_skb(%struct.sk_buff* %39) #12, !dbg !16391
  br label %while.cond, !dbg !16316, !llvm.loop !16392

while.end:                                        ; preds = %while.cond
  %40 = load i32, i32* %cons, align 4, !dbg !16394
  %41 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16395
  %rx53 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %41, i32 0, i32 20, !dbg !16396
  %rsp_cons54 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx53, i32 0, i32 1, !dbg !16397
  store i32 %40, i32* %rsp_cons54, align 4, !dbg !16398
  store i32 0, i32* %retval, align 4, !dbg !16399
  br label %return, !dbg !16399

return:                                           ; preds = %while.end, %if.then39
  %42 = load i32, i32* %retval, align 4, !dbg !16400
  ret i32 %42, !dbg !16400
}

; Function Attrs: noredzone
declare dso_local void @xdp_do_flush() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_queue_purge(%struct.sk_buff_head* %list) #3 !dbg !16401 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !16402, metadata !DIExpression()), !dbg !16403
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !16404, metadata !DIExpression()), !dbg !16405
  br label %while.cond, !dbg !16406

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !16407
  %call = call %struct.sk_buff* @__skb_dequeue(%struct.sk_buff_head* %0) #12, !dbg !16408
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !16409
  %cmp = icmp ne %struct.sk_buff* %call, null, !dbg !16410
  br i1 %cmp, label %while.body, label %while.end, !dbg !16406

while.body:                                       ; preds = %while.cond
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16411
  call void @kfree_skb(%struct.sk_buff* %1) #12, !dbg !16412
  br label %while.cond, !dbg !16406, !llvm.loop !16413

while.end:                                        ; preds = %while.cond
  ret void, !dbg !16415
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @handle_incoming_queue(%struct.netfront_queue* %queue, %struct.sk_buff_head* %rxq) #3 !dbg !16416 {
entry:
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %rxq.addr = alloca %struct.sk_buff_head*, align 8
  %rx_stats = alloca %struct.netfront_stats*, align 8
  %tmp = alloca %struct.netfront_stats*, align 8
  %__vpp_verify = alloca i8*, align 8
  %tmp1 = alloca %struct.netfront_stats*, align 8
  %packets_dropped = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %pull_to = alloca i32, align 4
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !16419, metadata !DIExpression()), !dbg !16420
  store %struct.sk_buff_head* %rxq, %struct.sk_buff_head** %rxq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %rxq.addr, metadata !16421, metadata !DIExpression()), !dbg !16422
  call void @llvm.dbg.declare(metadata %struct.netfront_stats** %rx_stats, metadata !16423, metadata !DIExpression()), !dbg !16424
  br label %do.body, !dbg !16425

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify, metadata !16428, metadata !DIExpression()), !dbg !16430
  store i8* null, i8** %__vpp_verify, align 8, !dbg !16430
  %0 = load i8*, i8** %__vpp_verify, align 8, !dbg !16430
  br label %do.end, !dbg !16430

do.end:                                           ; preds = %do.body
  %1 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16425
  %info = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %1, i32 0, i32 2, !dbg !16425
  %2 = load %struct.netfront_info*, %struct.netfront_info** %info, align 32, !dbg !16425
  %rx_stats2 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %2, i32 0, i32 4, !dbg !16425
  %3 = load %struct.netfront_stats*, %struct.netfront_stats** %rx_stats2, align 8, !dbg !16425
  store %struct.netfront_stats* %3, %struct.netfront_stats** %tmp1, align 8, !dbg !16430
  %4 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp1, align 8, !dbg !16425
  store %struct.netfront_stats* %4, %struct.netfront_stats** %tmp, align 8, !dbg !16431
  %5 = load %struct.netfront_stats*, %struct.netfront_stats** %tmp, align 8, !dbg !16431
  store %struct.netfront_stats* %5, %struct.netfront_stats** %rx_stats, align 8, !dbg !16424
  call void @llvm.dbg.declare(metadata i32* %packets_dropped, metadata !16432, metadata !DIExpression()), !dbg !16433
  store i32 0, i32* %packets_dropped, align 4, !dbg !16433
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !16434, metadata !DIExpression()), !dbg !16435
  br label %while.cond, !dbg !16436

while.cond:                                       ; preds = %if.end17, %if.then13, %do.end
  %6 = load %struct.sk_buff_head*, %struct.sk_buff_head** %rxq.addr, align 8, !dbg !16437
  %call = call %struct.sk_buff* @__skb_dequeue(%struct.sk_buff_head* %6) #12, !dbg !16438
  store %struct.sk_buff* %call, %struct.sk_buff** %skb, align 8, !dbg !16439
  %cmp = icmp ne %struct.sk_buff* %call, null, !dbg !16440
  br i1 %cmp, label %while.body, label %while.end, !dbg !16436

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %pull_to, metadata !16441, metadata !DIExpression()), !dbg !16443
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16444
  %cb = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %7, i32 0, i32 3, !dbg !16444
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %cb, i64 0, i64 0, !dbg !16445
  %8 = bitcast i8* %arraydecay to %struct.netfront_cb*, !dbg !16445
  %pull_to3 = getelementptr inbounds %struct.netfront_cb, %struct.netfront_cb* %8, i32 0, i32 0, !dbg !16445
  %9 = load i32, i32* %pull_to3, align 8, !dbg !16445
  store i32 %9, i32* %pull_to, align 4, !dbg !16443
  %10 = load i32, i32* %pull_to, align 4, !dbg !16446
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16448
  %call4 = call i32 @skb_headlen(%struct.sk_buff* %11) #12, !dbg !16449
  %cmp5 = icmp ugt i32 %10, %call4, !dbg !16450
  br i1 %cmp5, label %if.then, label %if.end, !dbg !16451

if.then:                                          ; preds = %while.body
  %12 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16452
  %13 = load i32, i32* %pull_to, align 4, !dbg !16453
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16454
  %call6 = call i32 @skb_headlen(%struct.sk_buff* %14) #12, !dbg !16455
  %sub = sub i32 %13, %call6, !dbg !16456
  %call7 = call i8* @__pskb_pull_tail(%struct.sk_buff* %12, i32 %sub) #12, !dbg !16457
  br label %if.end, !dbg !16457

if.end:                                           ; preds = %if.then, %while.body
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16458
  %16 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16459
  %info8 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %16, i32 0, i32 2, !dbg !16460
  %17 = load %struct.netfront_info*, %struct.netfront_info** %info8, align 32, !dbg !16460
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %17, i32 0, i32 1, !dbg !16461
  %18 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16461
  %call9 = call zeroext i16 @eth_type_trans(%struct.sk_buff* %15, %struct.net_device* %18) #12, !dbg !16462
  %19 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16463
  %protocol = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %19, i32 0, i32 29, !dbg !16464
  store i16 %call9, i16* %protocol, align 8, !dbg !16465
  %20 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16466
  call void @skb_reset_network_header(%struct.sk_buff* %20) #12, !dbg !16467
  %21 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16468
  %info10 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %21, i32 0, i32 2, !dbg !16470
  %22 = load %struct.netfront_info*, %struct.netfront_info** %info10, align 32, !dbg !16470
  %netdev11 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %22, i32 0, i32 1, !dbg !16471
  %23 = load %struct.net_device*, %struct.net_device** %netdev11, align 8, !dbg !16471
  %24 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16472
  %call12 = call i32 @checksum_setup(%struct.net_device* %23, %struct.sk_buff* %24) #12, !dbg !16473
  %tobool = icmp ne i32 %call12, 0, !dbg !16473
  br i1 %tobool, label %if.then13, label %if.end17, !dbg !16474

if.then13:                                        ; preds = %if.end
  %25 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16475
  call void @kfree_skb(%struct.sk_buff* %25) #12, !dbg !16477
  %26 = load i32, i32* %packets_dropped, align 4, !dbg !16478
  %inc = add i32 %26, 1, !dbg !16478
  store i32 %inc, i32* %packets_dropped, align 4, !dbg !16478
  %27 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16479
  %info14 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %27, i32 0, i32 2, !dbg !16480
  %28 = load %struct.netfront_info*, %struct.netfront_info** %info14, align 32, !dbg !16480
  %netdev15 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %28, i32 0, i32 1, !dbg !16481
  %29 = load %struct.net_device*, %struct.net_device** %netdev15, align 8, !dbg !16481
  %stats = getelementptr inbounds %struct.net_device, %struct.net_device* %29, i32 0, i32 24, !dbg !16482
  %rx_errors = getelementptr inbounds %struct.net_device_stats, %struct.net_device_stats* %stats, i32 0, i32 4, !dbg !16483
  %30 = load i64, i64* %rx_errors, align 8, !dbg !16484
  %inc16 = add i64 %30, 1, !dbg !16484
  store i64 %inc16, i64* %rx_errors, align 8, !dbg !16484
  br label %while.cond, !dbg !16485, !llvm.loop !16486

if.end17:                                         ; preds = %if.end
  %31 = load %struct.netfront_stats*, %struct.netfront_stats** %rx_stats, align 8, !dbg !16488
  %syncp = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %31, i32 0, i32 2, !dbg !16489
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %syncp) #12, !dbg !16490
  %32 = load %struct.netfront_stats*, %struct.netfront_stats** %rx_stats, align 8, !dbg !16491
  %packets = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %32, i32 0, i32 0, !dbg !16492
  %33 = load i64, i64* %packets, align 8, !dbg !16493
  %inc18 = add i64 %33, 1, !dbg !16493
  store i64 %inc18, i64* %packets, align 8, !dbg !16493
  %34 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16494
  %len = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %34, i32 0, i32 5, !dbg !16495
  %35 = load i32, i32* %len, align 8, !dbg !16495
  %conv = zext i32 %35 to i64, !dbg !16494
  %36 = load %struct.netfront_stats*, %struct.netfront_stats** %rx_stats, align 8, !dbg !16496
  %bytes = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %36, i32 0, i32 1, !dbg !16497
  %37 = load i64, i64* %bytes, align 8, !dbg !16498
  %add = add i64 %37, %conv, !dbg !16498
  store i64 %add, i64* %bytes, align 8, !dbg !16498
  %38 = load %struct.netfront_stats*, %struct.netfront_stats** %rx_stats, align 8, !dbg !16499
  %syncp19 = getelementptr inbounds %struct.netfront_stats, %struct.netfront_stats* %38, i32 0, i32 2, !dbg !16500
  call void @u64_stats_update_end(%struct.u64_stats_sync* %syncp19) #12, !dbg !16501
  %39 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16502
  %napi = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %39, i32 0, i32 4, !dbg !16503
  %40 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16504
  %call20 = call i32 @napi_gro_receive(%struct.napi_struct* %napi, %struct.sk_buff* %40) #12, !dbg !16505
  br label %while.cond, !dbg !16436, !llvm.loop !16486

while.end:                                        ; preds = %while.cond
  %41 = load i32, i32* %packets_dropped, align 4, !dbg !16506
  ret i32 %41, !dbg !16507
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @napi_complete_done(%struct.napi_struct*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_queue_head_init(%struct.sk_buff_head* %list) #3 !dbg !16508 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !16509, metadata !DIExpression()), !dbg !16510
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !16511
  %1 = bitcast %struct.sk_buff_head* %0 to %struct.sk_buff*, !dbg !16512
  %2 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !16513
  %next = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %2, i32 0, i32 0, !dbg !16514
  store %struct.sk_buff* %1, %struct.sk_buff** %next, align 8, !dbg !16515
  %3 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !16516
  %prev = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %3, i32 0, i32 1, !dbg !16517
  store %struct.sk_buff* %1, %struct.sk_buff** %prev, align 8, !dbg !16518
  %4 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !16519
  %qlen = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %4, i32 0, i32 2, !dbg !16520
  store i32 0, i32* %qlen, align 8, !dbg !16521
  ret void, !dbg !16522
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @xennet_get_rx_skb(%struct.netfront_queue* %queue, i32 %ri) #3 !dbg !16523 {
entry:
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %ri.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !16526, metadata !DIExpression()), !dbg !16527
  store i32 %ri, i32* %ri.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ri.addr, metadata !16528, metadata !DIExpression()), !dbg !16529
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16530, metadata !DIExpression()), !dbg !16531
  %0 = load i32, i32* %ri.addr, align 4, !dbg !16532
  %call = call i32 @xennet_rxidx(i32 %0) #12, !dbg !16533
  store i32 %call, i32* %i, align 4, !dbg !16531
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !16534, metadata !DIExpression()), !dbg !16535
  %1 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16536
  %rx_skbs = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %1, i32 0, i32 23, !dbg !16537
  %2 = load i32, i32* %i, align 4, !dbg !16538
  %idxprom = sext i32 %2 to i64, !dbg !16536
  %arrayidx = getelementptr [256 x %struct.sk_buff*], [256 x %struct.sk_buff*]* %rx_skbs, i64 0, i64 %idxprom, !dbg !16536
  %3 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx, align 8, !dbg !16536
  store %struct.sk_buff* %3, %struct.sk_buff** %skb, align 8, !dbg !16535
  %4 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16539
  %rx_skbs1 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %4, i32 0, i32 23, !dbg !16540
  %5 = load i32, i32* %i, align 4, !dbg !16541
  %idxprom2 = sext i32 %5 to i64, !dbg !16539
  %arrayidx3 = getelementptr [256 x %struct.sk_buff*], [256 x %struct.sk_buff*]* %rx_skbs1, i64 0, i64 %idxprom2, !dbg !16539
  store %struct.sk_buff* null, %struct.sk_buff** %arrayidx3, align 8, !dbg !16542
  %6 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16543
  ret %struct.sk_buff* %6, !dbg !16544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_get_rx_ref(%struct.netfront_queue* %queue, i32 %ri) #3 !dbg !16545 {
entry:
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %ri.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ref = alloca i32, align 4
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !16548, metadata !DIExpression()), !dbg !16549
  store i32 %ri, i32* %ri.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ri.addr, metadata !16550, metadata !DIExpression()), !dbg !16551
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16552, metadata !DIExpression()), !dbg !16553
  %0 = load i32, i32* %ri.addr, align 4, !dbg !16554
  %call = call i32 @xennet_rxidx(i32 %0) #12, !dbg !16555
  store i32 %call, i32* %i, align 4, !dbg !16553
  call void @llvm.dbg.declare(metadata i32* %ref, metadata !16556, metadata !DIExpression()), !dbg !16557
  %1 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16558
  %grant_rx_ref = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %1, i32 0, i32 25, !dbg !16559
  %2 = load i32, i32* %i, align 4, !dbg !16560
  %idxprom = sext i32 %2 to i64, !dbg !16558
  %arrayidx = getelementptr [256 x i32], [256 x i32]* %grant_rx_ref, i64 0, i64 %idxprom, !dbg !16558
  %3 = load i32, i32* %arrayidx, align 4, !dbg !16558
  store i32 %3, i32* %ref, align 4, !dbg !16557
  %4 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16561
  %grant_rx_ref1 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %4, i32 0, i32 25, !dbg !16562
  %5 = load i32, i32* %i, align 4, !dbg !16563
  %idxprom2 = sext i32 %5 to i64, !dbg !16561
  %arrayidx3 = getelementptr [256 x i32], [256 x i32]* %grant_rx_ref1, i64 0, i64 %idxprom2, !dbg !16561
  store i32 0, i32* %arrayidx3, align 4, !dbg !16564
  %6 = load i32, i32* %ref, align 4, !dbg !16565
  ret i32 %6, !dbg !16566
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_get_extras(%struct.netfront_queue* %queue, %struct.xen_netif_extra_info* %extras, i32 %rp) #3 !dbg !16567 {
entry:
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %extras.addr = alloca %struct.xen_netif_extra_info*, align 8
  %rp.addr = alloca i32, align 4
  %extra = alloca %struct.xen_netif_extra_info*, align 8
  %dev = alloca %struct.device*, align 8
  %cons = alloca i32, align 4
  %err = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %ref = alloca i32, align 4
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !16570, metadata !DIExpression()), !dbg !16571
  store %struct.xen_netif_extra_info* %extras, %struct.xen_netif_extra_info** %extras.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xen_netif_extra_info** %extras.addr, metadata !16572, metadata !DIExpression()), !dbg !16573
  store i32 %rp, i32* %rp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rp.addr, metadata !16574, metadata !DIExpression()), !dbg !16575
  call void @llvm.dbg.declare(metadata %struct.xen_netif_extra_info** %extra, metadata !16576, metadata !DIExpression()), !dbg !16577
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !16578, metadata !DIExpression()), !dbg !16579
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16580
  %info = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %0, i32 0, i32 2, !dbg !16581
  %1 = load %struct.netfront_info*, %struct.netfront_info** %info, align 32, !dbg !16581
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %1, i32 0, i32 1, !dbg !16582
  %2 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16582
  %dev1 = getelementptr inbounds %struct.net_device, %struct.net_device* %2, i32 0, i32 106, !dbg !16583
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !16579
  call void @llvm.dbg.declare(metadata i32* %cons, metadata !16584, metadata !DIExpression()), !dbg !16585
  %3 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16586
  %rx = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %3, i32 0, i32 20, !dbg !16587
  %rsp_cons = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx, i32 0, i32 1, !dbg !16588
  %4 = load i32, i32* %rsp_cons, align 4, !dbg !16588
  store i32 %4, i32* %cons, align 4, !dbg !16585
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16589, metadata !DIExpression()), !dbg !16590
  store i32 0, i32* %err, align 4, !dbg !16590
  br label %do.body, !dbg !16591

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !16592, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.declare(metadata i32* %ref, metadata !16595, metadata !DIExpression()), !dbg !16596
  %5 = load i32, i32* %cons, align 4, !dbg !16597
  %add = add i32 %5, 1, !dbg !16597
  %6 = load i32, i32* %rp.addr, align 4, !dbg !16597
  %cmp = icmp eq i32 %add, %6, !dbg !16597
  %lnot = xor i1 %cmp, true, !dbg !16597
  %lnot2 = xor i1 %lnot, true, !dbg !16597
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !16597
  %conv = sext i32 %lnot.ext to i64, !dbg !16597
  %tobool = icmp ne i64 %conv, 0, !dbg !16597
  br i1 %tobool, label %if.then, label %if.end5, !dbg !16599

if.then:                                          ; preds = %do.body
  %call = call i32 @net_ratelimit() #12, !dbg !16600
  %tobool3 = icmp ne i32 %call, 0, !dbg !16600
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !16603

if.then4:                                         ; preds = %if.then
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16604
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %7, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i64 0, i64 0)) #13, !dbg !16604
  br label %if.end, !dbg !16604

if.end:                                           ; preds = %if.then4, %if.then
  store i32 -53, i32* %err, align 4, !dbg !16605
  br label %do.end, !dbg !16606

if.end5:                                          ; preds = %do.body
  %8 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16607
  %rx6 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %8, i32 0, i32 20, !dbg !16607
  %sring = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx6, i32 0, i32 3, !dbg !16607
  %9 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring, align 8, !dbg !16607
  %ring = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %9, i32 0, i32 5, !dbg !16607
  %10 = load i32, i32* %cons, align 4, !dbg !16607
  %inc = add i32 %10, 1, !dbg !16607
  store i32 %inc, i32* %cons, align 4, !dbg !16607
  %11 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16607
  %rx7 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %11, i32 0, i32 20, !dbg !16607
  %nr_ents = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx7, i32 0, i32 2, !dbg !16607
  %12 = load i32, i32* %nr_ents, align 8, !dbg !16607
  %sub = sub i32 %12, 1, !dbg !16607
  %and = and i32 %inc, %sub, !dbg !16607
  %idxprom = zext i32 %and to i64, !dbg !16607
  %arrayidx = getelementptr [1 x %union.xen_netif_rx_sring_entry], [1 x %union.xen_netif_rx_sring_entry]* %ring, i64 0, i64 %idxprom, !dbg !16607
  %rsp = bitcast %union.xen_netif_rx_sring_entry* %arrayidx to %struct.xen_netif_rx_response*, !dbg !16607
  %13 = bitcast %struct.xen_netif_rx_response* %rsp to %struct.xen_netif_extra_info*, !dbg !16608
  store %struct.xen_netif_extra_info* %13, %struct.xen_netif_extra_info** %extra, align 8, !dbg !16609
  %14 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %extra, align 8, !dbg !16610
  %type = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %14, i32 0, i32 0, !dbg !16610
  %15 = load i8, i8* %type, align 2, !dbg !16610
  %tobool8 = icmp ne i8 %15, 0, !dbg !16610
  br i1 %tobool8, label %lor.rhs, label %lor.end, !dbg !16610

lor.rhs:                                          ; preds = %if.end5
  %16 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %extra, align 8, !dbg !16610
  %type9 = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %16, i32 0, i32 0, !dbg !16610
  %17 = load i8, i8* %type9, align 2, !dbg !16610
  %conv10 = zext i8 %17 to i32, !dbg !16610
  %cmp11 = icmp sge i32 %conv10, 6, !dbg !16610
  br label %lor.end, !dbg !16610

lor.end:                                          ; preds = %lor.rhs, %if.end5
  %18 = phi i1 [ true, %if.end5 ], [ %cmp11, %lor.rhs ]
  %lnot13 = xor i1 %18, true, !dbg !16610
  %lnot15 = xor i1 %lnot13, true, !dbg !16610
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !16610
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !16610
  %tobool18 = icmp ne i64 %conv17, 0, !dbg !16610
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !16612

if.then19:                                        ; preds = %lor.end
  %call20 = call i32 @net_ratelimit() #12, !dbg !16613
  %tobool21 = icmp ne i32 %call20, 0, !dbg !16613
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !16616

if.then22:                                        ; preds = %if.then19
  %19 = load %struct.device*, %struct.device** %dev, align 8, !dbg !16617
  %20 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %extra, align 8, !dbg !16617
  %type23 = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %20, i32 0, i32 0, !dbg !16617
  %21 = load i8, i8* %type23, align 2, !dbg !16617
  %conv24 = zext i8 %21 to i32, !dbg !16617
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %19, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.60, i64 0, i64 0), i32 %conv24) #13, !dbg !16617
  br label %if.end25, !dbg !16617

if.end25:                                         ; preds = %if.then22, %if.then19
  store i32 -22, i32* %err, align 4, !dbg !16618
  br label %if.end31, !dbg !16619

if.else:                                          ; preds = %lor.end
  %22 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %extras.addr, align 8, !dbg !16620
  %23 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %extra, align 8, !dbg !16622
  %type26 = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %23, i32 0, i32 0, !dbg !16623
  %24 = load i8, i8* %type26, align 2, !dbg !16623
  %conv27 = zext i8 %24 to i32, !dbg !16622
  %sub28 = sub i32 %conv27, 1, !dbg !16624
  %idxprom29 = sext i32 %sub28 to i64, !dbg !16620
  %arrayidx30 = getelementptr %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %22, i64 %idxprom29, !dbg !16620
  %25 = bitcast %struct.xen_netif_extra_info* %arrayidx30 to i8*, !dbg !16625
  %26 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %extra, align 8, !dbg !16626
  %27 = bitcast %struct.xen_netif_extra_info* %26 to i8*, !dbg !16625
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %25, i8* align 2 %27, i64 8, i1 false), !dbg !16625
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.end25
  %28 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16627
  %29 = load i32, i32* %cons, align 4, !dbg !16628
  %call32 = call %struct.sk_buff* @xennet_get_rx_skb(%struct.netfront_queue* %28, i32 %29) #12, !dbg !16629
  store %struct.sk_buff* %call32, %struct.sk_buff** %skb, align 8, !dbg !16630
  %30 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16631
  %31 = load i32, i32* %cons, align 4, !dbg !16632
  %call33 = call i32 @xennet_get_rx_ref(%struct.netfront_queue* %30, i32 %31) #12, !dbg !16633
  store i32 %call33, i32* %ref, align 4, !dbg !16634
  %32 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16635
  %33 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !16636
  %34 = load i32, i32* %ref, align 4, !dbg !16637
  call void @xennet_move_rx_slot(%struct.netfront_queue* %32, %struct.sk_buff* %33, i32 %34) #12, !dbg !16638
  br label %do.cond, !dbg !16639

do.cond:                                          ; preds = %if.end31
  %35 = load %struct.xen_netif_extra_info*, %struct.xen_netif_extra_info** %extra, align 8, !dbg !16640
  %flags = getelementptr inbounds %struct.xen_netif_extra_info, %struct.xen_netif_extra_info* %35, i32 0, i32 1, !dbg !16641
  %36 = load i8, i8* %flags, align 1, !dbg !16641
  %conv34 = zext i8 %36 to i32, !dbg !16640
  %and35 = and i32 %conv34, 1, !dbg !16642
  %tobool36 = icmp ne i32 %and35, 0, !dbg !16639
  br i1 %tobool36, label %do.body, label %do.end, !dbg !16639, !llvm.loop !16643

do.end:                                           ; preds = %do.cond, %if.end
  %37 = load i32, i32* %cons, align 4, !dbg !16645
  %38 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16646
  %rx37 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %38, i32 0, i32 20, !dbg !16647
  %rsp_cons38 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx37, i32 0, i32 1, !dbg !16648
  store i32 %37, i32* %rsp_cons38, align 4, !dbg !16649
  %39 = load i32, i32* %err, align 4, !dbg !16650
  ret i32 %39, !dbg !16651
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_move_rx_slot(%struct.netfront_queue* %queue, %struct.sk_buff* %skb, i32 %ref) #3 !dbg !16652 {
entry:
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %ref.addr = alloca i32, align 4
  %new = alloca i32, align 4
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !16655, metadata !DIExpression()), !dbg !16656
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !16657, metadata !DIExpression()), !dbg !16658
  store i32 %ref, i32* %ref.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref.addr, metadata !16659, metadata !DIExpression()), !dbg !16660
  call void @llvm.dbg.declare(metadata i32* %new, metadata !16661, metadata !DIExpression()), !dbg !16662
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16663
  %rx = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %0, i32 0, i32 20, !dbg !16664
  %req_prod_pvt = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx, i32 0, i32 0, !dbg !16665
  %1 = load i32, i32* %req_prod_pvt, align 8, !dbg !16665
  %call = call i32 @xennet_rxidx(i32 %1) #12, !dbg !16666
  store i32 %call, i32* %new, align 4, !dbg !16662
  br label %do.body, !dbg !16667

do.body:                                          ; preds = %entry
  %2 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16668
  %rx_skbs = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %2, i32 0, i32 23, !dbg !16668
  %3 = load i32, i32* %new, align 4, !dbg !16668
  %idxprom = sext i32 %3 to i64, !dbg !16668
  %arrayidx = getelementptr [256 x %struct.sk_buff*], [256 x %struct.sk_buff*]* %rx_skbs, i64 0, i64 %idxprom, !dbg !16668
  %4 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx, align 8, !dbg !16668
  %tobool = icmp ne %struct.sk_buff* %4, null, !dbg !16668
  %lnot = xor i1 %tobool, true, !dbg !16668
  %lnot1 = xor i1 %lnot, true, !dbg !16668
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !16668
  %conv = sext i32 %lnot.ext to i64, !dbg !16668
  %tobool2 = icmp ne i64 %conv, 0, !dbg !16668
  br i1 %tobool2, label %if.then, label %if.end, !dbg !16671

if.then:                                          ; preds = %do.body
  br label %do.body3, !dbg !16668

do.body3:                                         ; preds = %if.then
  br label %do.body4, !dbg !16672

do.body4:                                         ; preds = %do.body3
  br label %do.end, !dbg !16674

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !16672

do.body5:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i32 806, i32 0, i64 12) #8, !dbg !16676, !srcloc !16678
  br label %do.end6, !dbg !16676

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !16672

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 641) #8, !dbg !16679, !srcloc !16682
  unreachable, !dbg !16683

do.end8:                                          ; No predecessors!
  br label %do.end9, !dbg !16672

do.end9:                                          ; preds = %do.end8
  br label %if.end, !dbg !16672

if.end:                                           ; preds = %do.end9, %do.body
  br label %do.end10, !dbg !16671

do.end10:                                         ; preds = %if.end
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !16684
  %6 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16685
  %rx_skbs11 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %6, i32 0, i32 23, !dbg !16686
  %7 = load i32, i32* %new, align 4, !dbg !16687
  %idxprom12 = sext i32 %7 to i64, !dbg !16685
  %arrayidx13 = getelementptr [256 x %struct.sk_buff*], [256 x %struct.sk_buff*]* %rx_skbs11, i64 0, i64 %idxprom12, !dbg !16685
  store %struct.sk_buff* %5, %struct.sk_buff** %arrayidx13, align 8, !dbg !16688
  %8 = load i32, i32* %ref.addr, align 4, !dbg !16689
  %9 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16690
  %grant_rx_ref = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %9, i32 0, i32 25, !dbg !16691
  %10 = load i32, i32* %new, align 4, !dbg !16692
  %idxprom14 = sext i32 %10 to i64, !dbg !16690
  %arrayidx15 = getelementptr [256 x i32], [256 x i32]* %grant_rx_ref, i64 0, i64 %idxprom14, !dbg !16690
  store i32 %8, i32* %arrayidx15, align 4, !dbg !16693
  %11 = load i32, i32* %new, align 4, !dbg !16694
  %conv16 = trunc i32 %11 to i16, !dbg !16694
  %12 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16695
  %rx17 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %12, i32 0, i32 20, !dbg !16695
  %sring = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx17, i32 0, i32 3, !dbg !16695
  %13 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring, align 8, !dbg !16695
  %ring = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %13, i32 0, i32 5, !dbg !16695
  %14 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16695
  %rx18 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %14, i32 0, i32 20, !dbg !16695
  %req_prod_pvt19 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx18, i32 0, i32 0, !dbg !16695
  %15 = load i32, i32* %req_prod_pvt19, align 8, !dbg !16695
  %16 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16695
  %rx20 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %16, i32 0, i32 20, !dbg !16695
  %nr_ents = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx20, i32 0, i32 2, !dbg !16695
  %17 = load i32, i32* %nr_ents, align 8, !dbg !16695
  %sub = sub i32 %17, 1, !dbg !16695
  %and = and i32 %15, %sub, !dbg !16695
  %idxprom21 = zext i32 %and to i64, !dbg !16695
  %arrayidx22 = getelementptr [1 x %union.xen_netif_rx_sring_entry], [1 x %union.xen_netif_rx_sring_entry]* %ring, i64 0, i64 %idxprom21, !dbg !16695
  %req = bitcast %union.xen_netif_rx_sring_entry* %arrayidx22 to %struct.xen_netif_rx_request*, !dbg !16695
  %id = getelementptr inbounds %struct.xen_netif_rx_request, %struct.xen_netif_rx_request* %req, i32 0, i32 0, !dbg !16696
  store i16 %conv16, i16* %id, align 4, !dbg !16697
  %18 = load i32, i32* %ref.addr, align 4, !dbg !16698
  %19 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16699
  %rx23 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %19, i32 0, i32 20, !dbg !16699
  %sring24 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx23, i32 0, i32 3, !dbg !16699
  %20 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring24, align 8, !dbg !16699
  %ring25 = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %20, i32 0, i32 5, !dbg !16699
  %21 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16699
  %rx26 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %21, i32 0, i32 20, !dbg !16699
  %req_prod_pvt27 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx26, i32 0, i32 0, !dbg !16699
  %22 = load i32, i32* %req_prod_pvt27, align 8, !dbg !16699
  %23 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16699
  %rx28 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %23, i32 0, i32 20, !dbg !16699
  %nr_ents29 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx28, i32 0, i32 2, !dbg !16699
  %24 = load i32, i32* %nr_ents29, align 8, !dbg !16699
  %sub30 = sub i32 %24, 1, !dbg !16699
  %and31 = and i32 %22, %sub30, !dbg !16699
  %idxprom32 = zext i32 %and31 to i64, !dbg !16699
  %arrayidx33 = getelementptr [1 x %union.xen_netif_rx_sring_entry], [1 x %union.xen_netif_rx_sring_entry]* %ring25, i64 0, i64 %idxprom32, !dbg !16699
  %req34 = bitcast %union.xen_netif_rx_sring_entry* %arrayidx33 to %struct.xen_netif_rx_request*, !dbg !16699
  %gref = getelementptr inbounds %struct.xen_netif_rx_request, %struct.xen_netif_rx_request* %req34, i32 0, i32 2, !dbg !16700
  store i32 %18, i32* %gref, align 4, !dbg !16701
  %25 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16702
  %rx35 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %25, i32 0, i32 20, !dbg !16703
  %req_prod_pvt36 = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx35, i32 0, i32 0, !dbg !16704
  %26 = load i32, i32* %req_prod_pvt36, align 8, !dbg !16705
  %inc = add i32 %26, 1, !dbg !16705
  store i32 %inc, i32* %req_prod_pvt36, align 8, !dbg !16705
  ret void, !dbg !16706
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_run_xdp(%struct.netfront_queue* %queue, %struct.page* %pdata, %struct.xen_netif_rx_response* %rx, %struct.bpf_prog* %prog, %struct.xdp_buff* %xdp, i8* %need_xdp_flush) #3 !dbg !16707 {
entry:
  %ctx.addr.i17.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ctx.addr.i17.i, metadata !16711, metadata !DIExpression()), !dbg !16715
  %insnsi.addr.i18.i = alloca %struct.bpf_insn*, align 8
  call void @llvm.dbg.declare(metadata %struct.bpf_insn** %insnsi.addr.i18.i, metadata !16726, metadata !DIExpression()), !dbg !16727
  %bpf_func.addr.i19.i = alloca i32 (i8*, %struct.bpf_insn*)*, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, %struct.bpf_insn*)** %bpf_func.addr.i19.i, metadata !16728, metadata !DIExpression()), !dbg !16729
  %ctx.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ctx.addr.i.i, metadata !16711, metadata !DIExpression()), !dbg !16730
  %insnsi.addr.i.i = alloca %struct.bpf_insn*, align 8
  call void @llvm.dbg.declare(metadata %struct.bpf_insn** %insnsi.addr.i.i, metadata !16726, metadata !DIExpression()), !dbg !16733
  %bpf_func.addr.i.i = alloca i32 (i8*, %struct.bpf_insn*)*, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, %struct.bpf_insn*)** %bpf_func.addr.i.i, metadata !16728, metadata !DIExpression()), !dbg !16734
  %prog.addr.i = alloca %struct.bpf_prog*, align 8
  call void @llvm.dbg.declare(metadata %struct.bpf_prog** %prog.addr.i, metadata !16735, metadata !DIExpression()), !dbg !16736
  %xdp.addr.i31 = alloca %struct.xdp_buff*, align 8
  call void @llvm.dbg.declare(metadata %struct.xdp_buff** %xdp.addr.i31, metadata !16737, metadata !DIExpression()), !dbg !16738
  %__ret.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i, metadata !16739, metadata !DIExpression()), !dbg !16740
  %tmp.i = alloca i32, align 4
  %__stats.i = alloca %struct.bpf_prog_stats*, align 8
  call void @llvm.dbg.declare(metadata %struct.bpf_prog_stats** %__stats.i, metadata !16741, metadata !DIExpression()), !dbg !16742
  %__start.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__start.i, metadata !16743, metadata !DIExpression()), !dbg !16742
  %tmp6.i = alloca %struct.bpf_prog_stats*, align 8
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !16744, metadata !DIExpression()), !dbg !16748
  %tmp9.i = alloca %struct.bpf_prog_stats*, align 8
  %tmp16.i = alloca i32, align 4
  %xdp.addr.i = alloca %struct.xdp_buff*, align 8
  call void @llvm.dbg.declare(metadata %struct.xdp_buff** %xdp.addr.i, metadata !16749, metadata !DIExpression()), !dbg !16753
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !16755, metadata !DIExpression()), !dbg !16761
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %pdata.addr = alloca %struct.page*, align 8
  %rx.addr = alloca %struct.xen_netif_rx_response*, align 8
  %prog.addr = alloca %struct.bpf_prog*, align 8
  %xdp.addr = alloca %struct.xdp_buff*, align 8
  %need_xdp_flush.addr = alloca i8*, align 8
  %xdpf = alloca %struct.xdp_frame*, align 8
  %len = alloca i32, align 4
  %act = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !16763, metadata !DIExpression()), !dbg !16764
  store %struct.page* %pdata, %struct.page** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %pdata.addr, metadata !16765, metadata !DIExpression()), !dbg !16766
  store %struct.xen_netif_rx_response* %rx, %struct.xen_netif_rx_response** %rx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xen_netif_rx_response** %rx.addr, metadata !16767, metadata !DIExpression()), !dbg !16768
  store %struct.bpf_prog* %prog, %struct.bpf_prog** %prog.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bpf_prog** %prog.addr, metadata !16769, metadata !DIExpression()), !dbg !16770
  store %struct.xdp_buff* %xdp, %struct.xdp_buff** %xdp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xdp_buff** %xdp.addr, metadata !16771, metadata !DIExpression()), !dbg !16772
  store i8* %need_xdp_flush, i8** %need_xdp_flush.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %need_xdp_flush.addr, metadata !16773, metadata !DIExpression()), !dbg !16774
  call void @llvm.dbg.declare(metadata %struct.xdp_frame** %xdpf, metadata !16775, metadata !DIExpression()), !dbg !16776
  call void @llvm.dbg.declare(metadata i32* %len, metadata !16777, metadata !DIExpression()), !dbg !16778
  %0 = load %struct.xen_netif_rx_response*, %struct.xen_netif_rx_response** %rx.addr, align 8, !dbg !16779
  %status = getelementptr inbounds %struct.xen_netif_rx_response, %struct.xen_netif_rx_response* %0, i32 0, i32 3, !dbg !16780
  %1 = load i16, i16* %status, align 2, !dbg !16780
  %conv = sext i16 %1 to i32, !dbg !16779
  store i32 %conv, i32* %len, align 4, !dbg !16778
  call void @llvm.dbg.declare(metadata i32* %act, metadata !16781, metadata !DIExpression()), !dbg !16782
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16783, metadata !DIExpression()), !dbg !16784
  %2 = load %struct.page*, %struct.page** %pdata.addr, align 8, !dbg !16785
  store %struct.page* %2, %struct.page** %page.addr.i, align 8
  %3 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !16786
  %4 = load i64, i64* @vmemmap_base, align 8, !dbg !16786
  %5 = inttoptr i64 %4 to %struct.page*, !dbg !16786
  %sub.ptr.lhs.cast.i = ptrtoint %struct.page* %3 to i64, !dbg !16786
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %4, !dbg !16786
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 64, !dbg !16786
  %shl.i = shl i64 %sub.ptr.div.i, 12, !dbg !16786
  %6 = load i64, i64* @page_offset_base, align 8, !dbg !16786
  %add.i = add i64 %shl.i, %6, !dbg !16786
  %7 = inttoptr i64 %add.i to i8*, !dbg !16786
  %8 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16787
  %data_hard_start = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %8, i32 0, i32 3, !dbg !16788
  store i8* %7, i8** %data_hard_start, align 8, !dbg !16789
  %9 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16790
  %data_hard_start1 = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %9, i32 0, i32 3, !dbg !16791
  %10 = load i8*, i8** %data_hard_start1, align 8, !dbg !16791
  %add.ptr = getelementptr i8, i8* %10, i64 256, !dbg !16792
  %11 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16793
  %data = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %11, i32 0, i32 0, !dbg !16794
  store i8* %add.ptr, i8** %data, align 8, !dbg !16795
  %12 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16796
  store %struct.xdp_buff* %12, %struct.xdp_buff** %xdp.addr.i, align 8
  %13 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr.i, align 8, !dbg !16797
  %data.i = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %13, i32 0, i32 0, !dbg !16798
  %14 = load i8*, i8** %data.i, align 8, !dbg !16798
  %add.ptr.i = getelementptr i8, i8* %14, i64 1, !dbg !16799
  %15 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr.i, align 8, !dbg !16800
  %data_meta.i = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %15, i32 0, i32 2, !dbg !16801
  store i8* %add.ptr.i, i8** %data_meta.i, align 8, !dbg !16802
  %16 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16803
  %data2 = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %16, i32 0, i32 0, !dbg !16804
  %17 = load i8*, i8** %data2, align 8, !dbg !16804
  %18 = load i32, i32* %len, align 4, !dbg !16805
  %idx.ext = zext i32 %18 to i64, !dbg !16806
  %add.ptr3 = getelementptr i8, i8* %17, i64 %idx.ext, !dbg !16806
  %19 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16807
  %data_end = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %19, i32 0, i32 1, !dbg !16808
  store i8* %add.ptr3, i8** %data_end, align 8, !dbg !16809
  %20 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16810
  %xdp_rxq = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %20, i32 0, i32 27, !dbg !16811
  %21 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16812
  %rxq = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %21, i32 0, i32 4, !dbg !16813
  store %struct.xdp_rxq_info* %xdp_rxq, %struct.xdp_rxq_info** %rxq, align 8, !dbg !16814
  %22 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16815
  %frame_sz = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %22, i32 0, i32 6, !dbg !16816
  store i32 3840, i32* %frame_sz, align 8, !dbg !16817
  %23 = load %struct.bpf_prog*, %struct.bpf_prog** %prog.addr, align 8, !dbg !16818
  %24 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16819
  store %struct.bpf_prog* %23, %struct.bpf_prog** %prog.addr.i, align 8
  store %struct.xdp_buff* %24, %struct.xdp_buff** %xdp.addr.i31, align 8
  %call.i = call i32 @static_key_count(%struct.static_key* getelementptr inbounds (%struct.static_key_false, %struct.static_key_false* @bpf_stats_enabled_key, i32 0, i32 0)) #14, !dbg !16820
  %cmp.i = icmp sgt i32 %call.i, 0, !dbg !16820
  %conv.i = zext i1 %cmp.i to i32, !dbg !16820
  store i32 %conv.i, i32* %tmp.i, align 4, !dbg !16822
  %25 = load i32, i32* %tmp.i, align 4, !dbg !16820
  %tobool.i = icmp ne i32 %25, 0, !dbg !16824
  %lnot.i = xor i1 %tobool.i, true, !dbg !16824
  %lnot.ext.i = zext i1 %tobool.i to i32, !dbg !16824
  %conv2.i = sext i32 %lnot.ext.i to i64, !dbg !16824
  br i1 %tobool.i, label %if.then.i, label %if.else.i, !dbg !16740

if.then.i:                                        ; preds = %entry
  %call4.i = call i64 @sched_clock() #14, !dbg !16742
  store i64 %call4.i, i64* %__start.i, align 8, !dbg !16742
  %26 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr.i31, align 8, !dbg !16742
  %27 = bitcast %struct.xdp_buff* %26 to i8*, !dbg !16742
  %28 = load %struct.bpf_prog*, %struct.bpf_prog** %prog.addr.i, align 8, !dbg !16742
  %insnsi.i = getelementptr inbounds %struct.bpf_prog, %struct.bpf_prog* %28, i32 0, i32 11, !dbg !16742
  %arraydecay.i = getelementptr inbounds [0 x %struct.bpf_insn], [0 x %struct.bpf_insn]* %insnsi.i, i64 0, i64 0, !dbg !16742
  %29 = load %struct.bpf_prog*, %struct.bpf_prog** %prog.addr.i, align 8, !dbg !16742
  %bpf_func.i = getelementptr inbounds %struct.bpf_prog, %struct.bpf_prog* %29, i32 0, i32 9, !dbg !16742
  %30 = load i32 (i8*, %struct.bpf_insn*)*, i32 (i8*, %struct.bpf_insn*)** %bpf_func.i, align 8, !dbg !16742
  store i8* %27, i8** %ctx.addr.i.i, align 8
  store %struct.bpf_insn* %arraydecay.i, %struct.bpf_insn** %insnsi.addr.i.i, align 8
  store i32 (i8*, %struct.bpf_insn*)* %30, i32 (i8*, %struct.bpf_insn*)** %bpf_func.addr.i.i, align 8
  %31 = load i32 (i8*, %struct.bpf_insn*)*, i32 (i8*, %struct.bpf_insn*)** %bpf_func.addr.i.i, align 8, !dbg !16825
  %32 = load i8*, i8** %ctx.addr.i.i, align 8, !dbg !16826
  %33 = load %struct.bpf_insn*, %struct.bpf_insn** %insnsi.addr.i.i, align 8, !dbg !16827
  %call.i.i = call i32 %31(i8* %32, %struct.bpf_insn* %33) #14, !dbg !16825
  store i32 %call.i.i, i32* %__ret.i, align 4, !dbg !16742
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !16748
  %34 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !16748
  %35 = load %struct.bpf_prog*, %struct.bpf_prog** %prog.addr.i, align 8, !dbg !16828
  %aux.i = getelementptr inbounds %struct.bpf_prog, %struct.bpf_prog* %35, i32 0, i32 7, !dbg !16828
  %36 = load %struct.bpf_prog_aux*, %struct.bpf_prog_aux** %aux.i, align 8, !dbg !16828
  %stats.i = getelementptr inbounds %struct.bpf_prog_aux, %struct.bpf_prog_aux* %36, i32 0, i32 53, !dbg !16828
  %37 = load %struct.bpf_prog_stats*, %struct.bpf_prog_stats** %stats.i, align 8, !dbg !16828
  store %struct.bpf_prog_stats* %37, %struct.bpf_prog_stats** %tmp9.i, align 8, !dbg !16748
  %38 = load %struct.bpf_prog_stats*, %struct.bpf_prog_stats** %tmp9.i, align 8, !dbg !16828
  store %struct.bpf_prog_stats* %38, %struct.bpf_prog_stats** %tmp6.i, align 8, !dbg !16829
  %39 = load %struct.bpf_prog_stats*, %struct.bpf_prog_stats** %tmp6.i, align 8, !dbg !16829
  store %struct.bpf_prog_stats* %39, %struct.bpf_prog_stats** %__stats.i, align 8, !dbg !16742
  %40 = load %struct.bpf_prog_stats*, %struct.bpf_prog_stats** %__stats.i, align 8, !dbg !16742
  %syncp.i = getelementptr inbounds %struct.bpf_prog_stats, %struct.bpf_prog_stats* %40, i32 0, i32 2, !dbg !16742
  call void @u64_stats_update_begin(%struct.u64_stats_sync* %syncp.i) #14, !dbg !16742
  %41 = load %struct.bpf_prog_stats*, %struct.bpf_prog_stats** %__stats.i, align 8, !dbg !16742
  %cnt.i = getelementptr inbounds %struct.bpf_prog_stats, %struct.bpf_prog_stats* %41, i32 0, i32 0, !dbg !16742
  %42 = load i64, i64* %cnt.i, align 16, !dbg !16742
  %inc.i = add i64 %42, 1, !dbg !16742
  store i64 %inc.i, i64* %cnt.i, align 16, !dbg !16742
  %call10.i = call i64 @sched_clock() #14, !dbg !16742
  %43 = load i64, i64* %__start.i, align 8, !dbg !16742
  %sub.i = sub i64 %call10.i, %43, !dbg !16742
  %44 = load %struct.bpf_prog_stats*, %struct.bpf_prog_stats** %__stats.i, align 8, !dbg !16742
  %nsecs.i = getelementptr inbounds %struct.bpf_prog_stats, %struct.bpf_prog_stats* %44, i32 0, i32 1, !dbg !16742
  %45 = load i64, i64* %nsecs.i, align 8, !dbg !16742
  %add.i32 = add i64 %45, %sub.i, !dbg !16742
  store i64 %add.i32, i64* %nsecs.i, align 8, !dbg !16742
  %46 = load %struct.bpf_prog_stats*, %struct.bpf_prog_stats** %__stats.i, align 8, !dbg !16742
  %syncp11.i = getelementptr inbounds %struct.bpf_prog_stats, %struct.bpf_prog_stats* %46, i32 0, i32 2, !dbg !16742
  call void @u64_stats_update_end(%struct.u64_stats_sync* %syncp11.i) #14, !dbg !16742
  br label %bpf_prog_run_xdp.exit, !dbg !16742

if.else.i:                                        ; preds = %entry
  %47 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr.i31, align 8, !dbg !16830
  %48 = bitcast %struct.xdp_buff* %47 to i8*, !dbg !16830
  %49 = load %struct.bpf_prog*, %struct.bpf_prog** %prog.addr.i, align 8, !dbg !16830
  %insnsi12.i = getelementptr inbounds %struct.bpf_prog, %struct.bpf_prog* %49, i32 0, i32 11, !dbg !16830
  %arraydecay13.i = getelementptr inbounds [0 x %struct.bpf_insn], [0 x %struct.bpf_insn]* %insnsi12.i, i64 0, i64 0, !dbg !16830
  %50 = load %struct.bpf_prog*, %struct.bpf_prog** %prog.addr.i, align 8, !dbg !16830
  %bpf_func14.i = getelementptr inbounds %struct.bpf_prog, %struct.bpf_prog* %50, i32 0, i32 9, !dbg !16830
  %51 = load i32 (i8*, %struct.bpf_insn*)*, i32 (i8*, %struct.bpf_insn*)** %bpf_func14.i, align 8, !dbg !16830
  store i8* %48, i8** %ctx.addr.i17.i, align 8
  store %struct.bpf_insn* %arraydecay13.i, %struct.bpf_insn** %insnsi.addr.i18.i, align 8
  store i32 (i8*, %struct.bpf_insn*)* %51, i32 (i8*, %struct.bpf_insn*)** %bpf_func.addr.i19.i, align 8
  %52 = load i32 (i8*, %struct.bpf_insn*)*, i32 (i8*, %struct.bpf_insn*)** %bpf_func.addr.i19.i, align 8, !dbg !16831
  %53 = load i8*, i8** %ctx.addr.i17.i, align 8, !dbg !16832
  %54 = load %struct.bpf_insn*, %struct.bpf_insn** %insnsi.addr.i18.i, align 8, !dbg !16833
  %call.i20.i = call i32 %52(i8* %53, %struct.bpf_insn* %54) #14, !dbg !16831
  store i32 %call.i20.i, i32* %__ret.i, align 4, !dbg !16830
  br label %bpf_prog_run_xdp.exit

bpf_prog_run_xdp.exit:                            ; preds = %if.then.i, %if.else.i
  %55 = load i32, i32* %__ret.i, align 4, !dbg !16740
  store i32 %55, i32* %tmp16.i, align 4, !dbg !16824
  %56 = load i32, i32* %tmp16.i, align 4, !dbg !16740
  store i32 %56, i32* %act, align 4, !dbg !16834
  %57 = load i32, i32* %act, align 4, !dbg !16835
  switch i32 %57, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb12
    i32 2, label %sw.bb27
    i32 1, label %sw.bb27
    i32 0, label %sw.bb28
  ], !dbg !16836

sw.bb:                                            ; preds = %bpf_prog_run_xdp.exit
  %58 = load %struct.page*, %struct.page** %pdata.addr, align 8, !dbg !16837
  call void @get_page(%struct.page* %58) #12, !dbg !16839
  %59 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16840
  %call5 = call %struct.xdp_frame* @xdp_convert_buff_to_frame(%struct.xdp_buff* %59) #12, !dbg !16841
  store %struct.xdp_frame* %call5, %struct.xdp_frame** %xdpf, align 8, !dbg !16842
  %60 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16843
  %info = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %60, i32 0, i32 2, !dbg !16844
  %61 = load %struct.netfront_info*, %struct.netfront_info** %info, align 32, !dbg !16844
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %61, i32 0, i32 1, !dbg !16845
  %62 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !16845
  %call6 = call i32 @xennet_xdp_xmit(%struct.net_device* %62, i32 1, %struct.xdp_frame** %xdpf, i32 0) #12, !dbg !16846
  store i32 %call6, i32* %err, align 4, !dbg !16847
  %63 = load i32, i32* %err, align 4, !dbg !16848
  %cmp = icmp slt i32 %63, 0, !dbg !16848
  %lnot = xor i1 %cmp, true, !dbg !16848
  %lnot8 = xor i1 %lnot, true, !dbg !16848
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !16848
  %conv9 = sext i32 %lnot.ext to i64, !dbg !16848
  %tobool = icmp ne i64 %conv9, 0, !dbg !16848
  br i1 %tobool, label %if.then, label %if.end, !dbg !16850

if.then:                                          ; preds = %sw.bb
  %64 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16851
  %info10 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %64, i32 0, i32 2, !dbg !16852
  %65 = load %struct.netfront_info*, %struct.netfront_info** %info10, align 32, !dbg !16852
  %netdev11 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %65, i32 0, i32 1, !dbg !16853
  %66 = load %struct.net_device*, %struct.net_device** %netdev11, align 8, !dbg !16853
  %67 = load %struct.bpf_prog*, %struct.bpf_prog** %prog.addr, align 8, !dbg !16854
  %68 = load i32, i32* %act, align 4, !dbg !16855
  call void @trace_xdp_exception(%struct.net_device* %66, %struct.bpf_prog* %67, i32 %68) #12, !dbg !16856
  br label %if.end, !dbg !16856

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !16857

sw.bb12:                                          ; preds = %bpf_prog_run_xdp.exit
  %69 = load %struct.page*, %struct.page** %pdata.addr, align 8, !dbg !16858
  call void @get_page(%struct.page* %69) #12, !dbg !16859
  %70 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16860
  %info13 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %70, i32 0, i32 2, !dbg !16861
  %71 = load %struct.netfront_info*, %struct.netfront_info** %info13, align 32, !dbg !16861
  %netdev14 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %71, i32 0, i32 1, !dbg !16862
  %72 = load %struct.net_device*, %struct.net_device** %netdev14, align 8, !dbg !16862
  %73 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16863
  %74 = load %struct.bpf_prog*, %struct.bpf_prog** %prog.addr, align 8, !dbg !16864
  %call15 = call i32 @xdp_do_redirect(%struct.net_device* %72, %struct.xdp_buff* %73, %struct.bpf_prog* %74) #12, !dbg !16865
  store i32 %call15, i32* %err, align 4, !dbg !16866
  %75 = load i8*, i8** %need_xdp_flush.addr, align 8, !dbg !16867
  store i8 1, i8* %75, align 1, !dbg !16868
  %76 = load i32, i32* %err, align 4, !dbg !16869
  %tobool16 = icmp ne i32 %76, 0, !dbg !16869
  %lnot17 = xor i1 %tobool16, true, !dbg !16869
  %lnot19 = xor i1 %lnot17, true, !dbg !16869
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !16869
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !16869
  %tobool22 = icmp ne i64 %conv21, 0, !dbg !16869
  br i1 %tobool22, label %if.then23, label %if.end26, !dbg !16871

if.then23:                                        ; preds = %sw.bb12
  %77 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16872
  %info24 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %77, i32 0, i32 2, !dbg !16873
  %78 = load %struct.netfront_info*, %struct.netfront_info** %info24, align 32, !dbg !16873
  %netdev25 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %78, i32 0, i32 1, !dbg !16874
  %79 = load %struct.net_device*, %struct.net_device** %netdev25, align 8, !dbg !16874
  %80 = load %struct.bpf_prog*, %struct.bpf_prog** %prog.addr, align 8, !dbg !16875
  %81 = load i32, i32* %act, align 4, !dbg !16876
  call void @trace_xdp_exception(%struct.net_device* %79, %struct.bpf_prog* %80, i32 %81) #12, !dbg !16877
  br label %if.end26, !dbg !16877

if.end26:                                         ; preds = %if.then23, %sw.bb12
  br label %sw.epilog, !dbg !16878

sw.bb27:                                          ; preds = %bpf_prog_run_xdp.exit, %bpf_prog_run_xdp.exit
  br label %sw.epilog, !dbg !16879

sw.bb28:                                          ; preds = %bpf_prog_run_xdp.exit
  %82 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !16880
  %info29 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %82, i32 0, i32 2, !dbg !16881
  %83 = load %struct.netfront_info*, %struct.netfront_info** %info29, align 32, !dbg !16881
  %netdev30 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %83, i32 0, i32 1, !dbg !16882
  %84 = load %struct.net_device*, %struct.net_device** %netdev30, align 8, !dbg !16882
  %85 = load %struct.bpf_prog*, %struct.bpf_prog** %prog.addr, align 8, !dbg !16883
  %86 = load i32, i32* %act, align 4, !dbg !16884
  call void @trace_xdp_exception(%struct.net_device* %84, %struct.bpf_prog* %85, i32 %86) #12, !dbg !16885
  br label %sw.epilog, !dbg !16886

sw.default:                                       ; preds = %bpf_prog_run_xdp.exit
  %87 = load i32, i32* %act, align 4, !dbg !16887
  call void @bpf_warn_invalid_xdp_action(i32 %87) #12, !dbg !16888
  br label %sw.epilog, !dbg !16889

sw.epilog:                                        ; preds = %sw.default, %sw.bb28, %sw.bb27, %if.end26, %if.end
  %88 = load i32, i32* %act, align 4, !dbg !16890
  ret i32 %88, !dbg !16891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rcu_read_unlock() #3 !dbg !16892 {
entry:
  br label %do.body, !dbg !16893

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16894

do.end:                                           ; preds = %do.body
  call void @__rcu_read_unlock() #12, !dbg !16896
  br label %do.body1, !dbg !16897

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !16898

do.end2:                                          ; preds = %do.body1
  ret void, !dbg !16900
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_lock() #3 !dbg !16901 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16902, !srcloc !16903
  ret void, !dbg !16904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @get_page(%struct.page* %page) #3 !dbg !16905 {
entry:
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !16906, metadata !DIExpression()), !dbg !16907
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16908
  %call = call %struct.page* @compound_head(%struct.page* %0) #12, !dbg !16909
  store %struct.page* %call, %struct.page** %page.addr, align 8, !dbg !16910
  %1 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16911
  call void @page_ref_inc(%struct.page* %1) #12, !dbg !16912
  ret void, !dbg !16913
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.xdp_frame* @xdp_convert_buff_to_frame(%struct.xdp_buff* %xdp) #3 !dbg !16914 {
entry:
  %retval = alloca %struct.xdp_frame*, align 8
  %xdp.addr = alloca %struct.xdp_buff*, align 8
  %xdp_frame = alloca %struct.xdp_frame*, align 8
  store %struct.xdp_buff* %xdp, %struct.xdp_buff** %xdp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xdp_buff** %xdp.addr, metadata !16917, metadata !DIExpression()), !dbg !16918
  call void @llvm.dbg.declare(metadata %struct.xdp_frame** %xdp_frame, metadata !16919, metadata !DIExpression()), !dbg !16920
  %0 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16921
  %rxq = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %0, i32 0, i32 4, !dbg !16923
  %1 = load %struct.xdp_rxq_info*, %struct.xdp_rxq_info** %rxq, align 8, !dbg !16923
  %mem = getelementptr inbounds %struct.xdp_rxq_info, %struct.xdp_rxq_info* %1, i32 0, i32 3, !dbg !16924
  %type = getelementptr inbounds %struct.xdp_mem_info, %struct.xdp_mem_info* %mem, i32 0, i32 0, !dbg !16925
  %2 = load i32, i32* %type, align 16, !dbg !16925
  %cmp = icmp eq i32 %2, 3, !dbg !16926
  br i1 %cmp, label %if.then, label %if.end, !dbg !16927

if.then:                                          ; preds = %entry
  %3 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16928
  %call = call %struct.xdp_frame* @xdp_convert_zc_to_xdp_frame(%struct.xdp_buff* %3) #12, !dbg !16929
  store %struct.xdp_frame* %call, %struct.xdp_frame** %retval, align 8, !dbg !16930
  br label %return, !dbg !16930

if.end:                                           ; preds = %entry
  %4 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16931
  %data_hard_start = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %4, i32 0, i32 3, !dbg !16932
  %5 = load i8*, i8** %data_hard_start, align 8, !dbg !16932
  %6 = bitcast i8* %5 to %struct.xdp_frame*, !dbg !16931
  store %struct.xdp_frame* %6, %struct.xdp_frame** %xdp_frame, align 8, !dbg !16933
  %7 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16934
  %8 = load %struct.xdp_frame*, %struct.xdp_frame** %xdp_frame, align 8, !dbg !16934
  %call1 = call i32 @xdp_update_frame_from_buff(%struct.xdp_buff* %7, %struct.xdp_frame* %8) #12, !dbg !16934
  %cmp2 = icmp slt i32 %call1, 0, !dbg !16934
  %lnot = xor i1 %cmp2, true, !dbg !16934
  %lnot3 = xor i1 %lnot, true, !dbg !16934
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !16934
  %conv = sext i32 %lnot.ext to i64, !dbg !16934
  %tobool = icmp ne i64 %conv, 0, !dbg !16934
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !16936

if.then4:                                         ; preds = %if.end
  store %struct.xdp_frame* null, %struct.xdp_frame** %retval, align 8, !dbg !16937
  br label %return, !dbg !16937

if.end5:                                          ; preds = %if.end
  %9 = load %struct.xdp_frame*, %struct.xdp_frame** %xdp_frame, align 8, !dbg !16938
  %mem6 = getelementptr inbounds %struct.xdp_frame, %struct.xdp_frame* %9, i32 0, i32 4, !dbg !16939
  %10 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !16940
  %rxq7 = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %10, i32 0, i32 4, !dbg !16941
  %11 = load %struct.xdp_rxq_info*, %struct.xdp_rxq_info** %rxq7, align 8, !dbg !16941
  %mem8 = getelementptr inbounds %struct.xdp_rxq_info, %struct.xdp_rxq_info* %11, i32 0, i32 3, !dbg !16942
  %12 = bitcast %struct.xdp_mem_info* %mem6 to i8*, !dbg !16942
  %13 = bitcast %struct.xdp_mem_info* %mem8 to i8*, !dbg !16942
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 16 %13, i64 8, i1 false), !dbg !16942
  %14 = load %struct.xdp_frame*, %struct.xdp_frame** %xdp_frame, align 8, !dbg !16943
  store %struct.xdp_frame* %14, %struct.xdp_frame** %retval, align 8, !dbg !16944
  br label %return, !dbg !16944

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %15 = load %struct.xdp_frame*, %struct.xdp_frame** %retval, align 8, !dbg !16945
  ret %struct.xdp_frame* %15, !dbg !16945
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xdp_exception(%struct.net_device* %dev, %struct.bpf_prog* %xdp, i32 %act) #3 !dbg !16946 {
entry:
  %dev.addr = alloca %struct.net_device*, align 8
  %xdp.addr = alloca %struct.bpf_prog*, align 8
  %act.addr = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !16950, metadata !DIExpression()), !dbg !16951
  store %struct.bpf_prog* %xdp, %struct.bpf_prog** %xdp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bpf_prog** %xdp.addr, metadata !16952, metadata !DIExpression()), !dbg !16951
  store i32 %act, i32* %act.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %act.addr, metadata !16953, metadata !DIExpression()), !dbg !16951
  ret void, !dbg !16951
}

; Function Attrs: noredzone
declare dso_local i32 @xdp_do_redirect(%struct.net_device*, %struct.xdp_buff*, %struct.bpf_prog*) #1

; Function Attrs: noredzone
declare dso_local void @bpf_warn_invalid_xdp_action(i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @static_key_count(%struct.static_key* %key) #3 !dbg !16954 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !13811, metadata !DIExpression()), !dbg !16957
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !12165, metadata !DIExpression()), !dbg !16960
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12175, metadata !DIExpression()), !dbg !16962
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !13826, metadata !DIExpression()), !dbg !16963
  %key.addr = alloca %struct.static_key*, align 8
  store %struct.static_key* %key, %struct.static_key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.static_key** %key.addr, metadata !16964, metadata !DIExpression()), !dbg !16965
  %0 = load %struct.static_key*, %struct.static_key** %key.addr, align 8, !dbg !16966
  %enabled = getelementptr inbounds %struct.static_key, %struct.static_key* %0, i32 0, i32 0, !dbg !16967
  store %struct.atomic_t* %enabled, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16968
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !16968
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16969
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !16970
  %conv.i.i = trunc i64 %4 to i32, !dbg !16970
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #14, !dbg !16971
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16972
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !16972
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #14, !dbg !16972
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16973
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !16974
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !16974
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !16974
  ret i32 %9, !dbg !16975
}

; Function Attrs: noredzone
declare dso_local i64 @sched_clock() #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @compound_head(%struct.page* %page) #3 !dbg !16976 {
entry:
  %retval = alloca %struct.page*, align 8
  %page.addr = alloca %struct.page*, align 8
  %head = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !16980, metadata !DIExpression()), !dbg !16981
  call void @llvm.dbg.declare(metadata i64* %head, metadata !16982, metadata !DIExpression()), !dbg !16983
  br label %do.body, !dbg !16984

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16986

do.end:                                           ; preds = %do.body
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16984
  %1 = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 1, !dbg !16984
  %2 = bitcast %union.anon.3* %1 to %struct.anon.15*, !dbg !16984
  %compound_head = getelementptr inbounds %struct.anon.15, %struct.anon.15* %2, i32 0, i32 0, !dbg !16984
  %3 = load volatile i64, i64* %compound_head, align 8, !dbg !16984
  store i64 %3, i64* %tmp, align 8, !dbg !16986
  %4 = load i64, i64* %tmp, align 8, !dbg !16984
  store i64 %4, i64* %head, align 8, !dbg !16983
  %5 = load i64, i64* %head, align 8, !dbg !16988
  %and = and i64 %5, 1, !dbg !16988
  %tobool = icmp ne i64 %and, 0, !dbg !16988
  %lnot = xor i1 %tobool, true, !dbg !16988
  %lnot1 = xor i1 %lnot, true, !dbg !16988
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !16988
  %conv = sext i32 %lnot.ext to i64, !dbg !16988
  %tobool2 = icmp ne i64 %conv, 0, !dbg !16988
  br i1 %tobool2, label %if.then, label %if.end, !dbg !16990

if.then:                                          ; preds = %do.end
  %6 = load i64, i64* %head, align 8, !dbg !16991
  %sub = sub i64 %6, 1, !dbg !16992
  %7 = inttoptr i64 %sub to %struct.page*, !dbg !16993
  store %struct.page* %7, %struct.page** %retval, align 8, !dbg !16994
  br label %return, !dbg !16994

if.end:                                           ; preds = %do.end
  %8 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !16995
  store %struct.page* %8, %struct.page** %retval, align 8, !dbg !16996
  br label %return, !dbg !16996

return:                                           ; preds = %if.end, %if.then
  %9 = load %struct.page*, %struct.page** %retval, align 8, !dbg !16997
  ret %struct.page* %9, !dbg !16997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @page_ref_inc(%struct.page* %page) #3 !dbg !16998 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !17000, metadata !DIExpression()), !dbg !17004
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !13310, metadata !DIExpression()), !dbg !17008
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !13314, metadata !DIExpression()), !dbg !17010
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !17011, metadata !DIExpression()), !dbg !17012
  %page.addr = alloca %struct.page*, align 8
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !17013, metadata !DIExpression()), !dbg !17014
  %0 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !17015
  %_refcount = getelementptr inbounds %struct.page, %struct.page* %0, i32 0, i32 3, !dbg !17016
  store %struct.atomic_t* %_refcount, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !17017
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !17017
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !17018
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !17019
  %conv.i.i = trunc i64 %4 to i32, !dbg !17019
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #14, !dbg !17020
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !17021
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !17021
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !17021
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !17022
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !17023
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !17024
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #8, !dbg !17025, !srcloc !17026
  ret void, !dbg !17027
}

; Function Attrs: noredzone
declare dso_local %struct.xdp_frame* @xdp_convert_zc_to_xdp_frame(%struct.xdp_buff*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xdp_update_frame_from_buff(%struct.xdp_buff* %xdp, %struct.xdp_frame* %xdp_frame) #3 !dbg !17028 {
entry:
  %retval = alloca i32, align 4
  %xdp.addr = alloca %struct.xdp_buff*, align 8
  %xdp_frame.addr = alloca %struct.xdp_frame*, align 8
  %metasize = alloca i32, align 4
  %headroom = alloca i32, align 4
  store %struct.xdp_buff* %xdp, %struct.xdp_buff** %xdp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xdp_buff** %xdp.addr, metadata !17031, metadata !DIExpression()), !dbg !17032
  store %struct.xdp_frame* %xdp_frame, %struct.xdp_frame** %xdp_frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xdp_frame** %xdp_frame.addr, metadata !17033, metadata !DIExpression()), !dbg !17034
  call void @llvm.dbg.declare(metadata i32* %metasize, metadata !17035, metadata !DIExpression()), !dbg !17036
  call void @llvm.dbg.declare(metadata i32* %headroom, metadata !17037, metadata !DIExpression()), !dbg !17038
  %0 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !17039
  %data = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %0, i32 0, i32 0, !dbg !17040
  %1 = load i8*, i8** %data, align 8, !dbg !17040
  %2 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !17041
  %data_hard_start = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %2, i32 0, i32 3, !dbg !17042
  %3 = load i8*, i8** %data_hard_start, align 8, !dbg !17042
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !17043
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !17043
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17043
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !17039
  store i32 %conv, i32* %headroom, align 4, !dbg !17044
  %4 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !17045
  %data1 = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %4, i32 0, i32 0, !dbg !17046
  %5 = load i8*, i8** %data1, align 8, !dbg !17046
  %6 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !17047
  %data_meta = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %6, i32 0, i32 2, !dbg !17048
  %7 = load i8*, i8** %data_meta, align 8, !dbg !17048
  %sub.ptr.lhs.cast2 = ptrtoint i8* %5 to i64, !dbg !17049
  %sub.ptr.rhs.cast3 = ptrtoint i8* %7 to i64, !dbg !17049
  %sub.ptr.sub4 = sub i64 %sub.ptr.lhs.cast2, %sub.ptr.rhs.cast3, !dbg !17049
  %conv5 = trunc i64 %sub.ptr.sub4 to i32, !dbg !17045
  store i32 %conv5, i32* %metasize, align 4, !dbg !17050
  %8 = load i32, i32* %metasize, align 4, !dbg !17051
  %cmp = icmp sgt i32 %8, 0, !dbg !17052
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !17051

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %metasize, align 4, !dbg !17053
  br label %cond.end, !dbg !17051

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17051

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ 0, %cond.false ], !dbg !17051
  store i32 %cond, i32* %metasize, align 4, !dbg !17054
  %10 = load i32, i32* %headroom, align 4, !dbg !17055
  %11 = load i32, i32* %metasize, align 4, !dbg !17055
  %sub = sub i32 %10, %11, !dbg !17055
  %conv7 = sext i32 %sub to i64, !dbg !17055
  %cmp8 = icmp ult i64 %conv7, 32, !dbg !17055
  %lnot = xor i1 %cmp8, true, !dbg !17055
  %lnot10 = xor i1 %lnot, true, !dbg !17055
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !17055
  %conv11 = sext i32 %lnot.ext to i64, !dbg !17055
  %tobool = icmp ne i64 %conv11, 0, !dbg !17055
  br i1 %tobool, label %if.then, label %if.end, !dbg !17057

if.then:                                          ; preds = %cond.end
  store i32 -28, i32* %retval, align 4, !dbg !17058
  br label %return, !dbg !17058

if.end:                                           ; preds = %cond.end
  %12 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !17059
  %data_end = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %12, i32 0, i32 1, !dbg !17059
  %13 = load i8*, i8** %data_end, align 8, !dbg !17059
  %14 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !17059
  %data_hard_start12 = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %14, i32 0, i32 3, !dbg !17059
  %15 = load i8*, i8** %data_hard_start12, align 8, !dbg !17059
  %16 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !17059
  %frame_sz = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %16, i32 0, i32 6, !dbg !17059
  %17 = load i32, i32* %frame_sz, align 8, !dbg !17059
  %idx.ext = zext i32 %17 to i64, !dbg !17059
  %add.ptr = getelementptr i8, i8* %15, i64 %idx.ext, !dbg !17059
  %add.ptr13 = getelementptr i8, i8* %add.ptr, i64 -320, !dbg !17059
  %cmp14 = icmp ugt i8* %13, %add.ptr13, !dbg !17059
  %lnot16 = xor i1 %cmp14, true, !dbg !17059
  %lnot18 = xor i1 %lnot16, true, !dbg !17059
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !17059
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !17059
  %tobool21 = icmp ne i64 %conv20, 0, !dbg !17059
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !17061

if.then22:                                        ; preds = %if.end
  call void @xdp_warn(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.xdp_update_frame_from_buff, i64 0, i64 0), i32 161) #12, !dbg !17062
  store i32 -28, i32* %retval, align 4, !dbg !17064
  br label %return, !dbg !17064

if.end23:                                         ; preds = %if.end
  %18 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !17065
  %data24 = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %18, i32 0, i32 0, !dbg !17066
  %19 = load i8*, i8** %data24, align 8, !dbg !17066
  %20 = load %struct.xdp_frame*, %struct.xdp_frame** %xdp_frame.addr, align 8, !dbg !17067
  %data25 = getelementptr inbounds %struct.xdp_frame, %struct.xdp_frame* %20, i32 0, i32 0, !dbg !17068
  store i8* %19, i8** %data25, align 8, !dbg !17069
  %21 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !17070
  %data_end26 = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %21, i32 0, i32 1, !dbg !17071
  %22 = load i8*, i8** %data_end26, align 8, !dbg !17071
  %23 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !17072
  %data27 = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %23, i32 0, i32 0, !dbg !17073
  %24 = load i8*, i8** %data27, align 8, !dbg !17073
  %sub.ptr.lhs.cast28 = ptrtoint i8* %22 to i64, !dbg !17074
  %sub.ptr.rhs.cast29 = ptrtoint i8* %24 to i64, !dbg !17074
  %sub.ptr.sub30 = sub i64 %sub.ptr.lhs.cast28, %sub.ptr.rhs.cast29, !dbg !17074
  %conv31 = trunc i64 %sub.ptr.sub30 to i16, !dbg !17070
  %25 = load %struct.xdp_frame*, %struct.xdp_frame** %xdp_frame.addr, align 8, !dbg !17075
  %len = getelementptr inbounds %struct.xdp_frame, %struct.xdp_frame* %25, i32 0, i32 1, !dbg !17076
  store i16 %conv31, i16* %len, align 8, !dbg !17077
  %26 = load i32, i32* %headroom, align 4, !dbg !17078
  %conv32 = sext i32 %26 to i64, !dbg !17078
  %sub33 = sub i64 %conv32, 32, !dbg !17079
  %conv34 = trunc i64 %sub33 to i16, !dbg !17078
  %27 = load %struct.xdp_frame*, %struct.xdp_frame** %xdp_frame.addr, align 8, !dbg !17080
  %headroom35 = getelementptr inbounds %struct.xdp_frame, %struct.xdp_frame* %27, i32 0, i32 2, !dbg !17081
  store i16 %conv34, i16* %headroom35, align 2, !dbg !17082
  %28 = load i32, i32* %metasize, align 4, !dbg !17083
  %29 = load %struct.xdp_frame*, %struct.xdp_frame** %xdp_frame.addr, align 8, !dbg !17084
  %metasize36 = getelementptr inbounds %struct.xdp_frame, %struct.xdp_frame* %29, i32 0, i32 3, !dbg !17085
  %bf.load = load i32, i32* %metasize36, align 4, !dbg !17086
  %bf.value = and i32 %28, 255, !dbg !17086
  %bf.clear = and i32 %bf.load, -256, !dbg !17086
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !17086
  store i32 %bf.set, i32* %metasize36, align 4, !dbg !17086
  %30 = load %struct.xdp_buff*, %struct.xdp_buff** %xdp.addr, align 8, !dbg !17087
  %frame_sz37 = getelementptr inbounds %struct.xdp_buff, %struct.xdp_buff* %30, i32 0, i32 6, !dbg !17088
  %31 = load i32, i32* %frame_sz37, align 8, !dbg !17088
  %32 = load %struct.xdp_frame*, %struct.xdp_frame** %xdp_frame.addr, align 8, !dbg !17089
  %frame_sz38 = getelementptr inbounds %struct.xdp_frame, %struct.xdp_frame* %32, i32 0, i32 3, !dbg !17090
  %bf.load39 = load i32, i32* %frame_sz38, align 4, !dbg !17091
  %bf.value40 = and i32 %31, 16777215, !dbg !17091
  %bf.shl = shl i32 %bf.value40, 8, !dbg !17091
  %bf.clear41 = and i32 %bf.load39, 255, !dbg !17091
  %bf.set42 = or i32 %bf.clear41, %bf.shl, !dbg !17091
  store i32 %bf.set42, i32* %frame_sz38, align 4, !dbg !17091
  store i32 0, i32* %retval, align 4, !dbg !17092
  br label %return, !dbg !17092

return:                                           ; preds = %if.end23, %if.then22, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !17093
  ret i32 %33, !dbg !17093
}

; Function Attrs: noredzone
declare dso_local void @xdp_warn(i8*, i8*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__rcu_read_unlock() #3 !dbg !17094 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !17095, !srcloc !17096
  br label %do.body, !dbg !17097

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !17098

do.end:                                           ; preds = %do.body
  ret void, !dbg !17100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sk_buff* @skb_peek(%struct.sk_buff_head* %list_) #3 !dbg !17101 {
entry:
  %list_.addr = alloca %struct.sk_buff_head*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff_head* %list_, %struct.sk_buff_head** %list_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list_.addr, metadata !17104, metadata !DIExpression()), !dbg !17105
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !17106, metadata !DIExpression()), !dbg !17107
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list_.addr, align 8, !dbg !17108
  %next = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %0, i32 0, i32 0, !dbg !17109
  %1 = load %struct.sk_buff*, %struct.sk_buff** %next, align 8, !dbg !17109
  store %struct.sk_buff* %1, %struct.sk_buff** %skb, align 8, !dbg !17107
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17110
  %3 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list_.addr, align 8, !dbg !17112
  %4 = bitcast %struct.sk_buff_head* %3 to %struct.sk_buff*, !dbg !17113
  %cmp = icmp eq %struct.sk_buff* %2, %4, !dbg !17114
  br i1 %cmp, label %if.then, label %if.end, !dbg !17115

if.then:                                          ; preds = %entry
  store %struct.sk_buff* null, %struct.sk_buff** %skb, align 8, !dbg !17116
  br label %if.end, !dbg !17117

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17118
  ret %struct.sk_buff* %5, !dbg !17119
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_unlink(%struct.sk_buff* %skb, %struct.sk_buff_head* %list) #3 !dbg !17120 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %next = alloca %struct.sk_buff*, align 8
  %prev = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17123, metadata !DIExpression()), !dbg !17124
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !17125, metadata !DIExpression()), !dbg !17126
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %next, metadata !17127, metadata !DIExpression()), !dbg !17128
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %prev, metadata !17129, metadata !DIExpression()), !dbg !17130
  br label %do.body, !dbg !17131

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !17132

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !17134

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !17132

do.body2:                                         ; preds = %do.end
  %0 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !17136
  %qlen = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %0, i32 0, i32 2, !dbg !17136
  %1 = load i32, i32* %qlen, align 8, !dbg !17136
  %sub = sub i32 %1, 1, !dbg !17136
  %2 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !17136
  %qlen3 = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %2, i32 0, i32 2, !dbg !17136
  store volatile i32 %sub, i32* %qlen3, align 8, !dbg !17136
  br label %do.end4, !dbg !17136

do.end4:                                          ; preds = %do.body2
  br label %do.end5, !dbg !17132

do.end5:                                          ; preds = %do.end4
  %3 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17138
  %4 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %3, i32 0, i32 0, !dbg !17139
  %5 = bitcast %union.anon.47* %4 to %struct.anon.48*, !dbg !17139
  %next6 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %5, i32 0, i32 0, !dbg !17139
  %6 = load %struct.sk_buff*, %struct.sk_buff** %next6, align 8, !dbg !17139
  store %struct.sk_buff* %6, %struct.sk_buff** %next, align 8, !dbg !17140
  %7 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17141
  %8 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %7, i32 0, i32 0, !dbg !17142
  %9 = bitcast %union.anon.47* %8 to %struct.anon.48*, !dbg !17142
  %prev7 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %9, i32 0, i32 1, !dbg !17142
  %10 = load %struct.sk_buff*, %struct.sk_buff** %prev7, align 8, !dbg !17142
  store %struct.sk_buff* %10, %struct.sk_buff** %prev, align 8, !dbg !17143
  %11 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17144
  %12 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %11, i32 0, i32 0, !dbg !17145
  %13 = bitcast %union.anon.47* %12 to %struct.anon.48*, !dbg !17145
  %prev8 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %13, i32 0, i32 1, !dbg !17145
  store %struct.sk_buff* null, %struct.sk_buff** %prev8, align 8, !dbg !17146
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17147
  %15 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %14, i32 0, i32 0, !dbg !17148
  %16 = bitcast %union.anon.47* %15 to %struct.anon.48*, !dbg !17148
  %next9 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %16, i32 0, i32 0, !dbg !17148
  store %struct.sk_buff* null, %struct.sk_buff** %next9, align 8, !dbg !17149
  br label %do.body10, !dbg !17150

do.body10:                                        ; preds = %do.end5
  br label %do.body11, !dbg !17151

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !17153

do.end12:                                         ; preds = %do.body11
  br label %do.body13, !dbg !17151

do.body13:                                        ; preds = %do.end12
  %17 = load %struct.sk_buff*, %struct.sk_buff** %prev, align 8, !dbg !17155
  %18 = load %struct.sk_buff*, %struct.sk_buff** %next, align 8, !dbg !17155
  %19 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %18, i32 0, i32 0, !dbg !17155
  %20 = bitcast %union.anon.47* %19 to %struct.anon.48*, !dbg !17155
  %prev14 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %20, i32 0, i32 1, !dbg !17155
  store volatile %struct.sk_buff* %17, %struct.sk_buff** %prev14, align 8, !dbg !17155
  br label %do.end15, !dbg !17155

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !17151

do.end16:                                         ; preds = %do.end15
  br label %do.body17, !dbg !17157

do.body17:                                        ; preds = %do.end16
  br label %do.body18, !dbg !17158

do.body18:                                        ; preds = %do.body17
  br label %do.end19, !dbg !17160

do.end19:                                         ; preds = %do.body18
  br label %do.body20, !dbg !17158

do.body20:                                        ; preds = %do.end19
  %21 = load %struct.sk_buff*, %struct.sk_buff** %next, align 8, !dbg !17162
  %22 = load %struct.sk_buff*, %struct.sk_buff** %prev, align 8, !dbg !17162
  %23 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %22, i32 0, i32 0, !dbg !17162
  %24 = bitcast %union.anon.47* %23 to %struct.anon.48*, !dbg !17162
  %next21 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %24, i32 0, i32 0, !dbg !17162
  store volatile %struct.sk_buff* %21, %struct.sk_buff** %next21, align 8, !dbg !17162
  br label %do.end22, !dbg !17162

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !17158

do.end23:                                         ; preds = %do.end22
  ret void, !dbg !17164
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_queue_before(%struct.sk_buff_head* %list, %struct.sk_buff* %next, %struct.sk_buff* %newsk) #3 !dbg !17165 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %next.addr = alloca %struct.sk_buff*, align 8
  %newsk.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !17168, metadata !DIExpression()), !dbg !17169
  store %struct.sk_buff* %next, %struct.sk_buff** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %next.addr, metadata !17170, metadata !DIExpression()), !dbg !17171
  store %struct.sk_buff* %newsk, %struct.sk_buff** %newsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %newsk.addr, metadata !17172, metadata !DIExpression()), !dbg !17173
  %0 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !17174
  %1 = load %struct.sk_buff*, %struct.sk_buff** %next.addr, align 8, !dbg !17175
  %2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 0, !dbg !17176
  %3 = bitcast %union.anon.47* %2 to %struct.anon.48*, !dbg !17176
  %prev = getelementptr inbounds %struct.anon.48, %struct.anon.48* %3, i32 0, i32 1, !dbg !17176
  %4 = load %struct.sk_buff*, %struct.sk_buff** %prev, align 8, !dbg !17176
  %5 = load %struct.sk_buff*, %struct.sk_buff** %next.addr, align 8, !dbg !17177
  %6 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !17178
  call void @__skb_insert(%struct.sk_buff* %0, %struct.sk_buff* %4, %struct.sk_buff* %5, %struct.sk_buff_head* %6) #12, !dbg !17179
  ret void, !dbg !17180
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_insert(%struct.sk_buff* %newsk, %struct.sk_buff* %prev, %struct.sk_buff* %next, %struct.sk_buff_head* %list) #3 !dbg !17181 {
entry:
  %newsk.addr = alloca %struct.sk_buff*, align 8
  %prev.addr = alloca %struct.sk_buff*, align 8
  %next.addr = alloca %struct.sk_buff*, align 8
  %list.addr = alloca %struct.sk_buff_head*, align 8
  store %struct.sk_buff* %newsk, %struct.sk_buff** %newsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %newsk.addr, metadata !17184, metadata !DIExpression()), !dbg !17185
  store %struct.sk_buff* %prev, %struct.sk_buff** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %prev.addr, metadata !17186, metadata !DIExpression()), !dbg !17187
  store %struct.sk_buff* %next, %struct.sk_buff** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %next.addr, metadata !17188, metadata !DIExpression()), !dbg !17189
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !17190, metadata !DIExpression()), !dbg !17191
  br label %do.body, !dbg !17192

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !17193

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !17195

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !17193

do.body2:                                         ; preds = %do.end
  %0 = load %struct.sk_buff*, %struct.sk_buff** %next.addr, align 8, !dbg !17197
  %1 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !17197
  %2 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %1, i32 0, i32 0, !dbg !17197
  %3 = bitcast %union.anon.47* %2 to %struct.anon.48*, !dbg !17197
  %next3 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %3, i32 0, i32 0, !dbg !17197
  store volatile %struct.sk_buff* %0, %struct.sk_buff** %next3, align 8, !dbg !17197
  br label %do.end4, !dbg !17197

do.end4:                                          ; preds = %do.body2
  br label %do.end5, !dbg !17193

do.end5:                                          ; preds = %do.end4
  br label %do.body6, !dbg !17199

do.body6:                                         ; preds = %do.end5
  br label %do.body7, !dbg !17200

do.body7:                                         ; preds = %do.body6
  br label %do.end8, !dbg !17202

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !17200

do.body9:                                         ; preds = %do.end8
  %4 = load %struct.sk_buff*, %struct.sk_buff** %prev.addr, align 8, !dbg !17204
  %5 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !17204
  %6 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %5, i32 0, i32 0, !dbg !17204
  %7 = bitcast %union.anon.47* %6 to %struct.anon.48*, !dbg !17204
  %prev10 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %7, i32 0, i32 1, !dbg !17204
  store volatile %struct.sk_buff* %4, %struct.sk_buff** %prev10, align 8, !dbg !17204
  br label %do.end11, !dbg !17204

do.end11:                                         ; preds = %do.body9
  br label %do.end12, !dbg !17200

do.end12:                                         ; preds = %do.end11
  br label %do.body13, !dbg !17206

do.body13:                                        ; preds = %do.end12
  br label %do.body14, !dbg !17207

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !17209

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !17207

do.body16:                                        ; preds = %do.end15
  %8 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !17211
  %9 = load %struct.sk_buff*, %struct.sk_buff** %next.addr, align 8, !dbg !17211
  %10 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %9, i32 0, i32 0, !dbg !17211
  %11 = bitcast %union.anon.47* %10 to %struct.anon.48*, !dbg !17211
  %prev17 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %11, i32 0, i32 1, !dbg !17211
  store volatile %struct.sk_buff* %8, %struct.sk_buff** %prev17, align 8, !dbg !17211
  br label %do.end18, !dbg !17211

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !17207

do.end19:                                         ; preds = %do.end18
  br label %do.body20, !dbg !17213

do.body20:                                        ; preds = %do.end19
  br label %do.body21, !dbg !17214

do.body21:                                        ; preds = %do.body20
  br label %do.end22, !dbg !17216

do.end22:                                         ; preds = %do.body21
  br label %do.body23, !dbg !17214

do.body23:                                        ; preds = %do.end22
  %12 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !17218
  %13 = load %struct.sk_buff*, %struct.sk_buff** %prev.addr, align 8, !dbg !17218
  %14 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %13, i32 0, i32 0, !dbg !17218
  %15 = bitcast %union.anon.47* %14 to %struct.anon.48*, !dbg !17218
  %next24 = getelementptr inbounds %struct.anon.48, %struct.anon.48* %15, i32 0, i32 0, !dbg !17218
  store volatile %struct.sk_buff* %12, %struct.sk_buff** %next24, align 8, !dbg !17218
  br label %do.end25, !dbg !17218

do.end25:                                         ; preds = %do.body23
  br label %do.end26, !dbg !17214

do.end26:                                         ; preds = %do.end25
  %16 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !17220
  %qlen = getelementptr inbounds %struct.sk_buff_head, %struct.sk_buff_head* %16, i32 0, i32 2, !dbg !17221
  %17 = load i32, i32* %qlen, align 8, !dbg !17222
  %inc = add i32 %17, 1, !dbg !17222
  store i32 %inc, i32* %qlen, align 8, !dbg !17222
  ret void, !dbg !17223
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__skb_queue_after(%struct.sk_buff_head* %list, %struct.sk_buff* %prev, %struct.sk_buff* %newsk) #3 !dbg !17224 {
entry:
  %list.addr = alloca %struct.sk_buff_head*, align 8
  %prev.addr = alloca %struct.sk_buff*, align 8
  %newsk.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff_head* %list, %struct.sk_buff_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff_head** %list.addr, metadata !17225, metadata !DIExpression()), !dbg !17226
  store %struct.sk_buff* %prev, %struct.sk_buff** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %prev.addr, metadata !17227, metadata !DIExpression()), !dbg !17228
  store %struct.sk_buff* %newsk, %struct.sk_buff** %newsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %newsk.addr, metadata !17229, metadata !DIExpression()), !dbg !17230
  %0 = load %struct.sk_buff*, %struct.sk_buff** %newsk.addr, align 8, !dbg !17231
  %1 = load %struct.sk_buff*, %struct.sk_buff** %prev.addr, align 8, !dbg !17232
  %2 = load %struct.sk_buff*, %struct.sk_buff** %prev.addr, align 8, !dbg !17233
  %3 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 0, !dbg !17234
  %4 = bitcast %union.anon.47* %3 to %struct.anon.48*, !dbg !17234
  %next = getelementptr inbounds %struct.anon.48, %struct.anon.48* %4, i32 0, i32 0, !dbg !17234
  %5 = load %struct.sk_buff*, %struct.sk_buff** %next, align 8, !dbg !17234
  %6 = load %struct.sk_buff_head*, %struct.sk_buff_head** %list.addr, align 8, !dbg !17235
  call void @__skb_insert(%struct.sk_buff* %0, %struct.sk_buff* %1, %struct.sk_buff* %5, %struct.sk_buff_head* %6) #12, !dbg !17236
  ret void, !dbg !17237
}

; Function Attrs: noredzone
declare dso_local zeroext i16 @eth_type_trans(%struct.sk_buff*, %struct.net_device*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @skb_reset_network_header(%struct.sk_buff* %skb) #3 !dbg !17238 {
entry:
  %skb.addr = alloca %struct.sk_buff*, align 8
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17239, metadata !DIExpression()), !dbg !17240
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17241
  %data = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 37, !dbg !17242
  %1 = load i8*, i8** %data, align 8, !dbg !17242
  %2 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17243
  %head = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %2, i32 0, i32 36, !dbg !17244
  %3 = load i8*, i8** %head, align 8, !dbg !17244
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64, !dbg !17245
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !17245
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !17245
  %conv = trunc i64 %sub.ptr.sub to i16, !dbg !17241
  %4 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17246
  %network_header = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %4, i32 0, i32 31, !dbg !17247
  store i16 %conv, i16* %network_header, align 4, !dbg !17248
  ret void, !dbg !17249
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @checksum_setup(%struct.net_device* %dev, %struct.sk_buff* %skb) #3 !dbg !17250 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !17000, metadata !DIExpression()), !dbg !17251
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !13310, metadata !DIExpression()), !dbg !17256
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !13314, metadata !DIExpression()), !dbg !17258
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !17011, metadata !DIExpression()), !dbg !17259
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %skb.addr = alloca %struct.sk_buff*, align 8
  %recalculate_partial_csum = alloca i8, align 1
  %np = alloca %struct.netfront_info*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !17260, metadata !DIExpression()), !dbg !17261
  store %struct.sk_buff* %skb, %struct.sk_buff** %skb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb.addr, metadata !17262, metadata !DIExpression()), !dbg !17263
  call void @llvm.dbg.declare(metadata i8* %recalculate_partial_csum, metadata !17264, metadata !DIExpression()), !dbg !17265
  store i8 0, i8* %recalculate_partial_csum, align 1, !dbg !17265
  %0 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17266
  %ip_summed = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %0, i32 0, i32 14, !dbg !17267
  %bf.load = load i16, i16* %ip_summed, align 8, !dbg !17267
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !17267
  %bf.clear = and i16 %bf.lshr, 3, !dbg !17267
  %bf.cast = trunc i16 %bf.clear to i8, !dbg !17267
  %conv = zext i8 %bf.cast to i32, !dbg !17266
  %cmp = icmp ne i32 %conv, 3, !dbg !17268
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17269

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17270
  %call = call zeroext i1 @skb_is_gso(%struct.sk_buff* %1) #12, !dbg !17271
  br i1 %call, label %if.then, label %if.end, !dbg !17272

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.netfront_info** %np, metadata !17273, metadata !DIExpression()), !dbg !17274
  %2 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !17275
  %call3 = call i8* @netdev_priv(%struct.net_device* %2) #12, !dbg !17276
  %3 = bitcast i8* %call3 to %struct.netfront_info*, !dbg !17276
  store %struct.netfront_info* %3, %struct.netfront_info** %np, align 8, !dbg !17274
  %4 = load %struct.netfront_info*, %struct.netfront_info** %np, align 8, !dbg !17277
  %rx_gso_checksum_fixup = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %4, i32 0, i32 8, !dbg !17278
  store %struct.atomic_t* %rx_gso_checksum_fixup, %struct.atomic_t** %v.addr.i, align 8
  %5 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !17279
  %6 = bitcast %struct.atomic_t* %5 to i8*, !dbg !17279
  store i8* %6, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !17280
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !17281
  %conv.i.i = trunc i64 %8 to i32, !dbg !17281
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %7, i32 %conv.i.i) #14, !dbg !17282
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !17283
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !17283
  call void @kcsan_check_access(i8* %9, i64 %10, i32 7) #14, !dbg !17283
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !17284
  store %struct.atomic_t* %11, %struct.atomic_t** %v.addr.i1.i, align 8
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !17285
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !17286
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #8, !dbg !17287, !srcloc !17026
  %13 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17288
  %ip_summed4 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %13, i32 0, i32 14, !dbg !17289
  %bf.load5 = load i16, i16* %ip_summed4, align 8, !dbg !17290
  %bf.clear6 = and i16 %bf.load5, -97, !dbg !17290
  %bf.set = or i16 %bf.clear6, 96, !dbg !17290
  store i16 %bf.set, i16* %ip_summed4, align 8, !dbg !17290
  store i8 1, i8* %recalculate_partial_csum, align 1, !dbg !17291
  br label %if.end, !dbg !17292

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %14 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17293
  %ip_summed7 = getelementptr inbounds %struct.sk_buff, %struct.sk_buff* %14, i32 0, i32 14, !dbg !17295
  %bf.load8 = load i16, i16* %ip_summed7, align 8, !dbg !17295
  %bf.lshr9 = lshr i16 %bf.load8, 5, !dbg !17295
  %bf.clear10 = and i16 %bf.lshr9, 3, !dbg !17295
  %bf.cast11 = trunc i16 %bf.clear10 to i8, !dbg !17295
  %conv12 = zext i8 %bf.cast11 to i32, !dbg !17293
  %cmp13 = icmp ne i32 %conv12, 3, !dbg !17296
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !17297

if.then15:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !17298
  br label %return, !dbg !17298

if.end16:                                         ; preds = %if.end
  %15 = load %struct.sk_buff*, %struct.sk_buff** %skb.addr, align 8, !dbg !17299
  %16 = load i8, i8* %recalculate_partial_csum, align 1, !dbg !17300
  %tobool = trunc i8 %16 to i1, !dbg !17300
  %call17 = call i32 @skb_checksum_setup(%struct.sk_buff* %15, i1 zeroext %tobool) #12, !dbg !17301
  store i32 %call17, i32* %retval, align 4, !dbg !17302
  br label %return, !dbg !17302

return:                                           ; preds = %if.end16, %if.then15
  %17 = load i32, i32* %retval, align 4, !dbg !17303
  ret i32 %17, !dbg !17303
}

; Function Attrs: noredzone
declare dso_local i32 @napi_gro_receive(%struct.napi_struct*, %struct.sk_buff*) #1

; Function Attrs: noredzone
declare dso_local i32 @skb_checksum_setup(%struct.sk_buff*, i1 zeroext) #1

; Function Attrs: noredzone
declare dso_local i64 @get_zeroed_page(i32) #1

; Function Attrs: noredzone
declare dso_local i32 @xenbus_grant_ring(%struct.xenbus_device*, i8*, i32, i32*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @setup_netfront_split(%struct.netfront_queue* %queue) #3 !dbg !17304 {
entry:
  %retval = alloca i32, align 4
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %err = alloca i32, align 4
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !17305, metadata !DIExpression()), !dbg !17306
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17307, metadata !DIExpression()), !dbg !17308
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17309
  %info = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %0, i32 0, i32 2, !dbg !17310
  %1 = load %struct.netfront_info*, %struct.netfront_info** %info, align 32, !dbg !17310
  %xbdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %1, i32 0, i32 2, !dbg !17311
  %2 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev, align 8, !dbg !17311
  %3 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17312
  %tx_evtchn = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %3, i32 0, i32 5, !dbg !17313
  %call = call i32 @xenbus_alloc_evtchn(%struct.xenbus_device* %2, i32* %tx_evtchn) #12, !dbg !17314
  store i32 %call, i32* %err, align 4, !dbg !17315
  %4 = load i32, i32* %err, align 4, !dbg !17316
  %cmp = icmp slt i32 %4, 0, !dbg !17318
  br i1 %cmp, label %if.then, label %if.end, !dbg !17319

if.then:                                          ; preds = %entry
  br label %fail, !dbg !17320

if.end:                                           ; preds = %entry
  %5 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17321
  %info1 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %5, i32 0, i32 2, !dbg !17322
  %6 = load %struct.netfront_info*, %struct.netfront_info** %info1, align 32, !dbg !17322
  %xbdev2 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %6, i32 0, i32 2, !dbg !17323
  %7 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev2, align 8, !dbg !17323
  %8 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17324
  %rx_evtchn = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %8, i32 0, i32 6, !dbg !17325
  %call3 = call i32 @xenbus_alloc_evtchn(%struct.xenbus_device* %7, i32* %rx_evtchn) #12, !dbg !17326
  store i32 %call3, i32* %err, align 4, !dbg !17327
  %9 = load i32, i32* %err, align 4, !dbg !17328
  %cmp4 = icmp slt i32 %9, 0, !dbg !17330
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !17331

if.then5:                                         ; preds = %if.end
  br label %alloc_rx_evtchn_fail, !dbg !17332

if.end6:                                          ; preds = %if.end
  %10 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17333
  %tx_irq_name = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %10, i32 0, i32 9, !dbg !17334
  %arraydecay = getelementptr inbounds [25 x i8], [25 x i8]* %tx_irq_name, i64 0, i64 0, !dbg !17333
  %11 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17335
  %name = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %11, i32 0, i32 1, !dbg !17336
  %arraydecay7 = getelementptr inbounds [22 x i8], [22 x i8]* %name, i64 0, i64 0, !dbg !17335
  %call8 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.66, i64 0, i64 0), i8* %arraydecay7) #12, !dbg !17337
  %12 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17338
  %tx_evtchn9 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %12, i32 0, i32 5, !dbg !17339
  %13 = load i32, i32* %tx_evtchn9, align 16, !dbg !17339
  %14 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17340
  %tx_irq_name10 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %14, i32 0, i32 9, !dbg !17341
  %arraydecay11 = getelementptr inbounds [25 x i8], [25 x i8]* %tx_irq_name10, i64 0, i64 0, !dbg !17340
  %15 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17342
  %16 = bitcast %struct.netfront_queue* %15 to i8*, !dbg !17342
  %call12 = call i32 @bind_evtchn_to_irqhandler(i32 %13, i32 (i32, i8*)* @xennet_tx_interrupt, i64 0, i8* %arraydecay11, i8* %16) #12, !dbg !17343
  store i32 %call12, i32* %err, align 4, !dbg !17344
  %17 = load i32, i32* %err, align 4, !dbg !17345
  %cmp13 = icmp slt i32 %17, 0, !dbg !17347
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !17348

if.then14:                                        ; preds = %if.end6
  br label %bind_tx_fail, !dbg !17349

if.end15:                                         ; preds = %if.end6
  %18 = load i32, i32* %err, align 4, !dbg !17350
  %19 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17351
  %tx_irq = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %19, i32 0, i32 7, !dbg !17352
  store i32 %18, i32* %tx_irq, align 8, !dbg !17353
  %20 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17354
  %rx_irq_name = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %20, i32 0, i32 10, !dbg !17355
  %arraydecay16 = getelementptr inbounds [25 x i8], [25 x i8]* %rx_irq_name, i64 0, i64 0, !dbg !17354
  %21 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17356
  %name17 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %21, i32 0, i32 1, !dbg !17357
  %arraydecay18 = getelementptr inbounds [22 x i8], [22 x i8]* %name17, i64 0, i64 0, !dbg !17356
  %call19 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay16, i64 25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.67, i64 0, i64 0), i8* %arraydecay18) #12, !dbg !17358
  %22 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17359
  %rx_evtchn20 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %22, i32 0, i32 6, !dbg !17360
  %23 = load i32, i32* %rx_evtchn20, align 4, !dbg !17360
  %24 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17361
  %rx_irq_name21 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %24, i32 0, i32 10, !dbg !17362
  %arraydecay22 = getelementptr inbounds [25 x i8], [25 x i8]* %rx_irq_name21, i64 0, i64 0, !dbg !17361
  %25 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17363
  %26 = bitcast %struct.netfront_queue* %25 to i8*, !dbg !17363
  %call23 = call i32 @bind_evtchn_to_irqhandler(i32 %23, i32 (i32, i8*)* @xennet_rx_interrupt, i64 0, i8* %arraydecay22, i8* %26) #12, !dbg !17364
  store i32 %call23, i32* %err, align 4, !dbg !17365
  %27 = load i32, i32* %err, align 4, !dbg !17366
  %cmp24 = icmp slt i32 %27, 0, !dbg !17368
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !17369

if.then25:                                        ; preds = %if.end15
  br label %bind_rx_fail, !dbg !17370

if.end26:                                         ; preds = %if.end15
  %28 = load i32, i32* %err, align 4, !dbg !17371
  %29 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17372
  %rx_irq = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %29, i32 0, i32 8, !dbg !17373
  store i32 %28, i32* %rx_irq, align 4, !dbg !17374
  store i32 0, i32* %retval, align 4, !dbg !17375
  br label %return, !dbg !17375

bind_rx_fail:                                     ; preds = %if.then25
  call void @llvm.dbg.label(metadata !17376), !dbg !17377
  %30 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17378
  %tx_irq27 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %30, i32 0, i32 7, !dbg !17379
  %31 = load i32, i32* %tx_irq27, align 8, !dbg !17379
  %32 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17380
  %33 = bitcast %struct.netfront_queue* %32 to i8*, !dbg !17380
  call void @unbind_from_irqhandler(i32 %31, i8* %33) #12, !dbg !17381
  %34 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17382
  %tx_irq28 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %34, i32 0, i32 7, !dbg !17383
  store i32 0, i32* %tx_irq28, align 8, !dbg !17384
  br label %bind_tx_fail, !dbg !17382

bind_tx_fail:                                     ; preds = %bind_rx_fail, %if.then14
  call void @llvm.dbg.label(metadata !17385), !dbg !17386
  %35 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17387
  %info29 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %35, i32 0, i32 2, !dbg !17388
  %36 = load %struct.netfront_info*, %struct.netfront_info** %info29, align 32, !dbg !17388
  %xbdev30 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %36, i32 0, i32 2, !dbg !17389
  %37 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev30, align 8, !dbg !17389
  %38 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17390
  %rx_evtchn31 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %38, i32 0, i32 6, !dbg !17391
  %39 = load i32, i32* %rx_evtchn31, align 4, !dbg !17391
  %call32 = call i32 @xenbus_free_evtchn(%struct.xenbus_device* %37, i32 %39) #12, !dbg !17392
  %40 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17393
  %rx_evtchn33 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %40, i32 0, i32 6, !dbg !17394
  store i32 0, i32* %rx_evtchn33, align 4, !dbg !17395
  br label %alloc_rx_evtchn_fail, !dbg !17393

alloc_rx_evtchn_fail:                             ; preds = %bind_tx_fail, %if.then5
  call void @llvm.dbg.label(metadata !17396), !dbg !17397
  %41 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17398
  %info34 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %41, i32 0, i32 2, !dbg !17399
  %42 = load %struct.netfront_info*, %struct.netfront_info** %info34, align 32, !dbg !17399
  %xbdev35 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %42, i32 0, i32 2, !dbg !17400
  %43 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev35, align 8, !dbg !17400
  %44 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17401
  %tx_evtchn36 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %44, i32 0, i32 5, !dbg !17402
  %45 = load i32, i32* %tx_evtchn36, align 16, !dbg !17402
  %call37 = call i32 @xenbus_free_evtchn(%struct.xenbus_device* %43, i32 %45) #12, !dbg !17403
  %46 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17404
  %tx_evtchn38 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %46, i32 0, i32 5, !dbg !17405
  store i32 0, i32* %tx_evtchn38, align 16, !dbg !17406
  br label %fail, !dbg !17404

fail:                                             ; preds = %alloc_rx_evtchn_fail, %if.then
  call void @llvm.dbg.label(metadata !17407), !dbg !17408
  %47 = load i32, i32* %err, align 4, !dbg !17409
  store i32 %47, i32* %retval, align 4, !dbg !17410
  br label %return, !dbg !17410

return:                                           ; preds = %fail, %if.end26
  %48 = load i32, i32* %retval, align 4, !dbg !17411
  ret i32 %48, !dbg !17411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @setup_netfront_single(%struct.netfront_queue* %queue) #3 !dbg !17412 {
entry:
  %retval = alloca i32, align 4
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %err = alloca i32, align 4
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !17413, metadata !DIExpression()), !dbg !17414
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17415, metadata !DIExpression()), !dbg !17416
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17417
  %info = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %0, i32 0, i32 2, !dbg !17418
  %1 = load %struct.netfront_info*, %struct.netfront_info** %info, align 32, !dbg !17418
  %xbdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %1, i32 0, i32 2, !dbg !17419
  %2 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev, align 8, !dbg !17419
  %3 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17420
  %tx_evtchn = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %3, i32 0, i32 5, !dbg !17421
  %call = call i32 @xenbus_alloc_evtchn(%struct.xenbus_device* %2, i32* %tx_evtchn) #12, !dbg !17422
  store i32 %call, i32* %err, align 4, !dbg !17423
  %4 = load i32, i32* %err, align 4, !dbg !17424
  %cmp = icmp slt i32 %4, 0, !dbg !17426
  br i1 %cmp, label %if.then, label %if.end, !dbg !17427

if.then:                                          ; preds = %entry
  br label %fail, !dbg !17428

if.end:                                           ; preds = %entry
  %5 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17429
  %tx_evtchn1 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %5, i32 0, i32 5, !dbg !17430
  %6 = load i32, i32* %tx_evtchn1, align 16, !dbg !17430
  %7 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17431
  %info2 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %7, i32 0, i32 2, !dbg !17432
  %8 = load %struct.netfront_info*, %struct.netfront_info** %info2, align 32, !dbg !17432
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %8, i32 0, i32 1, !dbg !17433
  %9 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !17433
  %name = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 0, !dbg !17434
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %name, i64 0, i64 0, !dbg !17431
  %10 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17435
  %11 = bitcast %struct.netfront_queue* %10 to i8*, !dbg !17435
  %call3 = call i32 @bind_evtchn_to_irqhandler(i32 %6, i32 (i32, i8*)* @xennet_interrupt, i64 0, i8* %arraydecay, i8* %11) #12, !dbg !17436
  store i32 %call3, i32* %err, align 4, !dbg !17437
  %12 = load i32, i32* %err, align 4, !dbg !17438
  %cmp4 = icmp slt i32 %12, 0, !dbg !17440
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !17441

if.then5:                                         ; preds = %if.end
  br label %bind_fail, !dbg !17442

if.end6:                                          ; preds = %if.end
  %13 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17443
  %tx_evtchn7 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %13, i32 0, i32 5, !dbg !17444
  %14 = load i32, i32* %tx_evtchn7, align 16, !dbg !17444
  %15 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17445
  %rx_evtchn = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %15, i32 0, i32 6, !dbg !17446
  store i32 %14, i32* %rx_evtchn, align 4, !dbg !17447
  %16 = load i32, i32* %err, align 4, !dbg !17448
  %17 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17449
  %tx_irq = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %17, i32 0, i32 7, !dbg !17450
  store i32 %16, i32* %tx_irq, align 8, !dbg !17451
  %18 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17452
  %rx_irq = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %18, i32 0, i32 8, !dbg !17453
  store i32 %16, i32* %rx_irq, align 4, !dbg !17454
  store i32 0, i32* %retval, align 4, !dbg !17455
  br label %return, !dbg !17455

bind_fail:                                        ; preds = %if.then5
  call void @llvm.dbg.label(metadata !17456), !dbg !17457
  %19 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17458
  %info8 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %19, i32 0, i32 2, !dbg !17459
  %20 = load %struct.netfront_info*, %struct.netfront_info** %info8, align 32, !dbg !17459
  %xbdev9 = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %20, i32 0, i32 2, !dbg !17460
  %21 = load %struct.xenbus_device*, %struct.xenbus_device** %xbdev9, align 8, !dbg !17460
  %22 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17461
  %tx_evtchn10 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %22, i32 0, i32 5, !dbg !17462
  %23 = load i32, i32* %tx_evtchn10, align 16, !dbg !17462
  %call11 = call i32 @xenbus_free_evtchn(%struct.xenbus_device* %21, i32 %23) #12, !dbg !17463
  %24 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17464
  %tx_evtchn12 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %24, i32 0, i32 5, !dbg !17465
  store i32 0, i32* %tx_evtchn12, align 16, !dbg !17466
  br label %fail, !dbg !17464

fail:                                             ; preds = %bind_fail, %if.then
  call void @llvm.dbg.label(metadata !17467), !dbg !17468
  %25 = load i32, i32* %err, align 4, !dbg !17469
  store i32 %25, i32* %retval, align 4, !dbg !17470
  br label %return, !dbg !17470

return:                                           ; preds = %fail, %if.end6
  %26 = load i32, i32* %retval, align 4, !dbg !17471
  ret i32 %26, !dbg !17471
}

; Function Attrs: noredzone
declare dso_local void @free_pages(i64, i32) #1

; Function Attrs: noredzone
declare dso_local i32 @xenbus_alloc_evtchn(%struct.xenbus_device*, i32*) #1

; Function Attrs: noredzone
declare dso_local i32 @bind_evtchn_to_irqhandler(i32, i32 (i32, i8*)*, i64, i8*, i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_tx_interrupt(i32 %irq, i8* %dev_id) #3 !dbg !17472 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !11087, metadata !DIExpression()), !dbg !17473
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !11094, metadata !DIExpression()), !dbg !17475
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11108, metadata !DIExpression()), !dbg !17476
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %queue = alloca %struct.netfront_queue*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !17483, metadata !DIExpression()), !dbg !17484
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !17485, metadata !DIExpression()), !dbg !17486
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue, metadata !17487, metadata !DIExpression()), !dbg !17488
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !17489
  %1 = bitcast i8* %0 to %struct.netfront_queue*, !dbg !17489
  store %struct.netfront_queue* %1, %struct.netfront_queue** %queue, align 8, !dbg !17488
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17490, metadata !DIExpression()), !dbg !17491
  br label %do.body, !dbg !17492

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !17493

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17494, metadata !DIExpression()), !dbg !17496
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17497, metadata !DIExpression()), !dbg !17496
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !17496
  %conv = zext i1 %cmp to i32, !dbg !17496
  store i32 1, i32* %tmp, align 4, !dbg !17496
  %2 = load i32, i32* %tmp, align 4, !dbg !17496
  br label %do.body2, !dbg !17498

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !17499

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !17500

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !17502, metadata !DIExpression()), !dbg !17505
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !17506, metadata !DIExpression()), !dbg !17505
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !17505
  %conv8 = zext i1 %cmp7 to i32, !dbg !17505
  store i32 1, i32* %tmp9, align 4, !dbg !17505
  %3 = load i32, i32* %tmp9, align 4, !dbg !17505
  %call = call i64 @arch_local_irq_save() #12, !dbg !17507
  store i64 %call, i64* %flags, align 8, !dbg !17507
  br label %do.end, !dbg !17507

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !17500

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !17499

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !17508, !srcloc !17509
  br label %do.body12, !dbg !17508

do.body12:                                        ; preds = %do.body11
  %4 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !17510
  %tx_lock = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %4, i32 0, i32 11, !dbg !17510
  store %struct.spinlock* %tx_lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17511
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !17512
  %rlock.i = bitcast %union.anon.2* %6 to %struct.raw_spinlock*, !dbg !17512
  br label %do.end14, !dbg !17510

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !17508

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !17499

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !17498

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !17493

do.end18:                                         ; preds = %do.end17
  %7 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !17513
  call void @xennet_tx_buf_gc(%struct.netfront_queue* %7) #12, !dbg !17514
  %8 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !17515
  %tx_lock19 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %8, i32 0, i32 11, !dbg !17516
  %9 = load i64, i64* %flags, align 8, !dbg !17517
  store %struct.spinlock* %tx_lock19, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !749, metadata !11257, metadata !DIExpression()) #8, !dbg !17518
  call void @llvm.dbg.declare(metadata !749, metadata !11261, metadata !DIExpression()) #8, !dbg !17518
  store i32 1, i32* %tmp.i, align 4, !dbg !17518
  %10 = load i32, i32* %tmp.i, align 4, !dbg !17518
  call void @llvm.dbg.declare(metadata !749, metadata !11262, metadata !DIExpression()) #8, !dbg !17519
  call void @llvm.dbg.declare(metadata !749, metadata !11268, metadata !DIExpression()) #8, !dbg !17519
  store i32 1, i32* %tmp8.i, align 4, !dbg !17519
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !17519
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !17520
  call void @arch_local_irq_restore(i64 %12) #14, !dbg !17520
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !17521, !srcloc !11272
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !17522
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !17522
  %rlock.i21 = bitcast %union.anon.2* %14 to %struct.raw_spinlock*, !dbg !17522
  ret i32 1, !dbg !17523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_rx_interrupt(i32 %irq, i8* %dev_id) #3 !dbg !17524 {
entry:
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  %queue = alloca %struct.netfront_queue*, align 8
  %dev = alloca %struct.net_device*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !17525, metadata !DIExpression()), !dbg !17526
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !17527, metadata !DIExpression()), !dbg !17528
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue, metadata !17529, metadata !DIExpression()), !dbg !17530
  %0 = load i8*, i8** %dev_id.addr, align 8, !dbg !17531
  %1 = bitcast i8* %0 to %struct.netfront_queue*, !dbg !17531
  store %struct.netfront_queue* %1, %struct.netfront_queue** %queue, align 8, !dbg !17530
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !17532, metadata !DIExpression()), !dbg !17533
  %2 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !17534
  %info = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %2, i32 0, i32 2, !dbg !17535
  %3 = load %struct.netfront_info*, %struct.netfront_info** %info, align 32, !dbg !17535
  %netdev = getelementptr inbounds %struct.netfront_info, %struct.netfront_info* %3, i32 0, i32 1, !dbg !17536
  %4 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !17536
  store %struct.net_device* %4, %struct.net_device** %dev, align 8, !dbg !17533
  %5 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !17537
  %call = call zeroext i1 @netif_carrier_ok(%struct.net_device* %5) #12, !dbg !17537
  br i1 %call, label %land.rhs, label %land.end, !dbg !17537

land.rhs:                                         ; preds = %entry
  %6 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !17537
  %rx = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %6, i32 0, i32 20, !dbg !17537
  %sring = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx, i32 0, i32 3, !dbg !17537
  %7 = load %struct.xen_netif_rx_sring*, %struct.xen_netif_rx_sring** %sring, align 8, !dbg !17537
  %rsp_prod = getelementptr inbounds %struct.xen_netif_rx_sring, %struct.xen_netif_rx_sring* %7, i32 0, i32 2, !dbg !17537
  %8 = load i32, i32* %rsp_prod, align 4, !dbg !17537
  %9 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !17537
  %rx1 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %9, i32 0, i32 20, !dbg !17537
  %rsp_cons = getelementptr inbounds %struct.xen_netif_rx_front_ring, %struct.xen_netif_rx_front_ring* %rx1, i32 0, i32 1, !dbg !17537
  %10 = load i32, i32* %rsp_cons, align 4, !dbg !17537
  %sub = sub i32 %8, %10, !dbg !17537
  %tobool = icmp ne i32 %sub, 0, !dbg !17537
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %11 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ], !dbg !17539
  %lnot = xor i1 %11, true, !dbg !17537
  %lnot2 = xor i1 %lnot, true, !dbg !17537
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !17537
  %conv = sext i32 %lnot.ext to i64, !dbg !17537
  %tobool3 = icmp ne i64 %conv, 0, !dbg !17537
  br i1 %tobool3, label %if.then, label %if.end, !dbg !17540

if.then:                                          ; preds = %land.end
  %12 = load %struct.netfront_queue*, %struct.netfront_queue** %queue, align 8, !dbg !17541
  %napi = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %12, i32 0, i32 4, !dbg !17542
  call void @napi_schedule(%struct.napi_struct* %napi) #12, !dbg !17543
  br label %if.end, !dbg !17543

if.end:                                           ; preds = %if.then, %land.end
  ret i32 1, !dbg !17544
}

; Function Attrs: noredzone
declare dso_local void @unbind_from_irqhandler(i32, i8*) #1

; Function Attrs: noredzone
declare dso_local i32 @xenbus_free_evtchn(%struct.xenbus_device*, i32) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xennet_interrupt(i32 %irq, i8* %dev_id) #3 !dbg !17545 {
entry:
  %irq.addr = alloca i32, align 4
  %dev_id.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !17546, metadata !DIExpression()), !dbg !17547
  store i8* %dev_id, i8** %dev_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev_id.addr, metadata !17548, metadata !DIExpression()), !dbg !17549
  %0 = load i32, i32* %irq.addr, align 4, !dbg !17550
  %1 = load i8*, i8** %dev_id.addr, align 8, !dbg !17551
  %call = call i32 @xennet_tx_interrupt(i32 %0, i8* %1) #12, !dbg !17552
  %2 = load i32, i32* %irq.addr, align 4, !dbg !17553
  %3 = load i8*, i8** %dev_id.addr, align 8, !dbg !17554
  %call1 = call i32 @xennet_rx_interrupt(i32 %2, i8* %3) #12, !dbg !17555
  ret i32 1, !dbg !17556
}

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #3 !dbg !17557 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !15484, metadata !DIExpression()), !dbg !17558
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !15497, metadata !DIExpression()), !dbg !17561
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !15499, metadata !DIExpression()), !dbg !17562
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !15501, metadata !DIExpression()), !dbg !17563
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !15503, metadata !DIExpression()), !dbg !17564
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !15509, metadata !DIExpression()), !dbg !17566
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !15515, metadata !DIExpression()), !dbg !17568
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !15524, metadata !DIExpression()), !dbg !17571
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !15526, metadata !DIExpression()), !dbg !17572
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15528, metadata !DIExpression()), !dbg !17573
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !15530, metadata !DIExpression()), !dbg !17574
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !15532, metadata !DIExpression()), !dbg !17575
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !15534, metadata !DIExpression()), !dbg !17576
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !15536, metadata !DIExpression()), !dbg !17577
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !15538, metadata !DIExpression()), !dbg !17578
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !17579, metadata !DIExpression()), !dbg !17580
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !17581, metadata !DIExpression()), !dbg !17582
  %0 = load i64, i64* %size.addr, align 8, !dbg !17583
  %1 = load i32, i32* %flags.addr, align 4, !dbg !17584
  %or = or i32 %1, 256, !dbg !17585
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !17586
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #8, !dbg !17587
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !17588

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !17589
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !17590
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !17591

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !17592
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !17593
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !17594
  %call.i.i = call i32 @get_order(i64 %7) #15, !dbg !17595
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !17575
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !17596
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !17597
  %10 = load i32, i32* %order.i.i, align 4, !dbg !17598
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !17599
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !17600
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !17601
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !17602
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !17602
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !17602
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !17602
  call void @llvm.assume(i1 %maskcond.i.i.i) #8, !dbg !17602
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !17603
  br label %kmalloc.exit, !dbg !17603

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !17604
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17605
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !17605
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !17606

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !17607
  br label %kmalloc_index.exit.i, !dbg !17607

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17608
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !17609
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !17610

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !17611
  br label %kmalloc_index.exit.i, !dbg !17611

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17612
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !17613
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !17614

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17615
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !17616
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !17617

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !17618
  br label %kmalloc_index.exit.i, !dbg !17618

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17619
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !17620
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !17621

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17622
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !17623
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !17624

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !17625
  br label %kmalloc_index.exit.i, !dbg !17625

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17626
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !17627
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !17628

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !17629
  br label %kmalloc_index.exit.i, !dbg !17629

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17630
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !17631
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !17632

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !17633
  br label %kmalloc_index.exit.i, !dbg !17633

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17634
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !17635
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !17636

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !17637
  br label %kmalloc_index.exit.i, !dbg !17637

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17638
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !17639
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !17640

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !17641
  br label %kmalloc_index.exit.i, !dbg !17641

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17642
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !17643
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !17644

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !17645
  br label %kmalloc_index.exit.i, !dbg !17645

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17646
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !17647
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !17648

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !17649
  br label %kmalloc_index.exit.i, !dbg !17649

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17650
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !17651
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !17652

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !17653
  br label %kmalloc_index.exit.i, !dbg !17653

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17654
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !17655
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !17656

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !17657
  br label %kmalloc_index.exit.i, !dbg !17657

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17658
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !17659
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !17660

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !17661
  br label %kmalloc_index.exit.i, !dbg !17661

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17662
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !17663
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !17664

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !17665
  br label %kmalloc_index.exit.i, !dbg !17665

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17666
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !17667
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !17668

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !17669
  br label %kmalloc_index.exit.i, !dbg !17669

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17670
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !17671
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !17672

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !17673
  br label %kmalloc_index.exit.i, !dbg !17673

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17674
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !17675
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !17676

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !17677
  br label %kmalloc_index.exit.i, !dbg !17677

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17678
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !17679
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !17680

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !17681
  br label %kmalloc_index.exit.i, !dbg !17681

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17682
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !17683
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !17684

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !17685
  br label %kmalloc_index.exit.i, !dbg !17685

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17686
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !17687
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !17688

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !17689
  br label %kmalloc_index.exit.i, !dbg !17689

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17690
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !17691
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !17692

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !17693
  br label %kmalloc_index.exit.i, !dbg !17693

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17694
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !17695
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !17696

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !17697
  br label %kmalloc_index.exit.i, !dbg !17697

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17698
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !17699
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !17700

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !17701
  br label %kmalloc_index.exit.i, !dbg !17701

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17702
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !17703
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !17704

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !17705
  br label %kmalloc_index.exit.i, !dbg !17705

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17706
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !17707
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !17708

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !17709
  br label %kmalloc_index.exit.i, !dbg !17709

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17710
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !17711
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !17712

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !17713
  br label %kmalloc_index.exit.i, !dbg !17713

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17714
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !17715
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !17716

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !17717
  br label %kmalloc_index.exit.i, !dbg !17717

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !17718
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !17719
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !17720

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !17721
  br label %kmalloc_index.exit.i, !dbg !17721

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0), i32 382, i32 0, i64 12) #8, !dbg !17722, !srcloc !15732
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 235) #8, !dbg !17723, !srcloc !15736
  unreachable, !dbg !17724

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !17725
  store i32 %45, i32* %index.i, align 4, !dbg !17726
  %46 = load i32, i32* %index.i, align 4, !dbg !17727
  %tobool.i = icmp ne i32 %46, 0, !dbg !17727
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !17728

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !17729
  br label %kmalloc.exit, !dbg !17729

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !17730
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !17731
  %and.i.i = and i32 %48, 17, !dbg !17731
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !17731
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !17731
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !17731
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !17731
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !17732

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !17733
  br label %kmalloc_type.exit.i, !dbg !17733

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !17734
  %and2.i.i = and i32 %49, 1, !dbg !17735
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !17734
  %50 = zext i1 %tobool3.i.i to i64, !dbg !17734
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !17734
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !17736
  br label %kmalloc_type.exit.i, !dbg !17736

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !17737
  %idxprom.i = zext i32 %51 to i64, !dbg !17738
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !17738
  %52 = load i32, i32* %index.i, align 4, !dbg !17739
  %idxprom6.i = zext i32 %52 to i64, !dbg !17738
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !17738
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !17738
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !17740
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !17741
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !17742
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !17743
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !17744
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !17744
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !17744
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !17744
  call void @llvm.assume(i1 %maskcond.i.i) #8, !dbg !17744
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !17563
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !17745
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !17746
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !17747
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !17748
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !17749
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !17750
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !17751
  store i8* %62, i8** %retval.i, align 8, !dbg !17752
  br label %kmalloc.exit, !dbg !17752

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !17753
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !17754
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !17755
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !17755
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !17755
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !17755
  call void @llvm.assume(i1 %maskcond.i) #8, !dbg !17755
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !17756
  br label %kmalloc.exit, !dbg !17756

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !17757
  ret i8* %65, !dbg !17758
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @napi_synchronize(%struct.napi_struct* %n) #3 !dbg !17759 {
entry:
  %n.addr = alloca %struct.napi_struct*, align 8
  store %struct.napi_struct* %n, %struct.napi_struct** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.napi_struct** %n.addr, metadata !17764, metadata !DIExpression()), !dbg !17765
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !17766, !srcloc !17768
  ret void, !dbg !17769
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_release_tx_bufs(%struct.netfront_queue* %queue) #3 !dbg !17770 {
entry:
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !16755, metadata !DIExpression()), !dbg !17771
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %skb = alloca %struct.sk_buff*, align 8
  %i = alloca i32, align 4
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !17776, metadata !DIExpression()), !dbg !17777
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !17778, metadata !DIExpression()), !dbg !17779
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17780, metadata !DIExpression()), !dbg !17781
  store i32 0, i32* %i, align 4, !dbg !17782
  br label %for.cond, !dbg !17783

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !17784
  %conv = sext i32 %0 to i64, !dbg !17784
  %cmp = icmp ult i64 %conv, 256, !dbg !17785
  br i1 %cmp, label %for.body, label %for.end, !dbg !17786

for.body:                                         ; preds = %for.cond
  %1 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17787
  %tx_skbs = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %1, i32 0, i32 14, !dbg !17789
  %2 = load i32, i32* %i, align 4, !dbg !17790
  %idxprom = sext i32 %2 to i64, !dbg !17787
  %arrayidx = getelementptr [256 x %union.skb_entry], [256 x %union.skb_entry]* %tx_skbs, i64 0, i64 %idxprom, !dbg !17787
  %call = call i32 @skb_entry_is_link(%union.skb_entry* %arrayidx) #12, !dbg !17791
  %tobool = icmp ne i32 %call, 0, !dbg !17791
  br i1 %tobool, label %if.then, label %if.end, !dbg !17792

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !17793

if.end:                                           ; preds = %for.body
  %3 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17794
  %tx_skbs2 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %3, i32 0, i32 14, !dbg !17795
  %4 = load i32, i32* %i, align 4, !dbg !17796
  %idxprom3 = sext i32 %4 to i64, !dbg !17794
  %arrayidx4 = getelementptr [256 x %union.skb_entry], [256 x %union.skb_entry]* %tx_skbs2, i64 0, i64 %idxprom3, !dbg !17794
  %skb5 = bitcast %union.skb_entry* %arrayidx4 to %struct.sk_buff**, !dbg !17797
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb5, align 8, !dbg !17797
  store %struct.sk_buff* %5, %struct.sk_buff** %skb, align 8, !dbg !17798
  %6 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17799
  %grant_tx_page = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %6, i32 0, i32 17, !dbg !17800
  %7 = load i32, i32* %i, align 4, !dbg !17801
  %idxprom6 = sext i32 %7 to i64, !dbg !17799
  %arrayidx7 = getelementptr [256 x %struct.page*], [256 x %struct.page*]* %grant_tx_page, i64 0, i64 %idxprom6, !dbg !17799
  %8 = load %struct.page*, %struct.page** %arrayidx7, align 8, !dbg !17799
  call void @get_page(%struct.page* %8) #12, !dbg !17802
  %9 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17803
  %grant_tx_ref = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %9, i32 0, i32 16, !dbg !17804
  %10 = load i32, i32* %i, align 4, !dbg !17805
  %idxprom8 = sext i32 %10 to i64, !dbg !17803
  %arrayidx9 = getelementptr [256 x i32], [256 x i32]* %grant_tx_ref, i64 0, i64 %idxprom8, !dbg !17803
  %11 = load i32, i32* %arrayidx9, align 4, !dbg !17803
  %12 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17806
  %grant_tx_page10 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %12, i32 0, i32 17, !dbg !17806
  %13 = load i32, i32* %i, align 4, !dbg !17806
  %idxprom11 = sext i32 %13 to i64, !dbg !17806
  %arrayidx12 = getelementptr [256 x %struct.page*], [256 x %struct.page*]* %grant_tx_page10, i64 0, i64 %idxprom11, !dbg !17806
  %14 = load %struct.page*, %struct.page** %arrayidx12, align 8, !dbg !17806
  store %struct.page* %14, %struct.page** %page.addr.i, align 8
  %15 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !17807
  %16 = load i64, i64* @vmemmap_base, align 8, !dbg !17807
  %17 = inttoptr i64 %16 to %struct.page*, !dbg !17807
  %sub.ptr.lhs.cast.i = ptrtoint %struct.page* %15 to i64, !dbg !17807
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %16, !dbg !17807
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 64, !dbg !17807
  %shl.i = shl i64 %sub.ptr.div.i, 12, !dbg !17807
  %18 = load i64, i64* @page_offset_base, align 8, !dbg !17807
  %add.i = add i64 %shl.i, %18, !dbg !17807
  %19 = inttoptr i64 %add.i to i8*, !dbg !17807
  %20 = ptrtoint i8* %19 to i64, !dbg !17808
  call void @gnttab_end_foreign_access(i32 %11, i32 4, i64 %20) #12, !dbg !17809
  %21 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17810
  %grant_tx_page14 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %21, i32 0, i32 17, !dbg !17811
  %22 = load i32, i32* %i, align 4, !dbg !17812
  %idxprom15 = sext i32 %22 to i64, !dbg !17810
  %arrayidx16 = getelementptr [256 x %struct.page*], [256 x %struct.page*]* %grant_tx_page14, i64 0, i64 %idxprom15, !dbg !17810
  store %struct.page* null, %struct.page** %arrayidx16, align 8, !dbg !17813
  %23 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17814
  %grant_tx_ref17 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %23, i32 0, i32 16, !dbg !17815
  %24 = load i32, i32* %i, align 4, !dbg !17816
  %idxprom18 = sext i32 %24 to i64, !dbg !17814
  %arrayidx19 = getelementptr [256 x i32], [256 x i32]* %grant_tx_ref17, i64 0, i64 %idxprom18, !dbg !17814
  store i32 0, i32* %arrayidx19, align 4, !dbg !17817
  %25 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17818
  %tx_skb_freelist = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %25, i32 0, i32 18, !dbg !17819
  %26 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17820
  %tx_skbs20 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %26, i32 0, i32 14, !dbg !17821
  %arraydecay = getelementptr inbounds [256 x %union.skb_entry], [256 x %union.skb_entry]* %tx_skbs20, i64 0, i64 0, !dbg !17820
  %27 = load i32, i32* %i, align 4, !dbg !17822
  %conv21 = trunc i32 %27 to i16, !dbg !17822
  call void @add_id_to_freelist(i32* %tx_skb_freelist, %union.skb_entry* %arraydecay, i16 zeroext %conv21) #12, !dbg !17823
  %28 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17824
  call void @dev_kfree_skb_irq(%struct.sk_buff* %28) #12, !dbg !17825
  br label %for.inc, !dbg !17826

for.inc:                                          ; preds = %if.end, %if.then
  %29 = load i32, i32* %i, align 4, !dbg !17827
  %inc = add i32 %29, 1, !dbg !17827
  store i32 %inc, i32* %i, align 4, !dbg !17827
  br label %for.cond, !dbg !17828, !llvm.loop !17829

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_release_rx_bufs(%struct.netfront_queue* %queue) #3 !dbg !17832 {
entry:
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !16755, metadata !DIExpression()), !dbg !17833
  %queue.addr = alloca %struct.netfront_queue*, align 8
  %id = alloca i32, align 4
  %ref = alloca i32, align 4
  %skb = alloca %struct.sk_buff*, align 8
  %page = alloca %struct.page*, align 8
  store %struct.netfront_queue* %queue, %struct.netfront_queue** %queue.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netfront_queue** %queue.addr, metadata !17838, metadata !DIExpression()), !dbg !17839
  call void @llvm.dbg.declare(metadata i32* %id, metadata !17840, metadata !DIExpression()), !dbg !17841
  call void @llvm.dbg.declare(metadata i32* %ref, metadata !17842, metadata !DIExpression()), !dbg !17843
  %0 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17844
  %rx_lock = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %0, i32 0, i32 19, !dbg !17845
  call void @spin_lock_bh(%struct.spinlock* %rx_lock) #12, !dbg !17846
  store i32 0, i32* %id, align 4, !dbg !17847
  br label %for.cond, !dbg !17848

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %id, align 4, !dbg !17849
  %conv = sext i32 %1 to i64, !dbg !17849
  %cmp = icmp ult i64 %conv, 256, !dbg !17850
  br i1 %cmp, label %for.body, label %for.end, !dbg !17851

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.sk_buff** %skb, metadata !17852, metadata !DIExpression()), !dbg !17853
  call void @llvm.dbg.declare(metadata %struct.page** %page, metadata !17854, metadata !DIExpression()), !dbg !17855
  %2 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17856
  %rx_skbs = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %2, i32 0, i32 23, !dbg !17857
  %3 = load i32, i32* %id, align 4, !dbg !17858
  %idxprom = sext i32 %3 to i64, !dbg !17856
  %arrayidx = getelementptr [256 x %struct.sk_buff*], [256 x %struct.sk_buff*]* %rx_skbs, i64 0, i64 %idxprom, !dbg !17856
  %4 = load %struct.sk_buff*, %struct.sk_buff** %arrayidx, align 8, !dbg !17856
  store %struct.sk_buff* %4, %struct.sk_buff** %skb, align 8, !dbg !17859
  %5 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17860
  %tobool = icmp ne %struct.sk_buff* %5, null, !dbg !17860
  br i1 %tobool, label %if.end, label %if.then, !dbg !17862

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !17863

if.end:                                           ; preds = %for.body
  %6 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17864
  %grant_rx_ref = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %6, i32 0, i32 25, !dbg !17865
  %7 = load i32, i32* %id, align 4, !dbg !17866
  %idxprom2 = sext i32 %7 to i64, !dbg !17864
  %arrayidx3 = getelementptr [256 x i32], [256 x i32]* %grant_rx_ref, i64 0, i64 %idxprom2, !dbg !17864
  %8 = load i32, i32* %arrayidx3, align 4, !dbg !17864
  store i32 %8, i32* %ref, align 4, !dbg !17867
  %9 = load i32, i32* %ref, align 4, !dbg !17868
  %cmp4 = icmp eq i32 %9, 0, !dbg !17870
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !17871

if.then6:                                         ; preds = %if.end
  br label %for.inc, !dbg !17872

if.end7:                                          ; preds = %if.end
  %10 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17873
  %call = call i8* @skb_end_pointer(%struct.sk_buff* %10) #12, !dbg !17873
  %11 = bitcast i8* %call to %struct.skb_shared_info*, !dbg !17874
  %frags = getelementptr inbounds %struct.skb_shared_info, %struct.skb_shared_info* %11, i32 0, i32 12, !dbg !17874
  %arrayidx8 = getelementptr [17 x %struct.bio_vec], [17 x %struct.bio_vec]* %frags, i64 0, i64 0, !dbg !17873
  %call9 = call %struct.page* @skb_frag_page(%struct.bio_vec* %arrayidx8) #12, !dbg !17875
  store %struct.page* %call9, %struct.page** %page, align 8, !dbg !17876
  %12 = load %struct.page*, %struct.page** %page, align 8, !dbg !17877
  call void @get_page(%struct.page* %12) #12, !dbg !17878
  %13 = load i32, i32* %ref, align 4, !dbg !17879
  %14 = load %struct.page*, %struct.page** %page, align 8, !dbg !17880
  store %struct.page* %14, %struct.page** %page.addr.i, align 8
  %15 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !17881
  %16 = load i64, i64* @vmemmap_base, align 8, !dbg !17881
  %17 = inttoptr i64 %16 to %struct.page*, !dbg !17881
  %sub.ptr.lhs.cast.i = ptrtoint %struct.page* %15 to i64, !dbg !17881
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %16, !dbg !17881
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 64, !dbg !17881
  %shl.i = shl i64 %sub.ptr.div.i, 12, !dbg !17881
  %18 = load i64, i64* @page_offset_base, align 8, !dbg !17881
  %add.i = add i64 %shl.i, %18, !dbg !17881
  %19 = inttoptr i64 %add.i to i8*, !dbg !17881
  %20 = ptrtoint i8* %19 to i64, !dbg !17882
  call void @gnttab_end_foreign_access(i32 %13, i32 0, i64 %20) #12, !dbg !17883
  %21 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17884
  %grant_rx_ref11 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %21, i32 0, i32 25, !dbg !17885
  %22 = load i32, i32* %id, align 4, !dbg !17886
  %idxprom12 = sext i32 %22 to i64, !dbg !17884
  %arrayidx13 = getelementptr [256 x i32], [256 x i32]* %grant_rx_ref11, i64 0, i64 %idxprom12, !dbg !17884
  store i32 0, i32* %arrayidx13, align 4, !dbg !17887
  %23 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17888
  call void @kfree_skb(%struct.sk_buff* %23) #12, !dbg !17889
  br label %for.inc, !dbg !17890

for.inc:                                          ; preds = %if.end7, %if.then6, %if.then
  %24 = load i32, i32* %id, align 4, !dbg !17891
  %inc = add i32 %24, 1, !dbg !17891
  store i32 %inc, i32* %id, align 4, !dbg !17891
  br label %for.cond, !dbg !17892, !llvm.loop !17893

for.end:                                          ; preds = %for.cond
  %25 = load %struct.netfront_queue*, %struct.netfront_queue** %queue.addr, align 8, !dbg !17895
  %rx_lock14 = getelementptr inbounds %struct.netfront_queue, %struct.netfront_queue* %25, i32 0, i32 19, !dbg !17896
  call void @spin_unlock_bh(%struct.spinlock* %rx_lock14) #12, !dbg !17897
  ret void, !dbg !17898
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_end_access(i32 %ref, i8* %page) #3 !dbg !17899 {
entry:
  %ref.addr = alloca i32, align 4
  %page.addr = alloca i8*, align 8
  store i32 %ref, i32* %ref.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ref.addr, metadata !17902, metadata !DIExpression()), !dbg !17903
  store i8* %page, i8** %page.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %page.addr, metadata !17904, metadata !DIExpression()), !dbg !17905
  %0 = load i32, i32* %ref.addr, align 4, !dbg !17906
  %cmp = icmp ne i32 %0, 0, !dbg !17908
  br i1 %cmp, label %if.then, label %if.end, !dbg !17909

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %ref.addr, align 4, !dbg !17910
  %2 = load i8*, i8** %page.addr, align 8, !dbg !17911
  %3 = ptrtoint i8* %2 to i64, !dbg !17912
  call void @gnttab_end_foreign_access(i32 %1, i32 0, i64 %3) #12, !dbg !17913
  br label %if.end, !dbg !17913

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !17914
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @skb_entry_is_link(%union.skb_entry* %list) #3 !dbg !17915 {
entry:
  %list.addr = alloca %union.skb_entry*, align 8
  store %union.skb_entry* %list, %union.skb_entry** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %union.skb_entry** %list.addr, metadata !17920, metadata !DIExpression()), !dbg !17921
  br label %do.body, !dbg !17922

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !17923

do.end:                                           ; preds = %do.body
  %0 = load %union.skb_entry*, %union.skb_entry** %list.addr, align 8, !dbg !17925
  %skb = bitcast %union.skb_entry* %0 to %struct.sk_buff**, !dbg !17926
  %1 = load %struct.sk_buff*, %struct.sk_buff** %skb, align 8, !dbg !17926
  %2 = ptrtoint %struct.sk_buff* %1 to i64, !dbg !17927
  %3 = load i64, i64* @page_offset_base, align 8, !dbg !17928
  %cmp = icmp ult i64 %2, %3, !dbg !17929
  %conv = zext i1 %cmp to i32, !dbg !17929
  ret i32 %conv, !dbg !17930
}

; Function Attrs: noredzone
declare dso_local void @gnttab_end_foreign_access(i32, i32, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #3 !dbg !17931 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !17932, metadata !DIExpression()), !dbg !17934
  %0 = load i64, i64* %__edi, align 8, !dbg !17934
  store i64 %0, i64* %__edi, align 8, !dbg !17934
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !17935, metadata !DIExpression()), !dbg !17934
  %1 = load i64, i64* %__esi, align 8, !dbg !17934
  store i64 %1, i64* %__esi, align 8, !dbg !17934
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !17936, metadata !DIExpression()), !dbg !17934
  %2 = load i64, i64* %__edx, align 8, !dbg !17934
  store i64 %2, i64* %__edx, align 8, !dbg !17934
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !17937, metadata !DIExpression()), !dbg !17934
  %3 = load i64, i64* %__ecx, align 8, !dbg !17934
  store i64 %3, i64* %__ecx, align 8, !dbg !17934
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !17938, metadata !DIExpression()), !dbg !17934
  %4 = load i64, i64* %__eax, align 8, !dbg !17934
  store i64 %4, i64* %__eax, align 8, !dbg !17934
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !17934
  %6 = call i64 @llvm.read_register.i64(metadata !10557), !dbg !17934
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #8, !dbg !17934, !srcloc !17939
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !17934
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !17934
  store i64 %asmresult, i64* %__eax, align 8, !dbg !17934
  call void @llvm.write_register.i64(metadata !10557, i64 %asmresult1), !dbg !17934
  ret void, !dbg !17940
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xennet_bus_close(%struct.xenbus_device* %dev) #3 !dbg !17941 {
entry:
  %dev.addr = alloca %struct.xenbus_device*, align 8
  %ret = alloca i32, align 4
  %__ret = alloca i64, align 8
  %__cond = alloca i8, align 1
  %tmp = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret23 = alloca i64, align 8
  %__int = alloca i64, align 8
  %__cond25 = alloca i8, align 1
  %tmp45 = alloca i32, align 4
  %tmp56 = alloca i64, align 8
  %tmp58 = alloca i64, align 8
  %__ret70 = alloca i64, align 8
  %__cond77 = alloca i8, align 1
  %tmp96 = alloca i32, align 4
  %__wq_entry106 = alloca %struct.wait_queue_entry, align 8
  %__ret107 = alloca i64, align 8
  %__int109 = alloca i64, align 8
  %__cond111 = alloca i8, align 1
  %tmp130 = alloca i32, align 4
  %tmp144 = alloca i64, align 8
  %tmp146 = alloca i64, align 8
  store %struct.xenbus_device* %dev, %struct.xenbus_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xenbus_device** %dev.addr, metadata !17942, metadata !DIExpression()), !dbg !17943
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17944, metadata !DIExpression()), !dbg !17945
  %0 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !17946
  %otherend = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %0, i32 0, i32 2, !dbg !17948
  %1 = load i8*, i8** %otherend, align 8, !dbg !17948
  %call = call i32 @xenbus_read_driver_state(i8* %1) #12, !dbg !17949
  %cmp = icmp eq i32 %call, 6, !dbg !17950
  br i1 %cmp, label %if.then, label %if.end, !dbg !17951

if.then:                                          ; preds = %entry
  br label %do.end151, !dbg !17952

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !17953

do.body:                                          ; preds = %do.cond, %if.end
  %2 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !17954
  %call1 = call i32 @xenbus_switch_state(%struct.xenbus_device* %2, i32 5) #12, !dbg !17956
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !17957, metadata !DIExpression()), !dbg !17959
  store i64 1250, i64* %__ret, align 8, !dbg !17959
  br label %do.body2, !dbg !17959

do.body2:                                         ; preds = %do.body
  br label %do.body3, !dbg !17960

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !17962

do.end:                                           ; preds = %do.body3
  br label %do.end4, !dbg !17960

do.end4:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8* %__cond, metadata !17964, metadata !DIExpression()), !dbg !17967
  %3 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !17967
  %otherend5 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %3, i32 0, i32 2, !dbg !17967
  %4 = load i8*, i8** %otherend5, align 8, !dbg !17967
  %call6 = call i32 @xenbus_read_driver_state(i8* %4) #12, !dbg !17967
  %cmp7 = icmp eq i32 %call6, 5, !dbg !17967
  br i1 %cmp7, label %lor.end, label %lor.lhs.false, !dbg !17967

lor.lhs.false:                                    ; preds = %do.end4
  %5 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !17967
  %otherend8 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %5, i32 0, i32 2, !dbg !17967
  %6 = load i8*, i8** %otherend8, align 8, !dbg !17967
  %call9 = call i32 @xenbus_read_driver_state(i8* %6) #12, !dbg !17967
  %cmp10 = icmp eq i32 %call9, 6, !dbg !17967
  br i1 %cmp10, label %lor.end, label %lor.rhs, !dbg !17967

lor.rhs:                                          ; preds = %lor.lhs.false
  %7 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !17967
  %otherend11 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %7, i32 0, i32 2, !dbg !17967
  %8 = load i8*, i8** %otherend11, align 8, !dbg !17967
  %call12 = call i32 @xenbus_read_driver_state(i8* %8) #12, !dbg !17967
  %cmp13 = icmp eq i32 %call12, 0, !dbg !17967
  br label %lor.end, !dbg !17967

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %do.end4
  %9 = phi i1 [ true, %lor.lhs.false ], [ true, %do.end4 ], [ %cmp13, %lor.rhs ]
  %frombool = zext i1 %9 to i8, !dbg !17967
  store i8 %frombool, i8* %__cond, align 1, !dbg !17967
  %10 = load i8, i8* %__cond, align 1, !dbg !17968
  %tobool = trunc i8 %10 to i1, !dbg !17968
  br i1 %tobool, label %land.lhs.true, label %if.end16, !dbg !17968

land.lhs.true:                                    ; preds = %lor.end
  %11 = load i64, i64* %__ret, align 8, !dbg !17968
  %tobool14 = icmp ne i64 %11, 0, !dbg !17968
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !17967

if.then15:                                        ; preds = %land.lhs.true
  store i64 1, i64* %__ret, align 8, !dbg !17968
  br label %if.end16, !dbg !17968

if.end16:                                         ; preds = %if.then15, %land.lhs.true, %lor.end
  %12 = load i8, i8* %__cond, align 1, !dbg !17967
  %tobool17 = trunc i8 %12 to i1, !dbg !17967
  br i1 %tobool17, label %lor.end20, label %lor.rhs18, !dbg !17967

lor.rhs18:                                        ; preds = %if.end16
  %13 = load i64, i64* %__ret, align 8, !dbg !17967
  %tobool19 = icmp ne i64 %13, 0, !dbg !17967
  %lnot = xor i1 %tobool19, true, !dbg !17967
  br label %lor.end20, !dbg !17967

lor.end20:                                        ; preds = %lor.rhs18, %if.end16
  %14 = phi i1 [ true, %if.end16 ], [ %lnot, %lor.rhs18 ]
  %lor.ext = zext i1 %14 to i32, !dbg !17967
  store i32 %lor.ext, i32* %tmp, align 4, !dbg !17968
  %15 = load i32, i32* %tmp, align 4, !dbg !17967
  %tobool21 = icmp ne i32 %15, 0, !dbg !17970
  br i1 %tobool21, label %if.end57, label %if.then22, !dbg !17959

if.then22:                                        ; preds = %lor.end20
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !17971, metadata !DIExpression()), !dbg !17973
  call void @llvm.dbg.declare(metadata i64* %__ret23, metadata !17974, metadata !DIExpression()), !dbg !17973
  store i64 1250, i64* %__ret23, align 8, !dbg !17973
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #12, !dbg !17973
  br label %for.cond, !dbg !17973

for.cond:                                         ; preds = %if.end54, %if.then22
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !17975, metadata !DIExpression()), !dbg !17979
  %call24 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* @module_wq, %struct.wait_queue_entry* %__wq_entry, i32 2) #12, !dbg !17979
  store i64 %call24, i64* %__int, align 8, !dbg !17979
  call void @llvm.dbg.declare(metadata i8* %__cond25, metadata !17980, metadata !DIExpression()), !dbg !17983
  %16 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !17983
  %otherend26 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %16, i32 0, i32 2, !dbg !17983
  %17 = load i8*, i8** %otherend26, align 8, !dbg !17983
  %call27 = call i32 @xenbus_read_driver_state(i8* %17) #12, !dbg !17983
  %cmp28 = icmp eq i32 %call27, 5, !dbg !17983
  br i1 %cmp28, label %lor.end37, label %lor.lhs.false29, !dbg !17983

lor.lhs.false29:                                  ; preds = %for.cond
  %18 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !17983
  %otherend30 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %18, i32 0, i32 2, !dbg !17983
  %19 = load i8*, i8** %otherend30, align 8, !dbg !17983
  %call31 = call i32 @xenbus_read_driver_state(i8* %19) #12, !dbg !17983
  %cmp32 = icmp eq i32 %call31, 6, !dbg !17983
  br i1 %cmp32, label %lor.end37, label %lor.rhs33, !dbg !17983

lor.rhs33:                                        ; preds = %lor.lhs.false29
  %20 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !17983
  %otherend34 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %20, i32 0, i32 2, !dbg !17983
  %21 = load i8*, i8** %otherend34, align 8, !dbg !17983
  %call35 = call i32 @xenbus_read_driver_state(i8* %21) #12, !dbg !17983
  %cmp36 = icmp eq i32 %call35, 0, !dbg !17983
  br label %lor.end37, !dbg !17983

lor.end37:                                        ; preds = %lor.rhs33, %lor.lhs.false29, %for.cond
  %22 = phi i1 [ true, %lor.lhs.false29 ], [ true, %for.cond ], [ %cmp36, %lor.rhs33 ]
  %frombool39 = zext i1 %22 to i8, !dbg !17983
  store i8 %frombool39, i8* %__cond25, align 1, !dbg !17983
  %23 = load i8, i8* %__cond25, align 1, !dbg !17984
  %tobool40 = trunc i8 %23 to i1, !dbg !17984
  br i1 %tobool40, label %land.lhs.true41, label %if.end44, !dbg !17984

land.lhs.true41:                                  ; preds = %lor.end37
  %24 = load i64, i64* %__ret23, align 8, !dbg !17984
  %tobool42 = icmp ne i64 %24, 0, !dbg !17984
  br i1 %tobool42, label %if.end44, label %if.then43, !dbg !17983

if.then43:                                        ; preds = %land.lhs.true41
  store i64 1, i64* %__ret23, align 8, !dbg !17984
  br label %if.end44, !dbg !17984

if.end44:                                         ; preds = %if.then43, %land.lhs.true41, %lor.end37
  %25 = load i8, i8* %__cond25, align 1, !dbg !17983
  %tobool46 = trunc i8 %25 to i1, !dbg !17983
  br i1 %tobool46, label %lor.end50, label %lor.rhs47, !dbg !17983

lor.rhs47:                                        ; preds = %if.end44
  %26 = load i64, i64* %__ret23, align 8, !dbg !17983
  %tobool48 = icmp ne i64 %26, 0, !dbg !17983
  %lnot49 = xor i1 %tobool48, true, !dbg !17983
  br label %lor.end50, !dbg !17983

lor.end50:                                        ; preds = %lor.rhs47, %if.end44
  %27 = phi i1 [ true, %if.end44 ], [ %lnot49, %lor.rhs47 ]
  %lor.ext51 = zext i1 %27 to i32, !dbg !17983
  store i32 %lor.ext51, i32* %tmp45, align 4, !dbg !17984
  %28 = load i32, i32* %tmp45, align 4, !dbg !17983
  %tobool52 = icmp ne i32 %28, 0, !dbg !17986
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !17979

if.then53:                                        ; preds = %lor.end50
  br label %for.end, !dbg !17986

if.end54:                                         ; preds = %lor.end50
  %29 = load i64, i64* %__ret23, align 8, !dbg !17979
  %call55 = call i64 @schedule_timeout(i64 %29) #12, !dbg !17979
  store i64 %call55, i64* %__ret23, align 8, !dbg !17979
  br label %for.cond, !dbg !17987, !llvm.loop !17988

for.end:                                          ; preds = %if.then53
  call void @finish_wait(%struct.wait_queue_head* @module_wq, %struct.wait_queue_entry* %__wq_entry) #12, !dbg !17973
  br label %__out, !dbg !17973

__out:                                            ; preds = %for.end
  call void @llvm.dbg.label(metadata !17990), !dbg !17973
  %30 = load i64, i64* %__ret23, align 8, !dbg !17973
  store i64 %30, i64* %tmp56, align 8, !dbg !17973
  %31 = load i64, i64* %tmp56, align 8, !dbg !17973
  store i64 %31, i64* %__ret, align 8, !dbg !17970
  br label %if.end57, !dbg !17970

if.end57:                                         ; preds = %__out, %lor.end20
  %32 = load i64, i64* %__ret, align 8, !dbg !17959
  store i64 %32, i64* %tmp58, align 8, !dbg !17970
  %33 = load i64, i64* %tmp58, align 8, !dbg !17959
  %conv = trunc i64 %33 to i32, !dbg !17991
  store i32 %conv, i32* %ret, align 4, !dbg !17992
  br label %do.cond, !dbg !17993

do.cond:                                          ; preds = %if.end57
  %34 = load i32, i32* %ret, align 4, !dbg !17994
  %tobool59 = icmp ne i32 %34, 0, !dbg !17995
  %lnot60 = xor i1 %tobool59, true, !dbg !17995
  br i1 %lnot60, label %do.body, label %do.end61, !dbg !17993, !llvm.loop !17996

do.end61:                                         ; preds = %do.cond
  %35 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !17998
  %otherend62 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %35, i32 0, i32 2, !dbg !18000
  %36 = load i8*, i8** %otherend62, align 8, !dbg !18000
  %call63 = call i32 @xenbus_read_driver_state(i8* %36) #12, !dbg !18001
  %cmp64 = icmp eq i32 %call63, 6, !dbg !18002
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !18003

if.then66:                                        ; preds = %do.end61
  br label %do.end151, !dbg !18004

if.end67:                                         ; preds = %do.end61
  br label %do.body68, !dbg !18005

do.body68:                                        ; preds = %do.cond148, %if.end67
  %37 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !18006
  %call69 = call i32 @xenbus_switch_state(%struct.xenbus_device* %37, i32 6) #12, !dbg !18008
  call void @llvm.dbg.declare(metadata i64* %__ret70, metadata !18009, metadata !DIExpression()), !dbg !18011
  store i64 1250, i64* %__ret70, align 8, !dbg !18011
  br label %do.body71, !dbg !18011

do.body71:                                        ; preds = %do.body68
  br label %do.body72, !dbg !18012

do.body72:                                        ; preds = %do.body71
  br label %do.end74, !dbg !18014

do.end74:                                         ; preds = %do.body72
  br label %do.end76, !dbg !18012

do.end76:                                         ; preds = %do.end74
  call void @llvm.dbg.declare(metadata i8* %__cond77, metadata !18016, metadata !DIExpression()), !dbg !18019
  %38 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !18019
  %otherend78 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %38, i32 0, i32 2, !dbg !18019
  %39 = load i8*, i8** %otherend78, align 8, !dbg !18019
  %call79 = call i32 @xenbus_read_driver_state(i8* %39) #12, !dbg !18019
  %cmp80 = icmp eq i32 %call79, 6, !dbg !18019
  br i1 %cmp80, label %lor.end87, label %lor.rhs82, !dbg !18019

lor.rhs82:                                        ; preds = %do.end76
  %40 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !18019
  %otherend83 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %40, i32 0, i32 2, !dbg !18019
  %41 = load i8*, i8** %otherend83, align 8, !dbg !18019
  %call84 = call i32 @xenbus_read_driver_state(i8* %41) #12, !dbg !18019
  %cmp85 = icmp eq i32 %call84, 0, !dbg !18019
  br label %lor.end87, !dbg !18019

lor.end87:                                        ; preds = %lor.rhs82, %do.end76
  %42 = phi i1 [ true, %do.end76 ], [ %cmp85, %lor.rhs82 ]
  %frombool89 = zext i1 %42 to i8, !dbg !18019
  store i8 %frombool89, i8* %__cond77, align 1, !dbg !18019
  %43 = load i8, i8* %__cond77, align 1, !dbg !18020
  %tobool90 = trunc i8 %43 to i1, !dbg !18020
  br i1 %tobool90, label %land.lhs.true92, label %if.end95, !dbg !18020

land.lhs.true92:                                  ; preds = %lor.end87
  %44 = load i64, i64* %__ret70, align 8, !dbg !18020
  %tobool93 = icmp ne i64 %44, 0, !dbg !18020
  br i1 %tobool93, label %if.end95, label %if.then94, !dbg !18019

if.then94:                                        ; preds = %land.lhs.true92
  store i64 1, i64* %__ret70, align 8, !dbg !18020
  br label %if.end95, !dbg !18020

if.end95:                                         ; preds = %if.then94, %land.lhs.true92, %lor.end87
  %45 = load i8, i8* %__cond77, align 1, !dbg !18019
  %tobool97 = trunc i8 %45 to i1, !dbg !18019
  br i1 %tobool97, label %lor.end102, label %lor.rhs99, !dbg !18019

lor.rhs99:                                        ; preds = %if.end95
  %46 = load i64, i64* %__ret70, align 8, !dbg !18019
  %tobool100 = icmp ne i64 %46, 0, !dbg !18019
  %lnot101 = xor i1 %tobool100, true, !dbg !18019
  br label %lor.end102, !dbg !18019

lor.end102:                                       ; preds = %lor.rhs99, %if.end95
  %47 = phi i1 [ true, %if.end95 ], [ %lnot101, %lor.rhs99 ]
  %lor.ext103 = zext i1 %47 to i32, !dbg !18019
  store i32 %lor.ext103, i32* %tmp96, align 4, !dbg !18020
  %48 = load i32, i32* %tmp96, align 4, !dbg !18019
  %tobool104 = icmp ne i32 %48, 0, !dbg !18022
  br i1 %tobool104, label %if.end145, label %if.then105, !dbg !18011

if.then105:                                       ; preds = %lor.end102
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry106, metadata !18023, metadata !DIExpression()), !dbg !18025
  call void @llvm.dbg.declare(metadata i64* %__ret107, metadata !18026, metadata !DIExpression()), !dbg !18025
  store i64 1250, i64* %__ret107, align 8, !dbg !18025
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry106, i32 0) #12, !dbg !18025
  br label %for.cond108, !dbg !18025

for.cond108:                                      ; preds = %if.end140, %if.then105
  call void @llvm.dbg.declare(metadata i64* %__int109, metadata !18027, metadata !DIExpression()), !dbg !18031
  %call110 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* @module_wq, %struct.wait_queue_entry* %__wq_entry106, i32 2) #12, !dbg !18031
  store i64 %call110, i64* %__int109, align 8, !dbg !18031
  call void @llvm.dbg.declare(metadata i8* %__cond111, metadata !18032, metadata !DIExpression()), !dbg !18035
  %49 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !18035
  %otherend112 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %49, i32 0, i32 2, !dbg !18035
  %50 = load i8*, i8** %otherend112, align 8, !dbg !18035
  %call113 = call i32 @xenbus_read_driver_state(i8* %50) #12, !dbg !18035
  %cmp114 = icmp eq i32 %call113, 6, !dbg !18035
  br i1 %cmp114, label %lor.end121, label %lor.rhs116, !dbg !18035

lor.rhs116:                                       ; preds = %for.cond108
  %51 = load %struct.xenbus_device*, %struct.xenbus_device** %dev.addr, align 8, !dbg !18035
  %otherend117 = getelementptr inbounds %struct.xenbus_device, %struct.xenbus_device* %51, i32 0, i32 2, !dbg !18035
  %52 = load i8*, i8** %otherend117, align 8, !dbg !18035
  %call118 = call i32 @xenbus_read_driver_state(i8* %52) #12, !dbg !18035
  %cmp119 = icmp eq i32 %call118, 0, !dbg !18035
  br label %lor.end121, !dbg !18035

lor.end121:                                       ; preds = %lor.rhs116, %for.cond108
  %53 = phi i1 [ true, %for.cond108 ], [ %cmp119, %lor.rhs116 ]
  %frombool123 = zext i1 %53 to i8, !dbg !18035
  store i8 %frombool123, i8* %__cond111, align 1, !dbg !18035
  %54 = load i8, i8* %__cond111, align 1, !dbg !18036
  %tobool124 = trunc i8 %54 to i1, !dbg !18036
  br i1 %tobool124, label %land.lhs.true126, label %if.end129, !dbg !18036

land.lhs.true126:                                 ; preds = %lor.end121
  %55 = load i64, i64* %__ret107, align 8, !dbg !18036
  %tobool127 = icmp ne i64 %55, 0, !dbg !18036
  br i1 %tobool127, label %if.end129, label %if.then128, !dbg !18035

if.then128:                                       ; preds = %land.lhs.true126
  store i64 1, i64* %__ret107, align 8, !dbg !18036
  br label %if.end129, !dbg !18036

if.end129:                                        ; preds = %if.then128, %land.lhs.true126, %lor.end121
  %56 = load i8, i8* %__cond111, align 1, !dbg !18035
  %tobool131 = trunc i8 %56 to i1, !dbg !18035
  br i1 %tobool131, label %lor.end136, label %lor.rhs133, !dbg !18035

lor.rhs133:                                       ; preds = %if.end129
  %57 = load i64, i64* %__ret107, align 8, !dbg !18035
  %tobool134 = icmp ne i64 %57, 0, !dbg !18035
  %lnot135 = xor i1 %tobool134, true, !dbg !18035
  br label %lor.end136, !dbg !18035

lor.end136:                                       ; preds = %lor.rhs133, %if.end129
  %58 = phi i1 [ true, %if.end129 ], [ %lnot135, %lor.rhs133 ]
  %lor.ext137 = zext i1 %58 to i32, !dbg !18035
  store i32 %lor.ext137, i32* %tmp130, align 4, !dbg !18036
  %59 = load i32, i32* %tmp130, align 4, !dbg !18035
  %tobool138 = icmp ne i32 %59, 0, !dbg !18038
  br i1 %tobool138, label %if.then139, label %if.end140, !dbg !18031

if.then139:                                       ; preds = %lor.end136
  br label %for.end142, !dbg !18038

if.end140:                                        ; preds = %lor.end136
  %60 = load i64, i64* %__ret107, align 8, !dbg !18031
  %call141 = call i64 @schedule_timeout(i64 %60) #12, !dbg !18031
  store i64 %call141, i64* %__ret107, align 8, !dbg !18031
  br label %for.cond108, !dbg !18039, !llvm.loop !18040

for.end142:                                       ; preds = %if.then139
  call void @finish_wait(%struct.wait_queue_head* @module_wq, %struct.wait_queue_entry* %__wq_entry106) #12, !dbg !18025
  br label %__out143, !dbg !18025

__out143:                                         ; preds = %for.end142
  call void @llvm.dbg.label(metadata !18042), !dbg !18025
  %61 = load i64, i64* %__ret107, align 8, !dbg !18025
  store i64 %61, i64* %tmp144, align 8, !dbg !18025
  %62 = load i64, i64* %tmp144, align 8, !dbg !18025
  store i64 %62, i64* %__ret70, align 8, !dbg !18022
  br label %if.end145, !dbg !18022

if.end145:                                        ; preds = %__out143, %lor.end102
  %63 = load i64, i64* %__ret70, align 8, !dbg !18011
  store i64 %63, i64* %tmp146, align 8, !dbg !18022
  %64 = load i64, i64* %tmp146, align 8, !dbg !18011
  %conv147 = trunc i64 %64 to i32, !dbg !18043
  store i32 %conv147, i32* %ret, align 4, !dbg !18044
  br label %do.cond148, !dbg !18045

do.cond148:                                       ; preds = %if.end145
  %65 = load i32, i32* %ret, align 4, !dbg !18046
  %tobool149 = icmp ne i32 %65, 0, !dbg !18047
  %lnot150 = xor i1 %tobool149, true, !dbg !18047
  br i1 %lnot150, label %do.body68, label %do.end151, !dbg !18045, !llvm.loop !18048

do.end151:                                        ; preds = %if.then, %if.then66, %do.cond148
  ret void, !dbg !18050
}

; Function Attrs: noredzone
declare dso_local void @unregister_netdev(%struct.net_device*) #1

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable willreturn }
attributes #5 = { alwaysinline noredzone nounwind sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { argmemonly nounwind willreturn }
attributes #10 = { nounwind willreturn }
attributes #11 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noredzone }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind }
attributes #15 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!10557}
!llvm.module.flags = !{!10558, !10559, !10560, !10561}
!llvm.ident = !{!10562}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_max_queues", scope: !2, file: !3, line: 65, type: !10556, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !10070, globals: !10386, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/xen-netfront.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !12, !17, !24, !30, !35, !41, !48, !68, !75, !109, !150, !181, !188, !219, !232, !240, !246, !253, !257, !261, !268, !274, !9736, !7768, !2505, !5348, !5540, !5633, !4628, !5827, !7421, !6729, !6620, !6639, !4137, !4464, !4544, !4620, !4800, !4992, !5043, !5120, !9898, !9910, !9917, !9981, !9986, !9995, !10003, !10008, !10029, !10033, !10040, !10049, !10056, !10063}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "xen_domain_type", file: !6, line: 5, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/xen/xen.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "XEN_NATIVE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "XEN_PV_DOMAIN", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "XEN_HVM_DOMAIN", value: 2, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !13, line: 41, baseType: !7, size: 32, elements: !14)
!13 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!14 = !{!15, !16}
!15 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!16 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !18, line: 15, baseType: !7, size: 32, elements: !19)
!18 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!19 = !{!20, !21, !22, !23}
!20 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!21 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!22 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!23 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !25, line: 546, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !31, line: 65, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34}
!33 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !36, line: 16, baseType: !7, size: 32, elements: !37)
!36 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!37 = !{!38, !39, !40}
!38 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!39 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!41 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !42, line: 115, baseType: !43, size: 32, elements: !44)
!42 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!43 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!44 = !{!45, !46, !47}
!45 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!46 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!47 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !42, line: 836, baseType: !7, size: 32, elements: !49)
!49 = !{!50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67}
!50 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!53 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!54 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!55 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!56 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!57 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!58 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!59 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!60 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!61 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!62 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!63 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!64 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!65 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!66 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!67 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !42, line: 860, baseType: !7, size: 32, elements: !69)
!69 = !{!70, !71, !72, !73, !74}
!70 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!71 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!72 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!73 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!74 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!75 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !76, line: 170, baseType: !7, size: 32, elements: !77)
!76 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!77 = !{!78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108}
!78 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!79 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!80 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!81 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!82 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!83 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!84 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!85 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!86 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!87 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!88 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!89 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!90 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!91 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!92 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!93 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!94 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!95 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!96 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!97 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!103 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!104 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!105 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!109 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !76, line: 204, baseType: !7, size: 32, elements: !110)
!110 = !{!111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149}
!111 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!112 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!113 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!129 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!130 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!131 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!143 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!144 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!149 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !151, line: 369, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!152 = !{!153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180}
!153 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!157 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!159 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!160 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!161 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!162 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!163 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!164 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!165 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!166 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!167 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!168 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!169 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!170 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!171 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!172 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!173 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!174 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!175 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!176 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!177 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!178 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!179 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!180 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!181 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !151, line: 578, baseType: !7, size: 32, elements: !182)
!182 = !{!183, !184, !185, !186, !187}
!183 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!184 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!188 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !76, line: 130, baseType: !7, size: 32, elements: !189)
!189 = !{!190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218}
!190 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!208 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!209 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!210 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!211 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!212 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!213 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!214 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!215 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!216 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!217 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!218 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!219 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !220, line: 585, baseType: !7, size: 32, elements: !221)
!220 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!221 = !{!222, !223, !224, !225, !226, !227, !228, !229, !230, !231}
!222 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!223 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!224 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!225 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!226 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!227 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!228 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!229 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!230 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!231 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!232 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !220, line: 602, baseType: !7, size: 32, elements: !233)
!233 = !{!234, !235, !236, !237, !238, !239}
!234 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!235 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!236 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!237 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!238 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!239 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!240 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !220, line: 615, baseType: !7, size: 32, elements: !241)
!241 = !{!242, !243, !244, !245}
!242 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!243 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !220, line: 626, baseType: !7, size: 32, elements: !247)
!247 = !{!248, !249, !250, !251, !252}
!248 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!249 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!250 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!251 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!252 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!253 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !220, line: 638, baseType: !7, size: 32, elements: !254)
!254 = !{!255, !256}
!255 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!256 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!257 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !220, line: 647, baseType: !7, size: 32, elements: !258)
!258 = !{!259, !260}
!259 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!260 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!261 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !262, line: 54, baseType: !7, size: 32, elements: !263)
!262 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!263 = !{!264, !265, !266, !267}
!264 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!265 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!266 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!267 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!268 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !42, line: 423, baseType: !7, size: 32, elements: !269)
!269 = !{!270, !271, !272, !273}
!270 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!271 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!272 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!273 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!274 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !275, file: !42, line: 2085, baseType: !7, size: 32, elements: !9891)
!275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !42, line: 1858, size: 15808, elements: !276)
!276 = !{!277, !282, !305, !322, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !339, !347, !348, !349, !350, !351, !352, !353, !354, !355, !381, !391, !392, !393, !398, !399, !403, !406, !8543, !9057, !9198, !9230, !9231, !9232, !9233, !9234, !9235, !9236, !9237, !9238, !9239, !9240, !9241, !9242, !9243, !9244, !9245, !9246, !9247, !9248, !9249, !9250, !9251, !9252, !9253, !9254, !9255, !9256, !9261, !9262, !9263, !9264, !9265, !9266, !9267, !9270, !9273, !9274, !9277, !9280, !9281, !9294, !9295, !9296, !9297, !9298, !9299, !9306, !9307, !9716, !9717, !9718, !9719, !9720, !9721, !9722, !9723, !9724, !9727, !9728, !9729, !9730, !9731, !9732, !9733, !9734, !9735, !9740, !9741, !9742, !9743, !9780, !9781, !9783, !9784, !9853, !9854, !9855, !9856, !9862, !9864, !9867, !9870, !9872, !9873, !9874, !9875, !9876, !9880, !9883}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !275, file: !42, line: 1859, baseType: !278, size: 128)
!278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 128, elements: !280)
!279 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!280 = !{!281}
!281 = !DISubrange(count: 16)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !275, file: !42, line: 1860, baseType: !283, size: 64, offset: 128)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !42, line: 938, size: 384, elements: !285)
!285 = !{!286, !294, !300, !302}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !284, file: !42, line: 939, baseType: !287, size: 128)
!287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !288, line: 186, size: 128, elements: !289)
!288 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!289 = !{!290, !292}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !287, file: !288, line: 187, baseType: !291, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !287, file: !288, line: 187, baseType: !293, size: 64, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !284, file: !42, line: 940, baseType: !295, size: 128, offset: 128)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !288, line: 178, size: 128, elements: !296)
!296 = !{!297, !299}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !295, file: !288, line: 179, baseType: !298, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !295, file: !288, line: 179, baseType: !298, size: 64, offset: 64)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !284, file: !42, line: 941, baseType: !301, size: 64, offset: 256)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !284, file: !42, line: 942, baseType: !303, size: 64, offset: 320)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !279)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !275, file: !42, line: 1861, baseType: !306, size: 64, offset: 192)
!306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !307, size: 64)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !42, line: 930, size: 128, elements: !308)
!308 = !{!309, !318}
!309 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !307, file: !42, line: 931, baseType: !310, size: 128, align: 64)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !288, line: 216, size: 128, align: 64, elements: !311)
!311 = !{!312, !314}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !310, file: !288, line: 217, baseType: !313, size: 64)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !310, file: !288, line: 218, baseType: !315, size: 64, offset: 64)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DISubroutineType(types: !317)
!317 = !{null, !313}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !307, file: !42, line: 932, baseType: !319, offset: 128)
!319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, elements: !320)
!320 = !{!321}
!321 = !DISubrange(count: -1)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !275, file: !42, line: 1866, baseType: !323, size: 64, offset: 256)
!323 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !275, file: !42, line: 1867, baseType: !323, size: 64, offset: 320)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !275, file: !42, line: 1868, baseType: !323, size: 64, offset: 384)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !275, file: !42, line: 1869, baseType: !43, size: 32, offset: 448)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !275, file: !42, line: 1877, baseType: !323, size: 64, offset: 512)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !275, file: !42, line: 1879, baseType: !295, size: 128, offset: 576)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !275, file: !42, line: 1880, baseType: !295, size: 128, offset: 704)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !275, file: !42, line: 1881, baseType: !295, size: 128, offset: 832)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !275, file: !42, line: 1882, baseType: !295, size: 128, offset: 960)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !275, file: !42, line: 1883, baseType: !295, size: 128, offset: 1088)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !275, file: !42, line: 1884, baseType: !295, size: 128, offset: 1216)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !275, file: !42, line: 1889, baseType: !335, size: 256, offset: 1344)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !275, file: !42, line: 1886, size: 256, elements: !336)
!336 = !{!337, !338}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !335, file: !42, line: 1887, baseType: !295, size: 128)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !335, file: !42, line: 1888, baseType: !295, size: 128, offset: 128)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !275, file: !42, line: 1891, baseType: !340, size: 64, offset: 1600)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !341, line: 12, baseType: !342)
!341 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !343, line: 23, baseType: !344)
!343 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !345, line: 31, baseType: !346)
!345 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!346 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !275, file: !42, line: 1892, baseType: !340, size: 64, offset: 1664)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !275, file: !42, line: 1893, baseType: !340, size: 64, offset: 1728)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !275, file: !42, line: 1894, baseType: !340, size: 64, offset: 1792)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !275, file: !42, line: 1895, baseType: !340, size: 64, offset: 1856)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !275, file: !42, line: 1896, baseType: !340, size: 64, offset: 1920)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !275, file: !42, line: 1897, baseType: !340, size: 64, offset: 1984)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !275, file: !42, line: 1899, baseType: !43, size: 32, offset: 2048)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !275, file: !42, line: 1900, baseType: !43, size: 32, offset: 2080)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !275, file: !42, line: 1902, baseType: !356, size: 1472, offset: 2112)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !42, line: 169, size: 1472, elements: !357)
!357 = !{!358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !356, file: !42, line: 170, baseType: !323, size: 64)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !356, file: !42, line: 171, baseType: !323, size: 64, offset: 64)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !356, file: !42, line: 172, baseType: !323, size: 64, offset: 128)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !356, file: !42, line: 173, baseType: !323, size: 64, offset: 192)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !356, file: !42, line: 174, baseType: !323, size: 64, offset: 256)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !356, file: !42, line: 175, baseType: !323, size: 64, offset: 320)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !356, file: !42, line: 176, baseType: !323, size: 64, offset: 384)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !356, file: !42, line: 177, baseType: !323, size: 64, offset: 448)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !356, file: !42, line: 178, baseType: !323, size: 64, offset: 512)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !356, file: !42, line: 179, baseType: !323, size: 64, offset: 576)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !356, file: !42, line: 180, baseType: !323, size: 64, offset: 640)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !356, file: !42, line: 181, baseType: !323, size: 64, offset: 704)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !356, file: !42, line: 182, baseType: !323, size: 64, offset: 768)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !356, file: !42, line: 183, baseType: !323, size: 64, offset: 832)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !356, file: !42, line: 184, baseType: !323, size: 64, offset: 896)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !356, file: !42, line: 185, baseType: !323, size: 64, offset: 960)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !356, file: !42, line: 186, baseType: !323, size: 64, offset: 1024)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !356, file: !42, line: 187, baseType: !323, size: 64, offset: 1088)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !356, file: !42, line: 188, baseType: !323, size: 64, offset: 1152)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !356, file: !42, line: 189, baseType: !323, size: 64, offset: 1216)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !356, file: !42, line: 190, baseType: !323, size: 64, offset: 1280)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !356, file: !42, line: 191, baseType: !323, size: 64, offset: 1344)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !356, file: !42, line: 192, baseType: !323, size: 64, offset: 1408)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !275, file: !42, line: 1904, baseType: !382, size: 64, offset: 3584)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !383, line: 13, baseType: !384)
!383 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!384 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !288, line: 175, baseType: !385)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !288, line: 173, size: 64, elements: !386)
!386 = !{!387}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !385, file: !288, line: 174, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !343, line: 22, baseType: !389)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !345, line: 30, baseType: !390)
!390 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !275, file: !42, line: 1905, baseType: !382, size: 64, offset: 3648)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !275, file: !42, line: 1906, baseType: !382, size: 64, offset: 3712)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !275, file: !42, line: 1909, baseType: !394, size: 32, offset: 3776)
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !288, line: 168, baseType: !395)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !288, line: 166, size: 32, elements: !396)
!396 = !{!397}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !395, file: !288, line: 167, baseType: !43, size: 32)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !275, file: !42, line: 1910, baseType: !394, size: 32, offset: 3808)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !275, file: !42, line: 1913, baseType: !400, size: 64, offset: 3840)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !402)
!402 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !42, line: 1913, flags: DIFlagFwdDecl)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !275, file: !42, line: 1914, baseType: !404, size: 64, offset: 3904)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !42, line: 1914, flags: DIFlagFwdDecl)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !275, file: !42, line: 1916, baseType: !407, size: 64, offset: 3968)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !42, line: 1283, size: 4416, elements: !410)
!410 = !{!411, !415, !419, !420, !421, !8016, !8020, !8024, !8028, !8029, !8033, !8034, !8145, !8150, !8154, !8158, !8162, !8194, !8198, !8202, !8207, !8211, !8212, !8217, !8221, !8225, !8229, !8230, !8250, !8254, !8269, !8275, !8279, !8288, !8292, !8293, !8297, !8301, !8305, !8309, !8313, !8317, !8321, !8325, !8340, !8344, !8386, !8390, !8395, !8399, !8403, !8407, !8416, !8417, !8421, !8427, !8428, !8432, !8436, !8440, !8444, !8445, !8449, !8450, !8503, !8523, !8527, !8533, !8539}
!411 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !409, file: !42, line: 1284, baseType: !412, size: 64)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = !DISubroutineType(types: !414)
!414 = !{!43, !301}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !409, file: !42, line: 1285, baseType: !416, size: 64, offset: 64)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DISubroutineType(types: !418)
!418 = !{null, !301}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !409, file: !42, line: 1286, baseType: !412, size: 64, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !409, file: !42, line: 1287, baseType: !412, size: 64, offset: 192)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !409, file: !42, line: 1288, baseType: !422, size: 64, offset: 256)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = !DISubroutineType(types: !424)
!424 = !{!425, !426, !301}
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !42, line: 120, baseType: !41)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !428, line: 713, size: 1600, elements: !429)
!428 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!429 = !{!430, !452, !7911, !7916, !7920, !7929, !7930, !7931, !7932, !7933, !7934, !7936, !7937, !7938, !7939, !7940, !7941, !7942, !7944, !7945, !7946, !7947, !7948, !7949, !7950, !7951, !7952, !7953, !7954, !7955, !7956, !7957, !7958, !7959, !7960, !7961, !7962, !7963, !7964, !7965, !7966, !7967, !7968, !7969, !7970, !7980, !7981, !7982, !7983, !7984, !7985, !7990, !7995, !8000, !8001, !8002, !8003, !8004, !8005, !8006, !8007, !8008, !8010, !8011, !8013, !8014, !8015}
!430 = !DIDerivedType(tag: DW_TAG_member, scope: !427, file: !428, line: 714, baseType: !431, size: 192)
!431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !427, file: !428, line: 714, size: 192, elements: !432)
!432 = !{!433, !443, !451}
!433 = !DIDerivedType(tag: DW_TAG_member, scope: !431, file: !428, line: 715, baseType: !434, size: 192)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !431, file: !428, line: 715, size: 192, elements: !435)
!435 = !{!436, !437, !438}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !434, file: !428, line: 717, baseType: !426, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !434, file: !428, line: 718, baseType: !426, size: 64, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_member, scope: !434, file: !428, line: 720, baseType: !439, size: 64, offset: 128)
!439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !434, file: !428, line: 720, size: 64, elements: !440)
!440 = !{!441, !442}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !439, file: !428, line: 721, baseType: !301, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !439, file: !428, line: 726, baseType: !323, size: 64)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !431, file: !428, line: 729, baseType: !444, size: 192, align: 64)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !445, line: 24, size: 192, align: 64, elements: !446)
!445 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!446 = !{!447, !448, !450}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !444, file: !445, line: 25, baseType: !323, size: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !444, file: !445, line: 26, baseType: !449, size: 64, offset: 64)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !444, file: !445, line: 27, baseType: !449, size: 64, offset: 128)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !431, file: !428, line: 730, baseType: !295, size: 128)
!452 = !DIDerivedType(tag: DW_TAG_member, scope: !427, file: !428, line: 733, baseType: !453, size: 64, offset: 192)
!453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !427, file: !428, line: 733, size: 64, elements: !454)
!454 = !{!455, !7910}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !453, file: !428, line: 734, baseType: !456, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !458, line: 347, size: 5568, elements: !459)
!458 = !DIFile(filename: "./include/net/sock.h", directory: "/home/lizy2001/genbc/linux")
!459 = !{!460, !7657, !7664, !7665, !7666, !7667, !7668, !7669, !7676, !7677, !7678, !7679, !7680, !7687, !7700, !7701, !7702, !7703, !7704, !7705, !7706, !7707, !7712, !7713, !7714, !7715, !7716, !7717, !7718, !7719, !7720, !7721, !7722, !7723, !7724, !7725, !7726, !7727, !7728, !7729, !7730, !7731, !7732, !7733, !7734, !7735, !7736, !7737, !7738, !7739, !7740, !7741, !7742, !7743, !7744, !7745, !7746, !7747, !7748, !7749, !7750, !7751, !7752, !7753, !7754, !7755, !7756, !7757, !7758, !7759, !7760, !7761, !7883, !7884, !7887, !7888, !7889, !7890, !7891, !7892, !7893, !7894, !7909}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "__sk_common", scope: !457, file: !458, line: 352, baseType: !461, size: 1088)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_common", file: !458, line: 162, size: 1088, elements: !462)
!462 = !{!463, !476, !486, !497, !498, !501, !502, !503, !504, !505, !506, !511, !7624, !7625, !7626, !7627, !7628, !7635, !7637, !7642, !7643, !7649, !7650, !7651}
!463 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !458, line: 166, baseType: !464, size: 64)
!464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !461, file: !458, line: 166, size: 64, elements: !465)
!465 = !{!466, !468}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "skc_addrpair", scope: !464, file: !458, line: 167, baseType: !467, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_typedef, name: "__addrpair", file: !458, line: 115, baseType: !344)
!468 = !DIDerivedType(tag: DW_TAG_member, scope: !464, file: !458, line: 168, baseType: !469, size: 64)
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !464, file: !458, line: 168, size: 64, elements: !470)
!470 = !{!471, !475}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "skc_daddr", scope: !469, file: !458, line: 169, baseType: !472, size: 32)
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !473, line: 32, baseType: !474)
!473 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !345, line: 27, baseType: !7)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_saddr", scope: !469, file: !458, line: 170, baseType: !472, size: 32, offset: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !458, line: 173, baseType: !477, size: 32, offset: 64)
!477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !461, file: !458, line: 173, size: 32, elements: !478)
!478 = !{!479, !480}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "skc_hash", scope: !477, file: !458, line: 174, baseType: !7, size: 32)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "skc_u16hashes", scope: !477, file: !458, line: 175, baseType: !481, size: 32)
!481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 32, elements: !484)
!482 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !345, line: 24, baseType: !483)
!483 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!484 = !{!485}
!485 = !DISubrange(count: 2)
!486 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !458, line: 178, baseType: !487, size: 32, offset: 96)
!487 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !461, file: !458, line: 178, size: 32, elements: !488)
!488 = !{!489, !491}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portpair", scope: !487, file: !458, line: 179, baseType: !490, size: 32)
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__portpair", file: !458, line: 114, baseType: !474)
!491 = !DIDerivedType(tag: DW_TAG_member, scope: !487, file: !458, line: 180, baseType: !492, size: 32)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !487, file: !458, line: 180, size: 32, elements: !493)
!493 = !{!494, !496}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dport", scope: !492, file: !458, line: 181, baseType: !495, size: 16)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !473, line: 30, baseType: !482)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "skc_num", scope: !492, file: !458, line: 182, baseType: !482, size: 16, offset: 16)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "skc_family", scope: !461, file: !458, line: 186, baseType: !483, size: 16, offset: 128)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "skc_state", scope: !461, file: !458, line: 187, baseType: !499, size: 8, offset: 144)
!499 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !500)
!500 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuse", scope: !461, file: !458, line: 188, baseType: !500, size: 4, offset: 152, flags: DIFlagBitField, extraData: i64 152)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuseport", scope: !461, file: !458, line: 189, baseType: !500, size: 1, offset: 156, flags: DIFlagBitField, extraData: i64 152)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "skc_ipv6only", scope: !461, file: !458, line: 190, baseType: !500, size: 1, offset: 157, flags: DIFlagBitField, extraData: i64 152)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net_refcnt", scope: !461, file: !458, line: 191, baseType: !500, size: 1, offset: 158, flags: DIFlagBitField, extraData: i64 152)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bound_dev_if", scope: !461, file: !458, line: 192, baseType: !43, size: 32, offset: 160)
!506 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !458, line: 193, baseType: !507, size: 128, offset: 192)
!507 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !461, file: !458, line: 193, size: 128, elements: !508)
!508 = !{!509, !510}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bind_node", scope: !507, file: !458, line: 194, baseType: !287, size: 128)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portaddr_node", scope: !507, file: !458, line: 195, baseType: !287, size: 128)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "skc_prot", scope: !461, file: !458, line: 197, baseType: !512, size: 64, offset: 320)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto", file: !458, line: 1127, size: 3264, elements: !514)
!514 = !{!515, !520, !536, !537, !541, !548, !552, !556, !560, !564, !579, !584, !585, !7484, !7488, !7492, !7493, !7494, !7498, !7499, !7500, !7501, !7502, !7506, !7507, !7513, !7517, !7518, !7519, !7520, !7522, !7523, !7525, !7526, !7527, !7528, !7529, !7530, !7531, !7532, !7533, !7535, !7536, !7537, !7538, !7594, !7607, !7620, !7621, !7622, !7623}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !513, file: !458, line: 1128, baseType: !516, size: 64)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = !DISubroutineType(types: !518)
!518 = !{null, !456, !519}
!519 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "pre_connect", scope: !513, file: !458, line: 1130, baseType: !521, size: 64, offset: 64)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = !DISubroutineType(types: !523)
!523 = !{!43, !456, !524, !43}
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !526, line: 32, size: 128, elements: !527)
!526 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!527 = !{!528, !532}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !525, file: !526, line: 33, baseType: !529, size: 16)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !526, line: 26, baseType: !530)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !531, line: 10, baseType: !483)
!531 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!532 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !525, file: !526, line: 34, baseType: !533, size: 112, offset: 16)
!533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 112, elements: !534)
!534 = !{!535}
!535 = !DISubrange(count: 14)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !513, file: !458, line: 1133, baseType: !521, size: 64, offset: 128)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !513, file: !458, line: 1136, baseType: !538, size: 64, offset: 192)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = !DISubroutineType(types: !540)
!540 = !{!43, !456, !43}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !513, file: !458, line: 1138, baseType: !542, size: 64, offset: 256)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = !DISubroutineType(types: !544)
!544 = !{!456, !456, !43, !545, !546}
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !288, line: 30, baseType: !547)
!547 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !513, file: !458, line: 1141, baseType: !549, size: 64, offset: 320)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = !DISubroutineType(types: !551)
!551 = !{!43, !456, !43, !323}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !513, file: !458, line: 1143, baseType: !553, size: 64, offset: 384)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = !DISubroutineType(types: !555)
!555 = !{!43, !456}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !513, file: !458, line: 1144, baseType: !557, size: 64, offset: 448)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DISubroutineType(types: !559)
!559 = !{null, !456}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !513, file: !458, line: 1145, baseType: !561, size: 64, offset: 512)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DISubroutineType(types: !563)
!563 = !{null, !456, !43}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !513, file: !458, line: 1146, baseType: !565, size: 64, offset: 576)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DISubroutineType(types: !567)
!567 = !{!43, !456, !43, !43, !568, !7}
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "sockptr_t", file: !569, line: 20, baseType: !570)
!569 = !DIFile(filename: "./include/linux/sockptr.h", directory: "/home/lizy2001/genbc/linux")
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !569, line: 14, size: 128, elements: !571)
!571 = !{!572, !578}
!572 = !DIDerivedType(tag: DW_TAG_member, scope: !570, file: !569, line: 15, baseType: !573, size: 64)
!573 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !570, file: !569, line: 15, size: 64, elements: !574)
!574 = !{!575, !577}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "kernel", scope: !573, file: !569, line: 16, baseType: !576, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !573, file: !569, line: 17, baseType: !576, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "is_kernel", scope: !570, file: !569, line: 19, baseType: !546, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !513, file: !458, line: 1149, baseType: !580, size: 64, offset: 640)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{!43, !456, !43, !43, !583, !545}
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "keepalive", scope: !513, file: !458, line: 1152, baseType: !561, size: 64, offset: 704)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !513, file: !458, line: 1157, baseType: !586, size: 64, offset: 768)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = !DISubroutineType(types: !588)
!588 = !{!43, !456, !589, !600}
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !526, line: 50, size: 768, elements: !591)
!591 = !{!592, !593, !594, !7475, !7480, !7481, !7482, !7483}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !590, file: !526, line: 51, baseType: !576, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !590, file: !526, line: 52, baseType: !43, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iter", scope: !590, file: !526, line: 53, baseType: !595, size: 320, offset: 128)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !596, line: 29, size: 320, elements: !597)
!596 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!597 = !{!598, !599, !604, !605, !7466}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !595, file: !596, line: 35, baseType: !7, size: 32)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !595, file: !596, line: 36, baseType: !600, size: 64, offset: 64)
!600 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !288, line: 55, baseType: !601)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !602, line: 72, baseType: !603)
!602 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !602, line: 16, baseType: !323)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !595, file: !596, line: 37, baseType: !600, size: 64, offset: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, scope: !595, file: !596, line: 38, baseType: !606, size: 64, offset: 192)
!606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !595, file: !596, line: 38, size: 64, elements: !607)
!607 = !{!608, !616, !623, !7465}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !606, file: !596, line: 39, baseType: !609, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !612, line: 17, size: 128, elements: !613)
!612 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!613 = !{!614, !615}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !611, file: !612, line: 19, baseType: !576, size: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !611, file: !612, line: 20, baseType: !601, size: 64, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !606, file: !596, line: 40, baseType: !617, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !619)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !596, line: 15, size: 128, elements: !620)
!620 = !{!621, !622}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !619, file: !596, line: 16, baseType: !576, size: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !619, file: !596, line: 17, baseType: !600, size: 64, offset: 64)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !606, file: !596, line: 41, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !626)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !627, line: 31, size: 128, elements: !628)
!627 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!628 = !{!629, !7463, !7464}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !626, file: !627, line: 32, baseType: !630, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !632, line: 68, size: 512, align: 128, elements: !633)
!632 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!633 = !{!634, !635, !7455, !7462}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !631, file: !632, line: 69, baseType: !323, size: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, scope: !631, file: !632, line: 77, baseType: !636, size: 320, offset: 64)
!636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !631, file: !632, line: 77, size: 320, elements: !637)
!637 = !{!638, !7342, !7347, !7373, !7381, !7387, !7399, !7454}
!638 = !DIDerivedType(tag: DW_TAG_member, scope: !636, file: !632, line: 78, baseType: !639, size: 320)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !636, file: !632, line: 78, size: 320, elements: !640)
!640 = !{!641, !642, !7340, !7341}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !639, file: !632, line: 84, baseType: !295, size: 128)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !639, file: !632, line: 86, baseType: !643, size: 64, offset: 128)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !645, line: 451, size: 1216, align: 64, elements: !646)
!645 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!646 = !{!647, !7230, !7231, !7232, !7233, !7234, !7235, !7236, !7237, !7238, !7335, !7336, !7337, !7338, !7339}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !644, file: !645, line: 452, baseType: !648, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !645, line: 610, size: 4224, elements: !650)
!650 = !{!651, !653, !654, !662, !669, !670, !7163, !7164, !7165, !7166, !7171, !7172, !7173, !7174, !7175, !7176, !7177, !7178, !7179, !7180, !7181, !7182, !7183, !7184, !7185, !7186, !7187, !7188, !7189, !7190, !7195, !7196, !7197, !7198, !7199, !7200, !7201, !7206, !7214, !7215, !7216, !7226, !7227, !7228, !7229}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !649, file: !645, line: 611, baseType: !652, size: 16)
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !288, line: 19, baseType: !483)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !649, file: !645, line: 612, baseType: !483, size: 16, offset: 16)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !649, file: !645, line: 613, baseType: !655, size: 32, offset: 32)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !656, line: 23, baseType: !657)
!656 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 21, size: 32, elements: !658)
!658 = !{!659}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !657, file: !656, line: 22, baseType: !660, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !288, line: 32, baseType: !661)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !602, line: 49, baseType: !7)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !649, file: !645, line: 614, baseType: !663, size: 32, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !656, line: 28, baseType: !664)
!664 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !656, line: 26, size: 32, elements: !665)
!665 = !{!666}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !664, file: !656, line: 27, baseType: !667, size: 32)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !288, line: 33, baseType: !668)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !602, line: 50, baseType: !7)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !649, file: !645, line: 615, baseType: !7, size: 32, offset: 96)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !649, file: !645, line: 622, baseType: !671, size: 64, offset: 128)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !645, line: 1864, size: 1536, align: 512, elements: !674)
!674 = !{!675, !7040, !7050, !7054, !7060, !7064, !7068, !7072, !7076, !7080, !7084, !7085, !7089, !7093, !7113, !7139, !7143, !7149, !7154, !7158, !7159}
!675 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !673, file: !645, line: 1865, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DISubroutineType(types: !678)
!678 = !{!679, !648, !679, !7}
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !681, line: 89, size: 1536, elements: !682)
!681 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!682 = !{!683, !684, !694, !702, !703, !719, !720, !724, !751, !819, !7025, !7026, !7027, !7032, !7033, !7034}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !680, file: !681, line: 91, baseType: !7, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !680, file: !681, line: 92, baseType: !685, size: 32, offset: 32)
!685 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !686, line: 277, baseType: !687)
!686 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !686, line: 277, size: 32, elements: !688)
!688 = !{!689}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !687, file: !686, line: 277, baseType: !690, size: 32)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !686, line: 70, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !686, line: 65, size: 32, elements: !692)
!692 = !{!693}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !691, file: !686, line: 66, baseType: !7, size: 32)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !680, file: !681, line: 93, baseType: !695, size: 128, offset: 64)
!695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !696, line: 38, size: 128, elements: !697)
!696 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!697 = !{!698, !700}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !695, file: !696, line: 39, baseType: !699, size: 64)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !695, file: !696, line: 39, baseType: !701, size: 64, offset: 64)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !680, file: !681, line: 94, baseType: !679, size: 64, offset: 192)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !680, file: !681, line: 95, baseType: !704, size: 128, offset: 256)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !681, line: 47, size: 128, elements: !705)
!705 = !{!706, !716}
!706 = !DIDerivedType(tag: DW_TAG_member, scope: !704, file: !681, line: 48, baseType: !707, size: 64)
!707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !704, file: !681, line: 48, size: 64, elements: !708)
!708 = !{!709, !715}
!709 = !DIDerivedType(tag: DW_TAG_member, scope: !707, file: !681, line: 49, baseType: !710, size: 64)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !707, file: !681, line: 49, size: 64, elements: !711)
!711 = !{!712, !714}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !710, file: !681, line: 50, baseType: !713, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !343, line: 21, baseType: !474)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !710, file: !681, line: 50, baseType: !713, size: 32, offset: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !707, file: !681, line: 52, baseType: !342, size: 64)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !704, file: !681, line: 54, baseType: !717, size: 64, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !500)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !680, file: !681, line: 96, baseType: !648, size: 64, offset: 384)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !680, file: !681, line: 98, baseType: !721, size: 256, offset: 448)
!721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !500, size: 256, elements: !722)
!722 = !{!723}
!723 = !DISubrange(count: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !680, file: !681, line: 101, baseType: !725, size: 32, offset: 704)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !726, line: 25, size: 32, elements: !727)
!726 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!727 = !{!728}
!728 = !DIDerivedType(tag: DW_TAG_member, scope: !725, file: !726, line: 26, baseType: !729, size: 32)
!729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !725, file: !726, line: 26, size: 32, elements: !730)
!730 = !{!731}
!731 = !DIDerivedType(tag: DW_TAG_member, scope: !729, file: !726, line: 30, baseType: !732, size: 32)
!732 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !729, file: !726, line: 30, size: 32, elements: !733)
!733 = !{!734, !750}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !732, file: !726, line: 31, baseType: !735)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !736, line: 83, baseType: !737)
!736 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !736, line: 71, elements: !738)
!738 = !{!739}
!739 = !DIDerivedType(tag: DW_TAG_member, scope: !737, file: !736, line: 72, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !737, file: !736, line: 72, elements: !741)
!741 = !{!742}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !740, file: !736, line: 73, baseType: !743)
!743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !736, line: 20, elements: !744)
!744 = !{!745}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !743, file: !736, line: 21, baseType: !746)
!746 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !747, line: 25, baseType: !748)
!747 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !747, line: 25, elements: !749)
!749 = !{}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !732, file: !726, line: 32, baseType: !43, size: 32)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !680, file: !681, line: 102, baseType: !752, size: 64, offset: 768)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !754)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !681, line: 135, size: 1024, align: 512, elements: !755)
!755 = !{!756, !760, !761, !768, !774, !778, !782, !786, !787, !791, !795, !807, !813}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !754, file: !681, line: 136, baseType: !757, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DISubroutineType(types: !759)
!759 = !{!43, !679, !7}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !754, file: !681, line: 137, baseType: !757, size: 64, offset: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !754, file: !681, line: 138, baseType: !762, size: 64, offset: 128)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = !DISubroutineType(types: !764)
!764 = !{!43, !765, !767}
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !680)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !754, file: !681, line: 139, baseType: !769, size: 64, offset: 192)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DISubroutineType(types: !771)
!771 = !{!43, !765, !7, !303, !772}
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !704)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !754, file: !681, line: 141, baseType: !775, size: 64, offset: 256)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DISubroutineType(types: !777)
!777 = !{!43, !765}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !754, file: !681, line: 142, baseType: !779, size: 64, offset: 320)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{!43, !679}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !754, file: !681, line: 143, baseType: !783, size: 64, offset: 384)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DISubroutineType(types: !785)
!785 = !{null, !679}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !754, file: !681, line: 144, baseType: !783, size: 64, offset: 448)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !754, file: !681, line: 145, baseType: !788, size: 64, offset: 512)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DISubroutineType(types: !790)
!790 = !{null, !679, !648}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !754, file: !681, line: 146, baseType: !792, size: 64, offset: 576)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DISubroutineType(types: !794)
!794 = !{!583, !679, !583, !43}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !754, file: !681, line: 147, baseType: !796, size: 64, offset: 640)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DISubroutineType(types: !798)
!798 = !{!799, !801}
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !681, line: 18, flags: DIFlagFwdDecl)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !803, line: 8, size: 128, elements: !804)
!803 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!804 = !{!805, !806}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !802, file: !803, line: 9, baseType: !799, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !802, file: !803, line: 10, baseType: !679, size: 64, offset: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !754, file: !681, line: 148, baseType: !808, size: 64, offset: 704)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DISubroutineType(types: !810)
!810 = !{!43, !811, !546}
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !802)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !754, file: !681, line: 149, baseType: !814, size: 64, offset: 768)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DISubroutineType(types: !816)
!816 = !{!679, !679, !817}
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !649)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !680, file: !681, line: 103, baseType: !820, size: 64, offset: 832)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !645, line: 1416, size: 9472, elements: !822)
!822 = !{!823, !824, !827, !828, !829, !832, !878, !6692, !6780, !6863, !6867, !6868, !6869, !6870, !6871, !6872, !6873, !6874, !6879, !6883, !6884, !6885, !6886, !6889, !6890, !6891, !6932, !6958, !6959, !6960, !6961, !6962, !6963, !6966, !6967, !6973, !6974, !6975, !6976, !6977, !6978, !6979, !6994, !6995, !6996, !6997, !6998, !6999, !7000, !7001, !7016, !7017, !7018, !7019, !7020, !7021, !7022, !7023, !7024}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !821, file: !645, line: 1417, baseType: !295, size: 128)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !821, file: !645, line: 1418, baseType: !825, size: 32, offset: 128)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !288, line: 16, baseType: !826)
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !288, line: 13, baseType: !713)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !821, file: !645, line: 1419, baseType: !500, size: 8, offset: 160)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !821, file: !645, line: 1420, baseType: !323, size: 64, offset: 192)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !821, file: !645, line: 1421, baseType: !830, size: 64, offset: 256)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !288, line: 46, baseType: !831)
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !602, line: 88, baseType: !390)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !821, file: !645, line: 1422, baseType: !833, size: 64, offset: 320)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !645, line: 2228, size: 576, elements: !835)
!835 = !{!836, !837, !838, !845, !849, !853, !857, !861, !862, !866, !869, !870, !871, !875, !876, !877}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !834, file: !645, line: 2229, baseType: !303, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !834, file: !645, line: 2230, baseType: !43, size: 32, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !834, file: !645, line: 2238, baseType: !839, size: 64, offset: 128)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DISubroutineType(types: !841)
!841 = !{!43, !842}
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !844, line: 28, flags: DIFlagFwdDecl)
!844 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!845 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !834, file: !645, line: 2239, baseType: !846, size: 64, offset: 192)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !848)
!848 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !645, line: 70, flags: DIFlagFwdDecl)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !834, file: !645, line: 2240, baseType: !850, size: 64, offset: 256)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!679, !833, !43, !303, !576}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !834, file: !645, line: 2242, baseType: !854, size: 64, offset: 320)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DISubroutineType(types: !856)
!856 = !{null, !820}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !834, file: !645, line: 2243, baseType: !858, size: 64, offset: 384)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !860, line: 76, flags: DIFlagFwdDecl)
!860 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!861 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !834, file: !645, line: 2244, baseType: !833, size: 64, offset: 448)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !834, file: !645, line: 2245, baseType: !863, size: 64, offset: 512)
!863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !288, line: 182, size: 64, elements: !864)
!864 = !{!865}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !863, file: !288, line: 183, baseType: !291, size: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !834, file: !645, line: 2247, baseType: !867, offset: 576)
!867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !868, line: 187, elements: !749)
!868 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!869 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !834, file: !645, line: 2248, baseType: !867, offset: 576)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !834, file: !645, line: 2249, baseType: !867, offset: 576)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !834, file: !645, line: 2250, baseType: !872, offset: 576)
!872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !867, elements: !873)
!873 = !{!874}
!874 = !DISubrange(count: 3)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !834, file: !645, line: 2252, baseType: !867, offset: 576)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !834, file: !645, line: 2253, baseType: !867, offset: 576)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !834, file: !645, line: 2254, baseType: !867, offset: 576)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !821, file: !645, line: 1423, baseType: !879, size: 64, offset: 384)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !881)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !645, line: 1935, size: 1472, elements: !882)
!882 = !{!883, !887, !891, !892, !896, !916, !920, !921, !922, !926, !930, !931, !932, !933, !939, !943, !944, !6669, !6670, !6671, !6672, !6676, !6691}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !881, file: !645, line: 1936, baseType: !884, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DISubroutineType(types: !886)
!886 = !{!648, !820}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !881, file: !645, line: 1937, baseType: !888, size: 64, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DISubroutineType(types: !890)
!890 = !{null, !648}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !881, file: !645, line: 1938, baseType: !888, size: 64, offset: 128)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !881, file: !645, line: 1940, baseType: !893, size: 64, offset: 192)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DISubroutineType(types: !895)
!895 = !{null, !648, !43}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !881, file: !645, line: 1941, baseType: !897, size: 64, offset: 256)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = !DISubroutineType(types: !899)
!899 = !{!43, !648, !900}
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !13, line: 51, size: 320, elements: !902)
!902 = !{!903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !901, file: !13, line: 52, baseType: !519, size: 64)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !901, file: !13, line: 54, baseType: !519, size: 64, offset: 64)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !901, file: !13, line: 61, baseType: !830, size: 64, offset: 128)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !901, file: !13, line: 62, baseType: !830, size: 64, offset: 192)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !901, file: !13, line: 64, baseType: !12, size: 32, offset: 256)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !901, file: !13, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !901, file: !13, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !901, file: !13, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !901, file: !13, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !901, file: !13, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !901, file: !13, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !901, file: !13, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !901, file: !13, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !881, file: !645, line: 1942, baseType: !917, size: 64, offset: 320)
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !918, size: 64)
!918 = !DISubroutineType(types: !919)
!919 = !{!43, !648}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !881, file: !645, line: 1943, baseType: !888, size: 64, offset: 384)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !881, file: !645, line: 1944, baseType: !854, size: 64, offset: 448)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !881, file: !645, line: 1945, baseType: !923, size: 64, offset: 512)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DISubroutineType(types: !925)
!925 = !{!43, !820, !43}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !881, file: !645, line: 1946, baseType: !927, size: 64, offset: 576)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{!43, !820}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !881, file: !645, line: 1947, baseType: !927, size: 64, offset: 640)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !881, file: !645, line: 1948, baseType: !927, size: 64, offset: 704)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !881, file: !645, line: 1949, baseType: !927, size: 64, offset: 768)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !881, file: !645, line: 1950, baseType: !934, size: 64, offset: 832)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DISubroutineType(types: !936)
!936 = !{!43, !679, !937}
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !645, line: 57, flags: DIFlagFwdDecl)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !881, file: !645, line: 1951, baseType: !940, size: 64, offset: 896)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DISubroutineType(types: !942)
!942 = !{!43, !820, !545, !583}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !881, file: !645, line: 1952, baseType: !854, size: 64, offset: 960)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !881, file: !645, line: 1954, baseType: !945, size: 64, offset: 1024)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DISubroutineType(types: !947)
!947 = !{!43, !948, !679}
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !950, line: 16, size: 896, elements: !951)
!950 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!951 = !{!952, !953, !954, !955, !956, !957, !958, !959, !966, !988, !989, !6668}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !949, file: !950, line: 17, baseType: !583, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !949, file: !950, line: 18, baseType: !600, size: 64, offset: 64)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !949, file: !950, line: 19, baseType: !600, size: 64, offset: 128)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !949, file: !950, line: 20, baseType: !600, size: 64, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !949, file: !950, line: 21, baseType: !600, size: 64, offset: 256)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !949, file: !950, line: 22, baseType: !830, size: 64, offset: 320)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !949, file: !950, line: 23, baseType: !830, size: 64, offset: 384)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !949, file: !950, line: 24, baseType: !960, size: 192, offset: 448)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !961, line: 53, size: 192, elements: !962)
!961 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!962 = !{!963, !964, !965}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !960, file: !961, line: 54, baseType: !382, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !960, file: !961, line: 55, baseType: !735, offset: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !960, file: !961, line: 59, baseType: !295, size: 128, offset: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !949, file: !950, line: 25, baseType: !967, size: 64, offset: 640)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !969)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !950, line: 31, size: 256, elements: !970)
!970 = !{!971, !976, !980, !984}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !969, file: !950, line: 32, baseType: !972, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!973 = !DISubroutineType(types: !974)
!974 = !{!576, !948, !975}
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !969, file: !950, line: 33, baseType: !977, size: 64, offset: 64)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DISubroutineType(types: !979)
!979 = !{null, !948, !576}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !969, file: !950, line: 34, baseType: !981, size: 64, offset: 128)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = !DISubroutineType(types: !983)
!983 = !{!576, !948, !576, !975}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !969, file: !950, line: 35, baseType: !985, size: 64, offset: 192)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DISubroutineType(types: !987)
!987 = !{!43, !948, !576}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !949, file: !950, line: 26, baseType: !43, size: 32, offset: 704)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !949, file: !950, line: 27, baseType: !990, size: 64, offset: 768)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !992)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !645, line: 916, size: 1856, align: 32, elements: !993)
!993 = !{!994, !1004, !1005, !1006, !6618, !6619, !6628, !6629, !6630, !6631, !6632, !6633, !6649, !6650, !6659, !6660, !6661, !6662, !6663, !6664, !6667}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !992, file: !645, line: 920, baseType: !995, size: 128)
!995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !992, file: !645, line: 917, size: 128, elements: !996)
!996 = !{!997, !1003}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !995, file: !645, line: 918, baseType: !998, size: 64)
!998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !999, line: 58, size: 64, elements: !1000)
!999 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1000 = !{!1001}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !998, file: !999, line: 59, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !995, file: !645, line: 919, baseType: !310, size: 128, align: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !992, file: !645, line: 921, baseType: !802, size: 128, offset: 128)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !992, file: !645, line: 922, baseType: !648, size: 64, offset: 256)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !992, file: !645, line: 923, baseType: !1007, size: 64, offset: 320)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1009)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !645, line: 1822, size: 2048, elements: !1010)
!1010 = !{!1011, !1012, !1017, !1024, !1028, !1072, !1073, !1077, !1090, !1091, !1112, !1116, !1117, !6467, !6468, !6472, !6477, !6478, !6482, !6486, !6578, !6582, !6583, !6587, !6588, !6592, !6596, !6601, !6605, !6609, !6613, !6617}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1009, file: !645, line: 1823, baseType: !858, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1009, file: !645, line: 1824, baseType: !1013, size: 64, offset: 64)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!830, !1016, !830, !43}
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1009, file: !645, line: 1825, baseType: !1018, size: 64, offset: 128)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!1021, !1016, !583, !600, !975}
!1021 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !288, line: 60, baseType: !1022)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !602, line: 73, baseType: !1023)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !602, line: 15, baseType: !519)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1009, file: !645, line: 1826, baseType: !1025, size: 64, offset: 192)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{!1021, !1016, !303, !600, !975}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1009, file: !645, line: 1827, baseType: !1029, size: 64, offset: 256)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = !DISubroutineType(types: !1031)
!1031 = !{!1021, !1032, !1071}
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !645, line: 320, size: 384, elements: !1034)
!1034 = !{!1035, !1036, !1037, !1041, !1042, !1043, !1045, !1046}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1033, file: !645, line: 321, baseType: !1016, size: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1033, file: !645, line: 326, baseType: !830, size: 64, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1033, file: !645, line: 327, baseType: !1038, size: 64, offset: 128)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{null, !1032, !519, !519}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1033, file: !645, line: 328, baseType: !576, size: 64, offset: 192)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1033, file: !645, line: 329, baseType: !43, size: 32, offset: 256)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1033, file: !645, line: 330, baseType: !1044, size: 16, offset: 288)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !343, line: 19, baseType: !482)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1033, file: !645, line: 331, baseType: !1044, size: 16, offset: 304)
!1046 = !DIDerivedType(tag: DW_TAG_member, scope: !1033, file: !645, line: 332, baseType: !1047, size: 64, offset: 320)
!1047 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1033, file: !645, line: 332, size: 64, elements: !1048)
!1048 = !{!1049, !1050}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1047, file: !645, line: 333, baseType: !7, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1047, file: !645, line: 334, baseType: !1051, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1053, line: 569, size: 448, elements: !1054)
!1053 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1054 = !{!1055, !1056, !1057}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1052, file: !1053, line: 570, baseType: !630, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1052, file: !1053, line: 571, baseType: !43, size: 32, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1052, file: !1053, line: 572, baseType: !1058, size: 320, offset: 128)
!1058 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1059, line: 14, baseType: !1060)
!1059 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1059, line: 29, size: 320, elements: !1061)
!1061 = !{!1062, !1063, !1064, !1070}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1060, file: !1059, line: 30, baseType: !7, size: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1060, file: !1059, line: 31, baseType: !576, size: 64, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1060, file: !1059, line: 32, baseType: !1065, size: 64, offset: 128)
!1065 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1059, line: 16, baseType: !1066)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!43, !1069, !7, !43, !576}
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1060, file: !1059, line: 33, baseType: !295, size: 128, offset: 192)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1009, file: !645, line: 1828, baseType: !1029, size: 64, offset: 320)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1009, file: !645, line: 1829, baseType: !1074, size: 64, offset: 384)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{!43, !1032, !546}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1009, file: !645, line: 1830, baseType: !1078, size: 64, offset: 448)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!43, !1016, !1081}
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !645, line: 1776, size: 128, elements: !1083)
!1083 = !{!1084, !1089}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1082, file: !645, line: 1777, baseType: !1085, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !645, line: 1773, baseType: !1086)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!43, !1081, !303, !43, !830, !342, !7}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1082, file: !645, line: 1778, baseType: !830, size: 64, offset: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1009, file: !645, line: 1831, baseType: !1078, size: 64, offset: 512)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1009, file: !645, line: 1832, baseType: !1092, size: 64, offset: 576)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!1095, !1016, !1096}
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !473, line: 52, baseType: !7)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1098, line: 43, size: 128, elements: !1099)
!1098 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!1099 = !{!1100, !1111}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !1097, file: !1098, line: 44, baseType: !1101, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !1098, line: 37, baseType: !1102)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 64)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{null, !1016, !1105, !1096}
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1059, line: 40, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1059, line: 36, size: 128, elements: !1108)
!1108 = !{!1109, !1110}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1107, file: !1059, line: 37, baseType: !735)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1107, file: !1059, line: 38, baseType: !295, size: 128)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !1097, file: !1098, line: 45, baseType: !1095, size: 32, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1009, file: !645, line: 1833, baseType: !1113, size: 64, offset: 640)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{!519, !1016, !7, !323}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1009, file: !645, line: 1834, baseType: !1113, size: 64, offset: 704)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1009, file: !645, line: 1835, baseType: !1118, size: 64, offset: 768)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 64)
!1119 = !DISubroutineType(types: !1120)
!1120 = !{!43, !1016, !1121}
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !632, line: 305, size: 1472, elements: !1123)
!1123 = !{!1124, !1125, !1126, !1127, !1128, !1129, !1130, !6444, !6450, !6451, !6456, !6457, !6460, !6461, !6462, !6463, !6464, !6465}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1122, file: !632, line: 308, baseType: !323, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1122, file: !632, line: 309, baseType: !323, size: 64, offset: 64)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1122, file: !632, line: 313, baseType: !1121, size: 64, offset: 128)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1122, file: !632, line: 313, baseType: !1121, size: 64, offset: 192)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1122, file: !632, line: 315, baseType: !444, size: 192, align: 64, offset: 256)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1122, file: !632, line: 323, baseType: !323, size: 64, offset: 448)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1122, file: !632, line: 327, baseType: !1131, size: 64, offset: 512)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !632, line: 388, size: 7296, elements: !1133)
!1133 = !{!1134, !6442}
!1134 = !DIDerivedType(tag: DW_TAG_member, scope: !1132, file: !632, line: 389, baseType: !1135, size: 7296)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1132, file: !632, line: 389, size: 7296, elements: !1136)
!1136 = !{!1137, !1138, !1142, !1143, !1147, !1148, !1149, !1150, !1151, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1202, !1210, !1213, !1253, !1254, !6426, !6427, !6430, !6431, !6432, !6435, !6436, !6437, !6440, !6441}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1135, file: !632, line: 390, baseType: !1121, size: 64)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1135, file: !632, line: 391, baseType: !1139, size: 64, offset: 64)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !445, line: 31, size: 64, elements: !1140)
!1140 = !{!1141}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1139, file: !445, line: 32, baseType: !449, size: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1135, file: !632, line: 392, baseType: !342, size: 64, offset: 128)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1135, file: !632, line: 394, baseType: !1144, size: 64, offset: 192)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{!323, !1016, !323, !323, !323, !323}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1135, file: !632, line: 398, baseType: !323, size: 64, offset: 256)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1135, file: !632, line: 399, baseType: !323, size: 64, offset: 320)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1135, file: !632, line: 405, baseType: !323, size: 64, offset: 384)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1135, file: !632, line: 406, baseType: !323, size: 64, offset: 448)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1135, file: !632, line: 407, baseType: !1152, size: 64, offset: 512)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1154, line: 286, baseType: !1155)
!1154 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1154, line: 286, size: 64, elements: !1156)
!1156 = !{!1157}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1155, file: !1154, line: 286, baseType: !1158, size: 64)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1159, line: 18, baseType: !323)
!1159 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1135, file: !632, line: 416, baseType: !394, size: 32, offset: 576)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1135, file: !632, line: 428, baseType: !394, size: 32, offset: 608)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1135, file: !632, line: 437, baseType: !394, size: 32, offset: 640)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1135, file: !632, line: 447, baseType: !394, size: 32, offset: 672)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1135, file: !632, line: 450, baseType: !382, size: 64, offset: 704)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1135, file: !632, line: 452, baseType: !43, size: 32, offset: 768)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1135, file: !632, line: 454, baseType: !735, offset: 800)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1135, file: !632, line: 457, baseType: !1168, size: 256, offset: 832)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1169, line: 35, size: 256, elements: !1170)
!1169 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1170 = !{!1171, !1172, !1173, !1175}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1168, file: !1169, line: 36, baseType: !382, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1168, file: !1169, line: 42, baseType: !382, size: 64, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1168, file: !1169, line: 46, baseType: !1174, offset: 128)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !736, line: 29, baseType: !743)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1168, file: !1169, line: 47, baseType: !295, size: 128, offset: 128)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1135, file: !632, line: 459, baseType: !295, size: 128, offset: 1088)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1135, file: !632, line: 466, baseType: !323, size: 64, offset: 1216)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1135, file: !632, line: 467, baseType: !323, size: 64, offset: 1280)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1135, file: !632, line: 469, baseType: !323, size: 64, offset: 1344)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1135, file: !632, line: 470, baseType: !323, size: 64, offset: 1408)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1135, file: !632, line: 471, baseType: !384, size: 64, offset: 1472)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1135, file: !632, line: 472, baseType: !323, size: 64, offset: 1536)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1135, file: !632, line: 473, baseType: !323, size: 64, offset: 1600)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1135, file: !632, line: 474, baseType: !323, size: 64, offset: 1664)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1135, file: !632, line: 475, baseType: !323, size: 64, offset: 1728)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1135, file: !632, line: 477, baseType: !735, offset: 1792)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1135, file: !632, line: 478, baseType: !323, size: 64, offset: 1792)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1135, file: !632, line: 478, baseType: !323, size: 64, offset: 1856)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1135, file: !632, line: 478, baseType: !323, size: 64, offset: 1920)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1135, file: !632, line: 478, baseType: !323, size: 64, offset: 1984)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1135, file: !632, line: 479, baseType: !323, size: 64, offset: 2048)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1135, file: !632, line: 479, baseType: !323, size: 64, offset: 2112)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1135, file: !632, line: 479, baseType: !323, size: 64, offset: 2176)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1135, file: !632, line: 480, baseType: !323, size: 64, offset: 2240)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1135, file: !632, line: 480, baseType: !323, size: 64, offset: 2304)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1135, file: !632, line: 480, baseType: !323, size: 64, offset: 2368)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1135, file: !632, line: 480, baseType: !323, size: 64, offset: 2432)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1135, file: !632, line: 482, baseType: !1199, size: 2816, offset: 2496)
!1199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 2816, elements: !1200)
!1200 = !{!1201}
!1201 = !DISubrange(count: 44)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1135, file: !632, line: 488, baseType: !1203, size: 256, offset: 5312)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1204, line: 60, size: 256, elements: !1205)
!1204 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1205 = !{!1206}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1203, file: !1204, line: 61, baseType: !1207, size: 256)
!1207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !382, size: 256, elements: !1208)
!1208 = !{!1209}
!1209 = !DISubrange(count: 4)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1135, file: !632, line: 490, baseType: !1211, size: 64, offset: 5568)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !632, line: 490, flags: DIFlagFwdDecl)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1135, file: !632, line: 493, baseType: !1214, size: 896, offset: 5632)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1215, line: 53, baseType: !1216)
!1215 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1215, line: 13, size: 896, elements: !1217)
!1217 = !{!1218, !1219, !1220, !1221, !1224, !1225, !1226, !1227, !1247, !1248, !1249}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1216, file: !1215, line: 18, baseType: !342, size: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1216, file: !1215, line: 28, baseType: !384, size: 64, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1216, file: !1215, line: 31, baseType: !1168, size: 256, offset: 128)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1216, file: !1215, line: 32, baseType: !1222, size: 64, offset: 384)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1215, line: 32, flags: DIFlagFwdDecl)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1216, file: !1215, line: 37, baseType: !483, size: 16, offset: 448)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1216, file: !1215, line: 40, baseType: !960, size: 192, offset: 512)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1216, file: !1215, line: 41, baseType: !576, size: 64, offset: 704)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1216, file: !1215, line: 42, baseType: !1228, size: 64, offset: 768)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1230)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1231, line: 13, size: 896, elements: !1232)
!1231 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1232 = !{!1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1230, file: !1231, line: 14, baseType: !576, size: 64)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1230, file: !1231, line: 15, baseType: !323, size: 64, offset: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1230, file: !1231, line: 17, baseType: !323, size: 64, offset: 128)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1230, file: !1231, line: 17, baseType: !323, size: 64, offset: 192)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1230, file: !1231, line: 19, baseType: !519, size: 64, offset: 256)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1230, file: !1231, line: 21, baseType: !519, size: 64, offset: 320)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1230, file: !1231, line: 22, baseType: !519, size: 64, offset: 384)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1230, file: !1231, line: 23, baseType: !519, size: 64, offset: 448)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1230, file: !1231, line: 24, baseType: !519, size: 64, offset: 512)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1230, file: !1231, line: 25, baseType: !519, size: 64, offset: 576)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1230, file: !1231, line: 26, baseType: !519, size: 64, offset: 640)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1230, file: !1231, line: 27, baseType: !519, size: 64, offset: 704)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1230, file: !1231, line: 28, baseType: !519, size: 64, offset: 768)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1230, file: !1231, line: 29, baseType: !519, size: 64, offset: 832)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1216, file: !1215, line: 44, baseType: !394, size: 32, offset: 832)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1216, file: !1215, line: 50, baseType: !1044, size: 16, offset: 864)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1216, file: !1215, line: 51, baseType: !1250, size: 16, offset: 880)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !343, line: 18, baseType: !1251)
!1251 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !345, line: 23, baseType: !1252)
!1252 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1135, file: !632, line: 495, baseType: !323, size: 64, offset: 6528)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1135, file: !632, line: 497, baseType: !1255, size: 64, offset: 6592)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !632, line: 381, size: 384, elements: !1257)
!1257 = !{!1258, !1259, !6425}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1256, file: !632, line: 382, baseType: !394, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1256, file: !632, line: 383, baseType: !1260, size: 128, offset: 64)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !632, line: 376, size: 128, elements: !1261)
!1261 = !{!1262, !6423}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1260, file: !632, line: 377, baseType: !1263, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1265, line: 640, size: 48640, elements: !1266)
!1265 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1266 = !{!1267, !1273, !1275, !1276, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1293, !1311, !1322, !1411, !1412, !1413, !1424, !1425, !1427, !1428, !1429, !1430, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1514, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1547, !1549, !1550, !1551, !1563, !1564, !1565, !1566, !1567, !1568, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1592, !1597, !1935, !1936, !1937, !1938, !1939, !1942, !1945, !1948, !1951, !3793, !3889, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3937, !3938, !3939, !3940, !3941, !3946, !3947, !3948, !3951, !3952, !6020, !6029, !6032, !6033, !6034, !6037, !6038, !6117, !6118, !6121, !6122, !6125, !6126, !6127, !6131, !6132, !6133, !6146, !6147, !6148, !6158, !6163, !6221, !6227, !6228, !6229, !6230, !6231, !6232, !6233, !6234, !6249, !6250, !6251, !6252, !6253, !6254, !6255, !6256, !6257}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1264, file: !1265, line: 646, baseType: !1268, size: 128)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1269, line: 56, size: 128, elements: !1270)
!1269 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1270 = !{!1271, !1272}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1268, file: !1269, line: 57, baseType: !323, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1268, file: !1269, line: 58, baseType: !713, size: 32, offset: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1264, file: !1265, line: 649, baseType: !1274, size: 64, offset: 128)
!1274 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !519)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1264, file: !1265, line: 657, baseType: !576, size: 64, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1264, file: !1265, line: 658, baseType: !1277, size: 32, offset: 256)
!1277 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1278, line: 113, baseType: !1279)
!1278 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1278, line: 111, size: 32, elements: !1280)
!1280 = !{!1281}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1279, file: !1278, line: 112, baseType: !394, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1264, file: !1265, line: 660, baseType: !7, size: 32, offset: 288)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1264, file: !1265, line: 661, baseType: !7, size: 32, offset: 320)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1264, file: !1265, line: 684, baseType: !43, size: 32, offset: 352)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1264, file: !1265, line: 686, baseType: !43, size: 32, offset: 384)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1264, file: !1265, line: 687, baseType: !43, size: 32, offset: 416)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1264, file: !1265, line: 688, baseType: !43, size: 32, offset: 448)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1264, file: !1265, line: 689, baseType: !7, size: 32, offset: 480)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1264, file: !1265, line: 691, baseType: !1290, size: 64, offset: 512)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1292)
!1292 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1265, line: 691, flags: DIFlagFwdDecl)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1264, file: !1265, line: 692, baseType: !1294, size: 832, offset: 576)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1265, line: 451, size: 832, elements: !1295)
!1295 = !{!1296, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1294, file: !1265, line: 453, baseType: !1297, size: 128)
!1297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1265, line: 325, size: 128, elements: !1298)
!1298 = !{!1299, !1300}
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1297, file: !1265, line: 326, baseType: !323, size: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1297, file: !1265, line: 327, baseType: !713, size: 32, offset: 64)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1294, file: !1265, line: 454, baseType: !444, size: 192, align: 64, offset: 128)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1294, file: !1265, line: 455, baseType: !295, size: 128, offset: 320)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1294, file: !1265, line: 456, baseType: !7, size: 32, offset: 448)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1294, file: !1265, line: 458, baseType: !342, size: 64, offset: 512)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1294, file: !1265, line: 459, baseType: !342, size: 64, offset: 576)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1294, file: !1265, line: 460, baseType: !342, size: 64, offset: 640)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1294, file: !1265, line: 461, baseType: !342, size: 64, offset: 704)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1294, file: !1265, line: 463, baseType: !342, size: 64, offset: 768)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1294, file: !1265, line: 465, baseType: !1310, offset: 832)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1265, line: 415, elements: !749)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1264, file: !1265, line: 693, baseType: !1312, size: 384, offset: 1408)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1265, line: 489, size: 384, elements: !1313)
!1313 = !{!1314, !1315, !1316, !1317, !1318, !1319, !1320}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1312, file: !1265, line: 490, baseType: !295, size: 128)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1312, file: !1265, line: 491, baseType: !323, size: 64, offset: 128)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1312, file: !1265, line: 492, baseType: !323, size: 64, offset: 192)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1312, file: !1265, line: 493, baseType: !7, size: 32, offset: 256)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1312, file: !1265, line: 494, baseType: !483, size: 16, offset: 288)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1312, file: !1265, line: 495, baseType: !483, size: 16, offset: 304)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1312, file: !1265, line: 497, baseType: !1321, size: 64, offset: 320)
!1321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1264, file: !1265, line: 697, baseType: !1323, size: 1792, offset: 1792)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1265, line: 507, size: 1792, elements: !1324)
!1324 = !{!1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1408, !1409}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1323, file: !1265, line: 508, baseType: !444, size: 192, align: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1323, file: !1265, line: 515, baseType: !342, size: 64, offset: 192)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1323, file: !1265, line: 516, baseType: !342, size: 64, offset: 256)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1323, file: !1265, line: 517, baseType: !342, size: 64, offset: 320)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1323, file: !1265, line: 518, baseType: !342, size: 64, offset: 384)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1323, file: !1265, line: 519, baseType: !342, size: 64, offset: 448)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1323, file: !1265, line: 526, baseType: !388, size: 64, offset: 512)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1323, file: !1265, line: 527, baseType: !342, size: 64, offset: 576)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1323, file: !1265, line: 528, baseType: !7, size: 32, offset: 640)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1323, file: !1265, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1323, file: !1265, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1323, file: !1265, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1323, file: !1265, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1323, file: !1265, line: 563, baseType: !1339, size: 512, offset: 704)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !31, line: 118, size: 512, elements: !1340)
!1340 = !{!1341, !1349, !1350, !1355, !1402, !1405, !1406, !1407}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1339, file: !31, line: 119, baseType: !1342, size: 256)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1343, line: 9, size: 256, elements: !1344)
!1343 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1344 = !{!1345, !1346}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1342, file: !1343, line: 10, baseType: !444, size: 192, align: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1342, file: !1343, line: 11, baseType: !1347, size: 64, offset: 192)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1348, line: 29, baseType: !388)
!1348 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1339, file: !31, line: 120, baseType: !1347, size: 64, offset: 256)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1339, file: !31, line: 121, baseType: !1351, size: 64, offset: 320)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!30, !1354}
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1339, file: !31, line: 122, baseType: !1356, size: 64, offset: 384)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !31, line: 159, size: 512, align: 512, elements: !1358)
!1358 = !{!1359, !1379, !1380, !1383, !1388, !1389, !1397, !1401}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1357, file: !31, line: 160, baseType: !1360, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !31, line: 214, size: 4608, align: 512, elements: !1362)
!1362 = !{!1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1361, file: !31, line: 215, baseType: !1174)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1361, file: !31, line: 216, baseType: !7, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1361, file: !31, line: 217, baseType: !7, size: 32, offset: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1361, file: !31, line: 218, baseType: !7, size: 32, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1361, file: !31, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1361, file: !31, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1361, file: !31, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1361, file: !31, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1361, file: !31, line: 233, baseType: !1347, size: 64, offset: 128)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1361, file: !31, line: 234, baseType: !1354, size: 64, offset: 192)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1361, file: !31, line: 235, baseType: !1347, size: 64, offset: 256)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1361, file: !31, line: 236, baseType: !1354, size: 64, offset: 320)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1361, file: !31, line: 237, baseType: !1376, size: 4096, offset: 512)
!1376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1357, size: 4096, elements: !1377)
!1377 = !{!1378}
!1378 = !DISubrange(count: 8)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1357, file: !31, line: 161, baseType: !7, size: 32, offset: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1357, file: !31, line: 162, baseType: !1381, size: 32, offset: 96)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !288, line: 27, baseType: !1382)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !602, line: 96, baseType: !43)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1357, file: !31, line: 163, baseType: !1384, size: 32, offset: 128)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !686, line: 276, baseType: !1385)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !686, line: 276, size: 32, elements: !1386)
!1386 = !{!1387}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1385, file: !686, line: 276, baseType: !690, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1357, file: !31, line: 164, baseType: !1354, size: 64, offset: 192)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1357, file: !31, line: 165, baseType: !1390, size: 128, offset: 256)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1343, line: 14, size: 128, elements: !1391)
!1391 = !{!1392}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1390, file: !1343, line: 15, baseType: !1393, size: 128)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !445, line: 125, size: 128, elements: !1394)
!1394 = !{!1395, !1396}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1393, file: !445, line: 126, baseType: !1139, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1393, file: !445, line: 127, baseType: !449, size: 64, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1357, file: !31, line: 166, baseType: !1398, size: 64, offset: 384)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!1347}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1357, file: !31, line: 167, baseType: !1347, size: 64, offset: 448)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1339, file: !31, line: 123, baseType: !1403, size: 8, offset: 448)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !343, line: 17, baseType: !1404)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !345, line: 21, baseType: !500)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1339, file: !31, line: 124, baseType: !1403, size: 8, offset: 456)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1339, file: !31, line: 125, baseType: !1403, size: 8, offset: 464)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1339, file: !31, line: 126, baseType: !1403, size: 8, offset: 472)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1323, file: !1265, line: 572, baseType: !1339, size: 512, offset: 1216)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1323, file: !1265, line: 580, baseType: !1410, size: 64, offset: 1728)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1264, file: !1265, line: 721, baseType: !7, size: 32, offset: 3584)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1264, file: !1265, line: 722, baseType: !43, size: 32, offset: 3616)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1264, file: !1265, line: 723, baseType: !1414, size: 64, offset: 3648)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1416)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1417, line: 17, baseType: !1418)
!1417 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1417, line: 17, size: 64, elements: !1419)
!1419 = !{!1420}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1418, file: !1417, line: 17, baseType: !1421, size: 64)
!1421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 64, elements: !1422)
!1422 = !{!1423}
!1423 = !DISubrange(count: 1)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1264, file: !1265, line: 724, baseType: !1416, size: 64, offset: 3712)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1264, file: !1265, line: 749, baseType: !1426, offset: 3776)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1265, line: 290, elements: !749)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1264, file: !1265, line: 751, baseType: !295, size: 128, offset: 3776)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1264, file: !1265, line: 757, baseType: !1131, size: 64, offset: 3904)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1264, file: !1265, line: 758, baseType: !1131, size: 64, offset: 3968)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1264, file: !1265, line: 761, baseType: !1431, size: 320, offset: 4032)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1204, line: 34, size: 320, elements: !1432)
!1432 = !{!1433, !1434}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1431, file: !1204, line: 35, baseType: !342, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1431, file: !1204, line: 36, baseType: !1435, size: 256, offset: 64)
!1435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1121, size: 256, elements: !1208)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1264, file: !1265, line: 766, baseType: !43, size: 32, offset: 4352)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1264, file: !1265, line: 767, baseType: !43, size: 32, offset: 4384)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1264, file: !1265, line: 768, baseType: !43, size: 32, offset: 4416)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1264, file: !1265, line: 770, baseType: !43, size: 32, offset: 4448)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1264, file: !1265, line: 772, baseType: !323, size: 64, offset: 4480)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1264, file: !1265, line: 775, baseType: !7, size: 32, offset: 4544)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1264, file: !1265, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1264, file: !1265, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1264, file: !1265, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1264, file: !1265, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1264, file: !1265, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1264, file: !1265, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1264, file: !1265, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1264, file: !1265, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1264, file: !1265, line: 831, baseType: !323, size: 64, offset: 4672)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1264, file: !1265, line: 833, baseType: !1452, size: 384, offset: 4736)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !36, line: 25, size: 384, elements: !1453)
!1453 = !{!1454, !1459}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1452, file: !36, line: 26, baseType: !1455, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!519, !1458}
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, scope: !1452, file: !36, line: 27, baseType: !1460, size: 320, offset: 64)
!1460 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1452, file: !36, line: 27, size: 320, elements: !1461)
!1461 = !{!1462, !1472, !1499}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1460, file: !36, line: 36, baseType: !1463, size: 320)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1460, file: !36, line: 29, size: 320, elements: !1464)
!1464 = !{!1465, !1467, !1468, !1469, !1470, !1471}
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1463, file: !36, line: 30, baseType: !1466, size: 64)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1463, file: !36, line: 31, baseType: !713, size: 32, offset: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1463, file: !36, line: 32, baseType: !713, size: 32, offset: 96)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1463, file: !36, line: 33, baseType: !713, size: 32, offset: 128)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1463, file: !36, line: 34, baseType: !342, size: 64, offset: 192)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1463, file: !36, line: 35, baseType: !1466, size: 64, offset: 256)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1460, file: !36, line: 46, baseType: !1473, size: 192)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1460, file: !36, line: 38, size: 192, elements: !1474)
!1474 = !{!1475, !1476, !1477, !1498}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1473, file: !36, line: 39, baseType: !1381, size: 32)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1473, file: !36, line: 40, baseType: !35, size: 32, offset: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, scope: !1473, file: !36, line: 41, baseType: !1478, size: 64, offset: 64)
!1478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1473, file: !36, line: 41, size: 64, elements: !1479)
!1479 = !{!1480, !1488}
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1478, file: !36, line: 42, baseType: !1481, size: 64)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1483, line: 7, size: 128, elements: !1484)
!1483 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1484 = !{!1485, !1487}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1482, file: !1483, line: 8, baseType: !1486, size: 64)
!1486 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !602, line: 93, baseType: !390)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1482, file: !1483, line: 9, baseType: !390, size: 64, offset: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1478, file: !36, line: 43, baseType: !1489, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1491, line: 7, size: 64, elements: !1492)
!1491 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1492 = !{!1493, !1497}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1490, file: !1491, line: 8, baseType: !1494, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1491, line: 5, baseType: !1495)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !343, line: 20, baseType: !1496)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !345, line: 26, baseType: !43)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1490, file: !1491, line: 9, baseType: !1495, size: 32, offset: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1473, file: !36, line: 45, baseType: !342, size: 64, offset: 128)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1460, file: !36, line: 54, baseType: !1500, size: 256)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1460, file: !36, line: 48, size: 256, elements: !1501)
!1501 = !{!1502, !1510, !1511, !1512, !1513}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1500, file: !36, line: 49, baseType: !1503, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 64)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1505, line: 36, size: 64, elements: !1506)
!1505 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1506 = !{!1507, !1508, !1509}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1504, file: !1505, line: 37, baseType: !43, size: 32)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1504, file: !1505, line: 38, baseType: !1252, size: 16, offset: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1504, file: !1505, line: 39, baseType: !1252, size: 16, offset: 48)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1500, file: !36, line: 50, baseType: !43, size: 32, offset: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1500, file: !36, line: 51, baseType: !43, size: 32, offset: 96)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1500, file: !36, line: 52, baseType: !323, size: 64, offset: 128)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1500, file: !36, line: 53, baseType: !323, size: 64, offset: 192)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1264, file: !1265, line: 835, baseType: !1515, size: 32, offset: 5120)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !288, line: 22, baseType: !1516)
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !602, line: 28, baseType: !43)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1264, file: !1265, line: 836, baseType: !1515, size: 32, offset: 5152)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1264, file: !1265, line: 840, baseType: !323, size: 64, offset: 5184)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1264, file: !1265, line: 849, baseType: !1263, size: 64, offset: 5248)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1264, file: !1265, line: 852, baseType: !1263, size: 64, offset: 5312)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1264, file: !1265, line: 857, baseType: !295, size: 128, offset: 5376)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1264, file: !1265, line: 858, baseType: !295, size: 128, offset: 5504)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1264, file: !1265, line: 859, baseType: !1263, size: 64, offset: 5632)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1264, file: !1265, line: 867, baseType: !295, size: 128, offset: 5696)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1264, file: !1265, line: 868, baseType: !295, size: 128, offset: 5824)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1264, file: !1265, line: 871, baseType: !1527, size: 64, offset: 5952)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !1529, line: 59, size: 768, elements: !1530)
!1529 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!1530 = !{!1531, !1532, !1533, !1534, !1536, !1537, !1538, !1539}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1528, file: !1529, line: 61, baseType: !1277, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1528, file: !1529, line: 62, baseType: !7, size: 32, offset: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1528, file: !1529, line: 63, baseType: !735, offset: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1528, file: !1529, line: 65, baseType: !1535, size: 256, offset: 64)
!1535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !863, size: 256, elements: !1208)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1528, file: !1529, line: 66, baseType: !863, size: 64, offset: 320)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1528, file: !1529, line: 68, baseType: !1106, size: 128, offset: 384)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1528, file: !1529, line: 69, baseType: !310, size: 128, align: 64, offset: 512)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1528, file: !1529, line: 70, baseType: !1540, size: 128, offset: 640)
!1540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1541, size: 128, elements: !1422)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !1529, line: 54, size: 128, elements: !1542)
!1542 = !{!1543, !1544}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1541, file: !1529, line: 55, baseType: !43, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1541, file: !1529, line: 56, baseType: !1545, size: 64, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1529, line: 56, flags: DIFlagFwdDecl)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1264, file: !1265, line: 872, baseType: !1548, size: 512, offset: 6016)
!1548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !287, size: 512, elements: !1208)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1264, file: !1265, line: 873, baseType: !295, size: 128, offset: 6528)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1264, file: !1265, line: 874, baseType: !295, size: 128, offset: 6656)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1264, file: !1265, line: 876, baseType: !1552, size: 64, offset: 6784)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1554, line: 26, size: 192, elements: !1555)
!1554 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1555 = !{!1556, !1557}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1553, file: !1554, line: 27, baseType: !7, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1553, file: !1554, line: 28, baseType: !1558, size: 128, offset: 64)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1559, line: 43, size: 128, elements: !1560)
!1559 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1560 = !{!1561, !1562}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1558, file: !1559, line: 44, baseType: !1174)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1558, file: !1559, line: 45, baseType: !295, size: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1264, file: !1265, line: 879, baseType: !545, size: 64, offset: 6848)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1264, file: !1265, line: 882, baseType: !545, size: 64, offset: 6912)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1264, file: !1265, line: 884, baseType: !342, size: 64, offset: 6976)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1264, file: !1265, line: 885, baseType: !342, size: 64, offset: 7040)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1264, file: !1265, line: 890, baseType: !342, size: 64, offset: 7104)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1264, file: !1265, line: 891, baseType: !1569, size: 128, offset: 7168)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1265, line: 242, size: 128, elements: !1570)
!1570 = !{!1571, !1572, !1573}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1569, file: !1265, line: 244, baseType: !342, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1569, file: !1265, line: 245, baseType: !342, size: 64, offset: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1569, file: !1265, line: 246, baseType: !1174, offset: 128)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1264, file: !1265, line: 900, baseType: !323, size: 64, offset: 7296)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1264, file: !1265, line: 901, baseType: !323, size: 64, offset: 7360)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1264, file: !1265, line: 904, baseType: !342, size: 64, offset: 7424)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1264, file: !1265, line: 907, baseType: !342, size: 64, offset: 7488)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1264, file: !1265, line: 910, baseType: !323, size: 64, offset: 7552)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1264, file: !1265, line: 911, baseType: !323, size: 64, offset: 7616)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1264, file: !1265, line: 914, baseType: !1581, size: 640, offset: 7680)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1582, line: 123, size: 640, elements: !1583)
!1582 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1583 = !{!1584, !1590, !1591}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1581, file: !1582, line: 124, baseType: !1585, size: 576)
!1585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1586, size: 576, elements: !873)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1582, line: 108, size: 192, elements: !1587)
!1587 = !{!1588, !1589}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1586, file: !1582, line: 109, baseType: !342, size: 64)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1586, file: !1582, line: 110, baseType: !1390, size: 128, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1581, file: !1582, line: 125, baseType: !7, size: 32, offset: 576)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1581, file: !1582, line: 126, baseType: !7, size: 32, offset: 608)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1264, file: !1265, line: 917, baseType: !1593, size: 192, offset: 8320)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1582, line: 134, size: 192, elements: !1594)
!1594 = !{!1595, !1596}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1593, file: !1582, line: 135, baseType: !310, size: 128, align: 64)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1593, file: !1582, line: 136, baseType: !7, size: 32, offset: 128)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1264, file: !1265, line: 923, baseType: !1598, size: 64, offset: 8512)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1601, line: 111, size: 1280, elements: !1602)
!1601 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1602 = !{!1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1620, !1621, !1622, !1623, !1624, !1625, !1735, !1736, !1737, !1738, !1764, !1920, !1930}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1600, file: !1601, line: 112, baseType: !394, size: 32)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1600, file: !1601, line: 120, baseType: !655, size: 32, offset: 32)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1600, file: !1601, line: 121, baseType: !663, size: 32, offset: 64)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1600, file: !1601, line: 122, baseType: !655, size: 32, offset: 96)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1600, file: !1601, line: 123, baseType: !663, size: 32, offset: 128)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1600, file: !1601, line: 124, baseType: !655, size: 32, offset: 160)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1600, file: !1601, line: 125, baseType: !663, size: 32, offset: 192)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1600, file: !1601, line: 126, baseType: !655, size: 32, offset: 224)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1600, file: !1601, line: 127, baseType: !663, size: 32, offset: 256)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1600, file: !1601, line: 128, baseType: !7, size: 32, offset: 288)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1600, file: !1601, line: 129, baseType: !1614, size: 64, offset: 320)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1615, line: 26, baseType: !1616)
!1615 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1615, line: 24, size: 64, elements: !1617)
!1617 = !{!1618}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1616, file: !1615, line: 25, baseType: !1619, size: 64)
!1619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 64, elements: !484)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1600, file: !1601, line: 130, baseType: !1614, size: 64, offset: 384)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1600, file: !1601, line: 131, baseType: !1614, size: 64, offset: 448)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1600, file: !1601, line: 132, baseType: !1614, size: 64, offset: 512)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1600, file: !1601, line: 133, baseType: !1614, size: 64, offset: 576)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1600, file: !1601, line: 135, baseType: !500, size: 8, offset: 640)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1600, file: !1601, line: 137, baseType: !1626, size: 64, offset: 704)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1628, line: 189, size: 1664, elements: !1629)
!1628 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1629 = !{!1630, !1631, !1634, !1639, !1640, !1643, !1644, !1651, !1652, !1653, !1654, !1657, !1658, !1659, !1660, !1661, !1699, !1720}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1627, file: !1628, line: 190, baseType: !1277, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1627, file: !1628, line: 191, baseType: !1632, size: 32, offset: 32)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1628, line: 28, baseType: !1633)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !288, line: 98, baseType: !1495)
!1634 = !DIDerivedType(tag: DW_TAG_member, scope: !1627, file: !1628, line: 192, baseType: !1635, size: 192, offset: 64)
!1635 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1627, file: !1628, line: 192, size: 192, elements: !1636)
!1636 = !{!1637, !1638}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1635, file: !1628, line: 193, baseType: !295, size: 128)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1635, file: !1628, line: 194, baseType: !444, size: 192, align: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1627, file: !1628, line: 199, baseType: !1168, size: 256, offset: 256)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1627, file: !1628, line: 200, baseType: !1641, size: 64, offset: 512)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64)
!1642 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1628, line: 200, flags: DIFlagFwdDecl)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1627, file: !1628, line: 201, baseType: !576, size: 64, offset: 576)
!1644 = !DIDerivedType(tag: DW_TAG_member, scope: !1627, file: !1628, line: 202, baseType: !1645, size: 64, offset: 640)
!1645 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1627, file: !1628, line: 202, size: 64, elements: !1646)
!1646 = !{!1647, !1650}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1645, file: !1628, line: 203, baseType: !1648, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1649, line: 8, baseType: !389)
!1649 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1645, file: !1628, line: 204, baseType: !1648, size: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1627, file: !1628, line: 206, baseType: !1648, size: 64, offset: 704)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1627, file: !1628, line: 207, baseType: !655, size: 32, offset: 768)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1627, file: !1628, line: 208, baseType: !663, size: 32, offset: 800)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1627, file: !1628, line: 209, baseType: !1655, size: 32, offset: 832)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1628, line: 31, baseType: !1656)
!1656 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !288, line: 104, baseType: !713)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1627, file: !1628, line: 210, baseType: !483, size: 16, offset: 864)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1627, file: !1628, line: 211, baseType: !483, size: 16, offset: 880)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1627, file: !1628, line: 215, baseType: !1252, size: 16, offset: 896)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1627, file: !1628, line: 222, baseType: !323, size: 64, offset: 960)
!1661 = !DIDerivedType(tag: DW_TAG_member, scope: !1627, file: !1628, line: 239, baseType: !1662, size: 320, offset: 1024)
!1662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1627, file: !1628, line: 239, size: 320, elements: !1663)
!1663 = !{!1664, !1691}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1662, file: !1628, line: 240, baseType: !1665, size: 320)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1628, line: 108, size: 320, elements: !1666)
!1666 = !{!1667, !1668, !1680, !1683, !1690}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1665, file: !1628, line: 110, baseType: !323, size: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, scope: !1665, file: !1628, line: 111, baseType: !1669, size: 64, offset: 64)
!1669 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1665, file: !1628, line: 111, size: 64, elements: !1670)
!1670 = !{!1671, !1679}
!1671 = !DIDerivedType(tag: DW_TAG_member, scope: !1669, file: !1628, line: 112, baseType: !1672, size: 64)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1669, file: !1628, line: 112, size: 64, elements: !1673)
!1673 = !{!1674, !1675}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1672, file: !1628, line: 114, baseType: !1044, size: 16)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1672, file: !1628, line: 115, baseType: !1676, size: 48, offset: 16)
!1676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 48, elements: !1677)
!1677 = !{!1678}
!1678 = !DISubrange(count: 6)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1669, file: !1628, line: 121, baseType: !323, size: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1665, file: !1628, line: 123, baseType: !1681, size: 64, offset: 128)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64)
!1682 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1628, line: 96, flags: DIFlagFwdDecl)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1665, file: !1628, line: 124, baseType: !1684, size: 64, offset: 192)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1628, line: 102, size: 192, elements: !1686)
!1686 = !{!1687, !1688, !1689}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1685, file: !1628, line: 103, baseType: !310, size: 128, align: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1685, file: !1628, line: 104, baseType: !1277, size: 32, offset: 128)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1685, file: !1628, line: 105, baseType: !546, size: 8, offset: 160)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1665, file: !1628, line: 125, baseType: !303, size: 64, offset: 256)
!1691 = !DIDerivedType(tag: DW_TAG_member, scope: !1662, file: !1628, line: 241, baseType: !1692, size: 320)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1662, file: !1628, line: 241, size: 320, elements: !1693)
!1693 = !{!1694, !1695, !1696, !1697, !1698}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1692, file: !1628, line: 242, baseType: !323, size: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1692, file: !1628, line: 243, baseType: !323, size: 64, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1692, file: !1628, line: 244, baseType: !1681, size: 64, offset: 128)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1692, file: !1628, line: 245, baseType: !1684, size: 64, offset: 192)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1692, file: !1628, line: 246, baseType: !583, size: 64, offset: 256)
!1699 = !DIDerivedType(tag: DW_TAG_member, scope: !1627, file: !1628, line: 254, baseType: !1700, size: 256, offset: 1344)
!1700 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1627, file: !1628, line: 254, size: 256, elements: !1701)
!1701 = !{!1702, !1708}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1700, file: !1628, line: 255, baseType: !1703, size: 256)
!1703 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1628, line: 128, size: 256, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1703, file: !1628, line: 129, baseType: !576, size: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1703, file: !1628, line: 130, baseType: !1707, size: 256)
!1707 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 256, elements: !1208)
!1708 = !DIDerivedType(tag: DW_TAG_member, scope: !1700, file: !1628, line: 256, baseType: !1709, size: 256)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1700, file: !1628, line: 256, size: 256, elements: !1710)
!1710 = !{!1711, !1712}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1709, file: !1628, line: 258, baseType: !295, size: 128)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1709, file: !1628, line: 259, baseType: !1713, size: 128, offset: 128)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1714, line: 22, size: 128, elements: !1715)
!1714 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1715 = !{!1716, !1719}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1713, file: !1714, line: 23, baseType: !1717, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1714, line: 23, flags: DIFlagFwdDecl)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1713, file: !1714, line: 24, baseType: !323, size: 64, offset: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1627, file: !1628, line: 274, baseType: !1721, size: 64, offset: 1600)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1628, line: 170, size: 192, elements: !1723)
!1723 = !{!1724, !1733, !1734}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1722, file: !1628, line: 171, baseType: !1725, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1628, line: 165, baseType: !1726)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1727 = !DISubroutineType(types: !1728)
!1728 = !{!43, !1626, !1729, !1731, !1626}
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1682)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1703)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1722, file: !1628, line: 172, baseType: !1626, size: 64, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1722, file: !1628, line: 173, baseType: !1681, size: 64, offset: 128)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1600, file: !1601, line: 138, baseType: !1626, size: 64, offset: 768)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1600, file: !1601, line: 139, baseType: !1626, size: 64, offset: 832)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1600, file: !1601, line: 140, baseType: !1626, size: 64, offset: 896)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1600, file: !1601, line: 145, baseType: !1739, size: 64, offset: 960)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1741, line: 13, size: 896, elements: !1742)
!1741 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1742 = !{!1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1740, file: !1741, line: 14, baseType: !1277, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1740, file: !1741, line: 15, baseType: !394, size: 32, offset: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1740, file: !1741, line: 16, baseType: !394, size: 32, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1740, file: !1741, line: 21, baseType: !382, size: 64, offset: 128)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1740, file: !1741, line: 27, baseType: !323, size: 64, offset: 192)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1740, file: !1741, line: 28, baseType: !323, size: 64, offset: 256)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1740, file: !1741, line: 29, baseType: !382, size: 64, offset: 320)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1740, file: !1741, line: 32, baseType: !287, size: 128, offset: 384)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1740, file: !1741, line: 33, baseType: !655, size: 32, offset: 512)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1740, file: !1741, line: 37, baseType: !382, size: 64, offset: 576)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1740, file: !1741, line: 44, baseType: !1754, size: 256, offset: 640)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1755, line: 15, size: 256, elements: !1756)
!1755 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1756 = !{!1757, !1758, !1759, !1760, !1761, !1762, !1763}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1754, file: !1755, line: 16, baseType: !1174)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1754, file: !1755, line: 18, baseType: !43, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1754, file: !1755, line: 19, baseType: !43, size: 32, offset: 32)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1754, file: !1755, line: 20, baseType: !43, size: 32, offset: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1754, file: !1755, line: 21, baseType: !43, size: 32, offset: 96)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1754, file: !1755, line: 22, baseType: !323, size: 64, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1754, file: !1755, line: 23, baseType: !323, size: 64, offset: 192)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1600, file: !1601, line: 146, baseType: !1765, size: 64, offset: 1024)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1767, line: 56, size: 4160, elements: !1768)
!1767 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1768 = !{!1769, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1808, !1809, !1810, !1811, !1812, !1824, !1905, !1906, !1918}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !1766, file: !1767, line: 57, baseType: !1770, size: 576)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !1767, line: 23, size: 576, elements: !1771)
!1771 = !{!1772, !1773}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !1770, file: !1767, line: 24, baseType: !713, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, scope: !1770, file: !1767, line: 25, baseType: !1774, size: 512, offset: 64)
!1774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1770, file: !1767, line: 25, size: 512, elements: !1775)
!1775 = !{!1776, !1785}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1774, file: !1767, line: 26, baseType: !1777, size: 480)
!1777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1778, size: 480, elements: !1783)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !1767, line: 17, size: 96, elements: !1779)
!1779 = !{!1780, !1781, !1782}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1778, file: !1767, line: 18, baseType: !713, size: 32)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !1778, file: !1767, line: 19, baseType: !713, size: 32, offset: 32)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1778, file: !1767, line: 20, baseType: !713, size: 32, offset: 64)
!1783 = !{!1784}
!1784 = !DISubrange(count: 5)
!1785 = !DIDerivedType(tag: DW_TAG_member, scope: !1774, file: !1767, line: 27, baseType: !1786, size: 128)
!1786 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1774, file: !1767, line: 27, size: 128, elements: !1787)
!1787 = !{!1788, !1790}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !1786, file: !1767, line: 28, baseType: !1789, size: 64)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !1786, file: !1767, line: 29, baseType: !1789, size: 64, offset: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !1766, file: !1767, line: 58, baseType: !1770, size: 576, offset: 576)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !1766, file: !1767, line: 59, baseType: !1770, size: 576, offset: 1152)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1766, file: !1767, line: 60, baseType: !394, size: 32, offset: 1728)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1766, file: !1767, line: 61, baseType: !1765, size: 64, offset: 1792)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1766, file: !1767, line: 62, baseType: !43, size: 32, offset: 1856)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1766, file: !1767, line: 63, baseType: !655, size: 32, offset: 1888)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1766, file: !1767, line: 64, baseType: !663, size: 32, offset: 1920)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1766, file: !1767, line: 65, baseType: !1799, size: 192, offset: 1984)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1800, line: 7, size: 192, elements: !1801)
!1800 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1801 = !{!1802, !1803, !1807}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1799, file: !1800, line: 8, baseType: !382, size: 64)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1799, file: !1800, line: 9, baseType: !1804, size: 64, offset: 64)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1806)
!1806 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1800, line: 5, flags: DIFlagFwdDecl)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1799, file: !1800, line: 10, baseType: !7, size: 32, offset: 128)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1766, file: !1767, line: 66, baseType: !323, size: 64, offset: 2176)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !1766, file: !1767, line: 74, baseType: !295, size: 128, offset: 2240)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !1766, file: !1767, line: 75, baseType: !1626, size: 64, offset: 2368)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !1766, file: !1767, line: 76, baseType: !1168, size: 256, offset: 2432)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1766, file: !1767, line: 83, baseType: !1813, size: 256, offset: 2688)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1814, line: 102, size: 256, elements: !1815)
!1814 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1815 = !{!1816, !1817, !1818}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1813, file: !1814, line: 103, baseType: !382, size: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1813, file: !1814, line: 104, baseType: !295, size: 128, offset: 64)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1813, file: !1814, line: 105, baseType: !1819, size: 64, offset: 192)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1814, line: 21, baseType: !1820)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{null, !1823}
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1766, file: !1767, line: 85, baseType: !1825, size: 768, offset: 2944)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !1826, line: 156, size: 768, elements: !1827)
!1826 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1827 = !{!1828, !1833}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !1825, file: !1826, line: 157, baseType: !1829, size: 64)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 64)
!1830 = !DISubroutineType(types: !1831)
!1831 = !{!43, !1832}
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1825, file: !1826, line: 158, baseType: !1834, size: 704, offset: 64)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !1826, line: 150, size: 704, elements: !1835)
!1835 = !{!1836, !1904}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1834, file: !1826, line: 152, baseType: !1837, size: 640)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !1826, line: 131, size: 640, elements: !1838)
!1838 = !{!1839, !1872, !1873, !1874, !1894, !1895, !1897, !1903}
!1839 = !DIDerivedType(tag: DW_TAG_member, scope: !1837, file: !1826, line: 132, baseType: !1840, size: 192)
!1840 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1837, file: !1826, line: 132, size: 192, elements: !1841)
!1841 = !{!1842, !1871}
!1842 = !DIDerivedType(tag: DW_TAG_member, scope: !1840, file: !1826, line: 133, baseType: !1843, size: 192)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1840, file: !1826, line: 133, size: 192, elements: !1844)
!1844 = !{!1845, !1868, !1869, !1870}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !1843, file: !1826, line: 134, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !1826, line: 112, size: 512, elements: !1848)
!1848 = !{!1849, !1850, !1851, !1852, !1853, !1854, !1860, !1866, !1867}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !1847, file: !1826, line: 113, baseType: !303, size: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1847, file: !1826, line: 114, baseType: !576, size: 64, offset: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !1847, file: !1826, line: 115, baseType: !43, size: 32, offset: 128)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1847, file: !1826, line: 116, baseType: !652, size: 16, offset: 160)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1847, file: !1826, line: 117, baseType: !1846, size: 64, offset: 192)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !1847, file: !1826, line: 118, baseType: !1855, size: 64, offset: 256)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !1826, line: 47, baseType: !1857)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!43, !1846, !43, !576, !1859, !975}
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1847, file: !1826, line: 119, baseType: !1861, size: 64, offset: 320)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !1826, line: 94, size: 192, elements: !1863)
!1863 = !{!1864, !1865}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1862, file: !1826, line: 95, baseType: !394, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1862, file: !1826, line: 96, baseType: !1106, size: 128, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !1847, file: !1826, line: 120, baseType: !576, size: 64, offset: 384)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !1847, file: !1826, line: 121, baseType: !576, size: 64, offset: 448)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1843, file: !1826, line: 135, baseType: !43, size: 32, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1843, file: !1826, line: 136, baseType: !43, size: 32, offset: 96)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !1843, file: !1826, line: 137, baseType: !43, size: 32, offset: 128)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1840, file: !1826, line: 139, baseType: !310, size: 128, align: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !1837, file: !1826, line: 141, baseType: !1552, size: 64, offset: 192)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !1837, file: !1826, line: 142, baseType: !1846, size: 64, offset: 256)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1837, file: !1826, line: 143, baseType: !1875, size: 64, offset: 320)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !1826, line: 161, size: 960, elements: !1877)
!1877 = !{!1878, !1879, !1883, !1890}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !1876, file: !1826, line: 162, baseType: !1825, size: 768)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1876, file: !1826, line: 163, baseType: !1880, size: 64, offset: 768)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = !DISubroutineType(types: !1882)
!1882 = !{!1832, !1875}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !1876, file: !1826, line: 164, baseType: !1884, size: 64, offset: 832)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = !DISubroutineType(types: !1886)
!1886 = !{null, !1887, !1846, !1888, !1889}
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !1876, file: !1826, line: 167, baseType: !1891, size: 64, offset: 896)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = !DISubroutineType(types: !1893)
!1893 = !{!43, !1887, !1846}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1837, file: !1826, line: 144, baseType: !1832, size: 64, offset: 384)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1837, file: !1826, line: 145, baseType: !1896, size: 64, offset: 448)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1837, file: !1826, line: 146, baseType: !1898, size: 64, offset: 512)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !1826, line: 124, size: 256, elements: !1900)
!1900 = !{!1901, !1902}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1899, file: !1826, line: 125, baseType: !444, size: 192, align: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1899, file: !1826, line: 126, baseType: !1887, size: 64, offset: 192)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1837, file: !1826, line: 147, baseType: !863, size: 64, offset: 576)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1834, file: !1826, line: 153, baseType: !1139, size: 64, offset: 640)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1766, file: !1767, line: 86, baseType: !1887, size: 64, offset: 3712)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1766, file: !1767, line: 88, baseType: !1907, size: 64, offset: 3776)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1767, line: 92, size: 576, elements: !1909)
!1909 = !{!1910, !1911, !1912, !1913, !1914}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1908, file: !1767, line: 93, baseType: !287, size: 128)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1908, file: !1767, line: 94, baseType: !1765, size: 64, offset: 128)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1908, file: !1767, line: 95, baseType: !655, size: 32, offset: 192)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1908, file: !1767, line: 96, baseType: !43, size: 32, offset: 224)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !1908, file: !1767, line: 97, baseType: !1915, size: 320, offset: 256)
!1915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !394, size: 320, elements: !1916)
!1916 = !{!1917}
!1917 = !DISubrange(count: 10)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !1766, file: !1767, line: 89, baseType: !1919, size: 320, offset: 3840)
!1919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 320, elements: !1916)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1600, file: !1601, line: 147, baseType: !1921, size: 64, offset: 1088)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1601, line: 25, size: 64, elements: !1923)
!1923 = !{!1924, !1925, !1926}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1922, file: !1601, line: 26, baseType: !394, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1922, file: !1601, line: 27, baseType: !43, size: 32, offset: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1922, file: !1601, line: 28, baseType: !1927, offset: 64)
!1927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !663, elements: !1928)
!1928 = !{!1929}
!1929 = !DISubrange(count: 0)
!1930 = !DIDerivedType(tag: DW_TAG_member, scope: !1600, file: !1601, line: 149, baseType: !1931, size: 128, offset: 1152)
!1931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1600, file: !1601, line: 149, size: 128, elements: !1932)
!1932 = !{!1933, !1934}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1931, file: !1601, line: 150, baseType: !43, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1931, file: !1601, line: 151, baseType: !310, size: 128, align: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1264, file: !1265, line: 926, baseType: !1598, size: 64, offset: 8576)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1264, file: !1265, line: 929, baseType: !1598, size: 64, offset: 8640)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1264, file: !1265, line: 933, baseType: !1626, size: 64, offset: 8704)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1264, file: !1265, line: 943, baseType: !278, size: 128, offset: 8768)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1264, file: !1265, line: 945, baseType: !1940, size: 64, offset: 8896)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1265, line: 49, flags: DIFlagFwdDecl)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1264, file: !1265, line: 956, baseType: !1943, size: 64, offset: 8960)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1265, line: 45, flags: DIFlagFwdDecl)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1264, file: !1265, line: 959, baseType: !1946, size: 64, offset: 9024)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1265, line: 959, flags: DIFlagFwdDecl)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1264, file: !1265, line: 962, baseType: !1949, size: 64, offset: 9088)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1265, line: 66, flags: DIFlagFwdDecl)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1264, file: !1265, line: 966, baseType: !1952, size: 64, offset: 9152)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1954, line: 31, size: 576, elements: !1955)
!1954 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!1955 = !{!1956, !1957, !1960, !1963, !1966, !1967, !3776, !3779, !3780}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1953, file: !1954, line: 32, baseType: !394, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !1953, file: !1954, line: 33, baseType: !1958, size: 64, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !1954, line: 9, flags: DIFlagFwdDecl)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !1953, file: !1954, line: 34, baseType: !1961, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !1954, line: 10, flags: DIFlagFwdDecl)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !1953, file: !1954, line: 35, baseType: !1964, size: 64, offset: 192)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1965 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !1954, line: 8, flags: DIFlagFwdDecl)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !1953, file: !1954, line: 36, baseType: !1545, size: 64, offset: 256)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !1953, file: !1954, line: 37, baseType: !1968, size: 64, offset: 320)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1970, line: 56, size: 16896, elements: !1971)
!1970 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1971 = !{!1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !2000, !2001, !2002, !2006, !2007, !2008, !2009, !2010, !2013, !2015, !2016, !2031, !2032, !2033, !2034, !2044, !2113, !2119, !2125, !2138, !2674, !3101, !3102, !3105, !3748, !3749, !3775}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !1969, file: !1970, line: 60, baseType: !1277, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1969, file: !1970, line: 63, baseType: !1277, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !1969, file: !1970, line: 66, baseType: !735, offset: 64)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !1969, file: !1970, line: 68, baseType: !7, size: 32, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !1969, file: !1970, line: 70, baseType: !7, size: 32, offset: 96)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !1969, file: !1970, line: 71, baseType: !43, size: 32, offset: 128)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !1969, file: !1970, line: 73, baseType: !735, offset: 160)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !1969, file: !1970, line: 74, baseType: !394, size: 32, offset: 160)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1969, file: !1970, line: 76, baseType: !295, size: 128, offset: 192)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !1969, file: !1970, line: 77, baseType: !295, size: 128, offset: 320)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !1969, file: !1970, line: 83, baseType: !998, size: 64, offset: 448)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !1969, file: !1970, line: 86, baseType: !1684, size: 64, offset: 512)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1969, file: !1970, line: 88, baseType: !1765, size: 64, offset: 576)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1969, file: !1970, line: 89, baseType: !1907, size: 64, offset: 640)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !1969, file: !1970, line: 90, baseType: !1987, size: 192, offset: 704)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1988, line: 19, size: 192, elements: !1989)
!1988 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1989 = !{!1990, !1998, !1999}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1987, file: !1988, line: 20, baseType: !1991, size: 128)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1992, line: 292, size: 128, elements: !1993)
!1992 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1993 = !{!1994, !1995, !1997}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1991, file: !1992, line: 293, baseType: !735)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1991, file: !1992, line: 295, baseType: !1996, size: 32)
!1996 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !288, line: 148, baseType: !7)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1991, file: !1992, line: 296, baseType: !576, size: 64, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1987, file: !1988, line: 21, baseType: !7, size: 32, offset: 128)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1987, file: !1988, line: 22, baseType: !7, size: 32, offset: 160)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1969, file: !1970, line: 92, baseType: !1799, size: 192, offset: 896)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !1969, file: !1970, line: 94, baseType: !295, size: 128, offset: 1088)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !1969, file: !1970, line: 95, baseType: !2003, size: 64, offset: 1216)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !2005, line: 17, flags: DIFlagFwdDecl)
!2005 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !1969, file: !1970, line: 96, baseType: !2003, size: 64, offset: 1280)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1969, file: !1970, line: 99, baseType: !1825, size: 768, offset: 1344)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !1969, file: !1970, line: 102, baseType: !456, size: 64, offset: 2112)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !1969, file: !1970, line: 103, baseType: !456, size: 64, offset: 2176)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !1969, file: !1970, line: 105, baseType: !2011, size: 64, offset: 2240)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64)
!2012 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !1970, line: 48, flags: DIFlagFwdDecl)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !1969, file: !1970, line: 107, baseType: !2014, size: 64, offset: 2304)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !1969, file: !1970, line: 108, baseType: !2014, size: 64, offset: 2368)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !1969, file: !1970, line: 109, baseType: !2017, size: 64, offset: 2432)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !2018, line: 70, size: 64, elements: !2019)
!2018 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!2019 = !{!2020}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2017, file: !2018, line: 71, baseType: !2021, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !2018, line: 54, size: 192, elements: !2023)
!2023 = !{!2024, !2029, !2030}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !2022, file: !2018, line: 55, baseType: !2025, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !2018, line: 51, baseType: !2026)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = !DISubroutineType(types: !2028)
!2028 = !{!43, !2021, !323, !576}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2022, file: !2018, line: 56, baseType: !2021, size: 64, offset: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2022, file: !2018, line: 57, baseType: !43, size: 32, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !1969, file: !1970, line: 114, baseType: !713, size: 32, offset: 2496)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !1969, file: !1970, line: 116, baseType: !301, size: 64, offset: 2560)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !1969, file: !1970, line: 119, baseType: !295, size: 128, offset: 2624)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !1969, file: !1970, line: 121, baseType: !2035, size: 256, offset: 2752)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !2036, line: 8, size: 256, elements: !2037)
!2036 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!2037 = !{!2038, !2039, !2040, !2041}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !2035, file: !2036, line: 10, baseType: !1887, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !2035, file: !2036, line: 12, baseType: !43, size: 32, offset: 64)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !2035, file: !2036, line: 15, baseType: !545, size: 64, offset: 128)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !2035, file: !2036, line: 16, baseType: !2042, size: 64, offset: 192)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2043 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !2036, line: 6, flags: DIFlagFwdDecl)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !1969, file: !1970, line: 122, baseType: !2045, size: 832, offset: 3008)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !2005, line: 7, size: 832, elements: !2046)
!2046 = !{!2047, !2054, !2065, !2073, !2081, !2082, !2090, !2098, !2099, !2100, !2101, !2102, !2108}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !2045, file: !2005, line: 8, baseType: !2048, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !2050, line: 92, size: 1024, elements: !2051)
!2050 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!2051 = !{!2052}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2049, file: !2050, line: 93, baseType: !2053, size: 1024)
!2053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 1024, elements: !280)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !2045, file: !2005, line: 9, baseType: !2055, size: 64, offset: 64)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !2050, line: 51, size: 2368, elements: !2057)
!2057 = !{!2058, !2062}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2056, file: !2050, line: 53, baseType: !2059, size: 2368)
!2059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 2368, elements: !2060)
!2060 = !{!2061}
!2061 = !DISubrange(count: 37)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !2056, file: !2050, line: 54, baseType: !2063, offset: 2368)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !2064, line: 68, elements: !749)
!2064 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !2045, file: !2005, line: 10, baseType: !2066, size: 64, offset: 128)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 64)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !2050, line: 104, size: 7936, elements: !2068)
!2068 = !{!2069}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2067, file: !2050, line: 105, baseType: !2070, size: 7936)
!2070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 7936, elements: !2071)
!2071 = !{!2072}
!2072 = !DISubrange(count: 124)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !2045, file: !2005, line: 11, baseType: !2074, size: 64, offset: 192)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 64)
!2075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !2050, line: 98, size: 576, elements: !2076)
!2076 = !{!2077}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2075, file: !2050, line: 99, baseType: !2078, size: 576)
!2078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 576, elements: !2079)
!2079 = !{!2080}
!2080 = !DISubrange(count: 9)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !2045, file: !2005, line: 12, baseType: !2074, size: 64, offset: 256)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !2045, file: !2005, line: 13, baseType: !2083, size: 64, offset: 320)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !2050, line: 59, size: 1792, elements: !2085)
!2085 = !{!2086}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2084, file: !2050, line: 60, baseType: !2087, size: 1792)
!2087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 1792, elements: !2088)
!2088 = !{!2089}
!2089 = !DISubrange(count: 28)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !2045, file: !2005, line: 14, baseType: !2091, size: 64, offset: 384)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !2050, line: 64, size: 32768, elements: !2093)
!2093 = !{!2094}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2092, file: !2050, line: 65, baseType: !2095, size: 32768)
!2095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !382, size: 32768, elements: !2096)
!2096 = !{!2097}
!2097 = !DISubrange(count: 512)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !2045, file: !2005, line: 17, baseType: !2003, size: 64, offset: 448)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !2045, file: !2005, line: 18, baseType: !2074, size: 64, offset: 512)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !2045, file: !2005, line: 19, baseType: !2074, size: 64, offset: 576)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !2045, file: !2005, line: 20, baseType: !2055, size: 64, offset: 640)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !2045, file: !2005, line: 21, baseType: !2103, size: 64, offset: 704)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !2050, line: 71, size: 384, elements: !2105)
!2105 = !{!2106}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2104, file: !2050, line: 72, baseType: !2107, size: 384)
!2107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 384, elements: !1677)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !2045, file: !2005, line: 22, baseType: !2109, size: 64, offset: 768)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !2050, line: 81, size: 32768, elements: !2111)
!2111 = !{!2112}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2110, file: !2050, line: 82, baseType: !2095, size: 32768)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !1969, file: !1970, line: 123, baseType: !2114, size: 256, offset: 3840)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !2115, line: 11, size: 256, elements: !2116)
!2115 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!2116 = !{!2117, !2118}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !2114, file: !2115, line: 12, baseType: !960, size: 192)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !2114, file: !2115, line: 13, baseType: !863, size: 64, offset: 192)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !1969, file: !1970, line: 124, baseType: !2120, size: 128, offset: 4096)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !2121, line: 9, size: 128, elements: !2122)
!2121 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!2122 = !{!2123, !2124}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !2120, file: !2121, line: 10, baseType: !43, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !2120, file: !2121, line: 11, baseType: !1887, size: 64, offset: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !1969, file: !1970, line: 125, baseType: !2126, size: 512, offset: 4224)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !2127, line: 11, size: 512, elements: !2128)
!2127 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!2128 = !{!2129, !2130, !2131, !2132, !2133}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2126, file: !2127, line: 12, baseType: !1139, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !2126, file: !2127, line: 13, baseType: !2014, size: 64, offset: 64)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2126, file: !2127, line: 15, baseType: !7, size: 32, offset: 128)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !2126, file: !2127, line: 16, baseType: !713, size: 32, offset: 160)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !2126, file: !2127, line: 17, baseType: !2134, size: 320, offset: 192)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !2018, line: 65, size: 320, elements: !2135)
!2135 = !{!2136, !2137}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !2134, file: !2018, line: 66, baseType: !1168, size: 256)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2134, file: !2018, line: 67, baseType: !2021, size: 64, offset: 256)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !1969, file: !1970, line: 126, baseType: !2139, size: 5440, offset: 4736)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !2140, line: 43, size: 5440, elements: !2141)
!2140 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!2141 = !{!2142, !2143, !2144, !2145, !2146, !2147, !2150, !2151, !2164, !2165, !2166, !2167, !2168, !2169, !2171, !2172, !2185, !2186, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2421, !2422, !2423, !2424, !2425, !2476, !2477, !2478, !2560, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2591, !2592, !2594, !2595, !2669, !2670, !2671, !2672, !2673}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !2139, file: !2140, line: 45, baseType: !1887, size: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2139, file: !2140, line: 46, baseType: !1887, size: 64, offset: 64)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !2139, file: !2140, line: 47, baseType: !1887, size: 64, offset: 128)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2139, file: !2140, line: 48, baseType: !1887, size: 64, offset: 192)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !2139, file: !2140, line: 49, baseType: !1887, size: 64, offset: 256)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2139, file: !2140, line: 51, baseType: !2148, size: 64, offset: 320)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !2140, line: 16, flags: DIFlagFwdDecl)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2139, file: !2140, line: 52, baseType: !2148, size: 64, offset: 384)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !2139, file: !2140, line: 53, baseType: !2152, size: 64, offset: 448)
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 64)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !2154, line: 122, size: 320, elements: !2155)
!2154 = !DIFile(filename: "./include/net/ip.h", directory: "/home/lizy2001/genbc/linux")
!2155 = !{!2156, !2157, !2158, !2163}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2153, file: !2154, line: 123, baseType: !2152, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !2153, file: !2154, line: 124, baseType: !456, size: 64, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, scope: !2153, file: !2154, line: 125, baseType: !2159, size: 64, offset: 128)
!2159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2153, file: !2154, line: 125, size: 64, elements: !2160)
!2160 = !{!2161, !2162}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2159, file: !2154, line: 126, baseType: !557, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sk", scope: !2159, file: !2154, line: 127, baseType: !456, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2153, file: !2154, line: 129, baseType: !310, size: 128, align: 64, offset: 192)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !2139, file: !2140, line: 54, baseType: !960, size: 192, offset: 512)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !2139, file: !2140, line: 62, baseType: !546, size: 8, offset: 704)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2139, file: !2140, line: 66, baseType: !2014, size: 64, offset: 768)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !2139, file: !2140, line: 67, baseType: !546, size: 8, offset: 832)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !2139, file: !2140, line: 68, baseType: !456, size: 64, offset: 896)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2139, file: !2140, line: 70, baseType: !2170, size: 64, offset: 960)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2139, file: !2140, line: 71, baseType: !456, size: 64, offset: 1024)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2139, file: !2140, line: 73, baseType: !2173, size: 64, offset: 1088)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !2175, line: 61, size: 128, elements: !2176)
!2175 = !DIFile(filename: "./include/net/inetpeer.h", directory: "/home/lizy2001/genbc/linux")
!2176 = !{!2177, !2178, !2184}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2174, file: !2175, line: 62, baseType: !1139, size: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2174, file: !2175, line: 63, baseType: !2179, size: 32, offset: 64)
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !686, line: 805, baseType: !2180)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !686, line: 798, size: 32, elements: !2181)
!2181 = !{!2182, !2183}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2180, file: !686, line: 803, baseType: !685, size: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2180, file: !686, line: 804, baseType: !735, offset: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !2174, file: !2175, line: 64, baseType: !43, size: 32, offset: 96)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2139, file: !2140, line: 74, baseType: !2170, size: 64, offset: 1152)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2139, file: !2140, line: 75, baseType: !2187, size: 64, offset: 1216)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !2189, line: 9, size: 1728, elements: !2190)
!2189 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!2190 = !{!2191, !2192, !2193, !2194, !2195, !2337, !2338, !2339, !2340, !2341}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !2188, file: !2189, line: 11, baseType: !519, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !2188, file: !2189, line: 12, baseType: !519, size: 64, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2188, file: !2189, line: 13, baseType: !43, size: 32, offset: 128)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !2188, file: !2189, line: 14, baseType: !43, size: 32, offset: 160)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2188, file: !2189, line: 15, baseType: !2196, size: 64, offset: 192)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !2189, line: 98, size: 960, elements: !2198)
!2198 = !{!2199, !2200, !2271, !2275, !2276, !2279, !2280, !2335, !2336}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !2197, file: !2189, line: 99, baseType: !7, size: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2197, file: !2189, line: 101, baseType: !2201, size: 64, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 64)
!2202 = !DISubroutineType(types: !2203)
!2203 = !{null, !2204, !2269}
!2204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !2189, line: 77, size: 1408, elements: !2206)
!2206 = !{!2207, !2213, !2245, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2205, file: !2189, line: 78, baseType: !2208, size: 64)
!2208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !2209, line: 17, size: 64, elements: !2210)
!2209 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!2210 = !{!2211}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2208, file: !2209, line: 18, baseType: !2212, size: 64)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2205, file: !2189, line: 82, baseType: !2214, size: 352, offset: 64)
!2214 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2205, file: !2189, line: 79, size: 352, elements: !2215)
!2215 = !{!2216, !2225}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2214, file: !2189, line: 80, baseType: !2217, size: 160)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !2189, line: 41, size: 160, elements: !2218)
!2218 = !{!2219, !2220, !2221, !2222, !2223, !2224}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2217, file: !2189, line: 42, baseType: !472, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2217, file: !2189, line: 43, baseType: !472, size: 32, offset: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2217, file: !2189, line: 44, baseType: !713, size: 32, offset: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !2217, file: !2189, line: 45, baseType: !713, size: 32, offset: 96)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2217, file: !2189, line: 46, baseType: !495, size: 16, offset: 128)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2217, file: !2189, line: 47, baseType: !1044, size: 16, offset: 144)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2214, file: !2189, line: 81, baseType: !2226, size: 352)
!2226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !2189, line: 50, size: 352, elements: !2227)
!2227 = !{!2228, !2241, !2242, !2243, !2244}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2226, file: !2189, line: 51, baseType: !2229, size: 128)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !2230, line: 33, size: 128, elements: !2231)
!2230 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!2231 = !{!2232}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !2229, file: !2230, line: 40, baseType: !2233, size: 128)
!2233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2229, file: !2230, line: 34, size: 128, elements: !2234)
!2234 = !{!2235, !2237, !2239}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !2233, file: !2230, line: 35, baseType: !2236, size: 128)
!2236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 128, elements: !280)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !2233, file: !2230, line: 37, baseType: !2238, size: 128)
!2238 = !DICompositeType(tag: DW_TAG_array_type, baseType: !495, size: 128, elements: !1377)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !2233, file: !2230, line: 38, baseType: !2240, size: 128)
!2240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !472, size: 128, elements: !1208)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2226, file: !2189, line: 52, baseType: !2229, size: 128, offset: 128)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2226, file: !2189, line: 53, baseType: !713, size: 32, offset: 256)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2226, file: !2189, line: 54, baseType: !472, size: 32, offset: 288)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !2226, file: !2189, line: 55, baseType: !713, size: 32, offset: 320)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2205, file: !2189, line: 83, baseType: !2246, size: 320, offset: 448)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2247, line: 11, size: 320, elements: !2248)
!2247 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2248 = !{!2249, !2250, !2251, !2256}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2246, file: !2247, line: 16, baseType: !287, size: 128)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2246, file: !2247, line: 17, baseType: !323, size: 64, offset: 128)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2246, file: !2247, line: 18, baseType: !2252, size: 64, offset: 192)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DISubroutineType(types: !2254)
!2254 = !{null, !2255}
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2246, file: !2247, line: 19, baseType: !713, size: 32, offset: 256)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2205, file: !2189, line: 84, baseType: !735, offset: 768)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2205, file: !2189, line: 85, baseType: !1277, size: 32, offset: 768)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !2205, file: !2189, line: 86, baseType: !1139, size: 64, offset: 832)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !2205, file: !2189, line: 87, baseType: !426, size: 64, offset: 896)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !2205, file: !2189, line: 88, baseType: !426, size: 64, offset: 960)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2205, file: !2189, line: 89, baseType: !1347, size: 64, offset: 1024)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2205, file: !2189, line: 90, baseType: !43, size: 32, offset: 1088)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !2205, file: !2189, line: 91, baseType: !43, size: 32, offset: 1120)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2205, file: !2189, line: 92, baseType: !1404, size: 8, offset: 1152)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2205, file: !2189, line: 93, baseType: !1044, size: 16, offset: 1168)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2205, file: !2189, line: 94, baseType: !2187, size: 64, offset: 1216)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2205, file: !2189, line: 95, baseType: !310, size: 128, align: 64, offset: 1280)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2197, file: !2189, line: 103, baseType: !2272, size: 64, offset: 128)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = !DISubroutineType(types: !2274)
!2274 = !{null, !2204}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !2197, file: !2189, line: 104, baseType: !2252, size: 64, offset: 192)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !2197, file: !2189, line: 105, baseType: !2277, size: 64, offset: 256)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !632, line: 117, flags: DIFlagFwdDecl)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !2197, file: !2189, line: 106, baseType: !303, size: 64, offset: 320)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !2197, file: !2189, line: 107, baseType: !2281, size: 320, offset: 384)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !2209, line: 56, size: 320, elements: !2282)
!2282 = !{!2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2295, !2297}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !2281, file: !2209, line: 57, baseType: !1044, size: 16)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2281, file: !2209, line: 58, baseType: !1044, size: 16, offset: 16)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !2281, file: !2209, line: 59, baseType: !1044, size: 16, offset: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !2281, file: !2209, line: 60, baseType: !1044, size: 16, offset: 48)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2281, file: !2209, line: 61, baseType: !7, size: 32, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !2281, file: !2209, line: 62, baseType: !1044, size: 16, offset: 96)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !2281, file: !2209, line: 63, baseType: !546, size: 8, offset: 112)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !2281, file: !2209, line: 64, baseType: !2291, size: 64, offset: 128)
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !2209, line: 38, baseType: !2292)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2293 = !DISubroutineType(types: !2294)
!2294 = !{!713, !2269, !713, !713}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !2281, file: !2209, line: 65, baseType: !2296, size: 64, offset: 192)
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !2209, line: 39, baseType: !2292)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !2281, file: !2209, line: 66, baseType: !2298, size: 64, offset: 256)
!2298 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !2209, line: 40, baseType: !2299)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = !DISubroutineType(types: !2301)
!2301 = !{!43, !2302, !2269}
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !2209, line: 33, size: 128, elements: !2304)
!2304 = !{!2305, !2334}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2303, file: !2209, line: 34, baseType: !2306, size: 64)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 64)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !2209, line: 81, size: 1024, elements: !2308)
!2308 = !{!2309, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2307, file: !2209, line: 82, baseType: !2310, size: 64)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 64)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !2312, line: 76, size: 448, elements: !2313)
!2312 = !DIFile(filename: "./include/linux/rhashtable.h", directory: "/home/lizy2001/genbc/linux")
!2313 = !{!2314, !2315, !2316, !2317, !2318, !2319, !2320, !2322}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2311, file: !2312, line: 77, baseType: !7, size: 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "nest", scope: !2311, file: !2312, line: 78, baseType: !7, size: 32, offset: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !2311, file: !2312, line: 79, baseType: !713, size: 32, offset: 64)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !2311, file: !2312, line: 80, baseType: !295, size: 128, offset: 128)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2311, file: !2312, line: 81, baseType: !310, size: 128, align: 64, offset: 256)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "future_tbl", scope: !2311, file: !2312, line: 83, baseType: !2310, size: 64, offset: 384)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "dep_map", scope: !2311, file: !2312, line: 85, baseType: !2321, offset: 448)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !868, line: 192, elements: !749)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2311, file: !2312, line: 87, baseType: !2323, offset: 448)
!2323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2324, elements: !320)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_lock_head", file: !2312, line: 47, elements: !749)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2307, file: !2209, line: 83, baseType: !7, size: 32, offset: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !2307, file: !2209, line: 84, baseType: !7, size: 32, offset: 96)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2307, file: !2209, line: 85, baseType: !2281, size: 320, offset: 128)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !2307, file: !2209, line: 86, baseType: !546, size: 8, offset: 448)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2307, file: !2209, line: 87, baseType: !1813, size: 256, offset: 512)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2307, file: !2209, line: 88, baseType: !960, size: 192, offset: 768)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2307, file: !2209, line: 89, baseType: !735, offset: 960)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !2307, file: !2209, line: 90, baseType: !394, size: 32, offset: 960)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2303, file: !2209, line: 35, baseType: !2269, size: 64, offset: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2197, file: !2189, line: 108, baseType: !1277, size: 32, offset: 704)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2197, file: !2189, line: 109, baseType: !1553, size: 192, offset: 768)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2188, file: !2189, line: 16, baseType: !1968, size: 64, offset: 256)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2188, file: !2189, line: 17, baseType: !546, size: 8, offset: 320)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !2188, file: !2189, line: 19, baseType: !2307, size: 1024, offset: 384)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !2188, file: !2189, line: 22, baseType: !382, size: 64, offset: 1408)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !2188, file: !2189, line: 23, baseType: !1813, size: 256, offset: 1472)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !2139, file: !2140, line: 87, baseType: !43, size: 32, offset: 1280)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !2139, file: !2140, line: 88, baseType: !43, size: 32, offset: 1312)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !2139, file: !2140, line: 89, baseType: !43, size: 32, offset: 1344)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !2139, file: !2140, line: 90, baseType: !43, size: 32, offset: 1376)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !2139, file: !2140, line: 91, baseType: !43, size: 32, offset: 1408)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !2139, file: !2140, line: 92, baseType: !43, size: 32, offset: 1440)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !2139, file: !2140, line: 94, baseType: !2349, size: 128, offset: 1472)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !2140, line: 21, size: 128, elements: !2350)
!2350 = !{!2351, !2352, !2354}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2349, file: !2140, line: 22, baseType: !2179, size: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2349, file: !2140, line: 23, baseType: !2353, size: 64, offset: 32)
!2353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 64, elements: !484)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !2349, file: !2140, line: 24, baseType: !546, size: 8, offset: 96)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !2139, file: !2140, line: 96, baseType: !43, size: 32, offset: 1600)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !2139, file: !2140, line: 97, baseType: !43, size: 32, offset: 1632)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !2139, file: !2140, line: 99, baseType: !43, size: 32, offset: 1664)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !2139, file: !2140, line: 100, baseType: !43, size: 32, offset: 1696)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !2139, file: !2140, line: 101, baseType: !43, size: 32, offset: 1728)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !2139, file: !2140, line: 102, baseType: !43, size: 32, offset: 1760)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !2139, file: !2140, line: 103, baseType: !43, size: 32, offset: 1792)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !2139, file: !2140, line: 104, baseType: !43, size: 32, offset: 1824)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !2139, file: !2140, line: 106, baseType: !43, size: 32, offset: 1856)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !2139, file: !2140, line: 107, baseType: !43, size: 32, offset: 1888)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !2139, file: !2140, line: 111, baseType: !43, size: 32, offset: 1920)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !2139, file: !2140, line: 112, baseType: !43, size: 32, offset: 1952)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !2139, file: !2140, line: 114, baseType: !43, size: 32, offset: 1984)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !2139, file: !2140, line: 116, baseType: !43, size: 32, offset: 2016)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !2139, file: !2140, line: 117, baseType: !43, size: 32, offset: 2048)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !2139, file: !2140, line: 121, baseType: !43, size: 32, offset: 2080)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !2139, file: !2140, line: 122, baseType: !43, size: 32, offset: 2112)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !2139, file: !2140, line: 123, baseType: !43, size: 32, offset: 2144)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !2139, file: !2140, line: 124, baseType: !43, size: 32, offset: 2176)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !2139, file: !2140, line: 125, baseType: !43, size: 32, offset: 2208)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !2139, file: !2140, line: 126, baseType: !713, size: 32, offset: 2240)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !2139, file: !2140, line: 128, baseType: !43, size: 32, offset: 2272)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !2139, file: !2140, line: 129, baseType: !43, size: 32, offset: 2304)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !2139, file: !2140, line: 130, baseType: !43, size: 32, offset: 2336)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !2139, file: !2140, line: 132, baseType: !43, size: 32, offset: 2368)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !2139, file: !2140, line: 133, baseType: !43, size: 32, offset: 2400)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !2139, file: !2140, line: 134, baseType: !43, size: 32, offset: 2432)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !2139, file: !2140, line: 135, baseType: !43, size: 32, offset: 2464)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !2139, file: !2140, line: 136, baseType: !43, size: 32, offset: 2496)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !2139, file: !2140, line: 137, baseType: !43, size: 32, offset: 2528)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !2139, file: !2140, line: 138, baseType: !43, size: 32, offset: 2560)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !2139, file: !2140, line: 139, baseType: !43, size: 32, offset: 2592)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !2139, file: !2140, line: 140, baseType: !7, size: 32, offset: 2624)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !2139, file: !2140, line: 141, baseType: !43, size: 32, offset: 2656)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !2139, file: !2140, line: 142, baseType: !43, size: 32, offset: 2688)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !2139, file: !2140, line: 143, baseType: !43, size: 32, offset: 2720)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !2139, file: !2140, line: 144, baseType: !43, size: 32, offset: 2752)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !2139, file: !2140, line: 145, baseType: !43, size: 32, offset: 2784)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !2139, file: !2140, line: 146, baseType: !43, size: 32, offset: 2816)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !2139, file: !2140, line: 147, baseType: !43, size: 32, offset: 2848)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !2139, file: !2140, line: 148, baseType: !43, size: 32, offset: 2880)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !2139, file: !2140, line: 149, baseType: !43, size: 32, offset: 2912)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !2139, file: !2140, line: 150, baseType: !43, size: 32, offset: 2944)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !2139, file: !2140, line: 151, baseType: !43, size: 32, offset: 2976)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !2139, file: !2140, line: 152, baseType: !43, size: 32, offset: 3008)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !2139, file: !2140, line: 153, baseType: !43, size: 32, offset: 3040)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !2139, file: !2140, line: 154, baseType: !43, size: 32, offset: 3072)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !2139, file: !2140, line: 155, baseType: !43, size: 32, offset: 3104)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !2139, file: !2140, line: 156, baseType: !43, size: 32, offset: 3136)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !2139, file: !2140, line: 157, baseType: !43, size: 32, offset: 3168)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !2139, file: !2140, line: 158, baseType: !43, size: 32, offset: 3200)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !2139, file: !2140, line: 159, baseType: !43, size: 32, offset: 3232)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !2139, file: !2140, line: 160, baseType: !43, size: 32, offset: 3264)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !2139, file: !2140, line: 161, baseType: !43, size: 32, offset: 3296)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !2139, file: !2140, line: 162, baseType: !43, size: 32, offset: 3328)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !2139, file: !2140, line: 163, baseType: !43, size: 32, offset: 3360)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !2139, file: !2140, line: 164, baseType: !43, size: 32, offset: 3392)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !2139, file: !2140, line: 165, baseType: !43, size: 32, offset: 3424)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !2139, file: !2140, line: 166, baseType: !43, size: 32, offset: 3456)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !2139, file: !2140, line: 167, baseType: !43, size: 32, offset: 3488)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !2139, file: !2140, line: 168, baseType: !43, size: 32, offset: 3520)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !2139, file: !2140, line: 169, baseType: !43, size: 32, offset: 3552)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !2139, file: !2140, line: 170, baseType: !43, size: 32, offset: 3584)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !2139, file: !2140, line: 171, baseType: !43, size: 32, offset: 3616)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !2139, file: !2140, line: 172, baseType: !2420, size: 96, offset: 3648)
!2420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 96, elements: !873)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !2139, file: !2140, line: 173, baseType: !2420, size: 96, offset: 3744)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !2139, file: !2140, line: 174, baseType: !43, size: 32, offset: 3840)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !2139, file: !2140, line: 175, baseType: !323, size: 64, offset: 3904)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !2139, file: !2140, line: 176, baseType: !323, size: 64, offset: 3968)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !2139, file: !2140, line: 177, baseType: !2426, size: 192, offset: 4032)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !2140, line: 34, size: 192, elements: !2427)
!2427 = !{!2428, !2429, !2475}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !2426, file: !2140, line: 35, baseType: !394, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !2426, file: !2140, line: 37, baseType: !2430, size: 64, offset: 64)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !2432, line: 124, size: 4544, elements: !2433)
!2432 = !DIFile(filename: "./include/net/inet_hashtables.h", directory: "/home/lizy2001/genbc/linux")
!2433 = !{!2434, !2449, !2451, !2452, !2453, !2454, !2460, !2461, !2462, !2473}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "ehash", scope: !2431, file: !2432, line: 131, baseType: !2435, size: 64)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_ehash_bucket", file: !2432, line: 38, size: 64, elements: !2437)
!2437 = !{!2438}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !2436, file: !2432, line: 39, baseType: !2439, size: 64)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_nulls_head", file: !2440, line: 21, size: 64, elements: !2441)
!2440 = !DIFile(filename: "./include/linux/list_nulls.h", directory: "/home/lizy2001/genbc/linux")
!2441 = !{!2442}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2439, file: !2440, line: 22, baseType: !2443, size: 64)
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 64)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_nulls_node", file: !2440, line: 25, size: 128, elements: !2445)
!2445 = !{!2446, !2447}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2444, file: !2440, line: 26, baseType: !2443, size: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !2444, file: !2440, line: 26, baseType: !2448, size: 64, offset: 64)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "ehash_locks", scope: !2431, file: !2432, line: 132, baseType: !2450, size: 64, offset: 64)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "ehash_mask", scope: !2431, file: !2432, line: 133, baseType: !7, size: 32, offset: 128)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "ehash_locks_mask", scope: !2431, file: !2432, line: 134, baseType: !7, size: 32, offset: 160)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "bind_bucket_cachep", scope: !2431, file: !2432, line: 139, baseType: !2277, size: 64, offset: 192)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "bhash", scope: !2431, file: !2432, line: 140, baseType: !2455, size: 64, offset: 256)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 64)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_bind_hashbucket", file: !2432, line: 101, size: 64, elements: !2457)
!2457 = !{!2458, !2459}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2456, file: !2432, line: 102, baseType: !735)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !2456, file: !2432, line: 103, baseType: !863, size: 64)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "bhash_size", scope: !2431, file: !2432, line: 141, baseType: !7, size: 32, offset: 320)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "lhash2_mask", scope: !2431, file: !2432, line: 144, baseType: !7, size: 32, offset: 352)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "lhash2", scope: !2431, file: !2432, line: 145, baseType: !2463, size: 64, offset: 384)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_listen_hashbucket", file: !2432, line: 112, size: 128, elements: !2465)
!2465 = !{!2466, !2467, !2468}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2464, file: !2432, line: 113, baseType: !735)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2464, file: !2432, line: 114, baseType: !7, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, scope: !2464, file: !2432, line: 115, baseType: !2469, size: 64, offset: 64)
!2469 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2464, file: !2432, line: 115, size: 64, elements: !2470)
!2470 = !{!2471, !2472}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2469, file: !2432, line: 116, baseType: !863, size: 64)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "nulls_head", scope: !2469, file: !2432, line: 117, baseType: !2439, size: 64)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "listening_hash", scope: !2431, file: !2432, line: 159, baseType: !2474, size: 4096, offset: 448)
!2474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2464, size: 4096, elements: !722)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !2426, file: !2140, line: 38, baseType: !43, size: 32, offset: 128)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !2139, file: !2140, line: 178, baseType: !43, size: 32, offset: 4224)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !2139, file: !2140, line: 179, baseType: !43, size: 32, offset: 4256)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !2139, file: !2140, line: 180, baseType: !2479, size: 64, offset: 4288)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2481)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !2482, line: 1055, size: 1216, elements: !2483)
!2482 = !DIFile(filename: "./include/net/tcp.h", directory: "/home/lizy2001/genbc/linux")
!2483 = !{!2484, !2485, !2486, !2487, !2488, !2489, !2493, !2497, !2501, !2513, !2517, !2518, !2529, !2530, !2531, !2552, !2558, !2559}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2481, file: !2482, line: 1056, baseType: !295, size: 128)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2481, file: !2482, line: 1057, baseType: !713, size: 32, offset: 128)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2481, file: !2482, line: 1058, baseType: !713, size: 32, offset: 160)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2481, file: !2482, line: 1061, baseType: !557, size: 64, offset: 192)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2481, file: !2482, line: 1063, baseType: !557, size: 64, offset: 256)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "ssthresh", scope: !2481, file: !2482, line: 1066, baseType: !2490, size: 64, offset: 320)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{!713, !456}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "cong_avoid", scope: !2481, file: !2482, line: 1068, baseType: !2494, size: 64, offset: 384)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{null, !456, !713, !713}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "set_state", scope: !2481, file: !2482, line: 1070, baseType: !2498, size: 64, offset: 448)
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 64)
!2499 = !DISubroutineType(types: !2500)
!2500 = !{null, !456, !1403}
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "cwnd_event", scope: !2481, file: !2482, line: 1072, baseType: !2502, size: 64, offset: 512)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64)
!2503 = !DISubroutineType(types: !2504)
!2504 = !{null, !456, !2505}
!2505 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tcp_ca_event", file: !2482, line: 992, baseType: !7, size: 32, elements: !2506)
!2506 = !{!2507, !2508, !2509, !2510, !2511, !2512}
!2507 = !DIEnumerator(name: "CA_EVENT_TX_START", value: 0, isUnsigned: true)
!2508 = !DIEnumerator(name: "CA_EVENT_CWND_RESTART", value: 1, isUnsigned: true)
!2509 = !DIEnumerator(name: "CA_EVENT_COMPLETE_CWR", value: 2, isUnsigned: true)
!2510 = !DIEnumerator(name: "CA_EVENT_LOSS", value: 3, isUnsigned: true)
!2511 = !DIEnumerator(name: "CA_EVENT_ECN_NO_CE", value: 4, isUnsigned: true)
!2512 = !DIEnumerator(name: "CA_EVENT_ECN_IS_CE", value: 5, isUnsigned: true)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "in_ack_event", scope: !2481, file: !2482, line: 1074, baseType: !2514, size: 64, offset: 576)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 64)
!2515 = !DISubroutineType(types: !2516)
!2516 = !{null, !456, !713}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "undo_cwnd", scope: !2481, file: !2482, line: 1076, baseType: !2490, size: 64, offset: 640)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "pkts_acked", scope: !2481, file: !2482, line: 1078, baseType: !2519, size: 64, offset: 704)
!2519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!2520 = !DISubroutineType(types: !2521)
!2521 = !{null, !456, !2522}
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64)
!2523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2524)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ack_sample", file: !2482, line: 1025, size: 96, elements: !2525)
!2525 = !{!2526, !2527, !2528}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "pkts_acked", scope: !2524, file: !2482, line: 1026, baseType: !713, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "rtt_us", scope: !2524, file: !2482, line: 1027, baseType: !1495, size: 32, offset: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "in_flight", scope: !2524, file: !2482, line: 1028, baseType: !713, size: 32, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "min_tso_segs", scope: !2481, file: !2482, line: 1080, baseType: !2490, size: 64, offset: 768)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "sndbuf_expand", scope: !2481, file: !2482, line: 1082, baseType: !2490, size: 64, offset: 832)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "cong_control", scope: !2481, file: !2482, line: 1086, baseType: !2532, size: 64, offset: 896)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64)
!2533 = !DISubroutineType(types: !2534)
!2534 = !{null, !456, !2535}
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!2536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2537)
!2537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rate_sample", file: !2482, line: 1039, size: 448, elements: !2538)
!2538 = !{!2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "prior_mstamp", scope: !2537, file: !2482, line: 1040, baseType: !342, size: 64)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "prior_delivered", scope: !2537, file: !2482, line: 1041, baseType: !713, size: 32, offset: 64)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "delivered", scope: !2537, file: !2482, line: 1042, baseType: !1495, size: 32, offset: 96)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "interval_us", scope: !2537, file: !2482, line: 1043, baseType: !519, size: 64, offset: 128)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "snd_interval_us", scope: !2537, file: !2482, line: 1044, baseType: !713, size: 32, offset: 192)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_interval_us", scope: !2537, file: !2482, line: 1045, baseType: !713, size: 32, offset: 224)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "rtt_us", scope: !2537, file: !2482, line: 1046, baseType: !519, size: 64, offset: 256)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "losses", scope: !2537, file: !2482, line: 1047, baseType: !43, size: 32, offset: 320)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "acked_sacked", scope: !2537, file: !2482, line: 1048, baseType: !713, size: 32, offset: 352)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "prior_in_flight", scope: !2537, file: !2482, line: 1049, baseType: !713, size: 32, offset: 384)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "is_app_limited", scope: !2537, file: !2482, line: 1050, baseType: !546, size: 8, offset: 416)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "is_retrans", scope: !2537, file: !2482, line: 1051, baseType: !546, size: 8, offset: 424)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "is_ack_delayed", scope: !2537, file: !2482, line: 1052, baseType: !546, size: 8, offset: 432)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "get_info", scope: !2481, file: !2482, line: 1088, baseType: !2553, size: 64, offset: 960)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 64)
!2554 = !DISubroutineType(types: !2555)
!2555 = !{!600, !456, !713, !545, !2556}
!2556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 64)
!2557 = !DICompositeType(tag: DW_TAG_union_type, name: "tcp_cc_info", file: !2482, line: 1023, flags: DIFlagFwdDecl)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2481, file: !2482, line: 1091, baseType: !278, size: 128, offset: 1024)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2481, file: !2482, line: 1092, baseType: !858, size: 64, offset: 1152)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !2139, file: !2140, line: 181, baseType: !2561, size: 64, offset: 4352)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !2482, line: 1685, size: 448, elements: !2563)
!2563 = !{!2564, !2572, !2573}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2562, file: !2482, line: 1686, baseType: !2565, size: 256)
!2565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2566, size: 256, elements: !484)
!2566 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !2567, line: 22, baseType: !2568)
!2567 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2567, line: 20, size: 128, elements: !2569)
!2569 = !{!2570}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2568, file: !2567, line: 21, baseType: !2571, size: 128)
!2571 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 128, elements: !484)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2562, file: !2482, line: 1687, baseType: !43, size: 32, offset: 256)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2562, file: !2482, line: 1688, baseType: !310, size: 128, align: 64, offset: 320)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !2139, file: !2140, line: 182, baseType: !735, offset: 4416)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !2139, file: !2140, line: 183, baseType: !7, size: 32, offset: 4416)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !2139, file: !2140, line: 184, baseType: !394, size: 32, offset: 4448)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !2139, file: !2140, line: 185, baseType: !323, size: 64, offset: 4480)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !2139, file: !2140, line: 186, baseType: !43, size: 32, offset: 4544)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !2139, file: !2140, line: 188, baseType: !43, size: 32, offset: 4576)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !2139, file: !2140, line: 189, baseType: !43, size: 32, offset: 4608)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !2139, file: !2140, line: 195, baseType: !43, size: 32, offset: 4640)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !2139, file: !2140, line: 196, baseType: !43, size: 32, offset: 4672)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !2139, file: !2140, line: 197, baseType: !43, size: 32, offset: 4704)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !2139, file: !2140, line: 198, baseType: !43, size: 32, offset: 4736)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !2139, file: !2140, line: 200, baseType: !2586, size: 96, offset: 4768)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !2140, line: 27, size: 96, elements: !2587)
!2587 = !{!2588, !2589}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2586, file: !2140, line: 28, baseType: !2179, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2586, file: !2140, line: 29, baseType: !2590, size: 64, offset: 32)
!2590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !663, size: 64, elements: !484)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2139, file: !2140, line: 202, baseType: !394, size: 32, offset: 4864)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !2139, file: !2140, line: 205, baseType: !2593, size: 64, offset: 4928)
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !2139, file: !2140, line: 206, baseType: !43, size: 32, offset: 4992)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2139, file: !2140, line: 222, baseType: !2596, size: 64, offset: 5056)
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !2598, line: 28, size: 512, elements: !2599)
!2598 = !DIFile(filename: "./include/net/fib_notifier.h", directory: "/home/lizy2001/genbc/linux")
!2599 = !{!2600, !2601, !2602, !2606, !2667, !2668}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2597, file: !2598, line: 29, baseType: !43, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2597, file: !2598, line: 30, baseType: !295, size: 128, offset: 64)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq_read", scope: !2597, file: !2598, line: 31, baseType: !2603, size: 64, offset: 192)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64)
!2604 = !DISubroutineType(types: !2605)
!2605 = !{!7, !1968}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dump", scope: !2597, file: !2598, line: 32, baseType: !2607, size: 64, offset: 256)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 64)
!2608 = !DISubroutineType(types: !2609)
!2609 = !{!43, !1968, !2021, !2610}
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !2612, line: 75, size: 384, elements: !2613)
!2612 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2613 = !{!2614, !2615, !2623, !2662, !2666}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !2611, file: !2612, line: 76, baseType: !303, size: 64)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !2611, file: !2612, line: 77, baseType: !2616, size: 64, offset: 64)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2617 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2618)
!2618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !2619, line: 213, size: 32, elements: !2620)
!2619 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2620 = !{!2621, !2622}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !2618, file: !2619, line: 214, baseType: !482, size: 16)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !2618, file: !2619, line: 215, baseType: !482, size: 16, offset: 16)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2611, file: !2612, line: 78, baseType: !2624, size: 64, offset: 128)
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 64)
!2625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2626)
!2626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !2627, line: 315, size: 128, elements: !2628)
!2627 = !DIFile(filename: "./include/net/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2628 = !{!2629, !2630, !2631, !2632}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2626, file: !2627, line: 316, baseType: !1403, size: 8)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "validation_type", scope: !2626, file: !2627, line: 317, baseType: !1403, size: 8, offset: 8)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2626, file: !2627, line: 318, baseType: !1044, size: 16, offset: 16)
!2632 = !DIDerivedType(tag: DW_TAG_member, scope: !2626, file: !2627, line: 319, baseType: !2633, size: 64, offset: 64)
!2633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2626, file: !2627, line: 319, size: 64, elements: !2634)
!2634 = !{!2635, !2637, !2638, !2639, !2640, !2646, !2652, !2657, !2661}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "bitfield32_valid", scope: !2633, file: !2627, line: 320, baseType: !2636, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !713)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2633, file: !2627, line: 321, baseType: !2636, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "reject_message", scope: !2633, file: !2627, line: 322, baseType: !303, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "nested_policy", scope: !2633, file: !2627, line: 323, baseType: !2624, size: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2633, file: !2627, line: 324, baseType: !2641, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation", file: !2627, line: 189, size: 128, elements: !2643)
!2643 = !{!2644, !2645}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2642, file: !2627, line: 190, baseType: !342, size: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2642, file: !2627, line: 190, baseType: !342, size: 64, offset: 64)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "range_signed", scope: !2633, file: !2627, line: 325, baseType: !2647, size: 64)
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation_signed", file: !2627, line: 193, size: 128, elements: !2649)
!2649 = !{!2650, !2651}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2648, file: !2627, line: 194, baseType: !388, size: 64)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2648, file: !2627, line: 194, baseType: !388, size: 64, offset: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, scope: !2633, file: !2627, line: 326, baseType: !2653, size: 32)
!2653 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2633, file: !2627, line: 326, size: 32, elements: !2654)
!2654 = !{!2655, !2656}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2653, file: !2627, line: 327, baseType: !1250, size: 16)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2653, file: !2627, line: 327, baseType: !1250, size: 16, offset: 16)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !2633, file: !2627, line: 329, baseType: !2658, size: 64)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = !DISubroutineType(types: !2660)
!2660 = !{!43, !2616, !2610}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "strict_start_type", scope: !2633, file: !2627, line: 349, baseType: !1044, size: 16)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !2611, file: !2612, line: 79, baseType: !2663, size: 160, offset: 192)
!2663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 160, elements: !2664)
!2664 = !{!2665}
!2665 = !DISubrange(count: 20)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !2611, file: !2612, line: 80, baseType: !1403, size: 8, offset: 352)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2597, file: !2598, line: 34, baseType: !858, size: 64, offset: 320)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2597, file: !2598, line: 35, baseType: !310, size: 128, align: 64, offset: 384)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !2139, file: !2140, line: 223, baseType: !7, size: 32, offset: 5120)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !2139, file: !2140, line: 225, baseType: !2596, size: 64, offset: 5184)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2139, file: !2140, line: 226, baseType: !7, size: 32, offset: 5248)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !2139, file: !2140, line: 228, baseType: !394, size: 32, offset: 5280)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !2139, file: !2140, line: 229, baseType: !2566, size: 128, offset: 5312)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !1969, file: !1970, line: 128, baseType: !2675, size: 4608, offset: 10176)
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !2676, line: 56, size: 4608, elements: !2677)
!2676 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2677 = !{!2678, !2718, !2772, !2773, !2774, !2775, !2778, !2781, !2784, !2785, !2786, !2789, !2790, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3092, !3093, !3094, !3095}
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !2675, file: !2676, line: 57, baseType: !2679, size: 1600)
!2679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !2676, line: 15, size: 1600, elements: !2680)
!2680 = !{!2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717}
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !2679, file: !2676, line: 17, baseType: !1887, size: 64)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2679, file: !2676, line: 18, baseType: !1887, size: 64, offset: 64)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !2679, file: !2676, line: 19, baseType: !1887, size: 64, offset: 128)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2679, file: !2676, line: 20, baseType: !1887, size: 64, offset: 192)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !2679, file: !2676, line: 21, baseType: !1887, size: 64, offset: 256)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !2679, file: !2676, line: 23, baseType: !43, size: 32, offset: 320)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !2679, file: !2676, line: 24, baseType: !43, size: 32, offset: 352)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !2679, file: !2676, line: 25, baseType: !43, size: 32, offset: 384)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !2679, file: !2676, line: 26, baseType: !43, size: 32, offset: 416)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !2679, file: !2676, line: 27, baseType: !43, size: 32, offset: 448)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !2679, file: !2676, line: 28, baseType: !43, size: 32, offset: 480)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !2679, file: !2676, line: 29, baseType: !43, size: 32, offset: 512)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !2679, file: !2676, line: 30, baseType: !43, size: 32, offset: 544)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !2679, file: !2676, line: 31, baseType: !43, size: 32, offset: 576)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !2679, file: !2676, line: 32, baseType: !43, size: 32, offset: 608)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !2679, file: !2676, line: 33, baseType: !43, size: 32, offset: 640)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !2679, file: !2676, line: 34, baseType: !43, size: 32, offset: 672)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !2679, file: !2676, line: 35, baseType: !43, size: 32, offset: 704)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !2679, file: !2676, line: 36, baseType: !43, size: 32, offset: 736)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !2679, file: !2676, line: 37, baseType: !43, size: 32, offset: 768)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !2679, file: !2676, line: 38, baseType: !43, size: 32, offset: 800)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !2679, file: !2676, line: 39, baseType: !2703, size: 256, offset: 832)
!2703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 256, elements: !1208)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !2679, file: !2676, line: 40, baseType: !2593, size: 64, offset: 1088)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !2679, file: !2676, line: 41, baseType: !43, size: 32, offset: 1152)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !2679, file: !2676, line: 42, baseType: !43, size: 32, offset: 1184)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !2679, file: !2676, line: 43, baseType: !43, size: 32, offset: 1216)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !2679, file: !2676, line: 44, baseType: !43, size: 32, offset: 1248)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !2679, file: !2676, line: 45, baseType: !43, size: 32, offset: 1280)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !2679, file: !2676, line: 46, baseType: !43, size: 32, offset: 1312)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !2679, file: !2676, line: 47, baseType: !43, size: 32, offset: 1344)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !2679, file: !2676, line: 48, baseType: !43, size: 32, offset: 1376)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !2679, file: !2676, line: 49, baseType: !43, size: 32, offset: 1408)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !2679, file: !2676, line: 50, baseType: !43, size: 32, offset: 1440)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !2679, file: !2676, line: 51, baseType: !43, size: 32, offset: 1472)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !2679, file: !2676, line: 52, baseType: !43, size: 32, offset: 1504)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !2679, file: !2676, line: 53, baseType: !546, size: 8, offset: 1536)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2675, file: !2676, line: 58, baseType: !2719, size: 64, offset: 1600)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !2721, line: 12, size: 1600, elements: !2722)
!2721 = !DIFile(filename: "./include/linux/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2722 = !{!2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "forwarding", scope: !2720, file: !2721, line: 13, baseType: !1496, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !2720, file: !2721, line: 14, baseType: !1496, size: 32, offset: 32)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "mtu6", scope: !2720, file: !2721, line: 15, baseType: !1496, size: 32, offset: 64)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra", scope: !2720, file: !2721, line: 16, baseType: !1496, size: 32, offset: 96)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "accept_redirects", scope: !2720, file: !2721, line: 17, baseType: !1496, size: 32, offset: 128)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "autoconf", scope: !2720, file: !2721, line: 18, baseType: !1496, size: 32, offset: 160)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "dad_transmits", scope: !2720, file: !2721, line: 19, baseType: !1496, size: 32, offset: 192)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicits", scope: !2720, file: !2721, line: 20, baseType: !1496, size: 32, offset: 224)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_interval", scope: !2720, file: !2721, line: 21, baseType: !1496, size: 32, offset: 256)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_max_interval", scope: !2720, file: !2721, line: 22, baseType: !1496, size: 32, offset: 288)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_delay", scope: !2720, file: !2721, line: 23, baseType: !1496, size: 32, offset: 320)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "force_mld_version", scope: !2720, file: !2721, line: 24, baseType: !1496, size: 32, offset: 352)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "mldv1_unsolicited_report_interval", scope: !2720, file: !2721, line: 25, baseType: !1496, size: 32, offset: 384)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "mldv2_unsolicited_report_interval", scope: !2720, file: !2721, line: 26, baseType: !1496, size: 32, offset: 416)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "use_tempaddr", scope: !2720, file: !2721, line: 27, baseType: !1496, size: 32, offset: 448)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "temp_valid_lft", scope: !2720, file: !2721, line: 28, baseType: !1496, size: 32, offset: 480)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "temp_prefered_lft", scope: !2720, file: !2721, line: 29, baseType: !1496, size: 32, offset: 512)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "regen_max_retry", scope: !2720, file: !2721, line: 30, baseType: !1496, size: 32, offset: 544)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "max_desync_factor", scope: !2720, file: !2721, line: 31, baseType: !1496, size: 32, offset: 576)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "max_addresses", scope: !2720, file: !2721, line: 32, baseType: !1496, size: 32, offset: 608)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_defrtr", scope: !2720, file: !2721, line: 33, baseType: !1496, size: 32, offset: 640)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_min_hop_limit", scope: !2720, file: !2721, line: 34, baseType: !1496, size: 32, offset: 672)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_pinfo", scope: !2720, file: !2721, line: 35, baseType: !1496, size: 32, offset: 704)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_routes_with_linkdown", scope: !2720, file: !2721, line: 36, baseType: !1496, size: 32, offset: 736)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ndp", scope: !2720, file: !2721, line: 45, baseType: !1496, size: 32, offset: 768)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "accept_source_route", scope: !2720, file: !2721, line: 46, baseType: !1496, size: 32, offset: 800)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_from_local", scope: !2720, file: !2721, line: 47, baseType: !1496, size: 32, offset: 832)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "disable_ipv6", scope: !2720, file: !2721, line: 55, baseType: !1496, size: 32, offset: 864)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unicast_in_l2_multicast", scope: !2720, file: !2721, line: 56, baseType: !1496, size: 32, offset: 896)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "accept_dad", scope: !2720, file: !2721, line: 57, baseType: !1496, size: 32, offset: 928)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "force_tllao", scope: !2720, file: !2721, line: 58, baseType: !1496, size: 32, offset: 960)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_notify", scope: !2720, file: !2721, line: 59, baseType: !1496, size: 32, offset: 992)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_frag_ndisc", scope: !2720, file: !2721, line: 60, baseType: !1496, size: 32, offset: 1024)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_mtu", scope: !2720, file: !2721, line: 61, baseType: !1496, size: 32, offset: 1056)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unsolicited_na", scope: !2720, file: !2721, line: 62, baseType: !1496, size: 32, offset: 1088)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "stable_secret", scope: !2720, file: !2721, line: 66, baseType: !2759, size: 160, offset: 1120)
!2759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_stable_secret", file: !2721, line: 63, size: 160, elements: !2760)
!2760 = !{!2761, !2762}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2759, file: !2721, line: 64, baseType: !546, size: 8)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "secret", scope: !2759, file: !2721, line: 65, baseType: !2229, size: 128, offset: 32)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "use_oif_addrs_only", scope: !2720, file: !2721, line: 67, baseType: !1496, size: 32, offset: 1280)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "keep_addr_on_down", scope: !2720, file: !2721, line: 68, baseType: !1496, size: 32, offset: 1312)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_enabled", scope: !2720, file: !2721, line: 69, baseType: !1496, size: 32, offset: 1344)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_dad", scope: !2720, file: !2721, line: 73, baseType: !474, size: 32, offset: 1376)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "addr_gen_mode", scope: !2720, file: !2721, line: 74, baseType: !474, size: 32, offset: 1408)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "disable_policy", scope: !2720, file: !2721, line: 75, baseType: !1496, size: 32, offset: 1440)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_tclass", scope: !2720, file: !2721, line: 76, baseType: !1496, size: 32, offset: 1472)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "rpl_seg_enabled", scope: !2720, file: !2721, line: 77, baseType: !1496, size: 32, offset: 1504)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_header", scope: !2720, file: !2721, line: 79, baseType: !1887, size: 64, offset: 1536)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2675, file: !2676, line: 59, baseType: !2719, size: 64, offset: 1664)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2675, file: !2676, line: 60, baseType: !2173, size: 64, offset: 1728)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2675, file: !2676, line: 61, baseType: !2187, size: 64, offset: 1792)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !2675, file: !2676, line: 71, baseType: !2776, size: 64, offset: 1856)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !2676, line: 71, flags: DIFlagFwdDecl)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !2675, file: !2676, line: 72, baseType: !2779, size: 64, offset: 1920)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !2676, line: 72, flags: DIFlagFwdDecl)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !2675, file: !2676, line: 73, baseType: !2782, size: 64, offset: 1984)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !2676, line: 73, flags: DIFlagFwdDecl)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !2675, file: !2676, line: 74, baseType: !2246, size: 320, offset: 2048)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2675, file: !2676, line: 75, baseType: !2014, size: 64, offset: 2368)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !2675, file: !2676, line: 76, baseType: !2787, size: 64, offset: 2432)
!2787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 64)
!2788 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !2676, line: 76, flags: DIFlagFwdDecl)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !2675, file: !2676, line: 77, baseType: !295, size: 128, offset: 2496)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !2675, file: !2676, line: 78, baseType: !2791, size: 1088, offset: 2624)
!2791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !2792, line: 15, size: 1088, elements: !2793)
!2792 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!2793 = !{!2794, !2795, !2796, !2801, !2836, !2842, !2843, !2847, !2851, !2855, !2859, !2863, !2867, !2871, !2872, !3068, !3072, !3073}
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2791, file: !2792, line: 16, baseType: !483, size: 16)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !2791, file: !2792, line: 17, baseType: !7, size: 32, offset: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !2791, file: !2792, line: 19, baseType: !2797, size: 64, offset: 64)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = !DISubroutineType(types: !2799)
!2799 = !{!43, !2800}
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 64)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2791, file: !2792, line: 20, baseType: !2802, size: 64, offset: 128)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 64)
!2803 = !DISubroutineType(types: !2804)
!2804 = !{!2805, !2805, !474}
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !2807, line: 24, size: 896, elements: !2808)
!2807 = !DIFile(filename: "./include/net/dst.h", directory: "/home/lizy2001/genbc/linux")
!2808 = !{!2809, !2810, !2811, !2812, !2813, !2814, !2818, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2832, !2833, !2834, !2835}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2806, file: !2807, line: 25, baseType: !301, size: 64)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2806, file: !2807, line: 26, baseType: !2800, size: 64, offset: 64)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "_metrics", scope: !2806, file: !2807, line: 27, baseType: !323, size: 64, offset: 128)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2806, file: !2807, line: 28, baseType: !323, size: 64, offset: 192)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2806, file: !2807, line: 32, baseType: !576, size: 64, offset: 256)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !2806, file: !2807, line: 34, baseType: !2815, size: 64, offset: 320)
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 64)
!2816 = !DISubroutineType(types: !2817)
!2817 = !{!43, !426}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2806, file: !2807, line: 35, baseType: !2819, size: 64, offset: 384)
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 64)
!2820 = !DISubroutineType(types: !2821)
!2821 = !{!43, !1968, !456, !426}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2806, file: !2807, line: 37, baseType: !483, size: 16, offset: 448)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "obsolete", scope: !2806, file: !2807, line: 54, baseType: !1252, size: 16, offset: 464)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "header_len", scope: !2806, file: !2807, line: 59, baseType: !483, size: 16, offset: 480)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "trailer_len", scope: !2806, file: !2807, line: 60, baseType: !483, size: 16, offset: 496)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "__refcnt", scope: !2806, file: !2807, line: 67, baseType: !394, size: 32, offset: 512)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "__use", scope: !2806, file: !2807, line: 69, baseType: !43, size: 32, offset: 544)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "lastuse", scope: !2806, file: !2807, line: 70, baseType: !323, size: 64, offset: 576)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "lwtstate", scope: !2806, file: !2807, line: 71, baseType: !2830, size: 64, offset: 640)
!2830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2831, size: 64)
!2831 = !DICompositeType(tag: DW_TAG_structure_type, name: "lwtunnel_state", file: !2807, line: 71, flags: DIFlagFwdDecl)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2806, file: !2807, line: 72, baseType: !310, size: 128, align: 64, offset: 704)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2806, file: !2807, line: 73, baseType: !1252, size: 16, offset: 832)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !2806, file: !2807, line: 74, baseType: !1252, size: 16, offset: 848)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "tclassid", scope: !2806, file: !2807, line: 75, baseType: !474, size: 32, offset: 864)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !2791, file: !2792, line: 21, baseType: !2837, size: 64, offset: 192)
!2837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 64)
!2838 = !DISubroutineType(types: !2839)
!2839 = !{!7, !2840}
!2840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2841, size: 64)
!2841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2806)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !2791, file: !2792, line: 22, baseType: !2837, size: 64, offset: 256)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !2791, file: !2792, line: 23, baseType: !2844, size: 64, offset: 320)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DISubroutineType(types: !2846)
!2846 = !{!1466, !2805, !323}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !2791, file: !2792, line: 24, baseType: !2848, size: 64, offset: 384)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2849 = !DISubroutineType(types: !2850)
!2850 = !{null, !2805}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !2791, file: !2792, line: 25, baseType: !2852, size: 64, offset: 448)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = !DISubroutineType(types: !2854)
!2854 = !{null, !2805, !301, !43}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !2791, file: !2792, line: 27, baseType: !2856, size: 64, offset: 512)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2857 = !DISubroutineType(types: !2858)
!2858 = !{!2805, !2805}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !2791, file: !2792, line: 28, baseType: !2860, size: 64, offset: 576)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{null, !426}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !2791, file: !2792, line: 29, baseType: !2864, size: 64, offset: 640)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{null, !2805, !456, !426, !713, !546}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !2791, file: !2792, line: 32, baseType: !2868, size: 64, offset: 704)
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 64)
!2869 = !DISubroutineType(types: !2870)
!2870 = !{null, !2805, !456, !426}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !2791, file: !2792, line: 34, baseType: !2819, size: 64, offset: 768)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !2791, file: !2792, line: 35, baseType: !2873, size: 64, offset: 832)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{!2876, !2840, !426, !2269}
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 64)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !2878, line: 134, size: 2624, elements: !2879)
!2878 = !DIFile(filename: "./include/net/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!2879 = !{!2880, !2881, !3019, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3046, !3050, !3063, !3064, !3065, !3066}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2877, file: !2878, line: 135, baseType: !2876, size: 64)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2877, file: !2878, line: 136, baseType: !2882, size: 64, offset: 64)
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_table", file: !2878, line: 194, size: 3840, elements: !2884)
!2884 = !{!2885, !2886, !2887, !2888, !2889, !2896, !2902, !2906, !2924, !2928, !2929, !2933, !2937, !2938, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2971, !2972, !2979, !2980, !2981, !2982, !2990, !2991, !3007, !3017}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2883, file: !2878, line: 195, baseType: !43, size: 32)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "entry_size", scope: !2883, file: !2878, line: 196, baseType: !7, size: 32, offset: 32)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2883, file: !2878, line: 197, baseType: !7, size: 32, offset: 64)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2883, file: !2878, line: 198, baseType: !495, size: 16, offset: 96)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2883, file: !2878, line: 199, baseType: !2890, size: 64, offset: 128)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!2891 = !DISubroutineType(types: !2892)
!2892 = !{!474, !2269, !2893, !2895}
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "key_eq", scope: !2883, file: !2878, line: 202, baseType: !2897, size: 64, offset: 192)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!546, !2900, !2269}
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2877)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2883, file: !2878, line: 203, baseType: !2903, size: 64, offset: 256)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!2904 = !DISubroutineType(types: !2905)
!2905 = !{!43, !2876}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "pconstructor", scope: !2883, file: !2878, line: 204, baseType: !2907, size: 64, offset: 320)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = !DISubroutineType(types: !2909)
!2909 = !{!43, !2910}
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!2911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pneigh_entry", file: !2878, line: 171, size: 256, elements: !2912)
!2912 = !{!2913, !2914, !2919, !2920, !2921, !2922}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2911, file: !2878, line: 172, baseType: !2910, size: 64)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2911, file: !2878, line: 173, baseType: !2915, size: 64, offset: 64)
!2915 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !1970, line: 318, baseType: !2916)
!2916 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1970, line: 314, size: 64, elements: !2917)
!2917 = !{!2918}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2916, file: !1970, line: 316, baseType: !1968, size: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2911, file: !2878, line: 174, baseType: !301, size: 64, offset: 128)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2911, file: !2878, line: 175, baseType: !1403, size: 8, offset: 192)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2911, file: !2878, line: 176, baseType: !1403, size: 8, offset: 200)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2911, file: !2878, line: 177, baseType: !2923, offset: 208)
!2923 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, elements: !320)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "pdestructor", scope: !2883, file: !2878, line: 205, baseType: !2925, size: 64, offset: 384)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64)
!2926 = !DISubroutineType(types: !2927)
!2927 = !{null, !2910}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_redo", scope: !2883, file: !2878, line: 206, baseType: !2860, size: 64, offset: 448)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "is_multicast", scope: !2883, file: !2878, line: 207, baseType: !2930, size: 64, offset: 512)
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 64)
!2931 = !DISubroutineType(types: !2932)
!2932 = !{!43, !2269}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "allow_add", scope: !2883, file: !2878, line: 208, baseType: !2934, size: 64, offset: 576)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = !DISubroutineType(types: !2936)
!2936 = !{!546, !2893, !2610}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2883, file: !2878, line: 210, baseType: !583, size: 64, offset: 640)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2883, file: !2878, line: 211, baseType: !2939, size: 1152, offset: 704)
!2939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !2878, line: 70, size: 1152, elements: !2940)
!2940 = !{!2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2955}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2939, file: !2878, line: 71, baseType: !2915, size: 64)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2939, file: !2878, line: 72, baseType: !301, size: 64, offset: 64)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2939, file: !2878, line: 73, baseType: !295, size: 128, offset: 128)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_setup", scope: !2939, file: !2878, line: 74, baseType: !2903, size: 64, offset: 256)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2939, file: !2878, line: 75, baseType: !2882, size: 64, offset: 320)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_table", scope: !2939, file: !2878, line: 77, baseType: !576, size: 64, offset: 384)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2939, file: !2878, line: 79, baseType: !43, size: 32, offset: 448)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2939, file: !2878, line: 80, baseType: !1277, size: 32, offset: 480)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2939, file: !2878, line: 81, baseType: !310, size: 128, align: 64, offset: 512)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "reachable_time", scope: !2939, file: !2878, line: 83, baseType: !43, size: 32, offset: 640)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2939, file: !2878, line: 84, baseType: !2952, size: 416, offset: 672)
!2952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, size: 416, elements: !2953)
!2953 = !{!2954}
!2954 = !DISubrange(count: 13)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "data_state", scope: !2939, file: !2878, line: 85, baseType: !1421, size: 64, offset: 1088)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "parms_list", scope: !2883, file: !2878, line: 212, baseType: !295, size: 128, offset: 1856)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "gc_interval", scope: !2883, file: !2878, line: 213, baseType: !43, size: 32, offset: 1984)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh1", scope: !2883, file: !2878, line: 214, baseType: !43, size: 32, offset: 2016)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh2", scope: !2883, file: !2878, line: 215, baseType: !43, size: 32, offset: 2048)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh3", scope: !2883, file: !2878, line: 216, baseType: !43, size: 32, offset: 2080)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "last_flush", scope: !2883, file: !2878, line: 217, baseType: !323, size: 64, offset: 2112)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "gc_work", scope: !2883, file: !2878, line: 218, baseType: !2963, size: 704, offset: 2176)
!2963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1814, line: 115, size: 704, elements: !2964)
!2964 = !{!2965, !2966, !2967, !2970}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2963, file: !1814, line: 116, baseType: !1813, size: 256)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2963, file: !1814, line: 117, baseType: !2246, size: 320, offset: 256)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2963, file: !1814, line: 120, baseType: !2968, size: 64, offset: 576)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1814, line: 18, flags: DIFlagFwdDecl)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2963, file: !1814, line: 121, baseType: !43, size: 32, offset: 640)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_timer", scope: !2883, file: !2878, line: 219, baseType: !2246, size: 320, offset: 2880)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_queue", scope: !2883, file: !2878, line: 220, baseType: !2973, size: 192, offset: 3200)
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !428, line: 291, size: 192, elements: !2974)
!2974 = !{!2975, !2976, !2977, !2978}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2973, file: !428, line: 293, baseType: !426, size: 64)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2973, file: !428, line: 294, baseType: !426, size: 64, offset: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !2973, file: !428, line: 296, baseType: !474, size: 32, offset: 128)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2973, file: !428, line: 297, baseType: !735, offset: 160)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2883, file: !2878, line: 221, baseType: !394, size: 32, offset: 3392)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "gc_entries", scope: !2883, file: !2878, line: 222, baseType: !394, size: 32, offset: 3424)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2883, file: !2878, line: 223, baseType: !295, size: 128, offset: 3456)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2883, file: !2878, line: 224, baseType: !2983, offset: 3584)
!2983 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2984, line: 20, baseType: !2985)
!2984 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2984, line: 11, elements: !2986)
!2986 = !{!2987}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2985, file: !2984, line: 12, baseType: !2988)
!2988 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !747, line: 33, baseType: !2989)
!2989 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !747, line: 31, elements: !749)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "last_rand", scope: !2883, file: !2878, line: 225, baseType: !323, size: 64, offset: 3584)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2883, file: !2878, line: 226, baseType: !2992, size: 64, offset: 3648)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_statistics", file: !2878, line: 112, size: 768, elements: !2994)
!2994 = !{!2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "allocs", scope: !2993, file: !2878, line: 113, baseType: !323, size: 64)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "destroys", scope: !2993, file: !2878, line: 114, baseType: !323, size: 64, offset: 64)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "hash_grows", scope: !2993, file: !2878, line: 115, baseType: !323, size: 64, offset: 128)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "res_failed", scope: !2993, file: !2878, line: 117, baseType: !323, size: 64, offset: 192)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "lookups", scope: !2993, file: !2878, line: 119, baseType: !323, size: 64, offset: 256)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "hits", scope: !2993, file: !2878, line: 120, baseType: !323, size: 64, offset: 320)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_mcast", scope: !2993, file: !2878, line: 122, baseType: !323, size: 64, offset: 384)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_ucast", scope: !2993, file: !2878, line: 123, baseType: !323, size: 64, offset: 448)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_gc_runs", scope: !2993, file: !2878, line: 125, baseType: !323, size: 64, offset: 512)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "forced_gc_runs", scope: !2993, file: !2878, line: 126, baseType: !323, size: 64, offset: 576)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "unres_discards", scope: !2993, file: !2878, line: 128, baseType: !323, size: 64, offset: 640)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "table_fulls", scope: !2993, file: !2878, line: 129, baseType: !323, size: 64, offset: 704)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "nht", scope: !2883, file: !2878, line: 227, baseType: !3008, size: 64, offset: 3712)
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 64)
!3009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_hash_table", file: !2878, line: 186, size: 384, elements: !3010)
!3010 = !{!3011, !3013, !3014, !3016}
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "hash_buckets", scope: !3009, file: !2878, line: 187, baseType: !3012, size: 64)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 64)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "hash_shift", scope: !3009, file: !2878, line: 188, baseType: !7, size: 32, offset: 64)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !3009, file: !2878, line: 189, baseType: !3015, size: 128, offset: 96)
!3015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 128, elements: !1208)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3009, file: !2878, line: 190, baseType: !310, size: 128, align: 64, offset: 256)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "phash_buckets", scope: !2883, file: !2878, line: 228, baseType: !3018, size: 64, offset: 3776)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2877, file: !2878, line: 137, baseType: !3020, size: 64, offset: 128)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 64)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "confirmed", scope: !2877, file: !2878, line: 138, baseType: !323, size: 64, offset: 192)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "updated", scope: !2877, file: !2878, line: 139, baseType: !323, size: 64, offset: 256)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2877, file: !2878, line: 140, baseType: !2983, offset: 320)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2877, file: !2878, line: 141, baseType: !1277, size: 32, offset: 320)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue_len_bytes", scope: !2877, file: !2878, line: 142, baseType: !7, size: 32, offset: 352)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue", scope: !2877, file: !2878, line: 143, baseType: !2973, size: 192, offset: 384)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2877, file: !2878, line: 144, baseType: !2246, size: 320, offset: 576)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2877, file: !2878, line: 145, baseType: !323, size: 64, offset: 896)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "probes", scope: !2877, file: !2878, line: 146, baseType: !394, size: 32, offset: 960)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2877, file: !2878, line: 147, baseType: !1404, size: 8, offset: 992)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "nud_state", scope: !2877, file: !2878, line: 148, baseType: !1404, size: 8, offset: 1000)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2877, file: !2878, line: 149, baseType: !1404, size: 8, offset: 1008)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2877, file: !2878, line: 150, baseType: !1404, size: 8, offset: 1016)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2877, file: !2878, line: 151, baseType: !1403, size: 8, offset: 1024)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "ha_lock", scope: !2877, file: !2878, line: 152, baseType: !2179, size: 32, offset: 1056)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "ha", scope: !2877, file: !2878, line: 153, baseType: !721, size: 256, align: 64, offset: 1088)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "hh", scope: !2877, file: !2878, line: 154, baseType: !3038, size: 832, offset: 1344)
!3038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !42, line: 244, size: 832, elements: !3039)
!3039 = !{!3040, !3041, !3042}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !3038, file: !42, line: 245, baseType: !7, size: 32)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !3038, file: !42, line: 246, baseType: !2179, size: 32, offset: 32)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !3038, file: !42, line: 254, baseType: !3043, size: 768, offset: 64)
!3043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 768, elements: !3044)
!3044 = !{!3045}
!3045 = !DISubrange(count: 12)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2877, file: !2878, line: 155, baseType: !3047, size: 64, offset: 2176)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 64)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{!43, !2876, !426}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2877, file: !2878, line: 156, baseType: !3051, size: 64, offset: 2240)
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3053)
!3053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_ops", file: !2878, line: 163, size: 320, elements: !3054)
!3054 = !{!3055, !3056, !3060, !3061, !3062}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3053, file: !2878, line: 164, baseType: !43, size: 32)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "solicit", scope: !3053, file: !2878, line: 165, baseType: !3057, size: 64, offset: 64)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 64)
!3058 = !DISubroutineType(types: !3059)
!3059 = !{null, !2876, !426}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "error_report", scope: !3053, file: !2878, line: 166, baseType: !3057, size: 64, offset: 128)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !3053, file: !2878, line: 167, baseType: !3047, size: 64, offset: 192)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "connected_output", scope: !3053, file: !2878, line: 168, baseType: !3047, size: 64, offset: 256)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2877, file: !2878, line: 157, baseType: !295, size: 128, offset: 2304)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2877, file: !2878, line: 158, baseType: !310, size: 128, align: 64, offset: 2432)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2877, file: !2878, line: 159, baseType: !301, size: 64, offset: 2560)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "primary_key", scope: !2877, file: !2878, line: 160, baseType: !3067, offset: 2624)
!3067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, elements: !1928)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !2791, file: !2792, line: 38, baseType: !3069, size: 64, offset: 896)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{null, !2840, !2269}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !2791, file: !2792, line: 41, baseType: !2277, size: 64, offset: 960)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !2791, file: !2792, line: 43, baseType: !3074, size: 64, offset: 1024)
!3074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3075, line: 97, size: 64, elements: !3076)
!3075 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3076 = !{!3077}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3074, file: !3075, line: 98, baseType: !388, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !2675, file: !2676, line: 79, baseType: !2983, offset: 3712)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !2675, file: !2676, line: 80, baseType: !735, offset: 3712)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !2675, file: !2676, line: 81, baseType: !7, size: 32, offset: 3712)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !2675, file: !2676, line: 82, baseType: !323, size: 64, offset: 3776)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2675, file: !2676, line: 94, baseType: !2170, size: 64, offset: 3840)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !2675, file: !2676, line: 95, baseType: !456, size: 64, offset: 3904)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2675, file: !2676, line: 96, baseType: !456, size: 64, offset: 3968)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !2675, file: !2676, line: 97, baseType: !456, size: 64, offset: 4032)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2675, file: !2676, line: 98, baseType: !456, size: 64, offset: 4096)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2675, file: !2676, line: 107, baseType: !394, size: 32, offset: 4160)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !2675, file: !2676, line: 108, baseType: !394, size: 32, offset: 4192)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !2675, file: !2676, line: 109, baseType: !3090, size: 64, offset: 4224)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !2676, line: 109, flags: DIFlagFwdDecl)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2675, file: !2676, line: 110, baseType: !2596, size: 64, offset: 4288)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !2675, file: !2676, line: 111, baseType: !2596, size: 64, offset: 4352)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2675, file: !2676, line: 112, baseType: !7, size: 32, offset: 4416)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !2675, file: !2676, line: 117, baseType: !3096, size: 128, offset: 4480)
!3096 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2675, file: !2676, line: 113, size: 128, elements: !3097)
!3097 = !{!3098, !3099, !3100}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3096, file: !2676, line: 114, baseType: !863, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3096, file: !2676, line: 115, baseType: !735, offset: 64)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3096, file: !2676, line: 116, baseType: !713, size: 32, offset: 64)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !1969, file: !1970, line: 162, baseType: !2973, size: 192, offset: 14784)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !1969, file: !1970, line: 164, baseType: !3103, size: 64, offset: 14976)
!3103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3104, size: 64)
!3104 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !1970, line: 47, flags: DIFlagFwdDecl)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !1969, file: !1970, line: 167, baseType: !3106, size: 512, offset: 15040)
!3106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3107, line: 14, size: 512, elements: !3108)
!3107 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3108 = !{!3109, !3744, !3746}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3106, file: !3107, line: 16, baseType: !3110, size: 128)
!3110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3111, size: 128, elements: !484)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !151, line: 1037, size: 128, elements: !3113)
!3113 = !{!3114, !3115}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3112, file: !151, line: 1038, baseType: !310, size: 128, align: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3112, file: !151, line: 1039, baseType: !3116, offset: 128)
!3116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3117, elements: !320)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !151, line: 1032, size: 192, elements: !3118)
!3118 = !{!3119, !3740}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3117, file: !151, line: 1033, baseType: !3120, size: 64)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !3122, line: 525, size: 448, elements: !3123)
!3122 = !DIFile(filename: "./include/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3123 = !{!3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3142, !3716, !3730, !3736, !3738}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3121, file: !3122, line: 526, baseType: !1044, size: 16)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "jited", scope: !3121, file: !3122, line: 527, baseType: !1044, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "jit_requested", scope: !3121, file: !3122, line: 528, baseType: !1044, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 16)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "gpl_compatible", scope: !3121, file: !3122, line: 529, baseType: !1044, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 16)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "cb_access", scope: !3121, file: !3122, line: 530, baseType: !1044, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 16)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "dst_needed", scope: !3121, file: !3122, line: 531, baseType: !1044, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 16)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "blinded", scope: !3121, file: !3122, line: 532, baseType: !1044, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 16)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "is_func", scope: !3121, file: !3122, line: 533, baseType: !1044, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 16)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_override", scope: !3121, file: !3122, line: 534, baseType: !1044, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 16)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "has_callchain_buf", scope: !3121, file: !3122, line: 535, baseType: !1044, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 16)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "enforce_expected_attach_type", scope: !3121, file: !3122, line: 536, baseType: !1044, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 16)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "call_get_stack", scope: !3121, file: !3122, line: 537, baseType: !1044, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 16)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3121, file: !3122, line: 538, baseType: !75, size: 32, offset: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3121, file: !3122, line: 539, baseType: !109, size: 32, offset: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3121, file: !3122, line: 540, baseType: !713, size: 32, offset: 96)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3121, file: !3122, line: 541, baseType: !713, size: 32, offset: 128)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3121, file: !3122, line: 542, baseType: !3141, size: 64, offset: 160)
!3141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 64, elements: !1377)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3121, file: !3122, line: 543, baseType: !3143, size: 64, offset: 256)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !151, line: 757, size: 4928, elements: !3145)
!3145 = !{!3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3167, !3168, !3169, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3226, !3227, !3229, !3230, !3634, !3635, !3636, !3645, !3647, !3648, !3649, !3650, !3651, !3653, !3654, !3669, !3670, !3676, !3682, !3690, !3692, !3693, !3694, !3695, !3696, !3704, !3711}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3144, file: !151, line: 758, baseType: !384, size: 64)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !3144, file: !151, line: 759, baseType: !713, size: 32, offset: 64)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !3144, file: !151, line: 760, baseType: !713, size: 32, offset: 96)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !3144, file: !151, line: 761, baseType: !713, size: 32, offset: 128)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !3144, file: !151, line: 762, baseType: !713, size: 32, offset: 160)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !3144, file: !151, line: 763, baseType: !713, size: 32, offset: 192)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3144, file: !151, line: 764, baseType: !713, size: 32, offset: 224)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !3144, file: !151, line: 765, baseType: !713, size: 32, offset: 256)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !3144, file: !151, line: 766, baseType: !713, size: 32, offset: 288)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3144, file: !151, line: 767, baseType: !713, size: 32, offset: 320)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !3144, file: !151, line: 768, baseType: !713, size: 32, offset: 352)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !3144, file: !151, line: 769, baseType: !713, size: 32, offset: 384)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !3144, file: !151, line: 770, baseType: !713, size: 32, offset: 416)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !3144, file: !151, line: 771, baseType: !3160, size: 64, offset: 448)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3162)
!3162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !151, line: 751, size: 96, elements: !3163)
!3163 = !{!3164, !3165, !3166}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3162, file: !151, line: 752, baseType: !713, size: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !3162, file: !151, line: 753, baseType: !150, size: 32, offset: 32)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3162, file: !151, line: 754, baseType: !713, size: 32, offset: 64)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !3144, file: !151, line: 772, baseType: !960, size: 192, offset: 512)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !3144, file: !151, line: 773, baseType: !3120, size: 64, offset: 704)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !3144, file: !151, line: 774, baseType: !3170, size: 64, offset: 768)
!3170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 64)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !151, line: 586, size: 2944, elements: !3172)
!3172 = !{!3173, !3174, !3175, !3176, !3177, !3189, !3190, !3192, !3193, !3194, !3195}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !3171, file: !151, line: 588, baseType: !287, size: 128)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3171, file: !151, line: 590, baseType: !960, size: 192, offset: 128)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3171, file: !151, line: 591, baseType: !1277, size: 32, offset: 320)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3171, file: !151, line: 592, baseType: !342, size: 64, offset: 384)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3171, file: !151, line: 597, baseType: !3178, size: 256, offset: 448)
!3178 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3171, file: !151, line: 593, size: 256, elements: !3179)
!3179 = !{!3180, !3187, !3188}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !3178, file: !151, line: 594, baseType: !3181, size: 112)
!3181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !151, line: 509, size: 112, elements: !3182)
!3182 = !{!3183, !3184, !3185}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !3181, file: !151, line: 510, baseType: !1403, size: 8)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !3181, file: !151, line: 511, baseType: !1403, size: 8, offset: 8)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !3181, file: !151, line: 512, baseType: !3186, size: 96, offset: 16)
!3186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 96, elements: !3044)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3178, file: !151, line: 595, baseType: !576, size: 64, offset: 128)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !3178, file: !151, line: 596, baseType: !546, size: 8, offset: 192)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !3171, file: !151, line: 602, baseType: !3120, size: 64, offset: 704)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !3171, file: !151, line: 604, baseType: !3191, size: 192, offset: 768)
!3191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !863, size: 192, elements: !873)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !3171, file: !151, line: 606, baseType: !2420, size: 96, offset: 960)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3171, file: !151, line: 608, baseType: !576, size: 64, offset: 1088)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !3171, file: !151, line: 609, baseType: !342, size: 64, offset: 1152)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3171, file: !151, line: 610, baseType: !3196, size: 1728, offset: 1216)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !151, line: 569, size: 1728, elements: !3197)
!3197 = !{!3198, !3199, !3200, !3204, !3205, !3211}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3196, file: !151, line: 570, baseType: !323, size: 64)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3196, file: !151, line: 571, baseType: !323, size: 64, offset: 64)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3196, file: !151, line: 572, baseType: !3201, size: 1024, offset: 128)
!3201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 1024, elements: !3202)
!3202 = !{!3203}
!3203 = !DISubrange(count: 128)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !3196, file: !151, line: 573, baseType: !295, size: 128, offset: 1152)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !3196, file: !151, line: 574, baseType: !3206, size: 384, offset: 1280)
!3206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !3207, line: 40, size: 384, elements: !3208)
!3207 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!3208 = !{!3209}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3206, file: !3207, line: 41, baseType: !3210, size: 384)
!3210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !444, size: 384, elements: !484)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3196, file: !151, line: 575, baseType: !546, size: 8, offset: 1664)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !3144, file: !151, line: 775, baseType: !75, size: 32, offset: 832)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !3144, file: !151, line: 776, baseType: !109, size: 32, offset: 864)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !3144, file: !151, line: 777, baseType: !546, size: 8, offset: 896)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !3144, file: !151, line: 778, baseType: !546, size: 8, offset: 904)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !3144, file: !151, line: 779, baseType: !546, size: 8, offset: 912)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !3144, file: !151, line: 780, baseType: !546, size: 8, offset: 920)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !3144, file: !151, line: 781, baseType: !546, size: 8, offset: 928)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !3144, file: !151, line: 782, baseType: !546, size: 8, offset: 936)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !3144, file: !151, line: 783, baseType: !181, size: 32, offset: 960)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !3144, file: !151, line: 784, baseType: !287, size: 128, offset: 1024)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !3144, file: !151, line: 786, baseType: !3223, size: 64, offset: 1152)
!3223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3224, size: 64)
!3224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3225)
!3225 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !151, line: 33, flags: DIFlagFwdDecl)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !3144, file: !151, line: 788, baseType: !303, size: 64, offset: 1216)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3144, file: !151, line: 789, baseType: !3228, size: 64, offset: 1280)
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !3144, file: !151, line: 790, baseType: !576, size: 64, offset: 1344)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !3144, file: !151, line: 791, baseType: !3231, size: 64, offset: 1408)
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!3232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !151, line: 734, size: 384, elements: !3233)
!3233 = !{!3234, !3235, !3236, !3237, !3630, !3631, !3632, !3633}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !3232, file: !151, line: 735, baseType: !576, size: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !3232, file: !151, line: 736, baseType: !576, size: 64, offset: 64)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !3232, file: !151, line: 737, baseType: !576, size: 64, offset: 128)
!3237 = !DIDerivedType(tag: DW_TAG_member, scope: !3232, file: !151, line: 738, baseType: !3238, size: 128, offset: 192)
!3238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3232, file: !151, line: 738, size: 128, elements: !3239)
!3239 = !{!3240}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !3238, file: !151, line: 742, baseType: !3241, size: 128)
!3241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3238, file: !151, line: 739, size: 128, elements: !3242)
!3242 = !{!3243, !3629}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3241, file: !151, line: 740, baseType: !3244, size: 64)
!3244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3245, size: 64)
!3245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !151, line: 141, size: 2048, elements: !3246)
!3246 = !{!3247, !3602, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3615, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3245, file: !151, line: 145, baseType: !3248, size: 64, align: 512)
!3248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3249, size: 64)
!3249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3250)
!3250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !151, line: 54, size: 2368, elements: !3251)
!3251 = !{!3252, !3451, !3455, !3459, !3463, !3467, !3468, !3472, !3478, !3479, !3480, !3481, !3482, !3486, !3490, !3494, !3495, !3496, !3500, !3504, !3516, !3520, !3524, !3533, !3537, !3541, !3545, !3550, !3554, !3558, !3562, !3568, !3572, !3579, !3583, !3585, !3586}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !3250, file: !151, line: 56, baseType: !3253, size: 64)
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3254, size: 64)
!3254 = !DISubroutineType(types: !3255)
!3255 = !{!43, !3256}
!3256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3257, size: 64)
!3257 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !76, line: 483, size: 960, align: 64, elements: !3258)
!3258 = !{!3259, !3275, !3286, !3297, !3321, !3327, !3335, !3352, !3365, !3371, !3380, !3385, !3393, !3405, !3425, !3432, !3436, !3440, !3445}
!3259 = !DIDerivedType(tag: DW_TAG_member, scope: !3257, file: !76, line: 484, baseType: !3260, size: 512)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 484, size: 512, elements: !3261)
!3261 = !{!3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3260, file: !76, line: 485, baseType: !474, size: 32)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3260, file: !76, line: 486, baseType: !474, size: 32, offset: 32)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3260, file: !76, line: 487, baseType: !474, size: 32, offset: 64)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3260, file: !76, line: 488, baseType: !474, size: 32, offset: 96)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3260, file: !76, line: 489, baseType: !474, size: 32, offset: 128)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !3260, file: !76, line: 492, baseType: !474, size: 32, offset: 160)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3260, file: !76, line: 493, baseType: !474, size: 32, offset: 192)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !3260, file: !76, line: 496, baseType: !278, size: 128, offset: 224)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !3260, file: !76, line: 497, baseType: !474, size: 32, offset: 352)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !3260, file: !76, line: 498, baseType: !474, size: 32, offset: 384)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3260, file: !76, line: 499, baseType: !474, size: 32, offset: 416)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3260, file: !76, line: 500, baseType: !474, size: 32, offset: 448)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3260, file: !76, line: 501, baseType: !474, size: 32, offset: 480)
!3275 = !DIDerivedType(tag: DW_TAG_member, scope: !3257, file: !76, line: 507, baseType: !3276, size: 256)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 507, size: 256, elements: !3277)
!3277 = !{!3278, !3279, !3280, !3285}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3276, file: !76, line: 508, baseType: !474, size: 32)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3276, file: !76, line: 509, baseType: !344, size: 64, align: 64, offset: 64)
!3280 = !DIDerivedType(tag: DW_TAG_member, scope: !3276, file: !76, line: 510, baseType: !3281, size: 64, offset: 128)
!3281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3276, file: !76, line: 510, size: 64, elements: !3282)
!3282 = !{!3283, !3284}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3281, file: !76, line: 511, baseType: !344, size: 64, align: 64)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !3281, file: !76, line: 512, baseType: !344, size: 64, align: 64)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3276, file: !76, line: 514, baseType: !344, size: 64, offset: 192)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3257, file: !76, line: 532, baseType: !3287, size: 448)
!3287 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 517, size: 448, elements: !3288)
!3288 = !{!3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !3287, file: !76, line: 518, baseType: !344, size: 64, align: 64)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !3287, file: !76, line: 521, baseType: !344, size: 64, align: 64, offset: 64)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3287, file: !76, line: 522, baseType: !344, size: 64, align: 64, offset: 128)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3287, file: !76, line: 523, baseType: !344, size: 64, align: 64, offset: 192)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3287, file: !76, line: 524, baseType: !474, size: 32, offset: 256)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3287, file: !76, line: 529, baseType: !474, size: 32, offset: 288)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !3287, file: !76, line: 530, baseType: !344, size: 64, offset: 320)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3287, file: !76, line: 531, baseType: !344, size: 64, offset: 384)
!3297 = !DIDerivedType(tag: DW_TAG_member, scope: !3257, file: !76, line: 534, baseType: !3298, size: 960)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 534, size: 960, elements: !3299)
!3299 = !{!3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !3298, file: !76, line: 535, baseType: !474, size: 32)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !3298, file: !76, line: 536, baseType: !474, size: 32, offset: 32)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3298, file: !76, line: 537, baseType: !344, size: 64, align: 64, offset: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !3298, file: !76, line: 538, baseType: !344, size: 64, align: 64, offset: 128)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !3298, file: !76, line: 539, baseType: !474, size: 32, offset: 192)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !3298, file: !76, line: 540, baseType: !474, size: 32, offset: 224)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !3298, file: !76, line: 541, baseType: !344, size: 64, align: 64, offset: 256)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !3298, file: !76, line: 542, baseType: !474, size: 32, offset: 320)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !3298, file: !76, line: 543, baseType: !474, size: 32, offset: 352)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !3298, file: !76, line: 544, baseType: !278, size: 128, offset: 384)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !3298, file: !76, line: 545, baseType: !474, size: 32, offset: 512)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3298, file: !76, line: 550, baseType: !474, size: 32, offset: 544)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !3298, file: !76, line: 551, baseType: !474, size: 32, offset: 576)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !3298, file: !76, line: 552, baseType: !474, size: 32, offset: 608)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3298, file: !76, line: 553, baseType: !344, size: 64, align: 64, offset: 640)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3298, file: !76, line: 554, baseType: !474, size: 32, offset: 704)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !3298, file: !76, line: 555, baseType: !474, size: 32, offset: 736)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !3298, file: !76, line: 556, baseType: !344, size: 64, align: 64, offset: 768)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !3298, file: !76, line: 557, baseType: !474, size: 32, offset: 832)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3298, file: !76, line: 558, baseType: !474, size: 32, offset: 864)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !3298, file: !76, line: 559, baseType: !474, size: 32, offset: 896)
!3321 = !DIDerivedType(tag: DW_TAG_member, scope: !3257, file: !76, line: 562, baseType: !3322, size: 128)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 562, size: 128, elements: !3323)
!3323 = !{!3324, !3325, !3326}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !3322, file: !76, line: 563, baseType: !344, size: 64, align: 64)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3322, file: !76, line: 564, baseType: !474, size: 32, offset: 64)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !3322, file: !76, line: 565, baseType: !474, size: 32, offset: 96)
!3327 = !DIDerivedType(tag: DW_TAG_member, scope: !3257, file: !76, line: 568, baseType: !3328, size: 160)
!3328 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 568, size: 160, elements: !3329)
!3329 = !{!3330, !3331, !3332, !3333, !3334}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3328, file: !76, line: 569, baseType: !474, size: 32)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !3328, file: !76, line: 570, baseType: !474, size: 32, offset: 32)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3328, file: !76, line: 571, baseType: !474, size: 32, offset: 64)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3328, file: !76, line: 572, baseType: !474, size: 32, offset: 96)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !3328, file: !76, line: 573, baseType: !474, size: 32, offset: 128)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !3257, file: !76, line: 600, baseType: !3336, size: 576)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 579, size: 576, elements: !3337)
!3337 = !{!3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3336, file: !76, line: 580, baseType: !474, size: 32)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !3336, file: !76, line: 581, baseType: !474, size: 32, offset: 32)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !3336, file: !76, line: 582, baseType: !474, size: 32, offset: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !3336, file: !76, line: 583, baseType: !474, size: 32, offset: 96)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !3336, file: !76, line: 587, baseType: !344, size: 64, align: 64, offset: 128)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !3336, file: !76, line: 588, baseType: !344, size: 64, align: 64, offset: 192)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !3336, file: !76, line: 589, baseType: !474, size: 32, offset: 256)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3336, file: !76, line: 590, baseType: !474, size: 32, offset: 288)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !3336, file: !76, line: 591, baseType: !474, size: 32, offset: 320)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !3336, file: !76, line: 592, baseType: !474, size: 32, offset: 352)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !3336, file: !76, line: 596, baseType: !344, size: 64, align: 64, offset: 384)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !3336, file: !76, line: 597, baseType: !344, size: 64, align: 64, offset: 448)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3336, file: !76, line: 598, baseType: !474, size: 32, offset: 512)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3336, file: !76, line: 599, baseType: !474, size: 32, offset: 544)
!3352 = !DIDerivedType(tag: DW_TAG_member, scope: !3257, file: !76, line: 602, baseType: !3353, size: 96)
!3353 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 602, size: 96, elements: !3354)
!3354 = !{!3355, !3363, !3364}
!3355 = !DIDerivedType(tag: DW_TAG_member, scope: !3353, file: !76, line: 603, baseType: !3356, size: 32)
!3356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3353, file: !76, line: 603, size: 32, elements: !3357)
!3357 = !{!3358, !3359, !3360, !3361, !3362}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !3356, file: !76, line: 604, baseType: !474, size: 32)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3356, file: !76, line: 605, baseType: !474, size: 32)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !3356, file: !76, line: 606, baseType: !474, size: 32)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3356, file: !76, line: 607, baseType: !474, size: 32)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !3356, file: !76, line: 608, baseType: !474, size: 32)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !3353, file: !76, line: 610, baseType: !474, size: 32, offset: 32)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !3353, file: !76, line: 611, baseType: !474, size: 32, offset: 64)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3257, file: !76, line: 618, baseType: !3366, size: 128)
!3366 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 614, size: 128, elements: !3367)
!3367 = !{!3368, !3369, !3370}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3366, file: !76, line: 615, baseType: !474, size: 32)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !3366, file: !76, line: 616, baseType: !474, size: 32, offset: 32)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3366, file: !76, line: 617, baseType: !344, size: 64, align: 64, offset: 64)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !3257, file: !76, line: 627, baseType: !3372, size: 256)
!3372 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 620, size: 256, elements: !3373)
!3373 = !{!3374, !3375, !3376, !3377, !3378, !3379}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3372, file: !76, line: 621, baseType: !474, size: 32)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3372, file: !76, line: 622, baseType: !474, size: 32, offset: 32)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !3372, file: !76, line: 623, baseType: !474, size: 32, offset: 64)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3372, file: !76, line: 624, baseType: !474, size: 32, offset: 96)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !3372, file: !76, line: 625, baseType: !344, size: 64, align: 64, offset: 128)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !3372, file: !76, line: 626, baseType: !474, size: 32, offset: 192)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !3257, file: !76, line: 632, baseType: !3381, size: 128)
!3381 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 629, size: 128, elements: !3382)
!3382 = !{!3383, !3384}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3381, file: !76, line: 630, baseType: !344, size: 64)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3381, file: !76, line: 631, baseType: !474, size: 32, offset: 64)
!3385 = !DIDerivedType(tag: DW_TAG_member, scope: !3257, file: !76, line: 634, baseType: !3386, size: 256)
!3386 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 634, size: 256, elements: !3387)
!3387 = !{!3388, !3389, !3390, !3391, !3392}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3386, file: !76, line: 635, baseType: !344, size: 64, align: 64)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !3386, file: !76, line: 636, baseType: !344, size: 64, align: 64, offset: 64)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !3386, file: !76, line: 637, baseType: !474, size: 32, offset: 128)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !3386, file: !76, line: 638, baseType: !474, size: 32, offset: 160)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !3386, file: !76, line: 639, baseType: !474, size: 32, offset: 192)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !3257, file: !76, line: 656, baseType: !3394, size: 384)
!3394 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 642, size: 384, elements: !3395)
!3395 = !{!3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3394, file: !76, line: 643, baseType: !474, size: 32)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !3394, file: !76, line: 644, baseType: !474, size: 32, offset: 32)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3394, file: !76, line: 645, baseType: !474, size: 32, offset: 64)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !3394, file: !76, line: 646, baseType: !474, size: 32, offset: 96)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3394, file: !76, line: 647, baseType: !344, size: 64, align: 64, offset: 128)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3394, file: !76, line: 652, baseType: !474, size: 32, offset: 192)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !3394, file: !76, line: 653, baseType: !474, size: 32, offset: 224)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !3394, file: !76, line: 654, baseType: !344, size: 64, offset: 256)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !3394, file: !76, line: 655, baseType: !344, size: 64, offset: 320)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !3257, file: !76, line: 673, baseType: !3406, size: 256)
!3406 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 658, size: 256, elements: !3407)
!3407 = !{!3408, !3409, !3414, !3415, !3416}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3406, file: !76, line: 659, baseType: !474, size: 32)
!3409 = !DIDerivedType(tag: DW_TAG_member, scope: !3406, file: !76, line: 660, baseType: !3410, size: 32, offset: 32)
!3410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3406, file: !76, line: 660, size: 32, elements: !3411)
!3411 = !{!3412, !3413}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3410, file: !76, line: 661, baseType: !474, size: 32)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !3410, file: !76, line: 662, baseType: !474, size: 32)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3406, file: !76, line: 664, baseType: !474, size: 32, offset: 64)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3406, file: !76, line: 665, baseType: !474, size: 32, offset: 96)
!3416 = !DIDerivedType(tag: DW_TAG_member, scope: !3406, file: !76, line: 666, baseType: !3417, size: 128, offset: 128)
!3417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3406, file: !76, line: 666, size: 128, elements: !3418)
!3418 = !{!3419, !3420}
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !3417, file: !76, line: 667, baseType: !474, size: 32)
!3420 = !DIDerivedType(tag: DW_TAG_member, scope: !3417, file: !76, line: 668, baseType: !3421, size: 128)
!3421 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3417, file: !76, line: 668, size: 128, elements: !3422)
!3422 = !{!3423, !3424}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !3421, file: !76, line: 669, baseType: !344, size: 64, align: 64)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !3421, file: !76, line: 670, baseType: !474, size: 32, offset: 64)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !3257, file: !76, line: 683, baseType: !3426, size: 128)
!3426 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 675, size: 128, elements: !3427)
!3427 = !{!3428, !3429, !3430, !3431}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3426, file: !76, line: 676, baseType: !474, size: 32)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !3426, file: !76, line: 678, baseType: !474, size: 32, offset: 32)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3426, file: !76, line: 679, baseType: !474, size: 32, offset: 64)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !3426, file: !76, line: 682, baseType: !474, size: 32, offset: 96)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !3257, file: !76, line: 687, baseType: !3433, size: 32)
!3433 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 685, size: 32, elements: !3434)
!3434 = !{!3435}
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3433, file: !76, line: 686, baseType: !474, size: 32)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !3257, file: !76, line: 691, baseType: !3437, size: 32)
!3437 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 689, size: 32, elements: !3438)
!3438 = !{!3439}
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3437, file: !76, line: 690, baseType: !474, size: 32)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !3257, file: !76, line: 696, baseType: !3441, size: 64)
!3441 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 693, size: 64, elements: !3442)
!3442 = !{!3443, !3444}
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3441, file: !76, line: 694, baseType: !474, size: 32)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3441, file: !76, line: 695, baseType: !474, size: 32, offset: 32)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !3257, file: !76, line: 702, baseType: !3446, size: 96)
!3446 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3257, file: !76, line: 698, size: 96, elements: !3447)
!3447 = !{!3448, !3449, !3450}
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3446, file: !76, line: 699, baseType: !474, size: 32)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3446, file: !76, line: 700, baseType: !474, size: 32, offset: 32)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3446, file: !76, line: 701, baseType: !474, size: 32, offset: 64)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !3250, file: !151, line: 57, baseType: !3452, size: 64, offset: 64)
!3452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3453, size: 64)
!3453 = !DISubroutineType(types: !3454)
!3454 = !{!3244, !3256}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !3250, file: !151, line: 58, baseType: !3456, size: 64, offset: 128)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{null, !3244, !1016}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !3250, file: !151, line: 59, baseType: !3460, size: 64, offset: 192)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{null, !3244}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !3250, file: !151, line: 60, baseType: !3464, size: 64, offset: 256)
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3465, size: 64)
!3465 = !DISubroutineType(types: !3466)
!3466 = !{!43, !3244, !576, !576}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !3250, file: !151, line: 61, baseType: !3460, size: 64, offset: 320)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !3250, file: !151, line: 62, baseType: !3469, size: 64, offset: 384)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3470 = !DISubroutineType(types: !3471)
!3471 = !{!576, !3244, !576}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !3250, file: !151, line: 63, baseType: !3473, size: 64, offset: 448)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3474, size: 64)
!3474 = !DISubroutineType(types: !3475)
!3475 = !{!43, !3244, !3476, !3256}
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3477, size: 64)
!3477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3257)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !3250, file: !151, line: 65, baseType: !3473, size: 64, offset: 512)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !3250, file: !151, line: 68, baseType: !3473, size: 64, offset: 576)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !3250, file: !151, line: 70, baseType: !3473, size: 64, offset: 640)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !3250, file: !151, line: 74, baseType: !3469, size: 64, offset: 704)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !3250, file: !151, line: 75, baseType: !3483, size: 64, offset: 768)
!3483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3484, size: 64)
!3484 = !DISubroutineType(types: !3485)
!3485 = !{!43, !3244, !576, !576, !342}
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !3250, file: !151, line: 76, baseType: !3487, size: 64, offset: 832)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DISubroutineType(types: !3489)
!3489 = !{!43, !3244, !576}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !3250, file: !151, line: 77, baseType: !3491, size: 64, offset: 896)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = !DISubroutineType(types: !3493)
!3493 = !{!43, !3244, !576, !342}
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !3250, file: !151, line: 78, baseType: !3487, size: 64, offset: 960)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !3250, file: !151, line: 79, baseType: !3487, size: 64, offset: 1024)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !3250, file: !151, line: 82, baseType: !3497, size: 64, offset: 1088)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{!576, !3244, !1016, !43}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !3250, file: !151, line: 84, baseType: !3501, size: 64, offset: 1152)
!3501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3502, size: 64)
!3502 = !DISubroutineType(types: !3503)
!3503 = !{null, !576}
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !3250, file: !151, line: 85, baseType: !3505, size: 64, offset: 1216)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = !DISubroutineType(types: !3507)
!3507 = !{!43, !3244, !3508}
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !76, line: 65, size: 64, elements: !3510)
!3510 = !{!3511, !3512, !3513, !3514, !3515}
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3509, file: !76, line: 66, baseType: !1404, size: 8)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !3509, file: !76, line: 67, baseType: !1404, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !3509, file: !76, line: 68, baseType: !1404, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !3509, file: !76, line: 69, baseType: !1251, size: 16, offset: 16)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !3509, file: !76, line: 70, baseType: !1496, size: 32, offset: 32)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !3250, file: !151, line: 86, baseType: !3517, size: 64, offset: 1280)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{!713, !576}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !3250, file: !151, line: 87, baseType: !3521, size: 64, offset: 1344)
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 64)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{null, !3244, !576, !948}
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !3250, file: !151, line: 89, baseType: !3525, size: 64, offset: 1408)
!3525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3526, size: 64)
!3526 = !DISubroutineType(types: !3527)
!3527 = !{!43, !3528, !3530, !3223, !3223}
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 64)
!3529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3245)
!3530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3531, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3532)
!3532 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !151, line: 32, flags: DIFlagFwdDecl)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !3250, file: !151, line: 95, baseType: !3534, size: 64, offset: 1472)
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DISubroutineType(types: !3536)
!3536 = !{!43, !3244, !3143}
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !3250, file: !151, line: 96, baseType: !3538, size: 64, offset: 1536)
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!3539 = !DISubroutineType(types: !3540)
!3540 = !{null, !3244, !3143}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !3250, file: !151, line: 97, baseType: !3542, size: 64, offset: 1600)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{null, !3244, !713, !3120, !3120}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !3250, file: !151, line: 101, baseType: !3546, size: 64, offset: 1664)
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3547, size: 64)
!3547 = !DISubroutineType(types: !3548)
!3548 = !{!43, !3528, !3549, !713}
!3549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !3250, file: !151, line: 103, baseType: !3551, size: 64, offset: 1728)
!3551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3552, size: 64)
!3552 = !DISubroutineType(types: !3553)
!3553 = !{!43, !3528, !342, !1466}
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !3250, file: !151, line: 105, baseType: !3555, size: 64, offset: 1792)
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3556, size: 64)
!3556 = !DISubroutineType(types: !3557)
!3557 = !{!43, !3244, !1121}
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !3250, file: !151, line: 106, baseType: !3559, size: 64, offset: 1856)
!3559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3560, size: 64)
!3560 = !DISubroutineType(types: !3561)
!3561 = !{!1095, !3244, !1016, !1096}
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !3250, file: !151, line: 110, baseType: !3563, size: 64, offset: 1920)
!3563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3564, size: 64)
!3564 = !DISubroutineType(types: !3565)
!3565 = !{!43, !3566, !576, !713}
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !151, line: 38, flags: DIFlagFwdDecl)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !3250, file: !151, line: 112, baseType: !3569, size: 64, offset: 1984)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{null, !3566, !576, !713}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !3250, file: !151, line: 114, baseType: !3573, size: 64, offset: 2048)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{!3576, !576}
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 64)
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3578 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !151, line: 37, flags: DIFlagFwdDecl)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !3250, file: !151, line: 125, baseType: !3580, size: 64, offset: 2112)
!3580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3581, size: 64)
!3581 = !DISubroutineType(types: !3582)
!3582 = !{!546, !3528, !3528}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !3250, file: !151, line: 129, baseType: !3584, size: 64, offset: 2176)
!3584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !303)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !3250, file: !151, line: 130, baseType: !545, size: 64, offset: 2240)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !3250, file: !151, line: 133, baseType: !3587, size: 64, offset: 2304)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!3588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3589)
!3589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !151, line: 46, size: 256, elements: !3590)
!3590 = !{!3591, !3592, !3599, !3601}
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !3589, file: !151, line: 47, baseType: !967, size: 64)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !3589, file: !151, line: 48, baseType: !3593, size: 64, offset: 64)
!3593 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !151, line: 43, baseType: !3594)
!3594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3595, size: 64)
!3595 = !DISubroutineType(types: !3596)
!3596 = !{!43, !576, !3597}
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !151, line: 36, flags: DIFlagFwdDecl)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !3589, file: !151, line: 49, baseType: !3600, size: 64, offset: 128)
!3600 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !151, line: 45, baseType: !3501)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !3589, file: !151, line: 50, baseType: !713, size: 32, offset: 192)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !3245, file: !151, line: 146, baseType: !3244, size: 64, offset: 64)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3245, file: !151, line: 150, baseType: !188, size: 32, offset: 128)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3245, file: !151, line: 151, baseType: !713, size: 32, offset: 160)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3245, file: !151, line: 152, baseType: !713, size: 32, offset: 192)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3245, file: !151, line: 153, baseType: !713, size: 32, offset: 224)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3245, file: !151, line: 154, baseType: !713, size: 32, offset: 256)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !3245, file: !151, line: 155, baseType: !43, size: 32, offset: 288)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3245, file: !151, line: 156, baseType: !713, size: 32, offset: 320)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3245, file: !151, line: 157, baseType: !43, size: 32, offset: 352)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3245, file: !151, line: 158, baseType: !713, size: 32, offset: 384)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3245, file: !151, line: 159, baseType: !713, size: 32, offset: 416)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3245, file: !151, line: 160, baseType: !3614, size: 64, offset: 448)
!3614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !3245, file: !151, line: 161, baseType: !3616, size: 128, offset: 512)
!3616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !151, line: 136, size: 128, elements: !3617)
!3617 = !{!3618, !3619}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3616, file: !151, line: 137, baseType: !713, size: 32)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3616, file: !151, line: 138, baseType: !1739, size: 64, offset: 64)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3245, file: !151, line: 162, baseType: !278, size: 128, offset: 640)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3245, file: !151, line: 163, baseType: !713, size: 32, offset: 768)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !3245, file: !151, line: 164, baseType: !546, size: 8, offset: 800)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3245, file: !151, line: 165, baseType: !546, size: 8, offset: 808)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3245, file: !151, line: 171, baseType: !384, size: 64, align: 512, offset: 1024)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !3245, file: !151, line: 172, baseType: !384, size: 64, offset: 1088)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3245, file: !151, line: 173, baseType: !1813, size: 256, offset: 1152)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !3245, file: !151, line: 174, baseType: !960, size: 192, offset: 1408)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !3245, file: !151, line: 175, baseType: !342, size: 64, offset: 1600)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3241, file: !151, line: 741, baseType: !713, size: 32, offset: 64)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !3232, file: !151, line: 744, baseType: !546, size: 8, offset: 320)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !3232, file: !151, line: 745, baseType: !1403, size: 8, offset: 328)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !3232, file: !151, line: 746, baseType: !1044, size: 16, offset: 336)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !3232, file: !151, line: 747, baseType: !713, size: 32, offset: 352)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !3144, file: !151, line: 792, baseType: !713, size: 32, offset: 1472)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3144, file: !151, line: 793, baseType: !3196, size: 1728, offset: 1536)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3144, file: !151, line: 794, baseType: !3637, size: 64, offset: 3264)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3639)
!3639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !151, line: 432, size: 64, elements: !3640)
!3640 = !{!3641}
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !3639, file: !151, line: 433, baseType: !3642, size: 64)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{!43, !3120, !3476, !3256}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !3144, file: !151, line: 795, baseType: !3646, size: 64, offset: 3328)
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !3144, file: !151, line: 796, baseType: !960, size: 192, offset: 3392)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3144, file: !151, line: 797, baseType: !3120, size: 64, offset: 3584)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3144, file: !151, line: 798, baseType: !1739, size: 64, offset: 3648)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !3144, file: !151, line: 799, baseType: !342, size: 64, offset: 3712)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3144, file: !151, line: 800, baseType: !3652, size: 128, offset: 3776)
!3652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3244, size: 128, elements: !484)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3144, file: !151, line: 801, baseType: !278, size: 128, offset: 3904)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !3144, file: !151, line: 805, baseType: !3655, size: 64, offset: 4032)
!3655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3656, size: 64)
!3656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !151, line: 478, size: 576, elements: !3657)
!3657 = !{!3658, !3659, !3660, !3663, !3664, !3665, !3666, !3667, !3668}
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3656, file: !151, line: 479, baseType: !3120, size: 64)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !3656, file: !151, line: 480, baseType: !301, size: 64, offset: 64)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !3656, file: !151, line: 481, baseType: !3661, size: 64, offset: 128)
!3661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3662, size: 64)
!3662 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !151, line: 209, flags: DIFlagFwdDecl)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !3656, file: !151, line: 482, baseType: !576, size: 64, offset: 192)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !3656, file: !151, line: 483, baseType: !295, size: 128, offset: 256)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !3656, file: !151, line: 484, baseType: !546, size: 8, offset: 384)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !3656, file: !151, line: 485, baseType: !546, size: 8, offset: 392)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !3656, file: !151, line: 486, baseType: !576, size: 64, offset: 448)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3656, file: !151, line: 487, baseType: !713, size: 32, offset: 512)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3144, file: !151, line: 806, baseType: !3614, size: 64, offset: 4096)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3144, file: !151, line: 807, baseType: !3671, size: 64, offset: 4160)
!3671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3672, size: 64)
!3672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !76, line: 4963, size: 64, elements: !3673)
!3673 = !{!3674, !3675}
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3672, file: !76, line: 4964, baseType: !474, size: 32)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !3672, file: !76, line: 4965, baseType: !474, size: 32, offset: 32)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !3144, file: !151, line: 808, baseType: !3677, size: 64, offset: 4224)
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !151, line: 724, size: 32, elements: !3679)
!3679 = !{!3680, !3681}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !3678, file: !151, line: 725, baseType: !1044, size: 16)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !3678, file: !151, line: 726, baseType: !546, size: 8, offset: 16)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !3144, file: !151, line: 815, baseType: !3683, size: 64, offset: 4288)
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 64)
!3684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !76, line: 4971, size: 128, elements: !3685)
!3685 = !{!3686, !3687, !3688, !3689}
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3684, file: !76, line: 4972, baseType: !474, size: 32)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !3684, file: !76, line: 4973, baseType: !474, size: 32, offset: 32)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !3684, file: !76, line: 4974, baseType: !474, size: 32, offset: 64)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !3684, file: !76, line: 4975, baseType: !474, size: 32, offset: 96)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !3144, file: !151, line: 823, baseType: !3691, size: 64, offset: 4352)
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3144, file: !151, line: 824, baseType: !713, size: 32, offset: 4416)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !3144, file: !151, line: 825, baseType: !713, size: 32, offset: 4448)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !3144, file: !151, line: 830, baseType: !713, size: 32, offset: 4480)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !3144, file: !151, line: 831, baseType: !713, size: 32, offset: 4512)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !3144, file: !151, line: 832, baseType: !3697, size: 64, offset: 4544)
!3697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3698, size: 64)
!3698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !3699, line: 17, size: 96, elements: !3700)
!3699 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!3700 = !{!3701, !3702, !3703}
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !3698, file: !3699, line: 18, baseType: !43, size: 32)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !3698, file: !3699, line: 18, baseType: !43, size: 32, offset: 32)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3698, file: !3699, line: 18, baseType: !43, size: 32, offset: 64)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3144, file: !151, line: 833, baseType: !3705, size: 64, offset: 4608)
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3706, size: 64)
!3706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !151, line: 503, size: 128, align: 128, elements: !3707)
!3707 = !{!3708, !3709, !3710}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !3706, file: !151, line: 504, baseType: !342, size: 64)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !3706, file: !151, line: 505, baseType: !342, size: 64, offset: 64)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3706, file: !151, line: 506, baseType: !2063, offset: 128)
!3711 = !DIDerivedType(tag: DW_TAG_member, scope: !3144, file: !151, line: 834, baseType: !3712, size: 256, offset: 4672)
!3712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3144, file: !151, line: 834, size: 256, elements: !3713)
!3713 = !{!3714, !3715}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3712, file: !151, line: 835, baseType: !1813, size: 256)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3712, file: !151, line: 836, baseType: !310, size: 128, align: 64)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "orig_prog", scope: !3121, file: !3122, line: 544, baseType: !3717, size: 64, offset: 320)
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 64)
!3718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_fprog_kern", file: !3122, line: 512, size: 128, elements: !3719)
!3719 = !{!3720, !3721}
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3718, file: !3122, line: 513, baseType: !1044, size: 16)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3718, file: !3122, line: 514, baseType: !3722, size: 64, offset: 64)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_filter", file: !3724, line: 24, size: 64, elements: !3725)
!3724 = !DIFile(filename: "./include/uapi/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3725 = !{!3726, !3727, !3728, !3729}
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3723, file: !3724, line: 25, baseType: !482, size: 16)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "jt", scope: !3723, file: !3724, line: 26, baseType: !1404, size: 8, offset: 16)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "jf", scope: !3723, file: !3724, line: 27, baseType: !1404, size: 8, offset: 24)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !3723, file: !3724, line: 28, baseType: !474, size: 32, offset: 32)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_func", scope: !3121, file: !3122, line: 545, baseType: !3731, size: 64, offset: 384)
!3731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3732, size: 64)
!3732 = !DISubroutineType(types: !3733)
!3733 = !{!7, !2269, !3734}
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 64)
!3735 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3509)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3121, file: !3122, line: 548, baseType: !3737, offset: 448)
!3737 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3723, elements: !1928)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "insnsi", scope: !3121, file: !3122, line: 549, baseType: !3739, offset: 448)
!3739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3509, elements: !320)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3117, file: !151, line: 1034, baseType: !3741, size: 128, offset: 64)
!3741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3742, size: 128, elements: !484)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !151, line: 1034, flags: DIFlagFwdDecl)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3106, file: !3107, line: 17, baseType: !3745, size: 128, offset: 128)
!3745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3120, size: 128, elements: !484)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3106, file: !3107, line: 18, baseType: !3747, size: 256, offset: 256)
!3747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !295, size: 256, elements: !484)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !1969, file: !1970, line: 174, baseType: !384, size: 64, offset: 15552)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !1969, file: !1970, line: 183, baseType: !3750, size: 1216, offset: 15616)
!3750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3751, line: 15, size: 1216, elements: !3752)
!3751 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3752 = !{!3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3766, !3767, !3768, !3771, !3774}
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3750, file: !3751, line: 17, baseType: !2003, size: 64)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3750, file: !3751, line: 18, baseType: !2003, size: 64, offset: 64)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3750, file: !3751, line: 19, baseType: !2003, size: 64, offset: 128)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3750, file: !3751, line: 20, baseType: !2003, size: 64, offset: 192)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3750, file: !3751, line: 21, baseType: !2003, size: 64, offset: 256)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3750, file: !3751, line: 22, baseType: !2003, size: 64, offset: 320)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3750, file: !3751, line: 23, baseType: !2003, size: 64, offset: 384)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3750, file: !3751, line: 24, baseType: !2003, size: 64, offset: 448)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3750, file: !3751, line: 25, baseType: !2003, size: 64, offset: 512)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3750, file: !3751, line: 26, baseType: !2003, size: 64, offset: 576)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3750, file: !3751, line: 30, baseType: !3764, size: 64, offset: 640)
!3764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3765, size: 64)
!3765 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3751, line: 11, flags: DIFlagFwdDecl)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3750, file: !3751, line: 31, baseType: !735, offset: 704)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3750, file: !3751, line: 32, baseType: !2246, size: 320, offset: 704)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3750, file: !3751, line: 33, baseType: !3769, size: 64, offset: 1024)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3770 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3751, line: 12, flags: DIFlagFwdDecl)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3750, file: !3751, line: 34, baseType: !3772, size: 64, offset: 1088)
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 64)
!3773 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3751, line: 13, flags: DIFlagFwdDecl)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3750, file: !3751, line: 37, baseType: !863, size: 64, offset: 1152)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !1969, file: !1970, line: 191, baseType: !456, size: 64, offset: 16832)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !1953, file: !1954, line: 38, baseType: !3777, size: 64, offset: 384)
!3777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3778, size: 64)
!3778 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !1954, line: 38, flags: DIFlagFwdDecl)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !1953, file: !1954, line: 39, baseType: !3777, size: 64, offset: 448)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !1953, file: !1954, line: 40, baseType: !3781, size: 64, offset: 512)
!3781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 64)
!3782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3783, line: 856, size: 448, elements: !3784)
!3783 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3784 = !{!3785, !3786, !3787, !3788, !3789}
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3782, file: !3783, line: 857, baseType: !1277, size: 32)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3782, file: !3783, line: 858, baseType: !1799, size: 192, offset: 64)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3782, file: !3783, line: 859, baseType: !1765, size: 64, offset: 256)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3782, file: !3783, line: 860, baseType: !1907, size: 64, offset: 320)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3782, file: !3783, line: 861, baseType: !3790, size: 64, offset: 384)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3792, line: 16, flags: DIFlagFwdDecl)
!3792 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1264, file: !1265, line: 969, baseType: !3794, size: 64, offset: 9216)
!3794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3795, size: 64)
!3795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3796, line: 82, size: 7296, elements: !3797)
!3796 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3797 = !{!3798, !3799, !3800, !3801, !3802, !3803, !3804, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3826, !3827, !3833, !3842, !3843, !3845, !3846, !3847, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872, !3875, !3876, !3883, !3884, !3885, !3886, !3887, !3888}
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3795, file: !3796, line: 83, baseType: !1277, size: 32)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3795, file: !3796, line: 84, baseType: !394, size: 32, offset: 32)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3795, file: !3796, line: 85, baseType: !43, size: 32, offset: 64)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3795, file: !3796, line: 86, baseType: !295, size: 128, offset: 128)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3795, file: !3796, line: 88, baseType: !1106, size: 128, offset: 256)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3795, file: !3796, line: 91, baseType: !1263, size: 64, offset: 384)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3795, file: !3796, line: 94, baseType: !3805, size: 192, offset: 448)
!3805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3806, line: 30, size: 192, elements: !3807)
!3806 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3807 = !{!3808, !3809}
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3805, file: !3806, line: 31, baseType: !295, size: 128)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3805, file: !3806, line: 32, baseType: !3810, size: 64, offset: 128)
!3810 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3811, line: 25, baseType: !3812)
!3811 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3811, line: 23, size: 64, elements: !3813)
!3813 = !{!3814}
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3812, file: !3811, line: 24, baseType: !1421, size: 64)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3795, file: !3796, line: 97, baseType: !863, size: 64, offset: 640)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3795, file: !3796, line: 100, baseType: !43, size: 32, offset: 704)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3795, file: !3796, line: 106, baseType: !43, size: 32, offset: 736)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3795, file: !3796, line: 107, baseType: !1263, size: 64, offset: 768)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3795, file: !3796, line: 110, baseType: !43, size: 32, offset: 832)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3795, file: !3796, line: 111, baseType: !7, size: 32, offset: 864)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3795, file: !3796, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3795, file: !3796, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3795, file: !3796, line: 128, baseType: !43, size: 32, offset: 928)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3795, file: !3796, line: 129, baseType: !295, size: 128, offset: 960)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3795, file: !3796, line: 132, baseType: !1339, size: 512, offset: 1088)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3795, file: !3796, line: 133, baseType: !1347, size: 64, offset: 1600)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3795, file: !3796, line: 140, baseType: !3828, size: 256, offset: 1664)
!3828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3829, size: 256, elements: !484)
!3829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3796, line: 38, size: 128, elements: !3830)
!3830 = !{!3831, !3832}
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3829, file: !3796, line: 39, baseType: !342, size: 64)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3829, file: !3796, line: 40, baseType: !342, size: 64, offset: 64)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3795, file: !3796, line: 146, baseType: !3834, size: 192, offset: 1920)
!3834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3796, line: 66, size: 192, elements: !3835)
!3835 = !{!3836}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3834, file: !3796, line: 67, baseType: !3837, size: 192)
!3837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3796, line: 47, size: 192, elements: !3838)
!3838 = !{!3839, !3840, !3841}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3837, file: !3796, line: 48, baseType: !384, size: 64)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3837, file: !3796, line: 49, baseType: !384, size: 64, offset: 64)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3837, file: !3796, line: 50, baseType: !384, size: 64, offset: 128)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3795, file: !3796, line: 150, baseType: !1581, size: 640, offset: 2112)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3795, file: !3796, line: 153, baseType: !3844, size: 256, offset: 2752)
!3844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1527, size: 256, elements: !1208)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3795, file: !3796, line: 159, baseType: !1527, size: 64, offset: 3008)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3795, file: !3796, line: 162, baseType: !43, size: 32, offset: 3072)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3795, file: !3796, line: 164, baseType: !3848, size: 64, offset: 3136)
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3849, size: 64)
!3849 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3796, line: 164, flags: DIFlagFwdDecl)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3795, file: !3796, line: 175, baseType: !2179, size: 32, offset: 3200)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3795, file: !3796, line: 176, baseType: !342, size: 64, offset: 3264)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3795, file: !3796, line: 176, baseType: !342, size: 64, offset: 3328)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3795, file: !3796, line: 176, baseType: !342, size: 64, offset: 3392)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3795, file: !3796, line: 176, baseType: !342, size: 64, offset: 3456)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3795, file: !3796, line: 177, baseType: !342, size: 64, offset: 3520)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3795, file: !3796, line: 178, baseType: !342, size: 64, offset: 3584)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3795, file: !3796, line: 179, baseType: !1569, size: 128, offset: 3648)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3795, file: !3796, line: 180, baseType: !323, size: 64, offset: 3776)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3795, file: !3796, line: 180, baseType: !323, size: 64, offset: 3840)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3795, file: !3796, line: 180, baseType: !323, size: 64, offset: 3904)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3795, file: !3796, line: 180, baseType: !323, size: 64, offset: 3968)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3795, file: !3796, line: 181, baseType: !323, size: 64, offset: 4032)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3795, file: !3796, line: 181, baseType: !323, size: 64, offset: 4096)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3795, file: !3796, line: 181, baseType: !323, size: 64, offset: 4160)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3795, file: !3796, line: 181, baseType: !323, size: 64, offset: 4224)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3795, file: !3796, line: 182, baseType: !323, size: 64, offset: 4288)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3795, file: !3796, line: 182, baseType: !323, size: 64, offset: 4352)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3795, file: !3796, line: 182, baseType: !323, size: 64, offset: 4416)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3795, file: !3796, line: 182, baseType: !323, size: 64, offset: 4480)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3795, file: !3796, line: 183, baseType: !323, size: 64, offset: 4544)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3795, file: !3796, line: 183, baseType: !323, size: 64, offset: 4608)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3795, file: !3796, line: 184, baseType: !3873, offset: 4672)
!3873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3874, line: 12, elements: !749)
!3874 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3795, file: !3796, line: 192, baseType: !346, size: 64, offset: 4672)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3795, file: !3796, line: 203, baseType: !3877, size: 2048, offset: 4736)
!3877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3878, size: 2048, elements: !280)
!3878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3879, line: 43, size: 128, elements: !3880)
!3879 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3880 = !{!3881, !3882}
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3878, file: !3879, line: 44, baseType: !603, size: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3878, file: !3879, line: 45, baseType: !603, size: 64, offset: 64)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3795, file: !3796, line: 220, baseType: !546, size: 8, offset: 6784)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3795, file: !3796, line: 221, baseType: !1252, size: 16, offset: 6800)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3795, file: !3796, line: 222, baseType: !1252, size: 16, offset: 6816)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3795, file: !3796, line: 224, baseType: !1131, size: 64, offset: 6848)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3795, file: !3796, line: 227, baseType: !960, size: 192, offset: 6912)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3795, file: !3796, line: 233, baseType: !960, size: 192, offset: 7104)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1264, file: !1265, line: 970, baseType: !3890, size: 64, offset: 9280)
!3890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3891, size: 64)
!3891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3796, line: 20, size: 16576, elements: !3892)
!3892 = !{!3893, !3894, !3895, !3896}
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3891, file: !3796, line: 21, baseType: !735)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3891, file: !3796, line: 22, baseType: !1277, size: 32)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3891, file: !3796, line: 23, baseType: !1106, size: 128, offset: 64)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3891, file: !3796, line: 24, baseType: !3897, size: 16384, offset: 192)
!3897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3898, size: 16384, elements: !3918)
!3898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3806, line: 49, size: 256, elements: !3899)
!3899 = !{!3900}
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3898, file: !3806, line: 50, baseType: !3901, size: 256)
!3901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3806, line: 35, size: 256, elements: !3902)
!3902 = !{!3903, !3910, !3911, !3917}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3901, file: !3806, line: 37, baseType: !3904, size: 64)
!3904 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3905, line: 19, baseType: !3906)
!3905 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3905, line: 18, baseType: !3908)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{null, !43}
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3901, file: !3806, line: 38, baseType: !323, size: 64, offset: 64)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3901, file: !3806, line: 44, baseType: !3912, size: 64, offset: 128)
!3912 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3905, line: 22, baseType: !3913)
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3914, size: 64)
!3914 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3905, line: 21, baseType: !3915)
!3915 = !DISubroutineType(types: !3916)
!3916 = !{null}
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3901, file: !3806, line: 46, baseType: !3810, size: 64, offset: 192)
!3918 = !{!3919}
!3919 = !DISubrange(count: 64)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1264, file: !1265, line: 971, baseType: !3810, size: 64, offset: 9344)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1264, file: !1265, line: 972, baseType: !3810, size: 64, offset: 9408)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1264, file: !1265, line: 974, baseType: !3810, size: 64, offset: 9472)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1264, file: !1265, line: 975, baseType: !3805, size: 192, offset: 9536)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1264, file: !1265, line: 976, baseType: !323, size: 64, offset: 9728)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1264, file: !1265, line: 977, baseType: !600, size: 64, offset: 9792)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1264, file: !1265, line: 978, baseType: !7, size: 32, offset: 9856)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1264, file: !1265, line: 980, baseType: !313, size: 64, offset: 9920)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1264, file: !1265, line: 989, baseType: !3929, size: 128, offset: 9984)
!3929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3930, line: 35, size: 128, elements: !3931)
!3930 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3931 = !{!3932, !3933, !3934}
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3929, file: !3930, line: 36, baseType: !43, size: 32)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3929, file: !3930, line: 37, baseType: !394, size: 32, offset: 32)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3929, file: !3930, line: 38, baseType: !3935, size: 64, offset: 64)
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3930, line: 23, flags: DIFlagFwdDecl)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1264, file: !1265, line: 992, baseType: !342, size: 64, offset: 10112)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1264, file: !1265, line: 993, baseType: !342, size: 64, offset: 10176)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1264, file: !1265, line: 996, baseType: !735, offset: 10240)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1264, file: !1265, line: 999, baseType: !1174, offset: 10240)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1264, file: !1265, line: 1001, baseType: !3942, size: 64, offset: 10240)
!3942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1265, line: 636, size: 64, elements: !3943)
!3943 = !{!3944}
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3942, file: !1265, line: 637, baseType: !3945, size: 64)
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3942, size: 64)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1264, file: !1265, line: 1005, baseType: !1393, size: 128, offset: 10304)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1264, file: !1265, line: 1007, baseType: !1263, size: 64, offset: 10432)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1264, file: !1265, line: 1009, baseType: !3949, size: 64, offset: 10496)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1265, line: 1009, flags: DIFlagFwdDecl)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1264, file: !1265, line: 1043, baseType: !576, size: 64, offset: 10560)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1264, file: !1265, line: 1046, baseType: !3953, size: 64, offset: 10624)
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3954, size: 64)
!3954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !3955, line: 554, size: 128, elements: !3956)
!3955 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!3956 = !{!3957, !6019}
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3954, file: !3955, line: 555, baseType: !3958, size: 64)
!3958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3959, size: 64)
!3959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !3960, line: 203, size: 832, elements: !3961)
!3960 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!3961 = !{!3962, !3963, !5973, !5974, !5975, !5976, !5977, !5978, !5979, !5980, !5987, !5992, !5993, !6012, !6013, !6014, !6015, !6016, !6018}
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !3959, file: !3960, line: 204, baseType: !3958, size: 64)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !3959, file: !3960, line: 205, baseType: !3964, size: 64, offset: 64)
!3964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3965, size: 64)
!3965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !3966, line: 167, size: 8512, elements: !3967)
!3966 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!3967 = !{!3968, !3969, !3970, !3971, !3973, !3974, !3975, !5267, !5268, !5444, !5955, !5956, !5957, !5958, !5959, !5960, !5963, !5964, !5967, !5968, !5969, !5972}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3965, file: !3966, line: 171, baseType: !43, size: 32)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !3965, file: !3966, line: 172, baseType: !43, size: 32, offset: 32)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !3965, file: !3966, line: 173, baseType: !43, size: 32, offset: 64)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3965, file: !3966, line: 176, baseType: !3972, size: 256, offset: 96)
!3972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 256, elements: !722)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3965, file: !3966, line: 178, baseType: !483, size: 16, offset: 352)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !3965, file: !3966, line: 179, baseType: !483, size: 16, offset: 368)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !3965, file: !3966, line: 186, baseType: !3976, size: 64, offset: 384)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !3966, line: 149, size: 256, elements: !3978)
!3978 = !{!3979, !3980, !3981, !5265}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3977, file: !3966, line: 150, baseType: !310, size: 128, align: 64)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3977, file: !3966, line: 151, baseType: !43, size: 32, offset: 128)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !3977, file: !3966, line: 152, baseType: !3982, size: 64, offset: 192)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !3966, line: 53, size: 6592, elements: !3984)
!3984 = !{!3985, !3987, !3988, !3989, !3992, !4013, !5248, !5249, !5250, !5251, !5259}
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !3983, file: !3966, line: 54, baseType: !3986, size: 64)
!3986 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !288, line: 125, baseType: !342)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !3983, file: !3966, line: 60, baseType: !3986, size: 64, offset: 64)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3983, file: !3966, line: 64, baseType: !323, size: 64, offset: 128)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !3983, file: !3966, line: 65, baseType: !3990, size: 64, offset: 192)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !3966, line: 65, flags: DIFlagFwdDecl)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3983, file: !3966, line: 66, baseType: !3993, size: 128, offset: 256)
!3993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !3994, line: 105, size: 128, elements: !3995)
!3994 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!3995 = !{!3996, !3997}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !3993, file: !3994, line: 110, baseType: !323, size: 64)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3993, file: !3994, line: 118, baseType: !3998, size: 64, offset: 64)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64)
!3999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !3994, line: 95, size: 448, elements: !4000)
!4000 = !{!4001, !4002, !4008, !4009, !4010, !4011, !4012}
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3999, file: !3994, line: 96, baseType: !382, size: 64)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3999, file: !3994, line: 97, baseType: !4003, size: 64, offset: 64)
!4003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4004, size: 64)
!4004 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !3994, line: 60, baseType: !4005)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{null, !4007}
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3993, size: 64)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !3999, file: !3994, line: 98, baseType: !4003, size: 64, offset: 128)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !3999, file: !3994, line: 99, baseType: !546, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !3999, file: !3994, line: 100, baseType: !546, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3999, file: !3994, line: 101, baseType: !310, size: 128, align: 64, offset: 256)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3999, file: !3994, line: 102, baseType: !4007, size: 64, offset: 384)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !3983, file: !3966, line: 68, baseType: !4014, size: 5568, offset: 384)
!4014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !4015, line: 461, size: 5568, elements: !4016)
!4015 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!4016 = !{!4017, !4381, !4383, !4386, !4387, !4439, !4531, !4532, !4533, !4534, !4535, !4550, !4657, !4670, !5176, !5177, !5181, !5182, !5183, !5184, !5188, !5194, !5195, !5198, !5199, !5200, !5201, !5202, !5203, !5204, !5236, !5237, !5238, !5241, !5244, !5245, !5246, !5247}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4014, file: !4015, line: 462, baseType: !4018, size: 512)
!4018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !4019, line: 64, size: 512, elements: !4020)
!4019 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!4020 = !{!4021, !4022, !4023, !4025, !4065, !4167, !4371, !4376, !4377, !4378, !4379, !4380}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4018, file: !4019, line: 65, baseType: !303, size: 64)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4018, file: !4019, line: 66, baseType: !295, size: 128, offset: 64)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4018, file: !4019, line: 67, baseType: !4024, size: 64, offset: 192)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4018, size: 64)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !4018, file: !4019, line: 68, baseType: !4026, size: 64, offset: 256)
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 64)
!4027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !4019, line: 192, size: 704, elements: !4028)
!4028 = !{!4029, !4030, !4031, !4032}
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4027, file: !4019, line: 193, baseType: !295, size: 128)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4027, file: !4019, line: 194, baseType: !735, offset: 128)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4027, file: !4019, line: 195, baseType: !4018, size: 512, offset: 128)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !4027, file: !4019, line: 196, baseType: !4033, size: 64, offset: 640)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4035)
!4035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !4019, line: 156, size: 192, elements: !4036)
!4036 = !{!4037, !4042, !4047}
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4035, file: !4019, line: 157, baseType: !4038, size: 64)
!4038 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4039)
!4039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4040, size: 64)
!4040 = !DISubroutineType(types: !4041)
!4041 = !{!43, !4026, !4024}
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4035, file: !4019, line: 158, baseType: !4043, size: 64, offset: 64)
!4043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4044)
!4044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4045, size: 64)
!4045 = !DISubroutineType(types: !4046)
!4046 = !{!303, !4026, !4024}
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4035, file: !4019, line: 159, baseType: !4048, size: 64, offset: 128)
!4048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4049)
!4049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4050, size: 64)
!4050 = !DISubroutineType(types: !4051)
!4051 = !{!43, !4026, !4024, !4052}
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4053, size: 64)
!4053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !4019, line: 148, size: 20736, elements: !4054)
!4054 = !{!4055, !4057, !4059, !4060, !4064}
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !4053, file: !4019, line: 149, baseType: !4056, size: 192)
!4056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !583, size: 192, elements: !873)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !4053, file: !4019, line: 150, baseType: !4058, size: 4096, offset: 192)
!4058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !583, size: 4096, elements: !3918)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !4053, file: !4019, line: 151, baseType: !43, size: 32, offset: 4288)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4053, file: !4019, line: 152, baseType: !4061, size: 16384, offset: 4320)
!4061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 16384, elements: !4062)
!4062 = !{!4063}
!4063 = !DISubrange(count: 2048)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !4053, file: !4019, line: 153, baseType: !43, size: 32, offset: 20704)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !4018, file: !4019, line: 69, baseType: !4066, size: 64, offset: 320)
!4066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4067, size: 64)
!4067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !4019, line: 138, size: 448, elements: !4068)
!4068 = !{!4069, !4073, !4092, !4094, !4127, !4159, !4163}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4067, file: !4019, line: 139, baseType: !4070, size: 64)
!4070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4071, size: 64)
!4071 = !DISubroutineType(types: !4072)
!4072 = !{null, !4024}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !4067, file: !4019, line: 140, baseType: !4074, size: 64, offset: 64)
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 64)
!4075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4076)
!4076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !4077, line: 230, size: 128, elements: !4078)
!4077 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!4078 = !{!4079, !4088}
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4076, file: !4077, line: 231, baseType: !4080, size: 64)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{!1021, !4024, !4083, !583}
!4083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4084, size: 64)
!4084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !4077, line: 30, size: 128, elements: !4085)
!4085 = !{!4086, !4087}
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4084, file: !4077, line: 31, baseType: !303, size: 64)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4084, file: !4077, line: 32, baseType: !652, size: 16, offset: 64)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4076, file: !4077, line: 232, baseType: !4089, size: 64, offset: 64)
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4090, size: 64)
!4090 = !DISubroutineType(types: !4091)
!4091 = !{!1021, !4024, !4083, !303, !600}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !4067, file: !4019, line: 141, baseType: !4093, size: 64, offset: 128)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4083, size: 64)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !4067, file: !4019, line: 142, baseType: !4095, size: 64, offset: 192)
!4095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4096, size: 64)
!4096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4097, size: 64)
!4097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4098)
!4098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !4077, line: 84, size: 320, elements: !4099)
!4099 = !{!4100, !4101, !4105, !4124, !4125}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4098, file: !4077, line: 85, baseType: !303, size: 64)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !4098, file: !4077, line: 86, baseType: !4102, size: 64, offset: 64)
!4102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4103, size: 64)
!4103 = !DISubroutineType(types: !4104)
!4104 = !{!652, !4024, !4083, !43}
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !4098, file: !4077, line: 88, baseType: !4106, size: 64, offset: 128)
!4106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4107, size: 64)
!4107 = !DISubroutineType(types: !4108)
!4108 = !{!652, !4024, !4109, !43}
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !4077, line: 168, size: 448, elements: !4111)
!4111 = !{!4112, !4113, !4114, !4115, !4119, !4120}
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4110, file: !4077, line: 169, baseType: !4084, size: 128)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4110, file: !4077, line: 170, baseType: !600, size: 64, offset: 128)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4110, file: !4077, line: 171, baseType: !576, size: 64, offset: 192)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4110, file: !4077, line: 172, baseType: !4116, size: 64, offset: 256)
!4116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4117, size: 64)
!4117 = !DISubroutineType(types: !4118)
!4118 = !{!1021, !1016, !4024, !4109, !583, !830, !600}
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4110, file: !4077, line: 174, baseType: !4116, size: 64, offset: 320)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4110, file: !4077, line: 176, baseType: !4121, size: 64, offset: 384)
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4122, size: 64)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!43, !1016, !4024, !4109, !1121}
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !4098, file: !4077, line: 90, baseType: !4093, size: 64, offset: 192)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !4098, file: !4077, line: 91, baseType: !4126, size: 64, offset: 256)
!4126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 64)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !4067, file: !4019, line: 143, baseType: !4128, size: 64, offset: 256)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{!4131, !4024}
!4131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4132, size: 64)
!4132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4133)
!4133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !4134, line: 39, size: 384, elements: !4135)
!4134 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!4135 = !{!4136, !4142, !4146, !4150, !4154, !4158}
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4133, file: !4134, line: 40, baseType: !4137, size: 32)
!4137 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !4134, line: 26, baseType: !7, size: 32, elements: !4138)
!4138 = !{!4139, !4140, !4141}
!4139 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!4140 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!4141 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4133, file: !4134, line: 41, baseType: !4143, size: 64, offset: 64)
!4143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4144, size: 64)
!4144 = !DISubroutineType(types: !4145)
!4145 = !{!546}
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4133, file: !4134, line: 42, baseType: !4147, size: 64, offset: 128)
!4147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4148, size: 64)
!4148 = !DISubroutineType(types: !4149)
!4149 = !{!576}
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4133, file: !4134, line: 43, baseType: !4151, size: 64, offset: 192)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = !DISubroutineType(types: !4153)
!4153 = !{!2269, !456}
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4133, file: !4134, line: 44, baseType: !4155, size: 64, offset: 256)
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 64)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{!2269}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4133, file: !4134, line: 45, baseType: !3501, size: 64, offset: 320)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4067, file: !4019, line: 144, baseType: !4160, size: 64, offset: 320)
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4161, size: 64)
!4161 = !DISubroutineType(types: !4162)
!4162 = !{!2269, !4024}
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4067, file: !4019, line: 145, baseType: !4164, size: 64, offset: 384)
!4164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4165, size: 64)
!4165 = !DISubroutineType(types: !4166)
!4166 = !{null, !4024, !1888, !1889}
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !4018, file: !4019, line: 70, baseType: !4168, size: 64, offset: 384)
!4168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4169, size: 64)
!4169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !844, line: 123, size: 1024, elements: !4170)
!4170 = !{!4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4364, !4365, !4366, !4367, !4368}
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4169, file: !844, line: 124, baseType: !394, size: 32)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4169, file: !844, line: 125, baseType: !394, size: 32, offset: 32)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4169, file: !844, line: 135, baseType: !4168, size: 64, offset: 64)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4169, file: !844, line: 136, baseType: !303, size: 64, offset: 128)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4169, file: !844, line: 138, baseType: !444, size: 192, align: 64, offset: 192)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4169, file: !844, line: 140, baseType: !2269, size: 64, offset: 384)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4169, file: !844, line: 141, baseType: !7, size: 32, offset: 448)
!4178 = !DIDerivedType(tag: DW_TAG_member, scope: !4169, file: !844, line: 142, baseType: !4179, size: 256, offset: 512)
!4179 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4169, file: !844, line: 142, size: 256, elements: !4180)
!4180 = !{!4181, !4221, !4225}
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4179, file: !844, line: 143, baseType: !4182, size: 192)
!4182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !844, line: 91, size: 192, elements: !4183)
!4183 = !{!4184, !4185, !4186}
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4182, file: !844, line: 92, baseType: !323, size: 64)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4182, file: !844, line: 94, baseType: !1139, size: 64, offset: 64)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4182, file: !844, line: 100, baseType: !4187, size: 64, offset: 128)
!4187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4188, size: 64)
!4188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !844, line: 180, size: 704, elements: !4189)
!4189 = !{!4190, !4191, !4192, !4193, !4194, !4195, !4219, !4220}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4188, file: !844, line: 182, baseType: !4168, size: 64)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4188, file: !844, line: 183, baseType: !7, size: 32, offset: 64)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4188, file: !844, line: 186, baseType: !1987, size: 192, offset: 128)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4188, file: !844, line: 187, baseType: !713, size: 32, offset: 320)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4188, file: !844, line: 188, baseType: !713, size: 32, offset: 352)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4188, file: !844, line: 189, baseType: !4196, size: 64, offset: 384)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 64)
!4197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !844, line: 168, size: 320, elements: !4198)
!4198 = !{!4199, !4203, !4207, !4211, !4215}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4197, file: !844, line: 169, baseType: !4200, size: 64)
!4200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4201, size: 64)
!4201 = !DISubroutineType(types: !4202)
!4202 = !{!43, !948, !4187}
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4197, file: !844, line: 171, baseType: !4204, size: 64, offset: 64)
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!43, !4168, !303, !652}
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4197, file: !844, line: 173, baseType: !4208, size: 64, offset: 128)
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4209, size: 64)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{!43, !4168}
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4197, file: !844, line: 174, baseType: !4212, size: 64, offset: 192)
!4212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4213, size: 64)
!4213 = !DISubroutineType(types: !4214)
!4214 = !{!43, !4168, !4168, !303}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4197, file: !844, line: 176, baseType: !4216, size: 64, offset: 256)
!4216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4217, size: 64)
!4217 = !DISubroutineType(types: !4218)
!4218 = !{!43, !948, !4168, !4187}
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4188, file: !844, line: 192, baseType: !295, size: 128, offset: 448)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4188, file: !844, line: 194, baseType: !1106, size: 128, offset: 576)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4179, file: !844, line: 144, baseType: !4222, size: 64)
!4222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !844, line: 103, size: 64, elements: !4223)
!4223 = !{!4224}
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4222, file: !844, line: 104, baseType: !4168, size: 64)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4179, file: !844, line: 145, baseType: !4226, size: 256)
!4226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !844, line: 107, size: 256, elements: !4227)
!4227 = !{!4228, !4359, !4362, !4363}
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4226, file: !844, line: 108, baseType: !4229, size: 64)
!4229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4230, size: 64)
!4230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4231)
!4231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !844, line: 217, size: 768, elements: !4232)
!4232 = !{!4233, !4336, !4340, !4341, !4342, !4343, !4344, !4348, !4349, !4350, !4351, !4355}
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4231, file: !844, line: 222, baseType: !4234, size: 64)
!4234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4235, size: 64)
!4235 = !DISubroutineType(types: !4236)
!4236 = !{!43, !4237}
!4237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4238, size: 64)
!4238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !844, line: 197, size: 1088, elements: !4239)
!4239 = !{!4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252}
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4238, file: !844, line: 199, baseType: !4168, size: 64)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4238, file: !844, line: 200, baseType: !1016, size: 64, offset: 64)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4238, file: !844, line: 201, baseType: !948, size: 64, offset: 128)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4238, file: !844, line: 202, baseType: !576, size: 64, offset: 192)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4238, file: !844, line: 205, baseType: !960, size: 192, offset: 256)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4238, file: !844, line: 206, baseType: !960, size: 192, offset: 448)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4238, file: !844, line: 207, baseType: !43, size: 32, offset: 640)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4238, file: !844, line: 208, baseType: !295, size: 128, offset: 704)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4238, file: !844, line: 209, baseType: !583, size: 64, offset: 832)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4238, file: !844, line: 211, baseType: !600, size: 64, offset: 896)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4238, file: !844, line: 212, baseType: !546, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4238, file: !844, line: 213, baseType: !546, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4238, file: !844, line: 214, baseType: !4253, size: 64, offset: 1024)
!4253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4254, size: 64)
!4254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4255)
!4255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !25, line: 557, size: 832, elements: !4256)
!4256 = !{!4257, !4261, !4262, !4266, !4270, !4310, !4314, !4318, !4322, !4323, !4324, !4328, !4332}
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4255, file: !25, line: 558, baseType: !4258, size: 64)
!4258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4259, size: 64)
!4259 = !DISubroutineType(types: !4260)
!4260 = !{null, !1121}
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4255, file: !25, line: 559, baseType: !4258, size: 64, offset: 64)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !4255, file: !25, line: 560, baseType: !4263, size: 64, offset: 128)
!4263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4264, size: 64)
!4264 = !DISubroutineType(types: !4265)
!4265 = !{!43, !1121, !323}
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !4255, file: !25, line: 561, baseType: !4267, size: 64, offset: 192)
!4267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4268, size: 64)
!4268 = !DISubroutineType(types: !4269)
!4269 = !{!43, !1121}
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !4255, file: !25, line: 562, baseType: !4271, size: 64, offset: 256)
!4271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4272, size: 64)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{!4274, !4275}
!4274 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !632, line: 682, baseType: !7)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !25, line: 508, size: 768, elements: !4277)
!4277 = !{!4278, !4279, !4280, !4281, !4282, !4283, !4290, !4297, !4303, !4304, !4305, !4307, !4308}
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !4276, file: !25, line: 509, baseType: !1121, size: 64)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4276, file: !25, line: 510, baseType: !7, size: 32, offset: 64)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4276, file: !25, line: 511, baseType: !1996, size: 32, offset: 96)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !4276, file: !25, line: 512, baseType: !323, size: 64, offset: 128)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !4276, file: !25, line: 513, baseType: !323, size: 64, offset: 192)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4276, file: !25, line: 514, baseType: !4284, size: 64, offset: 256)
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64)
!4285 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1154, line: 385, baseType: !4286)
!4286 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1154, line: 385, size: 64, elements: !4287)
!4287 = !{!4288}
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4286, file: !1154, line: 385, baseType: !4289, size: 64)
!4289 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1159, line: 15, baseType: !323)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4276, file: !25, line: 516, baseType: !4291, size: 64, offset: 320)
!4291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4292, size: 64)
!4292 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1154, line: 359, baseType: !4293)
!4293 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1154, line: 359, size: 64, elements: !4294)
!4294 = !{!4295}
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4293, file: !1154, line: 359, baseType: !4296, size: 64)
!4296 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1159, line: 16, baseType: !323)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !4276, file: !25, line: 519, baseType: !4298, size: 64, offset: 384)
!4298 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1159, line: 21, baseType: !4299)
!4299 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1159, line: 21, size: 64, elements: !4300)
!4300 = !{!4301}
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4299, file: !1159, line: 21, baseType: !4302, size: 64)
!4302 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1159, line: 14, baseType: !323)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !4276, file: !25, line: 521, baseType: !630, size: 64, offset: 448)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4276, file: !25, line: 522, baseType: !630, size: 64, offset: 512)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4276, file: !25, line: 528, baseType: !4306, size: 64, offset: 576)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4298, size: 64)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !4276, file: !25, line: 532, baseType: !2450, size: 64, offset: 640)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !4276, file: !25, line: 536, baseType: !4309, size: 64, offset: 704)
!4309 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1154, line: 509, baseType: !630)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !4255, file: !25, line: 563, baseType: !4311, size: 64, offset: 320)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 64)
!4312 = !DISubroutineType(types: !4313)
!4313 = !{!4274, !4275, !24}
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !4255, file: !25, line: 565, baseType: !4315, size: 64, offset: 384)
!4315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4316, size: 64)
!4316 = !DISubroutineType(types: !4317)
!4317 = !{null, !4275, !323, !323}
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !4255, file: !25, line: 567, baseType: !4319, size: 64, offset: 448)
!4319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4320, size: 64)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{!323, !1121}
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !4255, file: !25, line: 571, baseType: !4271, size: 64, offset: 512)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !4255, file: !25, line: 574, baseType: !4271, size: 64, offset: 576)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !4255, file: !25, line: 579, baseType: !4325, size: 64, offset: 640)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{!43, !1121, !323, !576, !43, !43}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4255, file: !25, line: 585, baseType: !4329, size: 64, offset: 704)
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{!303, !1121}
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !4255, file: !25, line: 615, baseType: !4333, size: 64, offset: 768)
!4333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4334, size: 64)
!4334 = !DISubroutineType(types: !4335)
!4335 = !{!630, !1121, !323}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4231, file: !844, line: 223, baseType: !4337, size: 64, offset: 64)
!4337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4338, size: 64)
!4338 = !DISubroutineType(types: !4339)
!4339 = !{null, !4237}
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4231, file: !844, line: 236, baseType: !985, size: 64, offset: 128)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4231, file: !844, line: 238, baseType: !972, size: 64, offset: 192)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4231, file: !844, line: 239, baseType: !981, size: 64, offset: 256)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4231, file: !844, line: 240, baseType: !977, size: 64, offset: 320)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4231, file: !844, line: 242, baseType: !4345, size: 64, offset: 384)
!4345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4346, size: 64)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!1021, !4237, !583, !600, !830}
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4231, file: !844, line: 252, baseType: !600, size: 64, offset: 448)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4231, file: !844, line: 259, baseType: !546, size: 8, offset: 512)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4231, file: !844, line: 260, baseType: !4345, size: 64, offset: 576)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4231, file: !844, line: 263, baseType: !4352, size: 64, offset: 640)
!4352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4353, size: 64)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{!1095, !4237, !1096}
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4231, file: !844, line: 266, baseType: !4356, size: 64, offset: 704)
!4356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4357, size: 64)
!4357 = !DISubroutineType(types: !4358)
!4358 = !{!43, !4237, !1121}
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4226, file: !844, line: 109, baseType: !4360, size: 64, offset: 64)
!4360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4361, size: 64)
!4361 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !844, line: 31, flags: DIFlagFwdDecl)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4226, file: !844, line: 110, baseType: !830, size: 64, offset: 128)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4226, file: !844, line: 111, baseType: !4168, size: 64, offset: 192)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4169, file: !844, line: 148, baseType: !576, size: 64, offset: 768)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4169, file: !844, line: 154, baseType: !342, size: 64, offset: 832)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4169, file: !844, line: 156, baseType: !483, size: 16, offset: 896)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4169, file: !844, line: 157, baseType: !652, size: 16, offset: 912)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4169, file: !844, line: 158, baseType: !4369, size: 64, offset: 960)
!4369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4370, size: 64)
!4370 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !844, line: 32, flags: DIFlagFwdDecl)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4018, file: !4019, line: 71, baseType: !4372, size: 32, offset: 448)
!4372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !4373, line: 19, size: 32, elements: !4374)
!4373 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!4374 = !{!4375}
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4372, file: !4373, line: 20, baseType: !1277, size: 32)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !4018, file: !4019, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !4018, file: !4019, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !4018, file: !4019, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !4018, file: !4019, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !4018, file: !4019, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4014, file: !4015, line: 463, baseType: !4382, size: 64, offset: 512)
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4014, file: !4015, line: 465, baseType: !4384, size: 64, offset: 576)
!4384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4385, size: 64)
!4385 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !4015, line: 36, flags: DIFlagFwdDecl)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !4014, file: !4015, line: 467, baseType: !303, size: 64, offset: 640)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4014, file: !4015, line: 468, baseType: !4388, size: 64, offset: 704)
!4388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4389, size: 64)
!4389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4390)
!4390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !4015, line: 87, size: 384, elements: !4391)
!4391 = !{!4392, !4393, !4394, !4398, !4403, !4407}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4390, file: !4015, line: 88, baseType: !303, size: 64)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4390, file: !4015, line: 89, baseType: !4095, size: 64, offset: 64)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4390, file: !4015, line: 90, baseType: !4395, size: 64, offset: 128)
!4395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4396, size: 64)
!4396 = !DISubroutineType(types: !4397)
!4397 = !{!43, !4382, !4052}
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4390, file: !4015, line: 91, baseType: !4399, size: 64, offset: 192)
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4400, size: 64)
!4400 = !DISubroutineType(types: !4401)
!4401 = !{!583, !4382, !4402, !1888, !1889}
!4402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4390, file: !4015, line: 93, baseType: !4404, size: 64, offset: 256)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4405, size: 64)
!4405 = !DISubroutineType(types: !4406)
!4406 = !{null, !4382}
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4390, file: !4015, line: 95, baseType: !4408, size: 64, offset: 320)
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4409, size: 64)
!4409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4410)
!4410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !4411, line: 278, size: 1472, elements: !4412)
!4411 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!4412 = !{!4413, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4425, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4433, !4434, !4435, !4436, !4437, !4438}
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4410, file: !4411, line: 279, baseType: !4414, size: 64)
!4414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4415, size: 64)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{!43, !4382}
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4410, file: !4411, line: 280, baseType: !4404, size: 64, offset: 64)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4410, file: !4411, line: 281, baseType: !4414, size: 64, offset: 128)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4410, file: !4411, line: 282, baseType: !4414, size: 64, offset: 192)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4410, file: !4411, line: 283, baseType: !4414, size: 64, offset: 256)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4410, file: !4411, line: 284, baseType: !4414, size: 64, offset: 320)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4410, file: !4411, line: 285, baseType: !4414, size: 64, offset: 384)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4410, file: !4411, line: 286, baseType: !4414, size: 64, offset: 448)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4410, file: !4411, line: 287, baseType: !4414, size: 64, offset: 512)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4410, file: !4411, line: 288, baseType: !4414, size: 64, offset: 576)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4410, file: !4411, line: 289, baseType: !4414, size: 64, offset: 640)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4410, file: !4411, line: 290, baseType: !4414, size: 64, offset: 704)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4410, file: !4411, line: 291, baseType: !4414, size: 64, offset: 768)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4410, file: !4411, line: 292, baseType: !4414, size: 64, offset: 832)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4410, file: !4411, line: 293, baseType: !4414, size: 64, offset: 896)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4410, file: !4411, line: 294, baseType: !4414, size: 64, offset: 960)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4410, file: !4411, line: 295, baseType: !4414, size: 64, offset: 1024)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4410, file: !4411, line: 296, baseType: !4414, size: 64, offset: 1088)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4410, file: !4411, line: 297, baseType: !4414, size: 64, offset: 1152)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4410, file: !4411, line: 298, baseType: !4414, size: 64, offset: 1216)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4410, file: !4411, line: 299, baseType: !4414, size: 64, offset: 1280)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4410, file: !4411, line: 300, baseType: !4414, size: 64, offset: 1344)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4410, file: !4411, line: 301, baseType: !4414, size: 64, offset: 1408)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4014, file: !4015, line: 470, baseType: !4440, size: 64, offset: 768)
!4440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4441, size: 64)
!4441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4442, line: 82, size: 1408, elements: !4443)
!4442 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4443 = !{!4444, !4445, !4446, !4447, !4448, !4449, !4450, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4519, !4520, !4521, !4522, !4526, !4529, !4530}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4441, file: !4442, line: 83, baseType: !303, size: 64)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4441, file: !4442, line: 84, baseType: !303, size: 64, offset: 64)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4441, file: !4442, line: 85, baseType: !4382, size: 64, offset: 128)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4441, file: !4442, line: 86, baseType: !4095, size: 64, offset: 192)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4441, file: !4442, line: 87, baseType: !4095, size: 64, offset: 256)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4441, file: !4442, line: 88, baseType: !4095, size: 64, offset: 320)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4441, file: !4442, line: 90, baseType: !4451, size: 64, offset: 384)
!4451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4452, size: 64)
!4452 = !DISubroutineType(types: !4453)
!4453 = !{!43, !4382, !4454}
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 64)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !4456, line: 95, size: 1152, elements: !4457)
!4456 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!4457 = !{!4458, !4459, !4460, !4461, !4462, !4463, !4469, !4479, !4490, !4491, !4492, !4493, !4494, !4502, !4503, !4504, !4505, !4506, !4507}
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4455, file: !4456, line: 96, baseType: !303, size: 64)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4455, file: !4456, line: 97, baseType: !4440, size: 64, offset: 64)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4455, file: !4456, line: 99, baseType: !858, size: 64, offset: 128)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4455, file: !4456, line: 100, baseType: !303, size: 64, offset: 192)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4455, file: !4456, line: 102, baseType: !546, size: 8, offset: 256)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4455, file: !4456, line: 103, baseType: !4464, size: 32, offset: 288)
!4464 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !4456, line: 44, baseType: !7, size: 32, elements: !4465)
!4465 = !{!4466, !4467, !4468}
!4466 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!4467 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!4468 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4455, file: !4456, line: 105, baseType: !4470, size: 64, offset: 320)
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!4471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4472)
!4472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4473, line: 262, size: 1600, elements: !4474)
!4473 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4474 = !{!4475, !4476, !4477, !4478}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4472, file: !4473, line: 263, baseType: !3972, size: 256)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4472, file: !4473, line: 264, baseType: !3972, size: 256, offset: 256)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4472, file: !4473, line: 265, baseType: !3201, size: 1024, offset: 512)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4472, file: !4473, line: 266, baseType: !2269, size: 64, offset: 1536)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4455, file: !4456, line: 106, baseType: !4480, size: 64, offset: 384)
!4480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4481, size: 64)
!4481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4482)
!4482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4473, line: 210, size: 256, elements: !4483)
!4483 = !{!4484, !4486, !4488, !4489}
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4482, file: !4473, line: 211, baseType: !4485, size: 72)
!4485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 72, elements: !2079)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4482, file: !4473, line: 212, baseType: !4487, size: 64, offset: 128)
!4487 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4473, line: 14, baseType: !323)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4482, file: !4473, line: 213, baseType: !474, size: 32, offset: 192)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4482, file: !4473, line: 214, baseType: !474, size: 32, offset: 224)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4455, file: !4456, line: 108, baseType: !4414, size: 64, offset: 448)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4455, file: !4456, line: 109, baseType: !4404, size: 64, offset: 512)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4455, file: !4456, line: 110, baseType: !4414, size: 64, offset: 576)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4455, file: !4456, line: 111, baseType: !4404, size: 64, offset: 640)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4455, file: !4456, line: 112, baseType: !4495, size: 64, offset: 704)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{!43, !4382, !4498}
!4498 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !4411, line: 52, baseType: !4499)
!4499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !4411, line: 50, size: 32, elements: !4500)
!4500 = !{!4501}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4499, file: !4411, line: 51, baseType: !43, size: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4455, file: !4456, line: 113, baseType: !4414, size: 64, offset: 768)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4455, file: !4456, line: 114, baseType: !4095, size: 64, offset: 832)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4455, file: !4456, line: 115, baseType: !4095, size: 64, offset: 896)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4455, file: !4456, line: 117, baseType: !4408, size: 64, offset: 960)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4455, file: !4456, line: 118, baseType: !4404, size: 64, offset: 1024)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4455, file: !4456, line: 120, baseType: !4508, size: 64, offset: 1088)
!4508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4509, size: 64)
!4509 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !4456, line: 120, flags: DIFlagFwdDecl)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4441, file: !4442, line: 91, baseType: !4395, size: 64, offset: 448)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4441, file: !4442, line: 92, baseType: !4414, size: 64, offset: 512)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4441, file: !4442, line: 93, baseType: !4404, size: 64, offset: 576)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4441, file: !4442, line: 94, baseType: !4414, size: 64, offset: 640)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4441, file: !4442, line: 95, baseType: !4404, size: 64, offset: 704)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4441, file: !4442, line: 97, baseType: !4414, size: 64, offset: 768)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4441, file: !4442, line: 98, baseType: !4414, size: 64, offset: 832)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4441, file: !4442, line: 100, baseType: !4495, size: 64, offset: 896)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4441, file: !4442, line: 101, baseType: !4414, size: 64, offset: 960)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4441, file: !4442, line: 103, baseType: !4414, size: 64, offset: 1024)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4441, file: !4442, line: 105, baseType: !4414, size: 64, offset: 1088)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4441, file: !4442, line: 107, baseType: !4408, size: 64, offset: 1152)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4441, file: !4442, line: 109, baseType: !4523, size: 64, offset: 1216)
!4523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4524, size: 64)
!4524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4525)
!4525 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4442, line: 109, flags: DIFlagFwdDecl)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4441, file: !4442, line: 111, baseType: !4527, size: 64, offset: 1280)
!4527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4528, size: 64)
!4528 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4442, line: 111, flags: DIFlagFwdDecl)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4441, file: !4442, line: 112, baseType: !867, offset: 1344)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4441, file: !4442, line: 114, baseType: !546, size: 8, offset: 1344)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4014, file: !4015, line: 471, baseType: !4454, size: 64, offset: 832)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !4014, file: !4015, line: 473, baseType: !576, size: 64, offset: 896)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4014, file: !4015, line: 475, baseType: !576, size: 64, offset: 960)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4014, file: !4015, line: 480, baseType: !960, size: 192, offset: 1024)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !4014, file: !4015, line: 484, baseType: !4536, size: 576, offset: 1216)
!4536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !4015, line: 361, size: 576, elements: !4537)
!4537 = !{!4538, !4539, !4540, !4541, !4542, !4543}
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4536, file: !4015, line: 362, baseType: !295, size: 128)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4536, file: !4015, line: 363, baseType: !295, size: 128, offset: 128)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4536, file: !4015, line: 364, baseType: !295, size: 128, offset: 256)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4536, file: !4015, line: 365, baseType: !295, size: 128, offset: 384)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4536, file: !4015, line: 366, baseType: !546, size: 8, offset: 512)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4536, file: !4015, line: 367, baseType: !4544, size: 32, offset: 544)
!4544 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !4015, line: 343, baseType: !7, size: 32, elements: !4545)
!4545 = !{!4546, !4547, !4548, !4549}
!4546 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!4547 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!4548 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!4549 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4014, file: !4015, line: 485, baseType: !4551, size: 2304, offset: 1792)
!4551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !4411, line: 565, size: 2304, elements: !4552)
!4552 = !{!4553, !4554, !4555, !4556, !4557, !4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4627, !4634, !4635, !4636, !4637, !4638, !4639, !4640, !4650, !4654}
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4551, file: !4411, line: 566, baseType: !4498, size: 32)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4551, file: !4411, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4551, file: !4411, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4551, file: !4411, line: 569, baseType: !546, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4551, file: !4411, line: 570, baseType: !546, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4551, file: !4411, line: 571, baseType: !546, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4551, file: !4411, line: 572, baseType: !546, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4551, file: !4411, line: 573, baseType: !546, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4551, file: !4411, line: 574, baseType: !546, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4551, file: !4411, line: 575, baseType: !546, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4551, file: !4411, line: 576, baseType: !546, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4551, file: !4411, line: 577, baseType: !713, size: 32, offset: 64)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4551, file: !4411, line: 578, baseType: !735, offset: 96)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4551, file: !4411, line: 580, baseType: !295, size: 128, offset: 128)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4551, file: !4411, line: 581, baseType: !1553, size: 192, offset: 256)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4551, file: !4411, line: 582, baseType: !4569, size: 64, offset: 448)
!4569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4570, size: 64)
!4570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4571, line: 43, size: 1472, elements: !4572)
!4571 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4572 = !{!4573, !4574, !4575, !4576, !4577, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594}
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4570, file: !4571, line: 44, baseType: !303, size: 64)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4570, file: !4571, line: 45, baseType: !43, size: 32, offset: 64)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4570, file: !4571, line: 46, baseType: !295, size: 128, offset: 128)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4570, file: !4571, line: 47, baseType: !735, offset: 256)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4570, file: !4571, line: 48, baseType: !4578, size: 64, offset: 256)
!4578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4579, size: 64)
!4579 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !4411, line: 533, flags: DIFlagFwdDecl)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4570, file: !4571, line: 49, baseType: !2246, size: 320, offset: 320)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4570, file: !4571, line: 50, baseType: !323, size: 64, offset: 640)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4570, file: !4571, line: 51, baseType: !1347, size: 64, offset: 704)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4570, file: !4571, line: 52, baseType: !1347, size: 64, offset: 768)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4570, file: !4571, line: 53, baseType: !1347, size: 64, offset: 832)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4570, file: !4571, line: 54, baseType: !1347, size: 64, offset: 896)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4570, file: !4571, line: 55, baseType: !1347, size: 64, offset: 960)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4570, file: !4571, line: 56, baseType: !323, size: 64, offset: 1024)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4570, file: !4571, line: 57, baseType: !323, size: 64, offset: 1088)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4570, file: !4571, line: 58, baseType: !323, size: 64, offset: 1152)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4570, file: !4571, line: 59, baseType: !323, size: 64, offset: 1216)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4570, file: !4571, line: 60, baseType: !323, size: 64, offset: 1280)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4570, file: !4571, line: 61, baseType: !4382, size: 64, offset: 1344)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4570, file: !4571, line: 62, baseType: !546, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4570, file: !4571, line: 63, baseType: !546, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4551, file: !4411, line: 583, baseType: !546, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4551, file: !4411, line: 584, baseType: !546, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4551, file: !4411, line: 585, baseType: !546, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4551, file: !4411, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4551, file: !4411, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4551, file: !4411, line: 592, baseType: !1339, size: 512, offset: 576)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4551, file: !4411, line: 593, baseType: !342, size: 64, offset: 1088)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4551, file: !4411, line: 594, baseType: !1813, size: 256, offset: 1152)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4551, file: !4411, line: 595, baseType: !1106, size: 128, offset: 1408)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4551, file: !4411, line: 596, baseType: !4578, size: 64, offset: 1536)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4551, file: !4411, line: 597, baseType: !394, size: 32, offset: 1600)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4551, file: !4411, line: 598, baseType: !394, size: 32, offset: 1632)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4551, file: !4411, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4551, file: !4411, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4551, file: !4411, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4551, file: !4411, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4551, file: !4411, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4551, file: !4411, line: 604, baseType: !546, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4551, file: !4411, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4551, file: !4411, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4551, file: !4411, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4551, file: !4411, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4551, file: !4411, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4551, file: !4411, line: 610, baseType: !7, size: 32, offset: 1696)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4551, file: !4411, line: 611, baseType: !4620, size: 32, offset: 1728)
!4620 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !4411, line: 524, baseType: !7, size: 32, elements: !4621)
!4621 = !{!4622, !4623, !4624, !4625, !4626}
!4622 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!4623 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!4624 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!4625 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!4626 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4551, file: !4411, line: 612, baseType: !4628, size: 32, offset: 1760)
!4628 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !4411, line: 502, baseType: !7, size: 32, elements: !4629)
!4629 = !{!4630, !4631, !4632, !4633}
!4630 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!4631 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!4632 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!4633 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4551, file: !4411, line: 613, baseType: !43, size: 32, offset: 1792)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4551, file: !4411, line: 614, baseType: !43, size: 32, offset: 1824)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4551, file: !4411, line: 615, baseType: !342, size: 64, offset: 1856)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4551, file: !4411, line: 616, baseType: !342, size: 64, offset: 1920)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4551, file: !4411, line: 617, baseType: !342, size: 64, offset: 1984)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4551, file: !4411, line: 618, baseType: !342, size: 64, offset: 2048)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4551, file: !4411, line: 620, baseType: !4641, size: 64, offset: 2112)
!4641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4642, size: 64)
!4642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !4411, line: 536, size: 256, elements: !4643)
!4643 = !{!4644, !4645, !4646, !4647}
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4642, file: !4411, line: 537, baseType: !735)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4642, file: !4411, line: 538, baseType: !7, size: 32)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4642, file: !4411, line: 540, baseType: !295, size: 128, offset: 64)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4642, file: !4411, line: 543, baseType: !4648, size: 64, offset: 192)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4649 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !4411, line: 534, flags: DIFlagFwdDecl)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4551, file: !4411, line: 621, baseType: !4651, size: 64, offset: 2176)
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = !DISubroutineType(types: !4653)
!4653 = !{null, !4382, !1495}
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4551, file: !4411, line: 622, baseType: !4655, size: 64, offset: 2240)
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4656, size: 64)
!4656 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !4411, line: 622, flags: DIFlagFwdDecl)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !4014, file: !4015, line: 486, baseType: !4658, size: 64, offset: 4096)
!4658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4659, size: 64)
!4659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !4411, line: 642, size: 1792, elements: !4660)
!4660 = !{!4661, !4662, !4663, !4667, !4668, !4669}
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4659, file: !4411, line: 643, baseType: !4410, size: 1472)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4659, file: !4411, line: 644, baseType: !4414, size: 64, offset: 1472)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4659, file: !4411, line: 645, baseType: !4664, size: 64, offset: 1536)
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4665, size: 64)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{null, !4382, !546}
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4659, file: !4411, line: 646, baseType: !4414, size: 64, offset: 1600)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4659, file: !4411, line: 647, baseType: !4404, size: 64, offset: 1664)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4659, file: !4411, line: 648, baseType: !4404, size: 64, offset: 1728)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !4014, file: !4015, line: 493, baseType: !4671, size: 64, offset: 4160)
!4671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4672, size: 64)
!4672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !4673, line: 162, size: 1088, elements: !4674)
!4673 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!4674 = !{!4675, !4676, !4677, !5029, !5030, !5031, !5032, !5033, !5034, !5168, !5169, !5170, !5171, !5172, !5173, !5174}
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4672, file: !4673, line: 163, baseType: !295, size: 128)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4672, file: !4673, line: 164, baseType: !303, size: 64, offset: 128)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4672, file: !4673, line: 165, baseType: !4678, size: 64, offset: 192)
!4678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4679, size: 64)
!4679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4680)
!4680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !4673, line: 105, size: 640, elements: !4681)
!4681 = !{!4682, !4813, !4824, !4829, !4833, !4839, !4843, !4847, !5021, !5025}
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4680, file: !4673, line: 106, baseType: !4683, size: 64)
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4684, size: 64)
!4684 = !DISubroutineType(types: !4685)
!4685 = !{!43, !4671, !4686, !4800}
!4686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4688, line: 51, size: 1344, elements: !4689)
!4688 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!4689 = !{!4690, !4691, !4693, !4694, !4784, !4793, !4794, !4795, !4796, !4797, !4798, !4799}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4687, file: !4688, line: 52, baseType: !303, size: 64)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !4687, file: !4688, line: 53, baseType: !4692, size: 32, offset: 64)
!4692 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !4688, line: 28, baseType: !713)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !4687, file: !4688, line: 54, baseType: !303, size: 64, offset: 128)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4687, file: !4688, line: 55, baseType: !4695, size: 192, offset: 192)
!4695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4696, line: 17, size: 192, elements: !4697)
!4696 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4697 = !{!4698, !4700, !4783}
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4695, file: !4696, line: 18, baseType: !4699, size: 64)
!4699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4695, size: 64)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4695, file: !4696, line: 19, baseType: !4701, size: 64, offset: 64)
!4701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4702, size: 64)
!4702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4703)
!4703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4696, line: 110, size: 1152, elements: !4704)
!4704 = !{!4705, !4709, !4713, !4719, !4725, !4729, !4733, !4738, !4742, !4743, !4747, !4751, !4755, !4766, !4767, !4768, !4769, !4779}
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4703, file: !4696, line: 111, baseType: !4706, size: 64)
!4706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4707, size: 64)
!4707 = !DISubroutineType(types: !4708)
!4708 = !{!4699, !4699}
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4703, file: !4696, line: 112, baseType: !4710, size: 64, offset: 64)
!4710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4711, size: 64)
!4711 = !DISubroutineType(types: !4712)
!4712 = !{null, !4699}
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4703, file: !4696, line: 113, baseType: !4714, size: 64, offset: 128)
!4714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4715, size: 64)
!4715 = !DISubroutineType(types: !4716)
!4716 = !{!546, !4717}
!4717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4718, size: 64)
!4718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4695)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4703, file: !4696, line: 114, baseType: !4720, size: 64, offset: 192)
!4720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4721, size: 64)
!4721 = !DISubroutineType(types: !4722)
!4722 = !{!2269, !4717, !4723}
!4723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4724, size: 64)
!4724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4014)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4703, file: !4696, line: 116, baseType: !4726, size: 64, offset: 256)
!4726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4727, size: 64)
!4727 = !DISubroutineType(types: !4728)
!4728 = !{!546, !4717, !303}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4703, file: !4696, line: 118, baseType: !4730, size: 64, offset: 320)
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4731, size: 64)
!4731 = !DISubroutineType(types: !4732)
!4732 = !{!43, !4717, !303, !7, !576, !600}
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4703, file: !4696, line: 123, baseType: !4734, size: 64, offset: 384)
!4734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4735, size: 64)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{!43, !4717, !303, !4737, !600}
!4737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4703, file: !4696, line: 126, baseType: !4739, size: 64, offset: 448)
!4739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4740, size: 64)
!4740 = !DISubroutineType(types: !4741)
!4741 = !{!303, !4717}
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4703, file: !4696, line: 127, baseType: !4739, size: 64, offset: 512)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4703, file: !4696, line: 128, baseType: !4744, size: 64, offset: 576)
!4744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4745, size: 64)
!4745 = !DISubroutineType(types: !4746)
!4746 = !{!4699, !4717}
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4703, file: !4696, line: 130, baseType: !4748, size: 64, offset: 640)
!4748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4749, size: 64)
!4749 = !DISubroutineType(types: !4750)
!4750 = !{!4699, !4717, !4699}
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4703, file: !4696, line: 133, baseType: !4752, size: 64, offset: 704)
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4753 = !DISubroutineType(types: !4754)
!4754 = !{!4699, !4717, !303}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4703, file: !4696, line: 135, baseType: !4756, size: 64, offset: 768)
!4756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4757, size: 64)
!4757 = !DISubroutineType(types: !4758)
!4758 = !{!43, !4717, !303, !303, !7, !7, !4759}
!4759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4760, size: 64)
!4760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4696, line: 43, size: 640, elements: !4761)
!4761 = !{!4762, !4763, !4764}
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4760, file: !4696, line: 44, baseType: !4699, size: 64)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4760, file: !4696, line: 45, baseType: !7, size: 32, offset: 64)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4760, file: !4696, line: 46, baseType: !4765, size: 512, offset: 128)
!4765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 512, elements: !1377)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4703, file: !4696, line: 140, baseType: !4748, size: 64, offset: 832)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4703, file: !4696, line: 143, baseType: !4744, size: 64, offset: 896)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4703, file: !4696, line: 145, baseType: !4706, size: 64, offset: 960)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4703, file: !4696, line: 146, baseType: !4770, size: 64, offset: 1024)
!4770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4771, size: 64)
!4771 = !DISubroutineType(types: !4772)
!4772 = !{!43, !4717, !4773}
!4773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4774, size: 64)
!4774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4696, line: 29, size: 128, elements: !4775)
!4775 = !{!4776, !4777, !4778}
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4774, file: !4696, line: 30, baseType: !7, size: 32)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4774, file: !4696, line: 31, baseType: !7, size: 32, offset: 32)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4774, file: !4696, line: 32, baseType: !4717, size: 64, offset: 64)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4703, file: !4696, line: 148, baseType: !4780, size: 64, offset: 1088)
!4780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4781, size: 64)
!4781 = !DISubroutineType(types: !4782)
!4782 = !{!43, !4717, !4382}
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4695, file: !4696, line: 20, baseType: !4382, size: 64, offset: 128)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4687, file: !4688, line: 57, baseType: !4785, size: 64, offset: 384)
!4785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4786, size: 64)
!4786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !4688, line: 31, size: 704, elements: !4787)
!4787 = !{!4788, !4789, !4790, !4791, !4792}
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4786, file: !4688, line: 32, baseType: !583, size: 64)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4786, file: !4688, line: 33, baseType: !43, size: 32, offset: 64)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4786, file: !4688, line: 34, baseType: !576, size: 64, offset: 128)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4786, file: !4688, line: 35, baseType: !4785, size: 64, offset: 192)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4786, file: !4688, line: 43, baseType: !4110, size: 448, offset: 256)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !4687, file: !4688, line: 58, baseType: !4785, size: 64, offset: 448)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4687, file: !4688, line: 59, baseType: !4686, size: 64, offset: 512)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4687, file: !4688, line: 60, baseType: !4686, size: 64, offset: 576)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4687, file: !4688, line: 61, baseType: !4686, size: 64, offset: 640)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4687, file: !4688, line: 63, baseType: !4018, size: 512, offset: 704)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4687, file: !4688, line: 65, baseType: !323, size: 64, offset: 1216)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4687, file: !4688, line: 66, baseType: !576, size: 64, offset: 1280)
!4800 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !4673, line: 76, baseType: !7, size: 32, elements: !4801)
!4801 = !{!4802, !4803, !4804, !4805, !4806, !4807, !4808, !4809, !4810, !4811, !4812}
!4802 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!4803 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!4804 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!4805 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!4806 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!4807 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!4808 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!4809 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!4810 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!4811 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!4812 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4680, file: !4673, line: 108, baseType: !4814, size: 64, offset: 64)
!4814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4815, size: 64)
!4815 = !DISubroutineType(types: !4816)
!4816 = !{!43, !4671, !4817, !4800}
!4817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4818, size: 64)
!4818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !4673, line: 63, size: 640, elements: !4819)
!4819 = !{!4820, !4821, !4822}
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4818, file: !4673, line: 64, baseType: !4699, size: 64)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !4818, file: !4673, line: 65, baseType: !43, size: 32, offset: 64)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4818, file: !4673, line: 66, baseType: !4823, size: 512, offset: 96)
!4823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 512, elements: !280)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4680, file: !4673, line: 110, baseType: !4825, size: 64, offset: 128)
!4825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4826, size: 64)
!4826 = !DISubroutineType(types: !4827)
!4827 = !{!43, !4671, !7, !4828}
!4828 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !288, line: 164, baseType: !323)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4680, file: !4673, line: 111, baseType: !4830, size: 64, offset: 192)
!4830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4831, size: 64)
!4831 = !DISubroutineType(types: !4832)
!4832 = !{null, !4671, !7}
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !4680, file: !4673, line: 112, baseType: !4834, size: 64, offset: 256)
!4834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 64)
!4835 = !DISubroutineType(types: !4836)
!4836 = !{!43, !4671, !4686, !4837, !7, !2593, !4838}
!4837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!4838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4680, file: !4673, line: 117, baseType: !4840, size: 64, offset: 320)
!4840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4841, size: 64)
!4841 = !DISubroutineType(types: !4842)
!4842 = !{!43, !4671, !7, !7, !576}
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4680, file: !4673, line: 119, baseType: !4844, size: 64, offset: 384)
!4844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4845, size: 64)
!4845 = !DISubroutineType(types: !4846)
!4846 = !{null, !4671, !7, !7}
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4680, file: !4673, line: 121, baseType: !4848, size: 64, offset: 448)
!4848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4849, size: 64)
!4849 = !DISubroutineType(types: !4850)
!4850 = !{!43, !4671, !4851, !546}
!4851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4852, size: 64)
!4852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !4853, line: 175, size: 448, elements: !4854)
!4853 = !DIFile(filename: "./include/linux/irq.h", directory: "/home/lizy2001/genbc/linux")
!4854 = !{!4855, !4856, !4857, !4858, !4932, !5018, !5019, !5020}
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4852, file: !4853, line: 176, baseType: !713, size: 32)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4852, file: !4853, line: 177, baseType: !7, size: 32, offset: 32)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq", scope: !4852, file: !4853, line: 178, baseType: !323, size: 64, offset: 64)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !4852, file: !4853, line: 179, baseType: !4859, size: 64, offset: 128)
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 64)
!4860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_common_data", file: !4853, line: 145, size: 256, elements: !4861)
!4861 = !{!4862, !4863, !4864, !4929}
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "state_use_accessors", scope: !4860, file: !4853, line: 146, baseType: !7, size: 32)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !4860, file: !4853, line: 150, baseType: !576, size: 64, offset: 64)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "msi_desc", scope: !4860, file: !4853, line: 151, baseType: !4865, size: 64, offset: 128)
!4865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4866, size: 64)
!4866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !4867, line: 85, size: 768, elements: !4868)
!4867 = !DIFile(filename: "./include/linux/msi.h", directory: "/home/lizy2001/genbc/linux")
!4868 = !{!4869, !4870, !4871, !4872, !4873, !4879, !4886, !4890, !4891}
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4866, file: !4867, line: 87, baseType: !295, size: 128)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4866, file: !4867, line: 88, baseType: !7, size: 32, offset: 128)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "nvec_used", scope: !4866, file: !4867, line: 89, baseType: !7, size: 32, offset: 160)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4866, file: !4867, line: 90, baseType: !4382, size: 64, offset: 192)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !4866, file: !4867, line: 91, baseType: !4874, size: 96, offset: 256)
!4874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msi_msg", file: !4867, line: 8, size: 96, elements: !4875)
!4875 = !{!4876, !4877, !4878}
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "address_lo", scope: !4874, file: !4867, line: 9, baseType: !713, size: 32)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "address_hi", scope: !4874, file: !4867, line: 10, baseType: !713, size: 32, offset: 32)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4874, file: !4867, line: 11, baseType: !713, size: 32, offset: 64)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !4866, file: !4867, line: 92, baseType: !4880, size: 64, offset: 384)
!4880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4881, size: 64)
!4881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_affinity_desc", file: !4882, line: 308, size: 128, elements: !4883)
!4882 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!4883 = !{!4884, !4885}
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4881, file: !4882, line: 309, baseType: !1418, size: 64)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !4881, file: !4882, line: 310, baseType: !7, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "write_msi_msg", scope: !4866, file: !4867, line: 97, baseType: !4887, size: 64, offset: 448)
!4887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4888, size: 64)
!4888 = !DISubroutineType(types: !4889)
!4889 = !{null, !4865, !576}
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "write_msi_msg_data", scope: !4866, file: !4867, line: 98, baseType: !576, size: 64, offset: 512)
!4891 = !DIDerivedType(tag: DW_TAG_member, scope: !4866, file: !4867, line: 100, baseType: !4892, size: 192, offset: 576)
!4892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4866, file: !4867, line: 100, size: 192, elements: !4893)
!4893 = !{!4894, !4914, !4921, !4925}
!4894 = !DIDerivedType(tag: DW_TAG_member, scope: !4892, file: !4867, line: 102, baseType: !4895, size: 192)
!4895 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4892, file: !4867, line: 102, size: 192, elements: !4896)
!4896 = !{!4897, !4898, !4909}
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "masked", scope: !4895, file: !4867, line: 103, baseType: !713, size: 32)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "msi_attrib", scope: !4895, file: !4867, line: 113, baseType: !4899, size: 64, offset: 32)
!4899 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4895, file: !4867, line: 104, size: 64, elements: !4900)
!4900 = !{!4901, !4902, !4903, !4904, !4905, !4906, !4907, !4908}
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "is_msix", scope: !4899, file: !4867, line: 105, baseType: !1403, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "multiple", scope: !4899, file: !4867, line: 106, baseType: !1403, size: 3, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "multi_cap", scope: !4899, file: !4867, line: 107, baseType: !1403, size: 3, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "maskbit", scope: !4899, file: !4867, line: 108, baseType: !1403, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "is_64", scope: !4899, file: !4867, line: 109, baseType: !1403, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtual", scope: !4899, file: !4867, line: 110, baseType: !1403, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "entry_nr", scope: !4899, file: !4867, line: 111, baseType: !1044, size: 16, offset: 16)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "default_irq", scope: !4899, file: !4867, line: 112, baseType: !7, size: 32, offset: 32)
!4909 = !DIDerivedType(tag: DW_TAG_member, scope: !4895, file: !4867, line: 114, baseType: !4910, size: 64, offset: 128)
!4910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4895, file: !4867, line: 114, size: 64, elements: !4911)
!4911 = !{!4912, !4913}
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pos", scope: !4910, file: !4867, line: 115, baseType: !1403, size: 8)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "mask_base", scope: !4910, file: !4867, line: 116, baseType: !576, size: 64)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "platform", scope: !4892, file: !4867, line: 127, baseType: !4915, size: 128)
!4915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "platform_msi_desc", file: !4867, line: 37, size: 128, elements: !4916)
!4916 = !{!4917, !4920}
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "msi_priv_data", scope: !4915, file: !4867, line: 38, baseType: !4918, size: 64)
!4918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4919, size: 64)
!4919 = !DICompositeType(tag: DW_TAG_structure_type, name: "platform_msi_priv_data", file: !4867, line: 19, flags: DIFlagFwdDecl)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "msi_index", scope: !4915, file: !4867, line: 39, baseType: !1044, size: 16, offset: 64)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "fsl_mc", scope: !4892, file: !4867, line: 128, baseType: !4922, size: 16)
!4922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fsl_mc_msi_desc", file: !4867, line: 46, size: 16, elements: !4923)
!4923 = !{!4924}
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "msi_index", scope: !4922, file: !4867, line: 47, baseType: !1044, size: 16)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "inta", scope: !4892, file: !4867, line: 129, baseType: !4926, size: 16)
!4926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ti_sci_inta_msi_desc", file: !4867, line: 54, size: 16, elements: !4927)
!4927 = !{!4928}
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index", scope: !4926, file: !4867, line: 55, baseType: !1044, size: 16)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !4860, file: !4853, line: 152, baseType: !4930, size: 64, offset: 192)
!4930 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1417, line: 756, baseType: !4931)
!4931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1418, size: 64, elements: !1422)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !4852, file: !4853, line: 180, baseType: !4933, size: 64, offset: 192)
!4933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4934, size: 64)
!4934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip", file: !4853, line: 503, size: 2304, elements: !4935)
!4935 = !{!4936, !4937, !4938, !4942, !4946, !4947, !4948, !4949, !4950, !4951, !4952, !4953, !4959, !4963, !4967, !4968, !4969, !4970, !4971, !4972, !4973, !4974, !4975, !4976, !4980, !4981, !4982, !4987, !4988, !4999, !5003, !5007, !5011, !5015, !5016, !5017}
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "parent_device", scope: !4934, file: !4853, line: 504, baseType: !4382, size: 64)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4934, file: !4853, line: 505, baseType: !303, size: 64, offset: 64)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "irq_startup", scope: !4934, file: !4853, line: 506, baseType: !4939, size: 64, offset: 128)
!4939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4940, size: 64)
!4940 = !DISubroutineType(types: !4941)
!4941 = !{!7, !4851}
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "irq_shutdown", scope: !4934, file: !4853, line: 507, baseType: !4943, size: 64, offset: 192)
!4943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4944, size: 64)
!4944 = !DISubroutineType(types: !4945)
!4945 = !{null, !4851}
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable", scope: !4934, file: !4853, line: 508, baseType: !4943, size: 64, offset: 256)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "irq_disable", scope: !4934, file: !4853, line: 509, baseType: !4943, size: 64, offset: 320)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "irq_ack", scope: !4934, file: !4853, line: 511, baseType: !4943, size: 64, offset: 384)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask", scope: !4934, file: !4853, line: 512, baseType: !4943, size: 64, offset: 448)
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask_ack", scope: !4934, file: !4853, line: 513, baseType: !4943, size: 64, offset: 512)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "irq_unmask", scope: !4934, file: !4853, line: 514, baseType: !4943, size: 64, offset: 576)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "irq_eoi", scope: !4934, file: !4853, line: 515, baseType: !4943, size: 64, offset: 640)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_affinity", scope: !4934, file: !4853, line: 517, baseType: !4954, size: 64, offset: 704)
!4954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4955, size: 64)
!4955 = !DISubroutineType(types: !4956)
!4956 = !{!43, !4851, !4957, !546}
!4957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4958, size: 64)
!4958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1418)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "irq_retrigger", scope: !4934, file: !4853, line: 518, baseType: !4960, size: 64, offset: 768)
!4960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4961, size: 64)
!4961 = !DISubroutineType(types: !4962)
!4962 = !{!43, !4851}
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_type", scope: !4934, file: !4853, line: 519, baseType: !4964, size: 64, offset: 832)
!4964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4965, size: 64)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{!43, !4851, !7}
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_wake", scope: !4934, file: !4853, line: 520, baseType: !4964, size: 64, offset: 896)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_lock", scope: !4934, file: !4853, line: 522, baseType: !4943, size: 64, offset: 960)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_sync_unlock", scope: !4934, file: !4853, line: 523, baseType: !4943, size: 64, offset: 1024)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_online", scope: !4934, file: !4853, line: 525, baseType: !4943, size: 64, offset: 1088)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_offline", scope: !4934, file: !4853, line: 526, baseType: !4943, size: 64, offset: 1152)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "irq_suspend", scope: !4934, file: !4853, line: 528, baseType: !4943, size: 64, offset: 1216)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "irq_resume", scope: !4934, file: !4853, line: 529, baseType: !4943, size: 64, offset: 1280)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pm_shutdown", scope: !4934, file: !4853, line: 530, baseType: !4943, size: 64, offset: 1344)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "irq_calc_mask", scope: !4934, file: !4853, line: 532, baseType: !4943, size: 64, offset: 1408)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "irq_print_chip", scope: !4934, file: !4853, line: 534, baseType: !4977, size: 64, offset: 1472)
!4977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4978, size: 64)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{null, !4851, !948}
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "irq_request_resources", scope: !4934, file: !4853, line: 535, baseType: !4960, size: 64, offset: 1536)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "irq_release_resources", scope: !4934, file: !4853, line: 536, baseType: !4943, size: 64, offset: 1600)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "irq_compose_msi_msg", scope: !4934, file: !4853, line: 538, baseType: !4983, size: 64, offset: 1664)
!4983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4984, size: 64)
!4984 = !DISubroutineType(types: !4985)
!4985 = !{null, !4851, !4986}
!4986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4874, size: 64)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "irq_write_msi_msg", scope: !4934, file: !4853, line: 539, baseType: !4983, size: 64, offset: 1728)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "irq_get_irqchip_state", scope: !4934, file: !4853, line: 541, baseType: !4989, size: 64, offset: 1792)
!4989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4990, size: 64)
!4990 = !DISubroutineType(types: !4991)
!4991 = !{!43, !4851, !4992, !4998}
!4992 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqchip_irq_state", file: !4882, line: 478, baseType: !7, size: 32, elements: !4993)
!4993 = !{!4994, !4995, !4996, !4997}
!4994 = !DIEnumerator(name: "IRQCHIP_STATE_PENDING", value: 0, isUnsigned: true)
!4995 = !DIEnumerator(name: "IRQCHIP_STATE_ACTIVE", value: 1, isUnsigned: true)
!4996 = !DIEnumerator(name: "IRQCHIP_STATE_MASKED", value: 2, isUnsigned: true)
!4997 = !DIEnumerator(name: "IRQCHIP_STATE_LINE_LEVEL", value: 3, isUnsigned: true)
!4998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_irqchip_state", scope: !4934, file: !4853, line: 542, baseType: !5000, size: 64, offset: 1856)
!5000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5001, size: 64)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{!43, !4851, !4992, !546}
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_vcpu_affinity", scope: !4934, file: !4853, line: 544, baseType: !5004, size: 64, offset: 1920)
!5004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5005, size: 64)
!5005 = !DISubroutineType(types: !5006)
!5006 = !{!43, !4851, !576}
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_single", scope: !4934, file: !4853, line: 546, baseType: !5008, size: 64, offset: 1984)
!5008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5009, size: 64)
!5009 = !DISubroutineType(types: !5010)
!5010 = !{null, !4851, !7}
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_mask", scope: !4934, file: !4853, line: 547, baseType: !5012, size: 64, offset: 2048)
!5012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5013, size: 64)
!5013 = !DISubroutineType(types: !5014)
!5014 = !{null, !4851, !4957}
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_setup", scope: !4934, file: !4853, line: 549, baseType: !4960, size: 64, offset: 2112)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_teardown", scope: !4934, file: !4853, line: 550, baseType: !4943, size: 64, offset: 2176)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4934, file: !4853, line: 552, baseType: !323, size: 64, offset: 2240)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !4852, file: !4853, line: 181, baseType: !4671, size: 64, offset: 256)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "parent_data", scope: !4852, file: !4853, line: 183, baseType: !4851, size: 64, offset: 320)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "chip_data", scope: !4852, file: !4853, line: 185, baseType: !576, size: 64, offset: 384)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !4680, file: !4673, line: 122, baseType: !5022, size: 64, offset: 512)
!5022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5023, size: 64)
!5023 = !DISubroutineType(types: !5024)
!5024 = !{null, !4671, !4851}
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !4680, file: !4673, line: 123, baseType: !5026, size: 64, offset: 576)
!5026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5027, size: 64)
!5027 = !DISubroutineType(types: !5028)
!5028 = !{!43, !4671, !4817, !2593, !4838}
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !4672, file: !4673, line: 166, baseType: !576, size: 64, offset: 256)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4672, file: !4673, line: 167, baseType: !7, size: 32, offset: 320)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !4672, file: !4673, line: 168, baseType: !7, size: 32, offset: 352)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4672, file: !4673, line: 171, baseType: !4699, size: 64, offset: 384)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !4672, file: !4673, line: 172, baseType: !4800, size: 32, offset: 448)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !4672, file: !4673, line: 173, baseType: !5035, size: 64, offset: 512)
!5035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5036, size: 64)
!5036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !4853, line: 1101, size: 192, elements: !5037)
!5037 = !{!5038, !5039, !5040, !5041, !5042, !5050}
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_per_chip", scope: !5036, file: !4853, line: 1102, baseType: !7, size: 32)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "num_chips", scope: !5036, file: !4853, line: 1103, baseType: !7, size: 32, offset: 32)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_clear", scope: !5036, file: !4853, line: 1104, baseType: !7, size: 32, offset: 64)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_set", scope: !5036, file: !4853, line: 1105, baseType: !7, size: 32, offset: 96)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "gc_flags", scope: !5036, file: !4853, line: 1106, baseType: !5043, size: 32, offset: 128)
!5043 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_gc_flags", file: !4853, line: 1084, baseType: !7, size: 32, elements: !5044)
!5044 = !{!5045, !5046, !5047, !5048, !5049}
!5045 = !DIEnumerator(name: "IRQ_GC_INIT_MASK_CACHE", value: 1, isUnsigned: true)
!5046 = !DIEnumerator(name: "IRQ_GC_INIT_NESTED_LOCK", value: 2, isUnsigned: true)
!5047 = !DIEnumerator(name: "IRQ_GC_MASK_CACHE_PER_TYPE", value: 4, isUnsigned: true)
!5048 = !DIEnumerator(name: "IRQ_GC_NO_MASK", value: 8, isUnsigned: true)
!5049 = !DIEnumerator(name: "IRQ_GC_BE_IO", value: 16, isUnsigned: true)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !5036, file: !4853, line: 1107, baseType: !5051, offset: 192)
!5051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5052, elements: !320)
!5052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5053, size: 64)
!5053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_generic", file: !4853, line: 1051, size: 960, elements: !5054)
!5054 = !{!5055, !5056, !5057, !5058, !5062, !5066, !5067, !5068, !5069, !5070, !5071, !5072, !5073, !5074, !5075, !5076, !5077, !5078, !5079, !5080}
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5053, file: !4853, line: 1052, baseType: !1174)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "reg_base", scope: !5053, file: !4853, line: 1053, baseType: !576, size: 64)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "reg_readl", scope: !5053, file: !4853, line: 1054, baseType: !3517, size: 64, offset: 64)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "reg_writel", scope: !5053, file: !4853, line: 1055, baseType: !5059, size: 64, offset: 128)
!5059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5060, size: 64)
!5060 = !DISubroutineType(types: !5061)
!5061 = !{null, !713, !576}
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5053, file: !4853, line: 1056, baseType: !5063, size: 64, offset: 192)
!5063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5064, size: 64)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{null, !5052}
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5053, file: !4853, line: 1057, baseType: !5063, size: 64, offset: 256)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "irq_base", scope: !5053, file: !4853, line: 1058, baseType: !7, size: 32, offset: 320)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cnt", scope: !5053, file: !4853, line: 1059, baseType: !7, size: 32, offset: 352)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !5053, file: !4853, line: 1060, baseType: !713, size: 32, offset: 384)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "type_cache", scope: !5053, file: !4853, line: 1061, baseType: !713, size: 32, offset: 416)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "polarity_cache", scope: !5053, file: !4853, line: 1062, baseType: !713, size: 32, offset: 448)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "wake_enabled", scope: !5053, file: !4853, line: 1063, baseType: !713, size: 32, offset: 480)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "wake_active", scope: !5053, file: !4853, line: 1064, baseType: !713, size: 32, offset: 512)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "num_ct", scope: !5053, file: !4853, line: 1065, baseType: !7, size: 32, offset: 544)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !5053, file: !4853, line: 1066, baseType: !576, size: 64, offset: 576)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "installed", scope: !5053, file: !4853, line: 1067, baseType: !323, size: 64, offset: 640)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !5053, file: !4853, line: 1068, baseType: !323, size: 64, offset: 704)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !5053, file: !4853, line: 1069, baseType: !4671, size: 64, offset: 768)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5053, file: !4853, line: 1070, baseType: !295, size: 128, offset: 832)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "chip_types", scope: !5053, file: !4853, line: 1071, baseType: !5081, offset: 960)
!5081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5082, elements: !320)
!5082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_type", file: !4853, line: 1009, size: 2944, elements: !5083)
!5083 = !{!5084, !5085, !5095, !5165, !5166, !5167}
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !5082, file: !4853, line: 1010, baseType: !4934, size: 2304)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5082, file: !4853, line: 1011, baseType: !5086, size: 448, offset: 2304)
!5086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_regs", file: !4853, line: 986, size: 448, elements: !5087)
!5087 = !{!5088, !5089, !5090, !5091, !5092, !5093, !5094}
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !5086, file: !4853, line: 987, baseType: !323, size: 64)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !5086, file: !4853, line: 988, baseType: !323, size: 64, offset: 64)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !5086, file: !4853, line: 989, baseType: !323, size: 64, offset: 128)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !5086, file: !4853, line: 990, baseType: !323, size: 64, offset: 192)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "eoi", scope: !5086, file: !4853, line: 991, baseType: !323, size: 64, offset: 256)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5086, file: !4853, line: 992, baseType: !323, size: 64, offset: 320)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !5086, file: !4853, line: 993, baseType: !323, size: 64, offset: 384)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5082, file: !4853, line: 1012, baseType: !5096, size: 64, offset: 2752)
!5096 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_flow_handler_t", file: !5097, line: 12, baseType: !5098)
!5097 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!5098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5099, size: 64)
!5099 = !DISubroutineType(types: !5100)
!5100 = !{null, !5101}
!5101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5102, size: 64)
!5102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_desc", file: !5103, line: 55, size: 2880, elements: !5104)
!5103 = !DIFile(filename: "./include/linux/irqdesc.h", directory: "/home/lizy2001/genbc/linux")
!5104 = !{!5105, !5106, !5107, !5108, !5109, !5137, !5138, !5139, !5140, !5141, !5142, !5143, !5144, !5145, !5146, !5147, !5148, !5150, !5151, !5152, !5153, !5154, !5155, !5156, !5157, !5158, !5159, !5160, !5161, !5162, !5163, !5164}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "irq_common_data", scope: !5102, file: !5103, line: 56, baseType: !4860, size: 256)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "irq_data", scope: !5102, file: !5103, line: 57, baseType: !4852, size: 448, offset: 256)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "kstat_irqs", scope: !5102, file: !5103, line: 58, baseType: !4838, size: 64, offset: 704)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "handle_irq", scope: !5102, file: !5103, line: 59, baseType: !5096, size: 64, offset: 768)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !5102, file: !5103, line: 60, baseType: !5110, size: 64, offset: 832)
!5110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5111, size: 64)
!5111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irqaction", file: !4882, line: 110, size: 768, elements: !5112)
!5112 = !{!5113, !5125, !5126, !5127, !5128, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136}
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5111, file: !4882, line: 111, baseType: !5114, size: 64)
!5114 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !4882, line: 92, baseType: !5115)
!5115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5116, size: 64)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{!5118, !43, !576}
!5118 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !5119, line: 17, baseType: !5120)
!5119 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!5120 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !5119, line: 11, baseType: !7, size: 32, elements: !5121)
!5121 = !{!5122, !5123, !5124}
!5122 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!5123 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!5124 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !5111, file: !4882, line: 112, baseType: !576, size: 64, offset: 64)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_dev_id", scope: !5111, file: !4882, line: 113, baseType: !576, size: 64, offset: 128)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5111, file: !4882, line: 114, baseType: !5110, size: 64, offset: 192)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "thread_fn", scope: !5111, file: !4882, line: 115, baseType: !5114, size: 64, offset: 256)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !5111, file: !4882, line: 116, baseType: !1263, size: 64, offset: 320)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !5111, file: !4882, line: 117, baseType: !5110, size: 64, offset: 384)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5111, file: !4882, line: 118, baseType: !7, size: 32, offset: 448)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5111, file: !4882, line: 119, baseType: !7, size: 32, offset: 480)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "thread_flags", scope: !5111, file: !4882, line: 120, baseType: !323, size: 64, offset: 512)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "thread_mask", scope: !5111, file: !4882, line: 121, baseType: !323, size: 64, offset: 576)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5111, file: !4882, line: 122, baseType: !303, size: 64, offset: 640)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !5111, file: !4882, line: 123, baseType: !2003, size: 64, offset: 704)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "status_use_accessors", scope: !5102, file: !5103, line: 61, baseType: !7, size: 32, offset: 896)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "core_internal_state__do_not_mess_with_it", scope: !5102, file: !5103, line: 62, baseType: !7, size: 32, offset: 928)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !5102, file: !5103, line: 63, baseType: !7, size: 32, offset: 960)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "wake_depth", scope: !5102, file: !5103, line: 64, baseType: !7, size: 32, offset: 992)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "tot_count", scope: !5102, file: !5103, line: 65, baseType: !7, size: 32, offset: 1024)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "irq_count", scope: !5102, file: !5103, line: 66, baseType: !7, size: 32, offset: 1056)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "last_unhandled", scope: !5102, file: !5103, line: 67, baseType: !323, size: 64, offset: 1088)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_unhandled", scope: !5102, file: !5103, line: 68, baseType: !7, size: 32, offset: 1152)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled", scope: !5102, file: !5103, line: 69, baseType: !394, size: 32, offset: 1184)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled_last", scope: !5102, file: !5103, line: 70, baseType: !43, size: 32, offset: 1216)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5102, file: !5103, line: 71, baseType: !1174, offset: 1248)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_enabled", scope: !5102, file: !5103, line: 72, baseType: !5149, size: 64, offset: 1280)
!5149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_affinity", scope: !5102, file: !5103, line: 73, baseType: !4957, size: 64, offset: 1344)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "threads_oneshot", scope: !5102, file: !5103, line: 81, baseType: !323, size: 64, offset: 1408)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "threads_active", scope: !5102, file: !5103, line: 82, baseType: !394, size: 32, offset: 1472)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "wait_for_threads", scope: !5102, file: !5103, line: 83, baseType: !1106, size: 128, offset: 1536)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "nr_actions", scope: !5102, file: !5103, line: 85, baseType: !7, size: 32, offset: 1664)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "no_suspend_depth", scope: !5102, file: !5103, line: 86, baseType: !7, size: 32, offset: 1696)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "cond_suspend_depth", scope: !5102, file: !5103, line: 87, baseType: !7, size: 32, offset: 1728)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "force_resume_depth", scope: !5102, file: !5103, line: 88, baseType: !7, size: 32, offset: 1760)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !5102, file: !5103, line: 91, baseType: !2003, size: 64, offset: 1792)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5102, file: !5103, line: 98, baseType: !310, size: 128, align: 64, offset: 1856)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5102, file: !5103, line: 99, baseType: !4018, size: 512, offset: 1984)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "request_mutex", scope: !5102, file: !5103, line: 101, baseType: !960, size: 192, offset: 2496)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "parent_irq", scope: !5102, file: !5103, line: 102, baseType: !43, size: 32, offset: 2688)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5102, file: !5103, line: 103, baseType: !858, size: 64, offset: 2752)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5102, file: !5103, line: 104, baseType: !303, size: 64, offset: 2816)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5082, file: !4853, line: 1013, baseType: !713, size: 32, offset: 2816)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache_priv", scope: !5082, file: !4853, line: 1014, baseType: !713, size: 32, offset: 2848)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !5082, file: !4853, line: 1015, baseType: !1466, size: 64, offset: 2880)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4672, file: !4673, line: 175, baseType: !4671, size: 64, offset: 576)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !4672, file: !4673, line: 182, baseType: !4828, size: 64, offset: 640)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !4672, file: !4673, line: 183, baseType: !7, size: 32, offset: 704)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !4672, file: !4673, line: 184, baseType: !7, size: 32, offset: 736)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !4672, file: !4673, line: 185, baseType: !1991, size: 128, offset: 768)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !4672, file: !4673, line: 186, baseType: !960, size: 192, offset: 896)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !4672, file: !4673, line: 187, baseType: !5175, offset: 1088)
!5175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !320)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !4014, file: !4015, line: 499, baseType: !295, size: 128, offset: 4224)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !4014, file: !4015, line: 502, baseType: !5178, size: 64, offset: 4352)
!5178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5179, size: 64)
!5179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5180)
!5180 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !4015, line: 502, flags: DIFlagFwdDecl)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !4014, file: !4015, line: 504, baseType: !3549, size: 64, offset: 4416)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !4014, file: !4015, line: 505, baseType: !342, size: 64, offset: 4480)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !4014, file: !4015, line: 510, baseType: !342, size: 64, offset: 4544)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !4014, file: !4015, line: 511, baseType: !5185, size: 64, offset: 4608)
!5185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5186, size: 64)
!5186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5187)
!5187 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !4015, line: 511, flags: DIFlagFwdDecl)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4014, file: !4015, line: 513, baseType: !5189, size: 64, offset: 4672)
!5189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5190, size: 64)
!5190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !4015, line: 288, size: 128, elements: !5191)
!5191 = !{!5192, !5193}
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5190, file: !4015, line: 293, baseType: !7, size: 32)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !5190, file: !4015, line: 294, baseType: !323, size: 64, offset: 64)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !4014, file: !4015, line: 515, baseType: !295, size: 128, offset: 4736)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !4014, file: !4015, line: 526, baseType: !5196, offset: 4864)
!5196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !5197, line: 5, elements: !749)
!5197 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !4014, file: !4015, line: 528, baseType: !4686, size: 64, offset: 4864)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4014, file: !4015, line: 529, baseType: !4699, size: 64, offset: 4928)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !4014, file: !4015, line: 534, baseType: !825, size: 32, offset: 4992)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4014, file: !4015, line: 535, baseType: !713, size: 32, offset: 5024)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !4014, file: !4015, line: 537, baseType: !735, offset: 5056)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !4014, file: !4015, line: 538, baseType: !295, size: 128, offset: 5056)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4014, file: !4015, line: 540, baseType: !5205, size: 64, offset: 5184)
!5205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5206, size: 64)
!5206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !5207, line: 54, size: 960, elements: !5208)
!5207 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!5208 = !{!5209, !5210, !5211, !5212, !5213, !5214, !5215, !5219, !5223, !5224, !5225, !5226, !5230, !5234, !5235}
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5206, file: !5207, line: 55, baseType: !303, size: 64)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5206, file: !5207, line: 56, baseType: !858, size: 64, offset: 64)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !5206, file: !5207, line: 58, baseType: !4095, size: 64, offset: 128)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5206, file: !5207, line: 59, baseType: !4095, size: 64, offset: 192)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !5206, file: !5207, line: 60, baseType: !4024, size: 64, offset: 256)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !5206, file: !5207, line: 62, baseType: !4395, size: 64, offset: 320)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5206, file: !5207, line: 63, baseType: !5216, size: 64, offset: 384)
!5216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5217, size: 64)
!5217 = !DISubroutineType(types: !5218)
!5218 = !{!583, !4382, !4402}
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !5206, file: !5207, line: 65, baseType: !5220, size: 64, offset: 448)
!5220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5221, size: 64)
!5221 = !DISubroutineType(types: !5222)
!5222 = !{null, !5205}
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !5206, file: !5207, line: 66, baseType: !4404, size: 64, offset: 512)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !5206, file: !5207, line: 68, baseType: !4414, size: 64, offset: 576)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !5206, file: !5207, line: 70, baseType: !4131, size: 64, offset: 640)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !5206, file: !5207, line: 71, baseType: !5227, size: 64, offset: 704)
!5227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5228, size: 64)
!5228 = !DISubroutineType(types: !5229)
!5229 = !{!2269, !4382}
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !5206, file: !5207, line: 73, baseType: !5231, size: 64, offset: 768)
!5231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5232, size: 64)
!5232 = !DISubroutineType(types: !5233)
!5233 = !{null, !4382, !1888, !1889}
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !5206, file: !5207, line: 75, baseType: !4408, size: 64, offset: 832)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5206, file: !5207, line: 77, baseType: !4527, size: 64, offset: 896)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4014, file: !4015, line: 541, baseType: !4095, size: 64, offset: 5248)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4014, file: !4015, line: 543, baseType: !4404, size: 64, offset: 5312)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !4014, file: !4015, line: 544, baseType: !5239, size: 64, offset: 5376)
!5239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5240, size: 64)
!5240 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !4015, line: 45, flags: DIFlagFwdDecl)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !4014, file: !4015, line: 545, baseType: !5242, size: 64, offset: 5440)
!5242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5243, size: 64)
!5243 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !4015, line: 47, flags: DIFlagFwdDecl)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !4014, file: !4015, line: 547, baseType: !546, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4014, file: !4015, line: 548, baseType: !546, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !4014, file: !4015, line: 549, baseType: !546, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !4014, file: !4015, line: 550, baseType: !546, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !3983, file: !3966, line: 69, baseType: !4024, size: 64, offset: 5952)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !3983, file: !3966, line: 70, baseType: !43, size: 32, offset: 6016)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !3983, file: !3966, line: 70, baseType: !43, size: 32, offset: 6048)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3983, file: !3966, line: 71, baseType: !5252, size: 64, offset: 6080)
!5252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5253, size: 64)
!5253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !3966, line: 48, size: 808, elements: !5254)
!5254 = !{!5255, !5257}
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !5253, file: !3966, line: 49, baseType: !5256, size: 296)
!5256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 296, elements: !2060)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !5253, file: !3966, line: 50, baseType: !5258, size: 512, offset: 296)
!5258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 512, elements: !3918)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !3983, file: !3966, line: 75, baseType: !5260, size: 448, offset: 6144)
!5260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1814, line: 124, size: 448, elements: !5261)
!5261 = !{!5262, !5263, !5264}
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5260, file: !1814, line: 125, baseType: !1813, size: 256)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5260, file: !1814, line: 126, baseType: !310, size: 128, align: 64, offset: 256)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !5260, file: !1814, line: 129, baseType: !2968, size: 64, offset: 384)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3977, file: !3966, line: 153, baseType: !5266, offset: 256)
!5266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3982, elements: !320)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !3965, file: !3966, line: 187, baseType: !3983, size: 6592, offset: 448)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !3965, file: !3966, line: 189, baseType: !5269, size: 64, offset: 7040)
!5269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5270, size: 64)
!5270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5271)
!5271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !5272, line: 1844, size: 960, elements: !5273)
!5272 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!5273 = !{!5274, !5279, !5374, !5378, !5382, !5386, !5387, !5391, !5395, !5399, !5405, !5409, !5435, !5439, !5440}
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !5271, file: !5272, line: 1845, baseType: !5275, size: 64)
!5275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5276, size: 64)
!5276 = !DISubroutineType(types: !5277)
!5277 = !{!5278, !3958}
!5278 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !3960, line: 515, baseType: !7)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !5271, file: !5272, line: 1846, baseType: !5280, size: 64, offset: 64)
!5280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5281, size: 64)
!5281 = !DISubroutineType(types: !5282)
!5282 = !{!43, !5283, !5373}
!5283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5284, size: 64)
!5284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !3960, line: 22, size: 1344, elements: !5285)
!5285 = !{!5286, !5287, !5288, !5289, !5290, !5291, !5292, !5293, !5294, !5295, !5296, !5297, !5298, !5299, !5300, !5301, !5302, !5371, !5372}
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !5284, file: !3960, line: 23, baseType: !825, size: 32)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !5284, file: !3960, line: 24, baseType: !43, size: 32, offset: 32)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !5284, file: !3960, line: 25, baseType: !648, size: 64, offset: 64)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !5284, file: !3960, line: 26, baseType: !820, size: 64, offset: 128)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !5284, file: !3960, line: 27, baseType: !960, size: 192, offset: 192)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !5284, file: !3960, line: 28, baseType: !576, size: 64, offset: 384)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !5284, file: !3960, line: 29, baseType: !576, size: 64, offset: 448)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !5284, file: !3960, line: 30, baseType: !43, size: 32, offset: 512)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !5284, file: !3960, line: 31, baseType: !546, size: 8, offset: 544)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !5284, file: !3960, line: 33, baseType: !295, size: 128, offset: 576)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !5284, file: !3960, line: 35, baseType: !5283, size: 64, offset: 704)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !5284, file: !3960, line: 36, baseType: !1403, size: 8, offset: 768)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !5284, file: !3960, line: 37, baseType: !3982, size: 64, offset: 832)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !5284, file: !3960, line: 39, baseType: !7, size: 32, offset: 896)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !5284, file: !3960, line: 41, baseType: !735, offset: 928)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !5284, file: !3960, line: 42, baseType: !3964, size: 64, offset: 960)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !5284, file: !3960, line: 43, baseType: !5303, size: 64, offset: 1024)
!5303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5304, size: 64)
!5304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !5305, line: 165, size: 4672, elements: !5306)
!5305 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!5306 = !{!5307, !5308, !5309, !5310, !5311, !5312, !5313, !5314, !5315, !5316, !5317, !5318, !5364, !5365, !5366, !5367, !5369, !5370}
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5304, file: !5305, line: 166, baseType: !342, size: 64)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !5304, file: !5305, line: 167, baseType: !444, size: 192, align: 64, offset: 64)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !5304, file: !5305, line: 168, baseType: !295, size: 128, offset: 256)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5304, file: !5305, line: 169, baseType: !323, size: 64, offset: 384)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !5304, file: !5305, line: 170, baseType: !323, size: 64, offset: 448)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5304, file: !5305, line: 172, baseType: !4372, size: 32, offset: 512)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !5304, file: !5305, line: 173, baseType: !7, size: 32, offset: 544)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !5304, file: !5305, line: 174, baseType: !7, size: 32, offset: 576)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !5304, file: !5305, line: 175, baseType: !7, size: 32, offset: 608)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !5304, file: !5305, line: 175, baseType: !7, size: 32, offset: 640)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !5304, file: !5305, line: 181, baseType: !382, size: 64, offset: 704)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !5304, file: !5305, line: 183, baseType: !5319, size: 2688, offset: 768)
!5319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !5305, line: 107, size: 2688, elements: !5320)
!5320 = !{!5321, !5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5331, !5332, !5333, !5334, !5335, !5336, !5337, !5338, !5339, !5346, !5347, !5359, !5360, !5361, !5362, !5363}
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !5319, file: !5305, line: 108, baseType: !5303, size: 64)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5319, file: !5305, line: 110, baseType: !323, size: 64, offset: 64)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !5319, file: !5305, line: 111, baseType: !323, size: 64, offset: 128)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !5319, file: !5305, line: 113, baseType: !295, size: 128, offset: 192)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !5319, file: !5305, line: 114, baseType: !295, size: 128, offset: 320)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !5319, file: !5305, line: 115, baseType: !295, size: 128, offset: 448)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !5319, file: !5305, line: 116, baseType: !295, size: 128, offset: 576)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !5319, file: !5305, line: 117, baseType: !735, offset: 704)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !5319, file: !5305, line: 119, baseType: !5330, size: 256, offset: 704)
!5330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3074, size: 256, elements: !1208)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !5319, file: !5305, line: 121, baseType: !323, size: 64, offset: 960)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !5319, file: !5305, line: 123, baseType: !323, size: 64, offset: 1024)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !5319, file: !5305, line: 124, baseType: !323, size: 64, offset: 1088)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !5319, file: !5305, line: 125, baseType: !323, size: 64, offset: 1152)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !5319, file: !5305, line: 126, baseType: !323, size: 64, offset: 1216)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !5319, file: !5305, line: 127, baseType: !323, size: 64, offset: 1280)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !5319, file: !5305, line: 135, baseType: !323, size: 64, offset: 1344)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !5319, file: !5305, line: 136, baseType: !323, size: 64, offset: 1408)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !5319, file: !5305, line: 138, baseType: !5340, size: 128, offset: 1472)
!5340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !5341, line: 76, size: 128, elements: !5342)
!5341 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!5342 = !{!5343, !5344, !5345}
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !5340, file: !5341, line: 78, baseType: !3074, size: 64)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !5340, file: !5341, line: 80, baseType: !7, size: 32, offset: 64)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5340, file: !5341, line: 81, baseType: !1174, offset: 96)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !5319, file: !5305, line: 139, baseType: !43, size: 32, offset: 1600)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !5319, file: !5305, line: 140, baseType: !5348, size: 32, offset: 1632)
!5348 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !5305, line: 49, baseType: !7, size: 32, elements: !5349)
!5349 = !{!5350, !5351, !5352, !5353, !5354, !5355, !5356, !5357, !5358}
!5350 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!5351 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!5352 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!5353 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!5354 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!5355 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!5356 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!5357 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!5358 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !5319, file: !5305, line: 142, baseType: !735, offset: 1664)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !5319, file: !5305, line: 143, baseType: !295, size: 128, offset: 1664)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !5319, file: !5305, line: 144, baseType: !2963, size: 704, offset: 1792)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !5319, file: !5305, line: 146, baseType: !323, size: 64, offset: 2496)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !5319, file: !5305, line: 148, baseType: !295, size: 128, offset: 2560)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !5304, file: !5305, line: 184, baseType: !295, size: 128, offset: 3456)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !5304, file: !5305, line: 190, baseType: !1106, size: 128, offset: 3584)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5304, file: !5305, line: 192, baseType: !4382, size: 64, offset: 3712)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !5304, file: !5305, line: 193, baseType: !5368, size: 512, offset: 3776)
!5368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 512, elements: !3918)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5304, file: !5305, line: 194, baseType: !4382, size: 64, offset: 4288)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !5304, file: !5305, line: 196, baseType: !2246, size: 320, offset: 4352)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !5284, file: !3960, line: 46, baseType: !43, size: 32, offset: 1088)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !5284, file: !3960, line: 48, baseType: !960, size: 192, offset: 1152)
!5373 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !288, line: 150, baseType: !7)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5271, file: !5272, line: 1847, baseType: !5375, size: 64, offset: 128)
!5375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5376, size: 64)
!5376 = !DISubroutineType(types: !5377)
!5377 = !{null, !3964, !5373}
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !5271, file: !5272, line: 1848, baseType: !5379, size: 64, offset: 192)
!5379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5380, size: 64)
!5380 = !DISubroutineType(types: !5381)
!5381 = !{!43, !5283, !3986, !630, !7}
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !5271, file: !5272, line: 1849, baseType: !5383, size: 64, offset: 256)
!5383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5384, size: 64)
!5384 = !DISubroutineType(types: !5385)
!5385 = !{!43, !5283, !5373, !7, !323}
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !5271, file: !5272, line: 1850, baseType: !5383, size: 64, offset: 320)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !5271, file: !5272, line: 1851, baseType: !5388, size: 64, offset: 384)
!5388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5389, size: 64)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{!7, !3964, !7}
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !5271, file: !5272, line: 1853, baseType: !5392, size: 64, offset: 448)
!5392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5393, size: 64)
!5393 = !DISubroutineType(types: !5394)
!5394 = !{null, !3964}
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !5271, file: !5272, line: 1854, baseType: !5396, size: 64, offset: 512)
!5396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5397, size: 64)
!5397 = !DISubroutineType(types: !5398)
!5398 = !{!43, !3964}
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !5271, file: !5272, line: 1855, baseType: !5400, size: 64, offset: 576)
!5400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5401, size: 64)
!5401 = !DISubroutineType(types: !5402)
!5402 = !{!43, !5283, !5403}
!5403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5404, size: 64)
!5404 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !645, line: 51, flags: DIFlagFwdDecl)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !5271, file: !5272, line: 1857, baseType: !5406, size: 64, offset: 640)
!5406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5407, size: 64)
!5407 = !DISubroutineType(types: !5408)
!5408 = !{null, !5283, !323}
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !5271, file: !5272, line: 1858, baseType: !5410, size: 64, offset: 704)
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5411, size: 64)
!5411 = !DISubroutineType(types: !5412)
!5412 = !{!43, !3964, !3986, !7, !5413, !576}
!5413 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !5272, line: 354, baseType: !5414)
!5414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5415, size: 64)
!5415 = !DISubroutineType(types: !5416)
!5416 = !{!43, !5417, !7, !576}
!5417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5418, size: 64)
!5418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !5419, line: 106, size: 512, elements: !5420)
!5419 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!5420 = !{!5421, !5422, !5423, !5424, !5425, !5426, !5427, !5428, !5430, !5431}
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5418, file: !5419, line: 107, baseType: !344, size: 64)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5418, file: !5419, line: 108, baseType: !344, size: 64, offset: 64)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !5418, file: !5419, line: 109, baseType: !344, size: 64, offset: 128)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5418, file: !5419, line: 110, baseType: !1404, size: 8, offset: 192)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !5418, file: !5419, line: 111, baseType: !1404, size: 8, offset: 200)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !5418, file: !5419, line: 112, baseType: !1404, size: 8, offset: 208)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5418, file: !5419, line: 113, baseType: !1404, size: 8, offset: 216)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !5418, file: !5419, line: 114, baseType: !5429, size: 32, offset: 224)
!5429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 32, elements: !1208)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !5418, file: !5419, line: 115, baseType: !344, size: 64, offset: 256)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5418, file: !5419, line: 116, baseType: !5432, size: 192, offset: 320)
!5432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 192, elements: !5433)
!5433 = !{!5434}
!5434 = !DISubrange(count: 24)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !5271, file: !5272, line: 1860, baseType: !5436, size: 64, offset: 768)
!5436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5437, size: 64)
!5437 = !DISubroutineType(types: !5438)
!5438 = !{!583, !3964, !4402}
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5271, file: !5272, line: 1861, baseType: !858, size: 64, offset: 832)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !5271, file: !5272, line: 1862, baseType: !5441, size: 64, offset: 896)
!5441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5442, size: 64)
!5442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5443)
!5443 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !5272, line: 41, flags: DIFlagFwdDecl)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3965, file: !3966, line: 190, baseType: !5445, size: 64, offset: 7104)
!5445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5446, size: 64)
!5446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !5272, line: 399, size: 14464, elements: !5447)
!5447 = !{!5448, !5583, !5712, !5713, !5716, !5719, !5723, !5724, !5725, !5727, !5728, !5729, !5730, !5731, !5732, !5733, !5734, !5735, !5736, !5737, !5773, !5774, !5775, !5776, !5777, !5778, !5779, !5780, !5781, !5784, !5793, !5794, !5795, !5796, !5797, !5832, !5833, !5834, !5835, !5836, !5837, !5840, !5841, !5842, !5843, !5844, !5845, !5846, !5847, !5848, !5910, !5911, !5912, !5913, !5916, !5917, !5950, !5951, !5952, !5953}
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !5446, file: !5272, line: 400, baseType: !5449, size: 64)
!5449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5450, size: 64)
!5450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !5272, line: 130, size: 2176, elements: !5451)
!5451 = !{!5452, !5453, !5456, !5459, !5460, !5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5474, !5481, !5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5538, !5539, !5545, !5546, !5547, !5548, !5581, !5582}
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5450, file: !5272, line: 131, baseType: !5445, size: 64)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !5450, file: !5272, line: 132, baseType: !5454, size: 64, offset: 64)
!5454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5455, size: 64)
!5455 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !5272, line: 132, flags: DIFlagFwdDecl)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !5450, file: !5272, line: 133, baseType: !5457, size: 64, offset: 128)
!5457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5458, size: 64)
!5458 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !5272, line: 133, flags: DIFlagFwdDecl)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !5450, file: !5272, line: 135, baseType: !7, size: 32, offset: 192)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !5450, file: !5272, line: 136, baseType: !5461, size: 32, offset: 224)
!5461 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !5272, line: 66, baseType: !474)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !5450, file: !5272, line: 138, baseType: !43, size: 32, offset: 256)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !5450, file: !5272, line: 139, baseType: !43, size: 32, offset: 288)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !5450, file: !5272, line: 142, baseType: !7, size: 32, offset: 320)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !5450, file: !5272, line: 143, baseType: !3986, size: 64, offset: 384)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !5450, file: !5272, line: 145, baseType: !3958, size: 64, offset: 448)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !5450, file: !5272, line: 146, baseType: !3958, size: 64, offset: 512)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !5450, file: !5272, line: 148, baseType: !295, size: 128, offset: 576)
!5469 = !DIDerivedType(tag: DW_TAG_member, scope: !5450, file: !5272, line: 157, baseType: !5470, size: 128, offset: 704)
!5470 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5450, file: !5272, line: 157, size: 128, elements: !5471)
!5471 = !{!5472, !5473}
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5470, file: !5272, line: 158, baseType: !287, size: 128)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !5470, file: !5272, line: 159, baseType: !295, size: 128)
!5474 = !DIDerivedType(tag: DW_TAG_member, scope: !5450, file: !5272, line: 167, baseType: !5475, size: 192, offset: 832)
!5475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5450, file: !5272, line: 167, size: 192, elements: !5476)
!5476 = !{!5477, !5478, !5479, !5480}
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !5475, file: !5272, line: 168, baseType: !444, size: 192, align: 64)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !5475, file: !5272, line: 169, baseType: !626, size: 128)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !5475, file: !5272, line: 170, baseType: !576, size: 64)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !5475, file: !5272, line: 171, baseType: !43, size: 32)
!5481 = !DIDerivedType(tag: DW_TAG_member, scope: !5450, file: !5272, line: 180, baseType: !5482, size: 256, offset: 1024)
!5482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5450, file: !5272, line: 180, size: 256, elements: !5483)
!5483 = !{!5484, !5519}
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !5482, file: !5272, line: 184, baseType: !5485, size: 192)
!5485 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5482, file: !5272, line: 181, size: 192, elements: !5486)
!5486 = !{!5487, !5517}
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !5485, file: !5272, line: 182, baseType: !5488, size: 64)
!5488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5489, size: 64)
!5489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !5490, line: 73, size: 448, elements: !5491)
!5490 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!5491 = !{!5492, !5493, !5506, !5511, !5516}
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5489, file: !5490, line: 74, baseType: !5445, size: 64)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !5489, file: !5490, line: 75, baseType: !5494, size: 64, offset: 64)
!5494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5495, size: 64)
!5495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !5490, line: 99, size: 704, elements: !5496)
!5496 = !{!5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504, !5505}
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5495, file: !5490, line: 100, baseType: !382, size: 64)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !5495, file: !5490, line: 101, baseType: !394, size: 32, offset: 64)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !5495, file: !5490, line: 102, baseType: !394, size: 32, offset: 96)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5495, file: !5490, line: 105, baseType: !735, offset: 128)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5495, file: !5490, line: 107, baseType: !483, size: 16, offset: 128)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !5495, file: !5490, line: 109, baseType: !1991, size: 128, offset: 192)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !5495, file: !5490, line: 110, baseType: !5488, size: 64, offset: 320)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5495, file: !5490, line: 111, baseType: !863, size: 64, offset: 384)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !5495, file: !5490, line: 113, baseType: !1813, size: 256, offset: 448)
!5506 = !DIDerivedType(tag: DW_TAG_member, scope: !5489, file: !5490, line: 83, baseType: !5507, size: 128, offset: 128)
!5507 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5489, file: !5490, line: 83, size: 128, elements: !5508)
!5508 = !{!5509, !5510}
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !5507, file: !5490, line: 84, baseType: !295, size: 128)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !5507, file: !5490, line: 85, baseType: !2277, size: 64)
!5511 = !DIDerivedType(tag: DW_TAG_member, scope: !5489, file: !5490, line: 87, baseType: !5512, size: 128, offset: 256)
!5512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5489, file: !5490, line: 87, size: 128, elements: !5513)
!5513 = !{!5514, !5515}
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !5512, file: !5490, line: 88, baseType: !287, size: 128)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !5512, file: !5490, line: 89, baseType: !310, size: 128, align: 64)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5489, file: !5490, line: 92, baseType: !7, size: 32, offset: 384)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5485, file: !5272, line: 183, baseType: !5518, size: 128, offset: 64)
!5518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 128, elements: !484)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !5482, file: !5272, line: 190, baseType: !5520, size: 256)
!5520 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5482, file: !5272, line: 186, size: 256, elements: !5521)
!5521 = !{!5522, !5523, !5524}
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !5520, file: !5272, line: 187, baseType: !7, size: 32)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5520, file: !5272, line: 188, baseType: !295, size: 128, offset: 64)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !5520, file: !5272, line: 189, baseType: !5525, size: 64, offset: 192)
!5525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5526, size: 64)
!5526 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !5272, line: 62, baseType: !5527)
!5527 = !DISubroutineType(types: !5528)
!5528 = !{null, !5449, !5529}
!5529 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !3960, line: 58, baseType: !1403)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !5450, file: !5272, line: 193, baseType: !3964, size: 64, offset: 1280)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !5450, file: !5272, line: 194, baseType: !3982, size: 64, offset: 1344)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !5450, file: !5272, line: 200, baseType: !342, size: 64, offset: 1408)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !5450, file: !5272, line: 202, baseType: !342, size: 64, offset: 1472)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !5450, file: !5272, line: 212, baseType: !483, size: 16, offset: 1536)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !5450, file: !5272, line: 218, baseType: !483, size: 16, offset: 1552)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !5450, file: !5272, line: 221, baseType: !483, size: 16, offset: 1568)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !5450, file: !5272, line: 229, baseType: !483, size: 16, offset: 1584)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5450, file: !5272, line: 230, baseType: !483, size: 16, offset: 1600)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5450, file: !5272, line: 232, baseType: !5540, size: 32, offset: 1632)
!5540 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !5272, line: 118, baseType: !7, size: 32, elements: !5541)
!5541 = !{!5542, !5543, !5544}
!5542 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!5543 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!5544 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5450, file: !5272, line: 233, baseType: !1277, size: 32, offset: 1664)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5450, file: !5272, line: 235, baseType: !7, size: 32, offset: 1696)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !5450, file: !5272, line: 236, baseType: !323, size: 64, offset: 1728)
!5548 = !DIDerivedType(tag: DW_TAG_member, scope: !5450, file: !5272, line: 238, baseType: !5549, size: 256, offset: 1792)
!5549 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5450, file: !5272, line: 238, size: 256, elements: !5550)
!5550 = !{!5551, !5580}
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !5549, file: !5272, line: 239, baseType: !5552, size: 256)
!5552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !5553, line: 23, size: 256, elements: !5554)
!5553 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!5554 = !{!5555, !5577, !5579}
!5555 = !DIDerivedType(tag: DW_TAG_member, scope: !5552, file: !5553, line: 24, baseType: !5556, size: 128)
!5556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5552, file: !5553, line: 24, size: 128, elements: !5557)
!5557 = !{!5558, !5570}
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5556, file: !5553, line: 25, baseType: !5559, size: 128)
!5559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !5560, line: 58, size: 128, elements: !5561)
!5560 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!5561 = !{!5562, !5563, !5568, !5569}
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5559, file: !5560, line: 59, baseType: !998, size: 64)
!5563 = !DIDerivedType(tag: DW_TAG_member, scope: !5559, file: !5560, line: 60, baseType: !5564, size: 32, offset: 64)
!5564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5559, file: !5560, line: 60, size: 32, elements: !5565)
!5565 = !{!5566, !5567}
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !5564, file: !5560, line: 61, baseType: !7, size: 32)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !5564, file: !5560, line: 62, baseType: !394, size: 32)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5559, file: !5560, line: 65, baseType: !1044, size: 16, offset: 96)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5559, file: !5560, line: 65, baseType: !1044, size: 16, offset: 112)
!5570 = !DIDerivedType(tag: DW_TAG_member, scope: !5556, file: !5553, line: 26, baseType: !5571, size: 128)
!5571 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5556, file: !5553, line: 26, size: 128, elements: !5572)
!5572 = !{!5573, !5574, !5575, !5576}
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5571, file: !5553, line: 27, baseType: !998, size: 64)
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5571, file: !5553, line: 28, baseType: !7, size: 32, offset: 64)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5571, file: !5553, line: 30, baseType: !1044, size: 16, offset: 96)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5571, file: !5553, line: 30, baseType: !1044, size: 16, offset: 112)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5552, file: !5553, line: 34, baseType: !5578, size: 64, offset: 128)
!5578 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !5553, line: 17, baseType: !3501)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5552, file: !5553, line: 35, baseType: !576, size: 64, offset: 192)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !5549, file: !5272, line: 240, baseType: !342, size: 64)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !5450, file: !5272, line: 246, baseType: !5525, size: 64, offset: 2048)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !5450, file: !5272, line: 247, baseType: !576, size: 64, offset: 2112)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !5446, file: !5272, line: 401, baseType: !5584, size: 64, offset: 64)
!5584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5585, size: 64)
!5585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !5586, line: 101, size: 4992, elements: !5587)
!5586 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!5587 = !{!5588, !5706, !5707, !5708, !5709, !5710}
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5585, file: !5586, line: 103, baseType: !5589, size: 64)
!5589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5590, size: 64)
!5590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !5586, line: 66, size: 2240, elements: !5591)
!5591 = !{!5592, !5593, !5681, !5682, !5683, !5696, !5697, !5698, !5700, !5701, !5705}
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !5590, file: !5586, line: 69, baseType: !2277, size: 64)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5590, file: !5586, line: 72, baseType: !5594, size: 1408, offset: 64)
!5594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !5586, line: 29, size: 1408, elements: !5595)
!5595 = !{!5596, !5600, !5604, !5608, !5612, !5616, !5620, !5624, !5629, !5639, !5643, !5649, !5653, !5654, !5658, !5662, !5666, !5670, !5671, !5675, !5676, !5680}
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !5594, file: !5586, line: 30, baseType: !5597, size: 64)
!5597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5598, size: 64)
!5598 = !DISubroutineType(types: !5599)
!5599 = !{!43, !5445, !5589}
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !5594, file: !5586, line: 31, baseType: !5601, size: 64, offset: 64)
!5601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5602, size: 64)
!5602 = !DISubroutineType(types: !5603)
!5603 = !{null, !5584}
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !5594, file: !5586, line: 32, baseType: !5605, size: 64, offset: 128)
!5605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5606, size: 64)
!5606 = !DISubroutineType(types: !5607)
!5607 = !{!43, !5457, !7}
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !5594, file: !5586, line: 33, baseType: !5609, size: 64, offset: 192)
!5609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5610, size: 64)
!5610 = !DISubroutineType(types: !5611)
!5611 = !{null, !5457, !7}
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !5594, file: !5586, line: 34, baseType: !5613, size: 64, offset: 256)
!5613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5614, size: 64)
!5614 = !DISubroutineType(types: !5615)
!5615 = !{null, !5457}
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !5594, file: !5586, line: 36, baseType: !5617, size: 64, offset: 320)
!5617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5618, size: 64)
!5618 = !DISubroutineType(types: !5619)
!5619 = !{!546, !5445, !5449, !3958}
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !5594, file: !5586, line: 37, baseType: !5621, size: 64, offset: 384)
!5621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5622, size: 64)
!5622 = !DISubroutineType(types: !5623)
!5623 = !{!546, !5457, !3958, !7}
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !5594, file: !5586, line: 38, baseType: !5625, size: 64, offset: 448)
!5625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5626, size: 64)
!5626 = !DISubroutineType(types: !5627)
!5627 = !{!43, !5445, !5628, !3958}
!5628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5449, size: 64)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !5594, file: !5586, line: 39, baseType: !5630, size: 64, offset: 512)
!5630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5631, size: 64)
!5631 = !DISubroutineType(types: !5632)
!5632 = !{null, !5445, !5449, !5633}
!5633 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !5586, line: 19, baseType: !7, size: 32, elements: !5634)
!5634 = !{!5635, !5636, !5637, !5638}
!5635 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!5636 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!5637 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!5638 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !5594, file: !5586, line: 40, baseType: !5640, size: 64, offset: 576)
!5640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5641, size: 64)
!5641 = !DISubroutineType(types: !5642)
!5642 = !{null, !5445, !5449, !5449}
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !5594, file: !5586, line: 41, baseType: !5644, size: 64, offset: 640)
!5644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5645, size: 64)
!5645 = !DISubroutineType(types: !5646)
!5646 = !{null, !7, !5647}
!5647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5648, size: 64)
!5648 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !5586, line: 26, flags: DIFlagFwdDecl)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !5594, file: !5586, line: 42, baseType: !5650, size: 64, offset: 704)
!5650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5651, size: 64)
!5651 = !DISubroutineType(types: !5652)
!5652 = !{null, !5449}
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !5594, file: !5586, line: 43, baseType: !5650, size: 64, offset: 768)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !5594, file: !5586, line: 44, baseType: !5655, size: 64, offset: 832)
!5655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5656, size: 64)
!5656 = !DISubroutineType(types: !5657)
!5657 = !{null, !5457, !298, !546}
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !5594, file: !5586, line: 45, baseType: !5659, size: 64, offset: 896)
!5659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5660, size: 64)
!5660 = !DISubroutineType(types: !5661)
!5661 = !{!5449, !5457}
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !5594, file: !5586, line: 46, baseType: !5663, size: 64, offset: 960)
!5663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5664, size: 64)
!5664 = !DISubroutineType(types: !5665)
!5665 = !{!546, !5457}
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !5594, file: !5586, line: 47, baseType: !5667, size: 64, offset: 1024)
!5667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5668, size: 64)
!5668 = !DISubroutineType(types: !5669)
!5669 = !{null, !5449, !342}
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !5594, file: !5586, line: 48, baseType: !5650, size: 64, offset: 1088)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !5594, file: !5586, line: 49, baseType: !5672, size: 64, offset: 1152)
!5672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5673, size: 64)
!5673 = !DISubroutineType(types: !5674)
!5674 = !{!5449, !5445, !5449}
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !5594, file: !5586, line: 50, baseType: !5672, size: 64, offset: 1216)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !5594, file: !5586, line: 51, baseType: !5677, size: 64, offset: 1280)
!5677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5678, size: 64)
!5678 = !DISubroutineType(types: !5679)
!5679 = !{null, !5488}
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !5594, file: !5586, line: 52, baseType: !5677, size: 64, offset: 1344)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !5590, file: !5586, line: 74, baseType: !600, size: 64, offset: 1472)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !5590, file: !5586, line: 75, baseType: !600, size: 64, offset: 1536)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !5590, file: !5586, line: 76, baseType: !5684, size: 64, offset: 1600)
!5684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5685, size: 64)
!5685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !5586, line: 57, size: 256, elements: !5686)
!5686 = !{!5687, !5688, !5692}
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5685, file: !5586, line: 58, baseType: !4084, size: 128)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5685, file: !5586, line: 59, baseType: !5689, size: 64, offset: 128)
!5689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5690, size: 64)
!5690 = !DISubroutineType(types: !5691)
!5691 = !{!1021, !5584, !583}
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5685, file: !5586, line: 60, baseType: !5693, size: 64, offset: 192)
!5693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5694, size: 64)
!5694 = !DISubroutineType(types: !5695)
!5695 = !{!1021, !5584, !303, !600}
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !5590, file: !5586, line: 77, baseType: !303, size: 64, offset: 1664)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !5590, file: !5586, line: 78, baseType: !303, size: 64, offset: 1728)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !5590, file: !5586, line: 79, baseType: !5699, size: 32, offset: 1792)
!5699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !5590, file: !5586, line: 80, baseType: !858, size: 64, offset: 1856)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !5590, file: !5586, line: 87, baseType: !5702, size: 176, offset: 1920)
!5702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 176, elements: !5703)
!5703 = !{!5704}
!5704 = !DISubrange(count: 22)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5590, file: !5586, line: 88, baseType: !295, size: 128, offset: 2112)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !5585, file: !5586, line: 104, baseType: !576, size: 64, offset: 64)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5585, file: !5586, line: 105, baseType: !4018, size: 512, offset: 128)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5585, file: !5586, line: 106, baseType: !960, size: 192, offset: 640)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !5585, file: !5586, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5585, file: !5586, line: 108, baseType: !5711, size: 4096, offset: 896)
!5711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !863, size: 4096, elements: !3918)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !5446, file: !5272, line: 403, baseType: !3993, size: 128, offset: 128)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5446, file: !5272, line: 405, baseType: !5714, size: 64, offset: 256)
!5714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5715, size: 64)
!5715 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !5272, line: 43, flags: DIFlagFwdDecl)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !5446, file: !5272, line: 406, baseType: !5717, size: 64, offset: 320)
!5717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5718, size: 64)
!5718 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !5272, line: 42, flags: DIFlagFwdDecl)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !5446, file: !5272, line: 408, baseType: !5720, size: 64, offset: 384)
!5720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5721, size: 64)
!5721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5722)
!5722 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !5272, line: 408, flags: DIFlagFwdDecl)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !5446, file: !5272, line: 411, baseType: !5454, size: 64, offset: 448)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !5446, file: !5272, line: 413, baseType: !7, size: 32, offset: 512)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !5446, file: !5272, line: 416, baseType: !5726, size: 64, offset: 576)
!5726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5457, size: 64)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !5446, file: !5272, line: 417, baseType: !7, size: 32, offset: 640)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !5446, file: !5272, line: 419, baseType: !5303, size: 64, offset: 704)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !5446, file: !5272, line: 425, baseType: !576, size: 64, offset: 768)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !5446, file: !5272, line: 430, baseType: !323, size: 64, offset: 832)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !5446, file: !5272, line: 436, baseType: !394, size: 32, offset: 896)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5446, file: !5272, line: 442, baseType: !43, size: 32, offset: 928)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !5446, file: !5272, line: 447, baseType: !1996, size: 32, offset: 960)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !5446, file: !5272, line: 449, baseType: !735, offset: 992)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5446, file: !5272, line: 454, baseType: !4018, size: 512, offset: 1024)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !5446, file: !5272, line: 459, baseType: !4024, size: 64, offset: 1536)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !5446, file: !5272, line: 462, baseType: !5738, size: 128, offset: 1600)
!5738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !3966, line: 159, size: 128, elements: !5739)
!5739 = !{!5740, !5769, !5770, !5771, !5772}
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !5738, file: !3966, line: 160, baseType: !5741, size: 64)
!5741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5742, size: 64)
!5742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5743)
!5743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !5272, line: 1664, size: 320, elements: !5744)
!5744 = !{!5745, !5759, !5760, !5763, !5768}
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !5743, file: !5272, line: 1665, baseType: !5746, size: 64)
!5746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5747, size: 64)
!5747 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !5272, line: 1660, baseType: !5748)
!5748 = !DISubroutineType(types: !5749)
!5749 = !{!5529, !5750}
!5750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5751, size: 64)
!5751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !5272, line: 1651, size: 320, elements: !5752)
!5752 = !{!5753, !5754, !5755, !5756, !5757, !5758}
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !5751, file: !5272, line: 1652, baseType: !576, size: 64)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !5751, file: !5272, line: 1653, baseType: !576, size: 64, offset: 64)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !5751, file: !5272, line: 1654, baseType: !3986, size: 64, offset: 128)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !5751, file: !5272, line: 1655, baseType: !7, size: 32, offset: 192)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !5751, file: !5272, line: 1656, baseType: !483, size: 16, offset: 224)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !5751, file: !5272, line: 1657, baseType: !303, size: 64, offset: 256)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !5743, file: !5272, line: 1666, baseType: !5746, size: 64, offset: 64)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !5743, file: !5272, line: 1667, baseType: !5761, size: 64, offset: 128)
!5761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5762, size: 64)
!5762 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !5272, line: 1661, baseType: !5651)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !5743, file: !5272, line: 1668, baseType: !5764, size: 64, offset: 192)
!5764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5765, size: 64)
!5765 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !5272, line: 1662, baseType: !5766)
!5766 = !DISubroutineType(types: !5767)
!5767 = !{null, !5449, !7}
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5743, file: !5272, line: 1669, baseType: !303, size: 64, offset: 256)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5738, file: !3966, line: 161, baseType: !500, size: 8, offset: 64)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !5738, file: !3966, line: 162, baseType: !500, size: 8, offset: 72)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !5738, file: !3966, line: 163, baseType: !500, size: 8, offset: 80)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !5738, file: !3966, line: 164, baseType: !500, size: 8, offset: 88)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5446, file: !5272, line: 466, baseType: !4382, size: 64, offset: 1728)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !5446, file: !5272, line: 467, baseType: !4628, size: 32, offset: 1792)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !5446, file: !5272, line: 468, baseType: !7, size: 32, offset: 1824)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !5446, file: !5272, line: 474, baseType: !323, size: 64, offset: 1856)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !5446, file: !5272, line: 476, baseType: !7, size: 32, offset: 1920)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !5446, file: !5272, line: 477, baseType: !7, size: 32, offset: 1952)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !5446, file: !5272, line: 484, baseType: !7, size: 32, offset: 1984)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !5446, file: !5272, line: 485, baseType: !43, size: 32, offset: 2016)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !5446, file: !5272, line: 487, baseType: !5782, size: 64, offset: 2048)
!5782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5783, size: 64)
!5783 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !5272, line: 44, flags: DIFlagFwdDecl)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !5446, file: !5272, line: 488, baseType: !5785, size: 5120, offset: 2112)
!5785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5786, size: 5120, elements: !280)
!5786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !3960, line: 540, size: 320, elements: !5787)
!5787 = !{!5788, !5789, !5790, !5791, !5792}
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !5786, file: !3960, line: 541, baseType: !342, size: 64)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !5786, file: !3960, line: 542, baseType: !342, size: 64, offset: 64)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5786, file: !3960, line: 543, baseType: !342, size: 64, offset: 128)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !5786, file: !3960, line: 544, baseType: !713, size: 32, offset: 192)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !5786, file: !3960, line: 545, baseType: !342, size: 64, offset: 256)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5446, file: !5272, line: 490, baseType: !2246, size: 320, offset: 7232)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !5446, file: !5272, line: 491, baseType: !1813, size: 256, offset: 7552)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !5446, file: !5272, line: 493, baseType: !394, size: 32, offset: 7808)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5446, file: !5272, line: 495, baseType: !295, size: 128, offset: 7872)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !5446, file: !5272, line: 502, baseType: !5798, size: 896, offset: 8000)
!5798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !5272, line: 321, size: 896, elements: !5799)
!5799 = !{!5800, !5801, !5802, !5803, !5804, !5805, !5806, !5807, !5808, !5809, !5810, !5811, !5812, !5813, !5814, !5815, !5816, !5817, !5818, !5819, !5820, !5821, !5822, !5823, !5824, !5825, !5826}
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !5798, file: !5272, line: 322, baseType: !323, size: 64)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !5798, file: !5272, line: 323, baseType: !323, size: 64, offset: 64)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5798, file: !5272, line: 324, baseType: !323, size: 64, offset: 128)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !5798, file: !5272, line: 326, baseType: !7, size: 32, offset: 192)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !5798, file: !5272, line: 327, baseType: !7, size: 32, offset: 224)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !5798, file: !5272, line: 328, baseType: !7, size: 32, offset: 256)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5798, file: !5272, line: 329, baseType: !7, size: 32, offset: 288)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5798, file: !5272, line: 330, baseType: !7, size: 32, offset: 320)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !5798, file: !5272, line: 331, baseType: !7, size: 32, offset: 352)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !5798, file: !5272, line: 332, baseType: !7, size: 32, offset: 384)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !5798, file: !5272, line: 333, baseType: !7, size: 32, offset: 416)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !5798, file: !5272, line: 334, baseType: !7, size: 32, offset: 448)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !5798, file: !5272, line: 335, baseType: !7, size: 32, offset: 480)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !5798, file: !5272, line: 336, baseType: !7, size: 32, offset: 512)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !5798, file: !5272, line: 337, baseType: !7, size: 32, offset: 544)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !5798, file: !5272, line: 338, baseType: !7, size: 32, offset: 576)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !5798, file: !5272, line: 339, baseType: !7, size: 32, offset: 608)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !5798, file: !5272, line: 340, baseType: !7, size: 32, offset: 640)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !5798, file: !5272, line: 341, baseType: !7, size: 32, offset: 672)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !5798, file: !5272, line: 342, baseType: !7, size: 32, offset: 704)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !5798, file: !5272, line: 344, baseType: !483, size: 16, offset: 736)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !5798, file: !5272, line: 345, baseType: !483, size: 16, offset: 752)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !5798, file: !5272, line: 346, baseType: !483, size: 16, offset: 768)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !5798, file: !5272, line: 348, baseType: !500, size: 8, offset: 784)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !5798, file: !5272, line: 349, baseType: !500, size: 8, offset: 792)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !5798, file: !5272, line: 350, baseType: !500, size: 8, offset: 800)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !5798, file: !5272, line: 351, baseType: !5827, size: 32, offset: 832)
!5827 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !5272, line: 315, baseType: !7, size: 32, elements: !5828)
!5828 = !{!5829, !5830, !5831}
!5829 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!5830 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!5831 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !5446, file: !5272, line: 504, baseType: !7, size: 32, offset: 8896)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !5446, file: !5272, line: 534, baseType: !7, size: 32, offset: 8928)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !5446, file: !5272, line: 535, baseType: !7, size: 32, offset: 8960)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5446, file: !5272, line: 536, baseType: !43, size: 32, offset: 8992)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !5446, file: !5272, line: 537, baseType: !960, size: 192, offset: 9024)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !5446, file: !5272, line: 544, baseType: !5838, size: 64, offset: 9216)
!5838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5839, size: 64)
!5839 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !5272, line: 40, flags: DIFlagFwdDecl)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !5446, file: !5272, line: 546, baseType: !295, size: 128, offset: 9280)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !5446, file: !5272, line: 547, baseType: !735, offset: 9408)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !5446, file: !5272, line: 548, baseType: !2963, size: 704, offset: 9408)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5446, file: !5272, line: 550, baseType: !960, size: 192, offset: 10112)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !5446, file: !5272, line: 551, baseType: !960, size: 192, offset: 10304)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !5446, file: !5272, line: 557, baseType: !295, size: 128, offset: 10496)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !5446, file: !5272, line: 558, baseType: !735, offset: 10624)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !5446, file: !5272, line: 560, baseType: !43, size: 32, offset: 10624)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !5446, file: !5272, line: 563, baseType: !5849, size: 256, offset: 10688)
!5849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !5850, line: 18, size: 256, elements: !5851)
!5850 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5851 = !{!5852, !5853, !5854, !5855}
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !5849, file: !5850, line: 19, baseType: !4382, size: 64)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !5849, file: !5850, line: 20, baseType: !43, size: 32, offset: 64)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !5849, file: !5850, line: 21, baseType: !5445, size: 64, offset: 128)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5849, file: !5850, line: 22, baseType: !5856, size: 64, offset: 192)
!5856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5857, size: 64)
!5857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5858)
!5858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !5850, line: 10, size: 256, elements: !5859)
!5859 = !{!5860, !5901, !5905, !5909}
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !5858, file: !5850, line: 11, baseType: !5861, size: 64)
!5861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5862, size: 64)
!5862 = !DISubroutineType(types: !5863)
!5863 = !{!43, !5864}
!5864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5865, size: 64)
!5865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !5866, line: 22, size: 1280, elements: !5867)
!5866 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5867 = !{!5868, !5869, !5870, !5871, !5872, !5873, !5874, !5875, !5876, !5877, !5878, !5879, !5880, !5881, !5882, !5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5891, !5892, !5893, !5894, !5895, !5896, !5897, !5898, !5899, !5900}
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !5865, file: !5866, line: 23, baseType: !1496, size: 32)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !5865, file: !5866, line: 24, baseType: !474, size: 32, offset: 32)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !5865, file: !5866, line: 25, baseType: !474, size: 32, offset: 64)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !5865, file: !5866, line: 28, baseType: !474, size: 32, offset: 96)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5865, file: !5866, line: 29, baseType: !344, size: 64, offset: 128)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !5865, file: !5866, line: 30, baseType: !344, size: 64, offset: 192)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !5865, file: !5866, line: 31, baseType: !474, size: 32, offset: 256)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !5865, file: !5866, line: 32, baseType: !474, size: 32, offset: 288)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !5865, file: !5866, line: 33, baseType: !474, size: 32, offset: 320)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !5865, file: !5866, line: 34, baseType: !474, size: 32, offset: 352)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !5865, file: !5866, line: 35, baseType: !344, size: 64, offset: 384)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !5865, file: !5866, line: 38, baseType: !474, size: 32, offset: 448)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !5865, file: !5866, line: 40, baseType: !474, size: 32, offset: 480)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !5865, file: !5866, line: 41, baseType: !474, size: 32, offset: 512)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !5865, file: !5866, line: 42, baseType: !474, size: 32, offset: 544)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !5865, file: !5866, line: 43, baseType: !344, size: 64, offset: 576)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !5865, file: !5866, line: 44, baseType: !344, size: 64, offset: 640)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5865, file: !5866, line: 46, baseType: !474, size: 32, offset: 704)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5865, file: !5866, line: 47, baseType: !474, size: 32, offset: 736)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !5865, file: !5866, line: 48, baseType: !344, size: 64, offset: 768)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !5865, file: !5866, line: 49, baseType: !474, size: 32, offset: 832)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !5865, file: !5866, line: 51, baseType: !474, size: 32, offset: 864)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !5865, file: !5866, line: 52, baseType: !474, size: 32, offset: 896)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !5865, file: !5866, line: 53, baseType: !474, size: 32, offset: 928)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !5865, file: !5866, line: 54, baseType: !474, size: 32, offset: 960)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5865, file: !5866, line: 55, baseType: !474, size: 32, offset: 992)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !5865, file: !5866, line: 56, baseType: !474, size: 32, offset: 1024)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !5865, file: !5866, line: 57, baseType: !474, size: 32, offset: 1056)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !5865, file: !5866, line: 58, baseType: !1496, size: 32, offset: 1088)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !5865, file: !5866, line: 59, baseType: !1496, size: 32, offset: 1120)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !5865, file: !5866, line: 60, baseType: !344, size: 64, offset: 1152)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !5865, file: !5866, line: 61, baseType: !474, size: 32, offset: 1216)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5865, file: !5866, line: 63, baseType: !474, size: 32, offset: 1248)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !5858, file: !5850, line: 12, baseType: !5902, size: 64, offset: 64)
!5902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5903, size: 64)
!5903 = !DISubroutineType(types: !5904)
!5904 = !{!43, !5449, !5864, !5373}
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !5858, file: !5850, line: 14, baseType: !5906, size: 64, offset: 128)
!5906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5907, size: 64)
!5907 = !DISubroutineType(types: !5908)
!5908 = !{!43, !5449, !5864}
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !5858, file: !5850, line: 15, baseType: !5650, size: 64, offset: 192)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !5446, file: !5272, line: 570, baseType: !310, size: 128, align: 64, offset: 10944)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !5446, file: !5272, line: 571, baseType: !1106, size: 128, offset: 11072)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !5446, file: !5272, line: 576, baseType: !960, size: 192, offset: 11200)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !5446, file: !5272, line: 578, baseType: !5914, size: 64, offset: 11392)
!5914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5915, size: 64)
!5915 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !5272, line: 578, flags: DIFlagFwdDecl)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !5446, file: !5272, line: 579, baseType: !295, size: 128, offset: 11456)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !5446, file: !5272, line: 580, baseType: !5918, size: 2368, offset: 11584)
!5918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !3955, line: 682, size: 2368, elements: !5919)
!5919 = !{!5920, !5921, !5922, !5943, !5944, !5945, !5946, !5947, !5948, !5949}
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !5918, file: !3955, line: 683, baseType: !2277, size: 64)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !5918, file: !3955, line: 684, baseType: !7, size: 32, offset: 64)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !5918, file: !3955, line: 686, baseType: !5923, size: 448, offset: 128)
!5923 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !5924, line: 26, baseType: !5925)
!5924 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!5925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !5924, line: 16, size: 448, elements: !5926)
!5926 = !{!5927, !5928, !5929, !5930, !5931, !5932, !5937, !5942}
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5925, file: !5924, line: 17, baseType: !735)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !5925, file: !5924, line: 18, baseType: !43, size: 32)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !5925, file: !5924, line: 19, baseType: !43, size: 32, offset: 32)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !5925, file: !5924, line: 20, baseType: !3691, size: 64, offset: 64)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !5925, file: !5924, line: 22, baseType: !576, size: 64, offset: 128)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5925, file: !5924, line: 23, baseType: !5933, size: 64, offset: 192)
!5933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5934, size: 64)
!5934 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !5924, line: 13, baseType: !5935)
!5935 = !DISubroutineType(types: !5936)
!5936 = !{!576, !1996, !576}
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5925, file: !5924, line: 24, baseType: !5938, size: 64, offset: 256)
!5938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5939, size: 64)
!5939 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !5924, line: 14, baseType: !5940)
!5940 = !DISubroutineType(types: !5941)
!5941 = !{null, !576, !576}
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !5925, file: !5924, line: 25, baseType: !1106, size: 128, offset: 320)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !5918, file: !3955, line: 687, baseType: !5923, size: 448, offset: 576)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !5918, file: !3955, line: 689, baseType: !5923, size: 448, offset: 1024)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !5918, file: !3955, line: 690, baseType: !5923, size: 448, offset: 1472)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !5918, file: !3955, line: 697, baseType: !735, offset: 1920)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !5918, file: !3955, line: 698, baseType: !3954, size: 128, offset: 1920)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !5918, file: !3955, line: 699, baseType: !1813, size: 256, offset: 2048)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !5918, file: !3955, line: 700, baseType: !2968, size: 64, offset: 2304)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !5446, file: !5272, line: 582, baseType: !679, size: 64, offset: 13952)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !5446, file: !5272, line: 589, baseType: !546, size: 8, offset: 14016)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !5446, file: !5272, line: 591, baseType: !600, size: 64, offset: 14080)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !5446, file: !5272, line: 594, baseType: !5954, size: 320, offset: 14144)
!5954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 320, elements: !1783)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !3965, file: !3966, line: 191, baseType: !576, size: 64, offset: 7168)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3965, file: !3966, line: 193, baseType: !43, size: 32, offset: 7232)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3965, file: !3966, line: 194, baseType: !323, size: 64, offset: 7296)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !3965, file: !3966, line: 196, baseType: !1168, size: 256, offset: 7360)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !3965, file: !3966, line: 197, baseType: !4024, size: 64, offset: 7616)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !3965, file: !3966, line: 199, baseType: !5961, size: 64, offset: 7680)
!5961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5962, size: 64)
!5962 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !3966, line: 199, flags: DIFlagFwdDecl)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !3965, file: !3966, line: 200, baseType: !394, size: 32, offset: 7744)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !3965, file: !3966, line: 201, baseType: !5965, size: 64, offset: 7808)
!5965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5966, size: 64)
!5966 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !3966, line: 156, flags: DIFlagFwdDecl)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !3965, file: !3966, line: 203, baseType: !4018, size: 512, offset: 7872)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !3965, file: !3966, line: 208, baseType: !43, size: 32, offset: 8384)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3965, file: !3966, line: 209, baseType: !5970, size: 64, offset: 8448)
!5970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5971, size: 64)
!5971 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !3966, line: 157, flags: DIFlagFwdDecl)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !3965, file: !3966, line: 210, baseType: !2321, offset: 8512)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !3959, file: !3960, line: 206, baseType: !7, size: 32, offset: 128)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !3959, file: !3960, line: 210, baseType: !483, size: 16, offset: 160)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !3959, file: !3960, line: 211, baseType: !483, size: 16, offset: 176)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !3959, file: !3960, line: 212, baseType: !483, size: 16, offset: 192)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !3959, file: !3960, line: 213, baseType: !5529, size: 8, offset: 208)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !3959, file: !3960, line: 214, baseType: !1403, size: 8, offset: 216)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !3959, file: !3960, line: 215, baseType: !394, size: 32, offset: 224)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !3959, file: !3960, line: 217, baseType: !5981, size: 192, offset: 256)
!5981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !627, line: 37, size: 192, elements: !5982)
!5982 = !{!5983, !5984, !5985, !5986}
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !5981, file: !627, line: 38, baseType: !3986, size: 64)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !5981, file: !627, line: 40, baseType: !7, size: 32, offset: 64)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !5981, file: !627, line: 42, baseType: !7, size: 32, offset: 96)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !5981, file: !627, line: 44, baseType: !7, size: 32, offset: 128)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !3959, file: !3960, line: 219, baseType: !5988, size: 64, offset: 448)
!5988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5989, size: 64)
!5989 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !3960, line: 19, baseType: !5990)
!5990 = !DISubroutineType(types: !5991)
!5991 = !{null, !3958}
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !3959, file: !3960, line: 221, baseType: !576, size: 64, offset: 512)
!5993 = !DIDerivedType(tag: DW_TAG_member, scope: !3959, file: !3960, line: 240, baseType: !5994, size: 64, offset: 576)
!5994 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3959, file: !3960, line: 240, size: 64, elements: !5995)
!5995 = !{!5996}
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !5994, file: !3960, line: 242, baseType: !5997, size: 64)
!5997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5998, size: 64)
!5998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !3955, line: 313, size: 832, elements: !5999)
!5999 = !{!6000, !6001, !6002, !6003, !6004, !6005, !6006, !6007, !6008, !6010}
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !5998, file: !3955, line: 314, baseType: !3958, size: 64)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !5998, file: !3955, line: 316, baseType: !5981, size: 192, offset: 64)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !5998, file: !3955, line: 318, baseType: !483, size: 16, offset: 256)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !5998, file: !3955, line: 319, baseType: !483, size: 16, offset: 272)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !5998, file: !3955, line: 320, baseType: !483, size: 16, offset: 288)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !5998, file: !3955, line: 321, baseType: !483, size: 16, offset: 304)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !5998, file: !3955, line: 323, baseType: !5981, size: 192, offset: 320)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !5998, file: !3955, line: 325, baseType: !1813, size: 256, offset: 512)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !5998, file: !3955, line: 327, baseType: !6009, size: 64, offset: 768)
!6009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !5998, file: !3955, line: 328, baseType: !6011, offset: 832)
!6011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !626, elements: !320)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !3959, file: !3960, line: 246, baseType: !483, size: 16, offset: 640)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !3959, file: !3960, line: 252, baseType: !483, size: 16, offset: 656)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !3959, file: !3960, line: 254, baseType: !394, size: 32, offset: 672)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !3959, file: !3960, line: 256, baseType: !6009, size: 64, offset: 704)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !3959, file: !3960, line: 258, baseType: !6017, size: 64, offset: 768)
!6017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5918, size: 64)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !3959, file: !3960, line: 265, baseType: !6011, offset: 832)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3954, file: !3955, line: 556, baseType: !3958, size: 64, offset: 64)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1264, file: !1265, line: 1050, baseType: !6021, size: 64, offset: 10688)
!6021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6022, size: 64)
!6022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !5272, line: 1236, size: 320, elements: !6023)
!6023 = !{!6024, !6025, !6026, !6027, !6028}
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !6022, file: !5272, line: 1237, baseType: !295, size: 128)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !6022, file: !5272, line: 1238, baseType: !295, size: 128, offset: 128)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !6022, file: !5272, line: 1239, baseType: !483, size: 16, offset: 256)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !6022, file: !5272, line: 1240, baseType: !546, size: 8, offset: 272)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !6022, file: !5272, line: 1241, baseType: !546, size: 8, offset: 280)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1264, file: !1265, line: 1054, baseType: !6030, size: 64, offset: 10752)
!6030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6031, size: 64)
!6031 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1265, line: 55, flags: DIFlagFwdDecl)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1264, file: !1265, line: 1056, baseType: !5303, size: 64, offset: 10816)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1264, file: !1265, line: 1058, baseType: !5494, size: 64, offset: 10880)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1264, file: !1265, line: 1061, baseType: !6035, size: 64, offset: 10944)
!6035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6036, size: 64)
!6036 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1265, line: 43, flags: DIFlagFwdDecl)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1264, file: !1265, line: 1064, baseType: !323, size: 64, offset: 11008)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1264, file: !1265, line: 1065, baseType: !6039, size: 64, offset: 11072)
!6039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6040, size: 64)
!6040 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3806, line: 14, baseType: !6041)
!6041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3806, line: 12, size: 384, elements: !6042)
!6042 = !{!6043}
!6043 = !DIDerivedType(tag: DW_TAG_member, scope: !6041, file: !3806, line: 13, baseType: !6044, size: 384)
!6044 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6041, file: !3806, line: 13, size: 384, elements: !6045)
!6045 = !{!6046, !6047, !6048, !6049}
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !6044, file: !3806, line: 13, baseType: !43, size: 32)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !6044, file: !3806, line: 13, baseType: !43, size: 32, offset: 32)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !6044, file: !3806, line: 13, baseType: !43, size: 32, offset: 64)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !6044, file: !3806, line: 13, baseType: !6050, size: 256, offset: 128)
!6050 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !6051, line: 32, size: 256, elements: !6052)
!6051 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!6052 = !{!6053, !6058, !6071, !6077, !6086, !6106, !6111}
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !6050, file: !6051, line: 37, baseType: !6054, size: 64)
!6054 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6050, file: !6051, line: 34, size: 64, elements: !6055)
!6055 = !{!6056, !6057}
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !6054, file: !6051, line: 35, baseType: !1516, size: 32)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !6054, file: !6051, line: 36, baseType: !661, size: 32, offset: 32)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !6050, file: !6051, line: 45, baseType: !6059, size: 192)
!6059 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6050, file: !6051, line: 40, size: 192, elements: !6060)
!6060 = !{!6061, !6063, !6064, !6070}
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !6059, file: !6051, line: 41, baseType: !6062, size: 32)
!6062 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !602, line: 95, baseType: !43)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !6059, file: !6051, line: 42, baseType: !43, size: 32, offset: 32)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !6059, file: !6051, line: 43, baseType: !6065, size: 64, offset: 64)
!6065 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !6051, line: 11, baseType: !6066)
!6066 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !6051, line: 8, size: 64, elements: !6067)
!6067 = !{!6068, !6069}
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !6066, file: !6051, line: 9, baseType: !43, size: 32)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !6066, file: !6051, line: 10, baseType: !576, size: 64)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !6059, file: !6051, line: 44, baseType: !43, size: 32, offset: 128)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !6050, file: !6051, line: 52, baseType: !6072, size: 128)
!6072 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6050, file: !6051, line: 48, size: 128, elements: !6073)
!6073 = !{!6074, !6075, !6076}
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !6072, file: !6051, line: 49, baseType: !1516, size: 32)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !6072, file: !6051, line: 50, baseType: !661, size: 32, offset: 32)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !6072, file: !6051, line: 51, baseType: !6065, size: 64, offset: 64)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !6050, file: !6051, line: 61, baseType: !6078, size: 256)
!6078 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6050, file: !6051, line: 55, size: 256, elements: !6079)
!6079 = !{!6080, !6081, !6082, !6083, !6085}
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !6078, file: !6051, line: 56, baseType: !1516, size: 32)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !6078, file: !6051, line: 57, baseType: !661, size: 32, offset: 32)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !6078, file: !6051, line: 58, baseType: !43, size: 32, offset: 64)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !6078, file: !6051, line: 59, baseType: !6084, size: 64, offset: 128)
!6084 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !602, line: 94, baseType: !1023)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !6078, file: !6051, line: 60, baseType: !6084, size: 64, offset: 192)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !6050, file: !6051, line: 95, baseType: !6087, size: 256)
!6087 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6050, file: !6051, line: 64, size: 256, elements: !6088)
!6088 = !{!6089, !6090}
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !6087, file: !6051, line: 65, baseType: !576, size: 64)
!6090 = !DIDerivedType(tag: DW_TAG_member, scope: !6087, file: !6051, line: 77, baseType: !6091, size: 192, offset: 64)
!6091 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6087, file: !6051, line: 77, size: 192, elements: !6092)
!6092 = !{!6093, !6094, !6101}
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !6091, file: !6051, line: 82, baseType: !1252, size: 16)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !6091, file: !6051, line: 88, baseType: !6095, size: 192)
!6095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6091, file: !6051, line: 84, size: 192, elements: !6096)
!6096 = !{!6097, !6099, !6100}
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !6095, file: !6051, line: 85, baseType: !6098, size: 64)
!6098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 64, elements: !1377)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !6095, file: !6051, line: 86, baseType: !576, size: 64, offset: 64)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !6095, file: !6051, line: 87, baseType: !576, size: 64, offset: 128)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !6091, file: !6051, line: 93, baseType: !6102, size: 96)
!6102 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6091, file: !6051, line: 90, size: 96, elements: !6103)
!6103 = !{!6104, !6105}
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !6102, file: !6051, line: 91, baseType: !6098, size: 64)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !6102, file: !6051, line: 92, baseType: !474, size: 32, offset: 64)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !6050, file: !6051, line: 101, baseType: !6107, size: 128)
!6107 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6050, file: !6051, line: 98, size: 128, elements: !6108)
!6108 = !{!6109, !6110}
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !6107, file: !6051, line: 99, baseType: !519, size: 64)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !6107, file: !6051, line: 100, baseType: !43, size: 32, offset: 64)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !6050, file: !6051, line: 108, baseType: !6112, size: 128)
!6112 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6050, file: !6051, line: 104, size: 128, elements: !6113)
!6113 = !{!6114, !6115, !6116}
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !6112, file: !6051, line: 105, baseType: !576, size: 64)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !6112, file: !6051, line: 106, baseType: !43, size: 32, offset: 64)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !6112, file: !6051, line: 107, baseType: !7, size: 32, offset: 96)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1264, file: !1265, line: 1067, baseType: !3873, offset: 11136)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1264, file: !1265, line: 1099, baseType: !6119, size: 64, offset: 11136)
!6119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6120, size: 64)
!6120 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1265, line: 56, flags: DIFlagFwdDecl)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1264, file: !1265, line: 1103, baseType: !295, size: 128, offset: 11200)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1264, file: !1265, line: 1104, baseType: !6123, size: 64, offset: 11328)
!6123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6124, size: 64)
!6124 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1265, line: 46, flags: DIFlagFwdDecl)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1264, file: !1265, line: 1105, baseType: !960, size: 192, offset: 11392)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1264, file: !1265, line: 1106, baseType: !7, size: 32, offset: 11584)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1264, file: !1265, line: 1109, baseType: !6128, size: 128, offset: 11648)
!6128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6129, size: 128, elements: !484)
!6129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6130, size: 64)
!6130 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1265, line: 51, flags: DIFlagFwdDecl)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1264, file: !1265, line: 1110, baseType: !960, size: 192, offset: 11776)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1264, file: !1265, line: 1111, baseType: !295, size: 128, offset: 11968)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1264, file: !1265, line: 1173, baseType: !6134, size: 64, offset: 12096)
!6134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6135, size: 64)
!6135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !6136, line: 62, size: 256, align: 256, elements: !6137)
!6136 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!6137 = !{!6138, !6139, !6140, !6145}
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !6135, file: !6136, line: 75, baseType: !474, size: 32)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !6135, file: !6136, line: 90, baseType: !474, size: 32, offset: 32)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !6135, file: !6136, line: 124, baseType: !6141, size: 64, offset: 64)
!6141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6135, file: !6136, line: 109, size: 64, elements: !6142)
!6142 = !{!6143, !6144}
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !6141, file: !6136, line: 110, baseType: !344, size: 64)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !6141, file: !6136, line: 112, baseType: !344, size: 64)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6135, file: !6136, line: 144, baseType: !474, size: 32, offset: 128)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1264, file: !1265, line: 1174, baseType: !713, size: 32, offset: 12160)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1264, file: !1265, line: 1179, baseType: !323, size: 64, offset: 12224)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1264, file: !1265, line: 1182, baseType: !6149, size: 128, offset: 12288)
!6149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1204, line: 76, size: 128, elements: !6150)
!6150 = !{!6151, !6156, !6157}
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6149, file: !1204, line: 85, baseType: !6152, size: 64)
!6152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !6153, line: 7, size: 64, elements: !6154)
!6153 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!6154 = !{!6155}
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !6152, file: !6153, line: 12, baseType: !1418, size: 64)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !6149, file: !1204, line: 88, baseType: !546, size: 8, offset: 64)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !6149, file: !1204, line: 95, baseType: !546, size: 8, offset: 72)
!6158 = !DIDerivedType(tag: DW_TAG_member, scope: !1264, file: !1265, line: 1184, baseType: !6159, size: 128, offset: 12416)
!6159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1264, file: !1265, line: 1184, size: 128, elements: !6160)
!6160 = !{!6161, !6162}
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !6159, file: !1265, line: 1185, baseType: !1277, size: 32)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6159, file: !1265, line: 1186, baseType: !310, size: 128, align: 64)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1264, file: !1265, line: 1190, baseType: !6164, size: 64, offset: 12544)
!6164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6165, size: 64)
!6165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !6166, line: 57, size: 1088, elements: !6167)
!6166 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!6167 = !{!6168, !6169, !6170, !6171, !6172, !6173, !6174, !6175, !6176, !6177, !6178, !6179, !6180, !6181, !6182, !6192, !6193, !6220}
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6165, file: !6166, line: 58, baseType: !960, size: 192)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !6165, file: !6166, line: 59, baseType: !1106, size: 128, offset: 192)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !6165, file: !6166, line: 59, baseType: !1106, size: 128, offset: 320)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6165, file: !6166, line: 60, baseType: !7, size: 32, offset: 448)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6165, file: !6166, line: 61, baseType: !7, size: 32, offset: 480)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !6165, file: !6166, line: 62, baseType: !7, size: 32, offset: 512)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !6165, file: !6166, line: 63, baseType: !7, size: 32, offset: 544)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !6165, file: !6166, line: 67, baseType: !7, size: 32, offset: 576)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !6165, file: !6166, line: 68, baseType: !7, size: 32, offset: 608)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !6165, file: !6166, line: 69, baseType: !7, size: 32, offset: 640)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !6165, file: !6166, line: 70, baseType: !7, size: 32, offset: 672)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !6165, file: !6166, line: 71, baseType: !7, size: 32, offset: 704)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !6165, file: !6166, line: 72, baseType: !7, size: 32, offset: 736)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !6165, file: !6166, line: 73, baseType: !630, size: 64, offset: 768)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !6165, file: !6166, line: 74, baseType: !6183, size: 64, offset: 832)
!6183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6184, size: 64)
!6184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !645, line: 1314, size: 320, elements: !6185)
!6185 = !{!6186, !6187, !6188, !6189, !6190, !6191}
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !6184, file: !645, line: 1315, baseType: !2983)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !6184, file: !645, line: 1316, baseType: !43, size: 32)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !6184, file: !645, line: 1317, baseType: !43, size: 32, offset: 32)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !6184, file: !645, line: 1318, baseType: !6183, size: 64, offset: 64)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !6184, file: !645, line: 1319, baseType: !1016, size: 64, offset: 128)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !6184, file: !645, line: 1320, baseType: !310, size: 128, align: 64, offset: 192)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !6165, file: !6166, line: 75, baseType: !6183, size: 64, offset: 896)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !6165, file: !6166, line: 76, baseType: !6194, size: 64, offset: 960)
!6194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6195, size: 64)
!6195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !6166, line: 26, size: 320, elements: !6196)
!6196 = !{!6197, !6198, !6199, !6200, !6218, !6219}
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !6195, file: !6166, line: 27, baseType: !630, size: 64)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6195, file: !6166, line: 28, baseType: !7, size: 32, offset: 64)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6195, file: !6166, line: 28, baseType: !7, size: 32, offset: 96)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6195, file: !6166, line: 29, baseType: !6201, size: 64, offset: 128)
!6201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6202, size: 64)
!6202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6203)
!6203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !6166, line: 93, size: 256, elements: !6204)
!6204 = !{!6205, !6209, !6213, !6217}
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !6203, file: !6166, line: 101, baseType: !6206, size: 64)
!6206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6207, size: 64)
!6207 = !DISubroutineType(types: !6208)
!6208 = !{!43, !6164, !6194}
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6203, file: !6166, line: 107, baseType: !6210, size: 64, offset: 64)
!6210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6211, size: 64)
!6211 = !DISubroutineType(types: !6212)
!6212 = !{null, !6164, !6194}
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !6203, file: !6166, line: 117, baseType: !6214, size: 64, offset: 128)
!6214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6215, size: 64)
!6215 = !DISubroutineType(types: !6216)
!6216 = !{!546, !6164, !6194}
!6217 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6203, file: !6166, line: 122, baseType: !6214, size: 64, offset: 192)
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6195, file: !6166, line: 30, baseType: !7, size: 32, offset: 192)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6195, file: !6166, line: 31, baseType: !323, size: 64, offset: 256)
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !6165, file: !6166, line: 77, baseType: !1739, size: 64, offset: 1024)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1264, file: !1265, line: 1192, baseType: !6222, size: 128, offset: 12608)
!6222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1204, line: 64, size: 128, elements: !6223)
!6223 = !{!6224, !6225, !6226}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !6222, file: !1204, line: 65, baseType: !630, size: 64)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6222, file: !1204, line: 67, baseType: !474, size: 32, offset: 64)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6222, file: !1204, line: 68, baseType: !474, size: 32, offset: 96)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1264, file: !1265, line: 1206, baseType: !43, size: 32, offset: 12736)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1264, file: !1265, line: 1207, baseType: !43, size: 32, offset: 12768)
!6229 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1264, file: !1265, line: 1209, baseType: !323, size: 64, offset: 12800)
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1264, file: !1265, line: 1219, baseType: !342, size: 64, offset: 12864)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1264, file: !1265, line: 1220, baseType: !342, size: 64, offset: 12928)
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1264, file: !1265, line: 1317, baseType: !43, size: 32, offset: 12992)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1264, file: !1265, line: 1319, baseType: !1263, size: 64, offset: 13056)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1264, file: !1265, line: 1322, baseType: !6235, size: 64, offset: 13120)
!6235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6236, size: 64)
!6236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !6237, line: 56, size: 512, elements: !6238)
!6237 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!6238 = !{!6239, !6240, !6241, !6242, !6243, !6245, !6246, !6248}
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6236, file: !6237, line: 57, baseType: !6235, size: 64)
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !6236, file: !6237, line: 58, baseType: !576, size: 64, offset: 64)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6236, file: !6237, line: 59, baseType: !323, size: 64, offset: 128)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6236, file: !6237, line: 60, baseType: !323, size: 64, offset: 192)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !6236, file: !6237, line: 61, baseType: !6244, size: 64, offset: 256)
!6244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !6236, file: !6237, line: 62, baseType: !7, size: 32, offset: 320)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !6236, file: !6237, line: 63, baseType: !6247, size: 64, offset: 384)
!6247 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !288, line: 153, baseType: !342)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !6236, file: !6237, line: 64, baseType: !2269, size: 64, offset: 448)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1264, file: !1265, line: 1326, baseType: !1277, size: 32, offset: 13184)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1264, file: !1265, line: 1342, baseType: !576, size: 64, offset: 13248)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1264, file: !1265, line: 1343, baseType: !344, size: 64, offset: 13312)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1264, file: !1265, line: 1344, baseType: !342, size: 64, offset: 13376)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1264, file: !1265, line: 1345, baseType: !344, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1264, file: !1265, line: 1346, baseType: !344, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1264, file: !1265, line: 1347, baseType: !344, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1264, file: !1265, line: 1348, baseType: !310, size: 128, align: 64, offset: 13504)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1264, file: !1265, line: 1358, baseType: !6258, size: 34816, offset: 13824)
!6258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !6259, line: 485, size: 34816, elements: !6260)
!6259 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!6260 = !{!6261, !6279, !6280, !6281, !6282, !6283, !6284, !6285, !6286, !6290, !6291, !6292, !6293, !6294, !6295, !6298, !6299, !6300}
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !6258, file: !6259, line: 487, baseType: !6262, size: 192)
!6262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6263, size: 192, elements: !873)
!6263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !6264, line: 16, size: 64, elements: !6265)
!6264 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!6265 = !{!6266, !6267, !6268, !6269, !6270, !6271, !6272, !6273, !6274, !6275, !6276, !6277, !6278}
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !6263, file: !6264, line: 17, baseType: !1044, size: 16)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !6263, file: !6264, line: 18, baseType: !1044, size: 16, offset: 16)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !6263, file: !6264, line: 19, baseType: !1044, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6263, file: !6264, line: 19, baseType: !1044, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!6270 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !6263, file: !6264, line: 19, baseType: !1044, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!6271 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !6263, file: !6264, line: 19, baseType: !1044, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6263, file: !6264, line: 19, baseType: !1044, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !6263, file: !6264, line: 20, baseType: !1044, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !6263, file: !6264, line: 20, baseType: !1044, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !6263, file: !6264, line: 20, baseType: !1044, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !6263, file: !6264, line: 20, baseType: !1044, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !6263, file: !6264, line: 20, baseType: !1044, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !6263, file: !6264, line: 20, baseType: !1044, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !6258, file: !6259, line: 491, baseType: !323, size: 64, offset: 192)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !6258, file: !6259, line: 495, baseType: !483, size: 16, offset: 256)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !6258, file: !6259, line: 496, baseType: !483, size: 16, offset: 272)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !6258, file: !6259, line: 497, baseType: !483, size: 16, offset: 288)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !6258, file: !6259, line: 498, baseType: !483, size: 16, offset: 304)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !6258, file: !6259, line: 502, baseType: !323, size: 64, offset: 320)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !6258, file: !6259, line: 503, baseType: !323, size: 64, offset: 384)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !6258, file: !6259, line: 514, baseType: !6287, size: 256, offset: 448)
!6287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6288, size: 256, elements: !1208)
!6288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6289, size: 64)
!6289 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !6259, line: 483, flags: DIFlagFwdDecl)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !6258, file: !6259, line: 516, baseType: !323, size: 64, offset: 704)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !6258, file: !6259, line: 518, baseType: !323, size: 64, offset: 768)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !6258, file: !6259, line: 520, baseType: !323, size: 64, offset: 832)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !6258, file: !6259, line: 521, baseType: !323, size: 64, offset: 896)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !6258, file: !6259, line: 522, baseType: !323, size: 64, offset: 960)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !6258, file: !6259, line: 528, baseType: !6296, size: 64, offset: 1024)
!6296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6297, size: 64)
!6297 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !6259, line: 10, flags: DIFlagFwdDecl)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !6258, file: !6259, line: 535, baseType: !323, size: 64, offset: 1088)
!6299 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !6258, file: !6259, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !6258, file: !6259, line: 540, baseType: !6301, size: 33280, offset: 1536)
!6301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !6302, line: 317, size: 33280, elements: !6303)
!6302 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!6303 = !{!6304, !6305, !6306}
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !6301, file: !6302, line: 330, baseType: !7, size: 32)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !6301, file: !6302, line: 337, baseType: !323, size: 64, offset: 64)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6301, file: !6302, line: 348, baseType: !6307, size: 32768, offset: 512)
!6307 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !6302, line: 304, size: 32768, elements: !6308)
!6308 = !{!6309, !6322, !6357, !6407, !6419}
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !6307, file: !6302, line: 305, baseType: !6310, size: 896)
!6310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !6302, line: 12, size: 896, elements: !6311)
!6311 = !{!6312, !6313, !6314, !6315, !6316, !6317, !6318, !6319, !6321}
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6310, file: !6302, line: 13, baseType: !713, size: 32)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !6310, file: !6302, line: 14, baseType: !713, size: 32, offset: 32)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !6310, file: !6302, line: 15, baseType: !713, size: 32, offset: 64)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !6310, file: !6302, line: 16, baseType: !713, size: 32, offset: 96)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !6310, file: !6302, line: 17, baseType: !713, size: 32, offset: 128)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !6310, file: !6302, line: 18, baseType: !713, size: 32, offset: 160)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !6310, file: !6302, line: 19, baseType: !713, size: 32, offset: 192)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !6310, file: !6302, line: 22, baseType: !6320, size: 640, offset: 224)
!6320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 640, elements: !2664)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6310, file: !6302, line: 25, baseType: !713, size: 32, offset: 864)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !6307, file: !6302, line: 306, baseType: !6323, size: 4096, align: 128)
!6323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !6302, line: 34, size: 4096, align: 128, elements: !6324)
!6324 = !{!6325, !6326, !6327, !6328, !6329, !6344, !6345, !6346, !6348, !6350, !6352}
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6323, file: !6302, line: 35, baseType: !1044, size: 16)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !6323, file: !6302, line: 36, baseType: !1044, size: 16, offset: 16)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !6323, file: !6302, line: 37, baseType: !1044, size: 16, offset: 32)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !6323, file: !6302, line: 38, baseType: !1044, size: 16, offset: 48)
!6329 = !DIDerivedType(tag: DW_TAG_member, scope: !6323, file: !6302, line: 39, baseType: !6330, size: 128, offset: 64)
!6330 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6323, file: !6302, line: 39, size: 128, elements: !6331)
!6331 = !{!6332, !6337}
!6332 = !DIDerivedType(tag: DW_TAG_member, scope: !6330, file: !6302, line: 40, baseType: !6333, size: 128)
!6333 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6330, file: !6302, line: 40, size: 128, elements: !6334)
!6334 = !{!6335, !6336}
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !6333, file: !6302, line: 41, baseType: !342, size: 64)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !6333, file: !6302, line: 42, baseType: !342, size: 64, offset: 64)
!6337 = !DIDerivedType(tag: DW_TAG_member, scope: !6330, file: !6302, line: 44, baseType: !6338, size: 128)
!6338 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6330, file: !6302, line: 44, size: 128, elements: !6339)
!6339 = !{!6340, !6341, !6342, !6343}
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !6338, file: !6302, line: 45, baseType: !713, size: 32)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !6338, file: !6302, line: 46, baseType: !713, size: 32, offset: 32)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !6338, file: !6302, line: 47, baseType: !713, size: 32, offset: 64)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !6338, file: !6302, line: 48, baseType: !713, size: 32, offset: 96)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !6323, file: !6302, line: 51, baseType: !713, size: 32, offset: 192)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !6323, file: !6302, line: 52, baseType: !713, size: 32, offset: 224)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !6323, file: !6302, line: 55, baseType: !6347, size: 1024, offset: 256)
!6347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 1024, elements: !722)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !6323, file: !6302, line: 58, baseType: !6349, size: 2048, offset: 1280)
!6349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 2048, elements: !3918)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !6323, file: !6302, line: 60, baseType: !6351, size: 384, offset: 3328)
!6351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 384, elements: !3044)
!6352 = !DIDerivedType(tag: DW_TAG_member, scope: !6323, file: !6302, line: 62, baseType: !6353, size: 384, offset: 3712)
!6353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6323, file: !6302, line: 62, size: 384, elements: !6354)
!6354 = !{!6355, !6356}
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !6353, file: !6302, line: 63, baseType: !6351, size: 384)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !6353, file: !6302, line: 64, baseType: !6351, size: 384)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !6307, file: !6302, line: 307, baseType: !6358, size: 1088)
!6358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !6302, line: 79, size: 1088, elements: !6359)
!6359 = !{!6360, !6361, !6362, !6363, !6364, !6365, !6366, !6367, !6368, !6369, !6370, !6371, !6372, !6373, !6374, !6406}
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !6358, file: !6302, line: 80, baseType: !713, size: 32)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !6358, file: !6302, line: 81, baseType: !713, size: 32, offset: 32)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !6358, file: !6302, line: 82, baseType: !713, size: 32, offset: 64)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !6358, file: !6302, line: 83, baseType: !713, size: 32, offset: 96)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !6358, file: !6302, line: 84, baseType: !713, size: 32, offset: 128)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !6358, file: !6302, line: 85, baseType: !713, size: 32, offset: 160)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !6358, file: !6302, line: 86, baseType: !713, size: 32, offset: 192)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !6358, file: !6302, line: 88, baseType: !6320, size: 640, offset: 224)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !6358, file: !6302, line: 89, baseType: !1403, size: 8, offset: 864)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !6358, file: !6302, line: 90, baseType: !1403, size: 8, offset: 872)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !6358, file: !6302, line: 91, baseType: !1403, size: 8, offset: 880)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !6358, file: !6302, line: 92, baseType: !1403, size: 8, offset: 888)
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !6358, file: !6302, line: 93, baseType: !1403, size: 8, offset: 896)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !6358, file: !6302, line: 94, baseType: !1403, size: 8, offset: 904)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6358, file: !6302, line: 95, baseType: !6375, size: 64, offset: 960)
!6375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6376, size: 64)
!6376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !6377, line: 11, size: 128, elements: !6378)
!6377 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!6378 = !{!6379, !6380}
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !6376, file: !6377, line: 12, baseType: !519, size: 64)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !6376, file: !6377, line: 13, baseType: !6381, size: 64, offset: 64)
!6381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6382, size: 64)
!6382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !6383, line: 56, size: 1344, elements: !6384)
!6383 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!6384 = !{!6385, !6386, !6387, !6388, !6389, !6390, !6391, !6392, !6393, !6394, !6395, !6396, !6397, !6398, !6399, !6400, !6401, !6402, !6403, !6404, !6405}
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6382, file: !6383, line: 61, baseType: !323, size: 64)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6382, file: !6383, line: 62, baseType: !323, size: 64, offset: 64)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !6382, file: !6383, line: 63, baseType: !323, size: 64, offset: 128)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6382, file: !6383, line: 64, baseType: !323, size: 64, offset: 192)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !6382, file: !6383, line: 65, baseType: !323, size: 64, offset: 256)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !6382, file: !6383, line: 66, baseType: !323, size: 64, offset: 320)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !6382, file: !6383, line: 68, baseType: !323, size: 64, offset: 384)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !6382, file: !6383, line: 69, baseType: !323, size: 64, offset: 448)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !6382, file: !6383, line: 70, baseType: !323, size: 64, offset: 512)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !6382, file: !6383, line: 71, baseType: !323, size: 64, offset: 576)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !6382, file: !6383, line: 72, baseType: !323, size: 64, offset: 640)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !6382, file: !6383, line: 73, baseType: !323, size: 64, offset: 704)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !6382, file: !6383, line: 74, baseType: !323, size: 64, offset: 768)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !6382, file: !6383, line: 75, baseType: !323, size: 64, offset: 832)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !6382, file: !6383, line: 76, baseType: !323, size: 64, offset: 896)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !6382, file: !6383, line: 81, baseType: !323, size: 64, offset: 960)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6382, file: !6383, line: 83, baseType: !323, size: 64, offset: 1024)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !6382, file: !6383, line: 84, baseType: !323, size: 64, offset: 1088)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6382, file: !6383, line: 85, baseType: !323, size: 64, offset: 1152)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !6382, file: !6383, line: 86, baseType: !323, size: 64, offset: 1216)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !6382, file: !6383, line: 87, baseType: !323, size: 64, offset: 1280)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !6358, file: !6302, line: 96, baseType: !713, size: 32, offset: 1024)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !6307, file: !6302, line: 308, baseType: !6408, size: 4608, align: 512)
!6408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !6302, line: 289, size: 4608, align: 512, elements: !6409)
!6409 = !{!6410, !6411, !6418}
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !6408, file: !6302, line: 290, baseType: !6323, size: 4096, align: 128)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !6408, file: !6302, line: 291, baseType: !6412, size: 512, offset: 4096)
!6412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !6302, line: 268, size: 512, elements: !6413)
!6413 = !{!6414, !6415, !6416}
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !6412, file: !6302, line: 269, baseType: !342, size: 64)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !6412, file: !6302, line: 270, baseType: !342, size: 64, offset: 64)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6412, file: !6302, line: 271, baseType: !6417, size: 384, offset: 128)
!6417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 384, elements: !1677)
!6418 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !6408, file: !6302, line: 292, baseType: !3067, offset: 4608)
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !6307, file: !6302, line: 309, baseType: !6420, size: 32768)
!6420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 32768, elements: !6421)
!6421 = !{!6422}
!6422 = !DISubrange(count: 4096)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1260, file: !632, line: 378, baseType: !6424, size: 64, offset: 64)
!6424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1256, file: !632, line: 384, baseType: !1553, size: 192, offset: 192)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1135, file: !632, line: 500, baseType: !735, offset: 6656)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1135, file: !632, line: 501, baseType: !6428, size: 64, offset: 6656)
!6428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6429, size: 64)
!6429 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !632, line: 387, flags: DIFlagFwdDecl)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1135, file: !632, line: 516, baseType: !1765, size: 64, offset: 6720)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1135, file: !632, line: 519, baseType: !1016, size: 64, offset: 6784)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1135, file: !632, line: 521, baseType: !6433, size: 64, offset: 6848)
!6433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6434, size: 64)
!6434 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !632, line: 521, flags: DIFlagFwdDecl)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1135, file: !632, line: 545, baseType: !394, size: 32, offset: 6912)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1135, file: !632, line: 548, baseType: !546, size: 8, offset: 6944)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1135, file: !632, line: 550, baseType: !6438, offset: 6952)
!6438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !6439, line: 142, elements: !749)
!6439 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1135, file: !632, line: 554, baseType: !1813, size: 256, offset: 6976)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1135, file: !632, line: 557, baseType: !713, size: 32, offset: 7232)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1132, file: !632, line: 565, baseType: !6443, offset: 7296)
!6443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, elements: !320)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1122, file: !632, line: 333, baseType: !6445, size: 64, offset: 576)
!6445 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1154, line: 284, baseType: !6446)
!6446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1154, line: 284, size: 64, elements: !6447)
!6447 = !{!6448}
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !6446, file: !1154, line: 284, baseType: !6449, size: 64)
!6449 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1159, line: 19, baseType: !323)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1122, file: !632, line: 334, baseType: !323, size: 64, offset: 640)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1122, file: !632, line: 343, baseType: !6452, size: 256, offset: 704)
!6452 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1122, file: !632, line: 340, size: 256, elements: !6453)
!6453 = !{!6454, !6455}
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !6452, file: !632, line: 341, baseType: !444, size: 192, align: 64)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !6452, file: !632, line: 342, baseType: !323, size: 64, offset: 192)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1122, file: !632, line: 351, baseType: !295, size: 128, offset: 960)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1122, file: !632, line: 353, baseType: !6458, size: 64, offset: 1088)
!6458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6459, size: 64)
!6459 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !632, line: 353, flags: DIFlagFwdDecl)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1122, file: !632, line: 356, baseType: !4253, size: 64, offset: 1152)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1122, file: !632, line: 359, baseType: !323, size: 64, offset: 1216)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1122, file: !632, line: 361, baseType: !1016, size: 64, offset: 1280)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1122, file: !632, line: 362, baseType: !576, size: 64, offset: 1344)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1122, file: !632, line: 365, baseType: !382, size: 64, offset: 1408)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1122, file: !632, line: 373, baseType: !6466, offset: 1472)
!6466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !632, line: 296, elements: !749)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1009, file: !645, line: 1836, baseType: !323, size: 64, offset: 832)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1009, file: !645, line: 1837, baseType: !6469, size: 64, offset: 896)
!6469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6470, size: 64)
!6470 = !DISubroutineType(types: !6471)
!6471 = !{!43, !648, !1016}
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1009, file: !645, line: 1838, baseType: !6473, size: 64, offset: 960)
!6473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6474, size: 64)
!6474 = !DISubroutineType(types: !6475)
!6475 = !{!43, !1016, !6476}
!6476 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !645, line: 1007, baseType: !576)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1009, file: !645, line: 1839, baseType: !6469, size: 64, offset: 1024)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1009, file: !645, line: 1840, baseType: !6479, size: 64, offset: 1088)
!6479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6480, size: 64)
!6480 = !DISubroutineType(types: !6481)
!6481 = !{!43, !1016, !830, !830, !43}
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1009, file: !645, line: 1841, baseType: !6483, size: 64, offset: 1152)
!6483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6484, size: 64)
!6484 = !DISubroutineType(types: !6485)
!6485 = !{!43, !43, !1016, !43}
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1009, file: !645, line: 1842, baseType: !6487, size: 64, offset: 1216)
!6487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6488, size: 64)
!6488 = !DISubroutineType(types: !6489)
!6489 = !{!43, !1016, !43, !6490}
!6490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6491, size: 64)
!6491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !645, line: 1062, size: 1664, elements: !6492)
!6492 = !{!6493, !6494, !6495, !6496, !6497, !6498, !6499, !6500, !6501, !6502, !6503, !6504, !6505, !6506, !6507, !6508, !6509, !6510, !6523, !6554}
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !6491, file: !645, line: 1063, baseType: !6490, size: 64)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !6491, file: !645, line: 1064, baseType: !295, size: 128, offset: 64)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !6491, file: !645, line: 1065, baseType: !287, size: 128, offset: 192)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !6491, file: !645, line: 1066, baseType: !295, size: 128, offset: 320)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !6491, file: !645, line: 1069, baseType: !295, size: 128, offset: 448)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !6491, file: !645, line: 1072, baseType: !6476, size: 64, offset: 576)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !6491, file: !645, line: 1073, baseType: !7, size: 32, offset: 640)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !6491, file: !645, line: 1074, baseType: !500, size: 8, offset: 672)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !6491, file: !645, line: 1075, baseType: !7, size: 32, offset: 704)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !6491, file: !645, line: 1076, baseType: !43, size: 32, offset: 736)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !6491, file: !645, line: 1077, baseType: !1106, size: 128, offset: 768)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !6491, file: !645, line: 1078, baseType: !1016, size: 64, offset: 896)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !6491, file: !645, line: 1079, baseType: !830, size: 64, offset: 960)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !6491, file: !645, line: 1080, baseType: !830, size: 64, offset: 1024)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !6491, file: !645, line: 1082, baseType: !6183, size: 64, offset: 1088)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !6491, file: !645, line: 1084, baseType: !323, size: 64, offset: 1152)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !6491, file: !645, line: 1085, baseType: !323, size: 64, offset: 1216)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !6491, file: !645, line: 1087, baseType: !6511, size: 64, offset: 1280)
!6511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6512, size: 64)
!6512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6513)
!6513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !645, line: 1011, size: 128, elements: !6514)
!6514 = !{!6515, !6519}
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !6513, file: !645, line: 1012, baseType: !6516, size: 64)
!6516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6517, size: 64)
!6517 = !DISubroutineType(types: !6518)
!6518 = !{null, !6490, !6490}
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !6513, file: !645, line: 1013, baseType: !6520, size: 64, offset: 64)
!6520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6521, size: 64)
!6521 = !DISubroutineType(types: !6522)
!6522 = !{null, !6490}
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !6491, file: !645, line: 1088, baseType: !6524, size: 64, offset: 1344)
!6524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6525, size: 64)
!6525 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6526)
!6526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !645, line: 1016, size: 512, elements: !6527)
!6527 = !{!6528, !6532, !6536, !6537, !6541, !6545, !6549, !6553}
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !6526, file: !645, line: 1017, baseType: !6529, size: 64)
!6529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6530, size: 64)
!6530 = !DISubroutineType(types: !6531)
!6531 = !{!6476, !6476}
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !6526, file: !645, line: 1018, baseType: !6533, size: 64, offset: 64)
!6533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6534, size: 64)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{null, !6476}
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !6526, file: !645, line: 1019, baseType: !6520, size: 64, offset: 128)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !6526, file: !645, line: 1020, baseType: !6538, size: 64, offset: 192)
!6538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6539, size: 64)
!6539 = !DISubroutineType(types: !6540)
!6540 = !{!43, !6490, !43}
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !6526, file: !645, line: 1021, baseType: !6542, size: 64, offset: 256)
!6542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6543, size: 64)
!6543 = !DISubroutineType(types: !6544)
!6544 = !{!546, !6490}
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !6526, file: !645, line: 1022, baseType: !6546, size: 64, offset: 320)
!6546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6547, size: 64)
!6547 = !DISubroutineType(types: !6548)
!6548 = !{!43, !6490, !43, !298}
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !6526, file: !645, line: 1023, baseType: !6550, size: 64, offset: 384)
!6550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6551, size: 64)
!6551 = !DISubroutineType(types: !6552)
!6552 = !{null, !6490, !3691}
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !6526, file: !645, line: 1024, baseType: !6542, size: 64, offset: 448)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !6491, file: !645, line: 1097, baseType: !6555, size: 256, offset: 1408)
!6555 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6491, file: !645, line: 1089, size: 256, elements: !6556)
!6556 = !{!6557, !6566, !6572}
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !6555, file: !645, line: 1090, baseType: !6558, size: 256)
!6558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !6559, line: 10, size: 256, elements: !6560)
!6559 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!6560 = !{!6561, !6562, !6565}
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6558, file: !6559, line: 11, baseType: !713, size: 32)
!6562 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6558, file: !6559, line: 12, baseType: !6563, size: 64, offset: 64)
!6563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6564, size: 64)
!6564 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !6559, line: 5, flags: DIFlagFwdDecl)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6558, file: !6559, line: 13, baseType: !295, size: 128, offset: 128)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !6555, file: !645, line: 1091, baseType: !6567, size: 64)
!6567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !6559, line: 17, size: 64, elements: !6568)
!6568 = !{!6569}
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6567, file: !6559, line: 18, baseType: !6570, size: 64)
!6570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6571, size: 64)
!6571 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !6559, line: 16, flags: DIFlagFwdDecl)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !6555, file: !645, line: 1096, baseType: !6573, size: 192)
!6573 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6555, file: !645, line: 1092, size: 192, elements: !6574)
!6574 = !{!6575, !6576, !6577}
!6575 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6573, file: !645, line: 1093, baseType: !295, size: 128)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6573, file: !645, line: 1094, baseType: !43, size: 32, offset: 128)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !6573, file: !645, line: 1095, baseType: !7, size: 32, offset: 160)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1009, file: !645, line: 1843, baseType: !6579, size: 64, offset: 1280)
!6579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6580, size: 64)
!6580 = !DISubroutineType(types: !6581)
!6581 = !{!1021, !1016, !630, !43, !600, !975, !43}
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1009, file: !645, line: 1844, baseType: !1144, size: 64, offset: 1344)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1009, file: !645, line: 1845, baseType: !6584, size: 64, offset: 1408)
!6584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6585, size: 64)
!6585 = !DISubroutineType(types: !6586)
!6586 = !{!43, !43}
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1009, file: !645, line: 1846, baseType: !6487, size: 64, offset: 1472)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1009, file: !645, line: 1847, baseType: !6589, size: 64, offset: 1536)
!6589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6590, size: 64)
!6590 = !DISubroutineType(types: !6591)
!6591 = !{!1021, !6164, !1016, !975, !600, !7}
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1009, file: !645, line: 1848, baseType: !6593, size: 64, offset: 1600)
!6593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6594, size: 64)
!6594 = !DISubroutineType(types: !6595)
!6595 = !{!1021, !1016, !975, !6164, !600, !7}
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1009, file: !645, line: 1849, baseType: !6597, size: 64, offset: 1664)
!6597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6598, size: 64)
!6598 = !DISubroutineType(types: !6599)
!6599 = !{!43, !1016, !519, !6600, !3691}
!6600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6490, size: 64)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1009, file: !645, line: 1850, baseType: !6602, size: 64, offset: 1728)
!6602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6603, size: 64)
!6603 = !DISubroutineType(types: !6604)
!6604 = !{!519, !1016, !43, !830, !830}
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1009, file: !645, line: 1852, baseType: !6606, size: 64, offset: 1792)
!6606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6607, size: 64)
!6607 = !DISubroutineType(types: !6608)
!6608 = !{null, !948, !1016}
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1009, file: !645, line: 1856, baseType: !6610, size: 64, offset: 1856)
!6610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6611, size: 64)
!6611 = !DISubroutineType(types: !6612)
!6612 = !{!1021, !1016, !830, !1016, !830, !600, !7}
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1009, file: !645, line: 1858, baseType: !6614, size: 64, offset: 1920)
!6614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6615, size: 64)
!6615 = !DISubroutineType(types: !6616)
!6616 = !{!830, !1016, !830, !1016, !830, !830, !7}
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1009, file: !645, line: 1861, baseType: !6479, size: 64, offset: 1984)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !992, file: !645, line: 929, baseType: !735, offset: 384)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !992, file: !645, line: 930, baseType: !6620, size: 32, offset: 384)
!6620 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !645, line: 296, baseType: !7, size: 32, elements: !6621)
!6621 = !{!6622, !6623, !6624, !6625, !6626, !6627}
!6622 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!6623 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!6624 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!6625 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!6626 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!6627 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !992, file: !645, line: 931, baseType: !382, size: 64, offset: 448)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !992, file: !645, line: 932, baseType: !7, size: 32, offset: 512)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !992, file: !645, line: 933, baseType: !5373, size: 32, offset: 544)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !992, file: !645, line: 934, baseType: !960, size: 192, offset: 576)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !992, file: !645, line: 935, baseType: !830, size: 64, offset: 768)
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !992, file: !645, line: 936, baseType: !6634, size: 192, offset: 832)
!6634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !645, line: 885, size: 192, elements: !6635)
!6635 = !{!6636, !6637, !6638, !6646, !6647, !6648}
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6634, file: !645, line: 886, baseType: !2983)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !6634, file: !645, line: 887, baseType: !1527, size: 64)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !6634, file: !645, line: 888, baseType: !6639, size: 32, offset: 64)
!6639 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !1529, line: 9, baseType: !7, size: 32, elements: !6640)
!6640 = !{!6641, !6642, !6643, !6644, !6645}
!6641 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!6642 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!6643 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!6644 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!6645 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6634, file: !645, line: 889, baseType: !655, size: 32, offset: 96)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !6634, file: !645, line: 889, baseType: !655, size: 32, offset: 128)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !6634, file: !645, line: 890, baseType: !43, size: 32, offset: 160)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !992, file: !645, line: 937, baseType: !1598, size: 64, offset: 1024)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !992, file: !645, line: 938, baseType: !6651, size: 256, offset: 1088)
!6651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !645, line: 896, size: 256, elements: !6652)
!6652 = !{!6653, !6654, !6655, !6656, !6657, !6658}
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6651, file: !645, line: 897, baseType: !323, size: 64)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6651, file: !645, line: 898, baseType: !7, size: 32, offset: 64)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !6651, file: !645, line: 899, baseType: !7, size: 32, offset: 96)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !6651, file: !645, line: 902, baseType: !7, size: 32, offset: 128)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !6651, file: !645, line: 903, baseType: !7, size: 32, offset: 160)
!6658 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !6651, file: !645, line: 904, baseType: !830, size: 64, offset: 192)
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !992, file: !645, line: 940, baseType: !342, size: 64, offset: 1344)
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !992, file: !645, line: 945, baseType: !576, size: 64, offset: 1408)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !992, file: !645, line: 949, baseType: !295, size: 128, offset: 1472)
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !992, file: !645, line: 950, baseType: !295, size: 128, offset: 1600)
!6663 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !992, file: !645, line: 952, baseType: !643, size: 64, offset: 1728)
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !992, file: !645, line: 953, baseType: !6665, size: 32, offset: 1792)
!6665 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !6666, line: 8, baseType: !713)
!6666 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !992, file: !645, line: 954, baseType: !6665, size: 32, offset: 1824)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !949, file: !950, line: 28, baseType: !576, size: 64, offset: 832)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !881, file: !645, line: 1955, baseType: !945, size: 64, offset: 1088)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !881, file: !645, line: 1956, baseType: !945, size: 64, offset: 1152)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !881, file: !645, line: 1957, baseType: !945, size: 64, offset: 1216)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !881, file: !645, line: 1963, baseType: !6673, size: 64, offset: 1280)
!6673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6674, size: 64)
!6674 = !DISubroutineType(types: !6675)
!6675 = !{!43, !820, !630, !1996}
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !881, file: !645, line: 1964, baseType: !6677, size: 64, offset: 1344)
!6677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6678, size: 64)
!6678 = !DISubroutineType(types: !6679)
!6679 = !{!519, !820, !6680}
!6680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6681, size: 64)
!6681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !6682, line: 12, size: 256, elements: !6683)
!6682 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!6683 = !{!6684, !6685, !6686, !6687, !6688}
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !6681, file: !6682, line: 13, baseType: !1996, size: 32)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !6681, file: !6682, line: 16, baseType: !43, size: 32, offset: 32)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !6681, file: !6682, line: 23, baseType: !323, size: 64, offset: 64)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !6681, file: !6682, line: 30, baseType: !323, size: 64, offset: 128)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !6681, file: !6682, line: 33, baseType: !6689, size: 64, offset: 192)
!6689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6690, size: 64)
!6690 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !632, line: 27, flags: DIFlagFwdDecl)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !881, file: !645, line: 1966, baseType: !6677, size: 64, offset: 1408)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !821, file: !645, line: 1424, baseType: !6693, size: 64, offset: 448)
!6693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6694, size: 64)
!6694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6695)
!6695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !6696, line: 322, size: 704, elements: !6697)
!6696 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!6697 = !{!6698, !6749, !6753, !6757, !6758, !6759, !6760, !6761, !6766, !6771, !6775}
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !6695, file: !6696, line: 323, baseType: !6699, size: 64)
!6699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6700, size: 64)
!6700 = !DISubroutineType(types: !6701)
!6701 = !{!43, !6702}
!6702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6703, size: 64)
!6703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !6696, line: 294, size: 1600, elements: !6704)
!6704 = !{!6705, !6706, !6707, !6708, !6709, !6710, !6711, !6712, !6713, !6734, !6735, !6736}
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !6703, file: !6696, line: 295, baseType: !287, size: 128)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !6703, file: !6696, line: 296, baseType: !295, size: 128, offset: 128)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !6703, file: !6696, line: 297, baseType: !295, size: 128, offset: 256)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !6703, file: !6696, line: 298, baseType: !295, size: 128, offset: 384)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !6703, file: !6696, line: 299, baseType: !960, size: 192, offset: 512)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !6703, file: !6696, line: 300, baseType: !735, offset: 704)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !6703, file: !6696, line: 301, baseType: !394, size: 32, offset: 704)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !6703, file: !6696, line: 302, baseType: !820, size: 64, offset: 768)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !6703, file: !6696, line: 303, baseType: !6714, size: 64, offset: 832)
!6714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !6696, line: 68, size: 64, elements: !6715)
!6715 = !{!6716, !6728}
!6716 = !DIDerivedType(tag: DW_TAG_member, scope: !6714, file: !6696, line: 69, baseType: !6717, size: 32)
!6717 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6714, file: !6696, line: 69, size: 32, elements: !6718)
!6718 = !{!6719, !6720, !6721}
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6717, file: !6696, line: 70, baseType: !655, size: 32)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6717, file: !6696, line: 71, baseType: !663, size: 32)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !6717, file: !6696, line: 72, baseType: !6722, size: 32)
!6722 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !6723, line: 24, baseType: !6724)
!6723 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!6724 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6723, line: 22, size: 32, elements: !6725)
!6725 = !{!6726}
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !6724, file: !6723, line: 23, baseType: !6727, size: 32)
!6727 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !6723, line: 20, baseType: !661)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6714, file: !6696, line: 74, baseType: !6729, size: 32, offset: 32)
!6729 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !6696, line: 54, baseType: !7, size: 32, elements: !6730)
!6730 = !{!6731, !6732, !6733}
!6731 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!6732 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!6733 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !6703, file: !6696, line: 304, baseType: !830, size: 64, offset: 896)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !6703, file: !6696, line: 305, baseType: !323, size: 64, offset: 960)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !6703, file: !6696, line: 306, baseType: !6737, size: 576, offset: 1024)
!6737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !6696, line: 205, size: 576, elements: !6738)
!6738 = !{!6739, !6741, !6742, !6743, !6744, !6745, !6746, !6747, !6748}
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !6737, file: !6696, line: 206, baseType: !6740, size: 64)
!6740 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !6696, line: 66, baseType: !390)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !6737, file: !6696, line: 207, baseType: !6740, size: 64, offset: 64)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !6737, file: !6696, line: 208, baseType: !6740, size: 64, offset: 128)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !6737, file: !6696, line: 209, baseType: !6740, size: 64, offset: 192)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !6737, file: !6696, line: 210, baseType: !6740, size: 64, offset: 256)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !6737, file: !6696, line: 211, baseType: !6740, size: 64, offset: 320)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !6737, file: !6696, line: 212, baseType: !6740, size: 64, offset: 384)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !6737, file: !6696, line: 213, baseType: !1648, size: 64, offset: 448)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !6737, file: !6696, line: 214, baseType: !1648, size: 64, offset: 512)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !6695, file: !6696, line: 324, baseType: !6750, size: 64, offset: 64)
!6750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6751, size: 64)
!6751 = !DISubroutineType(types: !6752)
!6752 = !{!6702, !820, !43}
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !6695, file: !6696, line: 325, baseType: !6754, size: 64, offset: 128)
!6754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6755, size: 64)
!6755 = !DISubroutineType(types: !6756)
!6756 = !{null, !6702}
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !6695, file: !6696, line: 326, baseType: !6699, size: 64, offset: 192)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !6695, file: !6696, line: 327, baseType: !6699, size: 64, offset: 256)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !6695, file: !6696, line: 328, baseType: !6699, size: 64, offset: 320)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !6695, file: !6696, line: 329, baseType: !923, size: 64, offset: 384)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !6695, file: !6696, line: 332, baseType: !6762, size: 64, offset: 448)
!6762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6763, size: 64)
!6763 = !DISubroutineType(types: !6764)
!6764 = !{!6765, !648}
!6765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6740, size: 64)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !6695, file: !6696, line: 333, baseType: !6767, size: 64, offset: 512)
!6767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6768, size: 64)
!6768 = !DISubroutineType(types: !6769)
!6769 = !{!43, !648, !6770}
!6770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6722, size: 64)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !6695, file: !6696, line: 335, baseType: !6772, size: 64, offset: 576)
!6772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6773, size: 64)
!6773 = !DISubroutineType(types: !6774)
!6774 = !{!43, !648, !6765}
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6695, file: !6696, line: 337, baseType: !6776, size: 64, offset: 640)
!6776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6777, size: 64)
!6777 = !DISubroutineType(types: !6778)
!6778 = !{!43, !820, !6779}
!6779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6714, size: 64)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !821, file: !645, line: 1425, baseType: !6781, size: 64, offset: 512)
!6781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6782, size: 64)
!6782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6783)
!6783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !6696, line: 428, size: 704, elements: !6784)
!6784 = !{!6785, !6789, !6790, !6794, !6795, !6796, !6811, !6834, !6838, !6839, !6862}
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !6783, file: !6696, line: 429, baseType: !6786, size: 64)
!6786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6787, size: 64)
!6787 = !DISubroutineType(types: !6788)
!6788 = !{!43, !820, !43, !43, !811}
!6789 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !6783, file: !6696, line: 430, baseType: !923, size: 64, offset: 64)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !6783, file: !6696, line: 431, baseType: !6791, size: 64, offset: 128)
!6791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6792, size: 64)
!6792 = !DISubroutineType(types: !6793)
!6793 = !{!43, !820, !7}
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !6783, file: !6696, line: 432, baseType: !6791, size: 64, offset: 192)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !6783, file: !6696, line: 433, baseType: !923, size: 64, offset: 256)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !6783, file: !6696, line: 434, baseType: !6797, size: 64, offset: 320)
!6797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6798, size: 64)
!6798 = !DISubroutineType(types: !6799)
!6799 = !{!43, !820, !43, !6800}
!6800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6801, size: 64)
!6801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !6696, line: 415, size: 256, elements: !6802)
!6802 = !{!6803, !6804, !6805, !6806, !6807, !6808, !6809, !6810}
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !6801, file: !6696, line: 416, baseType: !43, size: 32)
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !6801, file: !6696, line: 417, baseType: !7, size: 32, offset: 32)
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !6801, file: !6696, line: 418, baseType: !7, size: 32, offset: 64)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !6801, file: !6696, line: 420, baseType: !7, size: 32, offset: 96)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !6801, file: !6696, line: 421, baseType: !7, size: 32, offset: 128)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !6801, file: !6696, line: 422, baseType: !7, size: 32, offset: 160)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !6801, file: !6696, line: 423, baseType: !7, size: 32, offset: 192)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !6801, file: !6696, line: 424, baseType: !7, size: 32, offset: 224)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !6783, file: !6696, line: 435, baseType: !6812, size: 64, offset: 384)
!6812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6813, size: 64)
!6813 = !DISubroutineType(types: !6814)
!6814 = !{!43, !820, !6714, !6815}
!6815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6816, size: 64)
!6816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !6696, line: 343, size: 960, elements: !6817)
!6817 = !{!6818, !6819, !6820, !6821, !6822, !6823, !6824, !6825, !6826, !6827, !6828, !6829, !6830, !6831, !6832, !6833}
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !6816, file: !6696, line: 344, baseType: !43, size: 32)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !6816, file: !6696, line: 345, baseType: !342, size: 64, offset: 64)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !6816, file: !6696, line: 346, baseType: !342, size: 64, offset: 128)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !6816, file: !6696, line: 347, baseType: !342, size: 64, offset: 192)
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !6816, file: !6696, line: 348, baseType: !342, size: 64, offset: 256)
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !6816, file: !6696, line: 349, baseType: !342, size: 64, offset: 320)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !6816, file: !6696, line: 350, baseType: !342, size: 64, offset: 384)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !6816, file: !6696, line: 351, baseType: !388, size: 64, offset: 448)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !6816, file: !6696, line: 353, baseType: !388, size: 64, offset: 512)
!6827 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !6816, file: !6696, line: 354, baseType: !43, size: 32, offset: 576)
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !6816, file: !6696, line: 355, baseType: !43, size: 32, offset: 608)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !6816, file: !6696, line: 356, baseType: !342, size: 64, offset: 640)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !6816, file: !6696, line: 357, baseType: !342, size: 64, offset: 704)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !6816, file: !6696, line: 358, baseType: !342, size: 64, offset: 768)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !6816, file: !6696, line: 359, baseType: !388, size: 64, offset: 832)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !6816, file: !6696, line: 360, baseType: !43, size: 32, offset: 896)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !6783, file: !6696, line: 436, baseType: !6835, size: 64, offset: 448)
!6835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6836, size: 64)
!6836 = !DISubroutineType(types: !6837)
!6837 = !{!43, !820, !6779, !6815}
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !6783, file: !6696, line: 438, baseType: !6812, size: 64, offset: 512)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !6783, file: !6696, line: 439, baseType: !6840, size: 64, offset: 576)
!6840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6841, size: 64)
!6841 = !DISubroutineType(types: !6842)
!6842 = !{!43, !820, !6843}
!6843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6844, size: 64)
!6844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !6696, line: 409, size: 1408, elements: !6845)
!6845 = !{!6846, !6847}
!6846 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !6844, file: !6696, line: 410, baseType: !7, size: 32)
!6847 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !6844, file: !6696, line: 411, baseType: !6848, size: 1344, offset: 64)
!6848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6849, size: 1344, elements: !873)
!6849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !6696, line: 395, size: 448, elements: !6850)
!6850 = !{!6851, !6852, !6853, !6854, !6855, !6856, !6857, !6858, !6859, !6861}
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6849, file: !6696, line: 396, baseType: !7, size: 32)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !6849, file: !6696, line: 397, baseType: !7, size: 32, offset: 32)
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !6849, file: !6696, line: 399, baseType: !7, size: 32, offset: 64)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !6849, file: !6696, line: 400, baseType: !7, size: 32, offset: 96)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !6849, file: !6696, line: 401, baseType: !7, size: 32, offset: 128)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !6849, file: !6696, line: 402, baseType: !7, size: 32, offset: 160)
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !6849, file: !6696, line: 403, baseType: !7, size: 32, offset: 192)
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6849, file: !6696, line: 404, baseType: !346, size: 64, offset: 256)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6849, file: !6696, line: 405, baseType: !6860, size: 64, offset: 320)
!6860 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !288, line: 126, baseType: !342)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !6849, file: !6696, line: 406, baseType: !6860, size: 64, offset: 384)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !6783, file: !6696, line: 440, baseType: !6791, size: 64, offset: 640)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !821, file: !645, line: 1426, baseType: !6864, size: 64, offset: 576)
!6864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6865, size: 64)
!6865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6866)
!6866 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !645, line: 49, flags: DIFlagFwdDecl)
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !821, file: !645, line: 1427, baseType: !323, size: 64, offset: 640)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !821, file: !645, line: 1428, baseType: !323, size: 64, offset: 704)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !821, file: !645, line: 1429, baseType: !323, size: 64, offset: 768)
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !821, file: !645, line: 1430, baseType: !679, size: 64, offset: 832)
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !821, file: !645, line: 1431, baseType: !1168, size: 256, offset: 896)
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !821, file: !645, line: 1432, baseType: !43, size: 32, offset: 1152)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !821, file: !645, line: 1433, baseType: !394, size: 32, offset: 1184)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !821, file: !645, line: 1437, baseType: !6875, size: 64, offset: 1216)
!6875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6876, size: 64)
!6876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6877, size: 64)
!6877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6878)
!6878 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !645, line: 1437, flags: DIFlagFwdDecl)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !821, file: !645, line: 1449, baseType: !6880, size: 64, offset: 1280)
!6880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !696, line: 34, size: 64, elements: !6881)
!6881 = !{!6882}
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !6880, file: !696, line: 35, baseType: !699, size: 64)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !821, file: !645, line: 1450, baseType: !295, size: 128, offset: 1344)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !821, file: !645, line: 1451, baseType: !5283, size: 64, offset: 1472)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !821, file: !645, line: 1452, baseType: !5303, size: 64, offset: 1536)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !821, file: !645, line: 1453, baseType: !6887, size: 64, offset: 1600)
!6887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6888, size: 64)
!6888 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !645, line: 1453, flags: DIFlagFwdDecl)
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !821, file: !645, line: 1454, baseType: !287, size: 128, offset: 1664)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !821, file: !645, line: 1455, baseType: !7, size: 32, offset: 1792)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !821, file: !645, line: 1456, baseType: !6892, size: 2432, offset: 1856)
!6892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !6696, line: 518, size: 2432, elements: !6893)
!6893 = !{!6894, !6895, !6896, !6898, !6930}
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6892, file: !6696, line: 519, baseType: !7, size: 32)
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !6892, file: !6696, line: 520, baseType: !1168, size: 256, offset: 64)
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !6892, file: !6696, line: 521, baseType: !6897, size: 192, offset: 320)
!6897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 192, elements: !873)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6892, file: !6696, line: 522, baseType: !6899, size: 1728, offset: 512)
!6899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6900, size: 1728, elements: !873)
!6900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !6696, line: 222, size: 576, elements: !6901)
!6901 = !{!6902, !6922, !6923, !6924, !6925, !6926, !6927, !6928, !6929}
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !6900, file: !6696, line: 223, baseType: !6903, size: 64)
!6903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6904, size: 64)
!6904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !6696, line: 443, size: 256, elements: !6905)
!6905 = !{!6906, !6907, !6920, !6921}
!6906 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !6904, file: !6696, line: 444, baseType: !43, size: 32)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !6904, file: !6696, line: 445, baseType: !6908, size: 64, offset: 64)
!6908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6909, size: 64)
!6909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6910)
!6910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !6696, line: 310, size: 512, elements: !6911)
!6911 = !{!6912, !6913, !6914, !6915, !6916, !6917, !6918, !6919}
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !6910, file: !6696, line: 311, baseType: !923, size: 64)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !6910, file: !6696, line: 312, baseType: !923, size: 64, offset: 64)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !6910, file: !6696, line: 313, baseType: !923, size: 64, offset: 128)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !6910, file: !6696, line: 314, baseType: !923, size: 64, offset: 192)
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !6910, file: !6696, line: 315, baseType: !6699, size: 64, offset: 256)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !6910, file: !6696, line: 316, baseType: !6699, size: 64, offset: 320)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !6910, file: !6696, line: 317, baseType: !6699, size: 64, offset: 384)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6910, file: !6696, line: 318, baseType: !6776, size: 64, offset: 448)
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !6904, file: !6696, line: 446, baseType: !858, size: 64, offset: 128)
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !6904, file: !6696, line: 447, baseType: !6903, size: 64, offset: 192)
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !6900, file: !6696, line: 224, baseType: !43, size: 32, offset: 64)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !6900, file: !6696, line: 226, baseType: !295, size: 128, offset: 128)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !6900, file: !6696, line: 227, baseType: !323, size: 64, offset: 256)
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !6900, file: !6696, line: 228, baseType: !7, size: 32, offset: 320)
!6926 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !6900, file: !6696, line: 229, baseType: !7, size: 32, offset: 352)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !6900, file: !6696, line: 230, baseType: !6740, size: 64, offset: 384)
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !6900, file: !6696, line: 231, baseType: !6740, size: 64, offset: 448)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !6900, file: !6696, line: 232, baseType: !576, size: 64, offset: 512)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6892, file: !6696, line: 523, baseType: !6931, size: 192, offset: 2240)
!6931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6908, size: 192, elements: !873)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !821, file: !645, line: 1458, baseType: !6933, size: 2112, offset: 4288)
!6933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !645, line: 1410, size: 2112, elements: !6934)
!6934 = !{!6935, !6936, !6937}
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !6933, file: !645, line: 1411, baseType: !43, size: 32)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !6933, file: !645, line: 1412, baseType: !1106, size: 128, offset: 64)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !6933, file: !645, line: 1413, baseType: !6938, size: 1920, offset: 192)
!6938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6939, size: 1920, elements: !873)
!6939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !6940, line: 12, size: 640, elements: !6941)
!6940 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!6941 = !{!6942, !6950, !6951, !6956, !6957}
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !6939, file: !6940, line: 13, baseType: !6943, size: 320)
!6943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !6944, line: 17, size: 320, elements: !6945)
!6944 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!6945 = !{!6946, !6947, !6948, !6949}
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !6943, file: !6944, line: 18, baseType: !43, size: 32)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !6943, file: !6944, line: 19, baseType: !43, size: 32, offset: 32)
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !6943, file: !6944, line: 20, baseType: !1106, size: 128, offset: 64)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !6943, file: !6944, line: 22, baseType: !310, size: 128, align: 64, offset: 192)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !6939, file: !6940, line: 14, baseType: !4838, size: 64, offset: 320)
!6951 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !6939, file: !6940, line: 15, baseType: !6952, size: 64, offset: 384)
!6952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !6953, line: 16, size: 64, elements: !6954)
!6953 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!6954 = !{!6955}
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !6952, file: !6953, line: 17, baseType: !1263, size: 64)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !6939, file: !6940, line: 16, baseType: !1106, size: 128, offset: 448)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !6939, file: !6940, line: 17, baseType: !394, size: 32, offset: 576)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !821, file: !645, line: 1465, baseType: !576, size: 64, offset: 6400)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !821, file: !645, line: 1468, baseType: !713, size: 32, offset: 6464)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !821, file: !645, line: 1470, baseType: !1648, size: 64, offset: 6528)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !821, file: !645, line: 1471, baseType: !1648, size: 64, offset: 6592)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !821, file: !645, line: 1473, baseType: !474, size: 32, offset: 6656)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !821, file: !645, line: 1474, baseType: !6964, size: 64, offset: 6720)
!6964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6965, size: 64)
!6965 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !645, line: 603, flags: DIFlagFwdDecl)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !821, file: !645, line: 1477, baseType: !3972, size: 256, offset: 6784)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !821, file: !645, line: 1478, baseType: !6968, size: 128, offset: 7040)
!6968 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !6969, line: 18, baseType: !6970)
!6969 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!6970 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6969, line: 16, size: 128, elements: !6971)
!6971 = !{!6972}
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !6970, file: !6969, line: 17, baseType: !2236, size: 128)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !821, file: !645, line: 1480, baseType: !7, size: 32, offset: 7168)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !821, file: !645, line: 1481, baseType: !5373, size: 32, offset: 7200)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !821, file: !645, line: 1487, baseType: !960, size: 192, offset: 7232)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !821, file: !645, line: 1493, baseType: !303, size: 64, offset: 7424)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !821, file: !645, line: 1495, baseType: !752, size: 64, offset: 7488)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !821, file: !645, line: 1500, baseType: !43, size: 32, offset: 7552)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !821, file: !645, line: 1502, baseType: !6980, size: 448, offset: 7616)
!6980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !6682, line: 60, size: 448, elements: !6981)
!6981 = !{!6982, !6987, !6988, !6989, !6990, !6991, !6992}
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !6980, file: !6682, line: 61, baseType: !6983, size: 64)
!6983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6984, size: 64)
!6984 = !DISubroutineType(types: !6985)
!6985 = !{!323, !6986, !6680}
!6986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6980, size: 64)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !6980, file: !6682, line: 63, baseType: !6983, size: 64, offset: 64)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !6980, file: !6682, line: 66, baseType: !519, size: 64, offset: 128)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !6980, file: !6682, line: 67, baseType: !43, size: 32, offset: 192)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6980, file: !6682, line: 68, baseType: !7, size: 32, offset: 224)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6980, file: !6682, line: 71, baseType: !295, size: 128, offset: 256)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !6980, file: !6682, line: 77, baseType: !6993, size: 64, offset: 384)
!6993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !821, file: !645, line: 1505, baseType: !382, size: 64, offset: 8064)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !821, file: !645, line: 1508, baseType: !382, size: 64, offset: 8128)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !821, file: !645, line: 1511, baseType: !43, size: 32, offset: 8192)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !821, file: !645, line: 1514, baseType: !6665, size: 32, offset: 8224)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !821, file: !645, line: 1517, baseType: !2968, size: 64, offset: 8256)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !821, file: !645, line: 1518, baseType: !863, size: 64, offset: 8320)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !821, file: !645, line: 1525, baseType: !1765, size: 64, offset: 8384)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !821, file: !645, line: 1532, baseType: !7002, size: 64, offset: 8448)
!7002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !7003, line: 52, size: 64, elements: !7004)
!7003 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!7004 = !{!7005}
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7002, file: !7003, line: 53, baseType: !7006, size: 64)
!7006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7007, size: 64)
!7007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !7003, line: 40, size: 256, elements: !7008)
!7008 = !{!7009, !7010, !7015}
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7007, file: !7003, line: 42, baseType: !735)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !7007, file: !7003, line: 44, baseType: !7011, size: 192)
!7011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !7003, line: 28, size: 192, elements: !7012)
!7012 = !{!7013, !7014}
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7011, file: !7003, line: 29, baseType: !295, size: 128)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !7011, file: !7003, line: 31, baseType: !519, size: 64, offset: 128)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !7007, file: !7003, line: 49, baseType: !519, size: 64, offset: 192)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !821, file: !645, line: 1533, baseType: !7002, size: 64, offset: 8512)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !821, file: !645, line: 1534, baseType: !310, size: 128, align: 64, offset: 8576)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !821, file: !645, line: 1535, baseType: !1813, size: 256, offset: 8704)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !821, file: !645, line: 1537, baseType: !960, size: 192, offset: 8960)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !821, file: !645, line: 1542, baseType: !43, size: 32, offset: 9152)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !821, file: !645, line: 1545, baseType: !735, offset: 9184)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !821, file: !645, line: 1546, baseType: !295, size: 128, offset: 9216)
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !821, file: !645, line: 1548, baseType: !735, offset: 9344)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !821, file: !645, line: 1549, baseType: !295, size: 128, offset: 9344)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !680, file: !681, line: 104, baseType: !323, size: 64, offset: 896)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !680, file: !681, line: 105, baseType: !576, size: 64, offset: 960)
!7027 = !DIDerivedType(tag: DW_TAG_member, scope: !680, file: !681, line: 107, baseType: !7028, size: 128, offset: 1024)
!7028 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !680, file: !681, line: 107, size: 128, elements: !7029)
!7029 = !{!7030, !7031}
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !7028, file: !681, line: 108, baseType: !295, size: 128)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !7028, file: !681, line: 109, baseType: !1105, size: 64)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !680, file: !681, line: 111, baseType: !295, size: 128, offset: 1152)
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !680, file: !681, line: 112, baseType: !295, size: 128, offset: 1280)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !680, file: !681, line: 120, baseType: !7035, size: 128, offset: 1408)
!7035 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !680, file: !681, line: 116, size: 128, elements: !7036)
!7036 = !{!7037, !7038, !7039}
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !7035, file: !681, line: 117, baseType: !287, size: 128)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !7035, file: !681, line: 118, baseType: !695, size: 128)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !7035, file: !681, line: 119, baseType: !310, size: 128, align: 64)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !673, file: !645, line: 1866, baseType: !7041, size: 64, offset: 64)
!7041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7042, size: 64)
!7042 = !DISubroutineType(types: !7043)
!7043 = !{!303, !679, !648, !7044}
!7044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7045, size: 64)
!7045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !7046, line: 10, size: 128, elements: !7047)
!7046 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!7047 = !{!7048, !7049}
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7045, file: !7046, line: 11, baseType: !3501, size: 64)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !7045, file: !7046, line: 12, baseType: !576, size: 64, offset: 64)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !673, file: !645, line: 1867, baseType: !7051, size: 64, offset: 128)
!7051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7052, size: 64)
!7052 = !DISubroutineType(types: !7053)
!7053 = !{!43, !648, !43}
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !673, file: !645, line: 1868, baseType: !7055, size: 64, offset: 192)
!7055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7056, size: 64)
!7056 = !DISubroutineType(types: !7057)
!7057 = !{!7058, !648, !43}
!7058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7059, size: 64)
!7059 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !645, line: 581, flags: DIFlagFwdDecl)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !673, file: !645, line: 1870, baseType: !7061, size: 64, offset: 256)
!7061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7062, size: 64)
!7062 = !DISubroutineType(types: !7063)
!7063 = !{!43, !679, !583, !43}
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !673, file: !645, line: 1872, baseType: !7065, size: 64, offset: 320)
!7065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7066, size: 64)
!7066 = !DISubroutineType(types: !7067)
!7067 = !{!43, !648, !679, !652, !546}
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !673, file: !645, line: 1873, baseType: !7069, size: 64, offset: 384)
!7069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7070, size: 64)
!7070 = !DISubroutineType(types: !7071)
!7071 = !{!43, !679, !648, !679}
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !673, file: !645, line: 1874, baseType: !7073, size: 64, offset: 448)
!7073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7074, size: 64)
!7074 = !DISubroutineType(types: !7075)
!7075 = !{!43, !648, !679}
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !673, file: !645, line: 1875, baseType: !7077, size: 64, offset: 512)
!7077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7078, size: 64)
!7078 = !DISubroutineType(types: !7079)
!7079 = !{!43, !648, !679, !303}
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !673, file: !645, line: 1876, baseType: !7081, size: 64, offset: 576)
!7081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7082, size: 64)
!7082 = !DISubroutineType(types: !7083)
!7083 = !{!43, !648, !679, !652}
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !673, file: !645, line: 1877, baseType: !7073, size: 64, offset: 640)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !673, file: !645, line: 1878, baseType: !7086, size: 64, offset: 704)
!7086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7087, size: 64)
!7087 = !DISubroutineType(types: !7088)
!7088 = !{!43, !648, !679, !652, !825}
!7089 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !673, file: !645, line: 1879, baseType: !7090, size: 64, offset: 768)
!7090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7091, size: 64)
!7091 = !DISubroutineType(types: !7092)
!7092 = !{!43, !648, !679, !648, !679, !7}
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !673, file: !645, line: 1881, baseType: !7094, size: 64, offset: 832)
!7094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7095, size: 64)
!7095 = !DISubroutineType(types: !7096)
!7096 = !{!43, !679, !7097}
!7097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7098, size: 64)
!7098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !645, line: 219, size: 640, elements: !7099)
!7099 = !{!7100, !7101, !7102, !7103, !7104, !7105, !7110, !7111, !7112}
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !7098, file: !645, line: 220, baseType: !7, size: 32)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !7098, file: !645, line: 221, baseType: !652, size: 16, offset: 32)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !7098, file: !645, line: 222, baseType: !655, size: 32, offset: 64)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !7098, file: !645, line: 223, baseType: !663, size: 32, offset: 96)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !7098, file: !645, line: 224, baseType: !830, size: 64, offset: 128)
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !7098, file: !645, line: 225, baseType: !7106, size: 128, offset: 192)
!7106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1649, line: 13, size: 128, elements: !7107)
!7107 = !{!7108, !7109}
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !7106, file: !1649, line: 14, baseType: !1648, size: 64)
!7109 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !7106, file: !1649, line: 15, baseType: !519, size: 64, offset: 64)
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !7098, file: !645, line: 226, baseType: !7106, size: 128, offset: 320)
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !7098, file: !645, line: 227, baseType: !7106, size: 128, offset: 448)
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !7098, file: !645, line: 234, baseType: !1016, size: 64, offset: 576)
!7113 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !673, file: !645, line: 1882, baseType: !7114, size: 64, offset: 896)
!7114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7115, size: 64)
!7115 = !DISubroutineType(types: !7116)
!7116 = !{!43, !811, !7117, !713, !7}
!7117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7118, size: 64)
!7118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !7119, line: 22, size: 1152, elements: !7120)
!7119 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!7120 = !{!7121, !7122, !7123, !7124, !7125, !7126, !7127, !7128, !7129, !7130, !7131, !7132, !7133, !7134, !7135, !7136, !7137, !7138}
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !7118, file: !7119, line: 23, baseType: !713, size: 32)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !7118, file: !7119, line: 24, baseType: !652, size: 16, offset: 32)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !7118, file: !7119, line: 25, baseType: !7, size: 32, offset: 64)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !7118, file: !7119, line: 26, baseType: !1656, size: 32, offset: 96)
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !7118, file: !7119, line: 27, baseType: !342, size: 64, offset: 128)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !7118, file: !7119, line: 28, baseType: !342, size: 64, offset: 192)
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !7118, file: !7119, line: 37, baseType: !342, size: 64, offset: 256)
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7118, file: !7119, line: 38, baseType: !825, size: 32, offset: 320)
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !7118, file: !7119, line: 39, baseType: !825, size: 32, offset: 352)
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !7118, file: !7119, line: 40, baseType: !655, size: 32, offset: 384)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !7118, file: !7119, line: 41, baseType: !663, size: 32, offset: 416)
!7132 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7118, file: !7119, line: 42, baseType: !830, size: 64, offset: 448)
!7133 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !7118, file: !7119, line: 43, baseType: !7106, size: 128, offset: 512)
!7134 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !7118, file: !7119, line: 44, baseType: !7106, size: 128, offset: 640)
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !7118, file: !7119, line: 45, baseType: !7106, size: 128, offset: 768)
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !7118, file: !7119, line: 46, baseType: !7106, size: 128, offset: 896)
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !7118, file: !7119, line: 47, baseType: !342, size: 64, offset: 1024)
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !7118, file: !7119, line: 48, baseType: !342, size: 64, offset: 1088)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !673, file: !645, line: 1883, baseType: !7140, size: 64, offset: 960)
!7140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7141, size: 64)
!7141 = !DISubroutineType(types: !7142)
!7142 = !{!1021, !679, !583, !600}
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !673, file: !645, line: 1884, baseType: !7144, size: 64, offset: 1024)
!7144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7145, size: 64)
!7145 = !DISubroutineType(types: !7146)
!7146 = !{!43, !648, !7147, !342, !342}
!7147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7148, size: 64)
!7148 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !645, line: 50, flags: DIFlagFwdDecl)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !673, file: !645, line: 1886, baseType: !7150, size: 64, offset: 1088)
!7150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7151, size: 64)
!7151 = !DISubroutineType(types: !7152)
!7152 = !{!43, !648, !7153, !43}
!7153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7106, size: 64)
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !673, file: !645, line: 1887, baseType: !7155, size: 64, offset: 1152)
!7155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7156, size: 64)
!7156 = !DISubroutineType(types: !7157)
!7157 = !{!43, !648, !679, !1016, !7, !652}
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !673, file: !645, line: 1890, baseType: !7081, size: 64, offset: 1216)
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !673, file: !645, line: 1891, baseType: !7160, size: 64, offset: 1280)
!7160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7161, size: 64)
!7161 = !DISubroutineType(types: !7162)
!7162 = !{!43, !648, !7058, !43}
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !649, file: !645, line: 623, baseType: !820, size: 64, offset: 192)
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !649, file: !645, line: 624, baseType: !643, size: 64, offset: 256)
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !649, file: !645, line: 631, baseType: !323, size: 64, offset: 320)
!7166 = !DIDerivedType(tag: DW_TAG_member, scope: !649, file: !645, line: 639, baseType: !7167, size: 32, offset: 384)
!7167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !649, file: !645, line: 639, size: 32, elements: !7168)
!7168 = !{!7169, !7170}
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !7167, file: !645, line: 640, baseType: !5699, size: 32)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !7167, file: !645, line: 641, baseType: !7, size: 32)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !649, file: !645, line: 643, baseType: !825, size: 32, offset: 416)
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !649, file: !645, line: 644, baseType: !830, size: 64, offset: 448)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !649, file: !645, line: 645, baseType: !7106, size: 128, offset: 512)
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !649, file: !645, line: 646, baseType: !7106, size: 128, offset: 640)
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !649, file: !645, line: 647, baseType: !7106, size: 128, offset: 768)
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !649, file: !645, line: 648, baseType: !735, offset: 896)
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !649, file: !645, line: 649, baseType: !483, size: 16, offset: 896)
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !649, file: !645, line: 650, baseType: !1403, size: 8, offset: 912)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !649, file: !645, line: 651, baseType: !1403, size: 8, offset: 920)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !649, file: !645, line: 652, baseType: !6860, size: 64, offset: 960)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !649, file: !645, line: 659, baseType: !323, size: 64, offset: 1024)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !649, file: !645, line: 660, baseType: !1168, size: 256, offset: 1088)
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !649, file: !645, line: 662, baseType: !323, size: 64, offset: 1344)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !649, file: !645, line: 663, baseType: !323, size: 64, offset: 1408)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !649, file: !645, line: 665, baseType: !287, size: 128, offset: 1472)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !649, file: !645, line: 666, baseType: !295, size: 128, offset: 1600)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !649, file: !645, line: 675, baseType: !295, size: 128, offset: 1728)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !649, file: !645, line: 676, baseType: !295, size: 128, offset: 1856)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !649, file: !645, line: 677, baseType: !295, size: 128, offset: 1984)
!7190 = !DIDerivedType(tag: DW_TAG_member, scope: !649, file: !645, line: 678, baseType: !7191, size: 128, offset: 2112)
!7191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !649, file: !645, line: 678, size: 128, elements: !7192)
!7192 = !{!7193, !7194}
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !7191, file: !645, line: 679, baseType: !863, size: 64)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !7191, file: !645, line: 680, baseType: !310, size: 128, align: 64)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !649, file: !645, line: 682, baseType: !384, size: 64, offset: 2240)
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !649, file: !645, line: 683, baseType: !384, size: 64, offset: 2304)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !649, file: !645, line: 684, baseType: !394, size: 32, offset: 2368)
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !649, file: !645, line: 685, baseType: !394, size: 32, offset: 2400)
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !649, file: !645, line: 686, baseType: !394, size: 32, offset: 2432)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !649, file: !645, line: 688, baseType: !394, size: 32, offset: 2464)
!7201 = !DIDerivedType(tag: DW_TAG_member, scope: !649, file: !645, line: 690, baseType: !7202, size: 64, offset: 2496)
!7202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !649, file: !645, line: 690, size: 64, elements: !7203)
!7203 = !{!7204, !7205}
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !7202, file: !645, line: 691, baseType: !1007, size: 64)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !7202, file: !645, line: 692, baseType: !888, size: 64)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !649, file: !645, line: 694, baseType: !7207, size: 64, offset: 2560)
!7207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7208, size: 64)
!7208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !645, line: 1100, size: 384, elements: !7209)
!7209 = !{!7210, !7211, !7212, !7213}
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !7208, file: !645, line: 1101, baseType: !735)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !7208, file: !645, line: 1102, baseType: !295, size: 128)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !7208, file: !645, line: 1103, baseType: !295, size: 128, offset: 128)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !7208, file: !645, line: 1104, baseType: !295, size: 128, offset: 256)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !649, file: !645, line: 695, baseType: !644, size: 1216, align: 64, offset: 2624)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !649, file: !645, line: 696, baseType: !295, size: 128, offset: 3840)
!7216 = !DIDerivedType(tag: DW_TAG_member, scope: !649, file: !645, line: 697, baseType: !7217, size: 64, offset: 3968)
!7217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !649, file: !645, line: 697, size: 64, elements: !7218)
!7218 = !{!7219, !7220, !7221, !7224, !7225}
!7219 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !7217, file: !645, line: 698, baseType: !6164, size: 64)
!7220 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !7217, file: !645, line: 699, baseType: !5283, size: 64)
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !7217, file: !645, line: 700, baseType: !7222, size: 64)
!7222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7223, size: 64)
!7223 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !645, line: 700, flags: DIFlagFwdDecl)
!7224 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !7217, file: !645, line: 701, baseType: !583, size: 64)
!7225 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !7217, file: !645, line: 702, baseType: !7, size: 32)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !649, file: !645, line: 705, baseType: !474, size: 32, offset: 4032)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !649, file: !645, line: 708, baseType: !474, size: 32, offset: 4064)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !649, file: !645, line: 709, baseType: !6964, size: 64, offset: 4096)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !649, file: !645, line: 720, baseType: !576, size: 64, offset: 4160)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !644, file: !645, line: 453, baseType: !1991, size: 128, offset: 64)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !644, file: !645, line: 454, baseType: !1996, size: 32, offset: 192)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !644, file: !645, line: 455, baseType: !394, size: 32, offset: 224)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !644, file: !645, line: 460, baseType: !1393, size: 128, offset: 256)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !644, file: !645, line: 461, baseType: !1168, size: 256, offset: 384)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !644, file: !645, line: 462, baseType: !323, size: 64, offset: 640)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !644, file: !645, line: 463, baseType: !323, size: 64, offset: 704)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !644, file: !645, line: 464, baseType: !323, size: 64, offset: 768)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !644, file: !645, line: 465, baseType: !7239, size: 64, offset: 832)
!7239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7240, size: 64)
!7240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7241)
!7241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !645, line: 367, size: 1408, elements: !7242)
!7242 = !{!7243, !7247, !7251, !7255, !7259, !7263, !7275, !7279, !7283, !7287, !7291, !7295, !7299, !7300, !7304, !7310, !7311, !7312, !7316, !7320, !7324, !7331}
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !7241, file: !645, line: 368, baseType: !7244, size: 64)
!7244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7245, size: 64)
!7245 = !DISubroutineType(types: !7246)
!7246 = !{!43, !630, !900}
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !7241, file: !645, line: 369, baseType: !7248, size: 64, offset: 64)
!7248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7249, size: 64)
!7249 = !DISubroutineType(types: !7250)
!7250 = !{!43, !1016, !630}
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !7241, file: !645, line: 372, baseType: !7252, size: 64, offset: 128)
!7252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7253, size: 64)
!7253 = !DISubroutineType(types: !7254)
!7254 = !{!43, !643, !900}
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !7241, file: !645, line: 375, baseType: !7256, size: 64, offset: 192)
!7256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7257, size: 64)
!7257 = !DISubroutineType(types: !7258)
!7258 = !{!43, !630}
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !7241, file: !645, line: 381, baseType: !7260, size: 64, offset: 256)
!7260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7261, size: 64)
!7261 = !DISubroutineType(types: !7262)
!7262 = !{!43, !1016, !643, !298, !7}
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !7241, file: !645, line: 383, baseType: !7264, size: 64, offset: 320)
!7264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7265, size: 64)
!7265 = !DISubroutineType(types: !7266)
!7266 = !{null, !7267}
!7267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7268, size: 64)
!7268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1053, line: 795, size: 256, elements: !7269)
!7269 = !{!7270, !7271, !7272, !7273, !7274}
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7268, file: !1053, line: 796, baseType: !1016, size: 64)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !7268, file: !1053, line: 797, baseType: !643, size: 64, offset: 64)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !7268, file: !1053, line: 799, baseType: !323, size: 64, offset: 128)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !7268, file: !1053, line: 800, baseType: !7, size: 32, offset: 192)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !7268, file: !1053, line: 801, baseType: !7, size: 32, offset: 224)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !7241, file: !645, line: 385, baseType: !7276, size: 64, offset: 384)
!7276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7277, size: 64)
!7277 = !DISubroutineType(types: !7278)
!7278 = !{!43, !1016, !643, !830, !7, !7, !6244, !3691}
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !7241, file: !645, line: 388, baseType: !7280, size: 64, offset: 448)
!7280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7281, size: 64)
!7281 = !DISubroutineType(types: !7282)
!7282 = !{!43, !1016, !643, !830, !7, !7, !630, !576}
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !7241, file: !645, line: 393, baseType: !7284, size: 64, offset: 512)
!7284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7285, size: 64)
!7285 = !DISubroutineType(types: !7286)
!7286 = !{!3986, !643, !3986}
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !7241, file: !645, line: 394, baseType: !7288, size: 64, offset: 576)
!7288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7289, size: 64)
!7289 = !DISubroutineType(types: !7290)
!7290 = !{null, !630, !7, !7}
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !7241, file: !645, line: 395, baseType: !7292, size: 64, offset: 640)
!7292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7293, size: 64)
!7293 = !DISubroutineType(types: !7294)
!7294 = !{!43, !630, !1996}
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !7241, file: !645, line: 396, baseType: !7296, size: 64, offset: 704)
!7296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7297, size: 64)
!7297 = !DISubroutineType(types: !7298)
!7298 = !{null, !630}
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !7241, file: !645, line: 397, baseType: !1029, size: 64, offset: 768)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !7241, file: !645, line: 402, baseType: !7301, size: 64, offset: 832)
!7301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7302, size: 64)
!7302 = !DISubroutineType(types: !7303)
!7303 = !{!43, !643, !630, !630, !17}
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !7241, file: !645, line: 404, baseType: !7305, size: 64, offset: 896)
!7305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7306, size: 64)
!7306 = !DISubroutineType(types: !7307)
!7307 = !{!546, !630, !7308}
!7308 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !7309, line: 305, baseType: !7)
!7309 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !7241, file: !645, line: 405, baseType: !7296, size: 64, offset: 960)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !7241, file: !645, line: 406, baseType: !7256, size: 64, offset: 1024)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !7241, file: !645, line: 407, baseType: !7313, size: 64, offset: 1088)
!7313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7314, size: 64)
!7314 = !DISubroutineType(types: !7315)
!7315 = !{!43, !630, !323, !323}
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !7241, file: !645, line: 409, baseType: !7317, size: 64, offset: 1152)
!7317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7318, size: 64)
!7318 = !DISubroutineType(types: !7319)
!7319 = !{null, !630, !4998, !4998}
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !7241, file: !645, line: 410, baseType: !7321, size: 64, offset: 1216)
!7321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7322, size: 64)
!7322 = !DISubroutineType(types: !7323)
!7323 = !{!43, !643, !630}
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !7241, file: !645, line: 413, baseType: !7325, size: 64, offset: 1280)
!7325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7326, size: 64)
!7326 = !DISubroutineType(types: !7327)
!7327 = !{!43, !7328, !1016, !7330}
!7328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7329, size: 64)
!7329 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !645, line: 61, flags: DIFlagFwdDecl)
!7330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !7241, file: !645, line: 415, baseType: !7332, size: 64, offset: 1344)
!7332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7333, size: 64)
!7333 = !DISubroutineType(types: !7334)
!7334 = !{null, !1016}
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !644, file: !645, line: 466, baseType: !323, size: 64, offset: 896)
!7336 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !644, file: !645, line: 467, baseType: !6665, size: 32, offset: 960)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !644, file: !645, line: 468, baseType: !735, offset: 992)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !644, file: !645, line: 469, baseType: !295, size: 128, offset: 1024)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !644, file: !645, line: 470, baseType: !576, size: 64, offset: 1152)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !639, file: !632, line: 87, baseType: !323, size: 64, offset: 192)
!7341 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !639, file: !632, line: 94, baseType: !323, size: 64, offset: 256)
!7342 = !DIDerivedType(tag: DW_TAG_member, scope: !636, file: !632, line: 96, baseType: !7343, size: 64)
!7343 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !636, file: !632, line: 96, size: 64, elements: !7344)
!7344 = !{!7345}
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !7343, file: !632, line: 101, baseType: !7346, size: 64)
!7346 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !288, line: 143, baseType: !342)
!7347 = !DIDerivedType(tag: DW_TAG_member, scope: !636, file: !632, line: 103, baseType: !7348, size: 320)
!7348 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !636, file: !632, line: 103, size: 320, elements: !7349)
!7349 = !{!7350, !7360, !7361, !7362}
!7350 = !DIDerivedType(tag: DW_TAG_member, scope: !7348, file: !632, line: 104, baseType: !7351, size: 128)
!7351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7348, file: !632, line: 104, size: 128, elements: !7352)
!7352 = !{!7353, !7354}
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !7351, file: !632, line: 105, baseType: !295, size: 128)
!7354 = !DIDerivedType(tag: DW_TAG_member, scope: !7351, file: !632, line: 106, baseType: !7355, size: 128)
!7355 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7351, file: !632, line: 106, size: 128, elements: !7356)
!7356 = !{!7357, !7358, !7359}
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7355, file: !632, line: 107, baseType: !630, size: 64)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !7355, file: !632, line: 109, baseType: !43, size: 32, offset: 64)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !7355, file: !632, line: 110, baseType: !43, size: 32, offset: 96)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !7348, file: !632, line: 117, baseType: !2277, size: 64, offset: 128)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !7348, file: !632, line: 119, baseType: !576, size: 64, offset: 192)
!7362 = !DIDerivedType(tag: DW_TAG_member, scope: !7348, file: !632, line: 120, baseType: !7363, size: 64, offset: 256)
!7363 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7348, file: !632, line: 120, size: 64, elements: !7364)
!7364 = !{!7365, !7366, !7367}
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !7363, file: !632, line: 121, baseType: !576, size: 64)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !7363, file: !632, line: 122, baseType: !323, size: 64)
!7367 = !DIDerivedType(tag: DW_TAG_member, scope: !7363, file: !632, line: 123, baseType: !7368, size: 32)
!7368 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7363, file: !632, line: 123, size: 32, elements: !7369)
!7369 = !{!7370, !7371, !7372}
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !7368, file: !632, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !7368, file: !632, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !7368, file: !632, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!7373 = !DIDerivedType(tag: DW_TAG_member, scope: !636, file: !632, line: 130, baseType: !7374, size: 192)
!7374 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !636, file: !632, line: 130, size: 192, elements: !7375)
!7375 = !{!7376, !7377, !7378, !7379, !7380}
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !7374, file: !632, line: 131, baseType: !323, size: 64)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !7374, file: !632, line: 134, baseType: !500, size: 8, offset: 64)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !7374, file: !632, line: 135, baseType: !500, size: 8, offset: 72)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !7374, file: !632, line: 136, baseType: !394, size: 32, offset: 96)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !7374, file: !632, line: 137, baseType: !7, size: 32, offset: 128)
!7381 = !DIDerivedType(tag: DW_TAG_member, scope: !636, file: !632, line: 139, baseType: !7382, size: 256)
!7382 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !636, file: !632, line: 139, size: 256, elements: !7383)
!7383 = !{!7384, !7385, !7386}
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !7382, file: !632, line: 140, baseType: !323, size: 64)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !7382, file: !632, line: 141, baseType: !394, size: 32, offset: 64)
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !7382, file: !632, line: 143, baseType: !295, size: 128, offset: 128)
!7387 = !DIDerivedType(tag: DW_TAG_member, scope: !636, file: !632, line: 145, baseType: !7388, size: 256)
!7388 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !636, file: !632, line: 145, size: 256, elements: !7389)
!7389 = !{!7390, !7391, !7392, !7393, !7398}
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !7388, file: !632, line: 146, baseType: !323, size: 64)
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !7388, file: !632, line: 147, baseType: !4309, size: 64, offset: 64)
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !7388, file: !632, line: 148, baseType: !323, size: 64, offset: 128)
!7393 = !DIDerivedType(tag: DW_TAG_member, scope: !7388, file: !632, line: 149, baseType: !7394, size: 64, offset: 192)
!7394 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7388, file: !632, line: 149, size: 64, elements: !7395)
!7395 = !{!7396, !7397}
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !7394, file: !632, line: 150, baseType: !1131, size: 64)
!7397 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !7394, file: !632, line: 151, baseType: !394, size: 32)
!7398 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !7388, file: !632, line: 156, baseType: !735, offset: 256)
!7399 = !DIDerivedType(tag: DW_TAG_member, scope: !636, file: !632, line: 159, baseType: !7400, size: 128)
!7400 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !636, file: !632, line: 159, size: 128, elements: !7401)
!7401 = !{!7402, !7453}
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !7400, file: !632, line: 161, baseType: !7403, size: 64)
!7403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7404, size: 64)
!7404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !7405, line: 110, size: 1152, elements: !7406)
!7405 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!7406 = !{!7407, !7417, !7418, !7419, !7420, !7427, !7428, !7440, !7441, !7442}
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !7404, file: !7405, line: 111, baseType: !7408, size: 384)
!7408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !7405, line: 19, size: 384, elements: !7409)
!7409 = !{!7410, !7412, !7413, !7414, !7415, !7416}
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !7408, file: !7405, line: 20, baseType: !7411, size: 64)
!7411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !323)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !7408, file: !7405, line: 21, baseType: !7411, size: 64, offset: 64)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !7408, file: !7405, line: 22, baseType: !7411, size: 64, offset: 128)
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !7408, file: !7405, line: 23, baseType: !323, size: 64, offset: 192)
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !7408, file: !7405, line: 24, baseType: !323, size: 64, offset: 256)
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !7408, file: !7405, line: 25, baseType: !323, size: 64, offset: 320)
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !7404, file: !7405, line: 112, baseType: !4007, size: 64, offset: 384)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !7404, file: !7405, line: 113, baseType: !3993, size: 128, offset: 448)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !7404, file: !7405, line: 114, baseType: !1553, size: 192, offset: 576)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7404, file: !7405, line: 115, baseType: !7421, size: 32, offset: 768)
!7421 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !7405, line: 59, baseType: !7, size: 32, elements: !7422)
!7422 = !{!7423, !7424, !7425, !7426}
!7423 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!7424 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!7425 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!7426 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7404, file: !7405, line: 116, baseType: !7, size: 32, offset: 800)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7404, file: !7405, line: 117, baseType: !7429, size: 64, offset: 832)
!7429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7430, size: 64)
!7430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7431)
!7431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !7405, line: 67, size: 256, elements: !7432)
!7432 = !{!7433, !7434, !7438, !7439}
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !7431, file: !7405, line: 73, baseType: !7296, size: 64)
!7434 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !7431, file: !7405, line: 78, baseType: !7435, size: 64, offset: 64)
!7435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7436, size: 64)
!7436 = !DISubroutineType(types: !7437)
!7437 = !{null, !7403}
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !7431, file: !7405, line: 83, baseType: !7435, size: 64, offset: 128)
!7439 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !7431, file: !7405, line: 89, baseType: !4271, size: 64, offset: 192)
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7404, file: !7405, line: 118, baseType: !576, size: 64, offset: 896)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !7404, file: !7405, line: 119, baseType: !43, size: 32, offset: 960)
!7442 = !DIDerivedType(tag: DW_TAG_member, scope: !7404, file: !7405, line: 120, baseType: !7443, size: 128, offset: 1024)
!7443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7404, file: !7405, line: 120, size: 128, elements: !7444)
!7444 = !{!7445, !7451}
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !7443, file: !7405, line: 121, baseType: !7446, size: 128)
!7446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !7447, line: 6, size: 128, elements: !7448)
!7447 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!7448 = !{!7449, !7450}
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7446, file: !7447, line: 7, baseType: !342, size: 64)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !7446, file: !7447, line: 8, baseType: !342, size: 64, offset: 64)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !7443, file: !7405, line: 122, baseType: !7452)
!7452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7446, elements: !1928)
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !7400, file: !632, line: 162, baseType: !576, size: 64, offset: 64)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !636, file: !632, line: 176, baseType: !310, size: 128, align: 64)
!7455 = !DIDerivedType(tag: DW_TAG_member, scope: !631, file: !632, line: 179, baseType: !7456, size: 32, offset: 384)
!7456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !631, file: !632, line: 179, size: 32, elements: !7457)
!7457 = !{!7458, !7459, !7460, !7461}
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !7456, file: !632, line: 184, baseType: !394, size: 32)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !7456, file: !632, line: 192, baseType: !7, size: 32)
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !7456, file: !632, line: 194, baseType: !7, size: 32)
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !7456, file: !632, line: 195, baseType: !43, size: 32)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !631, file: !632, line: 199, baseType: !394, size: 32, offset: 416)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !626, file: !627, line: 33, baseType: !7, size: 32, offset: 64)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !626, file: !627, line: 34, baseType: !7, size: 32, offset: 96)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !606, file: !596, line: 42, baseType: !6164, size: 64)
!7466 = !DIDerivedType(tag: DW_TAG_member, scope: !595, file: !596, line: 44, baseType: !7467, size: 64, offset: 256)
!7467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !595, file: !596, line: 44, size: 64, elements: !7468)
!7468 = !{!7469, !7470}
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !7467, file: !596, line: 45, baseType: !323, size: 64)
!7470 = !DIDerivedType(tag: DW_TAG_member, scope: !7467, file: !596, line: 46, baseType: !7471, size: 64)
!7471 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7467, file: !596, line: 46, size: 64, elements: !7472)
!7472 = !{!7473, !7474}
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7471, file: !596, line: 47, baseType: !7, size: 32)
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !7471, file: !596, line: 48, baseType: !7, size: 32, offset: 32)
!7475 = !DIDerivedType(tag: DW_TAG_member, scope: !590, file: !526, line: 60, baseType: !7476, size: 64, offset: 448)
!7476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !590, file: !526, line: 60, size: 64, elements: !7477)
!7477 = !{!7478, !7479}
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !7476, file: !526, line: 61, baseType: !576, size: 64)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_user", scope: !7476, file: !526, line: 62, baseType: !576, size: 64)
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_is_user", scope: !590, file: !526, line: 64, baseType: !546, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !590, file: !526, line: 65, baseType: !601, size: 64, offset: 576)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !590, file: !526, line: 66, baseType: !7, size: 32, offset: 640)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iocb", scope: !590, file: !526, line: 67, baseType: !1032, size: 64, offset: 704)
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !513, file: !458, line: 1159, baseType: !7485, size: 64, offset: 832)
!7485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7486, size: 64)
!7486 = !DISubroutineType(types: !7487)
!7487 = !{!43, !456, !589, !600, !43, !43, !545}
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !513, file: !458, line: 1162, baseType: !7489, size: 64, offset: 896)
!7489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7490, size: 64)
!7490 = !DISubroutineType(types: !7491)
!7491 = !{!43, !456, !630, !43, !600, !43}
!7492 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !513, file: !458, line: 1164, baseType: !521, size: 64, offset: 960)
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "bind_add", scope: !513, file: !458, line: 1166, baseType: !521, size: 64, offset: 1024)
!7494 = !DIDerivedType(tag: DW_TAG_member, name: "backlog_rcv", scope: !513, file: !458, line: 1169, baseType: !7495, size: 64, offset: 1088)
!7495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7496, size: 64)
!7496 = !DISubroutineType(types: !7497)
!7497 = !{!43, !456, !426}
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "release_cb", scope: !513, file: !458, line: 1172, baseType: !557, size: 64, offset: 1152)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !513, file: !458, line: 1175, baseType: !553, size: 64, offset: 1216)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "unhash", scope: !513, file: !458, line: 1176, baseType: !557, size: 64, offset: 1280)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "rehash", scope: !513, file: !458, line: 1177, baseType: !557, size: 64, offset: 1344)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "get_port", scope: !513, file: !458, line: 1178, baseType: !7503, size: 64, offset: 1408)
!7503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7504, size: 64)
!7504 = !DISubroutineType(types: !7505)
!7505 = !{!43, !456, !483}
!7506 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_idx", scope: !513, file: !458, line: 1182, baseType: !7, size: 32, offset: 1472)
!7507 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_free", scope: !513, file: !458, line: 1185, baseType: !7508, size: 64, offset: 1536)
!7508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7509, size: 64)
!7509 = !DISubroutineType(types: !7510)
!7510 = !{!546, !7511, !43}
!7511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7512, size: 64)
!7512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !457)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_read", scope: !513, file: !458, line: 1186, baseType: !7514, size: 64, offset: 1600)
!7514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7515, size: 64)
!7515 = !DISubroutineType(types: !7516)
!7516 = !{!546, !7511}
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "enter_memory_pressure", scope: !513, file: !458, line: 1188, baseType: !557, size: 64, offset: 1664)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "leave_memory_pressure", scope: !513, file: !458, line: 1189, baseType: !557, size: 64, offset: 1728)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "memory_allocated", scope: !513, file: !458, line: 1190, baseType: !6993, size: 64, offset: 1792)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "sockets_allocated", scope: !513, file: !458, line: 1191, baseType: !7521, size: 64, offset: 1856)
!7521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "memory_pressure", scope: !513, file: !458, line: 1198, baseType: !2593, size: 64, offset: 1920)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_mem", scope: !513, file: !458, line: 1199, baseType: !7524, size: 64, offset: 1984)
!7524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem", scope: !513, file: !458, line: 1201, baseType: !545, size: 64, offset: 2048)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem", scope: !513, file: !458, line: 1202, baseType: !545, size: 64, offset: 2112)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem_offset", scope: !513, file: !458, line: 1203, baseType: !713, size: 32, offset: 2176)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem_offset", scope: !513, file: !458, line: 1204, baseType: !713, size: 32, offset: 2208)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "max_header", scope: !513, file: !458, line: 1206, baseType: !43, size: 32, offset: 2240)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "no_autobind", scope: !513, file: !458, line: 1207, baseType: !546, size: 8, offset: 2272)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !513, file: !458, line: 1209, baseType: !2277, size: 64, offset: 2304)
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !513, file: !458, line: 1210, baseType: !7, size: 32, offset: 2368)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "slab_flags", scope: !513, file: !458, line: 1211, baseType: !7534, size: 32, offset: 2400)
!7534 = !DIDerivedType(tag: DW_TAG_typedef, name: "slab_flags_t", file: !288, line: 149, baseType: !7)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "useroffset", scope: !513, file: !458, line: 1212, baseType: !7, size: 32, offset: 2432)
!7536 = !DIDerivedType(tag: DW_TAG_member, name: "usersize", scope: !513, file: !458, line: 1213, baseType: !7, size: 32, offset: 2464)
!7537 = !DIDerivedType(tag: DW_TAG_member, name: "orphan_count", scope: !513, file: !458, line: 1215, baseType: !7521, size: 64, offset: 2496)
!7538 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_prot", scope: !513, file: !458, line: 1217, baseType: !7539, size: 64, offset: 2560)
!7539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7540, size: 64)
!7540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock_ops", file: !7541, line: 27, size: 512, elements: !7542)
!7541 = !DIFile(filename: "./include/net/request_sock.h", directory: "/home/lizy2001/genbc/linux")
!7542 = !{!7543, !7544, !7545, !7546, !7547, !7576, !7580, !7584, !7588}
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7540, file: !7541, line: 28, baseType: !43, size: 32)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !7540, file: !7541, line: 29, baseType: !7, size: 32, offset: 32)
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !7540, file: !7541, line: 30, baseType: !2277, size: 64, offset: 64)
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "slab_name", scope: !7540, file: !7541, line: 31, baseType: !583, size: 64, offset: 128)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "rtx_syn_ack", scope: !7540, file: !7541, line: 32, baseType: !7548, size: 64, offset: 192)
!7548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7549, size: 64)
!7549 = !DISubroutineType(types: !7550)
!7550 = !{!43, !7511, !7551}
!7551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7552, size: 64)
!7552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock", file: !7541, line: 53, size: 1792, elements: !7553)
!7553 = !{!7554, !7555, !7556, !7557, !7558, !7559, !7560, !7561, !7562, !7565, !7566, !7574, !7575}
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "__req_common", scope: !7552, file: !7541, line: 54, baseType: !461, size: 1088)
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "dl_next", scope: !7552, file: !7541, line: 61, baseType: !7551, size: 64, offset: 1088)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "mss", scope: !7552, file: !7541, line: 62, baseType: !1044, size: 16, offset: 1152)
!7557 = !DIDerivedType(tag: DW_TAG_member, name: "num_retrans", scope: !7552, file: !7541, line: 63, baseType: !1403, size: 8, offset: 1168)
!7558 = !DIDerivedType(tag: DW_TAG_member, name: "syncookie", scope: !7552, file: !7541, line: 64, baseType: !1403, size: 1, offset: 1176, flags: DIFlagBitField, extraData: i64 1176)
!7559 = !DIDerivedType(tag: DW_TAG_member, name: "num_timeout", scope: !7552, file: !7541, line: 65, baseType: !1403, size: 7, offset: 1177, flags: DIFlagBitField, extraData: i64 1176)
!7560 = !DIDerivedType(tag: DW_TAG_member, name: "ts_recent", scope: !7552, file: !7541, line: 66, baseType: !713, size: 32, offset: 1184)
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_timer", scope: !7552, file: !7541, line: 67, baseType: !2246, size: 320, offset: 1216)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_ops", scope: !7552, file: !7541, line: 68, baseType: !7563, size: 64, offset: 1536)
!7563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7564, size: 64)
!7564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7540)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7552, file: !7541, line: 69, baseType: !456, size: 64, offset: 1600)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "saved_syn", scope: !7552, file: !7541, line: 70, baseType: !7567, size: 64, offset: 1664)
!7567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7568, size: 64)
!7568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "saved_syn", file: !7541, line: 44, size: 96, elements: !7569)
!7569 = !{!7570, !7571, !7572, !7573}
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "mac_hdrlen", scope: !7568, file: !7541, line: 45, baseType: !713, size: 32)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "network_hdrlen", scope: !7568, file: !7541, line: 46, baseType: !713, size: 32, offset: 32)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_hdrlen", scope: !7568, file: !7541, line: 47, baseType: !713, size: 32, offset: 64)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7568, file: !7541, line: 48, baseType: !2923, offset: 96)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "secid", scope: !7552, file: !7541, line: 71, baseType: !713, size: 32, offset: 1728)
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "peer_secid", scope: !7552, file: !7541, line: 72, baseType: !713, size: 32, offset: 1760)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "send_ack", scope: !7540, file: !7541, line: 34, baseType: !7577, size: 64, offset: 256)
!7577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7578, size: 64)
!7578 = !DISubroutineType(types: !7579)
!7579 = !{null, !7511, !426, !7551}
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "send_reset", scope: !7540, file: !7541, line: 36, baseType: !7581, size: 64, offset: 320)
!7581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7582, size: 64)
!7582 = !DISubroutineType(types: !7583)
!7583 = !{null, !7511, !426}
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7540, file: !7541, line: 38, baseType: !7585, size: 64, offset: 384)
!7585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7586, size: 64)
!7586 = !DISubroutineType(types: !7587)
!7587 = !{null, !7551}
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "syn_ack_timeout", scope: !7540, file: !7541, line: 39, baseType: !7589, size: 64, offset: 448)
!7589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7590, size: 64)
!7590 = !DISubroutineType(types: !7591)
!7591 = !{null, !7592}
!7592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7593, size: 64)
!7593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7552)
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_prot", scope: !513, file: !458, line: 1218, baseType: !7595, size: 64, offset: 2624)
!7595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7596, size: 64)
!7596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timewait_sock_ops", file: !7597, line: 14, size: 320, elements: !7598)
!7597 = !DIFile(filename: "./include/net/timewait_sock.h", directory: "/home/lizy2001/genbc/linux")
!7598 = !{!7599, !7600, !7601, !7602, !7606}
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab", scope: !7596, file: !7597, line: 15, baseType: !2277, size: 64)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab_name", scope: !7596, file: !7597, line: 16, baseType: !583, size: 64, offset: 64)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_obj_size", scope: !7596, file: !7597, line: 17, baseType: !7, size: 32, offset: 128)
!7602 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_unique", scope: !7596, file: !7597, line: 18, baseType: !7603, size: 64, offset: 192)
!7603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7604, size: 64)
!7604 = !DISubroutineType(types: !7605)
!7605 = !{!43, !456, !456, !576}
!7606 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_destructor", scope: !7596, file: !7597, line: 20, baseType: !557, size: 64, offset: 256)
!7607 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !513, file: !458, line: 1225, baseType: !7608, size: 64, offset: 2688)
!7608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !513, file: !458, line: 1220, size: 64, elements: !7609)
!7609 = !{!7610, !7611, !7614, !7617}
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !7608, file: !458, line: 1221, baseType: !2430, size: 64)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "udp_table", scope: !7608, file: !458, line: 1222, baseType: !7612, size: 64)
!7612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7613, size: 64)
!7613 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_table", file: !458, line: 1222, flags: DIFlagFwdDecl)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hash", scope: !7608, file: !458, line: 1223, baseType: !7615, size: 64)
!7615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7616, size: 64)
!7616 = !DICompositeType(tag: DW_TAG_structure_type, name: "raw_hashinfo", file: !458, line: 1108, flags: DIFlagFwdDecl)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "smc_hash", scope: !7608, file: !458, line: 1224, baseType: !7618, size: 64)
!7618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7619, size: 64)
!7619 = !DICompositeType(tag: DW_TAG_structure_type, name: "smc_hashinfo", file: !458, line: 1109, flags: DIFlagFwdDecl)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !513, file: !458, line: 1227, baseType: !858, size: 64, offset: 2752)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !513, file: !458, line: 1229, baseType: !3972, size: 256, offset: 2816)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !513, file: !458, line: 1231, baseType: !295, size: 128, offset: 3072)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "diag_destroy", scope: !513, file: !458, line: 1235, baseType: !538, size: 64, offset: 3200)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net", scope: !461, file: !458, line: 198, baseType: !2915, size: 64, offset: 384)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_daddr", scope: !461, file: !458, line: 201, baseType: !2229, size: 128, offset: 448)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_rcv_saddr", scope: !461, file: !458, line: 202, baseType: !2229, size: 128, offset: 576)
!7627 = !DIDerivedType(tag: DW_TAG_member, name: "skc_cookie", scope: !461, file: !458, line: 205, baseType: !384, size: 64, offset: 704)
!7628 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !458, line: 212, baseType: !7629, size: 64, offset: 768)
!7629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !461, file: !458, line: 212, size: 64, elements: !7630)
!7630 = !{!7631, !7632, !7633}
!7631 = !DIDerivedType(tag: DW_TAG_member, name: "skc_flags", scope: !7629, file: !458, line: 213, baseType: !323, size: 64)
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "skc_listener", scope: !7629, file: !458, line: 214, baseType: !456, size: 64)
!7633 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_dr", scope: !7629, file: !458, line: 215, baseType: !7634, size: 64)
!7634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64)
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_begin", scope: !461, file: !458, line: 222, baseType: !7636, offset: 832)
!7636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !43, elements: !1928)
!7637 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !458, line: 224, baseType: !7638, size: 128, offset: 832)
!7638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !461, file: !458, line: 224, size: 128, elements: !7639)
!7639 = !{!7640, !7641}
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "skc_node", scope: !7638, file: !458, line: 225, baseType: !287, size: 128)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "skc_nulls_node", scope: !7638, file: !458, line: 226, baseType: !2444, size: 128)
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tx_queue_mapping", scope: !461, file: !458, line: 228, baseType: !483, size: 16, offset: 960)
!7643 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !458, line: 232, baseType: !7644, size: 32, offset: 992)
!7644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !461, file: !458, line: 232, size: 32, elements: !7645)
!7645 = !{!7646, !7647, !7648}
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "skc_incoming_cpu", scope: !7644, file: !458, line: 233, baseType: !43, size: 32)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_wnd", scope: !7644, file: !458, line: 234, baseType: !713, size: 32)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_rcv_nxt", scope: !7644, file: !458, line: 235, baseType: !713, size: 32)
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "skc_refcnt", scope: !461, file: !458, line: 238, baseType: !1277, size: 32, offset: 1024)
!7650 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_end", scope: !461, file: !458, line: 240, baseType: !7636, offset: 1056)
!7651 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !458, line: 241, baseType: !7652, size: 32, offset: 1056)
!7652 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !461, file: !458, line: 241, size: 32, elements: !7653)
!7653 = !{!7654, !7655, !7656}
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rxhash", scope: !7652, file: !458, line: 242, baseType: !713, size: 32)
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "skc_window_clamp", scope: !7652, file: !458, line: 243, baseType: !713, size: 32)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_snd_nxt", scope: !7652, file: !458, line: 244, baseType: !713, size: 32)
!7657 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lock", scope: !457, file: !458, line: 387, baseType: !7658, size: 192, offset: 1088)
!7658 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_lock_t", file: !458, line: 108, baseType: !7659)
!7659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !458, line: 95, size: 192, elements: !7660)
!7660 = !{!7661, !7662, !7663}
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "slock", scope: !7659, file: !458, line: 96, baseType: !735)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "owned", scope: !7659, file: !458, line: 97, baseType: !43, size: 32)
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7659, file: !458, line: 98, baseType: !1106, size: 128, offset: 64)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "sk_drops", scope: !457, file: !458, line: 388, baseType: !394, size: 32, offset: 1280)
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvlowat", scope: !457, file: !458, line: 389, baseType: !43, size: 32, offset: 1312)
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_queue", scope: !457, file: !458, line: 390, baseType: !2973, size: 192, offset: 1344)
!7667 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_skb_cache", scope: !457, file: !458, line: 391, baseType: !426, size: 64, offset: 1536)
!7668 = !DIDerivedType(tag: DW_TAG_member, name: "sk_receive_queue", scope: !457, file: !458, line: 392, baseType: !2973, size: 192, offset: 1600)
!7669 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog", scope: !457, file: !458, line: 406, baseType: !7670, size: 192, offset: 1792)
!7670 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !457, file: !458, line: 401, size: 192, elements: !7671)
!7671 = !{!7672, !7673, !7674, !7675}
!7672 = !DIDerivedType(tag: DW_TAG_member, name: "rmem_alloc", scope: !7670, file: !458, line: 402, baseType: !394, size: 32)
!7673 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7670, file: !458, line: 403, baseType: !43, size: 32, offset: 32)
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7670, file: !458, line: 404, baseType: !426, size: 64, offset: 64)
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7670, file: !458, line: 405, baseType: !426, size: 64, offset: 128)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "sk_forward_alloc", scope: !457, file: !458, line: 409, baseType: !43, size: 32, offset: 1984)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ll_usec", scope: !457, file: !458, line: 411, baseType: !7, size: 32, offset: 2016)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "sk_napi_id", scope: !457, file: !458, line: 413, baseType: !7, size: 32, offset: 2048)
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvbuf", scope: !457, file: !458, line: 415, baseType: !43, size: 32, offset: 2080)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "sk_filter", scope: !457, file: !458, line: 417, baseType: !7681, size: 64, offset: 2112)
!7681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7682, size: 64)
!7682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_filter", file: !3122, line: 552, size: 256, elements: !7683)
!7683 = !{!7684, !7685, !7686}
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !7682, file: !3122, line: 553, baseType: !1277, size: 32)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7682, file: !3122, line: 554, baseType: !310, size: 128, align: 64, offset: 64)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7682, file: !3122, line: 555, baseType: !3120, size: 64, offset: 192)
!7687 = !DIDerivedType(tag: DW_TAG_member, scope: !457, file: !458, line: 418, baseType: !7688, size: 64, offset: 2176)
!7688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !457, file: !458, line: 418, size: 64, elements: !7689)
!7689 = !{!7690, !7699}
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq", scope: !7688, file: !458, line: 419, baseType: !7691, size: 64)
!7691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7692, size: 64)
!7692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket_wq", file: !7693, line: 98, size: 384, elements: !7694)
!7693 = !DIFile(filename: "./include/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7694 = !{!7695, !7696, !7697, !7698}
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !7692, file: !7693, line: 100, baseType: !1106, size: 128)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_list", scope: !7692, file: !7693, line: 101, baseType: !6183, size: 64, offset: 128)
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7692, file: !7693, line: 102, baseType: !323, size: 64, offset: 192)
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7692, file: !7693, line: 103, baseType: !310, size: 128, align: 64, offset: 256)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq_raw", scope: !7688, file: !458, line: 421, baseType: !7691, size: 64)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_dst", scope: !457, file: !458, line: 427, baseType: !2805, size: 64, offset: 2240)
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_cache", scope: !457, file: !458, line: 428, baseType: !2805, size: 64, offset: 2304)
!7702 = !DIDerivedType(tag: DW_TAG_member, name: "sk_omem_alloc", scope: !457, file: !458, line: 429, baseType: !394, size: 32, offset: 2368)
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndbuf", scope: !457, file: !458, line: 430, baseType: !43, size: 32, offset: 2400)
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_queued", scope: !457, file: !458, line: 433, baseType: !43, size: 32, offset: 2432)
!7705 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_alloc", scope: !457, file: !458, line: 434, baseType: !1277, size: 32, offset: 2464)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsq_flags", scope: !457, file: !458, line: 435, baseType: !323, size: 64, offset: 2496)
!7707 = !DIDerivedType(tag: DW_TAG_member, scope: !457, file: !458, line: 436, baseType: !7708, size: 64, offset: 2560)
!7708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !457, file: !458, line: 436, size: 64, elements: !7709)
!7709 = !{!7710, !7711}
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "sk_send_head", scope: !7708, file: !458, line: 437, baseType: !426, size: 64)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_rtx_queue", scope: !7708, file: !458, line: 438, baseType: !1139, size: 64)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tx_skb_cache", scope: !457, file: !458, line: 440, baseType: !426, size: 64, offset: 2624)
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_queue", scope: !457, file: !458, line: 441, baseType: !2973, size: 192, offset: 2688)
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peek_off", scope: !457, file: !458, line: 442, baseType: !1496, size: 32, offset: 2880)
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_pending", scope: !457, file: !458, line: 443, baseType: !43, size: 32, offset: 2912)
!7716 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_pending_confirm", scope: !457, file: !458, line: 444, baseType: !474, size: 32, offset: 2944)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_status", scope: !457, file: !458, line: 445, baseType: !713, size: 32, offset: 2976)
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndtimeo", scope: !457, file: !458, line: 446, baseType: !519, size: 64, offset: 3008)
!7719 = !DIDerivedType(tag: DW_TAG_member, name: "sk_timer", scope: !457, file: !458, line: 447, baseType: !2246, size: 320, offset: 3072)
!7720 = !DIDerivedType(tag: DW_TAG_member, name: "sk_priority", scope: !457, file: !458, line: 448, baseType: !474, size: 32, offset: 3392)
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "sk_mark", scope: !457, file: !458, line: 449, baseType: !474, size: 32, offset: 3424)
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_rate", scope: !457, file: !458, line: 450, baseType: !323, size: 64, offset: 3456)
!7723 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_pacing_rate", scope: !457, file: !458, line: 451, baseType: !323, size: 64, offset: 3520)
!7724 = !DIDerivedType(tag: DW_TAG_member, name: "sk_frag", scope: !457, file: !458, line: 452, baseType: !6222, size: 128, offset: 3584)
!7725 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_caps", scope: !457, file: !458, line: 453, baseType: !340, size: 64, offset: 3712)
!7726 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_nocaps", scope: !457, file: !458, line: 454, baseType: !340, size: 64, offset: 3776)
!7727 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_forced_caps", scope: !457, file: !458, line: 455, baseType: !340, size: 64, offset: 3840)
!7728 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_type", scope: !457, file: !458, line: 456, baseType: !43, size: 32, offset: 3904)
!7729 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_size", scope: !457, file: !458, line: 457, baseType: !7, size: 32, offset: 3936)
!7730 = !DIDerivedType(tag: DW_TAG_member, name: "sk_allocation", scope: !457, file: !458, line: 458, baseType: !1996, size: 32, offset: 3968)
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txhash", scope: !457, file: !458, line: 459, baseType: !474, size: 32, offset: 4000)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "sk_padding", scope: !457, file: !458, line: 465, baseType: !1403, size: 1, offset: 4032, flags: DIFlagBitField, extraData: i64 4032)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "sk_kern_sock", scope: !457, file: !458, line: 466, baseType: !1403, size: 1, offset: 4033, flags: DIFlagBitField, extraData: i64 4032)
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_tx", scope: !457, file: !458, line: 467, baseType: !1403, size: 1, offset: 4034, flags: DIFlagBitField, extraData: i64 4032)
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_rx", scope: !457, file: !458, line: 468, baseType: !1403, size: 1, offset: 4035, flags: DIFlagBitField, extraData: i64 4032)
!7736 = !DIDerivedType(tag: DW_TAG_member, name: "sk_userlocks", scope: !457, file: !458, line: 469, baseType: !1403, size: 4, offset: 4036, flags: DIFlagBitField, extraData: i64 4032)
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_shift", scope: !457, file: !458, line: 470, baseType: !1403, size: 8, offset: 4040)
!7738 = !DIDerivedType(tag: DW_TAG_member, name: "sk_type", scope: !457, file: !458, line: 471, baseType: !1044, size: 16, offset: 4048)
!7739 = !DIDerivedType(tag: DW_TAG_member, name: "sk_protocol", scope: !457, file: !458, line: 472, baseType: !1044, size: 16, offset: 4064)
!7740 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_segs", scope: !457, file: !458, line: 473, baseType: !1044, size: 16, offset: 4080)
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lingertime", scope: !457, file: !458, line: 474, baseType: !323, size: 64, offset: 4096)
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "sk_prot_creator", scope: !457, file: !458, line: 475, baseType: !512, size: 64, offset: 4160)
!7743 = !DIDerivedType(tag: DW_TAG_member, name: "sk_callback_lock", scope: !457, file: !458, line: 476, baseType: !2983, offset: 4224)
!7744 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err", scope: !457, file: !458, line: 477, baseType: !43, size: 32, offset: 4224)
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err_soft", scope: !457, file: !458, line: 478, baseType: !43, size: 32, offset: 4256)
!7746 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ack_backlog", scope: !457, file: !458, line: 479, baseType: !713, size: 32, offset: 4288)
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_ack_backlog", scope: !457, file: !458, line: 480, baseType: !713, size: 32, offset: 4320)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "sk_uid", scope: !457, file: !458, line: 481, baseType: !655, size: 32, offset: 4352)
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_pid", scope: !457, file: !458, line: 482, baseType: !1527, size: 64, offset: 4416)
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_cred", scope: !457, file: !458, line: 483, baseType: !1598, size: 64, offset: 4480)
!7751 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvtimeo", scope: !457, file: !458, line: 484, baseType: !519, size: 64, offset: 4544)
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "sk_stamp", scope: !457, file: !458, line: 485, baseType: !1347, size: 64, offset: 4608)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsflags", scope: !457, file: !458, line: 489, baseType: !1044, size: 16, offset: 4672)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "sk_shutdown", scope: !457, file: !458, line: 490, baseType: !1403, size: 8, offset: 4688)
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tskey", scope: !457, file: !458, line: 491, baseType: !713, size: 32, offset: 4704)
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "sk_zckey", scope: !457, file: !458, line: 492, baseType: !394, size: 32, offset: 4736)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "sk_clockid", scope: !457, file: !458, line: 494, baseType: !1403, size: 8, offset: 4768)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_deadline_mode", scope: !457, file: !458, line: 495, baseType: !1403, size: 1, offset: 4776, flags: DIFlagBitField, extraData: i64 4776)
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_report_errors", scope: !457, file: !458, line: 496, baseType: !1403, size: 1, offset: 4777, flags: DIFlagBitField, extraData: i64 4776)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_unused", scope: !457, file: !458, line: 497, baseType: !1403, size: 6, offset: 4778, flags: DIFlagBitField, extraData: i64 4776)
!7761 = !DIDerivedType(tag: DW_TAG_member, name: "sk_socket", scope: !457, file: !458, line: 499, baseType: !7762, size: 64, offset: 4800)
!7762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7763, size: 64)
!7763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket", file: !7693, line: 116, size: 704, elements: !7764)
!7764 = !{!7765, !7775, !7776, !7777, !7778, !7779, !7882}
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7763, file: !7693, line: 117, baseType: !7766, size: 32)
!7766 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_state", file: !7767, line: 54, baseType: !7768)
!7767 = !DIFile(filename: "./include/uapi/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7768 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7767, line: 48, baseType: !7, size: 32, elements: !7769)
!7769 = !{!7770, !7771, !7772, !7773, !7774}
!7770 = !DIEnumerator(name: "SS_FREE", value: 0, isUnsigned: true)
!7771 = !DIEnumerator(name: "SS_UNCONNECTED", value: 1, isUnsigned: true)
!7772 = !DIEnumerator(name: "SS_CONNECTING", value: 2, isUnsigned: true)
!7773 = !DIEnumerator(name: "SS_CONNECTED", value: 3, isUnsigned: true)
!7774 = !DIEnumerator(name: "SS_DISCONNECTING", value: 4, isUnsigned: true)
!7775 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7763, file: !7693, line: 119, baseType: !1252, size: 16, offset: 32)
!7776 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7763, file: !7693, line: 121, baseType: !323, size: 64, offset: 64)
!7777 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7763, file: !7693, line: 123, baseType: !1016, size: 64, offset: 128)
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7763, file: !7693, line: 124, baseType: !456, size: 64, offset: 192)
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7763, file: !7693, line: 125, baseType: !7780, size: 64, offset: 256)
!7780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7781, size: 64)
!7781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7782)
!7782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto_ops", file: !7693, line: 139, size: 1728, elements: !7783)
!7783 = !{!7784, !7785, !7786, !7787, !7791, !7795, !7799, !7803, !7807, !7808, !7812, !7816, !7820, !7824, !7825, !7829, !7833, !7837, !7841, !7845, !7849, !7853, !7857, !7858, !7859, !7879, !7880, !7881}
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7782, file: !7693, line: 140, baseType: !43, size: 32)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7782, file: !7693, line: 141, baseType: !7, size: 32, offset: 32)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7782, file: !7693, line: 142, baseType: !858, size: 64, offset: 64)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7782, file: !7693, line: 143, baseType: !7788, size: 64, offset: 128)
!7788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7789, size: 64)
!7789 = !DISubroutineType(types: !7790)
!7790 = !{!43, !7762}
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !7782, file: !7693, line: 144, baseType: !7792, size: 64, offset: 192)
!7792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7793, size: 64)
!7793 = !DISubroutineType(types: !7794)
!7794 = !{!43, !7762, !524, !43}
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !7782, file: !7693, line: 147, baseType: !7796, size: 64, offset: 256)
!7796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7797, size: 64)
!7797 = !DISubroutineType(types: !7798)
!7798 = !{!43, !7762, !524, !43, !43}
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "socketpair", scope: !7782, file: !7693, line: 150, baseType: !7800, size: 64, offset: 320)
!7800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7801, size: 64)
!7801 = !DISubroutineType(types: !7802)
!7802 = !{!43, !7762, !7762}
!7803 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !7782, file: !7693, line: 152, baseType: !7804, size: 64, offset: 384)
!7804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7805, size: 64)
!7805 = !DISubroutineType(types: !7806)
!7806 = !{!43, !7762, !7762, !43, !546}
!7807 = !DIDerivedType(tag: DW_TAG_member, name: "getname", scope: !7782, file: !7693, line: 154, baseType: !7792, size: 64, offset: 448)
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7782, file: !7693, line: 157, baseType: !7809, size: 64, offset: 512)
!7809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7810, size: 64)
!7810 = !DISubroutineType(types: !7811)
!7811 = !{!1095, !1016, !7762, !1096}
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !7782, file: !7693, line: 159, baseType: !7813, size: 64, offset: 576)
!7813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7814, size: 64)
!7814 = !DISubroutineType(types: !7815)
!7815 = !{!43, !7762, !7, !323}
!7816 = !DIDerivedType(tag: DW_TAG_member, name: "gettstamp", scope: !7782, file: !7693, line: 165, baseType: !7817, size: 64, offset: 640)
!7817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7818, size: 64)
!7818 = !DISubroutineType(types: !7819)
!7819 = !{!43, !7762, !576, !546, !546}
!7820 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !7782, file: !7693, line: 167, baseType: !7821, size: 64, offset: 704)
!7821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7822, size: 64)
!7822 = !DISubroutineType(types: !7823)
!7823 = !{!43, !7762, !43}
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7782, file: !7693, line: 168, baseType: !7821, size: 64, offset: 768)
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !7782, file: !7693, line: 169, baseType: !7826, size: 64, offset: 832)
!7826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7827, size: 64)
!7827 = !DISubroutineType(types: !7828)
!7828 = !{!43, !7762, !43, !43, !568, !7}
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !7782, file: !7693, line: 172, baseType: !7830, size: 64, offset: 896)
!7830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7831, size: 64)
!7831 = !DISubroutineType(types: !7832)
!7832 = !{!43, !7762, !43, !43, !583, !545}
!7833 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !7782, file: !7693, line: 174, baseType: !7834, size: 64, offset: 960)
!7834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7835, size: 64)
!7835 = !DISubroutineType(types: !7836)
!7836 = !{null, !948, !7762}
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !7782, file: !7693, line: 175, baseType: !7838, size: 64, offset: 1024)
!7838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7839, size: 64)
!7839 = !DISubroutineType(types: !7840)
!7840 = !{!43, !7762, !589, !600}
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !7782, file: !7693, line: 185, baseType: !7842, size: 64, offset: 1088)
!7842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7843, size: 64)
!7843 = !DISubroutineType(types: !7844)
!7844 = !{!43, !7762, !589, !600, !43}
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !7782, file: !7693, line: 187, baseType: !7846, size: 64, offset: 1152)
!7846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7847, size: 64)
!7847 = !DISubroutineType(types: !7848)
!7848 = !{!43, !1016, !7762, !1121}
!7849 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !7782, file: !7693, line: 189, baseType: !7850, size: 64, offset: 1216)
!7850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7851, size: 64)
!7851 = !DISubroutineType(types: !7852)
!7852 = !{!1021, !7762, !630, !43, !600, !43}
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !7782, file: !7693, line: 191, baseType: !7854, size: 64, offset: 1280)
!7854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7855, size: 64)
!7855 = !DISubroutineType(types: !7856)
!7856 = !{!1021, !7762, !975, !6164, !600, !7}
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "set_peek_off", scope: !7782, file: !7693, line: 193, baseType: !538, size: 64, offset: 1344)
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "peek_len", scope: !7782, file: !7693, line: 194, baseType: !7788, size: 64, offset: 1408)
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "read_sock", scope: !7782, file: !7693, line: 199, baseType: !7860, size: 64, offset: 1472)
!7860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7861, size: 64)
!7861 = !DISubroutineType(types: !7862)
!7862 = !{!43, !456, !7863, !7875}
!7863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7864, size: 64)
!7864 = !DIDerivedType(tag: DW_TAG_typedef, name: "read_descriptor_t", file: !645, line: 362, baseType: !7865)
!7865 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !645, line: 354, size: 256, elements: !7866)
!7866 = !{!7867, !7868, !7869, !7874}
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !7865, file: !645, line: 355, baseType: !600, size: 64)
!7868 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7865, file: !645, line: 356, baseType: !600, size: 64, offset: 64)
!7869 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !7865, file: !645, line: 360, baseType: !7870, size: 64, offset: 128)
!7870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7865, file: !645, line: 357, size: 64, elements: !7871)
!7871 = !{!7872, !7873}
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7870, file: !645, line: 358, baseType: !583, size: 64)
!7873 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7870, file: !645, line: 359, baseType: !576, size: 64)
!7874 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !7865, file: !645, line: 361, baseType: !43, size: 32, offset: 192)
!7875 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_read_actor_t", file: !7693, line: 136, baseType: !7876)
!7876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7877, size: 64)
!7877 = !DISubroutineType(types: !7878)
!7878 = !{!43, !7863, !426, !7, !600}
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage_locked", scope: !7782, file: !7693, line: 201, baseType: !7489, size: 64, offset: 1536)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg_locked", scope: !7782, file: !7693, line: 203, baseType: !586, size: 64, offset: 1600)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "set_rcvlowat", scope: !7782, file: !7693, line: 205, baseType: !538, size: 64, offset: 1664)
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7763, file: !7693, line: 127, baseType: !7692, size: 384, offset: 320)
!7883 = !DIDerivedType(tag: DW_TAG_member, name: "sk_user_data", scope: !457, file: !458, line: 500, baseType: !576, size: 64, offset: 4864)
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "sk_cgrp_data", scope: !457, file: !458, line: 504, baseType: !7885, offset: 4928)
!7885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_cgroup_data", file: !7886, line: 871, elements: !749)
!7886 = !DIFile(filename: "./include/linux/cgroup-defs.h", directory: "/home/lizy2001/genbc/linux")
!7887 = !DIDerivedType(tag: DW_TAG_member, name: "sk_memcg", scope: !457, file: !458, line: 505, baseType: !6689, size: 64, offset: 4928)
!7888 = !DIDerivedType(tag: DW_TAG_member, name: "sk_state_change", scope: !457, file: !458, line: 506, baseType: !557, size: 64, offset: 4992)
!7889 = !DIDerivedType(tag: DW_TAG_member, name: "sk_data_ready", scope: !457, file: !458, line: 507, baseType: !557, size: 64, offset: 5056)
!7890 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_space", scope: !457, file: !458, line: 508, baseType: !557, size: 64, offset: 5120)
!7891 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_report", scope: !457, file: !458, line: 509, baseType: !557, size: 64, offset: 5184)
!7892 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog_rcv", scope: !457, file: !458, line: 510, baseType: !7495, size: 64, offset: 5248)
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "sk_destruct", scope: !457, file: !458, line: 517, baseType: !557, size: 64, offset: 5312)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "sk_reuseport_cb", scope: !457, file: !458, line: 518, baseType: !7895, size: 64, offset: 5376)
!7895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7896, size: 64)
!7896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_reuseport", file: !7897, line: 13, size: 320, elements: !7898)
!7897 = !DIFile(filename: "./include/net/sock_reuseport.h", directory: "/home/lizy2001/genbc/linux")
!7898 = !{!7899, !7900, !7901, !7902, !7903, !7904, !7905, !7906, !7907}
!7899 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7896, file: !7897, line: 14, baseType: !310, size: 128, align: 64)
!7900 = !DIDerivedType(tag: DW_TAG_member, name: "max_socks", scope: !7896, file: !7897, line: 16, baseType: !1044, size: 16, offset: 128)
!7901 = !DIDerivedType(tag: DW_TAG_member, name: "num_socks", scope: !7896, file: !7897, line: 17, baseType: !1044, size: 16, offset: 144)
!7902 = !DIDerivedType(tag: DW_TAG_member, name: "synq_overflow_ts", scope: !7896, file: !7897, line: 21, baseType: !7, size: 32, offset: 160)
!7903 = !DIDerivedType(tag: DW_TAG_member, name: "reuseport_id", scope: !7896, file: !7897, line: 23, baseType: !7, size: 32, offset: 192)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "bind_inany", scope: !7896, file: !7897, line: 24, baseType: !7, size: 1, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!7905 = !DIDerivedType(tag: DW_TAG_member, name: "has_conns", scope: !7896, file: !7897, line: 25, baseType: !7, size: 1, offset: 225, flags: DIFlagBitField, extraData: i64 224)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7896, file: !7897, line: 26, baseType: !3120, size: 64, offset: 256)
!7907 = !DIDerivedType(tag: DW_TAG_member, name: "socks", scope: !7896, file: !7897, line: 27, baseType: !7908, offset: 320)
!7908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, elements: !320)
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcu", scope: !457, file: !458, line: 522, baseType: !310, size: 128, align: 64, offset: 5440)
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !453, file: !428, line: 735, baseType: !43, size: 32)
!7911 = !DIDerivedType(tag: DW_TAG_member, scope: !427, file: !428, line: 738, baseType: !7912, size: 64, offset: 256)
!7912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !427, file: !428, line: 738, size: 64, elements: !7913)
!7913 = !{!7914, !7915}
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !7912, file: !428, line: 739, baseType: !1347, size: 64)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !7912, file: !428, line: 740, baseType: !342, size: 64)
!7916 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !427, file: !428, line: 748, baseType: !7917, size: 384, align: 64, offset: 320)
!7917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 384, elements: !7918)
!7918 = !{!7919}
!7919 = !DISubrange(count: 48)
!7920 = !DIDerivedType(tag: DW_TAG_member, scope: !427, file: !428, line: 750, baseType: !7921, size: 128, offset: 704)
!7921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !427, file: !428, line: 750, size: 128, elements: !7922)
!7922 = !{!7923, !7928}
!7923 = !DIDerivedType(tag: DW_TAG_member, scope: !7921, file: !428, line: 751, baseType: !7924, size: 128)
!7924 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7921, file: !428, line: 751, size: 128, elements: !7925)
!7925 = !{!7926, !7927}
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !7924, file: !428, line: 752, baseType: !323, size: 64)
!7927 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7924, file: !428, line: 753, baseType: !2860, size: 64, offset: 64)
!7928 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !7921, file: !428, line: 755, baseType: !295, size: 128)
!7929 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !427, file: !428, line: 761, baseType: !7, size: 32, offset: 832)
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !427, file: !428, line: 762, baseType: !7, size: 32, offset: 864)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !427, file: !428, line: 763, baseType: !482, size: 16, offset: 896)
!7932 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !427, file: !428, line: 764, baseType: !482, size: 16, offset: 912)
!7933 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !427, file: !428, line: 769, baseType: !482, size: 16, offset: 928)
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !427, file: !428, line: 780, baseType: !7935, offset: 944)
!7935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, elements: !1928)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !427, file: !428, line: 782, baseType: !1404, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !427, file: !428, line: 783, baseType: !1404, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !427, file: !428, line: 784, baseType: !1404, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!7939 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !427, file: !428, line: 785, baseType: !1404, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!7940 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !427, file: !428, line: 786, baseType: !1404, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !427, file: !428, line: 787, baseType: !1404, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !427, file: !428, line: 795, baseType: !7943, offset: 960)
!7943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, elements: !1928)
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !427, file: !428, line: 807, baseType: !7935, offset: 960)
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !427, file: !428, line: 809, baseType: !1404, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!7946 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !427, file: !428, line: 810, baseType: !1404, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !427, file: !428, line: 811, baseType: !1404, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !427, file: !428, line: 812, baseType: !1404, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!7949 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !427, file: !428, line: 813, baseType: !1404, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !427, file: !428, line: 815, baseType: !1404, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !427, file: !428, line: 816, baseType: !1404, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !427, file: !428, line: 817, baseType: !1404, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!7953 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !427, file: !428, line: 818, baseType: !1404, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!7954 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !427, file: !428, line: 819, baseType: !1404, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !427, file: !428, line: 821, baseType: !1404, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !427, file: !428, line: 822, baseType: !1404, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !427, file: !428, line: 823, baseType: !1404, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !427, file: !428, line: 832, baseType: !7935, offset: 976)
!7959 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !427, file: !428, line: 834, baseType: !1404, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !427, file: !428, line: 835, baseType: !1404, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !427, file: !428, line: 836, baseType: !1404, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !427, file: !428, line: 837, baseType: !1404, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !427, file: !428, line: 838, baseType: !1404, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !427, file: !428, line: 840, baseType: !1404, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !427, file: !428, line: 843, baseType: !1404, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !427, file: !428, line: 844, baseType: !1404, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !427, file: !428, line: 845, baseType: !1404, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !427, file: !428, line: 847, baseType: !1404, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !427, file: !428, line: 848, baseType: !1404, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!7970 = !DIDerivedType(tag: DW_TAG_member, scope: !427, file: !428, line: 866, baseType: !7971, size: 32, offset: 992)
!7971 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !427, file: !428, line: 866, size: 32, elements: !7972)
!7972 = !{!7973, !7975}
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !7971, file: !428, line: 867, baseType: !7974, size: 32)
!7974 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !473, line: 37, baseType: !474)
!7975 = !DIDerivedType(tag: DW_TAG_member, scope: !7971, file: !428, line: 868, baseType: !7976, size: 32)
!7976 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7971, file: !428, line: 868, size: 32, elements: !7977)
!7977 = !{!7978, !7979}
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !7976, file: !428, line: 869, baseType: !482, size: 16)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !7976, file: !428, line: 870, baseType: !482, size: 16, offset: 16)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !427, file: !428, line: 873, baseType: !474, size: 32, offset: 1024)
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !427, file: !428, line: 874, baseType: !43, size: 32, offset: 1056)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !427, file: !428, line: 875, baseType: !474, size: 32, offset: 1088)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !427, file: !428, line: 876, baseType: !495, size: 16, offset: 1120)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !427, file: !428, line: 877, baseType: !482, size: 16, offset: 1136)
!7985 = !DIDerivedType(tag: DW_TAG_member, scope: !427, file: !428, line: 879, baseType: !7986, size: 32, offset: 1152)
!7986 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !427, file: !428, line: 879, size: 32, elements: !7987)
!7987 = !{!7988, !7989}
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !7986, file: !428, line: 880, baseType: !7, size: 32)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !7986, file: !428, line: 881, baseType: !7, size: 32)
!7990 = !DIDerivedType(tag: DW_TAG_member, scope: !427, file: !428, line: 888, baseType: !7991, size: 32, offset: 1184)
!7991 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !427, file: !428, line: 888, size: 32, elements: !7992)
!7992 = !{!7993, !7994}
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !7991, file: !428, line: 889, baseType: !474, size: 32)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !7991, file: !428, line: 890, baseType: !474, size: 32)
!7995 = !DIDerivedType(tag: DW_TAG_member, scope: !427, file: !428, line: 893, baseType: !7996, size: 16, offset: 1216)
!7996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !427, file: !428, line: 893, size: 16, elements: !7997)
!7997 = !{!7998, !7999}
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !7996, file: !428, line: 894, baseType: !495, size: 16)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !7996, file: !428, line: 895, baseType: !1404, size: 8)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !427, file: !428, line: 898, baseType: !482, size: 16, offset: 1232)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !427, file: !428, line: 899, baseType: !482, size: 16, offset: 1248)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !427, file: !428, line: 900, baseType: !482, size: 16, offset: 1264)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !427, file: !428, line: 902, baseType: !495, size: 16, offset: 1280)
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !427, file: !428, line: 903, baseType: !482, size: 16, offset: 1296)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !427, file: !428, line: 904, baseType: !482, size: 16, offset: 1312)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !427, file: !428, line: 905, baseType: !482, size: 16, offset: 1328)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !427, file: !428, line: 908, baseType: !7943, offset: 1344)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !427, file: !428, line: 912, baseType: !8009, size: 32, offset: 1344)
!8009 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !428, line: 606, baseType: !7)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !427, file: !428, line: 913, baseType: !8009, size: 32, offset: 1376)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !427, file: !428, line: 914, baseType: !8012, size: 64, offset: 1408)
!8012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !427, file: !428, line: 915, baseType: !8012, size: 64, offset: 1472)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !427, file: !428, line: 916, baseType: !7, size: 32, offset: 1536)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !427, file: !428, line: 917, baseType: !1277, size: 32, offset: 1568)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !409, file: !42, line: 1290, baseType: !8017, size: 64, offset: 320)
!8017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8018, size: 64)
!8018 = !DISubroutineType(types: !8019)
!8019 = !{!340, !426, !301, !340}
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !409, file: !42, line: 1293, baseType: !8021, size: 64, offset: 384)
!8021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8022, size: 64)
!8022 = !DISubroutineType(types: !8023)
!8023 = !{!1044, !301, !426, !301}
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !409, file: !42, line: 1296, baseType: !8025, size: 64, offset: 448)
!8025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8026, size: 64)
!8026 = !DISubroutineType(types: !8027)
!8027 = !{null, !301, !43}
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !409, file: !42, line: 1298, baseType: !416, size: 64, offset: 512)
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !409, file: !42, line: 1299, baseType: !8030, size: 64, offset: 576)
!8030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8031, size: 64)
!8031 = !DISubroutineType(types: !8032)
!8032 = !{!43, !301, !576}
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !409, file: !42, line: 1301, baseType: !412, size: 64, offset: 640)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !409, file: !42, line: 1302, baseType: !8035, size: 64, offset: 704)
!8035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8036, size: 64)
!8036 = !DISubroutineType(types: !8037)
!8037 = !{!43, !301, !8038, !43}
!8038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8039, size: 64)
!8039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !8040, line: 234, size: 320, elements: !8041)
!8040 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!8041 = !{!8042, !8046}
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !8039, file: !8040, line: 239, baseType: !8043, size: 128)
!8043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8039, file: !8040, line: 236, size: 128, elements: !8044)
!8044 = !{!8045}
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !8043, file: !8040, line: 238, baseType: !278, size: 128)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !8039, file: !8040, line: 255, baseType: !8047, size: 192, offset: 128)
!8047 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8039, file: !8040, line: 241, size: 192, elements: !8048)
!8048 = !{!8049, !8050, !8051, !8052, !8053, !8054, !8055, !8056, !8057, !8066, !8067, !8068, !8069}
!8049 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !8047, file: !8040, line: 242, baseType: !525, size: 128)
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !8047, file: !8040, line: 243, baseType: !525, size: 128)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !8047, file: !8040, line: 244, baseType: !525, size: 128)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !8047, file: !8040, line: 245, baseType: !525, size: 128)
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !8047, file: !8040, line: 246, baseType: !525, size: 128)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !8047, file: !8040, line: 247, baseType: !1252, size: 16)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !8047, file: !8040, line: 248, baseType: !43, size: 32)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !8047, file: !8040, line: 249, baseType: !43, size: 32)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !8047, file: !8040, line: 250, baseType: !8058, size: 192)
!8058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !8040, line: 196, size: 192, elements: !8059)
!8059 = !{!8060, !8061, !8062, !8063, !8064, !8065}
!8060 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !8058, file: !8040, line: 197, baseType: !323, size: 64)
!8061 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !8058, file: !8040, line: 198, baseType: !323, size: 64, offset: 64)
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !8058, file: !8040, line: 199, baseType: !483, size: 16, offset: 128)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !8058, file: !8040, line: 200, baseType: !500, size: 8, offset: 144)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !8058, file: !8040, line: 201, baseType: !500, size: 8, offset: 152)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8058, file: !8040, line: 202, baseType: !500, size: 8, offset: 160)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !8047, file: !8040, line: 251, baseType: !278, size: 128)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !8047, file: !8040, line: 252, baseType: !278, size: 128)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !8047, file: !8040, line: 253, baseType: !576, size: 64)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !8047, file: !8040, line: 254, baseType: !8070, size: 128)
!8070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !8040, line: 207, size: 128, elements: !8071)
!8071 = !{!8072, !8073, !8074}
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8070, file: !8040, line: 208, baseType: !7, size: 32)
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8070, file: !8040, line: 209, baseType: !7, size: 32, offset: 32)
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !8070, file: !8040, line: 222, baseType: !8075, size: 64, offset: 64)
!8075 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8070, file: !8040, line: 210, size: 64, elements: !8076)
!8076 = !{!8077, !8085, !8092, !8104, !8110, !8117, !8128, !8136}
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !8075, file: !8040, line: 212, baseType: !8078, size: 64)
!8078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8079, size: 64)
!8079 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !8080, line: 56, baseType: !8081)
!8080 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!8081 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8080, line: 53, size: 32, elements: !8082)
!8082 = !{!8083, !8084}
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !8081, file: !8080, line: 54, baseType: !483, size: 16)
!8084 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !8081, file: !8080, line: 55, baseType: !483, size: 16, offset: 16)
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !8075, file: !8040, line: 213, baseType: !8086, size: 64)
!8086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8087, size: 64)
!8087 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !8080, line: 80, baseType: !8088)
!8088 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8080, line: 77, size: 64, elements: !8089)
!8089 = !{!8090, !8091}
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !8088, file: !8080, line: 78, baseType: !7, size: 32)
!8091 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8088, file: !8080, line: 79, baseType: !7, size: 32, offset: 32)
!8092 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !8075, file: !8040, line: 214, baseType: !8093, size: 64)
!8093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8094, size: 64)
!8094 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !8080, line: 66, baseType: !8095)
!8095 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8080, line: 58, size: 192, elements: !8096)
!8096 = !{!8097, !8098, !8099, !8100, !8101, !8102, !8103}
!8097 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !8095, file: !8080, line: 59, baseType: !7, size: 32)
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !8095, file: !8080, line: 60, baseType: !7, size: 32, offset: 32)
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !8095, file: !8080, line: 61, baseType: !7, size: 32, offset: 64)
!8100 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !8095, file: !8080, line: 62, baseType: !7, size: 32, offset: 96)
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !8095, file: !8080, line: 63, baseType: !7, size: 32, offset: 128)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !8095, file: !8080, line: 64, baseType: !483, size: 16, offset: 160)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !8095, file: !8080, line: 65, baseType: !483, size: 16, offset: 176)
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !8075, file: !8040, line: 215, baseType: !8105, size: 64)
!8105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8106, size: 64)
!8106 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !8080, line: 70, baseType: !8107)
!8107 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8080, line: 68, size: 32, elements: !8108)
!8108 = !{!8109}
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !8107, file: !8080, line: 69, baseType: !7, size: 32)
!8110 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !8075, file: !8040, line: 216, baseType: !8111, size: 64)
!8111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8112, size: 64)
!8112 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !8080, line: 75, baseType: !8113)
!8113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8080, line: 72, size: 160, elements: !8114)
!8114 = !{!8115, !8116}
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !8113, file: !8080, line: 73, baseType: !7, size: 32)
!8116 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !8113, file: !8080, line: 74, baseType: !278, size: 128, offset: 32)
!8117 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !8075, file: !8040, line: 217, baseType: !8118, size: 64)
!8118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8119, size: 64)
!8119 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !8080, line: 89, baseType: !8120)
!8120 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8080, line: 82, size: 192, elements: !8121)
!8121 = !{!8122, !8123, !8124, !8125, !8126, !8127}
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !8120, file: !8080, line: 83, baseType: !483, size: 16)
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !8120, file: !8080, line: 84, baseType: !7, size: 32, offset: 32)
!8124 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !8120, file: !8080, line: 85, baseType: !7, size: 32, offset: 64)
!8125 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !8120, file: !8080, line: 86, baseType: !7, size: 32, offset: 96)
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !8120, file: !8080, line: 87, baseType: !7, size: 32, offset: 128)
!8127 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !8120, file: !8080, line: 88, baseType: !7, size: 32, offset: 160)
!8128 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !8075, file: !8040, line: 220, baseType: !8129, size: 64)
!8129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8130, size: 64)
!8130 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !8080, line: 44, baseType: !8131)
!8131 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8080, line: 40, size: 96, elements: !8132)
!8132 = !{!8133, !8134, !8135}
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !8131, file: !8080, line: 41, baseType: !7, size: 32)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !8131, file: !8080, line: 42, baseType: !7, size: 32, offset: 32)
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !8131, file: !8080, line: 43, baseType: !483, size: 16, offset: 64)
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !8075, file: !8040, line: 221, baseType: !8137, size: 64)
!8137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8138, size: 64)
!8138 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !8080, line: 51, baseType: !8139)
!8139 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8080, line: 46, size: 128, elements: !8140)
!8140 = !{!8141, !8142, !8143, !8144}
!8141 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !8139, file: !8080, line: 47, baseType: !7, size: 32)
!8142 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !8139, file: !8080, line: 48, baseType: !7, size: 32, offset: 32)
!8143 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !8139, file: !8080, line: 49, baseType: !483, size: 16, offset: 64)
!8144 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !8139, file: !8080, line: 50, baseType: !7, size: 32, offset: 96)
!8145 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !409, file: !42, line: 1304, baseType: !8146, size: 64, offset: 768)
!8146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8147, size: 64)
!8147 = !DISubroutineType(types: !8148)
!8148 = !{!43, !301, !8149}
!8149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8058, size: 64)
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !409, file: !42, line: 1306, baseType: !8151, size: 64, offset: 832)
!8151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8152, size: 64)
!8152 = !DISubroutineType(types: !8153)
!8153 = !{!43, !301, !43}
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !409, file: !42, line: 1308, baseType: !8155, size: 64, offset: 896)
!8155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8156, size: 64)
!8156 = !DISubroutineType(types: !8157)
!8157 = !{!43, !301, !3020}
!8158 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !409, file: !42, line: 1310, baseType: !8159, size: 64, offset: 960)
!8159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8160, size: 64)
!8160 = !DISubroutineType(types: !8161)
!8161 = !{null, !301, !7}
!8162 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !409, file: !42, line: 1313, baseType: !8163, size: 64, offset: 1024)
!8163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8164, size: 64)
!8164 = !DISubroutineType(types: !8165)
!8165 = !{null, !301, !8166}
!8166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8167, size: 64)
!8167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !8168, line: 214, size: 1536, elements: !8169)
!8168 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!8169 = !{!8170, !8171, !8172, !8173, !8174, !8175, !8176, !8177, !8178, !8179, !8180, !8181, !8182, !8183, !8184, !8185, !8186, !8187, !8188, !8189, !8190, !8191, !8192, !8193}
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !8167, file: !8168, line: 215, baseType: !344, size: 64)
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !8167, file: !8168, line: 216, baseType: !344, size: 64, offset: 64)
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !8167, file: !8168, line: 217, baseType: !344, size: 64, offset: 128)
!8173 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !8167, file: !8168, line: 218, baseType: !344, size: 64, offset: 192)
!8174 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !8167, file: !8168, line: 219, baseType: !344, size: 64, offset: 256)
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !8167, file: !8168, line: 220, baseType: !344, size: 64, offset: 320)
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !8167, file: !8168, line: 221, baseType: !344, size: 64, offset: 384)
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !8167, file: !8168, line: 222, baseType: !344, size: 64, offset: 448)
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !8167, file: !8168, line: 223, baseType: !344, size: 64, offset: 512)
!8179 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !8167, file: !8168, line: 224, baseType: !344, size: 64, offset: 576)
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !8167, file: !8168, line: 227, baseType: !344, size: 64, offset: 640)
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !8167, file: !8168, line: 228, baseType: !344, size: 64, offset: 704)
!8182 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !8167, file: !8168, line: 229, baseType: !344, size: 64, offset: 768)
!8183 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !8167, file: !8168, line: 230, baseType: !344, size: 64, offset: 832)
!8184 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !8167, file: !8168, line: 231, baseType: !344, size: 64, offset: 896)
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !8167, file: !8168, line: 232, baseType: !344, size: 64, offset: 960)
!8186 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !8167, file: !8168, line: 235, baseType: !344, size: 64, offset: 1024)
!8187 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !8167, file: !8168, line: 236, baseType: !344, size: 64, offset: 1088)
!8188 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !8167, file: !8168, line: 237, baseType: !344, size: 64, offset: 1152)
!8189 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !8167, file: !8168, line: 238, baseType: !344, size: 64, offset: 1216)
!8190 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !8167, file: !8168, line: 239, baseType: !344, size: 64, offset: 1280)
!8191 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !8167, file: !8168, line: 242, baseType: !344, size: 64, offset: 1344)
!8192 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !8167, file: !8168, line: 243, baseType: !344, size: 64, offset: 1408)
!8193 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !8167, file: !8168, line: 244, baseType: !344, size: 64, offset: 1472)
!8194 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !409, file: !42, line: 1315, baseType: !8195, size: 64, offset: 1088)
!8195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8196, size: 64)
!8196 = !DISubroutineType(types: !8197)
!8197 = !{!546, !2893, !43}
!8198 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !409, file: !42, line: 1316, baseType: !8199, size: 64, offset: 1152)
!8199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8200, size: 64)
!8200 = !DISubroutineType(types: !8201)
!8201 = !{!43, !43, !2893, !576}
!8202 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !409, file: !42, line: 1319, baseType: !8203, size: 64, offset: 1216)
!8203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8204, size: 64)
!8204 = !DISubroutineType(types: !8205)
!8205 = !{!8206, !301}
!8206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!8207 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !409, file: !42, line: 1321, baseType: !8208, size: 64, offset: 1280)
!8208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8209, size: 64)
!8209 = !DISubroutineType(types: !8210)
!8210 = !{!43, !301, !495, !1044}
!8211 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !409, file: !42, line: 1323, baseType: !8208, size: 64, offset: 1344)
!8212 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !409, file: !42, line: 1331, baseType: !8213, size: 64, offset: 1408)
!8213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8214, size: 64)
!8214 = !DISubroutineType(types: !8215)
!8215 = !{!43, !301, !43, !8216}
!8216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !409, file: !42, line: 1333, baseType: !8218, size: 64, offset: 1472)
!8218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8219, size: 64)
!8219 = !DISubroutineType(types: !8220)
!8220 = !{!43, !301, !43, !1044, !1403, !495}
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !409, file: !42, line: 1336, baseType: !8222, size: 64, offset: 1536)
!8222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8223, size: 64)
!8223 = !DISubroutineType(types: !8224)
!8224 = !{!43, !301, !43, !43, !43}
!8225 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !409, file: !42, line: 1339, baseType: !8226, size: 64, offset: 1600)
!8226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8227, size: 64)
!8227 = !DISubroutineType(types: !8228)
!8228 = !{!43, !301, !43, !546}
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !409, file: !42, line: 1341, baseType: !8226, size: 64, offset: 1664)
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !409, file: !42, line: 1343, baseType: !8231, size: 64, offset: 1728)
!8231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8232, size: 64)
!8232 = !DISubroutineType(types: !8233)
!8233 = !{!43, !301, !43, !8234}
!8234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8235, size: 64)
!8235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !8236, line: 20, size: 576, elements: !8237)
!8236 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!8237 = !{!8238, !8239, !8241, !8242, !8243, !8244, !8245, !8246, !8247, !8248, !8249}
!8238 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !8235, file: !8236, line: 21, baseType: !474, size: 32)
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !8235, file: !8236, line: 22, baseType: !8240, size: 256, offset: 32)
!8240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 256, elements: !722)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !8235, file: !8236, line: 23, baseType: !474, size: 32, offset: 288)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !8235, file: !8236, line: 24, baseType: !474, size: 32, offset: 320)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !8235, file: !8236, line: 25, baseType: !474, size: 32, offset: 352)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !8235, file: !8236, line: 26, baseType: !474, size: 32, offset: 384)
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !8235, file: !8236, line: 27, baseType: !474, size: 32, offset: 416)
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !8235, file: !8236, line: 28, baseType: !474, size: 32, offset: 448)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !8235, file: !8236, line: 29, baseType: !474, size: 32, offset: 480)
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !8235, file: !8236, line: 30, baseType: !474, size: 32, offset: 512)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !8235, file: !8236, line: 31, baseType: !495, size: 16, offset: 544)
!8250 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !409, file: !42, line: 1346, baseType: !8251, size: 64, offset: 1792)
!8251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8252, size: 64)
!8252 = !DISubroutineType(types: !8253)
!8253 = !{!43, !301, !43, !43}
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !409, file: !42, line: 1348, baseType: !8255, size: 64, offset: 1856)
!8255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8256, size: 64)
!8256 = !DISubroutineType(types: !8257)
!8257 = !{!43, !301, !43, !8258}
!8258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8259, size: 64)
!8259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !8236, line: 9, size: 512, elements: !8260)
!8260 = !{!8261, !8262, !8263, !8264, !8265, !8266, !8267, !8268}
!8261 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !8259, file: !8236, line: 10, baseType: !344, size: 64)
!8262 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !8259, file: !8236, line: 11, baseType: !344, size: 64, offset: 64)
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !8259, file: !8236, line: 12, baseType: !344, size: 64, offset: 128)
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !8259, file: !8236, line: 13, baseType: !344, size: 64, offset: 192)
!8265 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !8259, file: !8236, line: 14, baseType: !344, size: 64, offset: 256)
!8266 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !8259, file: !8236, line: 15, baseType: !344, size: 64, offset: 320)
!8267 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !8259, file: !8236, line: 16, baseType: !344, size: 64, offset: 384)
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !8259, file: !8236, line: 17, baseType: !344, size: 64, offset: 448)
!8269 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !409, file: !42, line: 1352, baseType: !8270, size: 64, offset: 1920)
!8270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8271, size: 64)
!8271 = !DISubroutineType(types: !8272)
!8272 = !{!43, !301, !43, !8273}
!8273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8274, size: 64)
!8274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 64)
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !409, file: !42, line: 1355, baseType: !8276, size: 64, offset: 1984)
!8276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8277, size: 64)
!8277 = !DISubroutineType(types: !8278)
!8278 = !{!43, !301, !43, !426}
!8279 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !409, file: !42, line: 1357, baseType: !8280, size: 64, offset: 2048)
!8280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8281, size: 64)
!8281 = !DISubroutineType(types: !8282)
!8282 = !{!43, !301, !43, !8283, !8283}
!8283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8284, size: 64)
!8284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !8168, line: 956, size: 128, elements: !8285)
!8285 = !{!8286, !8287}
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !8284, file: !8168, line: 957, baseType: !474, size: 32)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !8284, file: !8168, line: 958, baseType: !344, size: 64, offset: 64)
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !409, file: !42, line: 1361, baseType: !8289, size: 64, offset: 2112)
!8289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8290, size: 64)
!8290 = !DISubroutineType(types: !8291)
!8291 = !{!43, !301, !43, !342, !43}
!8292 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !409, file: !42, line: 1364, baseType: !8226, size: 64, offset: 2176)
!8293 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !409, file: !42, line: 1367, baseType: !8294, size: 64, offset: 2240)
!8294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8295, size: 64)
!8295 = !DISubroutineType(types: !8296)
!8296 = !{!43, !301, !48, !576}
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !409, file: !42, line: 1400, baseType: !8298, size: 64, offset: 2304)
!8298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8299, size: 64)
!8299 = !DISubroutineType(types: !8300)
!8300 = !{!43, !301, !301, !2610}
!8301 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !409, file: !42, line: 1403, baseType: !8302, size: 64, offset: 2368)
!8302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8303, size: 64)
!8303 = !DISubroutineType(types: !8304)
!8304 = !{!43, !301, !301}
!8305 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !409, file: !42, line: 1405, baseType: !8306, size: 64, offset: 2432)
!8306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8307, size: 64)
!8307 = !DISubroutineType(types: !8308)
!8308 = !{!301, !301, !426, !546}
!8309 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !409, file: !42, line: 1408, baseType: !8310, size: 64, offset: 2496)
!8310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8311, size: 64)
!8311 = !DISubroutineType(types: !8312)
!8312 = !{!340, !301, !340}
!8313 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !409, file: !42, line: 1410, baseType: !8314, size: 64, offset: 2560)
!8314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8315, size: 64)
!8315 = !DISubroutineType(types: !8316)
!8316 = !{!43, !301, !340}
!8317 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !409, file: !42, line: 1412, baseType: !8318, size: 64, offset: 2624)
!8318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8319, size: 64)
!8319 = !DISubroutineType(types: !8320)
!8320 = !{!43, !301, !2876}
!8321 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !409, file: !42, line: 1414, baseType: !8322, size: 64, offset: 2688)
!8322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8323, size: 64)
!8323 = !DISubroutineType(types: !8324)
!8324 = !{null, !301, !2876}
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !409, file: !42, line: 1417, baseType: !8326, size: 64, offset: 2752)
!8326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8327, size: 64)
!8327 = !DISubroutineType(types: !8328)
!8328 = !{!43, !8329, !8273, !301, !717, !1044, !1044, !2610}
!8329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8330, size: 64)
!8330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !8331, line: 8, size: 96, elements: !8332)
!8331 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!8332 = !{!8333, !8334, !8335, !8336, !8337, !8338, !8339}
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !8330, file: !8331, line: 9, baseType: !1404, size: 8)
!8334 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !8330, file: !8331, line: 10, baseType: !1404, size: 8, offset: 8)
!8335 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !8330, file: !8331, line: 11, baseType: !482, size: 16, offset: 16)
!8336 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !8330, file: !8331, line: 12, baseType: !1496, size: 32, offset: 32)
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !8330, file: !8331, line: 13, baseType: !482, size: 16, offset: 64)
!8338 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !8330, file: !8331, line: 14, baseType: !1404, size: 8, offset: 80)
!8339 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !8330, file: !8331, line: 15, baseType: !1404, size: 8, offset: 88)
!8340 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !409, file: !42, line: 1424, baseType: !8341, size: 64, offset: 2816)
!8341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8342, size: 64)
!8342 = !DISubroutineType(types: !8343)
!8343 = !{!43, !8329, !8273, !301, !717, !1044}
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !409, file: !42, line: 1429, baseType: !8345, size: 64, offset: 2880)
!8345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8346, size: 64)
!8346 = !DISubroutineType(types: !8347)
!8347 = !{!43, !426, !8348, !301, !301, !545}
!8348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8349, size: 64)
!8349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !2612, line: 203, size: 1024, elements: !8350)
!8350 = !{!8351, !8352, !8362, !8366, !8370, !8371, !8372, !8373, !8374, !8375, !8376, !8377, !8378, !8379}
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !8349, file: !2612, line: 204, baseType: !426, size: 64)
!8352 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !8349, file: !2612, line: 205, baseType: !8353, size: 64, offset: 64)
!8353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8354, size: 64)
!8354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8355)
!8355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !2619, line: 44, size: 128, elements: !8356)
!8356 = !{!8357, !8358, !8359, !8360, !8361}
!8357 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !8355, file: !2619, line: 45, baseType: !474, size: 32)
!8358 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !8355, file: !2619, line: 46, baseType: !482, size: 16, offset: 32)
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !8355, file: !2619, line: 47, baseType: !482, size: 16, offset: 48)
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !8355, file: !2619, line: 48, baseType: !474, size: 32, offset: 64)
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !8355, file: !2619, line: 49, baseType: !474, size: 32, offset: 96)
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !8349, file: !2612, line: 206, baseType: !8363, size: 64, offset: 128)
!8363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8364, size: 64)
!8364 = !DISubroutineType(types: !8365)
!8365 = !{!43, !426, !8348}
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !8349, file: !2612, line: 208, baseType: !8367, size: 64, offset: 192)
!8367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8368, size: 64)
!8368 = !DISubroutineType(types: !8369)
!8369 = !{!43, !8348}
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8349, file: !2612, line: 209, baseType: !576, size: 64, offset: 256)
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !8349, file: !2612, line: 211, baseType: !858, size: 64, offset: 320)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !8349, file: !2612, line: 212, baseType: !2610, size: 64, offset: 384)
!8373 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !8349, file: !2612, line: 213, baseType: !1044, size: 16, offset: 448)
!8374 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !8349, file: !2612, line: 214, baseType: !1044, size: 16, offset: 464)
!8375 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !8349, file: !2612, line: 215, baseType: !713, size: 32, offset: 480)
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !8349, file: !2612, line: 216, baseType: !7, size: 32, offset: 512)
!8377 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !8349, file: !2612, line: 216, baseType: !7, size: 32, offset: 544)
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !8349, file: !2612, line: 217, baseType: !546, size: 8, offset: 576)
!8379 = !DIDerivedType(tag: DW_TAG_member, scope: !8349, file: !2612, line: 218, baseType: !8380, size: 384, offset: 640)
!8380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8349, file: !2612, line: 218, size: 384, elements: !8381)
!8381 = !{!8382, !8384}
!8382 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !8380, file: !2612, line: 219, baseType: !8383, size: 384)
!8383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 384, elements: !7918)
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !8380, file: !2612, line: 224, baseType: !8385, size: 384)
!8385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, size: 384, elements: !1677)
!8386 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !409, file: !42, line: 1434, baseType: !8387, size: 64, offset: 2944)
!8387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8388, size: 64)
!8388 = !DISubroutineType(types: !8389)
!8389 = !{!43, !426, !8273, !301, !717, !1044, !713, !713, !2610}
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !409, file: !42, line: 1440, baseType: !8391, size: 64, offset: 3008)
!8391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8392, size: 64)
!8392 = !DISubroutineType(types: !8393)
!8393 = !{!43, !301, !8394, !1044, !2610}
!8394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8355, size: 64)
!8395 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !409, file: !42, line: 1444, baseType: !8396, size: 64, offset: 3072)
!8396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8397, size: 64)
!8397 = !DISubroutineType(types: !8398)
!8398 = !{!43, !426, !713, !713, !301, !713, !43}
!8399 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !409, file: !42, line: 1449, baseType: !8400, size: 64, offset: 3136)
!8400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8401, size: 64)
!8401 = !DISubroutineType(types: !8402)
!8402 = !{!43, !301, !8394, !1044}
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !409, file: !42, line: 1452, baseType: !8404, size: 64, offset: 3200)
!8404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8405, size: 64)
!8405 = !DISubroutineType(types: !8406)
!8406 = !{!43, !301, !546}
!8407 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !409, file: !42, line: 1454, baseType: !8408, size: 64, offset: 3264)
!8408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8409, size: 64)
!8409 = !DISubroutineType(types: !8410)
!8410 = !{!43, !301, !8411}
!8411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8412, size: 64)
!8412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !42, line: 820, size: 264, elements: !8413)
!8413 = !{!8414, !8415}
!8414 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8412, file: !42, line: 821, baseType: !721, size: 256)
!8415 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !8412, file: !42, line: 822, baseType: !500, size: 8, offset: 256)
!8416 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !409, file: !42, line: 1456, baseType: !8408, size: 64, offset: 3328)
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !409, file: !42, line: 1458, baseType: !8418, size: 64, offset: 3392)
!8418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8419, size: 64)
!8419 = !DISubroutineType(types: !8420)
!8420 = !{!43, !301, !583, !600}
!8421 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !409, file: !42, line: 1460, baseType: !8422, size: 64, offset: 3456)
!8422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8423, size: 64)
!8423 = !DISubroutineType(types: !8424)
!8424 = !{null, !301, !8425}
!8425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8426, size: 64)
!8426 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !42, line: 67, flags: DIFlagFwdDecl)
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !409, file: !42, line: 1462, baseType: !8422, size: 64, offset: 3520)
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !409, file: !42, line: 1464, baseType: !8429, size: 64, offset: 3584)
!8429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8430, size: 64)
!8430 = !DISubroutineType(types: !8431)
!8431 = !{!576, !301, !301}
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !409, file: !42, line: 1466, baseType: !8433, size: 64, offset: 3648)
!8433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8434, size: 64)
!8434 = !DISubroutineType(types: !8435)
!8435 = !{null, !301, !576}
!8436 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !409, file: !42, line: 1469, baseType: !8437, size: 64, offset: 3712)
!8437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8438, size: 64)
!8438 = !DISubroutineType(types: !8439)
!8439 = !{!43, !301, !43, !713}
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !409, file: !42, line: 1472, baseType: !8441, size: 64, offset: 3776)
!8441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8442, size: 64)
!8442 = !DISubroutineType(types: !8443)
!8443 = !{!43, !2893}
!8444 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !409, file: !42, line: 1473, baseType: !8404, size: 64, offset: 3840)
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !409, file: !42, line: 1475, baseType: !8446, size: 64, offset: 3904)
!8446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8447, size: 64)
!8447 = !DISubroutineType(types: !8448)
!8448 = !{!43, !301, !426}
!8449 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !409, file: !42, line: 1477, baseType: !8025, size: 64, offset: 3968)
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !409, file: !42, line: 1479, baseType: !8451, size: 64, offset: 4032)
!8451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8452, size: 64)
!8452 = !DISubroutineType(types: !8453)
!8453 = !{!43, !301, !8454}
!8454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8455, size: 64)
!8455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !42, line: 894, size: 256, elements: !8456)
!8456 = !{!8457, !8458}
!8457 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !8455, file: !42, line: 895, baseType: !68, size: 32)
!8458 = !DIDerivedType(tag: DW_TAG_member, scope: !8455, file: !42, line: 896, baseType: !8459, size: 192, offset: 64)
!8459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8455, file: !42, line: 896, size: 192, elements: !8460)
!8460 = !{!8461, !8467, !8496}
!8461 = !DIDerivedType(tag: DW_TAG_member, scope: !8459, file: !42, line: 898, baseType: !8462, size: 192)
!8462 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8459, file: !42, line: 898, size: 192, elements: !8463)
!8463 = !{!8464, !8465, !8466}
!8464 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8462, file: !42, line: 899, baseType: !713, size: 32)
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !8462, file: !42, line: 900, baseType: !3120, size: 64, offset: 64)
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !8462, file: !42, line: 901, baseType: !2610, size: 64, offset: 128)
!8467 = !DIDerivedType(tag: DW_TAG_member, scope: !8459, file: !42, line: 904, baseType: !8468, size: 64)
!8468 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8459, file: !42, line: 904, size: 64, elements: !8469)
!8469 = !{!8470}
!8470 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !8468, file: !42, line: 905, baseType: !8471, size: 64)
!8471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8472, size: 64)
!8472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !151, line: 222, size: 2560, elements: !8473)
!8473 = !{!8474, !8475, !8476, !8494, !8495}
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !8472, file: !151, line: 223, baseType: !3245, size: 2048)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !8472, file: !151, line: 224, baseType: !301, size: 64, offset: 2048)
!8476 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !8472, file: !151, line: 225, baseType: !8477, size: 64, offset: 2112)
!8477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8478, size: 64)
!8478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8479)
!8479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !151, line: 212, size: 256, elements: !8480)
!8480 = !{!8481, !8485, !8486, !8490}
!8481 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !8479, file: !151, line: 213, baseType: !8482, size: 64)
!8482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8483, size: 64)
!8483 = !DISubroutineType(types: !8484)
!8484 = !{!43, !8471, !576, !576}
!8485 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !8479, file: !151, line: 215, baseType: !8482, size: 64, offset: 64)
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !8479, file: !151, line: 217, baseType: !8487, size: 64, offset: 128)
!8487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8488, size: 64)
!8488 = !DISubroutineType(types: !8489)
!8489 = !{!43, !8471, !576, !576, !342}
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !8479, file: !151, line: 219, baseType: !8491, size: 64, offset: 192)
!8491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8492, size: 64)
!8492 = !DISubroutineType(types: !8493)
!8493 = !{!43, !8471, !576}
!8494 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !8472, file: !151, line: 226, baseType: !576, size: 64, offset: 2176)
!8495 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !8472, file: !151, line: 227, baseType: !295, size: 128, offset: 2240)
!8496 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !8459, file: !42, line: 911, baseType: !8497, size: 128)
!8497 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8459, file: !42, line: 908, size: 128, elements: !8498)
!8498 = !{!8499, !8502}
!8499 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !8497, file: !42, line: 909, baseType: !8500, size: 64)
!8500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8501, size: 64)
!8501 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !42, line: 909, flags: DIFlagFwdDecl)
!8502 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !8497, file: !42, line: 910, baseType: !1044, size: 16, offset: 64)
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !409, file: !42, line: 1481, baseType: !8504, size: 64, offset: 4096)
!8504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8505, size: 64)
!8505 = !DISubroutineType(types: !8506)
!8506 = !{!43, !301, !43, !8507, !713}
!8507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8508, size: 64)
!8508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8509, size: 64)
!8509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !8510, line: 94, size: 256, elements: !8511)
!8510 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!8511 = !{!8512, !8513, !8514, !8515, !8516, !8517, !8522}
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8509, file: !8510, line: 95, baseType: !576, size: 64)
!8513 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8509, file: !8510, line: 96, baseType: !1044, size: 16, offset: 64)
!8514 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !8509, file: !8510, line: 97, baseType: !1044, size: 16, offset: 80)
!8515 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !8509, file: !8510, line: 98, baseType: !713, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8516 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !8509, file: !8510, line: 99, baseType: !713, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !8509, file: !8510, line: 103, baseType: !8518, size: 64, offset: 128)
!8518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !8510, line: 50, size: 64, elements: !8519)
!8519 = !{!8520, !8521}
!8520 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8518, file: !8510, line: 51, baseType: !713, size: 32)
!8521 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8518, file: !8510, line: 52, baseType: !713, size: 32, offset: 32)
!8522 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !8509, file: !8510, line: 104, baseType: !301, size: 64, offset: 192)
!8523 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !409, file: !42, line: 1484, baseType: !8524, size: 64, offset: 4160)
!8524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8525, size: 64)
!8525 = !DISubroutineType(types: !8526)
!8526 = !{!43, !301, !713, !713}
!8527 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !409, file: !42, line: 1486, baseType: !8528, size: 64, offset: 4224)
!8528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8529, size: 64)
!8529 = !DISubroutineType(types: !8530)
!8530 = !{!8531, !301}
!8531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8532, size: 64)
!8532 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !42, line: 1486, flags: DIFlagFwdDecl)
!8533 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !409, file: !42, line: 1487, baseType: !8534, size: 64, offset: 4288)
!8534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8535, size: 64)
!8535 = !DISubroutineType(types: !8536)
!8536 = !{!43, !301, !8537, !43}
!8537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8538, size: 64)
!8538 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !42, line: 56, flags: DIFlagFwdDecl)
!8539 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !409, file: !42, line: 1489, baseType: !8540, size: 64, offset: 4352)
!8540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8541, size: 64)
!8541 = !DISubroutineType(types: !8542)
!8542 = !{!301, !301}
!8543 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !275, file: !42, line: 1917, baseType: !8544, size: 64, offset: 4032)
!8544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8545, size: 64)
!8545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8546)
!8546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !262, line: 421, size: 3904, elements: !8547)
!8547 = !{!8548, !8549, !8569, !8570, !8581, !8593, !8597, !8601, !8605, !8606, !8607, !8624, !8625, !8637, !8638, !8668, !8669, !8685, !8689, !8698, !8709, !8713, !8726, !8730, !8734, !8744, !8745, !8746, !8747, !8751, !8752, !8854, !8858, !8868, !8872, !8873, !8874, !8878, !8884, !8888, !8892, !8908, !8912, !8924, !8928, !8929, !8944, !8956, !8957, !8973, !8974, !8988, !8992, !8996, !8997, !9036, !9042, !9053, !9054, !9055, !9056}
!8548 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !8546, file: !262, line: 422, baseType: !713, size: 32)
!8549 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !8546, file: !262, line: 423, baseType: !8550, size: 64, offset: 64)
!8550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8551, size: 64)
!8551 = !DISubroutineType(types: !8552)
!8552 = !{null, !301, !8553}
!8553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8554, size: 64)
!8554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !220, line: 177, size: 1568, elements: !8555)
!8555 = !{!8556, !8557, !8558, !8559, !8560, !8561, !8562, !8564, !8565, !8566, !8567, !8568}
!8556 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8554, file: !220, line: 178, baseType: !474, size: 32)
!8557 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !8554, file: !220, line: 179, baseType: !3972, size: 256, offset: 32)
!8558 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8554, file: !220, line: 180, baseType: !3972, size: 256, offset: 288)
!8559 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !8554, file: !220, line: 181, baseType: !3972, size: 256, offset: 544)
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !8554, file: !220, line: 182, baseType: !3972, size: 256, offset: 800)
!8561 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !8554, file: !220, line: 183, baseType: !3972, size: 256, offset: 1056)
!8562 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !8554, file: !220, line: 184, baseType: !8563, size: 96, offset: 1312)
!8563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 96, elements: !3044)
!8564 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !8554, file: !220, line: 185, baseType: !474, size: 32, offset: 1408)
!8565 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8554, file: !220, line: 186, baseType: !474, size: 32, offset: 1440)
!8566 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !8554, file: !220, line: 187, baseType: !474, size: 32, offset: 1472)
!8567 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !8554, file: !220, line: 188, baseType: !474, size: 32, offset: 1504)
!8568 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !8554, file: !220, line: 189, baseType: !474, size: 32, offset: 1536)
!8569 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !8546, file: !262, line: 424, baseType: !412, size: 64, offset: 128)
!8570 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !8546, file: !262, line: 425, baseType: !8571, size: 64, offset: 192)
!8571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8572, size: 64)
!8572 = !DISubroutineType(types: !8573)
!8573 = !{null, !301, !8574, !576}
!8574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8575, size: 64)
!8575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !220, line: 310, size: 96, elements: !8576)
!8576 = !{!8577, !8578, !8579, !8580}
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8575, file: !220, line: 311, baseType: !474, size: 32)
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8575, file: !220, line: 312, baseType: !474, size: 32, offset: 32)
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8575, file: !220, line: 313, baseType: !474, size: 32, offset: 64)
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8575, file: !220, line: 314, baseType: !7935, offset: 96)
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !8546, file: !262, line: 426, baseType: !8582, size: 64, offset: 256)
!8582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8583, size: 64)
!8583 = !DISubroutineType(types: !8584)
!8584 = !{null, !301, !8585}
!8585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8586, size: 64)
!8586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !220, line: 203, size: 160, elements: !8587)
!8587 = !{!8588, !8589, !8590, !8591}
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8586, file: !220, line: 204, baseType: !474, size: 32)
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8586, file: !220, line: 205, baseType: !474, size: 32, offset: 32)
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !8586, file: !220, line: 206, baseType: !474, size: 32, offset: 64)
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !8586, file: !220, line: 207, baseType: !8592, size: 48, offset: 96)
!8592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 48, elements: !1677)
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !8546, file: !262, line: 427, baseType: !8594, size: 64, offset: 320)
!8594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8595, size: 64)
!8595 = !DISubroutineType(types: !8596)
!8596 = !{!43, !301, !8585}
!8597 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !8546, file: !262, line: 428, baseType: !8598, size: 64, offset: 384)
!8598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8599, size: 64)
!8599 = !DISubroutineType(types: !8600)
!8600 = !{!713, !301}
!8601 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !8546, file: !262, line: 429, baseType: !8602, size: 64, offset: 448)
!8602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8603, size: 64)
!8603 = !DISubroutineType(types: !8604)
!8604 = !{null, !301, !713}
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !8546, file: !262, line: 430, baseType: !412, size: 64, offset: 512)
!8606 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !8546, file: !262, line: 431, baseType: !8598, size: 64, offset: 576)
!8607 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !8546, file: !262, line: 432, baseType: !8608, size: 64, offset: 640)
!8608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8609, size: 64)
!8609 = !DISubroutineType(types: !8610)
!8610 = !{!43, !301, !8611}
!8611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8612, size: 64)
!8612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !262, line: 93, size: 64, elements: !8613)
!8613 = !{!8614, !8615}
!8614 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !8612, file: !262, line: 94, baseType: !219, size: 32)
!8615 = !DIDerivedType(tag: DW_TAG_member, scope: !8612, file: !262, line: 95, baseType: !8616, size: 32, offset: 32)
!8616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8612, file: !262, line: 95, size: 32, elements: !8617)
!8617 = !{!8618, !8619, !8620, !8621, !8622, !8623}
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8616, file: !262, line: 96, baseType: !232, size: 32)
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !8616, file: !262, line: 97, baseType: !240, size: 32)
!8620 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !8616, file: !262, line: 98, baseType: !246, size: 32)
!8621 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !8616, file: !262, line: 99, baseType: !253, size: 32)
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !8616, file: !262, line: 100, baseType: !257, size: 32)
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !8616, file: !262, line: 101, baseType: !1403, size: 8)
!8624 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !8546, file: !262, line: 434, baseType: !412, size: 64, offset: 704)
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !8546, file: !262, line: 435, baseType: !8626, size: 64, offset: 768)
!8626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8627, size: 64)
!8627 = !DISubroutineType(types: !8628)
!8628 = !{!43, !301, !8629, !8216}
!8629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8630, size: 64)
!8630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !220, line: 335, size: 128, elements: !8631)
!8631 = !{!8632, !8633, !8634, !8635, !8636}
!8632 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8630, file: !220, line: 336, baseType: !474, size: 32)
!8633 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !8630, file: !220, line: 337, baseType: !474, size: 32, offset: 32)
!8634 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8630, file: !220, line: 338, baseType: !474, size: 32, offset: 64)
!8635 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8630, file: !220, line: 339, baseType: !474, size: 32, offset: 96)
!8636 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8630, file: !220, line: 340, baseType: !7935, offset: 128)
!8637 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !8546, file: !262, line: 437, baseType: !8626, size: 64, offset: 832)
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !8546, file: !262, line: 439, baseType: !8639, size: 64, offset: 896)
!8639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8640, size: 64)
!8640 = !DISubroutineType(types: !8641)
!8641 = !{!43, !301, !8642}
!8642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8643, size: 64)
!8643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !220, line: 462, size: 736, elements: !8644)
!8644 = !{!8645, !8646, !8647, !8648, !8649, !8650, !8651, !8652, !8653, !8654, !8655, !8656, !8657, !8658, !8659, !8660, !8661, !8662, !8663, !8664, !8665, !8666, !8667}
!8645 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8643, file: !220, line: 463, baseType: !474, size: 32)
!8646 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !8643, file: !220, line: 464, baseType: !474, size: 32, offset: 32)
!8647 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !8643, file: !220, line: 465, baseType: !474, size: 32, offset: 64)
!8648 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !8643, file: !220, line: 466, baseType: !474, size: 32, offset: 96)
!8649 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !8643, file: !220, line: 467, baseType: !474, size: 32, offset: 128)
!8650 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !8643, file: !220, line: 468, baseType: !474, size: 32, offset: 160)
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !8643, file: !220, line: 469, baseType: !474, size: 32, offset: 192)
!8652 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !8643, file: !220, line: 470, baseType: !474, size: 32, offset: 224)
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !8643, file: !220, line: 471, baseType: !474, size: 32, offset: 256)
!8654 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !8643, file: !220, line: 472, baseType: !474, size: 32, offset: 288)
!8655 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !8643, file: !220, line: 473, baseType: !474, size: 32, offset: 320)
!8656 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !8643, file: !220, line: 474, baseType: !474, size: 32, offset: 352)
!8657 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !8643, file: !220, line: 475, baseType: !474, size: 32, offset: 384)
!8658 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !8643, file: !220, line: 476, baseType: !474, size: 32, offset: 416)
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !8643, file: !220, line: 477, baseType: !474, size: 32, offset: 448)
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !8643, file: !220, line: 478, baseType: !474, size: 32, offset: 480)
!8661 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !8643, file: !220, line: 479, baseType: !474, size: 32, offset: 512)
!8662 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !8643, file: !220, line: 480, baseType: !474, size: 32, offset: 544)
!8663 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !8643, file: !220, line: 481, baseType: !474, size: 32, offset: 576)
!8664 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !8643, file: !220, line: 482, baseType: !474, size: 32, offset: 608)
!8665 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !8643, file: !220, line: 483, baseType: !474, size: 32, offset: 640)
!8666 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !8643, file: !220, line: 484, baseType: !474, size: 32, offset: 672)
!8667 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !8643, file: !220, line: 485, baseType: !474, size: 32, offset: 704)
!8668 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !8546, file: !262, line: 440, baseType: !8639, size: 64, offset: 960)
!8669 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !8546, file: !262, line: 441, baseType: !8670, size: 64, offset: 1024)
!8670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8671, size: 64)
!8671 = !DISubroutineType(types: !8672)
!8672 = !{null, !301, !8673}
!8673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8674, size: 64)
!8674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !220, line: 513, size: 288, elements: !8675)
!8675 = !{!8676, !8677, !8678, !8679, !8680, !8681, !8682, !8683, !8684}
!8676 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8674, file: !220, line: 514, baseType: !474, size: 32)
!8677 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !8674, file: !220, line: 515, baseType: !474, size: 32, offset: 32)
!8678 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !8674, file: !220, line: 516, baseType: !474, size: 32, offset: 64)
!8679 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !8674, file: !220, line: 517, baseType: !474, size: 32, offset: 96)
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !8674, file: !220, line: 518, baseType: !474, size: 32, offset: 128)
!8681 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !8674, file: !220, line: 519, baseType: !474, size: 32, offset: 160)
!8682 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !8674, file: !220, line: 520, baseType: !474, size: 32, offset: 192)
!8683 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !8674, file: !220, line: 521, baseType: !474, size: 32, offset: 224)
!8684 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !8674, file: !220, line: 522, baseType: !474, size: 32, offset: 256)
!8685 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !8546, file: !262, line: 443, baseType: !8686, size: 64, offset: 1088)
!8686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8687, size: 64)
!8687 = !DISubroutineType(types: !8688)
!8688 = !{!43, !301, !8673}
!8689 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !8546, file: !262, line: 445, baseType: !8690, size: 64, offset: 1152)
!8690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8691, size: 64)
!8691 = !DISubroutineType(types: !8692)
!8692 = !{null, !301, !8693}
!8693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8694, size: 64)
!8694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !262, line: 260, size: 128, elements: !8695)
!8695 = !{!8696, !8697}
!8696 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !8694, file: !262, line: 261, baseType: !342, size: 64)
!8697 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !8694, file: !262, line: 262, baseType: !342, size: 64, offset: 64)
!8698 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !8546, file: !262, line: 447, baseType: !8699, size: 64, offset: 1216)
!8699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8700, size: 64)
!8700 = !DISubroutineType(types: !8701)
!8701 = !{null, !301, !8702}
!8702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8703, size: 64)
!8703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !220, line: 575, size: 128, elements: !8704)
!8704 = !{!8705, !8706, !8707, !8708}
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8703, file: !220, line: 576, baseType: !474, size: 32)
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8703, file: !220, line: 577, baseType: !474, size: 32, offset: 32)
!8707 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !8703, file: !220, line: 578, baseType: !474, size: 32, offset: 64)
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !8703, file: !220, line: 579, baseType: !474, size: 32, offset: 96)
!8709 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !8546, file: !262, line: 449, baseType: !8710, size: 64, offset: 1280)
!8710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8711, size: 64)
!8711 = !DISubroutineType(types: !8712)
!8712 = !{!43, !301, !8702}
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !8546, file: !262, line: 451, baseType: !8714, size: 64, offset: 1344)
!8714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8715, size: 64)
!8715 = !DISubroutineType(types: !8716)
!8716 = !{null, !301, !8717, !3549}
!8717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8718, size: 64)
!8718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !220, line: 770, size: 128, elements: !8719)
!8719 = !{!8720, !8721, !8722, !8723, !8724}
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8718, file: !220, line: 771, baseType: !474, size: 32)
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8718, file: !220, line: 772, baseType: !474, size: 32, offset: 32)
!8722 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8718, file: !220, line: 773, baseType: !474, size: 32, offset: 64)
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8718, file: !220, line: 774, baseType: !474, size: 32, offset: 96)
!8724 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8718, file: !220, line: 775, baseType: !8725, offset: 128)
!8725 = !DICompositeType(tag: DW_TAG_array_type, baseType: !344, elements: !1928)
!8726 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !8546, file: !262, line: 452, baseType: !8727, size: 64, offset: 1408)
!8727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8728, size: 64)
!8728 = !DISubroutineType(types: !8729)
!8729 = !{null, !301, !713, !8216}
!8730 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !8546, file: !262, line: 453, baseType: !8731, size: 64, offset: 1472)
!8731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8732, size: 64)
!8732 = !DISubroutineType(types: !8733)
!8733 = !{!43, !301, !261}
!8734 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !8546, file: !262, line: 454, baseType: !8735, size: 64, offset: 1536)
!8735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8736, size: 64)
!8736 = !DISubroutineType(types: !8737)
!8737 = !{null, !301, !8738, !3549}
!8738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8739, size: 64)
!8739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !220, line: 789, size: 64, elements: !8740)
!8740 = !{!8741, !8742, !8743}
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8739, file: !220, line: 790, baseType: !474, size: 32)
!8742 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8739, file: !220, line: 791, baseType: !474, size: 32, offset: 32)
!8743 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8739, file: !220, line: 792, baseType: !8725, offset: 64)
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !8546, file: !262, line: 456, baseType: !412, size: 64, offset: 1600)
!8745 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !8546, file: !262, line: 457, baseType: !416, size: 64, offset: 1664)
!8746 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !8546, file: !262, line: 458, baseType: !8598, size: 64, offset: 1728)
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !8546, file: !262, line: 459, baseType: !8748, size: 64, offset: 1792)
!8748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8749, size: 64)
!8749 = !DISubroutineType(types: !8750)
!8750 = !{!43, !301, !713}
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !8546, file: !262, line: 460, baseType: !8151, size: 64, offset: 1856)
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !8546, file: !262, line: 461, baseType: !8753, size: 64, offset: 1920)
!8753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8754, size: 64)
!8754 = !DISubroutineType(types: !8755)
!8755 = !{!43, !301, !8756, !1466}
!8756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8757, size: 64)
!8757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !220, line: 1088, size: 1536, elements: !8758)
!8758 = !{!8759, !8760, !8761, !8762, !8848, !8853}
!8759 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8757, file: !220, line: 1089, baseType: !474, size: 32)
!8760 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8757, file: !220, line: 1090, baseType: !474, size: 32, offset: 32)
!8761 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8757, file: !220, line: 1091, baseType: !344, size: 64, offset: 64)
!8762 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !8757, file: !220, line: 1092, baseType: !8763, size: 1344, offset: 128)
!8763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !220, line: 992, size: 1344, elements: !8764)
!8764 = !{!8765, !8766, !8834, !8844, !8845, !8846, !8847}
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8763, file: !220, line: 993, baseType: !474, size: 32)
!8766 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !8763, file: !220, line: 994, baseType: !8767, size: 416, offset: 32)
!8767 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !220, line: 939, size: 416, elements: !8768)
!8768 = !{!8769, !8777, !8778, !8779, !8786, !8787, !8796, !8804, !8805, !8806, !8813, !8814, !8822, !8830}
!8769 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !8767, file: !220, line: 940, baseType: !8770, size: 128)
!8770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !220, line: 845, size: 128, elements: !8771)
!8771 = !{!8772, !8773, !8774, !8775, !8776}
!8772 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8770, file: !220, line: 846, baseType: !472, size: 32)
!8773 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8770, file: !220, line: 847, baseType: !472, size: 32, offset: 32)
!8774 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8770, file: !220, line: 848, baseType: !495, size: 16, offset: 64)
!8775 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8770, file: !220, line: 849, baseType: !495, size: 16, offset: 80)
!8776 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8770, file: !220, line: 850, baseType: !1404, size: 8, offset: 96)
!8777 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !8767, file: !220, line: 941, baseType: !8770, size: 128)
!8778 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !8767, file: !220, line: 942, baseType: !8770, size: 128)
!8779 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !8767, file: !220, line: 943, baseType: !8780, size: 128)
!8780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !220, line: 862, size: 128, elements: !8781)
!8781 = !{!8782, !8783, !8784, !8785}
!8782 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8780, file: !220, line: 863, baseType: !472, size: 32)
!8783 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8780, file: !220, line: 864, baseType: !472, size: 32, offset: 32)
!8784 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8780, file: !220, line: 865, baseType: !472, size: 32, offset: 64)
!8785 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8780, file: !220, line: 866, baseType: !1404, size: 8, offset: 96)
!8786 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !8767, file: !220, line: 944, baseType: !8780, size: 128)
!8787 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !8767, file: !220, line: 945, baseType: !8788, size: 128)
!8788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !220, line: 880, size: 128, elements: !8789)
!8789 = !{!8790, !8791, !8792, !8793, !8794, !8795}
!8790 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8788, file: !220, line: 881, baseType: !472, size: 32)
!8791 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8788, file: !220, line: 882, baseType: !472, size: 32, offset: 32)
!8792 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8788, file: !220, line: 883, baseType: !472, size: 32, offset: 64)
!8793 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8788, file: !220, line: 884, baseType: !1404, size: 8, offset: 96)
!8794 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !8788, file: !220, line: 885, baseType: !1404, size: 8, offset: 104)
!8795 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !8788, file: !220, line: 886, baseType: !1404, size: 8, offset: 112)
!8796 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !8767, file: !220, line: 946, baseType: !8797, size: 320)
!8797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !220, line: 899, size: 320, elements: !8798)
!8798 = !{!8799, !8800, !8801, !8802, !8803}
!8799 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8797, file: !220, line: 900, baseType: !2240, size: 128)
!8800 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8797, file: !220, line: 901, baseType: !2240, size: 128, offset: 128)
!8801 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8797, file: !220, line: 902, baseType: !495, size: 16, offset: 256)
!8802 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8797, file: !220, line: 903, baseType: !495, size: 16, offset: 272)
!8803 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8797, file: !220, line: 904, baseType: !1404, size: 8, offset: 288)
!8804 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !8767, file: !220, line: 947, baseType: !8797, size: 320)
!8805 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !8767, file: !220, line: 948, baseType: !8797, size: 320)
!8806 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !8767, file: !220, line: 949, baseType: !8807, size: 320)
!8807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !220, line: 916, size: 320, elements: !8808)
!8808 = !{!8809, !8810, !8811, !8812}
!8809 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8807, file: !220, line: 917, baseType: !2240, size: 128)
!8810 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8807, file: !220, line: 918, baseType: !2240, size: 128, offset: 128)
!8811 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8807, file: !220, line: 919, baseType: !472, size: 32, offset: 256)
!8812 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8807, file: !220, line: 920, baseType: !1404, size: 8, offset: 288)
!8813 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !8767, file: !220, line: 950, baseType: !8807, size: 320)
!8814 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !8767, file: !220, line: 951, baseType: !8815, size: 320)
!8815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !220, line: 931, size: 320, elements: !8816)
!8816 = !{!8817, !8818, !8819, !8820, !8821}
!8817 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8815, file: !220, line: 932, baseType: !2240, size: 128)
!8818 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8815, file: !220, line: 933, baseType: !2240, size: 128, offset: 128)
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8815, file: !220, line: 934, baseType: !472, size: 32, offset: 256)
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8815, file: !220, line: 935, baseType: !1404, size: 8, offset: 288)
!8821 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !8815, file: !220, line: 936, baseType: !1404, size: 8, offset: 296)
!8822 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !8767, file: !220, line: 952, baseType: !8823, size: 112)
!8823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !8824, line: 164, size: 112, elements: !8825)
!8824 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!8825 = !{!8826, !8828, !8829}
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8823, file: !8824, line: 165, baseType: !8827, size: 48)
!8827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !500, size: 48, elements: !1677)
!8828 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !8823, file: !8824, line: 166, baseType: !8827, size: 48, offset: 48)
!8829 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !8823, file: !8824, line: 167, baseType: !495, size: 16, offset: 96)
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !8767, file: !220, line: 953, baseType: !8831, size: 416)
!8831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 416, elements: !8832)
!8832 = !{!8833}
!8833 = !DISubrange(count: 52)
!8834 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !8763, file: !220, line: 995, baseType: !8835, size: 160, offset: 448)
!8835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !220, line: 967, size: 160, elements: !8836)
!8836 = !{!8837, !8839, !8840, !8841, !8842}
!8837 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !8835, file: !220, line: 968, baseType: !8838, size: 16)
!8838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 16, elements: !484)
!8839 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8835, file: !220, line: 969, baseType: !8827, size: 48, offset: 16)
!8840 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !8835, file: !220, line: 970, baseType: !495, size: 16, offset: 64)
!8841 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !8835, file: !220, line: 971, baseType: !495, size: 16, offset: 80)
!8842 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8835, file: !220, line: 972, baseType: !8843, size: 64, offset: 96)
!8843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !472, size: 64, elements: !484)
!8844 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !8763, file: !220, line: 996, baseType: !8767, size: 416, offset: 608)
!8845 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !8763, file: !220, line: 997, baseType: !8835, size: 160, offset: 1024)
!8846 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !8763, file: !220, line: 998, baseType: !344, size: 64, offset: 1216)
!8847 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !8763, file: !220, line: 999, baseType: !474, size: 32, offset: 1280)
!8848 = !DIDerivedType(tag: DW_TAG_member, scope: !8757, file: !220, line: 1093, baseType: !8849, size: 32, offset: 1472)
!8849 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8757, file: !220, line: 1093, size: 32, elements: !8850)
!8850 = !{!8851, !8852}
!8851 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !8849, file: !220, line: 1094, baseType: !474, size: 32)
!8852 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !8849, file: !220, line: 1095, baseType: !474, size: 32)
!8853 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !8757, file: !220, line: 1097, baseType: !7943, offset: 1504)
!8854 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !8546, file: !262, line: 463, baseType: !8855, size: 64, offset: 1984)
!8855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8856, size: 64)
!8856 = !DISubroutineType(types: !8857)
!8857 = !{!43, !301, !8756}
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !8546, file: !262, line: 464, baseType: !8859, size: 64, offset: 2048)
!8859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8860, size: 64)
!8860 = !DISubroutineType(types: !8861)
!8861 = !{!43, !301, !8862}
!8862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8863, size: 64)
!8863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !220, line: 1217, size: 1088, elements: !8864)
!8864 = !{!8865, !8866, !8867}
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8863, file: !220, line: 1218, baseType: !474, size: 32)
!8866 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !8863, file: !220, line: 1219, baseType: !474, size: 32, offset: 32)
!8867 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8863, file: !220, line: 1220, baseType: !3201, size: 1024, offset: 64)
!8868 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8546, file: !262, line: 465, baseType: !8869, size: 64, offset: 2112)
!8869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8870, size: 64)
!8870 = !DISubroutineType(types: !8871)
!8871 = !{!43, !301, !1466}
!8872 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !8546, file: !262, line: 466, baseType: !8598, size: 64, offset: 2176)
!8873 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !8546, file: !262, line: 467, baseType: !8598, size: 64, offset: 2240)
!8874 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !8546, file: !262, line: 468, baseType: !8875, size: 64, offset: 2304)
!8875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8876, size: 64)
!8876 = !DISubroutineType(types: !8877)
!8877 = !{!43, !301, !1466, !8216, !8216}
!8878 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !8546, file: !262, line: 470, baseType: !8879, size: 64, offset: 2368)
!8879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8880, size: 64)
!8880 = !DISubroutineType(types: !8881)
!8881 = !{!43, !301, !4837, !8882, !8883}
!8882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8883, size: 64)
!8883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1403)
!8884 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !8546, file: !262, line: 472, baseType: !8885, size: 64, offset: 2432)
!8885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8886, size: 64)
!8886 = !DISubroutineType(types: !8887)
!8887 = !{!43, !301, !1466, !8216, !8216, !713}
!8888 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !8546, file: !262, line: 474, baseType: !8889, size: 64, offset: 2496)
!8889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8890, size: 64)
!8890 = !DISubroutineType(types: !8891)
!8891 = !{!43, !301, !4837, !8882, !8883, !1466, !546}
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !8546, file: !262, line: 477, baseType: !8893, size: 64, offset: 2560)
!8893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8894, size: 64)
!8894 = !DISubroutineType(types: !8895)
!8895 = !{null, !301, !8896}
!8896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8897, size: 64)
!8897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !220, line: 541, size: 288, elements: !8898)
!8898 = !{!8899, !8900, !8901, !8902, !8903, !8904, !8905, !8906, !8907}
!8899 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8897, file: !220, line: 542, baseType: !474, size: 32)
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !8897, file: !220, line: 543, baseType: !474, size: 32, offset: 32)
!8901 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !8897, file: !220, line: 544, baseType: !474, size: 32, offset: 64)
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !8897, file: !220, line: 545, baseType: !474, size: 32, offset: 96)
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !8897, file: !220, line: 546, baseType: !474, size: 32, offset: 128)
!8904 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !8897, file: !220, line: 547, baseType: !474, size: 32, offset: 160)
!8905 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !8897, file: !220, line: 548, baseType: !474, size: 32, offset: 192)
!8906 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !8897, file: !220, line: 549, baseType: !474, size: 32, offset: 224)
!8907 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !8897, file: !220, line: 550, baseType: !474, size: 32, offset: 256)
!8908 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !8546, file: !262, line: 478, baseType: !8909, size: 64, offset: 2624)
!8909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8910, size: 64)
!8910 = !DISubroutineType(types: !8911)
!8911 = !{!43, !301, !8896}
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !8546, file: !262, line: 479, baseType: !8913, size: 64, offset: 2688)
!8913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8914, size: 64)
!8914 = !DISubroutineType(types: !8915)
!8915 = !{!43, !301, !8916}
!8916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8917, size: 64)
!8917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !220, line: 1237, size: 128, elements: !8918)
!8918 = !{!8919, !8920, !8921, !8922, !8923}
!8919 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8917, file: !220, line: 1238, baseType: !474, size: 32)
!8920 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8917, file: !220, line: 1239, baseType: !474, size: 32, offset: 32)
!8921 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8917, file: !220, line: 1240, baseType: !474, size: 32, offset: 64)
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8917, file: !220, line: 1241, baseType: !474, size: 32, offset: 96)
!8923 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8917, file: !220, line: 1242, baseType: !7935, offset: 128)
!8924 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !8546, file: !262, line: 480, baseType: !8925, size: 64, offset: 2752)
!8925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8926, size: 64)
!8926 = !DISubroutineType(types: !8927)
!8927 = !{!43, !301, !8916, !576}
!8928 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !8546, file: !262, line: 482, baseType: !8913, size: 64, offset: 2816)
!8929 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !8546, file: !262, line: 483, baseType: !8930, size: 64, offset: 2880)
!8930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8931, size: 64)
!8931 = !DISubroutineType(types: !8932)
!8932 = !{!43, !301, !8933}
!8933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8934, size: 64)
!8934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !220, line: 1317, size: 352, elements: !8935)
!8935 = !{!8936, !8937, !8938, !8939, !8940, !8942, !8943}
!8936 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8934, file: !220, line: 1318, baseType: !474, size: 32)
!8937 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !8934, file: !220, line: 1319, baseType: !474, size: 32, offset: 32)
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !8934, file: !220, line: 1320, baseType: !1496, size: 32, offset: 64)
!8939 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !8934, file: !220, line: 1321, baseType: !474, size: 32, offset: 96)
!8940 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !8934, file: !220, line: 1322, baseType: !8941, size: 96, offset: 128)
!8941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 96, elements: !873)
!8942 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !8934, file: !220, line: 1323, baseType: !474, size: 32, offset: 224)
!8943 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !8934, file: !220, line: 1324, baseType: !8941, size: 96, offset: 256)
!8944 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !8546, file: !262, line: 484, baseType: !8945, size: 64, offset: 2944)
!8945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8946, size: 64)
!8946 = !DISubroutineType(types: !8947)
!8947 = !{!43, !301, !8948}
!8948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8949, size: 64)
!8949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !220, line: 382, size: 352, elements: !8950)
!8950 = !{!8951, !8952, !8953, !8954}
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8949, file: !220, line: 383, baseType: !474, size: 32)
!8952 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8949, file: !220, line: 384, baseType: !474, size: 32, offset: 32)
!8953 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !8949, file: !220, line: 385, baseType: !474, size: 32, offset: 64)
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8949, file: !220, line: 386, baseType: !8955, size: 256, offset: 96)
!8955 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 256, elements: !1377)
!8956 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !8546, file: !262, line: 486, baseType: !8626, size: 64, offset: 3008)
!8957 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !8546, file: !262, line: 488, baseType: !8958, size: 64, offset: 3072)
!8958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8959, size: 64)
!8959 = !DISubroutineType(types: !8960)
!8960 = !{!43, !301, !8961}
!8961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8962, size: 64)
!8962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !220, line: 360, size: 320, elements: !8963)
!8963 = !{!8964, !8965, !8966, !8967, !8968, !8969, !8970, !8971, !8972}
!8964 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8962, file: !220, line: 361, baseType: !474, size: 32)
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8962, file: !220, line: 362, baseType: !474, size: 32, offset: 32)
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !8962, file: !220, line: 363, baseType: !474, size: 32, offset: 64)
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !8962, file: !220, line: 364, baseType: !474, size: 32, offset: 96)
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !8962, file: !220, line: 365, baseType: !474, size: 32, offset: 128)
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !8962, file: !220, line: 366, baseType: !474, size: 32, offset: 160)
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !8962, file: !220, line: 367, baseType: !474, size: 32, offset: 192)
!8971 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !8962, file: !220, line: 368, baseType: !474, size: 32, offset: 224)
!8972 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8962, file: !220, line: 369, baseType: !1619, size: 64, offset: 256)
!8973 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !8546, file: !262, line: 489, baseType: !8958, size: 64, offset: 3136)
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !8546, file: !262, line: 490, baseType: !8975, size: 64, offset: 3200)
!8975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8976, size: 64)
!8976 = !DISubroutineType(types: !8977)
!8977 = !{!43, !301, !8978, !576}
!8978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8979, size: 64)
!8979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8980)
!8980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !220, line: 244, size: 128, elements: !8981)
!8981 = !{!8982, !8983, !8984, !8985, !8986}
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8980, file: !220, line: 245, baseType: !474, size: 32)
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8980, file: !220, line: 246, baseType: !474, size: 32, offset: 32)
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !8980, file: !220, line: 247, baseType: !474, size: 32, offset: 64)
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8980, file: !220, line: 248, baseType: !474, size: 32, offset: 96)
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8980, file: !220, line: 249, baseType: !8987, offset: 128)
!8987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, elements: !1928)
!8988 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !8546, file: !262, line: 492, baseType: !8989, size: 64, offset: 3264)
!8989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8990, size: 64)
!8990 = !DISubroutineType(types: !8991)
!8991 = !{!43, !301, !8978, !2269}
!8992 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !8546, file: !262, line: 494, baseType: !8993, size: 64, offset: 3328)
!8993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8994, size: 64)
!8994 = !DISubroutineType(types: !8995)
!8995 = !{!43, !301, !713, !8642}
!8996 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !8546, file: !262, line: 496, baseType: !8993, size: 64, offset: 3392)
!8997 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !8546, file: !262, line: 498, baseType: !8998, size: 64, offset: 3456)
!8998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8999, size: 64)
!8999 = !DISubroutineType(types: !9000)
!9000 = !{!43, !301, !9001}
!9001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9002, size: 64)
!9002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !262, line: 124, size: 768, elements: !9003)
!9003 = !{!9004, !9029}
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9002, file: !262, line: 125, baseType: !9005, size: 384)
!9005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !220, line: 1996, size: 384, elements: !9006)
!9006 = !{!9007, !9008, !9009, !9010, !9011, !9012, !9013, !9014, !9015, !9016, !9019, !9020, !9021, !9022, !9024, !9028}
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9005, file: !220, line: 1997, baseType: !474, size: 32)
!9008 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !9005, file: !220, line: 1998, baseType: !474, size: 32, offset: 32)
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !9005, file: !220, line: 1999, baseType: !1404, size: 8, offset: 64)
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !9005, file: !220, line: 2000, baseType: !1404, size: 8, offset: 72)
!9011 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !9005, file: !220, line: 2001, baseType: !1404, size: 8, offset: 80)
!9012 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !9005, file: !220, line: 2002, baseType: !1404, size: 8, offset: 88)
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !9005, file: !220, line: 2003, baseType: !1404, size: 8, offset: 96)
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !9005, file: !220, line: 2004, baseType: !1404, size: 8, offset: 104)
!9015 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !9005, file: !220, line: 2005, baseType: !1404, size: 8, offset: 112)
!9016 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !9005, file: !220, line: 2006, baseType: !9017, size: 8, offset: 120)
!9017 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !345, line: 20, baseType: !9018)
!9018 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!9019 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !9005, file: !220, line: 2007, baseType: !1404, size: 8, offset: 128)
!9020 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !9005, file: !220, line: 2008, baseType: !1404, size: 8, offset: 136)
!9021 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !9005, file: !220, line: 2009, baseType: !1404, size: 8, offset: 144)
!9022 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !9005, file: !220, line: 2010, baseType: !9023, size: 8, offset: 152)
!9023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 8, elements: !1422)
!9024 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9005, file: !220, line: 2011, baseType: !9025, size: 224, offset: 160)
!9025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 224, elements: !9026)
!9026 = !{!9027}
!9027 = !DISubrange(count: 7)
!9028 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !9005, file: !220, line: 2012, baseType: !7943, offset: 384)
!9029 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !9002, file: !262, line: 130, baseType: !9030, size: 384, offset: 384)
!9030 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9002, file: !262, line: 126, size: 384, elements: !9031)
!9031 = !{!9032, !9034, !9035}
!9032 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !9030, file: !262, line: 127, baseType: !9033, size: 128)
!9033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 128, elements: !484)
!9034 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !9030, file: !262, line: 128, baseType: !9033, size: 128, offset: 128)
!9035 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !9030, file: !262, line: 129, baseType: !9033, size: 128, offset: 256)
!9036 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !8546, file: !262, line: 500, baseType: !9037, size: 64, offset: 3520)
!9037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9038, size: 64)
!9038 = !DISubroutineType(types: !9039)
!9039 = !{!43, !301, !9040}
!9040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9041, size: 64)
!9041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9002)
!9042 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !8546, file: !262, line: 502, baseType: !9043, size: 64, offset: 3584)
!9043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9044, size: 64)
!9044 = !DISubroutineType(types: !9045)
!9045 = !{!43, !301, !9046}
!9046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9047, size: 64)
!9047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !220, line: 1389, size: 128, elements: !9048)
!9048 = !{!9049, !9050, !9051, !9052}
!9049 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !9047, file: !220, line: 1390, baseType: !474, size: 32)
!9050 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !9047, file: !220, line: 1392, baseType: !474, size: 32, offset: 32)
!9051 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !9047, file: !220, line: 1393, baseType: !474, size: 32, offset: 64)
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9047, file: !220, line: 1394, baseType: !474, size: 32, offset: 96)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !8546, file: !262, line: 504, baseType: !9043, size: 64, offset: 3648)
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !8546, file: !262, line: 506, baseType: !8735, size: 64, offset: 3712)
!9055 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !8546, file: !262, line: 508, baseType: !8975, size: 64, offset: 3776)
!9056 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !8546, file: !262, line: 510, baseType: !8989, size: 64, offset: 3840)
!9057 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !275, file: !42, line: 1922, baseType: !9058, size: 64, offset: 4096)
!9058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9059, size: 64)
!9059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9060)
!9060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !9061, line: 202, size: 384, elements: !9062)
!9061 = !DIFile(filename: "./include/net/ndisc.h", directory: "/home/lizy2001/genbc/linux")
!9062 = !{!9063, !9067, !9085, !9091, !9096, !9100}
!9063 = !DIDerivedType(tag: DW_TAG_member, name: "is_useropt", scope: !9060, file: !9061, line: 203, baseType: !9064, size: 64)
!9064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9065, size: 64)
!9065 = !DISubroutineType(types: !9066)
!9066 = !{!43, !1403}
!9067 = !DIDerivedType(tag: DW_TAG_member, name: "parse_options", scope: !9060, file: !9061, line: 204, baseType: !9068, size: 64, offset: 64)
!9068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9069, size: 64)
!9069 = !DISubroutineType(types: !9070)
!9070 = !{!43, !2893, !9071, !9076}
!9071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9072, size: 64)
!9072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nd_opt_hdr", file: !9061, line: 105, size: 16, elements: !9073)
!9073 = !{!9074, !9075}
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_type", scope: !9072, file: !9061, line: 106, baseType: !1404, size: 8)
!9075 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_len", scope: !9072, file: !9061, line: 107, baseType: !1404, size: 8, offset: 8)
!9076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9077, size: 64)
!9077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_options", file: !9061, line: 111, size: 1088, elements: !9078)
!9078 = !{!9079, !9083, !9084}
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_array", scope: !9077, file: !9061, line: 112, baseType: !9080, size: 960)
!9080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9071, size: 960, elements: !9081)
!9081 = !{!9082}
!9082 = !DISubrange(count: 15)
!9083 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts", scope: !9077, file: !9061, line: 117, baseType: !9071, size: 64, offset: 960)
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts_end", scope: !9077, file: !9061, line: 118, baseType: !9071, size: 64, offset: 1024)
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !9060, file: !9061, line: 207, baseType: !9086, size: 64, offset: 128)
!9086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9087, size: 64)
!9087 = !DISubroutineType(types: !9088)
!9088 = !{null, !2893, !2876, !713, !1403, !9089}
!9089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9090, size: 64)
!9090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9077)
!9091 = !DIDerivedType(tag: DW_TAG_member, name: "opt_addr_space", scope: !9060, file: !9061, line: 210, baseType: !9092, size: 64, offset: 192)
!9092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9093, size: 64)
!9093 = !DISubroutineType(types: !9094)
!9094 = !{!43, !2893, !1403, !2876, !8216, !9095}
!9095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8216, size: 64)
!9096 = !DIDerivedType(tag: DW_TAG_member, name: "fill_addr_option", scope: !9060, file: !9061, line: 213, baseType: !9097, size: 64, offset: 256)
!9097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9098, size: 64)
!9098 = !DISubroutineType(types: !9099)
!9099 = !{null, !2893, !426, !1403, !8882}
!9100 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_rcv_add_addr", scope: !9060, file: !9061, line: 216, baseType: !9101, size: 64, offset: 320)
!9101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9102, size: 64)
!9102 = !DISubroutineType(types: !9103)
!9103 = !{null, !1968, !301, !9104, !9107, !9197, !43, !713, !546, !546, !474, !713, !546}
!9104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9105, size: 64)
!9105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9106)
!9106 = !DICompositeType(tag: DW_TAG_structure_type, name: "prefix_info", file: !9061, line: 77, flags: DIFlagFwdDecl)
!9107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9108, size: 64)
!9108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !9109, line: 163, size: 4544, elements: !9110)
!9109 = !DIFile(filename: "./include/net/if_inet6.h", directory: "/home/lizy2001/genbc/linux")
!9110 = !{!9111, !9112, !9113, !9141, !9142, !9143, !9144, !9145, !9146, !9147, !9148, !9149, !9150, !9151, !9152, !9153, !9154, !9167, !9168, !9169, !9170, !9171, !9172, !9173, !9174, !9175, !9176, !9192, !9193, !9194, !9195, !9196}
!9111 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9108, file: !9109, line: 164, baseType: !301, size: 64)
!9112 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !9108, file: !9109, line: 166, baseType: !295, size: 128, offset: 64)
!9113 = !DIDerivedType(tag: DW_TAG_member, name: "mc_list", scope: !9108, file: !9109, line: 168, baseType: !9114, size: 64, offset: 192)
!9114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9115, size: 64)
!9115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmcaddr6", file: !9109, line: 114, size: 1152, elements: !9116)
!9116 = !{!9117, !9118, !9119, !9120, !9130, !9131, !9132, !9133, !9134, !9135, !9136, !9137, !9138, !9139, !9140}
!9117 = !DIDerivedType(tag: DW_TAG_member, name: "mca_addr", scope: !9115, file: !9109, line: 115, baseType: !2229, size: 128)
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "idev", scope: !9115, file: !9109, line: 116, baseType: !9107, size: 64, offset: 128)
!9119 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9115, file: !9109, line: 117, baseType: !9114, size: 64, offset: 192)
!9120 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sources", scope: !9115, file: !9109, line: 118, baseType: !9121, size: 64, offset: 256)
!9121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9122, size: 64)
!9122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip6_sf_list", file: !9109, line: 99, size: 384, elements: !9123)
!9123 = !{!9124, !9125, !9126, !9127, !9128, !9129}
!9124 = !DIDerivedType(tag: DW_TAG_member, name: "sf_next", scope: !9122, file: !9109, line: 100, baseType: !9121, size: 64)
!9125 = !DIDerivedType(tag: DW_TAG_member, name: "sf_addr", scope: !9122, file: !9109, line: 101, baseType: !2229, size: 128, offset: 64)
!9126 = !DIDerivedType(tag: DW_TAG_member, name: "sf_count", scope: !9122, file: !9109, line: 102, baseType: !9033, size: 128, offset: 192)
!9127 = !DIDerivedType(tag: DW_TAG_member, name: "sf_gsresp", scope: !9122, file: !9109, line: 103, baseType: !500, size: 8, offset: 320)
!9128 = !DIDerivedType(tag: DW_TAG_member, name: "sf_oldin", scope: !9122, file: !9109, line: 104, baseType: !500, size: 8, offset: 328)
!9129 = !DIDerivedType(tag: DW_TAG_member, name: "sf_crcount", scope: !9122, file: !9109, line: 105, baseType: !500, size: 8, offset: 336)
!9130 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tomb", scope: !9115, file: !9109, line: 119, baseType: !9121, size: 64, offset: 320)
!9131 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfmode", scope: !9115, file: !9109, line: 120, baseType: !7, size: 32, offset: 384)
!9132 = !DIDerivedType(tag: DW_TAG_member, name: "mca_crcount", scope: !9115, file: !9109, line: 121, baseType: !500, size: 8, offset: 416)
!9133 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfcount", scope: !9115, file: !9109, line: 122, baseType: !9033, size: 128, offset: 448)
!9134 = !DIDerivedType(tag: DW_TAG_member, name: "mca_timer", scope: !9115, file: !9109, line: 123, baseType: !2246, size: 320, offset: 576)
!9135 = !DIDerivedType(tag: DW_TAG_member, name: "mca_flags", scope: !9115, file: !9109, line: 124, baseType: !7, size: 32, offset: 896)
!9136 = !DIDerivedType(tag: DW_TAG_member, name: "mca_users", scope: !9115, file: !9109, line: 125, baseType: !43, size: 32, offset: 928)
!9137 = !DIDerivedType(tag: DW_TAG_member, name: "mca_refcnt", scope: !9115, file: !9109, line: 126, baseType: !1277, size: 32, offset: 960)
!9138 = !DIDerivedType(tag: DW_TAG_member, name: "mca_lock", scope: !9115, file: !9109, line: 127, baseType: !735, offset: 992)
!9139 = !DIDerivedType(tag: DW_TAG_member, name: "mca_cstamp", scope: !9115, file: !9109, line: 128, baseType: !323, size: 64, offset: 1024)
!9140 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tstamp", scope: !9115, file: !9109, line: 129, baseType: !323, size: 64, offset: 1088)
!9141 = !DIDerivedType(tag: DW_TAG_member, name: "mc_tomb", scope: !9108, file: !9109, line: 169, baseType: !9114, size: 64, offset: 256)
!9142 = !DIDerivedType(tag: DW_TAG_member, name: "mc_lock", scope: !9108, file: !9109, line: 170, baseType: !735, offset: 320)
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qrv", scope: !9108, file: !9109, line: 172, baseType: !500, size: 8, offset: 320)
!9144 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_running", scope: !9108, file: !9109, line: 173, baseType: !500, size: 8, offset: 328)
!9145 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_count", scope: !9108, file: !9109, line: 174, baseType: !500, size: 8, offset: 336)
!9146 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_count", scope: !9108, file: !9109, line: 175, baseType: !500, size: 8, offset: 344)
!9147 = !DIDerivedType(tag: DW_TAG_member, name: "mc_v1_seen", scope: !9108, file: !9109, line: 177, baseType: !323, size: 64, offset: 384)
!9148 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qi", scope: !9108, file: !9109, line: 178, baseType: !323, size: 64, offset: 448)
!9149 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qri", scope: !9108, file: !9109, line: 179, baseType: !323, size: 64, offset: 512)
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "mc_maxdelay", scope: !9108, file: !9109, line: 180, baseType: !323, size: 64, offset: 576)
!9151 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_timer", scope: !9108, file: !9109, line: 182, baseType: !2246, size: 320, offset: 640)
!9152 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_timer", scope: !9108, file: !9109, line: 183, baseType: !2246, size: 320, offset: 960)
!9153 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_timer", scope: !9108, file: !9109, line: 184, baseType: !2246, size: 320, offset: 1280)
!9154 = !DIDerivedType(tag: DW_TAG_member, name: "ac_list", scope: !9108, file: !9109, line: 186, baseType: !9155, size: 64, offset: 1600)
!9155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9156, size: 64)
!9156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifacaddr6", file: !9109, line: 140, size: 704, elements: !9157)
!9157 = !{!9158, !9159, !9160, !9161, !9162, !9163, !9164, !9165, !9166}
!9158 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr", scope: !9156, file: !9109, line: 141, baseType: !2229, size: 128)
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "aca_rt", scope: !9156, file: !9109, line: 142, baseType: !2776, size: 64, offset: 128)
!9160 = !DIDerivedType(tag: DW_TAG_member, name: "aca_next", scope: !9156, file: !9109, line: 143, baseType: !9155, size: 64, offset: 192)
!9161 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr_lst", scope: !9156, file: !9109, line: 144, baseType: !287, size: 128, offset: 256)
!9162 = !DIDerivedType(tag: DW_TAG_member, name: "aca_users", scope: !9156, file: !9109, line: 145, baseType: !43, size: 32, offset: 384)
!9163 = !DIDerivedType(tag: DW_TAG_member, name: "aca_refcnt", scope: !9156, file: !9109, line: 146, baseType: !1277, size: 32, offset: 416)
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "aca_cstamp", scope: !9156, file: !9109, line: 147, baseType: !323, size: 64, offset: 448)
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "aca_tstamp", scope: !9156, file: !9109, line: 148, baseType: !323, size: 64, offset: 512)
!9166 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9156, file: !9109, line: 149, baseType: !310, size: 128, align: 64, offset: 576)
!9167 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9108, file: !9109, line: 187, baseType: !2983, offset: 1664)
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9108, file: !9109, line: 188, baseType: !1277, size: 32, offset: 1664)
!9169 = !DIDerivedType(tag: DW_TAG_member, name: "if_flags", scope: !9108, file: !9109, line: 189, baseType: !474, size: 32, offset: 1696)
!9170 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !9108, file: !9109, line: 190, baseType: !43, size: 32, offset: 1728)
!9171 = !DIDerivedType(tag: DW_TAG_member, name: "desync_factor", scope: !9108, file: !9109, line: 192, baseType: !713, size: 32, offset: 1760)
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "tempaddr_list", scope: !9108, file: !9109, line: 193, baseType: !295, size: 128, offset: 1792)
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !9108, file: !9109, line: 195, baseType: !2229, size: 128, offset: 1920)
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "nd_parms", scope: !9108, file: !9109, line: 197, baseType: !3020, size: 64, offset: 2048)
!9175 = !DIDerivedType(tag: DW_TAG_member, name: "cnf", scope: !9108, file: !9109, line: 198, baseType: !2720, size: 1600, offset: 2112)
!9176 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !9108, file: !9109, line: 199, baseType: !9177, size: 256, offset: 3712)
!9177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devstat", file: !9109, line: 156, size: 256, elements: !9178)
!9178 = !{!9179, !9180, !9181, !9187}
!9179 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir_entry", scope: !9177, file: !9109, line: 157, baseType: !2003, size: 64)
!9180 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !9177, file: !9109, line: 158, baseType: !2055, size: 64, offset: 64)
!9181 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6dev", scope: !9177, file: !9109, line: 159, baseType: !9182, size: 64, offset: 128)
!9182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9183, size: 64)
!9183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib_device", file: !2050, line: 75, size: 384, elements: !9184)
!9184 = !{!9185}
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !9183, file: !2050, line: 76, baseType: !9186, size: 384)
!9186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !382, size: 384, elements: !1677)
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msgdev", scope: !9177, file: !9109, line: 160, baseType: !9188, size: 64, offset: 192)
!9188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9189, size: 64)
!9189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib_device", file: !2050, line: 85, size: 32768, elements: !9190)
!9190 = !{!9191}
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !9189, file: !2050, line: 86, baseType: !2095, size: 32768)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "rs_timer", scope: !9108, file: !9109, line: 201, baseType: !2246, size: 320, offset: 3968)
!9193 = !DIDerivedType(tag: DW_TAG_member, name: "rs_interval", scope: !9108, file: !9109, line: 202, baseType: !1496, size: 32, offset: 4288)
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "rs_probes", scope: !9108, file: !9109, line: 203, baseType: !1404, size: 8, offset: 4320)
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !9108, file: !9109, line: 205, baseType: !323, size: 64, offset: 4352)
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9108, file: !9109, line: 206, baseType: !310, size: 128, align: 64, offset: 4416)
!9197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64)
!9198 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !275, file: !42, line: 1933, baseType: !9199, size: 64, offset: 4160)
!9199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9200, size: 64)
!9200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9201)
!9201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !42, line: 270, size: 384, elements: !9202)
!9202 = !{!9203, !9207, !9213, !9218, !9222, !9226}
!9203 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !9201, file: !42, line: 271, baseType: !9204, size: 64)
!9204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9205, size: 64)
!9205 = !DISubroutineType(types: !9206)
!9206 = !{!43, !426, !301, !483, !2269, !2269, !7}
!9207 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !9201, file: !42, line: 274, baseType: !9208, size: 64, offset: 64)
!9208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9209, size: 64)
!9209 = !DISubroutineType(types: !9210)
!9210 = !{!43, !9211, !8012}
!9211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9212, size: 64)
!9212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !427)
!9213 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !9201, file: !42, line: 275, baseType: !9214, size: 64, offset: 128)
!9214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9215, size: 64)
!9215 = !DISubroutineType(types: !9216)
!9216 = !{!43, !2900, !9217, !495}
!9217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 64)
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !9201, file: !42, line: 276, baseType: !9219, size: 64, offset: 192)
!9219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9220, size: 64)
!9220 = !DISubroutineType(types: !9221)
!9221 = !{null, !9217, !2893, !717}
!9222 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !9201, file: !42, line: 279, baseType: !9223, size: 64, offset: 256)
!9223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9224, size: 64)
!9224 = !DISubroutineType(types: !9225)
!9225 = !{!546, !303, !7}
!9226 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !9201, file: !42, line: 280, baseType: !9227, size: 64, offset: 320)
!9227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9228, size: 64)
!9228 = !DISubroutineType(types: !9229)
!9229 = !{!495, !9211}
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !275, file: !42, line: 1935, baseType: !7, size: 32, offset: 4224)
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !275, file: !42, line: 1936, baseType: !7, size: 32, offset: 4256)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !275, file: !42, line: 1938, baseType: !483, size: 16, offset: 4288)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !275, file: !42, line: 1939, baseType: !483, size: 16, offset: 4304)
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !275, file: !42, line: 1941, baseType: !500, size: 8, offset: 4320)
!9235 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !275, file: !42, line: 1942, baseType: !500, size: 8, offset: 4328)
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !275, file: !42, line: 1944, baseType: !500, size: 8, offset: 4336)
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !275, file: !42, line: 1945, baseType: !500, size: 8, offset: 4344)
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !275, file: !42, line: 1952, baseType: !7, size: 32, offset: 4352)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !275, file: !42, line: 1953, baseType: !7, size: 32, offset: 4384)
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !275, file: !42, line: 1954, baseType: !7, size: 32, offset: 4416)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !275, file: !42, line: 1955, baseType: !483, size: 16, offset: 4448)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !275, file: !42, line: 1956, baseType: !483, size: 16, offset: 4464)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !275, file: !42, line: 1957, baseType: !500, size: 8, offset: 4480)
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !275, file: !42, line: 1958, baseType: !500, size: 8, offset: 4488)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !275, file: !42, line: 1960, baseType: !483, size: 16, offset: 4496)
!9246 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !275, file: !42, line: 1961, baseType: !483, size: 16, offset: 4512)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !275, file: !42, line: 1964, baseType: !721, size: 256, offset: 4528)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !275, file: !42, line: 1965, baseType: !500, size: 8, offset: 4784)
!9249 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !275, file: !42, line: 1966, baseType: !500, size: 8, offset: 4792)
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !275, file: !42, line: 1967, baseType: !500, size: 8, offset: 4800)
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !275, file: !42, line: 1968, baseType: !500, size: 8, offset: 4808)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !275, file: !42, line: 1970, baseType: !483, size: 16, offset: 4816)
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !275, file: !42, line: 1971, baseType: !483, size: 16, offset: 4832)
!9254 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !275, file: !42, line: 1972, baseType: !483, size: 16, offset: 4848)
!9255 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !275, file: !42, line: 1973, baseType: !735, offset: 4864)
!9256 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !275, file: !42, line: 1975, baseType: !9257, size: 192, offset: 4864)
!9257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !42, line: 224, size: 192, elements: !9258)
!9258 = !{!9259, !9260}
!9259 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9257, file: !42, line: 225, baseType: !295, size: 128)
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9257, file: !42, line: 226, baseType: !43, size: 32, offset: 128)
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !275, file: !42, line: 1976, baseType: !9257, size: 192, offset: 5056)
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !275, file: !42, line: 1977, baseType: !9257, size: 192, offset: 5248)
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !275, file: !42, line: 1980, baseType: !4026, size: 64, offset: 5440)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !275, file: !42, line: 1985, baseType: !7, size: 32, offset: 5504)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !275, file: !42, line: 1986, baseType: !7, size: 32, offset: 5536)
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !275, file: !42, line: 1987, baseType: !546, size: 8, offset: 5568)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !275, file: !42, line: 1996, baseType: !9268, size: 64, offset: 5632)
!9268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9269, size: 64)
!9269 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !42, line: 1996, flags: DIFlagFwdDecl)
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !275, file: !42, line: 2007, baseType: !9271, size: 64, offset: 5696)
!9271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9272, size: 64)
!9272 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !42, line: 2007, flags: DIFlagFwdDecl)
!9273 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !275, file: !42, line: 2011, baseType: !9107, size: 64, offset: 5760)
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !275, file: !42, line: 2015, baseType: !9275, size: 64, offset: 5824)
!9275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9276, size: 64)
!9276 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !42, line: 62, flags: DIFlagFwdDecl)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !275, file: !42, line: 2016, baseType: !9278, size: 64, offset: 5888)
!9278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9279, size: 64)
!9279 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !42, line: 64, flags: DIFlagFwdDecl)
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !275, file: !42, line: 2025, baseType: !8012, size: 64, offset: 5952)
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !275, file: !42, line: 2027, baseType: !9282, size: 64, offset: 6016)
!9282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9283, size: 64)
!9283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !42, line: 736, size: 1536, elements: !9284)
!9284 = !{!9285, !9286, !9287}
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !9283, file: !42, line: 741, baseType: !4018, size: 512)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9283, file: !42, line: 742, baseType: !301, size: 64, offset: 512)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !9283, file: !42, line: 743, baseType: !9288, size: 512, align: 512, offset: 1024)
!9288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !8510, line: 57, size: 512, align: 512, elements: !9289)
!9289 = !{!9290, !9291, !9292, !9293}
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9288, file: !8510, line: 58, baseType: !301, size: 64)
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !9288, file: !8510, line: 59, baseType: !713, size: 32, offset: 64)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !9288, file: !8510, line: 60, baseType: !713, size: 32, offset: 96)
!9293 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !9288, file: !8510, line: 61, baseType: !8518, size: 64, offset: 128)
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !275, file: !42, line: 2028, baseType: !7, size: 32, offset: 6080)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !275, file: !42, line: 2029, baseType: !7, size: 32, offset: 6112)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !275, file: !42, line: 2031, baseType: !3120, size: 64, offset: 6144)
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !275, file: !42, line: 2032, baseType: !323, size: 64, offset: 6208)
!9298 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !275, file: !42, line: 2033, baseType: !43, size: 32, offset: 6272)
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !275, file: !42, line: 2034, baseType: !9300, size: 64, offset: 6336)
!9300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9301, size: 64)
!9301 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !42, line: 430, baseType: !9302)
!9302 = !DISubroutineType(types: !9303)
!9303 = !{!9304, !9305}
!9304 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !42, line: 429, baseType: !268)
!9305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !275, file: !42, line: 2035, baseType: !576, size: 64, offset: 6400)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !275, file: !42, line: 2040, baseType: !9308, size: 64, offset: 6464)
!9308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9309, size: 64)
!9309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !42, line: 584, size: 1600, elements: !9310)
!9310 = !{!9311, !9312, !9690, !9691, !9692, !9693, !9694, !9695, !9696, !9697, !9698, !9699}
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9309, file: !42, line: 588, baseType: !301, size: 64)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !9309, file: !42, line: 589, baseType: !9313, size: 64, offset: 64)
!9313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9314, size: 64)
!9314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !9315, line: 57, size: 2048, elements: !9316)
!9315 = !DIFile(filename: "./include/net/sch_generic.h", directory: "/home/lizy2001/genbc/linux")
!9316 = !{!9317, !9321, !9325, !9326, !9327, !9630, !9650, !9651, !9652, !9653, !9654, !9657, !9667, !9668, !9669, !9670, !9671, !9678, !9679, !9680, !9681, !9682, !9683, !9684, !9685, !9686, !9687, !9688}
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !9314, file: !9315, line: 58, baseType: !9318, size: 64)
!9318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9319, size: 64)
!9319 = !DISubroutineType(types: !9320)
!9320 = !{!43, !426, !9313, !9305}
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !9314, file: !9315, line: 61, baseType: !9322, size: 64, offset: 64)
!9322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9323, size: 64)
!9323 = !DISubroutineType(types: !9324)
!9324 = !{!426, !9313}
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9314, file: !9315, line: 62, baseType: !7, size: 32, offset: 128)
!9326 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !9314, file: !9315, line: 82, baseType: !713, size: 32, offset: 160)
!9327 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9314, file: !9315, line: 83, baseType: !9328, size: 64, offset: 192)
!9328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9329, size: 64)
!9329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9330)
!9330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_ops", file: !9315, line: 238, size: 1344, elements: !9331)
!9331 = !{!9332, !9334, !9590, !9591, !9592, !9593, !9594, !9595, !9596, !9600, !9604, !9605, !9606, !9607, !9611, !9615, !9619, !9623, !9624, !9628, !9629}
!9332 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9330, file: !9315, line: 239, baseType: !9333, size: 64)
!9333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9330, size: 64)
!9334 = !DIDerivedType(tag: DW_TAG_member, name: "cl_ops", scope: !9330, file: !9315, line: 240, baseType: !9335, size: 64, offset: 64)
!9335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9336, size: 64)
!9336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9337)
!9337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_class_ops", file: !9315, line: 198, size: 896, elements: !9338)
!9338 = !{!9339, !9340, !9355, !9360, !9364, !9368, !9372, !9376, !9380, !9386, !9553, !9557, !9558, !9562}
!9339 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9337, file: !9315, line: 199, baseType: !7, size: 32)
!9340 = !DIDerivedType(tag: DW_TAG_member, name: "select_queue", scope: !9337, file: !9315, line: 201, baseType: !9341, size: 64, offset: 64)
!9341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9342, size: 64)
!9342 = !DISubroutineType(types: !9343)
!9343 = !{!9308, !9313, !9344}
!9344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9345, size: 64)
!9345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcmsg", file: !9346, line: 577, size: 160, elements: !9347)
!9346 = !DIFile(filename: "./include/uapi/linux/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!9347 = !{!9348, !9349, !9350, !9351, !9352, !9353, !9354}
!9348 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_family", scope: !9345, file: !9346, line: 578, baseType: !500, size: 8)
!9349 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad1", scope: !9345, file: !9346, line: 579, baseType: !500, size: 8, offset: 8)
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad2", scope: !9345, file: !9346, line: 580, baseType: !483, size: 16, offset: 16)
!9351 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_ifindex", scope: !9345, file: !9346, line: 581, baseType: !43, size: 32, offset: 32)
!9352 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_handle", scope: !9345, file: !9346, line: 582, baseType: !474, size: 32, offset: 64)
!9353 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_parent", scope: !9345, file: !9346, line: 583, baseType: !474, size: 32, offset: 96)
!9354 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_info", scope: !9345, file: !9346, line: 588, baseType: !474, size: 32, offset: 128)
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "graft", scope: !9337, file: !9315, line: 202, baseType: !9356, size: 64, offset: 128)
!9356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9357, size: 64)
!9357 = !DISubroutineType(types: !9358)
!9358 = !{!43, !9313, !323, !9313, !9359, !2610}
!9359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9313, size: 64)
!9360 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !9337, file: !9315, line: 205, baseType: !9361, size: 64, offset: 192)
!9361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9362, size: 64)
!9362 = !DISubroutineType(types: !9363)
!9363 = !{!9313, !9313, !323}
!9364 = !DIDerivedType(tag: DW_TAG_member, name: "qlen_notify", scope: !9337, file: !9315, line: 206, baseType: !9365, size: 64, offset: 256)
!9365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9366, size: 64)
!9366 = !DISubroutineType(types: !9367)
!9367 = !{null, !9313, !323}
!9368 = !DIDerivedType(tag: DW_TAG_member, name: "find", scope: !9337, file: !9315, line: 209, baseType: !9369, size: 64, offset: 320)
!9369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9370, size: 64)
!9370 = !DISubroutineType(types: !9371)
!9371 = !{!323, !9313, !713}
!9372 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9337, file: !9315, line: 210, baseType: !9373, size: 64, offset: 384)
!9373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9374, size: 64)
!9374 = !DISubroutineType(types: !9375)
!9375 = !{!43, !9313, !713, !713, !8273, !2593, !2610}
!9376 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !9337, file: !9315, line: 213, baseType: !9377, size: 64, offset: 448)
!9377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9378, size: 64)
!9378 = !DISubroutineType(types: !9379)
!9379 = !{!43, !9313, !323}
!9380 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !9337, file: !9315, line: 214, baseType: !9381, size: 64, offset: 512)
!9381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9382, size: 64)
!9382 = !DISubroutineType(types: !9383)
!9383 = !{null, !9313, !9384}
!9384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9385, size: 64)
!9385 = !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_walker", file: !9315, line: 24, flags: DIFlagFwdDecl)
!9386 = !DIDerivedType(tag: DW_TAG_member, name: "tcf_block", scope: !9337, file: !9315, line: 217, baseType: !9387, size: 64, offset: 576)
!9387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9388, size: 64)
!9388 = !DISubroutineType(types: !9389)
!9389 = !{!9390, !9313, !323, !2610}
!9390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9391, size: 64)
!9391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_block", file: !9315, line: 411, size: 9920, elements: !9392)
!9392 = !{!9393, !9394, !9395, !9396, !9397, !9398, !9399, !9400, !9401, !9406, !9407, !9408, !9409, !9410, !9411, !9549, !9550, !9552}
!9393 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9391, file: !9315, line: 415, baseType: !960, size: 192)
!9394 = !DIDerivedType(tag: DW_TAG_member, name: "chain_list", scope: !9391, file: !9315, line: 416, baseType: !295, size: 128, offset: 192)
!9395 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9391, file: !9315, line: 417, baseType: !713, size: 32, offset: 320)
!9396 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !9391, file: !9315, line: 418, baseType: !713, size: 32, offset: 352)
!9397 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9391, file: !9315, line: 419, baseType: !1277, size: 32, offset: 384)
!9398 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !9391, file: !9315, line: 420, baseType: !1968, size: 64, offset: 448)
!9399 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !9391, file: !9315, line: 421, baseType: !9313, size: 64, offset: 512)
!9400 = !DIDerivedType(tag: DW_TAG_member, name: "cb_lock", scope: !9391, file: !9315, line: 422, baseType: !1168, size: 256, offset: 576)
!9401 = !DIDerivedType(tag: DW_TAG_member, name: "flow_block", scope: !9391, file: !9315, line: 423, baseType: !9402, size: 128, offset: 832)
!9402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flow_block", file: !9403, line: 430, size: 128, elements: !9404)
!9403 = !DIFile(filename: "./include/net/flow_offload.h", directory: "/home/lizy2001/genbc/linux")
!9404 = !{!9405}
!9405 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !9402, file: !9403, line: 431, baseType: !295, size: 128)
!9406 = !DIDerivedType(tag: DW_TAG_member, name: "owner_list", scope: !9391, file: !9315, line: 424, baseType: !295, size: 128, offset: 960)
!9407 = !DIDerivedType(tag: DW_TAG_member, name: "keep_dst", scope: !9391, file: !9315, line: 425, baseType: !546, size: 8, offset: 1088)
!9408 = !DIDerivedType(tag: DW_TAG_member, name: "offloadcnt", scope: !9391, file: !9315, line: 426, baseType: !394, size: 32, offset: 1120)
!9409 = !DIDerivedType(tag: DW_TAG_member, name: "nooffloaddevcnt", scope: !9391, file: !9315, line: 427, baseType: !7, size: 32, offset: 1152)
!9410 = !DIDerivedType(tag: DW_TAG_member, name: "lockeddevcnt", scope: !9391, file: !9315, line: 428, baseType: !7, size: 32, offset: 1184)
!9411 = !DIDerivedType(tag: DW_TAG_member, name: "chain0", scope: !9391, file: !9315, line: 432, baseType: !9412, size: 192, offset: 1216)
!9412 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9391, file: !9315, line: 429, size: 192, elements: !9413)
!9413 = !{!9414, !9548}
!9414 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !9412, file: !9315, line: 430, baseType: !9415, size: 64)
!9415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9416, size: 64)
!9416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_chain", file: !9315, line: 395, size: 832, elements: !9417)
!9417 = !{!9418, !9419, !9538, !9539, !9540, !9541, !9542, !9543, !9544, !9545, !9546, !9547}
!9418 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_lock", scope: !9416, file: !9315, line: 397, baseType: !960, size: 192)
!9419 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain", scope: !9416, file: !9315, line: 398, baseType: !9420, size: 64, offset: 192)
!9420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9421, size: 64)
!9421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto", file: !9315, line: 356, size: 768, elements: !9422)
!9422 = !{!9423, !9424, !9425, !9457, !9458, !9459, !9460, !9532, !9533, !9534, !9535, !9536, !9537}
!9423 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9421, file: !9315, line: 358, baseType: !9420, size: 64)
!9424 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !9421, file: !9315, line: 359, baseType: !576, size: 64, offset: 64)
!9425 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !9421, file: !9315, line: 362, baseType: !9426, size: 64, offset: 128)
!9426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9427, size: 64)
!9427 = !DISubroutineType(types: !9428)
!9428 = !{!43, !426, !9429, !9431}
!9429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9430, size: 64)
!9430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9421)
!9431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9432, size: 64)
!9432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_result", file: !9315, line: 275, size: 128, elements: !9433)
!9433 = !{!9434}
!9434 = !DIDerivedType(tag: DW_TAG_member, scope: !9432, file: !9315, line: 276, baseType: !9435, size: 128)
!9435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9432, file: !9315, line: 276, size: 128, elements: !9436)
!9436 = !{!9437, !9442, !9443}
!9437 = !DIDerivedType(tag: DW_TAG_member, scope: !9435, file: !9315, line: 277, baseType: !9438, size: 128)
!9438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9435, file: !9315, line: 277, size: 128, elements: !9439)
!9439 = !{!9440, !9441}
!9440 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !9438, file: !9315, line: 278, baseType: !323, size: 64)
!9441 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !9438, file: !9315, line: 279, baseType: !713, size: 32, offset: 64)
!9442 = !DIDerivedType(tag: DW_TAG_member, name: "goto_tp", scope: !9435, file: !9315, line: 281, baseType: !9429, size: 64)
!9443 = !DIDerivedType(tag: DW_TAG_member, scope: !9435, file: !9315, line: 284, baseType: !9444, size: 128)
!9444 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9435, file: !9315, line: 284, size: 128, elements: !9445)
!9445 = !{!9446, !9447}
!9446 = !DIDerivedType(tag: DW_TAG_member, name: "ingress", scope: !9444, file: !9315, line: 285, baseType: !546, size: 8)
!9447 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !9444, file: !9315, line: 286, baseType: !9448, size: 64, offset: 64)
!9448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9449, size: 64)
!9449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_queue", file: !9450, line: 59, size: 160, elements: !9451)
!9450 = !DIFile(filename: "./include/uapi/linux/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9451 = !{!9452, !9453, !9454, !9455, !9456}
!9452 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9449, file: !9450, line: 60, baseType: !474, size: 32)
!9453 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9449, file: !9450, line: 61, baseType: !474, size: 32, offset: 32)
!9454 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9449, file: !9450, line: 62, baseType: !474, size: 32, offset: 64)
!9455 = !DIDerivedType(tag: DW_TAG_member, name: "requeues", scope: !9449, file: !9450, line: 63, baseType: !474, size: 32, offset: 96)
!9456 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9449, file: !9450, line: 64, baseType: !474, size: 32, offset: 128)
!9457 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !9421, file: !9315, line: 365, baseType: !495, size: 16, offset: 192)
!9458 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9421, file: !9315, line: 368, baseType: !713, size: 32, offset: 224)
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9421, file: !9315, line: 369, baseType: !576, size: 64, offset: 256)
!9460 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9421, file: !9315, line: 370, baseType: !9461, size: 64, offset: 320)
!9461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9462, size: 64)
!9462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9463)
!9463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto_ops", file: !9315, line: 293, size: 1536, elements: !9464)
!9464 = !{!9465, !9466, !9467, !9468, !9472, !9476, !9480, !9484, !9488, !9492, !9496, !9502, !9510, !9511, !9512, !9516, !9520, !9521, !9525, !9526, !9530, !9531}
!9465 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9463, file: !9315, line: 294, baseType: !295, size: 128)
!9466 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9463, file: !9315, line: 295, baseType: !278, size: 128, offset: 128)
!9467 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !9463, file: !9315, line: 297, baseType: !9426, size: 64, offset: 256)
!9468 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !9463, file: !9315, line: 300, baseType: !9469, size: 64, offset: 320)
!9469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9470, size: 64)
!9470 = !DISubroutineType(types: !9471)
!9471 = !{!43, !9420}
!9472 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !9463, file: !9315, line: 301, baseType: !9473, size: 64, offset: 384)
!9473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9474, size: 64)
!9474 = !DISubroutineType(types: !9475)
!9475 = !{null, !9420, !546, !2610}
!9476 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !9463, file: !9315, line: 304, baseType: !9477, size: 64, offset: 448)
!9477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9478, size: 64)
!9478 = !DISubroutineType(types: !9479)
!9479 = !{!576, !9420, !713}
!9480 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !9463, file: !9315, line: 305, baseType: !9481, size: 64, offset: 512)
!9481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9482, size: 64)
!9482 = !DISubroutineType(types: !9483)
!9483 = !{null, !9420, !576}
!9484 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9463, file: !9315, line: 306, baseType: !9485, size: 64, offset: 576)
!9485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9486, size: 64)
!9486 = !DISubroutineType(types: !9487)
!9487 = !{!43, !1968, !426, !9420, !323, !713, !8273, !3691, !546, !546, !2610}
!9488 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !9463, file: !9315, line: 311, baseType: !9489, size: 64, offset: 640)
!9489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9490, size: 64)
!9490 = !DISubroutineType(types: !9491)
!9491 = !{!43, !9420, !576, !4998, !546, !2610}
!9492 = !DIDerivedType(tag: DW_TAG_member, name: "delete_empty", scope: !9463, file: !9315, line: 314, baseType: !9493, size: 64, offset: 704)
!9493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9494, size: 64)
!9494 = !DISubroutineType(types: !9495)
!9495 = !{!546, !9420}
!9496 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !9463, file: !9315, line: 315, baseType: !9497, size: 64, offset: 768)
!9497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9498, size: 64)
!9498 = !DISubroutineType(types: !9499)
!9499 = !{null, !9420, !9500, !546}
!9500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9501, size: 64)
!9501 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_walker", file: !9315, line: 25, flags: DIFlagFwdDecl)
!9502 = !DIDerivedType(tag: DW_TAG_member, name: "reoffload", scope: !9463, file: !9315, line: 317, baseType: !9503, size: 64, offset: 832)
!9503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9504, size: 64)
!9504 = !DISubroutineType(types: !9505)
!9505 = !{!43, !9420, !546, !9506, !576, !2610}
!9506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9507, size: 64)
!9507 = !DIDerivedType(tag: DW_TAG_typedef, name: "flow_setup_cb_t", file: !9403, line: 450, baseType: !9508)
!9508 = !DISubroutineType(types: !9509)
!9509 = !{!43, !48, !576, !576}
!9510 = !DIDerivedType(tag: DW_TAG_member, name: "hw_add", scope: !9463, file: !9315, line: 320, baseType: !9481, size: 64, offset: 896)
!9511 = !DIDerivedType(tag: DW_TAG_member, name: "hw_del", scope: !9463, file: !9315, line: 322, baseType: !9481, size: 64, offset: 960)
!9512 = !DIDerivedType(tag: DW_TAG_member, name: "bind_class", scope: !9463, file: !9315, line: 324, baseType: !9513, size: 64, offset: 1024)
!9513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9514, size: 64)
!9514 = !DISubroutineType(types: !9515)
!9515 = !{null, !576, !713, !323, !576, !323}
!9516 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_create", scope: !9463, file: !9315, line: 326, baseType: !9517, size: 64, offset: 1088)
!9517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9518, size: 64)
!9518 = !DISubroutineType(types: !9519)
!9519 = !{!576, !1968, !9415, !8273, !2610}
!9520 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_destroy", scope: !9463, file: !9315, line: 330, baseType: !3501, size: 64, offset: 1152)
!9521 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9463, file: !9315, line: 333, baseType: !9522, size: 64, offset: 1216)
!9522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9523, size: 64)
!9523 = !DISubroutineType(types: !9524)
!9524 = !{!43, !1968, !9420, !576, !426, !9344, !546}
!9525 = !DIDerivedType(tag: DW_TAG_member, name: "terse_dump", scope: !9463, file: !9315, line: 336, baseType: !9522, size: 64, offset: 1280)
!9526 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_dump", scope: !9463, file: !9315, line: 340, baseType: !9527, size: 64, offset: 1344)
!9527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9528, size: 64)
!9528 = !DISubroutineType(types: !9529)
!9529 = !{!43, !426, !1968, !576}
!9530 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9463, file: !9315, line: 344, baseType: !858, size: 64, offset: 1408)
!9531 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9463, file: !9315, line: 345, baseType: !43, size: 32, offset: 1472)
!9532 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !9421, file: !9315, line: 371, baseType: !9415, size: 64, offset: 384)
!9533 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9421, file: !9315, line: 375, baseType: !735, offset: 448)
!9534 = !DIDerivedType(tag: DW_TAG_member, name: "deleting", scope: !9421, file: !9315, line: 376, baseType: !546, size: 8, offset: 448)
!9535 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9421, file: !9315, line: 377, baseType: !1277, size: 32, offset: 480)
!9536 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9421, file: !9315, line: 378, baseType: !310, size: 128, align: 64, offset: 512)
!9537 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_ht_node", scope: !9421, file: !9315, line: 379, baseType: !287, size: 128, offset: 640)
!9538 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9416, file: !9315, line: 399, baseType: !295, size: 128, offset: 256)
!9539 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !9416, file: !9315, line: 400, baseType: !9390, size: 64, offset: 384)
!9540 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9416, file: !9315, line: 401, baseType: !713, size: 32, offset: 448)
!9541 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9416, file: !9315, line: 402, baseType: !7, size: 32, offset: 480)
!9542 = !DIDerivedType(tag: DW_TAG_member, name: "action_refcnt", scope: !9416, file: !9315, line: 403, baseType: !7, size: 32, offset: 512)
!9543 = !DIDerivedType(tag: DW_TAG_member, name: "explicitly_created", scope: !9416, file: !9315, line: 404, baseType: !546, size: 8, offset: 544)
!9544 = !DIDerivedType(tag: DW_TAG_member, name: "flushing", scope: !9416, file: !9315, line: 405, baseType: !546, size: 8, offset: 552)
!9545 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_ops", scope: !9416, file: !9315, line: 406, baseType: !9461, size: 64, offset: 576)
!9546 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_priv", scope: !9416, file: !9315, line: 407, baseType: !576, size: 64, offset: 640)
!9547 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9416, file: !9315, line: 408, baseType: !310, size: 128, align: 64, offset: 704)
!9548 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_list", scope: !9412, file: !9315, line: 431, baseType: !295, size: 128, offset: 64)
!9549 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9391, file: !9315, line: 433, baseType: !310, size: 128, align: 64, offset: 1408)
!9550 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_ht", scope: !9391, file: !9315, line: 434, baseType: !9551, size: 8192, offset: 1536)
!9551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !863, size: 8192, elements: !3202)
!9552 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_lock", scope: !9391, file: !9315, line: 435, baseType: !960, size: 192, offset: 9728)
!9553 = !DIDerivedType(tag: DW_TAG_member, name: "bind_tcf", scope: !9337, file: !9315, line: 220, baseType: !9554, size: 64, offset: 640)
!9554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9555, size: 64)
!9555 = !DISubroutineType(types: !9556)
!9556 = !{!323, !9313, !323, !713}
!9557 = !DIDerivedType(tag: DW_TAG_member, name: "unbind_tcf", scope: !9337, file: !9315, line: 222, baseType: !9365, size: 64, offset: 704)
!9558 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9337, file: !9315, line: 225, baseType: !9559, size: 64, offset: 768)
!9559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9560, size: 64)
!9560 = !DISubroutineType(types: !9561)
!9561 = !{!43, !9313, !323, !426, !9344}
!9562 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !9337, file: !9315, line: 227, baseType: !9563, size: 64, offset: 832)
!9563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9564, size: 64)
!9564 = !DISubroutineType(types: !9565)
!9565 = !{!43, !9313, !323, !9566}
!9566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9567, size: 64)
!9567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_dump", file: !9568, line: 23, size: 768, elements: !9569)
!9568 = !DIFile(filename: "./include/net/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9569 = !{!9570, !9571, !9572, !9573, !9574, !9575, !9576, !9577, !9578}
!9570 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9567, file: !9568, line: 24, baseType: !2450, size: 64)
!9571 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !9567, file: !9568, line: 25, baseType: !426, size: 64, offset: 64)
!9572 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9567, file: !9568, line: 26, baseType: !8274, size: 64, offset: 128)
!9573 = !DIDerivedType(tag: DW_TAG_member, name: "compat_tc_stats", scope: !9567, file: !9568, line: 29, baseType: !43, size: 32, offset: 192)
!9574 = !DIDerivedType(tag: DW_TAG_member, name: "compat_xstats", scope: !9567, file: !9568, line: 30, baseType: !43, size: 32, offset: 224)
!9575 = !DIDerivedType(tag: DW_TAG_member, name: "padattr", scope: !9567, file: !9568, line: 31, baseType: !43, size: 32, offset: 256)
!9576 = !DIDerivedType(tag: DW_TAG_member, name: "xstats", scope: !9567, file: !9568, line: 32, baseType: !576, size: 64, offset: 320)
!9577 = !DIDerivedType(tag: DW_TAG_member, name: "xstats_len", scope: !9567, file: !9568, line: 33, baseType: !43, size: 32, offset: 384)
!9578 = !DIDerivedType(tag: DW_TAG_member, name: "tc_stats", scope: !9567, file: !9568, line: 34, baseType: !9579, size: 320, offset: 448)
!9579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_stats", file: !9580, line: 34, size: 320, elements: !9581)
!9580 = !DIFile(filename: "./include/uapi/linux/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!9581 = !{!9582, !9583, !9584, !9585, !9586, !9587, !9588, !9589}
!9582 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9579, file: !9580, line: 35, baseType: !344, size: 64)
!9583 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9579, file: !9580, line: 36, baseType: !474, size: 32, offset: 64)
!9584 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9579, file: !9580, line: 37, baseType: !474, size: 32, offset: 96)
!9585 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9579, file: !9580, line: 38, baseType: !474, size: 32, offset: 128)
!9586 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !9579, file: !9580, line: 40, baseType: !474, size: 32, offset: 160)
!9587 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !9579, file: !9580, line: 41, baseType: !474, size: 32, offset: 192)
!9588 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9579, file: !9580, line: 42, baseType: !474, size: 32, offset: 224)
!9589 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9579, file: !9580, line: 43, baseType: !474, size: 32, offset: 256)
!9590 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9330, file: !9315, line: 241, baseType: !278, size: 128, offset: 128)
!9591 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !9330, file: !9315, line: 242, baseType: !43, size: 32, offset: 256)
!9592 = !DIDerivedType(tag: DW_TAG_member, name: "static_flags", scope: !9330, file: !9315, line: 243, baseType: !7, size: 32, offset: 288)
!9593 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !9330, file: !9315, line: 245, baseType: !9318, size: 64, offset: 320)
!9594 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !9330, file: !9315, line: 248, baseType: !9322, size: 64, offset: 384)
!9595 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !9330, file: !9315, line: 249, baseType: !9322, size: 64, offset: 448)
!9596 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !9330, file: !9315, line: 251, baseType: !9597, size: 64, offset: 512)
!9597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9598, size: 64)
!9598 = !DISubroutineType(types: !9599)
!9599 = !{!43, !9313, !8274, !2610}
!9600 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !9330, file: !9315, line: 253, baseType: !9601, size: 64, offset: 576)
!9601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9602, size: 64)
!9602 = !DISubroutineType(types: !9603)
!9603 = !{null, !9313}
!9604 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !9330, file: !9315, line: 254, baseType: !9601, size: 64, offset: 640)
!9605 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9330, file: !9315, line: 255, baseType: !9597, size: 64, offset: 704)
!9606 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !9330, file: !9315, line: 258, baseType: !9601, size: 64, offset: 768)
!9607 = !DIDerivedType(tag: DW_TAG_member, name: "change_tx_queue_len", scope: !9330, file: !9315, line: 259, baseType: !9608, size: 64, offset: 832)
!9608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9609, size: 64)
!9609 = !DISubroutineType(types: !9610)
!9610 = !{!43, !9313, !7}
!9611 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9330, file: !9315, line: 261, baseType: !9612, size: 64, offset: 896)
!9612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9613, size: 64)
!9613 = !DISubroutineType(types: !9614)
!9614 = !{!43, !9313, !426}
!9615 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !9330, file: !9315, line: 262, baseType: !9616, size: 64, offset: 960)
!9616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9617, size: 64)
!9617 = !DISubroutineType(types: !9618)
!9618 = !{!43, !9313, !9566}
!9619 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_set", scope: !9330, file: !9315, line: 264, baseType: !9620, size: 64, offset: 1024)
!9620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9621, size: 64)
!9621 = !DISubroutineType(types: !9622)
!9622 = !{null, !9313, !713}
!9623 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_set", scope: !9330, file: !9315, line: 266, baseType: !9620, size: 64, offset: 1088)
!9624 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_get", scope: !9330, file: !9315, line: 268, baseType: !9625, size: 64, offset: 1152)
!9625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9626, size: 64)
!9626 = !DISubroutineType(types: !9627)
!9627 = !{!713, !9313}
!9628 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_get", scope: !9330, file: !9315, line: 269, baseType: !9625, size: 64, offset: 1216)
!9629 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9330, file: !9315, line: 271, baseType: !858, size: 64, offset: 1280)
!9630 = !DIDerivedType(tag: DW_TAG_member, name: "stab", scope: !9314, file: !9315, line: 84, baseType: !9631, size: 64, offset: 256)
!9631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9632, size: 64)
!9632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_size_table", file: !9315, line: 41, size: 512, elements: !9633)
!9633 = !{!9634, !9635, !9636, !9647, !9648}
!9634 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9632, file: !9315, line: 42, baseType: !310, size: 128, align: 64)
!9635 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9632, file: !9315, line: 43, baseType: !295, size: 128, offset: 128)
!9636 = !DIDerivedType(tag: DW_TAG_member, name: "szopts", scope: !9632, file: !9315, line: 44, baseType: !9637, size: 192, offset: 256)
!9637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_sizespec", file: !9580, line: 102, size: 192, elements: !9638)
!9638 = !{!9639, !9640, !9641, !9642, !9643, !9644, !9645, !9646}
!9639 = !DIDerivedType(tag: DW_TAG_member, name: "cell_log", scope: !9637, file: !9580, line: 103, baseType: !500, size: 8)
!9640 = !DIDerivedType(tag: DW_TAG_member, name: "size_log", scope: !9637, file: !9580, line: 104, baseType: !500, size: 8, offset: 8)
!9641 = !DIDerivedType(tag: DW_TAG_member, name: "cell_align", scope: !9637, file: !9580, line: 105, baseType: !1252, size: 16, offset: 16)
!9642 = !DIDerivedType(tag: DW_TAG_member, name: "overhead", scope: !9637, file: !9580, line: 106, baseType: !43, size: 32, offset: 32)
!9643 = !DIDerivedType(tag: DW_TAG_member, name: "linklayer", scope: !9637, file: !9580, line: 107, baseType: !7, size: 32, offset: 64)
!9644 = !DIDerivedType(tag: DW_TAG_member, name: "mpu", scope: !9637, file: !9580, line: 108, baseType: !7, size: 32, offset: 96)
!9645 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !9637, file: !9580, line: 109, baseType: !7, size: 32, offset: 128)
!9646 = !DIDerivedType(tag: DW_TAG_member, name: "tsize", scope: !9637, file: !9580, line: 110, baseType: !7, size: 32, offset: 160)
!9647 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9632, file: !9315, line: 45, baseType: !43, size: 32, offset: 448)
!9648 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9632, file: !9315, line: 46, baseType: !9649, offset: 480)
!9649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1044, elements: !320)
!9650 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !9314, file: !9315, line: 85, baseType: !287, size: 128, offset: 320)
!9651 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !9314, file: !9315, line: 86, baseType: !713, size: 32, offset: 448)
!9652 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !9314, file: !9315, line: 87, baseType: !713, size: 32, offset: 480)
!9653 = !DIDerivedType(tag: DW_TAG_member, name: "dev_queue", scope: !9314, file: !9315, line: 89, baseType: !9308, size: 64, offset: 512)
!9654 = !DIDerivedType(tag: DW_TAG_member, name: "rate_est", scope: !9314, file: !9315, line: 91, baseType: !9655, size: 64, offset: 576)
!9655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9656, size: 64)
!9656 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_rate_estimator", file: !9568, line: 21, flags: DIFlagFwdDecl)
!9657 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bstats", scope: !9314, file: !9315, line: 92, baseType: !9658, size: 64, offset: 640)
!9658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9659, size: 64)
!9659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_cpu", file: !9568, line: 16, size: 128, align: 128, elements: !9660)
!9660 = !{!9661, !9666}
!9661 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !9659, file: !9568, line: 17, baseType: !9662, size: 128)
!9662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_packed", file: !9568, line: 11, size: 128, elements: !9663)
!9663 = !{!9664, !9665}
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9662, file: !9568, line: 12, baseType: !344, size: 64)
!9665 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9662, file: !9568, line: 13, baseType: !344, size: 64, offset: 64)
!9666 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9659, file: !9568, line: 18, baseType: !2063, offset: 128)
!9667 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_qstats", scope: !9314, file: !9315, line: 93, baseType: !9448, size: 64, offset: 704)
!9668 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9314, file: !9315, line: 94, baseType: !43, size: 32, offset: 768)
!9669 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9314, file: !9315, line: 95, baseType: !1277, size: 32, offset: 800)
!9670 = !DIDerivedType(tag: DW_TAG_member, name: "gso_skb", scope: !9314, file: !9315, line: 100, baseType: !2973, size: 192, offset: 832)
!9671 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !9314, file: !9315, line: 101, baseType: !9672, size: 192, offset: 1024)
!9672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_skb_head", file: !9315, line: 50, size: 192, elements: !9673)
!9673 = !{!9674, !9675, !9676, !9677}
!9674 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9672, file: !9315, line: 51, baseType: !426, size: 64)
!9675 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9672, file: !9315, line: 52, baseType: !426, size: 64, offset: 64)
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9672, file: !9315, line: 53, baseType: !474, size: 32, offset: 128)
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9672, file: !9315, line: 54, baseType: !735, offset: 160)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !9314, file: !9315, line: 102, baseType: !9662, size: 128, offset: 1216)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !9314, file: !9315, line: 103, baseType: !690, size: 32, offset: 1344)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !9314, file: !9315, line: 104, baseType: !9449, size: 160, offset: 1376)
!9681 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9314, file: !9315, line: 105, baseType: !323, size: 64, offset: 1536)
!9682 = !DIDerivedType(tag: DW_TAG_member, name: "next_sched", scope: !9314, file: !9315, line: 106, baseType: !9313, size: 64, offset: 1600)
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "skb_bad_txq", scope: !9314, file: !9315, line: 107, baseType: !2973, size: 192, offset: 1664)
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "busylock", scope: !9314, file: !9315, line: 109, baseType: !735, offset: 1856)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "seqlock", scope: !9314, file: !9315, line: 110, baseType: !735, offset: 1856)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !9314, file: !9315, line: 113, baseType: !546, size: 8, offset: 1856)
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9314, file: !9315, line: 114, baseType: !310, size: 128, align: 64, offset: 1920)
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !9314, file: !9315, line: 117, baseType: !9689, align: 512, offset: 2048)
!9689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !519, elements: !320)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !9309, file: !42, line: 590, baseType: !9313, size: 64, offset: 128)
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !9309, file: !42, line: 592, baseType: !4018, size: 512, offset: 192)
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !9309, file: !42, line: 597, baseType: !323, size: 64, offset: 704)
!9693 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !9309, file: !42, line: 602, baseType: !323, size: 64, offset: 768)
!9694 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !9309, file: !42, line: 605, baseType: !301, size: 64, offset: 832)
!9695 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !9309, file: !42, line: 612, baseType: !735, offset: 896)
!9696 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !9309, file: !42, line: 613, baseType: !43, size: 32, offset: 896)
!9697 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !9309, file: !42, line: 617, baseType: !323, size: 64, offset: 960)
!9698 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9309, file: !42, line: 619, baseType: !323, size: 64, offset: 1024)
!9699 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !9309, file: !42, line: 622, baseType: !9700, size: 512, offset: 1088)
!9700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !9701, line: 43, size: 512, elements: !9702)
!9701 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!9702 = !{!9703, !9704, !9705, !9706, !9707, !9708, !9709, !9710, !9711, !9712, !9713, !9714, !9715}
!9703 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !9700, file: !9701, line: 45, baseType: !7, size: 32)
!9704 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !9700, file: !9701, line: 46, baseType: !7, size: 32, offset: 32)
!9705 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !9700, file: !9701, line: 47, baseType: !7, size: 32, offset: 64)
!9706 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !9700, file: !9701, line: 51, baseType: !7, size: 32, offset: 96)
!9707 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !9700, file: !9701, line: 52, baseType: !7, size: 32, offset: 128)
!9708 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !9700, file: !9701, line: 54, baseType: !7, size: 32, offset: 160)
!9709 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !9700, file: !9701, line: 55, baseType: !7, size: 32, offset: 192)
!9710 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !9700, file: !9701, line: 56, baseType: !7, size: 32, offset: 224)
!9711 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !9700, file: !9701, line: 58, baseType: !7, size: 32, offset: 256)
!9712 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !9700, file: !9701, line: 59, baseType: !323, size: 64, offset: 320)
!9713 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !9700, file: !9701, line: 62, baseType: !7, size: 32, offset: 384)
!9714 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !9700, file: !9701, line: 63, baseType: !7, size: 32, offset: 416)
!9715 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !9700, file: !9701, line: 64, baseType: !7, size: 32, offset: 448)
!9716 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !275, file: !42, line: 2045, baseType: !721, size: 256, offset: 6528)
!9717 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !275, file: !42, line: 2049, baseType: !287, size: 128, offset: 6784)
!9718 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !275, file: !42, line: 2054, baseType: !9308, size: 64, offset: 6912)
!9719 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !275, file: !42, line: 2055, baseType: !7, size: 32, offset: 6976)
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !275, file: !42, line: 2056, baseType: !7, size: 32, offset: 7008)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !275, file: !42, line: 2057, baseType: !9313, size: 64, offset: 7040)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !275, file: !42, line: 2058, baseType: !7, size: 32, offset: 7104)
!9723 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !275, file: !42, line: 2059, baseType: !735, offset: 7136)
!9724 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !275, file: !42, line: 2061, baseType: !9725, size: 64, offset: 7168)
!9725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9726, size: 64)
!9726 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !42, line: 879, flags: DIFlagFwdDecl)
!9727 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !275, file: !42, line: 2075, baseType: !2246, size: 320, offset: 7232)
!9728 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !275, file: !42, line: 2076, baseType: !43, size: 32, offset: 7552)
!9729 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !275, file: !42, line: 2078, baseType: !713, size: 32, offset: 7584)
!9730 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !275, file: !42, line: 2080, baseType: !295, size: 128, offset: 7616)
!9731 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !275, file: !42, line: 2081, baseType: !545, size: 64, offset: 7744)
!9732 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !275, file: !42, line: 2083, baseType: !295, size: 128, offset: 7808)
!9733 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !275, file: !42, line: 2091, baseType: !274, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!9734 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !275, file: !42, line: 2093, baseType: !546, size: 8, offset: 7944)
!9735 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !275, file: !42, line: 2098, baseType: !9736, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!9736 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !275, file: !42, line: 2095, baseType: !7, size: 32, elements: !9737)
!9737 = !{!9738, !9739}
!9738 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!9739 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!9740 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !275, file: !42, line: 2100, baseType: !546, size: 8, offset: 7968)
!9741 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !275, file: !42, line: 2101, baseType: !416, size: 64, offset: 8000)
!9742 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !275, file: !42, line: 2107, baseType: !2915, size: 64, offset: 8064)
!9743 = !DIDerivedType(tag: DW_TAG_member, scope: !275, file: !42, line: 2110, baseType: !9744, size: 64, offset: 8128)
!9744 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !275, file: !42, line: 2110, size: 64, elements: !9745)
!9745 = !{!9746, !9747, !9768, !9777}
!9746 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !9744, file: !42, line: 2111, baseType: !576, size: 64)
!9747 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !9744, file: !42, line: 2112, baseType: !9748, size: 64)
!9748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9749, size: 64)
!9749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !42, line: 2542, size: 128, align: 128, elements: !9750)
!9750 = !{!9751, !9766, !9767}
!9751 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9749, file: !42, line: 2543, baseType: !9752, size: 64)
!9752 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !2064, line: 79, baseType: !9753)
!9753 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2064, line: 77, size: 64, elements: !9754)
!9754 = !{!9755}
!9755 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !9753, file: !2064, line: 78, baseType: !9756, size: 64)
!9756 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !9757, line: 26, baseType: !9758)
!9757 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!9758 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9757, line: 24, size: 64, elements: !9759)
!9759 = !{!9760}
!9760 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9758, file: !9757, line: 25, baseType: !9761, size: 64)
!9761 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !9762, line: 12, baseType: !9763)
!9762 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!9763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9762, line: 10, size: 64, elements: !9764)
!9764 = !{!9765}
!9765 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9763, file: !9762, line: 11, baseType: !382, size: 64)
!9766 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9749, file: !42, line: 2544, baseType: !9752, size: 64, offset: 64)
!9767 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9749, file: !42, line: 2545, baseType: !2063, offset: 128)
!9768 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !9744, file: !42, line: 2113, baseType: !9769, size: 64)
!9769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9770, size: 64)
!9770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !42, line: 2534, size: 256, align: 256, elements: !9771)
!9771 = !{!9772, !9773, !9774, !9775, !9776}
!9772 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !9770, file: !42, line: 2535, baseType: !342, size: 64)
!9773 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !9770, file: !42, line: 2536, baseType: !342, size: 64, offset: 64)
!9774 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !9770, file: !42, line: 2537, baseType: !342, size: 64, offset: 128)
!9775 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !9770, file: !42, line: 2538, baseType: !342, size: 64, offset: 192)
!9776 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9770, file: !42, line: 2539, baseType: !2063, offset: 256)
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !9744, file: !42, line: 2114, baseType: !9778, size: 64)
!9778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9779, size: 64)
!9779 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !42, line: 2114, flags: DIFlagFwdDecl)
!9780 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !275, file: !42, line: 2124, baseType: !4014, size: 5568, offset: 8192)
!9781 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !275, file: !42, line: 2125, baseType: !9782, size: 256, offset: 13760)
!9782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4096, size: 256, elements: !1208)
!9783 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !275, file: !42, line: 2126, baseType: !4096, size: 64, offset: 14016)
!9784 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !275, file: !42, line: 2128, baseType: !9785, size: 64, offset: 14080)
!9785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9786, size: 64)
!9786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9787)
!9787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !9788, line: 59, size: 1600, elements: !9789)
!9788 = !DIFile(filename: "./include/net/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!9789 = !{!9790, !9791, !9792, !9793, !9794, !9795, !9796, !9800, !9804, !9808, !9812, !9816, !9820, !9821, !9822, !9826, !9827, !9828, !9829, !9833, !9837, !9841, !9845, !9849}
!9790 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9787, file: !9788, line: 60, baseType: !295, size: 128)
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9787, file: !9788, line: 62, baseType: !303, size: 64, offset: 128)
!9792 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !9787, file: !9788, line: 64, baseType: !600, size: 64, offset: 192)
!9793 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !9787, file: !9788, line: 65, baseType: !416, size: 64, offset: 256)
!9794 = !DIDerivedType(tag: DW_TAG_member, name: "maxtype", scope: !9787, file: !9788, line: 67, baseType: !7, size: 32, offset: 320)
!9795 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !9787, file: !9788, line: 68, baseType: !2624, size: 64, offset: 384)
!9796 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !9787, file: !9788, line: 69, baseType: !9797, size: 64, offset: 448)
!9797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9798, size: 64)
!9798 = !DISubroutineType(types: !9799)
!9799 = !{!43, !8273, !8273, !2610}
!9800 = !DIDerivedType(tag: DW_TAG_member, name: "newlink", scope: !9787, file: !9788, line: 73, baseType: !9801, size: 64, offset: 512)
!9801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9802, size: 64)
!9802 = !DISubroutineType(types: !9803)
!9803 = !{!43, !1968, !301, !8273, !8273, !2610}
!9804 = !DIDerivedType(tag: DW_TAG_member, name: "changelink", scope: !9787, file: !9788, line: 78, baseType: !9805, size: 64, offset: 576)
!9805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9806, size: 64)
!9806 = !DISubroutineType(types: !9807)
!9807 = !{!43, !301, !8273, !8273, !2610}
!9808 = !DIDerivedType(tag: DW_TAG_member, name: "dellink", scope: !9787, file: !9788, line: 82, baseType: !9809, size: 64, offset: 640)
!9809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9810, size: 64)
!9810 = !DISubroutineType(types: !9811)
!9811 = !{null, !301, !298}
!9812 = !DIDerivedType(tag: DW_TAG_member, name: "get_size", scope: !9787, file: !9788, line: 85, baseType: !9813, size: 64, offset: 704)
!9813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9814, size: 64)
!9814 = !DISubroutineType(types: !9815)
!9815 = !{!600, !2893}
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "fill_info", scope: !9787, file: !9788, line: 86, baseType: !9817, size: 64, offset: 768)
!9817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9818, size: 64)
!9818 = !DISubroutineType(types: !9819)
!9819 = !{!43, !426, !2893}
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "get_xstats_size", scope: !9787, file: !9788, line: 89, baseType: !9813, size: 64, offset: 832)
!9821 = !DIDerivedType(tag: DW_TAG_member, name: "fill_xstats", scope: !9787, file: !9788, line: 90, baseType: !9817, size: 64, offset: 896)
!9822 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_tx_queues", scope: !9787, file: !9788, line: 92, baseType: !9823, size: 64, offset: 960)
!9823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9824, size: 64)
!9824 = !DISubroutineType(types: !9825)
!9825 = !{!7}
!9826 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_rx_queues", scope: !9787, file: !9788, line: 93, baseType: !9823, size: 64, offset: 1024)
!9827 = !DIDerivedType(tag: DW_TAG_member, name: "slave_maxtype", scope: !9787, file: !9788, line: 95, baseType: !7, size: 32, offset: 1088)
!9828 = !DIDerivedType(tag: DW_TAG_member, name: "slave_policy", scope: !9787, file: !9788, line: 96, baseType: !2624, size: 64, offset: 1152)
!9829 = !DIDerivedType(tag: DW_TAG_member, name: "slave_changelink", scope: !9787, file: !9788, line: 97, baseType: !9830, size: 64, offset: 1216)
!9830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9831, size: 64)
!9831 = !DISubroutineType(types: !9832)
!9832 = !{!43, !301, !301, !8273, !8273, !2610}
!9833 = !DIDerivedType(tag: DW_TAG_member, name: "get_slave_size", scope: !9787, file: !9788, line: 102, baseType: !9834, size: 64, offset: 1280)
!9834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9835, size: 64)
!9835 = !DISubroutineType(types: !9836)
!9836 = !{!600, !2893, !2893}
!9837 = !DIDerivedType(tag: DW_TAG_member, name: "fill_slave_info", scope: !9787, file: !9788, line: 104, baseType: !9838, size: 64, offset: 1344)
!9838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9839, size: 64)
!9839 = !DISubroutineType(types: !9840)
!9840 = !{!43, !426, !2893, !2893}
!9841 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_net", scope: !9787, file: !9788, line: 107, baseType: !9842, size: 64, offset: 1408)
!9842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9843, size: 64)
!9843 = !DISubroutineType(types: !9844)
!9844 = !{!1968, !2893}
!9845 = !DIDerivedType(tag: DW_TAG_member, name: "get_linkxstats_size", scope: !9787, file: !9788, line: 108, baseType: !9846, size: 64, offset: 1472)
!9846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9847, size: 64)
!9847 = !DISubroutineType(types: !9848)
!9848 = !{!600, !2893, !43}
!9849 = !DIDerivedType(tag: DW_TAG_member, name: "fill_linkxstats", scope: !9787, file: !9788, line: 110, baseType: !9850, size: 64, offset: 1536)
!9850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9851, size: 64)
!9851 = !DISubroutineType(types: !9852)
!9852 = !{!43, !426, !2893, !545, !43}
!9853 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !275, file: !42, line: 2132, baseType: !7, size: 32, offset: 14144)
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !275, file: !42, line: 2134, baseType: !1044, size: 16, offset: 14176)
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !275, file: !42, line: 2139, baseType: !1250, size: 16, offset: 14192)
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !275, file: !42, line: 2140, baseType: !9857, size: 512, offset: 14208)
!9857 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9858, size: 512, elements: !280)
!9858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !42, line: 793, size: 32, elements: !9859)
!9859 = !{!9860, !9861}
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9858, file: !42, line: 794, baseType: !1044, size: 16)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !9858, file: !42, line: 795, baseType: !1044, size: 16, offset: 16)
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !275, file: !42, line: 2141, baseType: !9863, size: 128, offset: 14720)
!9863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 128, elements: !280)
!9864 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !275, file: !42, line: 2149, baseType: !9865, size: 64, offset: 14848)
!9865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9866, size: 64)
!9866 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !262, line: 536, flags: DIFlagFwdDecl)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !275, file: !42, line: 2150, baseType: !9868, size: 64, offset: 14912)
!9868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9869, size: 64)
!9869 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !42, line: 60, flags: DIFlagFwdDecl)
!9870 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !275, file: !42, line: 2151, baseType: !9871, size: 64, offset: 14976)
!9871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !275, file: !42, line: 2152, baseType: !9871, size: 64, offset: 15040)
!9873 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !275, file: !42, line: 2153, baseType: !546, size: 8, offset: 15104)
!9874 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !275, file: !42, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!9875 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !275, file: !42, line: 2156, baseType: !295, size: 128, offset: 15168)
!9876 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !275, file: !42, line: 2162, baseType: !9877, size: 64, offset: 15296)
!9877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9878, size: 64)
!9878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9879)
!9879 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !42, line: 68, flags: DIFlagFwdDecl)
!9880 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !275, file: !42, line: 2163, baseType: !9881, size: 64, offset: 15360)
!9881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9882, size: 64)
!9882 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !42, line: 69, flags: DIFlagFwdDecl)
!9883 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !275, file: !42, line: 2166, baseType: !9884, size: 384, offset: 15424)
!9884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9885, size: 384, elements: !873)
!9885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !42, line: 889, size: 128, elements: !9886)
!9886 = !{!9887, !9888}
!9887 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !9885, file: !42, line: 890, baseType: !3120, size: 64)
!9888 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !9885, file: !42, line: 891, baseType: !9889, size: 64, offset: 64)
!9889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9890, size: 64)
!9890 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !42, line: 880, flags: DIFlagFwdDecl)
!9891 = !{!9892, !9893, !9894, !9895, !9896, !9897}
!9892 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!9893 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!9894 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!9895 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!9896 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!9897 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!9898 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "xenbus_state", file: !9899, line: 17, baseType: !7, size: 32, elements: !9900)
!9899 = !DIFile(filename: "./include/xen/interface/io/xenbus.h", directory: "/home/lizy2001/genbc/linux")
!9900 = !{!9901, !9902, !9903, !9904, !9905, !9906, !9907, !9908, !9909}
!9901 = !DIEnumerator(name: "XenbusStateUnknown", value: 0, isUnsigned: true)
!9902 = !DIEnumerator(name: "XenbusStateInitialising", value: 1, isUnsigned: true)
!9903 = !DIEnumerator(name: "XenbusStateInitWait", value: 2, isUnsigned: true)
!9904 = !DIEnumerator(name: "XenbusStateInitialised", value: 3, isUnsigned: true)
!9905 = !DIEnumerator(name: "XenbusStateConnected", value: 4, isUnsigned: true)
!9906 = !DIEnumerator(name: "XenbusStateClosing", value: 5, isUnsigned: true)
!9907 = !DIEnumerator(name: "XenbusStateClosed", value: 6, isUnsigned: true)
!9908 = !DIEnumerator(name: "XenbusStateReconfiguring", value: 7, isUnsigned: true)
!9909 = !DIEnumerator(name: "XenbusStateReconfigured", value: 8, isUnsigned: true)
!9910 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !9911, line: 5, baseType: !7, size: 32, elements: !9912)
!9911 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!9912 = !{!9913, !9914, !9915, !9916}
!9913 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!9914 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!9915 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!9916 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!9917 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !341, line: 14, baseType: !7, size: 32, elements: !9918)
!9918 = !{!9919, !9920, !9921, !9922, !9923, !9924, !9925, !9926, !9927, !9928, !9929, !9930, !9931, !9932, !9933, !9934, !9935, !9936, !9937, !9938, !9939, !9940, !9941, !9942, !9943, !9944, !9945, !9946, !9947, !9948, !9949, !9950, !9951, !9952, !9953, !9954, !9955, !9956, !9957, !9958, !9959, !9960, !9961, !9962, !9963, !9964, !9965, !9966, !9967, !9968, !9969, !9970, !9971, !9972, !9973, !9974, !9975, !9976, !9977, !9978, !9979, !9980}
!9919 = !DIEnumerator(name: "NETIF_F_SG_BIT", value: 0, isUnsigned: true)
!9920 = !DIEnumerator(name: "NETIF_F_IP_CSUM_BIT", value: 1, isUnsigned: true)
!9921 = !DIEnumerator(name: "__UNUSED_NETIF_F_1", value: 2, isUnsigned: true)
!9922 = !DIEnumerator(name: "NETIF_F_HW_CSUM_BIT", value: 3, isUnsigned: true)
!9923 = !DIEnumerator(name: "NETIF_F_IPV6_CSUM_BIT", value: 4, isUnsigned: true)
!9924 = !DIEnumerator(name: "NETIF_F_HIGHDMA_BIT", value: 5, isUnsigned: true)
!9925 = !DIEnumerator(name: "NETIF_F_FRAGLIST_BIT", value: 6, isUnsigned: true)
!9926 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_TX_BIT", value: 7, isUnsigned: true)
!9927 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_RX_BIT", value: 8, isUnsigned: true)
!9928 = !DIEnumerator(name: "NETIF_F_HW_VLAN_CTAG_FILTER_BIT", value: 9, isUnsigned: true)
!9929 = !DIEnumerator(name: "NETIF_F_VLAN_CHALLENGED_BIT", value: 10, isUnsigned: true)
!9930 = !DIEnumerator(name: "NETIF_F_GSO_BIT", value: 11, isUnsigned: true)
!9931 = !DIEnumerator(name: "NETIF_F_LLTX_BIT", value: 12, isUnsigned: true)
!9932 = !DIEnumerator(name: "NETIF_F_NETNS_LOCAL_BIT", value: 13, isUnsigned: true)
!9933 = !DIEnumerator(name: "NETIF_F_GRO_BIT", value: 14, isUnsigned: true)
!9934 = !DIEnumerator(name: "NETIF_F_LRO_BIT", value: 15, isUnsigned: true)
!9935 = !DIEnumerator(name: "NETIF_F_GSO_SHIFT", value: 16, isUnsigned: true)
!9936 = !DIEnumerator(name: "NETIF_F_TSO_BIT", value: 16, isUnsigned: true)
!9937 = !DIEnumerator(name: "NETIF_F_GSO_ROBUST_BIT", value: 17, isUnsigned: true)
!9938 = !DIEnumerator(name: "NETIF_F_TSO_ECN_BIT", value: 18, isUnsigned: true)
!9939 = !DIEnumerator(name: "NETIF_F_TSO_MANGLEID_BIT", value: 19, isUnsigned: true)
!9940 = !DIEnumerator(name: "NETIF_F_TSO6_BIT", value: 20, isUnsigned: true)
!9941 = !DIEnumerator(name: "NETIF_F_FSO_BIT", value: 21, isUnsigned: true)
!9942 = !DIEnumerator(name: "NETIF_F_GSO_GRE_BIT", value: 22, isUnsigned: true)
!9943 = !DIEnumerator(name: "NETIF_F_GSO_GRE_CSUM_BIT", value: 23, isUnsigned: true)
!9944 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP4_BIT", value: 24, isUnsigned: true)
!9945 = !DIEnumerator(name: "NETIF_F_GSO_IPXIP6_BIT", value: 25, isUnsigned: true)
!9946 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_BIT", value: 26, isUnsigned: true)
!9947 = !DIEnumerator(name: "NETIF_F_GSO_UDP_TUNNEL_CSUM_BIT", value: 27, isUnsigned: true)
!9948 = !DIEnumerator(name: "NETIF_F_GSO_PARTIAL_BIT", value: 28, isUnsigned: true)
!9949 = !DIEnumerator(name: "NETIF_F_GSO_TUNNEL_REMCSUM_BIT", value: 29, isUnsigned: true)
!9950 = !DIEnumerator(name: "NETIF_F_GSO_SCTP_BIT", value: 30, isUnsigned: true)
!9951 = !DIEnumerator(name: "NETIF_F_GSO_ESP_BIT", value: 31, isUnsigned: true)
!9952 = !DIEnumerator(name: "NETIF_F_GSO_UDP_BIT", value: 32, isUnsigned: true)
!9953 = !DIEnumerator(name: "NETIF_F_GSO_UDP_L4_BIT", value: 33, isUnsigned: true)
!9954 = !DIEnumerator(name: "NETIF_F_GSO_FRAGLIST_BIT", value: 34, isUnsigned: true)
!9955 = !DIEnumerator(name: "NETIF_F_GSO_LAST", value: 34, isUnsigned: true)
!9956 = !DIEnumerator(name: "NETIF_F_FCOE_CRC_BIT", value: 35, isUnsigned: true)
!9957 = !DIEnumerator(name: "NETIF_F_SCTP_CRC_BIT", value: 36, isUnsigned: true)
!9958 = !DIEnumerator(name: "NETIF_F_FCOE_MTU_BIT", value: 37, isUnsigned: true)
!9959 = !DIEnumerator(name: "NETIF_F_NTUPLE_BIT", value: 38, isUnsigned: true)
!9960 = !DIEnumerator(name: "NETIF_F_RXHASH_BIT", value: 39, isUnsigned: true)
!9961 = !DIEnumerator(name: "NETIF_F_RXCSUM_BIT", value: 40, isUnsigned: true)
!9962 = !DIEnumerator(name: "NETIF_F_NOCACHE_COPY_BIT", value: 41, isUnsigned: true)
!9963 = !DIEnumerator(name: "NETIF_F_LOOPBACK_BIT", value: 42, isUnsigned: true)
!9964 = !DIEnumerator(name: "NETIF_F_RXFCS_BIT", value: 43, isUnsigned: true)
!9965 = !DIEnumerator(name: "NETIF_F_RXALL_BIT", value: 44, isUnsigned: true)
!9966 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_TX_BIT", value: 45, isUnsigned: true)
!9967 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_RX_BIT", value: 46, isUnsigned: true)
!9968 = !DIEnumerator(name: "NETIF_F_HW_VLAN_STAG_FILTER_BIT", value: 47, isUnsigned: true)
!9969 = !DIEnumerator(name: "NETIF_F_HW_L2FW_DOFFLOAD_BIT", value: 48, isUnsigned: true)
!9970 = !DIEnumerator(name: "NETIF_F_HW_TC_BIT", value: 49, isUnsigned: true)
!9971 = !DIEnumerator(name: "NETIF_F_HW_ESP_BIT", value: 50, isUnsigned: true)
!9972 = !DIEnumerator(name: "NETIF_F_HW_ESP_TX_CSUM_BIT", value: 51, isUnsigned: true)
!9973 = !DIEnumerator(name: "NETIF_F_RX_UDP_TUNNEL_PORT_BIT", value: 52, isUnsigned: true)
!9974 = !DIEnumerator(name: "NETIF_F_HW_TLS_TX_BIT", value: 53, isUnsigned: true)
!9975 = !DIEnumerator(name: "NETIF_F_HW_TLS_RX_BIT", value: 54, isUnsigned: true)
!9976 = !DIEnumerator(name: "NETIF_F_GRO_HW_BIT", value: 55, isUnsigned: true)
!9977 = !DIEnumerator(name: "NETIF_F_HW_TLS_RECORD_BIT", value: 56, isUnsigned: true)
!9978 = !DIEnumerator(name: "NETIF_F_GRO_FRAGLIST_BIT", value: 57, isUnsigned: true)
!9979 = !DIEnumerator(name: "NETIF_F_HW_MACSEC_BIT", value: 58, isUnsigned: true)
!9980 = !DIEnumerator(name: "NETDEV_FEATURE_COUNT", value: 59, isUnsigned: true)
!9981 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9982, line: 10, baseType: !7, size: 32, elements: !9983)
!9982 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!9983 = !{!9984, !9985}
!9984 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!9985 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!9986 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !42, line: 352, baseType: !7, size: 32, elements: !9987)
!9987 = !{!9988, !9989, !9990, !9991, !9992, !9993, !9994}
!9988 = !DIEnumerator(name: "NAPI_STATE_SCHED", value: 0, isUnsigned: true)
!9989 = !DIEnumerator(name: "NAPI_STATE_MISSED", value: 1, isUnsigned: true)
!9990 = !DIEnumerator(name: "NAPI_STATE_DISABLE", value: 2, isUnsigned: true)
!9991 = !DIEnumerator(name: "NAPI_STATE_NPSVC", value: 3, isUnsigned: true)
!9992 = !DIEnumerator(name: "NAPI_STATE_LISTED", value: 4, isUnsigned: true)
!9993 = !DIEnumerator(name: "NAPI_STATE_NO_BUSY_POLL", value: 5, isUnsigned: true)
!9994 = !DIEnumerator(name: "NAPI_STATE_IN_BUSY_POLL", value: 6, isUnsigned: true)
!9995 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_state_t", file: !42, line: 288, baseType: !7, size: 32, elements: !9996)
!9996 = !{!9997, !9998, !9999, !10000, !10001, !10002}
!9997 = !DIEnumerator(name: "__LINK_STATE_START", value: 0, isUnsigned: true)
!9998 = !DIEnumerator(name: "__LINK_STATE_PRESENT", value: 1, isUnsigned: true)
!9999 = !DIEnumerator(name: "__LINK_STATE_NOCARRIER", value: 2, isUnsigned: true)
!10000 = !DIEnumerator(name: "__LINK_STATE_LINKWATCH_PENDING", value: 3, isUnsigned: true)
!10001 = !DIEnumerator(name: "__LINK_STATE_DORMANT", value: 4, isUnsigned: true)
!10002 = !DIEnumerator(name: "__LINK_STATE_TESTING", value: 5, isUnsigned: true)
!10003 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_queue_state_t", file: !42, line: 558, baseType: !7, size: 32, elements: !10004)
!10004 = !{!10005, !10006, !10007}
!10005 = !DIEnumerator(name: "__QUEUE_STATE_DRV_XOFF", value: 0, isUnsigned: true)
!10006 = !DIEnumerator(name: "__QUEUE_STATE_STACK_XOFF", value: 1, isUnsigned: true)
!10007 = !DIEnumerator(name: "__QUEUE_STATE_FROZEN", value: 2, isUnsigned: true)
!10008 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !428, line: 559, baseType: !7, size: 32, elements: !10009)
!10009 = !{!10010, !10011, !10012, !10013, !10014, !10015, !10016, !10017, !10018, !10019, !10020, !10021, !10022, !10023, !10024, !10025, !10026, !10027, !10028}
!10010 = !DIEnumerator(name: "SKB_GSO_TCPV4", value: 1, isUnsigned: true)
!10011 = !DIEnumerator(name: "SKB_GSO_DODGY", value: 2, isUnsigned: true)
!10012 = !DIEnumerator(name: "SKB_GSO_TCP_ECN", value: 4, isUnsigned: true)
!10013 = !DIEnumerator(name: "SKB_GSO_TCP_FIXEDID", value: 8, isUnsigned: true)
!10014 = !DIEnumerator(name: "SKB_GSO_TCPV6", value: 16, isUnsigned: true)
!10015 = !DIEnumerator(name: "SKB_GSO_FCOE", value: 32, isUnsigned: true)
!10016 = !DIEnumerator(name: "SKB_GSO_GRE", value: 64, isUnsigned: true)
!10017 = !DIEnumerator(name: "SKB_GSO_GRE_CSUM", value: 128, isUnsigned: true)
!10018 = !DIEnumerator(name: "SKB_GSO_IPXIP4", value: 256, isUnsigned: true)
!10019 = !DIEnumerator(name: "SKB_GSO_IPXIP6", value: 512, isUnsigned: true)
!10020 = !DIEnumerator(name: "SKB_GSO_UDP_TUNNEL", value: 1024, isUnsigned: true)
!10021 = !DIEnumerator(name: "SKB_GSO_UDP_TUNNEL_CSUM", value: 2048, isUnsigned: true)
!10022 = !DIEnumerator(name: "SKB_GSO_PARTIAL", value: 4096, isUnsigned: true)
!10023 = !DIEnumerator(name: "SKB_GSO_TUNNEL_REMCSUM", value: 8192, isUnsigned: true)
!10024 = !DIEnumerator(name: "SKB_GSO_SCTP", value: 16384, isUnsigned: true)
!10025 = !DIEnumerator(name: "SKB_GSO_ESP", value: 32768, isUnsigned: true)
!10026 = !DIEnumerator(name: "SKB_GSO_UDP", value: 65536, isUnsigned: true)
!10027 = !DIEnumerator(name: "SKB_GSO_UDP_L4", value: 131072, isUnsigned: true)
!10028 = !DIEnumerator(name: "SKB_GSO_FRAGLIST", value: 262144, isUnsigned: true)
!10029 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "skb_free_reason", file: !42, line: 3780, baseType: !7, size: 32, elements: !10030)
!10030 = !{!10031, !10032}
!10031 = !DIEnumerator(name: "SKB_REASON_CONSUMED", value: 0, isUnsigned: true)
!10032 = !DIEnumerator(name: "SKB_REASON_DROPPED", value: 1, isUnsigned: true)
!10033 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !1278, line: 119, baseType: !7, size: 32, elements: !10034)
!10034 = !{!10035, !10036, !10037, !10038, !10039}
!10035 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!10036 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!10037 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!10038 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!10039 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!10040 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !428, line: 423, baseType: !7, size: 32, elements: !10041)
!10041 = !{!10042, !10043, !10044, !10045, !10046, !10047, !10048}
!10042 = !DIEnumerator(name: "SKBTX_HW_TSTAMP", value: 1, isUnsigned: true)
!10043 = !DIEnumerator(name: "SKBTX_SW_TSTAMP", value: 2, isUnsigned: true)
!10044 = !DIEnumerator(name: "SKBTX_IN_PROGRESS", value: 4, isUnsigned: true)
!10045 = !DIEnumerator(name: "SKBTX_DEV_ZEROCOPY", value: 8, isUnsigned: true)
!10046 = !DIEnumerator(name: "SKBTX_WIFI_STATUS", value: 16, isUnsigned: true)
!10047 = !DIEnumerator(name: "SKBTX_SHARED_FRAG", value: 32, isUnsigned: true)
!10048 = !DIEnumerator(name: "SKBTX_SCHED_TSTAMP", value: 64, isUnsigned: true)
!10049 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !10050, line: 305, baseType: !7, size: 32, elements: !10051)
!10050 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!10051 = !{!10052, !10053, !10054, !10055}
!10052 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!10053 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!10054 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!10055 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!10056 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "xdp_mem_type", file: !8510, line: 38, baseType: !7, size: 32, elements: !10057)
!10057 = !{!10058, !10059, !10060, !10061, !10062}
!10058 = !DIEnumerator(name: "MEM_TYPE_PAGE_SHARED", value: 0, isUnsigned: true)
!10059 = !DIEnumerator(name: "MEM_TYPE_PAGE_ORDER0", value: 1, isUnsigned: true)
!10060 = !DIEnumerator(name: "MEM_TYPE_PAGE_POOL", value: 2, isUnsigned: true)
!10061 = !DIEnumerator(name: "MEM_TYPE_XSK_BUFF_POOL", value: 3, isUnsigned: true)
!10062 = !DIEnumerator(name: "MEM_TYPE_MAX", value: 4, isUnsigned: true)
!10063 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "xdp_action", file: !76, line: 4263, baseType: !7, size: 32, elements: !10064)
!10064 = !{!10065, !10066, !10067, !10068, !10069}
!10065 = !DIEnumerator(name: "XDP_ABORTED", value: 0, isUnsigned: true)
!10066 = !DIEnumerator(name: "XDP_DROP", value: 1, isUnsigned: true)
!10067 = !DIEnumerator(name: "XDP_PASS", value: 2, isUnsigned: true)
!10068 = !DIEnumerator(name: "XDP_TX", value: 3, isUnsigned: true)
!10069 = !DIEnumerator(name: "XDP_REDIRECT", value: 4, isUnsigned: true)
!10070 = !{!7, !858, !10071, !1996, !576, !4957, !340, !2593, !10077, !10079, !323, !43, !713, !10080, !10103, !630, !10105, !3120, !10143, !10144, !10146, !10147, !519, !583, !10150, !10368, !426, !10372, !6247, !10374, !3705, !10379, !10382, !10384, !10242, !10294}
!10071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10072, size: 64)
!10072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netfront_stats", file: !3, line: 97, size: 128, elements: !10073)
!10073 = !{!10074, !10075, !10076}
!10074 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !10072, file: !3, line: 98, baseType: !342, size: 64)
!10075 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !10072, file: !3, line: 99, baseType: !342, size: 64, offset: 64)
!10076 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !10072, file: !3, line: 100, baseType: !2063, offset: 128)
!10077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10078, size: 64)
!10078 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !279)
!10079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!10080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10081, size: 64)
!10081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_info", file: !428, line: 512, size: 2560, elements: !10082)
!10082 = !{!10083, !10084, !10085, !10086, !10087, !10088, !10089, !10090, !10094, !10095, !10096, !10097, !10098}
!10083 = !DIDerivedType(tag: DW_TAG_member, name: "__unused", scope: !10081, file: !428, line: 513, baseType: !1404, size: 8)
!10084 = !DIDerivedType(tag: DW_TAG_member, name: "meta_len", scope: !10081, file: !428, line: 514, baseType: !1404, size: 8, offset: 8)
!10085 = !DIDerivedType(tag: DW_TAG_member, name: "nr_frags", scope: !10081, file: !428, line: 515, baseType: !1404, size: 8, offset: 16)
!10086 = !DIDerivedType(tag: DW_TAG_member, name: "tx_flags", scope: !10081, file: !428, line: 516, baseType: !1404, size: 8, offset: 24)
!10087 = !DIDerivedType(tag: DW_TAG_member, name: "gso_size", scope: !10081, file: !428, line: 517, baseType: !483, size: 16, offset: 32)
!10088 = !DIDerivedType(tag: DW_TAG_member, name: "gso_segs", scope: !10081, file: !428, line: 519, baseType: !483, size: 16, offset: 48)
!10089 = !DIDerivedType(tag: DW_TAG_member, name: "frag_list", scope: !10081, file: !428, line: 520, baseType: !426, size: 64, offset: 64)
!10090 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamps", scope: !10081, file: !428, line: 521, baseType: !10091, size: 64, offset: 128)
!10091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "skb_shared_hwtstamps", file: !428, line: 418, size: 64, elements: !10092)
!10092 = !{!10093}
!10093 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !10091, file: !428, line: 419, baseType: !1347, size: 64)
!10094 = !DIDerivedType(tag: DW_TAG_member, name: "gso_type", scope: !10081, file: !428, line: 522, baseType: !7, size: 32, offset: 192)
!10095 = !DIDerivedType(tag: DW_TAG_member, name: "tskey", scope: !10081, file: !428, line: 523, baseType: !713, size: 32, offset: 224)
!10096 = !DIDerivedType(tag: DW_TAG_member, name: "dataref", scope: !10081, file: !428, line: 528, baseType: !394, size: 32, offset: 256)
!10097 = !DIDerivedType(tag: DW_TAG_member, name: "destructor_arg", scope: !10081, file: !428, line: 532, baseType: !576, size: 64, offset: 320)
!10098 = !DIDerivedType(tag: DW_TAG_member, name: "frags", scope: !10081, file: !428, line: 535, baseType: !10099, size: 2176, offset: 384)
!10099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10100, size: 2176, elements: !10101)
!10100 = !DIDerivedType(tag: DW_TAG_typedef, name: "skb_frag_t", file: !428, line: 321, baseType: !626)
!10101 = !{!10102}
!10102 = !DISubrange(count: 17)
!10103 = !DIDerivedType(tag: DW_TAG_typedef, name: "RING_IDX", file: !10104, line: 15, baseType: !7)
!10104 = !DIFile(filename: "./include/xen/interface/io/ring.h", directory: "/home/lizy2001/genbc/linux")
!10105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10106, size: 64)
!10106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xen_netif_extra_info", file: !10107, line: 878, size: 64, elements: !10108)
!10107 = !DIFile(filename: "./include/xen/interface/io/netif.h", directory: "/home/lizy2001/genbc/linux")
!10108 = !{!10109, !10111, !10112}
!10109 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10106, file: !10107, line: 879, baseType: !10110, size: 8)
!10110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !288, line: 102, baseType: !1403)
!10111 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10106, file: !10107, line: 880, baseType: !10110, size: 8, offset: 8)
!10112 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !10106, file: !10107, line: 901, baseType: !10113, size: 48, offset: 16)
!10113 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10106, file: !10107, line: 881, size: 48, elements: !10114)
!10114 = !{!10115, !10123, !10128, !10135, !10141}
!10115 = !DIDerivedType(tag: DW_TAG_member, name: "gso", scope: !10113, file: !10107, line: 887, baseType: !10116, size: 48)
!10116 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10113, file: !10107, line: 882, size: 48, elements: !10117)
!10117 = !{!10118, !10120, !10121, !10122}
!10118 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10116, file: !10107, line: 883, baseType: !10119, size: 16)
!10119 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !288, line: 103, baseType: !1044)
!10120 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10116, file: !10107, line: 884, baseType: !10110, size: 8, offset: 16)
!10121 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10116, file: !10107, line: 885, baseType: !10110, size: 8, offset: 24)
!10122 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !10116, file: !10107, line: 886, baseType: !10119, size: 16, offset: 32)
!10123 = !DIDerivedType(tag: DW_TAG_member, name: "mcast", scope: !10113, file: !10107, line: 890, baseType: !10124, size: 48)
!10124 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10113, file: !10107, line: 888, size: 48, elements: !10125)
!10125 = !{!10126}
!10126 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !10124, file: !10107, line: 889, baseType: !10127, size: 48)
!10127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10110, size: 48, elements: !1677)
!10128 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !10113, file: !10107, line: 895, baseType: !10129, size: 48)
!10129 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10113, file: !10107, line: 891, size: 48, elements: !10130)
!10130 = !{!10131, !10132, !10133}
!10131 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10129, file: !10107, line: 892, baseType: !10110, size: 8)
!10132 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm", scope: !10129, file: !10107, line: 893, baseType: !10110, size: 8, offset: 8)
!10133 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !10129, file: !10107, line: 894, baseType: !10134, size: 32, offset: 16)
!10134 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10110, size: 32, elements: !1208)
!10135 = !DIDerivedType(tag: DW_TAG_member, name: "xdp", scope: !10113, file: !10107, line: 899, baseType: !10136, size: 48)
!10136 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10113, file: !10107, line: 896, size: 48, elements: !10137)
!10137 = !{!10138, !10139}
!10138 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !10136, file: !10107, line: 897, baseType: !10119, size: 16)
!10139 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10136, file: !10107, line: 898, baseType: !10140, size: 32, offset: 16)
!10140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10119, size: 32, elements: !484)
!10141 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10113, file: !10107, line: 900, baseType: !10142, size: 48)
!10142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10119, size: 48, elements: !873)
!10143 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !288, line: 37, baseType: !323)
!10144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10145, size: 64)
!10145 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3120)
!10146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!10147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10148, size: 64)
!10148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10149)
!10149 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !43)
!10150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10151, size: 64)
!10151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netfront_queue", file: !3, line: 105, size: 71168, elements: !10152)
!10152 = !{!10153, !10154, !10155, !10197, !10198, !10225, !10226, !10227, !10228, !10229, !10233, !10234, !10235, !10271, !10272, !10280, !10281, !10283, !10285, !10286, !10287, !10319, !10320, !10321, !10323, !10324, !10325, !10367}
!10153 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10151, file: !3, line: 106, baseType: !7, size: 32)
!10154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10151, file: !3, line: 107, baseType: !5702, size: 176, offset: 32)
!10155 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !10151, file: !3, line: 108, baseType: !10156, size: 64, offset: 256)
!10156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10157, size: 64)
!10157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netfront_info", file: !3, line: 159, size: 512, elements: !10158)
!10158 = !{!10159, !10160, !10161, !10191, !10192, !10193, !10194, !10195, !10196}
!10159 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10157, file: !3, line: 160, baseType: !295, size: 128)
!10160 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !10157, file: !3, line: 161, baseType: !301, size: 64, offset: 128)
!10161 = !DIDerivedType(tag: DW_TAG_member, name: "xbdev", scope: !10157, file: !3, line: 163, baseType: !10162, size: 64, offset: 192)
!10162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10163, size: 64)
!10163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xenbus_device", file: !10164, line: 71, size: 6784, elements: !10165)
!10164 = !DIFile(filename: "./include/xen/xenbus.h", directory: "/home/lizy2001/genbc/linux")
!10165 = !{!10166, !10167, !10168, !10169, !10170, !10180, !10181, !10182, !10183, !10184}
!10166 = !DIDerivedType(tag: DW_TAG_member, name: "devicetype", scope: !10163, file: !10164, line: 72, baseType: !303, size: 64)
!10167 = !DIDerivedType(tag: DW_TAG_member, name: "nodename", scope: !10163, file: !10164, line: 73, baseType: !303, size: 64, offset: 64)
!10168 = !DIDerivedType(tag: DW_TAG_member, name: "otherend", scope: !10163, file: !10164, line: 74, baseType: !303, size: 64, offset: 128)
!10169 = !DIDerivedType(tag: DW_TAG_member, name: "otherend_id", scope: !10163, file: !10164, line: 75, baseType: !43, size: 32, offset: 192)
!10170 = !DIDerivedType(tag: DW_TAG_member, name: "otherend_watch", scope: !10163, file: !10164, line: 76, baseType: !10171, size: 256, offset: 256)
!10171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xenbus_watch", file: !10164, line: 57, size: 256, elements: !10172)
!10172 = !{!10173, !10174, !10175}
!10173 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10171, file: !10164, line: 59, baseType: !295, size: 128)
!10174 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10171, file: !10164, line: 62, baseType: !303, size: 64, offset: 128)
!10175 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !10171, file: !10164, line: 65, baseType: !10176, size: 64, offset: 192)
!10176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10177, size: 64)
!10177 = !DISubroutineType(types: !10178)
!10178 = !{null, !10179, !303, !303}
!10179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10171, size: 64)
!10180 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10163, file: !10164, line: 77, baseType: !4014, size: 5568, offset: 512)
!10181 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10163, file: !10164, line: 78, baseType: !9898, size: 32, offset: 6080)
!10182 = !DIDerivedType(tag: DW_TAG_member, name: "down", scope: !10163, file: !10164, line: 79, baseType: !1553, size: 192, offset: 6144)
!10183 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !10163, file: !10164, line: 80, baseType: !1813, size: 256, offset: 6336)
!10184 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_sem", scope: !10163, file: !10164, line: 81, baseType: !10185, size: 192, offset: 6592)
!10185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "semaphore", file: !10186, line: 15, size: 192, elements: !10187)
!10186 = !DIFile(filename: "./include/linux/semaphore.h", directory: "/home/lizy2001/genbc/linux")
!10187 = !{!10188, !10189, !10190}
!10188 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10185, file: !10186, line: 16, baseType: !1174)
!10189 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10185, file: !10186, line: 17, baseType: !7, size: 32)
!10190 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !10185, file: !10186, line: 18, baseType: !295, size: 128, offset: 64)
!10191 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !10157, file: !3, line: 166, baseType: !10150, size: 64, offset: 256)
!10192 = !DIDerivedType(tag: DW_TAG_member, name: "rx_stats", scope: !10157, file: !3, line: 169, baseType: !10071, size: 64, offset: 320)
!10193 = !DIDerivedType(tag: DW_TAG_member, name: "tx_stats", scope: !10157, file: !3, line: 170, baseType: !10071, size: 64, offset: 384)
!10194 = !DIDerivedType(tag: DW_TAG_member, name: "netback_has_xdp_headroom", scope: !10157, file: !3, line: 173, baseType: !546, size: 8, offset: 448)
!10195 = !DIDerivedType(tag: DW_TAG_member, name: "netfront_xdp_enabled", scope: !10157, file: !3, line: 174, baseType: !546, size: 8, offset: 456)
!10196 = !DIDerivedType(tag: DW_TAG_member, name: "rx_gso_checksum_fixup", scope: !10157, file: !3, line: 176, baseType: !394, size: 32, offset: 480)
!10197 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !10151, file: !3, line: 110, baseType: !3120, size: 64, offset: 320)
!10198 = !DIDerivedType(tag: DW_TAG_member, name: "napi", scope: !10151, file: !3, line: 112, baseType: !10199, size: 3072, offset: 384)
!10199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "napi_struct", file: !42, line: 324, size: 3072, elements: !10200)
!10200 = !{!10201, !10202, !10203, !10204, !10205, !10206, !10211, !10212, !10218, !10219, !10220, !10221, !10222, !10223, !10224}
!10201 = !DIDerivedType(tag: DW_TAG_member, name: "poll_list", scope: !10199, file: !42, line: 331, baseType: !295, size: 128)
!10202 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10199, file: !42, line: 333, baseType: !323, size: 64, offset: 128)
!10203 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !10199, file: !42, line: 334, baseType: !43, size: 32, offset: 192)
!10204 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hard_irqs_count", scope: !10199, file: !42, line: 335, baseType: !43, size: 32, offset: 224)
!10205 = !DIDerivedType(tag: DW_TAG_member, name: "gro_bitmask", scope: !10199, file: !42, line: 336, baseType: !323, size: 64, offset: 256)
!10206 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !10199, file: !42, line: 337, baseType: !10207, size: 64, offset: 320)
!10207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10208, size: 64)
!10208 = !DISubroutineType(types: !10209)
!10209 = !{!43, !10210, !43}
!10210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10199, size: 64)
!10211 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10199, file: !42, line: 341, baseType: !301, size: 64, offset: 384)
!10212 = !DIDerivedType(tag: DW_TAG_member, name: "gro_hash", scope: !10199, file: !42, line: 342, baseType: !10213, size: 1536, offset: 448)
!10213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10214, size: 1536, elements: !1377)
!10214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gro_list", file: !42, line: 310, size: 192, elements: !10215)
!10215 = !{!10216, !10217}
!10216 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10214, file: !42, line: 311, baseType: !295, size: 128)
!10217 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10214, file: !42, line: 312, baseType: !43, size: 32, offset: 128)
!10218 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !10199, file: !42, line: 343, baseType: !426, size: 64, offset: 1984)
!10219 = !DIDerivedType(tag: DW_TAG_member, name: "rx_list", scope: !10199, file: !42, line: 344, baseType: !295, size: 128, offset: 2048)
!10220 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !10199, file: !42, line: 345, baseType: !43, size: 32, offset: 2176)
!10221 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !10199, file: !42, line: 346, baseType: !1339, size: 512, offset: 2240)
!10222 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !10199, file: !42, line: 347, baseType: !295, size: 128, offset: 2752)
!10223 = !DIDerivedType(tag: DW_TAG_member, name: "napi_hash_node", scope: !10199, file: !42, line: 348, baseType: !287, size: 128, offset: 2880)
!10224 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !10199, file: !42, line: 349, baseType: !7, size: 32, offset: 3008)
!10225 = !DIDerivedType(tag: DW_TAG_member, name: "tx_evtchn", scope: !10151, file: !3, line: 117, baseType: !7, size: 32, offset: 3456)
!10226 = !DIDerivedType(tag: DW_TAG_member, name: "rx_evtchn", scope: !10151, file: !3, line: 117, baseType: !7, size: 32, offset: 3488)
!10227 = !DIDerivedType(tag: DW_TAG_member, name: "tx_irq", scope: !10151, file: !3, line: 118, baseType: !7, size: 32, offset: 3520)
!10228 = !DIDerivedType(tag: DW_TAG_member, name: "rx_irq", scope: !10151, file: !3, line: 118, baseType: !7, size: 32, offset: 3552)
!10229 = !DIDerivedType(tag: DW_TAG_member, name: "tx_irq_name", scope: !10151, file: !3, line: 120, baseType: !10230, size: 200, offset: 3584)
!10230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 200, elements: !10231)
!10231 = !{!10232}
!10232 = !DISubrange(count: 25)
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "rx_irq_name", scope: !10151, file: !3, line: 121, baseType: !10230, size: 200, offset: 3784)
!10234 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lock", scope: !10151, file: !3, line: 123, baseType: !735, offset: 3984)
!10235 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !10151, file: !3, line: 124, baseType: !10236, size: 192, offset: 4032)
!10236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xen_netif_tx_front_ring", file: !10107, line: 946, size: 192, elements: !10237)
!10237 = !{!10238, !10239, !10240, !10241}
!10238 = !DIDerivedType(tag: DW_TAG_member, name: "req_prod_pvt", scope: !10236, file: !10107, line: 946, baseType: !10103, size: 32)
!10239 = !DIDerivedType(tag: DW_TAG_member, name: "rsp_cons", scope: !10236, file: !10107, line: 946, baseType: !10103, size: 32, offset: 32)
!10240 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ents", scope: !10236, file: !10107, line: 946, baseType: !7, size: 32, offset: 64)
!10241 = !DIDerivedType(tag: DW_TAG_member, name: "sring", scope: !10236, file: !10107, line: 946, baseType: !10242, size: 64, offset: 128)
!10242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10243, size: 64)
!10243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xen_netif_tx_sring", file: !10107, line: 946, size: 608, elements: !10244)
!10244 = !{!10245, !10246, !10247, !10248, !10249, !10251}
!10245 = !DIDerivedType(tag: DW_TAG_member, name: "req_prod", scope: !10243, file: !10107, line: 946, baseType: !10103, size: 32)
!10246 = !DIDerivedType(tag: DW_TAG_member, name: "req_event", scope: !10243, file: !10107, line: 946, baseType: !10103, size: 32, offset: 32)
!10247 = !DIDerivedType(tag: DW_TAG_member, name: "rsp_prod", scope: !10243, file: !10107, line: 946, baseType: !10103, size: 32, offset: 64)
!10248 = !DIDerivedType(tag: DW_TAG_member, name: "rsp_event", scope: !10243, file: !10107, line: 946, baseType: !10103, size: 32, offset: 96)
!10249 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10243, file: !10107, line: 946, baseType: !10250, size: 384, offset: 128)
!10250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10110, size: 384, elements: !7918)
!10251 = !DIDerivedType(tag: DW_TAG_member, name: "ring", scope: !10243, file: !10107, line: 946, baseType: !10252, size: 96, offset: 512)
!10252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10253, size: 96, elements: !1422)
!10253 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "xen_netif_tx_sring_entry", file: !10107, line: 946, size: 96, elements: !10254)
!10254 = !{!10255, !10265}
!10255 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !10253, file: !10107, line: 946, baseType: !10256, size: 96)
!10256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xen_netif_tx_request", file: !10107, line: 848, size: 96, elements: !10257)
!10257 = !{!10258, !10261, !10262, !10263, !10264}
!10258 = !DIDerivedType(tag: DW_TAG_member, name: "gref", scope: !10256, file: !10107, line: 849, baseType: !10259, size: 32)
!10259 = !DIDerivedType(tag: DW_TAG_typedef, name: "grant_ref_t", file: !10260, line: 90, baseType: !1656)
!10260 = !DIFile(filename: "./include/xen/interface/io/../grant_table.h", directory: "/home/lizy2001/genbc/linux")
!10261 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !10256, file: !10107, line: 850, baseType: !10119, size: 16, offset: 32)
!10262 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10256, file: !10107, line: 851, baseType: !10119, size: 16, offset: 48)
!10263 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10256, file: !10107, line: 852, baseType: !10119, size: 16, offset: 64)
!10264 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10256, file: !10107, line: 853, baseType: !10119, size: 16, offset: 80)
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "rsp", scope: !10253, file: !10107, line: 946, baseType: !10266, size: 32)
!10266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xen_netif_tx_response", file: !10107, line: 904, size: 32, elements: !10267)
!10267 = !{!10268, !10269}
!10268 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10266, file: !10107, line: 905, baseType: !10119, size: 16)
!10269 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !10266, file: !10107, line: 906, baseType: !10270, size: 16, offset: 16)
!10270 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !288, line: 96, baseType: !1250)
!10271 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ring_ref", scope: !10151, file: !3, line: 125, baseType: !43, size: 32, offset: 4224)
!10272 = !DIDerivedType(tag: DW_TAG_member, name: "tx_skbs", scope: !10151, file: !3, line: 139, baseType: !10273, size: 16384, offset: 4288)
!10273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10274, size: 16384, elements: !10278)
!10274 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "skb_entry", file: !3, line: 136, size: 64, elements: !10275)
!10275 = !{!10276, !10277}
!10276 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !10274, file: !3, line: 137, baseType: !426, size: 64)
!10277 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !10274, file: !3, line: 138, baseType: !323, size: 64)
!10278 = !{!10279}
!10279 = !DISubrange(count: 256)
!10280 = !DIDerivedType(tag: DW_TAG_member, name: "gref_tx_head", scope: !10151, file: !3, line: 140, baseType: !10259, size: 32, offset: 20672)
!10281 = !DIDerivedType(tag: DW_TAG_member, name: "grant_tx_ref", scope: !10151, file: !3, line: 141, baseType: !10282, size: 8192, offset: 20704)
!10282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10259, size: 8192, elements: !10278)
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "grant_tx_page", scope: !10151, file: !3, line: 142, baseType: !10284, size: 16384, offset: 28928)
!10284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !630, size: 16384, elements: !10278)
!10285 = !DIDerivedType(tag: DW_TAG_member, name: "tx_skb_freelist", scope: !10151, file: !3, line: 143, baseType: !7, size: 32, offset: 45312)
!10286 = !DIDerivedType(tag: DW_TAG_member, name: "rx_lock", scope: !10151, file: !3, line: 145, baseType: !735, offset: 45344)
!10287 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !10151, file: !3, line: 146, baseType: !10288, size: 192, offset: 45376)
!10288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xen_netif_rx_front_ring", file: !10107, line: 948, size: 192, elements: !10289)
!10289 = !{!10290, !10291, !10292, !10293}
!10290 = !DIDerivedType(tag: DW_TAG_member, name: "req_prod_pvt", scope: !10288, file: !10107, line: 948, baseType: !10103, size: 32)
!10291 = !DIDerivedType(tag: DW_TAG_member, name: "rsp_cons", scope: !10288, file: !10107, line: 948, baseType: !10103, size: 32, offset: 32)
!10292 = !DIDerivedType(tag: DW_TAG_member, name: "nr_ents", scope: !10288, file: !10107, line: 948, baseType: !7, size: 32, offset: 64)
!10293 = !DIDerivedType(tag: DW_TAG_member, name: "sring", scope: !10288, file: !10107, line: 948, baseType: !10294, size: 64, offset: 128)
!10294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10295, size: 64)
!10295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xen_netif_rx_sring", file: !10107, line: 948, size: 576, elements: !10296)
!10296 = !{!10297, !10298, !10299, !10300, !10301, !10302}
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "req_prod", scope: !10295, file: !10107, line: 948, baseType: !10103, size: 32)
!10298 = !DIDerivedType(tag: DW_TAG_member, name: "req_event", scope: !10295, file: !10107, line: 948, baseType: !10103, size: 32, offset: 32)
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "rsp_prod", scope: !10295, file: !10107, line: 948, baseType: !10103, size: 32, offset: 64)
!10300 = !DIDerivedType(tag: DW_TAG_member, name: "rsp_event", scope: !10295, file: !10107, line: 948, baseType: !10103, size: 32, offset: 96)
!10301 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10295, file: !10107, line: 948, baseType: !10250, size: 384, offset: 128)
!10302 = !DIDerivedType(tag: DW_TAG_member, name: "ring", scope: !10295, file: !10107, line: 948, baseType: !10303, size: 64, offset: 512)
!10303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10304, size: 64, elements: !1422)
!10304 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "xen_netif_rx_sring_entry", file: !10107, line: 948, size: 64, elements: !10305)
!10305 = !{!10306, !10312}
!10306 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !10304, file: !10107, line: 948, baseType: !10307, size: 64)
!10307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xen_netif_rx_request", file: !10107, line: 909, size: 64, elements: !10308)
!10308 = !{!10309, !10310, !10311}
!10309 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10307, file: !10107, line: 910, baseType: !10119, size: 16)
!10310 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10307, file: !10107, line: 911, baseType: !10119, size: 16, offset: 16)
!10311 = !DIDerivedType(tag: DW_TAG_member, name: "gref", scope: !10307, file: !10107, line: 912, baseType: !10259, size: 32, offset: 32)
!10312 = !DIDerivedType(tag: DW_TAG_member, name: "rsp", scope: !10304, file: !10107, line: 948, baseType: !10313, size: 64)
!10313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xen_netif_rx_response", file: !10107, line: 935, size: 64, elements: !10314)
!10314 = !{!10315, !10316, !10317, !10318}
!10315 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10313, file: !10107, line: 936, baseType: !10119, size: 16)
!10316 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !10313, file: !10107, line: 937, baseType: !10119, size: 16, offset: 16)
!10317 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10313, file: !10107, line: 938, baseType: !10119, size: 16, offset: 32)
!10318 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !10313, file: !10107, line: 939, baseType: !10270, size: 16, offset: 48)
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "rx_ring_ref", scope: !10151, file: !3, line: 147, baseType: !43, size: 32, offset: 45568)
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "rx_refill_timer", scope: !10151, file: !3, line: 149, baseType: !2246, size: 320, offset: 45632)
!10321 = !DIDerivedType(tag: DW_TAG_member, name: "rx_skbs", scope: !10151, file: !3, line: 151, baseType: !10322, size: 16384, offset: 45952)
!10322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 16384, elements: !10278)
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "gref_rx_head", scope: !10151, file: !3, line: 152, baseType: !10259, size: 32, offset: 62336)
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "grant_rx_ref", scope: !10151, file: !3, line: 153, baseType: !10282, size: 8192, offset: 62368)
!10325 = !DIDerivedType(tag: DW_TAG_member, name: "page_pool", scope: !10151, file: !3, line: 155, baseType: !10326, size: 64, offset: 70592)
!10326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10327, size: 64)
!10327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_pool", file: !10328, line: 82, size: 9920, elements: !10329)
!10328 = !DIFile(filename: "./include/net/page_pool.h", directory: "/home/lizy2001/genbc/linux")
!10329 = !{!10330, !10341, !10342, !10343, !10344, !10345, !10346, !10352, !10364, !10365, !10366}
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !10327, file: !10328, line: 83, baseType: !10331, size: 320)
!10331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_pool_params", file: !10328, line: 71, size: 320, elements: !10332)
!10332 = !{!10333, !10334, !10335, !10336, !10337, !10338, !10339, !10340}
!10333 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10331, file: !10328, line: 72, baseType: !7, size: 32)
!10334 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !10331, file: !10328, line: 73, baseType: !7, size: 32, offset: 32)
!10335 = !DIDerivedType(tag: DW_TAG_member, name: "pool_size", scope: !10331, file: !10328, line: 74, baseType: !7, size: 32, offset: 64)
!10336 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !10331, file: !10328, line: 75, baseType: !43, size: 32, offset: 96)
!10337 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10331, file: !10328, line: 76, baseType: !4382, size: 64, offset: 128)
!10338 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dir", scope: !10331, file: !10328, line: 77, baseType: !9910, size: 32, offset: 192)
!10339 = !DIDerivedType(tag: DW_TAG_member, name: "max_len", scope: !10331, file: !10328, line: 78, baseType: !7, size: 32, offset: 224)
!10340 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !10331, file: !10328, line: 79, baseType: !7, size: 32, offset: 256)
!10341 = !DIDerivedType(tag: DW_TAG_member, name: "release_dw", scope: !10327, file: !10328, line: 85, baseType: !2963, size: 704, offset: 320)
!10342 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !10327, file: !10328, line: 86, baseType: !3501, size: 64, offset: 1024)
!10343 = !DIDerivedType(tag: DW_TAG_member, name: "defer_start", scope: !10327, file: !10328, line: 87, baseType: !323, size: 64, offset: 1088)
!10344 = !DIDerivedType(tag: DW_TAG_member, name: "defer_warn", scope: !10327, file: !10328, line: 88, baseType: !323, size: 64, offset: 1152)
!10345 = !DIDerivedType(tag: DW_TAG_member, name: "pages_state_hold_cnt", scope: !10327, file: !10328, line: 90, baseType: !713, size: 32, offset: 1216)
!10346 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !10327, file: !10328, line: 105, baseType: !10347, size: 8256, offset: 1280)
!10347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pp_alloc_cache", file: !10328, line: 66, size: 8256, elements: !10348)
!10348 = !{!10349, !10350}
!10349 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10347, file: !10328, line: 67, baseType: !713, size: 32)
!10350 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !10347, file: !10328, line: 68, baseType: !10351, size: 8192, offset: 64)
!10351 = !DICompositeType(tag: DW_TAG_array_type, baseType: !576, size: 8192, elements: !3202)
!10352 = !DIDerivedType(tag: DW_TAG_member, name: "ring", scope: !10327, file: !10328, line: 118, baseType: !10353, size: 256, offset: 9536)
!10353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_ring", file: !10354, line: 30, size: 256, elements: !10355)
!10354 = !DIFile(filename: "./include/linux/ptr_ring.h", directory: "/home/lizy2001/genbc/linux")
!10355 = !{!10356, !10357, !10358, !10359, !10360, !10361, !10362, !10363}
!10356 = !DIDerivedType(tag: DW_TAG_member, name: "producer", scope: !10353, file: !10354, line: 31, baseType: !43, size: 32)
!10357 = !DIDerivedType(tag: DW_TAG_member, name: "producer_lock", scope: !10353, file: !10354, line: 32, baseType: !735, offset: 32)
!10358 = !DIDerivedType(tag: DW_TAG_member, name: "consumer_head", scope: !10353, file: !10354, line: 33, baseType: !43, size: 32, offset: 32)
!10359 = !DIDerivedType(tag: DW_TAG_member, name: "consumer_tail", scope: !10353, file: !10354, line: 34, baseType: !43, size: 32, offset: 64)
!10360 = !DIDerivedType(tag: DW_TAG_member, name: "consumer_lock", scope: !10353, file: !10354, line: 35, baseType: !735, offset: 96)
!10361 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10353, file: !10354, line: 38, baseType: !43, size: 32, offset: 96)
!10362 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !10353, file: !10354, line: 39, baseType: !43, size: 32, offset: 128)
!10363 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !10353, file: !10354, line: 40, baseType: !3691, size: 64, offset: 192)
!10364 = !DIDerivedType(tag: DW_TAG_member, name: "pages_state_release_cnt", scope: !10327, file: !10328, line: 120, baseType: !394, size: 32, offset: 9792)
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "user_cnt", scope: !10327, file: !10328, line: 126, baseType: !1277, size: 32, offset: 9824)
!10366 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_cnt", scope: !10327, file: !10328, line: 128, baseType: !342, size: 64, offset: 9856)
!10367 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !10151, file: !3, line: 156, baseType: !9288, size: 512, align: 512, offset: 70656)
!10368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10369, size: 64)
!10369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netfront_cb", file: !3, line: 73, size: 32, elements: !10370)
!10370 = !{!10371}
!10371 = !DIDerivedType(tag: DW_TAG_member, name: "pull_to", scope: !10369, file: !3, line: 74, baseType: !43, size: 32)
!10372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10373, size: 64)
!10373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10145)
!10374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10375, size: 64)
!10375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "static_key", file: !10376, line: 110, size: 32, elements: !10377)
!10376 = !DIFile(filename: "./include/linux/jump_label.h", directory: "/home/lizy2001/genbc/linux")
!10377 = !{!10378}
!10378 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !10375, file: !10376, line: 111, baseType: !394, size: 32)
!10379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10380, size: 64)
!10380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10381)
!10381 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !323)
!10382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10383, size: 64)
!10383 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !474)
!10384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10385, size: 64)
!10385 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !426)
!10386 = !{!10387, !10437, !10442, !10447, !10449, !10454, !10459, !10464, !10467, !10472, !10477, !0, !10479, !10516, !10519, !10521, !10523, !10531, !10533, !10535, !10538, !10552, !10554}
!10387 = !DIGlobalVariableExpression(var: !10388, expr: !DIExpression())
!10388 = distinct !DIGlobalVariable(name: "__param_max_queues", scope: !2, file: !3, line: 65, type: !10389, isLocal: true, isDefinition: true, align: 64)
!10389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10390)
!10390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !10391, line: 69, size: 320, elements: !10392)
!10391 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!10392 = !{!10393, !10394, !10395, !10411, !10413, !10415, !10416}
!10393 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10390, file: !10391, line: 70, baseType: !303, size: 64)
!10394 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !10390, file: !10391, line: 71, baseType: !858, size: 64, offset: 64)
!10395 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !10390, file: !10391, line: 72, baseType: !10396, size: 64, offset: 128)
!10396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10397, size: 64)
!10397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10398)
!10398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !10391, line: 47, size: 256, elements: !10399)
!10399 = !{!10400, !10401, !10406, !10410}
!10400 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10398, file: !10391, line: 49, baseType: !7, size: 32)
!10401 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !10398, file: !10391, line: 51, baseType: !10402, size: 64, offset: 64)
!10402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10403, size: 64)
!10403 = !DISubroutineType(types: !10404)
!10404 = !{!43, !303, !10405}
!10405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10389, size: 64)
!10406 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !10398, file: !10391, line: 53, baseType: !10407, size: 64, offset: 128)
!10407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10408, size: 64)
!10408 = !DISubroutineType(types: !10409)
!10409 = !{!43, !583, !10405}
!10410 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !10398, file: !10391, line: 55, baseType: !3501, size: 64, offset: 192)
!10411 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !10390, file: !10391, line: 73, baseType: !10412, size: 16, offset: 192)
!10412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1044)
!10413 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !10390, file: !10391, line: 74, baseType: !10414, size: 8, offset: 208)
!10414 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !343, line: 16, baseType: !9017)
!10415 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10390, file: !10391, line: 75, baseType: !1403, size: 8, offset: 216)
!10416 = !DIDerivedType(tag: DW_TAG_member, scope: !10390, file: !10391, line: 76, baseType: !10417, size: 64, offset: 256)
!10417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10390, file: !10391, line: 76, size: 64, elements: !10418)
!10418 = !{!10419, !10420, !10427}
!10419 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !10417, file: !10391, line: 77, baseType: !576, size: 64)
!10420 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !10417, file: !10391, line: 78, baseType: !10421, size: 64)
!10421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10422, size: 64)
!10422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10423)
!10423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !10391, line: 86, size: 128, elements: !10424)
!10424 = !{!10425, !10426}
!10425 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !10423, file: !10391, line: 87, baseType: !7, size: 32)
!10426 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !10423, file: !10391, line: 88, baseType: !583, size: 64, offset: 64)
!10427 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !10417, file: !10391, line: 79, baseType: !10428, size: 64)
!10428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10429, size: 64)
!10429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10430)
!10430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !10391, line: 92, size: 256, elements: !10431)
!10431 = !{!10432, !10433, !10434, !10435, !10436}
!10432 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !10430, file: !10391, line: 94, baseType: !7, size: 32)
!10433 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !10430, file: !10391, line: 95, baseType: !7, size: 32, offset: 32)
!10434 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !10430, file: !10391, line: 96, baseType: !4838, size: 64, offset: 64)
!10435 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !10430, file: !10391, line: 97, baseType: !10396, size: 64, offset: 128)
!10436 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !10430, file: !10391, line: 98, baseType: !576, size: 64, offset: 192)
!10437 = !DIGlobalVariableExpression(var: !10438, expr: !DIExpression())
!10438 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_queuestype632", scope: !2, file: !3, line: 65, type: !10439, isLocal: true, isDefinition: true, align: 8)
!10439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 304, elements: !10440)
!10440 = !{!10441}
!10441 = !DISubrange(count: 38)
!10442 = !DIGlobalVariableExpression(var: !10443, expr: !DIExpression())
!10443 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_max_queues633", scope: !2, file: !3, line: 66, type: !10444, isLocal: true, isDefinition: true, align: 8)
!10444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 608, elements: !10445)
!10445 = !{!10446}
!10446 = !DISubrange(count: 76)
!10447 = !DIGlobalVariableExpression(var: !10448, expr: !DIExpression())
!10448 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_netif_init653", scope: !2, file: !3, line: 2530, type: !576, isLocal: true, isDefinition: true)
!10449 = !DIGlobalVariableExpression(var: !10450, expr: !DIExpression())
!10450 = distinct !DIGlobalVariable(name: "__exitcall_netif_exit", scope: !2, file: !3, line: 2537, type: !10451, isLocal: true, isDefinition: true)
!10451 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !10452, line: 117, baseType: !10453)
!10452 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!10453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!10454 = !DIGlobalVariableExpression(var: !10455, expr: !DIExpression())
!10455 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description654", scope: !2, file: !3, line: 2539, type: !10456, isLocal: true, isDefinition: true, align: 8)
!10456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 488, elements: !10457)
!10457 = !{!10458}
!10458 = !DISubrange(count: 61)
!10459 = !DIGlobalVariableExpression(var: !10460, expr: !DIExpression())
!10460 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file655", scope: !2, file: !3, line: 2540, type: !10461, isLocal: true, isDefinition: true, align: 8)
!10461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 344, elements: !10462)
!10462 = !{!10463}
!10463 = !DISubrange(count: 43)
!10464 = !DIGlobalVariableExpression(var: !10465, expr: !DIExpression())
!10465 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license656", scope: !2, file: !3, line: 2540, type: !10466, isLocal: true, isDefinition: true, align: 8)
!10466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 200, elements: !10231)
!10467 = !DIGlobalVariableExpression(var: !10468, expr: !DIExpression())
!10468 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_alias657", scope: !2, file: !3, line: 2541, type: !10469, isLocal: true, isDefinition: true, align: 8)
!10469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 216, elements: !10470)
!10470 = !{!10471}
!10471 = !DISubrange(count: 27)
!10472 = !DIGlobalVariableExpression(var: !10473, expr: !DIExpression())
!10473 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_alias658", scope: !2, file: !3, line: 2542, type: !10474, isLocal: true, isDefinition: true, align: 8)
!10474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 208, elements: !10475)
!10475 = !{!10476}
!10476 = !DISubrange(count: 26)
!10477 = !DIGlobalVariableExpression(var: !10478, expr: !DIExpression())
!10478 = distinct !DIGlobalVariable(name: "xennet_max_queues", scope: !2, file: !3, line: 64, type: !7, isLocal: true, isDefinition: true)
!10479 = !DIGlobalVariableExpression(var: !10480, expr: !DIExpression())
!10480 = distinct !DIGlobalVariable(name: "netfront_driver", scope: !2, file: !3, line: 2503, type: !10481, isLocal: true, isDefinition: true)
!10481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xenbus_driver", file: !10164, line: 96, size: 1920, elements: !10482)
!10482 = !{!10483, !10484, !10490, !10491, !10495, !10499, !10503, !10504, !10505, !10509, !10510, !10511, !10512}
!10483 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10481, file: !10164, line: 97, baseType: !303, size: 64)
!10484 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !10481, file: !10164, line: 98, baseType: !10485, size: 64, offset: 64)
!10485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10486, size: 64)
!10486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10487)
!10487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xenbus_device_id", file: !10164, line: 89, size: 256, elements: !10488)
!10488 = !{!10489}
!10489 = !DIDerivedType(tag: DW_TAG_member, name: "devicetype", scope: !10487, file: !10164, line: 92, baseType: !3972, size: 256)
!10490 = !DIDerivedType(tag: DW_TAG_member, name: "allow_rebind", scope: !10481, file: !10164, line: 99, baseType: !546, size: 8, offset: 128)
!10491 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !10481, file: !10164, line: 100, baseType: !10492, size: 64, offset: 192)
!10492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10493, size: 64)
!10493 = !DISubroutineType(types: !10494)
!10494 = !{!43, !10162, !10485}
!10495 = !DIDerivedType(tag: DW_TAG_member, name: "otherend_changed", scope: !10481, file: !10164, line: 102, baseType: !10496, size: 64, offset: 256)
!10496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10497, size: 64)
!10497 = !DISubroutineType(types: !10498)
!10498 = !{null, !10162, !9898}
!10499 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !10481, file: !10164, line: 104, baseType: !10500, size: 64, offset: 320)
!10500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10501, size: 64)
!10501 = !DISubroutineType(types: !10502)
!10502 = !{!43, !10162}
!10503 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !10481, file: !10164, line: 105, baseType: !10500, size: 64, offset: 384)
!10504 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !10481, file: !10164, line: 106, baseType: !10500, size: 64, offset: 448)
!10505 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !10481, file: !10164, line: 107, baseType: !10506, size: 64, offset: 512)
!10506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10507, size: 64)
!10507 = !DISubroutineType(types: !10508)
!10508 = !{!43, !10162, !4052}
!10509 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !10481, file: !10164, line: 108, baseType: !4455, size: 1152, offset: 576)
!10510 = !DIDerivedType(tag: DW_TAG_member, name: "read_otherend_details", scope: !10481, file: !10164, line: 109, baseType: !10500, size: 64, offset: 1728)
!10511 = !DIDerivedType(tag: DW_TAG_member, name: "is_ready", scope: !10481, file: !10164, line: 110, baseType: !10500, size: 64, offset: 1792)
!10512 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_memory", scope: !10481, file: !10164, line: 111, baseType: !10513, size: 64, offset: 1856)
!10513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10514, size: 64)
!10514 = !DISubroutineType(types: !10515)
!10515 = !{null, !10162}
!10516 = !DIGlobalVariableExpression(var: !10517, expr: !DIExpression())
!10517 = distinct !DIGlobalVariable(name: "netfront_ids", scope: !2, file: !3, line: 2498, type: !10518, isLocal: true, isDefinition: true)
!10518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10486, size: 512, elements: !484)
!10519 = !DIGlobalVariableExpression(var: !10520, expr: !DIExpression())
!10520 = distinct !DIGlobalVariable(name: "xennet_netdev_ops", scope: !2, file: !3, line: 1493, type: !408, isLocal: true, isDefinition: true)
!10521 = !DIGlobalVariableExpression(var: !10522, expr: !DIExpression())
!10522 = distinct !DIGlobalVariable(name: "xennet_ethtool_ops", scope: !2, file: !3, line: 2394, type: !8545, isLocal: true, isDefinition: true)
!10523 = !DIGlobalVariableExpression(var: !10524, expr: !DIExpression())
!10524 = distinct !DIGlobalVariable(name: "xennet_stats", scope: !2, file: !3, line: 2354, type: !10525, isLocal: true, isDefinition: true)
!10525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10526, size: 272, elements: !1422)
!10526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10527)
!10527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xennet_stat", file: !3, line: 2351, size: 272, elements: !10528)
!10528 = !{!10529, !10530}
!10529 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10527, file: !3, line: 2352, baseType: !3972, size: 256)
!10530 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !10527, file: !3, line: 2353, baseType: !1044, size: 16, offset: 256)
!10531 = !DIGlobalVariableExpression(var: !10532, expr: !DIExpression())
!10532 = distinct !DIGlobalVariable(name: "module_wq", scope: !2, file: !3, line: 95, type: !1107, isLocal: true, isDefinition: true)
!10533 = !DIGlobalVariableExpression(var: !10534, expr: !DIExpression())
!10534 = distinct !DIGlobalVariable(name: "xennet_dev_group", scope: !2, file: !3, line: 2441, type: !4097, isLocal: true, isDefinition: true)
!10535 = !DIGlobalVariableExpression(var: !10536, expr: !DIExpression())
!10536 = distinct !DIGlobalVariable(name: "xennet_dev_attrs", scope: !2, file: !3, line: 2434, type: !10537, isLocal: true, isDefinition: true)
!10537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4083, size: 256, elements: !1208)
!10538 = !DIGlobalVariableExpression(var: !10539, expr: !DIExpression())
!10539 = distinct !DIGlobalVariable(name: "dev_attr_rxbuf_min", scope: !2, file: !3, line: 2430, type: !10540, isLocal: true, isDefinition: true)
!10540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !4015, line: 99, size: 256, elements: !10541)
!10541 = !{!10542, !10543, !10548}
!10542 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !10540, file: !4015, line: 100, baseType: !4084, size: 128)
!10543 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !10540, file: !4015, line: 101, baseType: !10544, size: 64, offset: 128)
!10544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10545, size: 64)
!10545 = !DISubroutineType(types: !10546)
!10546 = !{!1021, !4382, !10547, !583}
!10547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10540, size: 64)
!10548 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !10540, file: !4015, line: 103, baseType: !10549, size: 64, offset: 192)
!10549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10550, size: 64)
!10550 = !DISubroutineType(types: !10551)
!10551 = !{!1021, !4382, !10547, !303, !600}
!10552 = !DIGlobalVariableExpression(var: !10553, expr: !DIExpression())
!10553 = distinct !DIGlobalVariable(name: "dev_attr_rxbuf_max", scope: !2, file: !3, line: 2431, type: !10540, isLocal: true, isDefinition: true)
!10554 = !DIGlobalVariableExpression(var: !10555, expr: !DIExpression())
!10555 = distinct !DIGlobalVariable(name: "dev_attr_rxbuf_cur", scope: !2, file: !3, line: 2432, type: !10540, isLocal: true, isDefinition: true)
!10556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !304, size: 192, elements: !5433)
!10557 = !{!"rsp"}
!10558 = !{i32 7, !"Dwarf Version", i32 4}
!10559 = !{i32 2, !"Debug Info Version", i32 3}
!10560 = !{i32 1, !"wchar_size", i32 2}
!10561 = !{i32 1, !"Code Model", i32 2}
!10562 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!10563 = distinct !DISubprogram(name: "netif_init", scope: !3, file: !3, line: 2511, type: !10564, scopeLine: 2512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!10564 = !DISubroutineType(types: !10565)
!10565 = !{!43}
!10566 = !DILocation(line: 2513, column: 7, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 2513, column: 6)
!10568 = !DILocation(line: 2513, column: 6, scope: !10563)
!10569 = !DILocation(line: 2514, column: 3, scope: !10567)
!10570 = !DILocation(line: 2516, column: 7, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 2516, column: 6)
!10572 = !DILocation(line: 2516, column: 6, scope: !10563)
!10573 = !DILocation(line: 2517, column: 3, scope: !10571)
!10574 = !DILocation(line: 2519, column: 2, scope: !10563)
!10575 = !DILocation(line: 2524, column: 6, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 2524, column: 6)
!10577 = !DILocation(line: 2524, column: 24, scope: !10576)
!10578 = !DILocation(line: 2524, column: 6, scope: !10563)
!10579 = !DILocation(line: 2525, column: 21, scope: !10576)
!10580 = !DILocation(line: 2525, column: 3, scope: !10576)
!10581 = !DILocation(line: 2528, column: 9, scope: !10563)
!10582 = !DILocation(line: 2528, column: 2, scope: !10563)
!10583 = !DILocation(line: 2529, column: 1, scope: !10563)
!10584 = distinct !DISubprogram(name: "netif_exit", scope: !3, file: !3, line: 2533, type: !3915, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!10585 = !DILocation(line: 2535, column: 2, scope: !10584)
!10586 = !DILocation(line: 2536, column: 1, scope: !10584)
!10587 = distinct !DISubprogram(name: "netfront_probe", scope: !3, file: !3, line: 1590, type: !10493, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!10588 = !DILocalVariable(name: "dev", arg: 1, scope: !10587, file: !3, line: 1590, type: !10162)
!10589 = !DILocation(line: 1590, column: 49, scope: !10587)
!10590 = !DILocalVariable(name: "id", arg: 2, scope: !10587, file: !3, line: 1591, type: !10485)
!10591 = !DILocation(line: 1591, column: 37, scope: !10587)
!10592 = !DILocalVariable(name: "err", scope: !10587, file: !3, line: 1593, type: !43)
!10593 = !DILocation(line: 1593, column: 6, scope: !10587)
!10594 = !DILocalVariable(name: "netdev", scope: !10587, file: !3, line: 1594, type: !301)
!10595 = !DILocation(line: 1594, column: 21, scope: !10587)
!10596 = !DILocalVariable(name: "info", scope: !10587, file: !3, line: 1595, type: !10156)
!10597 = !DILocation(line: 1595, column: 24, scope: !10587)
!10598 = !DILocation(line: 1597, column: 29, scope: !10587)
!10599 = !DILocation(line: 1597, column: 11, scope: !10587)
!10600 = !DILocation(line: 1597, column: 9, scope: !10587)
!10601 = !DILocation(line: 1598, column: 13, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10587, file: !3, line: 1598, column: 6)
!10603 = !DILocation(line: 1598, column: 6, scope: !10602)
!10604 = !DILocation(line: 1598, column: 6, scope: !10587)
!10605 = !DILocation(line: 1599, column: 17, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10602, file: !3, line: 1598, column: 22)
!10607 = !DILocation(line: 1599, column: 9, scope: !10606)
!10608 = !DILocation(line: 1599, column: 7, scope: !10606)
!10609 = !DILocation(line: 1600, column: 20, scope: !10606)
!10610 = !DILocation(line: 1600, column: 25, scope: !10606)
!10611 = !DILocation(line: 1600, column: 3, scope: !10606)
!10612 = !DILocation(line: 1601, column: 10, scope: !10606)
!10613 = !DILocation(line: 1601, column: 3, scope: !10606)
!10614 = !DILocation(line: 1604, column: 21, scope: !10587)
!10615 = !DILocation(line: 1604, column: 9, scope: !10587)
!10616 = !DILocation(line: 1604, column: 7, scope: !10587)
!10617 = !DILocation(line: 1605, column: 19, scope: !10587)
!10618 = !DILocation(line: 1605, column: 24, scope: !10587)
!10619 = !DILocation(line: 1605, column: 29, scope: !10587)
!10620 = !DILocation(line: 1605, column: 2, scope: !10587)
!10621 = !DILocation(line: 1607, column: 2, scope: !10587)
!10622 = !DILocation(line: 1607, column: 8, scope: !10587)
!10623 = !DILocation(line: 1607, column: 16, scope: !10587)
!10624 = !DILocation(line: 1607, column: 32, scope: !10587)
!10625 = !DILocation(line: 1610, column: 2, scope: !10587)
!10626 = !DILocation(line: 1611, column: 1, scope: !10587)
!10627 = distinct !DISubprogram(name: "netback_changed", scope: !3, file: !3, line: 2311, type: !10497, scopeLine: 2313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!10628 = !DILocalVariable(name: "dev", arg: 1, scope: !10627, file: !3, line: 2311, type: !10162)
!10629 = !DILocation(line: 2311, column: 51, scope: !10627)
!10630 = !DILocalVariable(name: "backend_state", arg: 2, scope: !10627, file: !3, line: 2312, type: !9898)
!10631 = !DILocation(line: 2312, column: 26, scope: !10627)
!10632 = !DILocalVariable(name: "np", scope: !10627, file: !3, line: 2314, type: !10156)
!10633 = !DILocation(line: 2314, column: 24, scope: !10627)
!10634 = !DILocation(line: 2314, column: 46, scope: !10627)
!10635 = !DILocation(line: 2314, column: 51, scope: !10627)
!10636 = !DILocation(line: 2314, column: 29, scope: !10627)
!10637 = !DILocalVariable(name: "netdev", scope: !10627, file: !3, line: 2315, type: !301)
!10638 = !DILocation(line: 2315, column: 21, scope: !10627)
!10639 = !DILocation(line: 2315, column: 30, scope: !10627)
!10640 = !DILocation(line: 2315, column: 34, scope: !10627)
!10641 = !DILocation(line: 2319, column: 2, scope: !10627)
!10642 = !DILocation(line: 2321, column: 10, scope: !10627)
!10643 = !DILocation(line: 2321, column: 2, scope: !10627)
!10644 = !DILocation(line: 2327, column: 3, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10627, file: !3, line: 2321, column: 25)
!10646 = !DILocation(line: 2330, column: 7, scope: !10647)
!10647 = distinct !DILexicalBlock(scope: !10645, file: !3, line: 2330, column: 7)
!10648 = !DILocation(line: 2330, column: 12, scope: !10647)
!10649 = !DILocation(line: 2330, column: 18, scope: !10647)
!10650 = !DILocation(line: 2330, column: 7, scope: !10645)
!10651 = !DILocation(line: 2331, column: 4, scope: !10647)
!10652 = !DILocation(line: 2332, column: 22, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10645, file: !3, line: 2332, column: 7)
!10654 = !DILocation(line: 2332, column: 7, scope: !10653)
!10655 = !DILocation(line: 2332, column: 30, scope: !10653)
!10656 = !DILocation(line: 2332, column: 7, scope: !10645)
!10657 = !DILocation(line: 2333, column: 4, scope: !10653)
!10658 = !DILocation(line: 2334, column: 23, scope: !10645)
!10659 = !DILocation(line: 2334, column: 3, scope: !10645)
!10660 = !DILocation(line: 2335, column: 3, scope: !10645)
!10661 = !DILocation(line: 2338, column: 23, scope: !10645)
!10662 = !DILocation(line: 2338, column: 3, scope: !10645)
!10663 = !DILocation(line: 2339, column: 3, scope: !10645)
!10664 = !DILocation(line: 2342, column: 7, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10645, file: !3, line: 2342, column: 7)
!10666 = !DILocation(line: 2342, column: 12, scope: !10665)
!10667 = !DILocation(line: 2342, column: 18, scope: !10665)
!10668 = !DILocation(line: 2342, column: 7, scope: !10645)
!10669 = !DILocation(line: 2343, column: 4, scope: !10665)
!10670 = !DILocation(line: 2342, column: 21, scope: !10665)
!10671 = !DILocation(line: 2346, column: 26, scope: !10645)
!10672 = !DILocation(line: 2346, column: 3, scope: !10645)
!10673 = !DILocation(line: 2347, column: 3, scope: !10645)
!10674 = !DILocation(line: 2349, column: 1, scope: !10627)
!10675 = distinct !DISubprogram(name: "xennet_remove", scope: !3, file: !3, line: 2478, type: !10501, scopeLine: 2479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!10676 = !DILocalVariable(name: "dev", arg: 1, scope: !10675, file: !3, line: 2478, type: !10162)
!10677 = !DILocation(line: 2478, column: 48, scope: !10675)
!10678 = !DILocalVariable(name: "info", scope: !10675, file: !3, line: 2480, type: !10156)
!10679 = !DILocation(line: 2480, column: 24, scope: !10675)
!10680 = !DILocation(line: 2480, column: 48, scope: !10675)
!10681 = !DILocation(line: 2480, column: 53, scope: !10675)
!10682 = !DILocation(line: 2480, column: 31, scope: !10675)
!10683 = !DILocation(line: 2482, column: 19, scope: !10675)
!10684 = !DILocation(line: 2482, column: 2, scope: !10675)
!10685 = !DILocation(line: 2483, column: 28, scope: !10675)
!10686 = !DILocation(line: 2483, column: 2, scope: !10675)
!10687 = !DILocation(line: 2485, column: 6, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10675, file: !3, line: 2485, column: 6)
!10689 = !DILocation(line: 2485, column: 12, scope: !10688)
!10690 = !DILocation(line: 2485, column: 20, scope: !10688)
!10691 = !DILocation(line: 2485, column: 30, scope: !10688)
!10692 = !DILocation(line: 2485, column: 6, scope: !10675)
!10693 = !DILocation(line: 2486, column: 21, scope: !10688)
!10694 = !DILocation(line: 2486, column: 27, scope: !10688)
!10695 = !DILocation(line: 2486, column: 3, scope: !10688)
!10696 = !DILocation(line: 2488, column: 6, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10675, file: !3, line: 2488, column: 6)
!10698 = !DILocation(line: 2488, column: 12, scope: !10697)
!10699 = !DILocation(line: 2488, column: 6, scope: !10675)
!10700 = !DILocation(line: 2489, column: 3, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 2488, column: 20)
!10702 = !DILocation(line: 2490, column: 25, scope: !10701)
!10703 = !DILocation(line: 2490, column: 3, scope: !10701)
!10704 = !DILocation(line: 2491, column: 3, scope: !10701)
!10705 = !DILocation(line: 2492, column: 2, scope: !10701)
!10706 = !DILocation(line: 2493, column: 21, scope: !10675)
!10707 = !DILocation(line: 2493, column: 27, scope: !10675)
!10708 = !DILocation(line: 2493, column: 2, scope: !10675)
!10709 = !DILocation(line: 2495, column: 2, scope: !10675)
!10710 = distinct !DISubprogram(name: "netfront_resume", scope: !3, file: !3, line: 1668, type: !10501, scopeLine: 1669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!10711 = !DILocalVariable(name: "dev", arg: 1, scope: !10710, file: !3, line: 1668, type: !10162)
!10712 = !DILocation(line: 1668, column: 50, scope: !10710)
!10713 = !DILocalVariable(name: "info", scope: !10710, file: !3, line: 1670, type: !10156)
!10714 = !DILocation(line: 1670, column: 24, scope: !10710)
!10715 = !DILocation(line: 1670, column: 48, scope: !10710)
!10716 = !DILocation(line: 1670, column: 53, scope: !10710)
!10717 = !DILocation(line: 1670, column: 31, scope: !10710)
!10718 = !DILocation(line: 1674, column: 28, scope: !10710)
!10719 = !DILocation(line: 1674, column: 2, scope: !10710)
!10720 = !DILocation(line: 1675, column: 2, scope: !10710)
!10721 = distinct !DISubprogram(name: "xennet_create_dev", scope: !3, file: !3, line: 1520, type: !10722, scopeLine: 1521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!10722 = !DISubroutineType(types: !10723)
!10723 = !{!301, !10162}
!10724 = !DILocalVariable(name: "dev", arg: 1, scope: !10721, file: !3, line: 1520, type: !10162)
!10725 = !DILocation(line: 1520, column: 67, scope: !10721)
!10726 = !DILocalVariable(name: "err", scope: !10721, file: !3, line: 1522, type: !43)
!10727 = !DILocation(line: 1522, column: 6, scope: !10721)
!10728 = !DILocalVariable(name: "netdev", scope: !10721, file: !3, line: 1523, type: !301)
!10729 = !DILocation(line: 1523, column: 21, scope: !10721)
!10730 = !DILocalVariable(name: "np", scope: !10721, file: !3, line: 1524, type: !10156)
!10731 = !DILocation(line: 1524, column: 24, scope: !10721)
!10732 = !DILocation(line: 1526, column: 11, scope: !10721)
!10733 = !DILocation(line: 1526, column: 9, scope: !10721)
!10734 = !DILocation(line: 1527, column: 7, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 1527, column: 6)
!10736 = !DILocation(line: 1527, column: 6, scope: !10721)
!10737 = !DILocation(line: 1528, column: 10, scope: !10735)
!10738 = !DILocation(line: 1528, column: 3, scope: !10735)
!10739 = !DILocation(line: 1530, column: 37, scope: !10721)
!10740 = !DILocation(line: 1530, column: 25, scope: !10721)
!10741 = !DILocation(line: 1530, column: 23, scope: !10721)
!10742 = !DILocation(line: 1531, column: 25, scope: !10721)
!10743 = !DILocation(line: 1531, column: 2, scope: !10721)
!10744 = !DILocation(line: 1531, column: 6, scope: !10721)
!10745 = !DILocation(line: 1531, column: 23, scope: !10721)
!10746 = !DILocation(line: 1533, column: 2, scope: !10721)
!10747 = !DILocation(line: 1533, column: 6, scope: !10721)
!10748 = !DILocation(line: 1533, column: 13, scope: !10721)
!10749 = !DILocation(line: 1535, column: 6, scope: !10721)
!10750 = !DILocalVariable(name: "pcpu_stats", scope: !10751, file: !3, line: 1536, type: !10071)
!10751 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 1536, column: 17)
!10752 = !DILocation(line: 1536, column: 17, scope: !10751)
!10753 = !DILocation(line: 1536, column: 17, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10751, file: !3, line: 1536, column: 17)
!10755 = !DILocalVariable(name: "__cpu", scope: !10756, file: !3, line: 1536, type: !43)
!10756 = distinct !DILexicalBlock(scope: !10754, file: !3, line: 1536, column: 17)
!10757 = !DILocation(line: 1536, column: 17, scope: !10756)
!10758 = !DILocation(line: 1536, column: 17, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10756, file: !3, line: 1536, column: 17)
!10760 = !DILocation(line: 1536, column: 17, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10759, file: !3, line: 1536, column: 17)
!10762 = !DILocalVariable(name: "stat", scope: !10763, file: !3, line: 1536, type: !10071)
!10763 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 1536, column: 17)
!10764 = !DILocation(line: 1536, column: 17, scope: !10763)
!10765 = !DILocation(line: 1536, column: 17, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10763, file: !3, line: 1536, column: 17)
!10767 = !DILocation(line: 1536, column: 17, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10766, file: !3, line: 1536, column: 17)
!10769 = !DILocalVariable(name: "__vpp_verify", scope: !10770, file: !3, line: 1536, type: !2269)
!10770 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 1536, column: 17)
!10771 = !DILocation(line: 1536, column: 17, scope: !10770)
!10772 = distinct !{!10772, !10758, !10758}
!10773 = !DILocation(line: 1536, column: 2, scope: !10721)
!10774 = !DILocation(line: 1536, column: 6, scope: !10721)
!10775 = !DILocation(line: 1536, column: 15, scope: !10721)
!10776 = !DILocation(line: 1537, column: 6, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 1537, column: 6)
!10778 = !DILocation(line: 1537, column: 10, scope: !10777)
!10779 = !DILocation(line: 1537, column: 19, scope: !10777)
!10780 = !DILocation(line: 1537, column: 6, scope: !10721)
!10781 = !DILocation(line: 1538, column: 3, scope: !10777)
!10782 = !DILocalVariable(name: "pcpu_stats", scope: !10783, file: !3, line: 1539, type: !10071)
!10783 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 1539, column: 17)
!10784 = !DILocation(line: 1539, column: 17, scope: !10783)
!10785 = !DILocation(line: 1539, column: 17, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10783, file: !3, line: 1539, column: 17)
!10787 = !DILocalVariable(name: "__cpu", scope: !10788, file: !3, line: 1539, type: !43)
!10788 = distinct !DILexicalBlock(scope: !10786, file: !3, line: 1539, column: 17)
!10789 = !DILocation(line: 1539, column: 17, scope: !10788)
!10790 = !DILocation(line: 1539, column: 17, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10788, file: !3, line: 1539, column: 17)
!10792 = !DILocation(line: 1539, column: 17, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10791, file: !3, line: 1539, column: 17)
!10794 = !DILocalVariable(name: "stat", scope: !10795, file: !3, line: 1539, type: !10071)
!10795 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 1539, column: 17)
!10796 = !DILocation(line: 1539, column: 17, scope: !10795)
!10797 = !DILocation(line: 1539, column: 17, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10795, file: !3, line: 1539, column: 17)
!10799 = !DILocation(line: 1539, column: 17, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10798, file: !3, line: 1539, column: 17)
!10801 = !DILocalVariable(name: "__vpp_verify", scope: !10802, file: !3, line: 1539, type: !2269)
!10802 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 1539, column: 17)
!10803 = !DILocation(line: 1539, column: 17, scope: !10802)
!10804 = distinct !{!10804, !10790, !10790}
!10805 = !DILocation(line: 1539, column: 2, scope: !10721)
!10806 = !DILocation(line: 1539, column: 6, scope: !10721)
!10807 = !DILocation(line: 1539, column: 15, scope: !10721)
!10808 = !DILocation(line: 1540, column: 6, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 1540, column: 6)
!10810 = !DILocation(line: 1540, column: 10, scope: !10809)
!10811 = !DILocation(line: 1540, column: 19, scope: !10809)
!10812 = !DILocation(line: 1540, column: 6, scope: !10721)
!10813 = !DILocation(line: 1541, column: 3, scope: !10809)
!10814 = !DILocation(line: 1543, column: 2, scope: !10721)
!10815 = !DILocation(line: 1543, column: 10, scope: !10721)
!10816 = !DILocation(line: 1543, column: 21, scope: !10721)
!10817 = !DILocation(line: 1545, column: 2, scope: !10721)
!10818 = !DILocation(line: 1545, column: 10, scope: !10721)
!10819 = !DILocation(line: 1545, column: 26, scope: !10721)
!10820 = !DILocation(line: 1547, column: 2, scope: !10721)
!10821 = !DILocation(line: 1547, column: 10, scope: !10721)
!10822 = !DILocation(line: 1547, column: 22, scope: !10721)
!10823 = !DILocation(line: 1557, column: 22, scope: !10721)
!10824 = !DILocation(line: 1557, column: 30, scope: !10721)
!10825 = !DILocation(line: 1557, column: 2, scope: !10721)
!10826 = !DILocation(line: 1557, column: 10, scope: !10721)
!10827 = !DILocation(line: 1557, column: 19, scope: !10721)
!10828 = !DILocation(line: 1559, column: 2, scope: !10721)
!10829 = !DILocation(line: 1559, column: 10, scope: !10721)
!10830 = !DILocation(line: 1559, column: 22, scope: !10721)
!10831 = !DILocation(line: 1560, column: 2, scope: !10721)
!10832 = !DILocation(line: 1560, column: 10, scope: !10721)
!10833 = !DILocation(line: 1560, column: 18, scope: !10721)
!10834 = !DILocation(line: 1561, column: 2, scope: !10721)
!10835 = !DILocation(line: 1561, column: 10, scope: !10721)
!10836 = !DILocation(line: 1561, column: 18, scope: !10721)
!10837 = !DILocation(line: 1562, column: 2, scope: !10721)
!10838 = !DILocation(line: 1564, column: 15, scope: !10721)
!10839 = !DILocation(line: 1564, column: 2, scope: !10721)
!10840 = !DILocation(line: 1564, column: 6, scope: !10721)
!10841 = !DILocation(line: 1564, column: 13, scope: !10721)
!10842 = !DILocation(line: 1565, column: 2, scope: !10721)
!10843 = !DILocation(line: 1565, column: 6, scope: !10721)
!10844 = !DILocation(line: 1565, column: 27, scope: !10721)
!10845 = !DILocation(line: 1567, column: 20, scope: !10721)
!10846 = !DILocation(line: 1567, column: 2, scope: !10721)
!10847 = !DILocation(line: 1569, column: 2, scope: !10721)
!10848 = !DILocation(line: 1570, column: 23, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10721, file: !3, line: 1569, column: 5)
!10850 = !DILocation(line: 1570, column: 3, scope: !10849)
!10851 = !DILocalVariable(name: "__ret", scope: !10852, file: !3, line: 1571, type: !519)
!10852 = distinct !DILexicalBlock(scope: !10849, file: !3, line: 1571, column: 9)
!10853 = !DILocation(line: 1571, column: 9, scope: !10852)
!10854 = !DILocation(line: 1571, column: 9, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 1571, column: 9)
!10856 = !DILocation(line: 1571, column: 9, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10855, file: !3, line: 1571, column: 9)
!10858 = !DILocalVariable(name: "__cond", scope: !10859, file: !3, line: 1571, type: !546)
!10859 = distinct !DILexicalBlock(scope: !10860, file: !3, line: 1571, column: 9)
!10860 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 1571, column: 9)
!10861 = !DILocation(line: 1571, column: 9, scope: !10859)
!10862 = !DILocation(line: 0, scope: !10859)
!10863 = !DILocation(line: 1571, column: 9, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 1571, column: 9)
!10865 = !DILocation(line: 1571, column: 9, scope: !10860)
!10866 = !DILocalVariable(name: "__wq_entry", scope: !10867, file: !3, line: 1571, type: !1060)
!10867 = distinct !DILexicalBlock(scope: !10860, file: !3, line: 1571, column: 9)
!10868 = !DILocation(line: 1571, column: 9, scope: !10867)
!10869 = !DILocalVariable(name: "__ret", scope: !10867, file: !3, line: 1571, type: !519)
!10870 = !DILocalVariable(name: "__int", scope: !10871, file: !3, line: 1571, type: !519)
!10871 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 1571, column: 9)
!10872 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 1571, column: 9)
!10873 = distinct !DILexicalBlock(scope: !10867, file: !3, line: 1571, column: 9)
!10874 = !DILocation(line: 1571, column: 9, scope: !10871)
!10875 = !DILocalVariable(name: "__cond", scope: !10876, file: !3, line: 1571, type: !546)
!10876 = distinct !DILexicalBlock(scope: !10877, file: !3, line: 1571, column: 9)
!10877 = distinct !DILexicalBlock(scope: !10871, file: !3, line: 1571, column: 9)
!10878 = !DILocation(line: 1571, column: 9, scope: !10876)
!10879 = !DILocation(line: 0, scope: !10876)
!10880 = !DILocation(line: 1571, column: 9, scope: !10881)
!10881 = distinct !DILexicalBlock(scope: !10876, file: !3, line: 1571, column: 9)
!10882 = !DILocation(line: 1571, column: 9, scope: !10877)
!10883 = !DILocation(line: 1571, column: 9, scope: !10872)
!10884 = distinct !{!10884, !10885, !10885}
!10885 = !DILocation(line: 1571, column: 9, scope: !10873)
!10886 = !DILabel(scope: !10867, name: "__out", file: !3, line: 1571)
!10887 = !DILocation(line: 1571, column: 9, scope: !10849)
!10888 = !DILocation(line: 1571, column: 7, scope: !10849)
!10889 = !DILocation(line: 1576, column: 2, scope: !10849)
!10890 = !DILocation(line: 1576, column: 12, scope: !10721)
!10891 = !DILocation(line: 1576, column: 11, scope: !10721)
!10892 = distinct !{!10892, !10847, !10893}
!10893 = !DILocation(line: 1576, column: 15, scope: !10721)
!10894 = !DILocation(line: 1578, column: 9, scope: !10721)
!10895 = !DILocation(line: 1578, column: 2, scope: !10721)
!10896 = !DILabel(scope: !10721, name: "exit", file: !3, line: 1580)
!10897 = !DILocation(line: 1580, column: 2, scope: !10721)
!10898 = !DILocation(line: 1581, column: 21, scope: !10721)
!10899 = !DILocation(line: 1581, column: 2, scope: !10721)
!10900 = !DILocation(line: 1582, column: 17, scope: !10721)
!10901 = !DILocation(line: 1582, column: 9, scope: !10721)
!10902 = !DILocation(line: 1582, column: 2, scope: !10721)
!10903 = !DILocation(line: 1583, column: 1, scope: !10721)
!10904 = distinct !DISubprogram(name: "IS_ERR", scope: !10905, file: !10905, line: 34, type: !10906, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!10905 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!10906 = !DISubroutineType(types: !10907)
!10907 = !{!546, !2269}
!10908 = !DILocalVariable(name: "ptr", arg: 1, scope: !10904, file: !10905, line: 34, type: !2269)
!10909 = !DILocation(line: 34, column: 60, scope: !10904)
!10910 = !DILocation(line: 36, column: 9, scope: !10904)
!10911 = !DILocation(line: 36, column: 2, scope: !10904)
!10912 = distinct !DISubprogram(name: "PTR_ERR", scope: !10905, file: !10905, line: 29, type: !10913, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!10913 = !DISubroutineType(types: !10914)
!10914 = !{!519, !2269}
!10915 = !DILocalVariable(name: "ptr", arg: 1, scope: !10912, file: !10905, line: 29, type: !2269)
!10916 = !DILocation(line: 29, column: 61, scope: !10912)
!10917 = !DILocation(line: 31, column: 16, scope: !10912)
!10918 = !DILocation(line: 31, column: 9, scope: !10912)
!10919 = !DILocation(line: 31, column: 2, scope: !10912)
!10920 = distinct !DISubprogram(name: "netdev_priv", scope: !42, file: !42, line: 2322, type: !10921, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!10921 = !DISubroutineType(types: !10922)
!10922 = !{!576, !2893}
!10923 = !DILocalVariable(name: "dev", arg: 1, scope: !10920, file: !42, line: 2322, type: !2893)
!10924 = !DILocation(line: 2322, column: 58, scope: !10920)
!10925 = !DILocation(line: 2324, column: 17, scope: !10920)
!10926 = !DILocation(line: 2324, column: 9, scope: !10920)
!10927 = !DILocation(line: 2324, column: 21, scope: !10920)
!10928 = !DILocation(line: 2324, column: 2, scope: !10920)
!10929 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !4015, file: !4015, line: 660, type: !10930, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!10930 = !DISubroutineType(types: !10931)
!10931 = !{null, !4382, !576}
!10932 = !DILocalVariable(name: "dev", arg: 1, scope: !10929, file: !4015, line: 660, type: !4382)
!10933 = !DILocation(line: 660, column: 51, scope: !10929)
!10934 = !DILocalVariable(name: "data", arg: 2, scope: !10929, file: !4015, line: 660, type: !576)
!10935 = !DILocation(line: 660, column: 62, scope: !10929)
!10936 = !DILocation(line: 662, column: 21, scope: !10929)
!10937 = !DILocation(line: 662, column: 2, scope: !10929)
!10938 = !DILocation(line: 662, column: 7, scope: !10929)
!10939 = !DILocation(line: 662, column: 19, scope: !10929)
!10940 = !DILocation(line: 663, column: 1, scope: !10929)
!10941 = distinct !DISubprogram(name: "ERR_PTR", scope: !10905, file: !10905, line: 24, type: !10942, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!10942 = !DISubroutineType(types: !10943)
!10943 = !{!576, !519}
!10944 = !DILocalVariable(name: "error", arg: 1, scope: !10941, file: !10905, line: 24, type: !519)
!10945 = !DILocation(line: 24, column: 48, scope: !10941)
!10946 = !DILocation(line: 26, column: 18, scope: !10941)
!10947 = !DILocation(line: 26, column: 9, scope: !10941)
!10948 = !DILocation(line: 26, column: 2, scope: !10941)
!10949 = distinct !DISubprogram(name: "u64_stats_init", scope: !2064, file: !2064, line: 118, type: !10950, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!10950 = !DISubroutineType(types: !10951)
!10951 = !{null, !10952}
!10952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64)
!10953 = !DILocalVariable(name: "syncp", arg: 1, scope: !10949, file: !2064, line: 118, type: !10952)
!10954 = !DILocation(line: 118, column: 58, scope: !10949)
!10955 = !DILocation(line: 123, column: 1, scope: !10949)
!10956 = distinct !DISubprogram(name: "xennet_free_netdev", scope: !3, file: !3, line: 1511, type: !417, scopeLine: 1512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!10957 = !DILocalVariable(name: "netdev", arg: 1, scope: !10956, file: !3, line: 1511, type: !301)
!10958 = !DILocation(line: 1511, column: 51, scope: !10956)
!10959 = !DILocalVariable(name: "np", scope: !10956, file: !3, line: 1513, type: !10156)
!10960 = !DILocation(line: 1513, column: 24, scope: !10956)
!10961 = !DILocation(line: 1513, column: 41, scope: !10956)
!10962 = !DILocation(line: 1513, column: 29, scope: !10956)
!10963 = !DILocation(line: 1515, column: 14, scope: !10956)
!10964 = !DILocation(line: 1515, column: 18, scope: !10956)
!10965 = !DILocation(line: 1515, column: 2, scope: !10956)
!10966 = !DILocation(line: 1516, column: 14, scope: !10956)
!10967 = !DILocation(line: 1516, column: 18, scope: !10956)
!10968 = !DILocation(line: 1516, column: 2, scope: !10956)
!10969 = !DILocation(line: 1517, column: 14, scope: !10956)
!10970 = !DILocation(line: 1517, column: 2, scope: !10956)
!10971 = !DILocation(line: 1518, column: 1, scope: !10956)
!10972 = distinct !DISubprogram(name: "xennet_open", scope: !3, file: !3, line: 359, type: !413, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!10973 = !DILocalVariable(name: "dev", arg: 1, scope: !10972, file: !3, line: 359, type: !301)
!10974 = !DILocation(line: 359, column: 43, scope: !10972)
!10975 = !DILocalVariable(name: "np", scope: !10972, file: !3, line: 361, type: !10156)
!10976 = !DILocation(line: 361, column: 24, scope: !10972)
!10977 = !DILocation(line: 361, column: 41, scope: !10972)
!10978 = !DILocation(line: 361, column: 29, scope: !10972)
!10979 = !DILocalVariable(name: "num_queues", scope: !10972, file: !3, line: 362, type: !7)
!10980 = !DILocation(line: 362, column: 15, scope: !10972)
!10981 = !DILocation(line: 362, column: 28, scope: !10972)
!10982 = !DILocation(line: 362, column: 33, scope: !10972)
!10983 = !DILocalVariable(name: "i", scope: !10972, file: !3, line: 363, type: !7)
!10984 = !DILocation(line: 363, column: 15, scope: !10972)
!10985 = !DILocalVariable(name: "queue", scope: !10972, file: !3, line: 364, type: !10150)
!10986 = !DILocation(line: 364, column: 25, scope: !10972)
!10987 = !DILocation(line: 366, column: 7, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10972, file: !3, line: 366, column: 6)
!10989 = !DILocation(line: 366, column: 11, scope: !10988)
!10990 = !DILocation(line: 366, column: 6, scope: !10972)
!10991 = !DILocation(line: 367, column: 3, scope: !10988)
!10992 = !DILocation(line: 369, column: 9, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10972, file: !3, line: 369, column: 2)
!10994 = !DILocation(line: 369, column: 7, scope: !10993)
!10995 = !DILocation(line: 369, column: 14, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 369, column: 2)
!10997 = !DILocation(line: 369, column: 18, scope: !10996)
!10998 = !DILocation(line: 369, column: 16, scope: !10996)
!10999 = !DILocation(line: 369, column: 2, scope: !10993)
!11000 = !DILocation(line: 370, column: 12, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10996, file: !3, line: 369, column: 35)
!11002 = !DILocation(line: 370, column: 16, scope: !11001)
!11003 = !DILocation(line: 370, column: 23, scope: !11001)
!11004 = !DILocation(line: 370, column: 9, scope: !11001)
!11005 = !DILocation(line: 371, column: 16, scope: !11001)
!11006 = !DILocation(line: 371, column: 23, scope: !11001)
!11007 = !DILocation(line: 371, column: 3, scope: !11001)
!11008 = !DILocation(line: 373, column: 17, scope: !11001)
!11009 = !DILocation(line: 373, column: 24, scope: !11001)
!11010 = !DILocation(line: 373, column: 3, scope: !11001)
!11011 = !DILocation(line: 374, column: 24, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11001, file: !3, line: 374, column: 7)
!11013 = !DILocation(line: 374, column: 7, scope: !11012)
!11014 = !DILocation(line: 374, column: 7, scope: !11001)
!11015 = !DILocation(line: 375, column: 28, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 374, column: 30)
!11017 = !DILocation(line: 375, column: 4, scope: !11016)
!11018 = !DILocation(line: 376, column: 33, scope: !11016)
!11019 = !DILocation(line: 376, column: 40, scope: !11016)
!11020 = !DILocation(line: 376, column: 43, scope: !11016)
!11021 = !DILocation(line: 376, column: 52, scope: !11016)
!11022 = !DILocation(line: 376, column: 4, scope: !11016)
!11023 = !DILocation(line: 376, column: 11, scope: !11016)
!11024 = !DILocation(line: 376, column: 14, scope: !11016)
!11025 = !DILocation(line: 376, column: 21, scope: !11016)
!11026 = !DILocation(line: 376, column: 31, scope: !11016)
!11027 = !DILocation(line: 377, column: 8, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11016, file: !3, line: 377, column: 8)
!11029 = !DILocation(line: 377, column: 8, scope: !11016)
!11030 = !DILocation(line: 378, column: 20, scope: !11028)
!11031 = !DILocation(line: 378, column: 27, scope: !11028)
!11032 = !DILocation(line: 378, column: 5, scope: !11028)
!11033 = !DILocation(line: 379, column: 3, scope: !11016)
!11034 = !DILocation(line: 380, column: 19, scope: !11001)
!11035 = !DILocation(line: 380, column: 26, scope: !11001)
!11036 = !DILocation(line: 380, column: 3, scope: !11001)
!11037 = !DILocation(line: 381, column: 2, scope: !11001)
!11038 = !DILocation(line: 369, column: 30, scope: !10996)
!11039 = !DILocation(line: 369, column: 2, scope: !10996)
!11040 = distinct !{!11040, !10999, !11041}
!11041 = !DILocation(line: 381, column: 2, scope: !10993)
!11042 = !DILocation(line: 383, column: 28, scope: !10972)
!11043 = !DILocation(line: 383, column: 2, scope: !10972)
!11044 = !DILocation(line: 385, column: 2, scope: !10972)
!11045 = !DILocation(line: 386, column: 1, scope: !10972)
!11046 = distinct !DISubprogram(name: "xennet_close", scope: !3, file: !3, line: 787, type: !413, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11047 = !DILocalVariable(name: "dev", arg: 1, scope: !11046, file: !3, line: 787, type: !301)
!11048 = !DILocation(line: 787, column: 44, scope: !11046)
!11049 = !DILocalVariable(name: "np", scope: !11046, file: !3, line: 789, type: !10156)
!11050 = !DILocation(line: 789, column: 24, scope: !11046)
!11051 = !DILocation(line: 789, column: 41, scope: !11046)
!11052 = !DILocation(line: 789, column: 29, scope: !11046)
!11053 = !DILocalVariable(name: "num_queues", scope: !11046, file: !3, line: 790, type: !7)
!11054 = !DILocation(line: 790, column: 15, scope: !11046)
!11055 = !DILocation(line: 790, column: 28, scope: !11046)
!11056 = !DILocation(line: 790, column: 33, scope: !11046)
!11057 = !DILocalVariable(name: "i", scope: !11046, file: !3, line: 791, type: !7)
!11058 = !DILocation(line: 791, column: 15, scope: !11046)
!11059 = !DILocalVariable(name: "queue", scope: !11046, file: !3, line: 792, type: !10150)
!11060 = !DILocation(line: 792, column: 25, scope: !11046)
!11061 = !DILocation(line: 793, column: 27, scope: !11046)
!11062 = !DILocation(line: 793, column: 31, scope: !11046)
!11063 = !DILocation(line: 793, column: 2, scope: !11046)
!11064 = !DILocation(line: 794, column: 9, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11046, file: !3, line: 794, column: 2)
!11066 = !DILocation(line: 794, column: 7, scope: !11065)
!11067 = !DILocation(line: 794, column: 14, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11065, file: !3, line: 794, column: 2)
!11069 = !DILocation(line: 794, column: 18, scope: !11068)
!11070 = !DILocation(line: 794, column: 16, scope: !11068)
!11071 = !DILocation(line: 794, column: 2, scope: !11065)
!11072 = !DILocation(line: 795, column: 12, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11068, file: !3, line: 794, column: 35)
!11074 = !DILocation(line: 795, column: 16, scope: !11073)
!11075 = !DILocation(line: 795, column: 23, scope: !11073)
!11076 = !DILocation(line: 795, column: 9, scope: !11073)
!11077 = !DILocation(line: 796, column: 17, scope: !11073)
!11078 = !DILocation(line: 796, column: 24, scope: !11073)
!11079 = !DILocation(line: 796, column: 3, scope: !11073)
!11080 = !DILocation(line: 797, column: 2, scope: !11073)
!11081 = !DILocation(line: 794, column: 30, scope: !11068)
!11082 = !DILocation(line: 794, column: 2, scope: !11068)
!11083 = distinct !{!11083, !11071, !11084}
!11084 = !DILocation(line: 797, column: 2, scope: !11065)
!11085 = !DILocation(line: 798, column: 2, scope: !11046)
!11086 = distinct !DISubprogram(name: "xennet_start_xmit", scope: !3, file: !3, line: 639, type: !423, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11087 = !DILocalVariable(name: "lock", arg: 1, scope: !11088, file: !11089, line: 407, type: !2450)
!11088 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !11089, file: !11089, line: 407, type: !11090, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11089 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!11090 = !DISubroutineType(types: !11091)
!11091 = !{null, !2450, !323}
!11092 = !DILocation(line: 407, column: 64, scope: !11088, inlinedAt: !11093)
!11093 = distinct !DILocation(line: 777, column: 2, scope: !11086)
!11094 = !DILocalVariable(name: "flags", arg: 2, scope: !11088, file: !11089, line: 407, type: !323)
!11095 = !DILocation(line: 407, column: 84, scope: !11088, inlinedAt: !11093)
!11096 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !11097, file: !42, line: 3324, type: !9308)
!11097 = distinct !DISubprogram(name: "netif_tx_stop_queue", scope: !42, file: !42, line: 3324, type: !11098, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11098 = !DISubroutineType(types: !11099)
!11099 = !{null, !9308}
!11100 = !DILocation(line: 3324, column: 70, scope: !11097, inlinedAt: !11101)
!11101 = distinct !DILocation(line: 775, column: 3, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 774, column: 6)
!11103 = !DILocation(line: 407, column: 64, scope: !11088, inlinedAt: !11104)
!11104 = distinct !DILocation(line: 704, column: 3, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11106, file: !3, line: 703, column: 56)
!11106 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 701, column: 6)
!11107 = !DILocation(line: 407, column: 84, scope: !11088, inlinedAt: !11104)
!11108 = !DILocalVariable(name: "lock", arg: 1, scope: !11109, file: !11089, line: 327, type: !2450)
!11109 = distinct !DISubprogram(name: "spinlock_check", scope: !11089, file: !11089, line: 327, type: !11110, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11110 = !DISubroutineType(types: !11111)
!11111 = !{!11112, !2450}
!11112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!11113 = !DILocation(line: 327, column: 67, scope: !11109, inlinedAt: !11114)
!11114 = distinct !DILocation(line: 699, column: 2, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11116, file: !3, line: 699, column: 2)
!11116 = distinct !DILexicalBlock(scope: !11117, file: !3, line: 699, column: 2)
!11117 = distinct !DILexicalBlock(scope: !11118, file: !3, line: 699, column: 2)
!11118 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 699, column: 2)
!11119 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 699, column: 2)
!11120 = !DILocalVariable(name: "skb", arg: 1, scope: !11086, file: !3, line: 639, type: !426)
!11121 = !DILocation(line: 639, column: 54, scope: !11086)
!11122 = !DILocalVariable(name: "dev", arg: 2, scope: !11086, file: !3, line: 639, type: !301)
!11123 = !DILocation(line: 639, column: 78, scope: !11086)
!11124 = !DILocalVariable(name: "np", scope: !11086, file: !3, line: 641, type: !10156)
!11125 = !DILocation(line: 641, column: 24, scope: !11086)
!11126 = !DILocation(line: 641, column: 41, scope: !11086)
!11127 = !DILocation(line: 641, column: 29, scope: !11086)
!11128 = !DILocalVariable(name: "tx_stats", scope: !11086, file: !3, line: 642, type: !10071)
!11129 = !DILocation(line: 642, column: 25, scope: !11086)
!11130 = !DILocation(line: 642, column: 36, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11132, file: !3, line: 642, column: 36)
!11132 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 642, column: 36)
!11133 = !DILocalVariable(name: "__vpp_verify", scope: !11134, file: !3, line: 642, type: !2269)
!11134 = distinct !DILexicalBlock(scope: !11131, file: !3, line: 642, column: 36)
!11135 = !DILocation(line: 642, column: 36, scope: !11134)
!11136 = !DILocation(line: 642, column: 36, scope: !11132)
!11137 = !DILocalVariable(name: "tx", scope: !11086, file: !3, line: 643, type: !11138)
!11138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10256, size: 64)
!11139 = !DILocation(line: 643, column: 31, scope: !11086)
!11140 = !DILocalVariable(name: "first_tx", scope: !11086, file: !3, line: 643, type: !11138)
!11141 = !DILocation(line: 643, column: 36, scope: !11086)
!11142 = !DILocalVariable(name: "i", scope: !11086, file: !3, line: 644, type: !7)
!11143 = !DILocation(line: 644, column: 15, scope: !11086)
!11144 = !DILocalVariable(name: "notify", scope: !11086, file: !3, line: 645, type: !43)
!11145 = !DILocation(line: 645, column: 6, scope: !11086)
!11146 = !DILocalVariable(name: "slots", scope: !11086, file: !3, line: 646, type: !43)
!11147 = !DILocation(line: 646, column: 6, scope: !11086)
!11148 = !DILocalVariable(name: "page", scope: !11086, file: !3, line: 647, type: !630)
!11149 = !DILocation(line: 647, column: 15, scope: !11086)
!11150 = !DILocalVariable(name: "offset", scope: !11086, file: !3, line: 648, type: !7)
!11151 = !DILocation(line: 648, column: 15, scope: !11086)
!11152 = !DILocalVariable(name: "len", scope: !11086, file: !3, line: 649, type: !7)
!11153 = !DILocation(line: 649, column: 15, scope: !11086)
!11154 = !DILocalVariable(name: "flags", scope: !11086, file: !3, line: 650, type: !323)
!11155 = !DILocation(line: 650, column: 16, scope: !11086)
!11156 = !DILocalVariable(name: "queue", scope: !11086, file: !3, line: 651, type: !10150)
!11157 = !DILocation(line: 651, column: 25, scope: !11086)
!11158 = !DILocalVariable(name: "num_queues", scope: !11086, file: !3, line: 652, type: !7)
!11159 = !DILocation(line: 652, column: 15, scope: !11086)
!11160 = !DILocation(line: 652, column: 28, scope: !11086)
!11161 = !DILocation(line: 652, column: 33, scope: !11086)
!11162 = !DILocalVariable(name: "queue_index", scope: !11086, file: !3, line: 653, type: !1044)
!11163 = !DILocation(line: 653, column: 6, scope: !11086)
!11164 = !DILocalVariable(name: "nskb", scope: !11086, file: !3, line: 654, type: !426)
!11165 = !DILocation(line: 654, column: 18, scope: !11086)
!11166 = !DILocation(line: 657, column: 6, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 657, column: 6)
!11168 = !DILocation(line: 657, column: 17, scope: !11167)
!11169 = !DILocation(line: 657, column: 6, scope: !11086)
!11170 = !DILocation(line: 658, column: 3, scope: !11167)
!11171 = !DILocation(line: 660, column: 38, scope: !11086)
!11172 = !DILocation(line: 660, column: 16, scope: !11086)
!11173 = !DILocation(line: 660, column: 14, scope: !11086)
!11174 = !DILocation(line: 661, column: 11, scope: !11086)
!11175 = !DILocation(line: 661, column: 15, scope: !11086)
!11176 = !DILocation(line: 661, column: 22, scope: !11086)
!11177 = !DILocation(line: 661, column: 8, scope: !11086)
!11178 = !DILocation(line: 666, column: 6, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 666, column: 6)
!11180 = !DILocation(line: 666, column: 6, scope: !11086)
!11181 = !DILocation(line: 667, column: 3, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11179, file: !3, line: 666, column: 50)
!11183 = !DILocation(line: 667, column: 3, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11185, file: !3, line: 667, column: 3)
!11185 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 667, column: 3)
!11186 = !DILocation(line: 667, column: 3, scope: !11185)
!11187 = !DILocation(line: 670, column: 3, scope: !11182)
!11188 = !DILocation(line: 673, column: 33, scope: !11086)
!11189 = !DILocation(line: 673, column: 10, scope: !11086)
!11190 = !DILocation(line: 673, column: 8, scope: !11086)
!11191 = !DILocation(line: 674, column: 6, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 674, column: 6)
!11193 = !DILocation(line: 674, column: 6, scope: !11086)
!11194 = !DILocation(line: 675, column: 3, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11192, file: !3, line: 674, column: 47)
!11196 = !DILocation(line: 675, column: 3, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11195, file: !3, line: 675, column: 3)
!11198 = !DILocation(line: 677, column: 21, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11195, file: !3, line: 677, column: 7)
!11200 = !DILocation(line: 677, column: 7, scope: !11199)
!11201 = !DILocation(line: 677, column: 7, scope: !11195)
!11202 = !DILocation(line: 678, column: 4, scope: !11199)
!11203 = !DILocation(line: 679, column: 2, scope: !11195)
!11204 = !DILocation(line: 681, column: 9, scope: !11086)
!11205 = !DILocation(line: 681, column: 7, scope: !11086)
!11206 = !DILocation(line: 682, column: 11, scope: !11086)
!11207 = !DILocation(line: 682, column: 9, scope: !11086)
!11208 = !DILocation(line: 687, column: 6, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 687, column: 6)
!11210 = !DILocation(line: 687, column: 6, scope: !11086)
!11211 = !DILocation(line: 688, column: 19, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11209, file: !3, line: 687, column: 47)
!11213 = !DILocation(line: 688, column: 10, scope: !11212)
!11214 = !DILocation(line: 688, column: 8, scope: !11212)
!11215 = !DILocation(line: 689, column: 8, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11212, file: !3, line: 689, column: 7)
!11217 = !DILocation(line: 689, column: 7, scope: !11212)
!11218 = !DILocation(line: 690, column: 4, scope: !11216)
!11219 = !DILocation(line: 691, column: 23, scope: !11212)
!11220 = !DILocation(line: 691, column: 3, scope: !11212)
!11221 = !DILocation(line: 692, column: 9, scope: !11212)
!11222 = !DILocation(line: 692, column: 7, scope: !11212)
!11223 = !DILocation(line: 693, column: 10, scope: !11212)
!11224 = !DILocation(line: 693, column: 8, scope: !11212)
!11225 = !DILocation(line: 694, column: 12, scope: !11212)
!11226 = !DILocation(line: 694, column: 10, scope: !11212)
!11227 = !DILocation(line: 695, column: 2, scope: !11212)
!11228 = !DILocation(line: 697, column: 20, scope: !11086)
!11229 = !DILocation(line: 697, column: 8, scope: !11086)
!11230 = !DILocation(line: 697, column: 6, scope: !11086)
!11231 = !DILocation(line: 699, column: 2, scope: !11086)
!11232 = !DILocation(line: 699, column: 2, scope: !11119)
!11233 = !DILocalVariable(name: "__dummy", scope: !11234, file: !3, line: 699, type: !323)
!11234 = distinct !DILexicalBlock(scope: !11118, file: !3, line: 699, column: 2)
!11235 = !DILocation(line: 699, column: 2, scope: !11234)
!11236 = !DILocalVariable(name: "__dummy2", scope: !11234, file: !3, line: 699, type: !323)
!11237 = !DILocation(line: 699, column: 2, scope: !11118)
!11238 = !DILocation(line: 699, column: 2, scope: !11117)
!11239 = !DILocation(line: 699, column: 2, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11117, file: !3, line: 699, column: 2)
!11241 = !DILocalVariable(name: "__dummy", scope: !11242, file: !3, line: 699, type: !323)
!11242 = distinct !DILexicalBlock(scope: !11243, file: !3, line: 699, column: 2)
!11243 = distinct !DILexicalBlock(scope: !11240, file: !3, line: 699, column: 2)
!11244 = !DILocation(line: 699, column: 2, scope: !11242)
!11245 = !DILocalVariable(name: "__dummy2", scope: !11242, file: !3, line: 699, type: !323)
!11246 = !DILocation(line: 699, column: 2, scope: !11243)
!11247 = !DILocation(line: 699, column: 2, scope: !11116)
!11248 = !{i32 -2136830790}
!11249 = !DILocation(line: 699, column: 2, scope: !11115)
!11250 = !DILocation(line: 329, column: 10, scope: !11109, inlinedAt: !11114)
!11251 = !DILocation(line: 329, column: 16, scope: !11109, inlinedAt: !11114)
!11252 = !DILocation(line: 701, column: 6, scope: !11106)
!11253 = !DILocation(line: 701, column: 6, scope: !11086)
!11254 = !DILocation(line: 704, column: 27, scope: !11105)
!11255 = !DILocation(line: 704, column: 34, scope: !11105)
!11256 = !DILocation(line: 704, column: 43, scope: !11105)
!11257 = !DILocalVariable(name: "__dummy", scope: !11258, file: !11089, line: 409, type: !323)
!11258 = distinct !DILexicalBlock(scope: !11259, file: !11089, line: 409, column: 2)
!11259 = distinct !DILexicalBlock(scope: !11088, file: !11089, line: 409, column: 2)
!11260 = !DILocation(line: 409, column: 2, scope: !11258, inlinedAt: !11104)
!11261 = !DILocalVariable(name: "__dummy2", scope: !11258, file: !11089, line: 409, type: !323)
!11262 = !DILocalVariable(name: "__dummy", scope: !11263, file: !11089, line: 409, type: !323)
!11263 = distinct !DILexicalBlock(scope: !11264, file: !11089, line: 409, column: 2)
!11264 = distinct !DILexicalBlock(scope: !11265, file: !11089, line: 409, column: 2)
!11265 = distinct !DILexicalBlock(scope: !11266, file: !11089, line: 409, column: 2)
!11266 = distinct !DILexicalBlock(scope: !11259, file: !11089, line: 409, column: 2)
!11267 = !DILocation(line: 409, column: 2, scope: !11263, inlinedAt: !11104)
!11268 = !DILocalVariable(name: "__dummy2", scope: !11263, file: !11089, line: 409, type: !323)
!11269 = !DILocation(line: 409, column: 2, scope: !11264, inlinedAt: !11104)
!11270 = !DILocation(line: 409, column: 2, scope: !11271, inlinedAt: !11104)
!11271 = distinct !DILexicalBlock(scope: !11266, file: !11089, line: 409, column: 2)
!11272 = !{i32 -2145413570}
!11273 = !DILocation(line: 409, column: 2, scope: !11274, inlinedAt: !11104)
!11274 = distinct !DILexicalBlock(scope: !11271, file: !11089, line: 409, column: 2)
!11275 = !DILocation(line: 705, column: 3, scope: !11105)
!11276 = !DILocation(line: 709, column: 42, scope: !11086)
!11277 = !DILocation(line: 709, column: 49, scope: !11086)
!11278 = !DILocation(line: 710, column: 7, scope: !11086)
!11279 = !DILocation(line: 710, column: 13, scope: !11086)
!11280 = !DILocation(line: 710, column: 21, scope: !11086)
!11281 = !DILocation(line: 709, column: 18, scope: !11086)
!11282 = !DILocation(line: 709, column: 16, scope: !11086)
!11283 = !DILocation(line: 709, column: 11, scope: !11086)
!11284 = !DILocation(line: 711, column: 12, scope: !11086)
!11285 = !DILocation(line: 711, column: 16, scope: !11086)
!11286 = !DILocation(line: 711, column: 9, scope: !11086)
!11287 = !DILocation(line: 712, column: 6, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 712, column: 6)
!11289 = !DILocation(line: 712, column: 13, scope: !11288)
!11290 = !DILocation(line: 712, column: 6, scope: !11086)
!11291 = !DILocation(line: 713, column: 7, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11288, file: !3, line: 712, column: 27)
!11293 = !DILocation(line: 714, column: 10, scope: !11292)
!11294 = !DILocation(line: 715, column: 2, scope: !11292)
!11295 = !DILocation(line: 716, column: 9, scope: !11086)
!11296 = !DILocation(line: 716, column: 13, scope: !11086)
!11297 = !DILocation(line: 716, column: 6, scope: !11086)
!11298 = !DILocation(line: 718, column: 6, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 718, column: 6)
!11300 = !DILocation(line: 718, column: 11, scope: !11299)
!11301 = !DILocation(line: 718, column: 21, scope: !11299)
!11302 = !DILocation(line: 718, column: 6, scope: !11086)
!11303 = !DILocation(line: 720, column: 3, scope: !11299)
!11304 = !DILocation(line: 720, column: 7, scope: !11299)
!11305 = !DILocation(line: 720, column: 13, scope: !11299)
!11306 = !DILocation(line: 721, column: 11, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11299, file: !3, line: 721, column: 11)
!11308 = !DILocation(line: 721, column: 16, scope: !11307)
!11309 = !DILocation(line: 721, column: 26, scope: !11307)
!11310 = !DILocation(line: 721, column: 11, scope: !11299)
!11311 = !DILocation(line: 723, column: 3, scope: !11307)
!11312 = !DILocation(line: 723, column: 7, scope: !11307)
!11313 = !DILocation(line: 723, column: 13, scope: !11307)
!11314 = !DILocation(line: 726, column: 6, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 726, column: 6)
!11316 = !DILocation(line: 726, column: 23, scope: !11315)
!11317 = !DILocation(line: 726, column: 6, scope: !11086)
!11318 = !DILocalVariable(name: "gso", scope: !11319, file: !3, line: 727, type: !10105)
!11319 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 726, column: 33)
!11320 = !DILocation(line: 727, column: 32, scope: !11319)
!11321 = !DILocation(line: 730, column: 4, scope: !11319)
!11322 = !DILocation(line: 729, column: 9, scope: !11319)
!11323 = !DILocation(line: 729, column: 7, scope: !11319)
!11324 = !DILocation(line: 732, column: 3, scope: !11319)
!11325 = !DILocation(line: 732, column: 7, scope: !11319)
!11326 = !DILocation(line: 732, column: 13, scope: !11319)
!11327 = !DILocation(line: 734, column: 21, scope: !11319)
!11328 = !DILocation(line: 734, column: 38, scope: !11319)
!11329 = !DILocation(line: 734, column: 3, scope: !11319)
!11330 = !DILocation(line: 734, column: 8, scope: !11319)
!11331 = !DILocation(line: 734, column: 10, scope: !11319)
!11332 = !DILocation(line: 734, column: 14, scope: !11319)
!11333 = !DILocation(line: 734, column: 19, scope: !11319)
!11334 = !DILocation(line: 735, column: 22, scope: !11319)
!11335 = !DILocation(line: 735, column: 39, scope: !11319)
!11336 = !DILocation(line: 735, column: 48, scope: !11319)
!11337 = !DILocation(line: 735, column: 21, scope: !11319)
!11338 = !DILocation(line: 735, column: 3, scope: !11319)
!11339 = !DILocation(line: 735, column: 8, scope: !11319)
!11340 = !DILocation(line: 735, column: 10, scope: !11319)
!11341 = !DILocation(line: 735, column: 14, scope: !11319)
!11342 = !DILocation(line: 735, column: 19, scope: !11319)
!11343 = !DILocation(line: 738, column: 3, scope: !11319)
!11344 = !DILocation(line: 738, column: 8, scope: !11319)
!11345 = !DILocation(line: 738, column: 10, scope: !11319)
!11346 = !DILocation(line: 738, column: 14, scope: !11319)
!11347 = !DILocation(line: 738, column: 18, scope: !11319)
!11348 = !DILocation(line: 739, column: 3, scope: !11319)
!11349 = !DILocation(line: 739, column: 8, scope: !11319)
!11350 = !DILocation(line: 739, column: 10, scope: !11319)
!11351 = !DILocation(line: 739, column: 14, scope: !11319)
!11352 = !DILocation(line: 739, column: 23, scope: !11319)
!11353 = !DILocation(line: 741, column: 3, scope: !11319)
!11354 = !DILocation(line: 741, column: 8, scope: !11319)
!11355 = !DILocation(line: 741, column: 13, scope: !11319)
!11356 = !DILocation(line: 742, column: 3, scope: !11319)
!11357 = !DILocation(line: 742, column: 8, scope: !11319)
!11358 = !DILocation(line: 742, column: 14, scope: !11319)
!11359 = !DILocation(line: 743, column: 2, scope: !11319)
!11360 = !DILocation(line: 746, column: 26, scope: !11086)
!11361 = !DILocation(line: 746, column: 33, scope: !11086)
!11362 = !DILocation(line: 746, column: 37, scope: !11086)
!11363 = !DILocation(line: 746, column: 42, scope: !11086)
!11364 = !DILocation(line: 746, column: 48, scope: !11086)
!11365 = !DILocation(line: 746, column: 56, scope: !11086)
!11366 = !DILocation(line: 746, column: 7, scope: !11086)
!11367 = !DILocation(line: 746, column: 5, scope: !11086)
!11368 = !DILocation(line: 749, column: 9, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 749, column: 2)
!11370 = !DILocation(line: 749, column: 7, scope: !11369)
!11371 = !DILocation(line: 749, column: 14, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 749, column: 2)
!11373 = !DILocation(line: 749, column: 18, scope: !11372)
!11374 = !DILocation(line: 749, column: 35, scope: !11372)
!11375 = !DILocation(line: 749, column: 16, scope: !11372)
!11376 = !DILocation(line: 749, column: 2, scope: !11369)
!11377 = !DILocalVariable(name: "frag", scope: !11378, file: !3, line: 750, type: !11379)
!11378 = distinct !DILexicalBlock(scope: !11372, file: !3, line: 749, column: 50)
!11379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10100, size: 64)
!11380 = !DILocation(line: 750, column: 15, scope: !11378)
!11381 = !DILocation(line: 750, column: 23, scope: !11378)
!11382 = !DILocation(line: 750, column: 40, scope: !11378)
!11383 = !DILocation(line: 750, column: 46, scope: !11378)
!11384 = !DILocation(line: 751, column: 27, scope: !11378)
!11385 = !DILocation(line: 751, column: 34, scope: !11378)
!11386 = !DILocation(line: 751, column: 38, scope: !11378)
!11387 = !DILocation(line: 751, column: 57, scope: !11378)
!11388 = !DILocation(line: 751, column: 43, scope: !11378)
!11389 = !DILocation(line: 752, column: 19, scope: !11378)
!11390 = !DILocation(line: 752, column: 6, scope: !11378)
!11391 = !DILocation(line: 753, column: 20, scope: !11378)
!11392 = !DILocation(line: 753, column: 6, scope: !11378)
!11393 = !DILocation(line: 751, column: 8, scope: !11378)
!11394 = !DILocation(line: 751, column: 6, scope: !11378)
!11395 = !DILocation(line: 754, column: 2, scope: !11378)
!11396 = !DILocation(line: 749, column: 46, scope: !11372)
!11397 = !DILocation(line: 749, column: 2, scope: !11372)
!11398 = distinct !{!11398, !11376, !11399}
!11399 = !DILocation(line: 754, column: 2, scope: !11369)
!11400 = !DILocation(line: 757, column: 19, scope: !11086)
!11401 = !DILocation(line: 757, column: 24, scope: !11086)
!11402 = !DILocation(line: 757, column: 2, scope: !11086)
!11403 = !DILocation(line: 757, column: 12, scope: !11086)
!11404 = !DILocation(line: 757, column: 17, scope: !11086)
!11405 = !DILocation(line: 760, column: 19, scope: !11086)
!11406 = !DILocation(line: 760, column: 2, scope: !11086)
!11407 = !DILocation(line: 762, column: 2, scope: !11086)
!11408 = !DILocalVariable(name: "__old", scope: !11409, file: !3, line: 762, type: !10103)
!11409 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 762, column: 2)
!11410 = !DILocation(line: 762, column: 2, scope: !11409)
!11411 = !DILocalVariable(name: "__new", scope: !11409, file: !3, line: 762, type: !10103)
!11412 = !{i32 -2136829374}
!11413 = !{i32 -2136829333}
!11414 = !DILocation(line: 763, column: 6, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 763, column: 6)
!11416 = !DILocation(line: 763, column: 6, scope: !11086)
!11417 = !DILocation(line: 764, column: 25, scope: !11415)
!11418 = !DILocation(line: 764, column: 32, scope: !11415)
!11419 = !DILocation(line: 764, column: 3, scope: !11415)
!11420 = !DILocation(line: 766, column: 26, scope: !11086)
!11421 = !DILocation(line: 766, column: 36, scope: !11086)
!11422 = !DILocation(line: 766, column: 2, scope: !11086)
!11423 = !DILocation(line: 767, column: 21, scope: !11086)
!11424 = !DILocation(line: 767, column: 26, scope: !11086)
!11425 = !DILocation(line: 767, column: 2, scope: !11086)
!11426 = !DILocation(line: 767, column: 12, scope: !11086)
!11427 = !DILocation(line: 767, column: 18, scope: !11086)
!11428 = !DILocation(line: 768, column: 2, scope: !11086)
!11429 = !DILocation(line: 768, column: 12, scope: !11086)
!11430 = !DILocation(line: 768, column: 19, scope: !11086)
!11431 = !DILocation(line: 769, column: 24, scope: !11086)
!11432 = !DILocation(line: 769, column: 34, scope: !11086)
!11433 = !DILocation(line: 769, column: 2, scope: !11086)
!11434 = !DILocation(line: 772, column: 19, scope: !11086)
!11435 = !DILocation(line: 772, column: 2, scope: !11086)
!11436 = !DILocation(line: 774, column: 34, scope: !11102)
!11437 = !DILocation(line: 774, column: 7, scope: !11102)
!11438 = !DILocation(line: 774, column: 6, scope: !11086)
!11439 = !DILocation(line: 775, column: 43, scope: !11102)
!11440 = !DILocation(line: 775, column: 48, scope: !11102)
!11441 = !DILocation(line: 775, column: 55, scope: !11102)
!11442 = !DILocation(line: 775, column: 23, scope: !11102)
!11443 = !DILocation(line: 3326, column: 35, scope: !11097, inlinedAt: !11101)
!11444 = !DILocation(line: 3326, column: 46, scope: !11097, inlinedAt: !11101)
!11445 = !DILocation(line: 3326, column: 2, scope: !11097, inlinedAt: !11101)
!11446 = !DILocation(line: 775, column: 3, scope: !11102)
!11447 = !DILocation(line: 777, column: 26, scope: !11086)
!11448 = !DILocation(line: 777, column: 33, scope: !11086)
!11449 = !DILocation(line: 777, column: 42, scope: !11086)
!11450 = !DILocation(line: 409, column: 2, scope: !11258, inlinedAt: !11093)
!11451 = !DILocation(line: 409, column: 2, scope: !11263, inlinedAt: !11093)
!11452 = !DILocation(line: 409, column: 2, scope: !11264, inlinedAt: !11093)
!11453 = !DILocation(line: 409, column: 2, scope: !11271, inlinedAt: !11093)
!11454 = !DILocation(line: 409, column: 2, scope: !11274, inlinedAt: !11093)
!11455 = !DILocation(line: 779, column: 2, scope: !11086)
!11456 = !DILabel(scope: !11086, name: "drop", file: !3, line: 781)
!11457 = !DILocation(line: 781, column: 2, scope: !11086)
!11458 = !DILocation(line: 782, column: 2, scope: !11086)
!11459 = !DILocation(line: 782, column: 7, scope: !11086)
!11460 = !DILocation(line: 782, column: 13, scope: !11086)
!11461 = !DILocation(line: 782, column: 23, scope: !11086)
!11462 = !DILocation(line: 783, column: 20, scope: !11086)
!11463 = !DILocation(line: 783, column: 2, scope: !11086)
!11464 = !DILocation(line: 784, column: 2, scope: !11086)
!11465 = !DILocation(line: 785, column: 1, scope: !11086)
!11466 = distinct !DISubprogram(name: "xennet_select_queue", scope: !3, file: !3, line: 559, type: !8022, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11467 = !DILocalVariable(name: "dev", arg: 1, scope: !11466, file: !3, line: 559, type: !301)
!11468 = !DILocation(line: 559, column: 51, scope: !11466)
!11469 = !DILocalVariable(name: "skb", arg: 2, scope: !11466, file: !3, line: 559, type: !426)
!11470 = !DILocation(line: 559, column: 72, scope: !11466)
!11471 = !DILocalVariable(name: "sb_dev", arg: 3, scope: !11466, file: !3, line: 560, type: !301)
!11472 = !DILocation(line: 560, column: 30, scope: !11466)
!11473 = !DILocalVariable(name: "num_queues", scope: !11466, file: !3, line: 562, type: !7)
!11474 = !DILocation(line: 562, column: 15, scope: !11466)
!11475 = !DILocation(line: 562, column: 28, scope: !11466)
!11476 = !DILocation(line: 562, column: 33, scope: !11466)
!11477 = !DILocalVariable(name: "hash", scope: !11466, file: !3, line: 563, type: !713)
!11478 = !DILocation(line: 563, column: 6, scope: !11466)
!11479 = !DILocalVariable(name: "queue_idx", scope: !11466, file: !3, line: 564, type: !1044)
!11480 = !DILocation(line: 564, column: 6, scope: !11466)
!11481 = !DILocation(line: 567, column: 6, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 567, column: 6)
!11483 = !DILocation(line: 567, column: 17, scope: !11482)
!11484 = !DILocation(line: 567, column: 6, scope: !11466)
!11485 = !DILocation(line: 568, column: 13, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11482, file: !3, line: 567, column: 23)
!11487 = !DILocation(line: 569, column: 2, scope: !11486)
!11488 = !DILocation(line: 570, column: 23, scope: !11489)
!11489 = distinct !DILexicalBlock(scope: !11482, file: !3, line: 569, column: 9)
!11490 = !DILocation(line: 570, column: 10, scope: !11489)
!11491 = !DILocation(line: 570, column: 8, scope: !11489)
!11492 = !DILocation(line: 571, column: 15, scope: !11489)
!11493 = !DILocation(line: 571, column: 22, scope: !11489)
!11494 = !DILocation(line: 571, column: 20, scope: !11489)
!11495 = !DILocation(line: 571, column: 13, scope: !11489)
!11496 = !DILocation(line: 574, column: 9, scope: !11466)
!11497 = !DILocation(line: 574, column: 2, scope: !11466)
!11498 = distinct !DISubprogram(name: "xennet_change_mtu", scope: !3, file: !3, line: 1240, type: !8152, scopeLine: 1241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11499 = !DILocalVariable(name: "dev", arg: 1, scope: !11498, file: !3, line: 1240, type: !301)
!11500 = !DILocation(line: 1240, column: 49, scope: !11498)
!11501 = !DILocalVariable(name: "mtu", arg: 2, scope: !11498, file: !3, line: 1240, type: !43)
!11502 = !DILocation(line: 1240, column: 58, scope: !11498)
!11503 = !DILocalVariable(name: "max", scope: !11498, file: !3, line: 1242, type: !43)
!11504 = !DILocation(line: 1242, column: 6, scope: !11498)
!11505 = !DILocation(line: 1242, column: 26, scope: !11498)
!11506 = !DILocation(line: 1242, column: 12, scope: !11498)
!11507 = !DILocation(line: 1244, column: 6, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 1244, column: 6)
!11509 = !DILocation(line: 1244, column: 12, scope: !11508)
!11510 = !DILocation(line: 1244, column: 10, scope: !11508)
!11511 = !DILocation(line: 1244, column: 6, scope: !11498)
!11512 = !DILocation(line: 1245, column: 3, scope: !11508)
!11513 = !DILocation(line: 1246, column: 13, scope: !11498)
!11514 = !DILocation(line: 1246, column: 2, scope: !11498)
!11515 = !DILocation(line: 1246, column: 7, scope: !11498)
!11516 = !DILocation(line: 1246, column: 11, scope: !11498)
!11517 = !DILocation(line: 1247, column: 2, scope: !11498)
!11518 = !DILocation(line: 1248, column: 1, scope: !11498)
!11519 = distinct !DISubprogram(name: "xennet_get_stats64", scope: !3, file: !3, line: 1250, type: !8164, scopeLine: 1252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11520 = !DILocalVariable(name: "dev", arg: 1, scope: !11519, file: !3, line: 1250, type: !301)
!11521 = !DILocation(line: 1250, column: 51, scope: !11519)
!11522 = !DILocalVariable(name: "tot", arg: 2, scope: !11519, file: !3, line: 1251, type: !8166)
!11523 = !DILocation(line: 1251, column: 37, scope: !11519)
!11524 = !DILocalVariable(name: "np", scope: !11519, file: !3, line: 1253, type: !10156)
!11525 = !DILocation(line: 1253, column: 24, scope: !11519)
!11526 = !DILocation(line: 1253, column: 41, scope: !11519)
!11527 = !DILocation(line: 1253, column: 29, scope: !11519)
!11528 = !DILocalVariable(name: "cpu", scope: !11519, file: !3, line: 1254, type: !43)
!11529 = !DILocation(line: 1254, column: 6, scope: !11519)
!11530 = !DILocation(line: 1256, column: 2, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 1256, column: 2)
!11532 = !DILocation(line: 1256, column: 2, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11531, file: !3, line: 1256, column: 2)
!11534 = !DILocalVariable(name: "rx_stats", scope: !11535, file: !3, line: 1257, type: !10071)
!11535 = distinct !DILexicalBlock(scope: !11533, file: !3, line: 1256, column: 29)
!11536 = !DILocation(line: 1257, column: 26, scope: !11535)
!11537 = !DILocation(line: 1257, column: 37, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 1257, column: 37)
!11539 = !DILocation(line: 1257, column: 37, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11538, file: !3, line: 1257, column: 37)
!11541 = !DILocalVariable(name: "__vpp_verify", scope: !11542, file: !3, line: 1257, type: !2269)
!11542 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 1257, column: 37)
!11543 = !DILocation(line: 1257, column: 37, scope: !11542)
!11544 = !DILocalVariable(name: "tx_stats", scope: !11535, file: !3, line: 1258, type: !10071)
!11545 = !DILocation(line: 1258, column: 26, scope: !11535)
!11546 = !DILocation(line: 1258, column: 37, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 1258, column: 37)
!11548 = !DILocation(line: 1258, column: 37, scope: !11549)
!11549 = distinct !DILexicalBlock(scope: !11547, file: !3, line: 1258, column: 37)
!11550 = !DILocalVariable(name: "__vpp_verify", scope: !11551, file: !3, line: 1258, type: !2269)
!11551 = distinct !DILexicalBlock(scope: !11549, file: !3, line: 1258, column: 37)
!11552 = !DILocation(line: 1258, column: 37, scope: !11551)
!11553 = !DILocalVariable(name: "rx_packets", scope: !11535, file: !3, line: 1259, type: !342)
!11554 = !DILocation(line: 1259, column: 7, scope: !11535)
!11555 = !DILocalVariable(name: "rx_bytes", scope: !11535, file: !3, line: 1259, type: !342)
!11556 = !DILocation(line: 1259, column: 19, scope: !11535)
!11557 = !DILocalVariable(name: "tx_packets", scope: !11535, file: !3, line: 1259, type: !342)
!11558 = !DILocation(line: 1259, column: 29, scope: !11535)
!11559 = !DILocalVariable(name: "tx_bytes", scope: !11535, file: !3, line: 1259, type: !342)
!11560 = !DILocation(line: 1259, column: 41, scope: !11535)
!11561 = !DILocalVariable(name: "start", scope: !11535, file: !3, line: 1260, type: !7)
!11562 = !DILocation(line: 1260, column: 16, scope: !11535)
!11563 = !DILocation(line: 1262, column: 3, scope: !11535)
!11564 = !DILocation(line: 1263, column: 39, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 1262, column: 6)
!11566 = !DILocation(line: 1263, column: 49, scope: !11565)
!11567 = !DILocation(line: 1263, column: 12, scope: !11565)
!11568 = !DILocation(line: 1263, column: 10, scope: !11565)
!11569 = !DILocation(line: 1264, column: 17, scope: !11565)
!11570 = !DILocation(line: 1264, column: 27, scope: !11565)
!11571 = !DILocation(line: 1264, column: 15, scope: !11565)
!11572 = !DILocation(line: 1265, column: 15, scope: !11565)
!11573 = !DILocation(line: 1265, column: 25, scope: !11565)
!11574 = !DILocation(line: 1265, column: 13, scope: !11565)
!11575 = !DILocation(line: 1266, column: 3, scope: !11565)
!11576 = !DILocation(line: 1266, column: 39, scope: !11535)
!11577 = !DILocation(line: 1266, column: 49, scope: !11535)
!11578 = !DILocation(line: 1266, column: 56, scope: !11535)
!11579 = !DILocation(line: 1266, column: 12, scope: !11535)
!11580 = distinct !{!11580, !11563, !11581}
!11581 = !DILocation(line: 1266, column: 62, scope: !11535)
!11582 = !DILocation(line: 1268, column: 3, scope: !11535)
!11583 = !DILocation(line: 1269, column: 39, scope: !11584)
!11584 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 1268, column: 6)
!11585 = !DILocation(line: 1269, column: 49, scope: !11584)
!11586 = !DILocation(line: 1269, column: 12, scope: !11584)
!11587 = !DILocation(line: 1269, column: 10, scope: !11584)
!11588 = !DILocation(line: 1270, column: 17, scope: !11584)
!11589 = !DILocation(line: 1270, column: 27, scope: !11584)
!11590 = !DILocation(line: 1270, column: 15, scope: !11584)
!11591 = !DILocation(line: 1271, column: 15, scope: !11584)
!11592 = !DILocation(line: 1271, column: 25, scope: !11584)
!11593 = !DILocation(line: 1271, column: 13, scope: !11584)
!11594 = !DILocation(line: 1272, column: 3, scope: !11584)
!11595 = !DILocation(line: 1272, column: 39, scope: !11535)
!11596 = !DILocation(line: 1272, column: 49, scope: !11535)
!11597 = !DILocation(line: 1272, column: 56, scope: !11535)
!11598 = !DILocation(line: 1272, column: 12, scope: !11535)
!11599 = distinct !{!11599, !11582, !11600}
!11600 = !DILocation(line: 1272, column: 62, scope: !11535)
!11601 = !DILocation(line: 1274, column: 22, scope: !11535)
!11602 = !DILocation(line: 1274, column: 3, scope: !11535)
!11603 = !DILocation(line: 1274, column: 8, scope: !11535)
!11604 = !DILocation(line: 1274, column: 19, scope: !11535)
!11605 = !DILocation(line: 1275, column: 22, scope: !11535)
!11606 = !DILocation(line: 1275, column: 3, scope: !11535)
!11607 = !DILocation(line: 1275, column: 8, scope: !11535)
!11608 = !DILocation(line: 1275, column: 19, scope: !11535)
!11609 = !DILocation(line: 1276, column: 22, scope: !11535)
!11610 = !DILocation(line: 1276, column: 3, scope: !11535)
!11611 = !DILocation(line: 1276, column: 8, scope: !11535)
!11612 = !DILocation(line: 1276, column: 19, scope: !11535)
!11613 = !DILocation(line: 1277, column: 22, scope: !11535)
!11614 = !DILocation(line: 1277, column: 3, scope: !11535)
!11615 = !DILocation(line: 1277, column: 8, scope: !11535)
!11616 = !DILocation(line: 1277, column: 19, scope: !11535)
!11617 = !DILocation(line: 1278, column: 2, scope: !11535)
!11618 = distinct !{!11618, !11530, !11619}
!11619 = !DILocation(line: 1278, column: 2, scope: !11531)
!11620 = !DILocation(line: 1280, column: 20, scope: !11519)
!11621 = !DILocation(line: 1280, column: 25, scope: !11519)
!11622 = !DILocation(line: 1280, column: 31, scope: !11519)
!11623 = !DILocation(line: 1280, column: 2, scope: !11519)
!11624 = !DILocation(line: 1280, column: 7, scope: !11519)
!11625 = !DILocation(line: 1280, column: 18, scope: !11519)
!11626 = !DILocation(line: 1281, column: 20, scope: !11519)
!11627 = !DILocation(line: 1281, column: 25, scope: !11519)
!11628 = !DILocation(line: 1281, column: 31, scope: !11519)
!11629 = !DILocation(line: 1281, column: 2, scope: !11519)
!11630 = !DILocation(line: 1281, column: 7, scope: !11519)
!11631 = !DILocation(line: 1281, column: 18, scope: !11519)
!11632 = !DILocation(line: 1282, column: 1, scope: !11519)
!11633 = distinct !DISubprogram(name: "xennet_fix_features", scope: !3, file: !3, line: 1340, type: !8311, scopeLine: 1342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11634 = !DILocalVariable(name: "dev", arg: 1, scope: !11633, file: !3, line: 1340, type: !301)
!11635 = !DILocation(line: 1340, column: 65, scope: !11633)
!11636 = !DILocalVariable(name: "features", arg: 2, scope: !11633, file: !3, line: 1341, type: !340)
!11637 = !DILocation(line: 1341, column: 20, scope: !11633)
!11638 = !DILocalVariable(name: "np", scope: !11633, file: !3, line: 1343, type: !10156)
!11639 = !DILocation(line: 1343, column: 24, scope: !11633)
!11640 = !DILocation(line: 1343, column: 41, scope: !11633)
!11641 = !DILocation(line: 1343, column: 29, scope: !11633)
!11642 = !DILocation(line: 1345, column: 6, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 1345, column: 6)
!11644 = !DILocation(line: 1345, column: 15, scope: !11643)
!11645 = !DILocation(line: 1345, column: 28, scope: !11643)
!11646 = !DILocation(line: 1346, column: 28, scope: !11643)
!11647 = !DILocation(line: 1346, column: 32, scope: !11643)
!11648 = !DILocation(line: 1346, column: 39, scope: !11643)
!11649 = !DILocation(line: 1346, column: 7, scope: !11643)
!11650 = !DILocation(line: 1345, column: 6, scope: !11633)
!11651 = !DILocation(line: 1347, column: 12, scope: !11643)
!11652 = !DILocation(line: 1347, column: 3, scope: !11643)
!11653 = !DILocation(line: 1349, column: 6, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 1349, column: 6)
!11655 = !DILocation(line: 1349, column: 15, scope: !11654)
!11656 = !DILocation(line: 1349, column: 35, scope: !11654)
!11657 = !DILocation(line: 1350, column: 28, scope: !11654)
!11658 = !DILocation(line: 1350, column: 32, scope: !11654)
!11659 = !DILocation(line: 1350, column: 39, scope: !11654)
!11660 = !DILocation(line: 1350, column: 7, scope: !11654)
!11661 = !DILocation(line: 1349, column: 6, scope: !11633)
!11662 = !DILocation(line: 1352, column: 12, scope: !11654)
!11663 = !DILocation(line: 1352, column: 3, scope: !11654)
!11664 = !DILocation(line: 1354, column: 6, scope: !11665)
!11665 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 1354, column: 6)
!11666 = !DILocation(line: 1354, column: 15, scope: !11665)
!11667 = !DILocation(line: 1354, column: 29, scope: !11665)
!11668 = !DILocation(line: 1355, column: 28, scope: !11665)
!11669 = !DILocation(line: 1355, column: 32, scope: !11665)
!11670 = !DILocation(line: 1355, column: 39, scope: !11665)
!11671 = !DILocation(line: 1355, column: 7, scope: !11665)
!11672 = !DILocation(line: 1354, column: 6, scope: !11633)
!11673 = !DILocation(line: 1356, column: 12, scope: !11665)
!11674 = !DILocation(line: 1356, column: 3, scope: !11665)
!11675 = !DILocation(line: 1358, column: 6, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 1358, column: 6)
!11677 = !DILocation(line: 1358, column: 15, scope: !11676)
!11678 = !DILocation(line: 1358, column: 30, scope: !11676)
!11679 = !DILocation(line: 1359, column: 28, scope: !11676)
!11680 = !DILocation(line: 1359, column: 32, scope: !11676)
!11681 = !DILocation(line: 1359, column: 39, scope: !11676)
!11682 = !DILocation(line: 1359, column: 7, scope: !11676)
!11683 = !DILocation(line: 1358, column: 6, scope: !11633)
!11684 = !DILocation(line: 1360, column: 12, scope: !11676)
!11685 = !DILocation(line: 1360, column: 3, scope: !11676)
!11686 = !DILocation(line: 1362, column: 9, scope: !11633)
!11687 = !DILocation(line: 1362, column: 2, scope: !11633)
!11688 = distinct !DISubprogram(name: "xennet_set_features", scope: !3, file: !3, line: 1365, type: !8315, scopeLine: 1367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11689 = !DILocalVariable(name: "dev", arg: 1, scope: !11688, file: !3, line: 1365, type: !301)
!11690 = !DILocation(line: 1365, column: 51, scope: !11688)
!11691 = !DILocalVariable(name: "features", arg: 2, scope: !11688, file: !3, line: 1366, type: !340)
!11692 = !DILocation(line: 1366, column: 20, scope: !11688)
!11693 = !DILocation(line: 1368, column: 8, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11688, file: !3, line: 1368, column: 6)
!11695 = !DILocation(line: 1368, column: 17, scope: !11694)
!11696 = !DILocation(line: 1368, column: 31, scope: !11694)
!11697 = !DILocation(line: 1368, column: 34, scope: !11694)
!11698 = !DILocation(line: 1368, column: 39, scope: !11694)
!11699 = !DILocation(line: 1368, column: 43, scope: !11694)
!11700 = !DILocation(line: 1368, column: 6, scope: !11688)
!11701 = !DILocation(line: 1369, column: 15, scope: !11702)
!11702 = distinct !DILexicalBlock(scope: !11694, file: !3, line: 1368, column: 59)
!11703 = !DILocation(line: 1369, column: 3, scope: !11702)
!11704 = !DILocation(line: 1370, column: 3, scope: !11702)
!11705 = !DILocation(line: 1370, column: 8, scope: !11702)
!11706 = !DILocation(line: 1370, column: 12, scope: !11702)
!11707 = !DILocation(line: 1371, column: 2, scope: !11702)
!11708 = !DILocation(line: 1373, column: 2, scope: !11688)
!11709 = distinct !DISubprogram(name: "xennet_xdp", scope: !3, file: !3, line: 1483, type: !8452, scopeLine: 1484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11710 = !DILocalVariable(name: "dev", arg: 1, scope: !11709, file: !3, line: 1483, type: !301)
!11711 = !DILocation(line: 1483, column: 42, scope: !11709)
!11712 = !DILocalVariable(name: "xdp", arg: 2, scope: !11709, file: !3, line: 1483, type: !8454)
!11713 = !DILocation(line: 1483, column: 66, scope: !11709)
!11714 = !DILocation(line: 1485, column: 10, scope: !11709)
!11715 = !DILocation(line: 1485, column: 15, scope: !11709)
!11716 = !DILocation(line: 1485, column: 2, scope: !11709)
!11717 = !DILocation(line: 1487, column: 25, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11709, file: !3, line: 1485, column: 24)
!11719 = !DILocation(line: 1487, column: 30, scope: !11718)
!11720 = !DILocation(line: 1487, column: 35, scope: !11718)
!11721 = !DILocation(line: 1487, column: 41, scope: !11718)
!11722 = !DILocation(line: 1487, column: 46, scope: !11718)
!11723 = !DILocation(line: 1487, column: 10, scope: !11718)
!11724 = !DILocation(line: 1487, column: 3, scope: !11718)
!11725 = !DILocation(line: 1489, column: 3, scope: !11718)
!11726 = !DILocation(line: 1491, column: 1, scope: !11709)
!11727 = distinct !DISubprogram(name: "xennet_xdp_xmit", scope: !3, file: !3, line: 604, type: !8505, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11728 = !DILocation(line: 407, column: 64, scope: !11088, inlinedAt: !11729)
!11729 = distinct !DILocation(line: 631, column: 2, scope: !11727)
!11730 = !DILocation(line: 407, column: 84, scope: !11088, inlinedAt: !11729)
!11731 = !DILocation(line: 327, column: 67, scope: !11109, inlinedAt: !11732)
!11732 = distinct !DILocation(line: 619, column: 2, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11734, file: !3, line: 619, column: 2)
!11734 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 619, column: 2)
!11735 = distinct !DILexicalBlock(scope: !11736, file: !3, line: 619, column: 2)
!11736 = distinct !DILexicalBlock(scope: !11737, file: !3, line: 619, column: 2)
!11737 = distinct !DILexicalBlock(scope: !11727, file: !3, line: 619, column: 2)
!11738 = !DILocalVariable(name: "dev", arg: 1, scope: !11727, file: !3, line: 604, type: !301)
!11739 = !DILocation(line: 604, column: 47, scope: !11727)
!11740 = !DILocalVariable(name: "n", arg: 2, scope: !11727, file: !3, line: 604, type: !43)
!11741 = !DILocation(line: 604, column: 56, scope: !11727)
!11742 = !DILocalVariable(name: "frames", arg: 3, scope: !11727, file: !3, line: 605, type: !8507)
!11743 = !DILocation(line: 605, column: 26, scope: !11727)
!11744 = !DILocalVariable(name: "flags", arg: 4, scope: !11727, file: !3, line: 605, type: !713)
!11745 = !DILocation(line: 605, column: 38, scope: !11727)
!11746 = !DILocalVariable(name: "num_queues", scope: !11727, file: !3, line: 607, type: !7)
!11747 = !DILocation(line: 607, column: 15, scope: !11727)
!11748 = !DILocation(line: 607, column: 28, scope: !11727)
!11749 = !DILocation(line: 607, column: 33, scope: !11727)
!11750 = !DILocalVariable(name: "np", scope: !11727, file: !3, line: 608, type: !10156)
!11751 = !DILocation(line: 608, column: 24, scope: !11727)
!11752 = !DILocation(line: 608, column: 41, scope: !11727)
!11753 = !DILocation(line: 608, column: 29, scope: !11727)
!11754 = !DILocalVariable(name: "queue", scope: !11727, file: !3, line: 609, type: !10150)
!11755 = !DILocation(line: 609, column: 25, scope: !11727)
!11756 = !DILocalVariable(name: "irq_flags", scope: !11727, file: !3, line: 610, type: !323)
!11757 = !DILocation(line: 610, column: 16, scope: !11727)
!11758 = !DILocalVariable(name: "drops", scope: !11727, file: !3, line: 611, type: !43)
!11759 = !DILocation(line: 611, column: 6, scope: !11727)
!11760 = !DILocalVariable(name: "i", scope: !11727, file: !3, line: 612, type: !43)
!11761 = !DILocation(line: 612, column: 6, scope: !11727)
!11762 = !DILocalVariable(name: "err", scope: !11727, file: !3, line: 612, type: !43)
!11763 = !DILocation(line: 612, column: 9, scope: !11727)
!11764 = !DILocation(line: 614, column: 6, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11727, file: !3, line: 614, column: 6)
!11766 = !DILocation(line: 614, column: 6, scope: !11727)
!11767 = !DILocation(line: 615, column: 3, scope: !11765)
!11768 = !DILocation(line: 617, column: 11, scope: !11727)
!11769 = !DILocation(line: 617, column: 15, scope: !11727)
!11770 = !DILocation(line: 617, column: 43, scope: !11727)
!11771 = !DILocation(line: 617, column: 41, scope: !11727)
!11772 = !DILocation(line: 617, column: 8, scope: !11727)
!11773 = !DILocation(line: 619, column: 2, scope: !11727)
!11774 = !DILocation(line: 619, column: 2, scope: !11737)
!11775 = !DILocalVariable(name: "__dummy", scope: !11776, file: !3, line: 619, type: !323)
!11776 = distinct !DILexicalBlock(scope: !11736, file: !3, line: 619, column: 2)
!11777 = !DILocation(line: 619, column: 2, scope: !11776)
!11778 = !DILocalVariable(name: "__dummy2", scope: !11776, file: !3, line: 619, type: !323)
!11779 = !DILocation(line: 619, column: 2, scope: !11736)
!11780 = !DILocation(line: 619, column: 2, scope: !11735)
!11781 = !DILocation(line: 619, column: 2, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 619, column: 2)
!11783 = !DILocalVariable(name: "__dummy", scope: !11784, file: !3, line: 619, type: !323)
!11784 = distinct !DILexicalBlock(scope: !11785, file: !3, line: 619, column: 2)
!11785 = distinct !DILexicalBlock(scope: !11782, file: !3, line: 619, column: 2)
!11786 = !DILocation(line: 619, column: 2, scope: !11784)
!11787 = !DILocalVariable(name: "__dummy2", scope: !11784, file: !3, line: 619, type: !323)
!11788 = !DILocation(line: 619, column: 2, scope: !11785)
!11789 = !DILocation(line: 619, column: 2, scope: !11734)
!11790 = !{i32 -2136834499}
!11791 = !DILocation(line: 619, column: 2, scope: !11733)
!11792 = !DILocation(line: 329, column: 10, scope: !11109, inlinedAt: !11732)
!11793 = !DILocation(line: 329, column: 16, scope: !11109, inlinedAt: !11732)
!11794 = !DILocation(line: 620, column: 9, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11727, file: !3, line: 620, column: 2)
!11796 = !DILocation(line: 620, column: 7, scope: !11795)
!11797 = !DILocation(line: 620, column: 14, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11795, file: !3, line: 620, column: 2)
!11799 = !DILocation(line: 620, column: 18, scope: !11798)
!11800 = !DILocation(line: 620, column: 16, scope: !11798)
!11801 = !DILocation(line: 620, column: 2, scope: !11795)
!11802 = !DILocalVariable(name: "xdpf", scope: !11803, file: !3, line: 621, type: !8508)
!11803 = distinct !DILexicalBlock(scope: !11798, file: !3, line: 620, column: 26)
!11804 = !DILocation(line: 621, column: 21, scope: !11803)
!11805 = !DILocation(line: 621, column: 28, scope: !11803)
!11806 = !DILocation(line: 621, column: 35, scope: !11803)
!11807 = !DILocation(line: 623, column: 8, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11803, file: !3, line: 623, column: 7)
!11809 = !DILocation(line: 623, column: 7, scope: !11803)
!11810 = !DILocation(line: 624, column: 4, scope: !11808)
!11811 = !DILocation(line: 625, column: 29, scope: !11803)
!11812 = !DILocation(line: 625, column: 34, scope: !11803)
!11813 = !DILocation(line: 625, column: 41, scope: !11803)
!11814 = !DILocation(line: 625, column: 9, scope: !11803)
!11815 = !DILocation(line: 625, column: 7, scope: !11803)
!11816 = !DILocation(line: 626, column: 7, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11803, file: !3, line: 626, column: 7)
!11818 = !DILocation(line: 626, column: 7, scope: !11803)
!11819 = !DILocation(line: 627, column: 29, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11817, file: !3, line: 626, column: 12)
!11821 = !DILocation(line: 627, column: 4, scope: !11820)
!11822 = !DILocation(line: 628, column: 9, scope: !11820)
!11823 = !DILocation(line: 629, column: 3, scope: !11820)
!11824 = !DILocation(line: 630, column: 2, scope: !11803)
!11825 = !DILocation(line: 620, column: 22, scope: !11798)
!11826 = !DILocation(line: 620, column: 2, scope: !11798)
!11827 = distinct !{!11827, !11801, !11828}
!11828 = !DILocation(line: 630, column: 2, scope: !11795)
!11829 = !DILocation(line: 631, column: 26, scope: !11727)
!11830 = !DILocation(line: 631, column: 33, scope: !11727)
!11831 = !DILocation(line: 631, column: 42, scope: !11727)
!11832 = !DILocation(line: 409, column: 2, scope: !11258, inlinedAt: !11729)
!11833 = !DILocation(line: 409, column: 2, scope: !11263, inlinedAt: !11729)
!11834 = !DILocation(line: 409, column: 2, scope: !11264, inlinedAt: !11729)
!11835 = !DILocation(line: 409, column: 2, scope: !11271, inlinedAt: !11729)
!11836 = !DILocation(line: 409, column: 2, scope: !11274, inlinedAt: !11729)
!11837 = !DILocation(line: 633, column: 9, scope: !11727)
!11838 = !DILocation(line: 633, column: 13, scope: !11727)
!11839 = !DILocation(line: 633, column: 11, scope: !11727)
!11840 = !DILocation(line: 633, column: 2, scope: !11727)
!11841 = !DILocation(line: 634, column: 1, scope: !11727)
!11842 = distinct !DISubprogram(name: "napi_enable", scope: !42, file: !42, line: 507, type: !11843, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11843 = !DISubroutineType(types: !11844)
!11844 = !{null, !10210}
!11845 = !DILocalVariable(name: "n", arg: 1, scope: !11842, file: !42, line: 507, type: !10210)
!11846 = !DILocation(line: 507, column: 52, scope: !11842)
!11847 = !DILocation(line: 509, column: 2, scope: !11842)
!11848 = !DILocation(line: 509, column: 2, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11850, file: !42, line: 509, column: 2)
!11850 = distinct !DILexicalBlock(scope: !11842, file: !42, line: 509, column: 2)
!11851 = !DILocation(line: 509, column: 2, scope: !11850)
!11852 = !DILocation(line: 509, column: 2, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11849, file: !42, line: 509, column: 2)
!11854 = !DILocation(line: 509, column: 2, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11853, file: !42, line: 509, column: 2)
!11856 = !DILocation(line: 509, column: 2, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11853, file: !42, line: 509, column: 2)
!11858 = !{i32 -2140331527, i32 -2140331498, i32 -2140331452, i32 -2140331394, i32 -2140331340, i32 -2140331286, i32 -2140331231, i32 -2140331200}
!11859 = !DILocation(line: 509, column: 2, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11861, file: !42, line: 509, column: 2)
!11861 = distinct !DILexicalBlock(scope: !11853, file: !42, line: 509, column: 2)
!11862 = !{i32 -2140330752, i32 -2140330745, i32 -2140330691, i32 -2140330660, i32 -2140330630}
!11863 = !DILocation(line: 509, column: 2, scope: !11861)
!11864 = !DILocation(line: 510, column: 2, scope: !11842)
!11865 = !{i32 -2140330561}
!11866 = !DILocation(line: 511, column: 31, scope: !11842)
!11867 = !DILocation(line: 511, column: 34, scope: !11842)
!11868 = !DILocation(line: 511, column: 2, scope: !11842)
!11869 = !DILocation(line: 512, column: 31, scope: !11842)
!11870 = !DILocation(line: 512, column: 34, scope: !11842)
!11871 = !DILocation(line: 512, column: 2, scope: !11842)
!11872 = !DILocation(line: 513, column: 1, scope: !11842)
!11873 = distinct !DISubprogram(name: "spin_lock_bh", scope: !11089, file: !11089, line: 357, type: !11874, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11874 = !DISubroutineType(types: !11875)
!11875 = !{null, !2450}
!11876 = !DILocalVariable(name: "val", arg: 1, scope: !11877, file: !11878, line: 77, type: !43)
!11877 = distinct !DISubprogram(name: "__preempt_count_add", scope: !11878, file: !11878, line: 77, type: !3908, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11878 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!11879 = !DILocation(line: 77, column: 53, scope: !11877, inlinedAt: !11880)
!11880 = distinct !DILocation(line: 12, column: 2, scope: !11881, inlinedAt: !11885)
!11881 = distinct !DISubprogram(name: "__local_bh_disable_ip", scope: !11882, file: !11882, line: 10, type: !11883, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11882 = !DIFile(filename: "./include/linux/bottom_half.h", directory: "/home/lizy2001/genbc/linux")
!11883 = !DISubroutineType(types: !11884)
!11884 = !{null, !323, !7}
!11885 = distinct !DILocation(line: 359, column: 2, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11873, file: !11089, line: 359, column: 2)
!11887 = !DILocalVariable(name: "pao_ID__", scope: !11888, file: !11878, line: 79, type: !11889)
!11888 = distinct !DILexicalBlock(scope: !11877, file: !11878, line: 79, column: 2)
!11889 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !43)
!11890 = !DILocation(line: 79, column: 2, scope: !11888, inlinedAt: !11880)
!11891 = !DILocalVariable(name: "pto_val__", scope: !11892, file: !11878, line: 79, type: !713)
!11892 = distinct !DILexicalBlock(scope: !11893, file: !11878, line: 79, column: 2)
!11893 = distinct !DILexicalBlock(scope: !11894, file: !11878, line: 79, column: 2)
!11894 = distinct !DILexicalBlock(scope: !11888, file: !11878, line: 79, column: 2)
!11895 = !DILocation(line: 79, column: 2, scope: !11892, inlinedAt: !11880)
!11896 = !DILocalVariable(name: "ip", arg: 1, scope: !11881, file: !11882, line: 10, type: !323)
!11897 = !DILocation(line: 10, column: 65, scope: !11881, inlinedAt: !11885)
!11898 = !DILocalVariable(name: "cnt", arg: 2, scope: !11881, file: !11882, line: 10, type: !7)
!11899 = !DILocation(line: 10, column: 82, scope: !11881, inlinedAt: !11885)
!11900 = !DILocalVariable(name: "lock", arg: 1, scope: !11873, file: !11089, line: 357, type: !2450)
!11901 = !DILocation(line: 357, column: 54, scope: !11873)
!11902 = !DILocation(line: 359, column: 2, scope: !11873)
!11903 = !DILocation(line: 359, column: 2, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11886, file: !11089, line: 359, column: 2)
!11905 = !DILabel(scope: !11904, name: "__here", file: !11089, line: 359)
!11906 = !DILocation(line: 12, column: 2, scope: !11881, inlinedAt: !11885)
!11907 = !{i32 -2145488067}
!11908 = !DILocation(line: 13, column: 2, scope: !11881, inlinedAt: !11885)
!11909 = !{i32 -2145478465}
!11910 = !DILocation(line: 359, column: 2, scope: !11886)
!11911 = !DILocation(line: 359, column: 2, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11886, file: !11089, line: 359, column: 2)
!11913 = !DILocation(line: 360, column: 1, scope: !11873)
!11914 = distinct !DISubprogram(name: "netif_carrier_ok", scope: !42, file: !42, line: 3976, type: !11915, scopeLine: 3977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11915 = !DISubroutineType(types: !11916)
!11916 = !{!546, !2893}
!11917 = !DILocalVariable(name: "dev", arg: 1, scope: !11914, file: !42, line: 3976, type: !2893)
!11918 = !DILocation(line: 3976, column: 62, scope: !11914)
!11919 = !DILocation(line: 3978, column: 44, scope: !11914)
!11920 = !DILocation(line: 3978, column: 49, scope: !11914)
!11921 = !DILocation(line: 3978, column: 10, scope: !11914)
!11922 = !DILocation(line: 3978, column: 9, scope: !11914)
!11923 = !DILocation(line: 3978, column: 2, scope: !11914)
!11924 = distinct !DISubprogram(name: "xennet_alloc_rx_buffers", scope: !3, file: !3, line: 297, type: !11925, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!11925 = !DISubroutineType(types: !11926)
!11926 = !{null, !10150}
!11927 = !DILocalVariable(name: "queue", arg: 1, scope: !11924, file: !3, line: 297, type: !10150)
!11928 = !DILocation(line: 297, column: 60, scope: !11924)
!11929 = !DILocalVariable(name: "req_prod", scope: !11924, file: !3, line: 299, type: !10103)
!11930 = !DILocation(line: 299, column: 11, scope: !11924)
!11931 = !DILocation(line: 299, column: 22, scope: !11924)
!11932 = !DILocation(line: 299, column: 29, scope: !11924)
!11933 = !DILocation(line: 299, column: 32, scope: !11924)
!11934 = !DILocalVariable(name: "notify", scope: !11924, file: !3, line: 300, type: !43)
!11935 = !DILocation(line: 300, column: 6, scope: !11924)
!11936 = !DILocalVariable(name: "err", scope: !11924, file: !3, line: 301, type: !43)
!11937 = !DILocation(line: 301, column: 6, scope: !11924)
!11938 = !DILocation(line: 303, column: 6, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11924, file: !3, line: 303, column: 6)
!11940 = !DILocation(line: 303, column: 6, scope: !11924)
!11941 = !DILocation(line: 304, column: 3, scope: !11939)
!11942 = !DILocation(line: 306, column: 18, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11924, file: !3, line: 306, column: 2)
!11944 = !DILocation(line: 306, column: 25, scope: !11943)
!11945 = !DILocation(line: 306, column: 28, scope: !11943)
!11946 = !DILocation(line: 306, column: 16, scope: !11943)
!11947 = !DILocation(line: 306, column: 7, scope: !11943)
!11948 = !DILocation(line: 307, column: 7, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11943, file: !3, line: 306, column: 2)
!11950 = !DILocation(line: 307, column: 18, scope: !11949)
!11951 = !DILocation(line: 307, column: 25, scope: !11949)
!11952 = !DILocation(line: 307, column: 28, scope: !11949)
!11953 = !DILocation(line: 307, column: 16, scope: !11949)
!11954 = !DILocation(line: 307, column: 37, scope: !11949)
!11955 = !DILocation(line: 306, column: 2, scope: !11943)
!11956 = !DILocalVariable(name: "skb", scope: !11957, file: !3, line: 309, type: !426)
!11957 = distinct !DILexicalBlock(scope: !11949, file: !3, line: 308, column: 19)
!11958 = !DILocation(line: 309, column: 19, scope: !11957)
!11959 = !DILocalVariable(name: "id", scope: !11957, file: !3, line: 310, type: !483)
!11960 = !DILocation(line: 310, column: 18, scope: !11957)
!11961 = !DILocalVariable(name: "ref", scope: !11957, file: !3, line: 311, type: !10259)
!11962 = !DILocation(line: 311, column: 15, scope: !11957)
!11963 = !DILocalVariable(name: "page", scope: !11957, file: !3, line: 312, type: !630)
!11964 = !DILocation(line: 312, column: 16, scope: !11957)
!11965 = !DILocalVariable(name: "req", scope: !11957, file: !3, line: 313, type: !11966)
!11966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10307, size: 64)
!11967 = !DILocation(line: 313, column: 32, scope: !11957)
!11968 = !DILocation(line: 315, column: 36, scope: !11957)
!11969 = !DILocation(line: 315, column: 9, scope: !11957)
!11970 = !DILocation(line: 315, column: 7, scope: !11957)
!11971 = !DILocation(line: 316, column: 8, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 316, column: 7)
!11973 = !DILocation(line: 316, column: 7, scope: !11957)
!11974 = !DILocation(line: 317, column: 8, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11972, file: !3, line: 316, column: 13)
!11976 = !DILocation(line: 318, column: 4, scope: !11975)
!11977 = !DILocation(line: 321, column: 21, scope: !11957)
!11978 = !DILocation(line: 321, column: 8, scope: !11957)
!11979 = !DILocation(line: 321, column: 6, scope: !11957)
!11980 = !DILocation(line: 323, column: 3, scope: !11957)
!11981 = !DILocation(line: 323, column: 3, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11983, file: !3, line: 323, column: 3)
!11983 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 323, column: 3)
!11984 = !DILocation(line: 323, column: 3, scope: !11983)
!11985 = !DILocation(line: 323, column: 3, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11982, file: !3, line: 323, column: 3)
!11987 = !DILocation(line: 323, column: 3, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11986, file: !3, line: 323, column: 3)
!11989 = !DILocation(line: 323, column: 3, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11986, file: !3, line: 323, column: 3)
!11991 = !{i32 -2136846336, i32 -2136846307, i32 -2136846261, i32 -2136846203, i32 -2136846149, i32 -2136846095, i32 -2136846040, i32 -2136846009}
!11992 = !DILocation(line: 323, column: 3, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 323, column: 3)
!11994 = distinct !DILexicalBlock(scope: !11986, file: !3, line: 323, column: 3)
!11995 = !{i32 -2136845560, i32 -2136845553, i32 -2136845499, i32 -2136845468, i32 -2136845438}
!11996 = !DILocation(line: 323, column: 3, scope: !11994)
!11997 = !DILocation(line: 324, column: 24, scope: !11957)
!11998 = !DILocation(line: 324, column: 3, scope: !11957)
!11999 = !DILocation(line: 324, column: 10, scope: !11957)
!12000 = !DILocation(line: 324, column: 18, scope: !11957)
!12001 = !DILocation(line: 324, column: 22, scope: !11957)
!12002 = !DILocation(line: 326, column: 39, scope: !11957)
!12003 = !DILocation(line: 326, column: 46, scope: !11957)
!12004 = !DILocation(line: 326, column: 9, scope: !11957)
!12005 = !DILocation(line: 326, column: 7, scope: !11957)
!12006 = !DILocalVariable(name: "__ret_warn_on", scope: !12007, file: !3, line: 327, type: !43)
!12007 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 327, column: 3)
!12008 = !DILocation(line: 327, column: 3, scope: !12007)
!12009 = !DILocation(line: 327, column: 3, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !12007, file: !3, line: 327, column: 3)
!12011 = !DILocation(line: 327, column: 3, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12010, file: !3, line: 327, column: 3)
!12013 = !DILocation(line: 327, column: 3, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 327, column: 3)
!12015 = !DILocation(line: 327, column: 3, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 327, column: 3)
!12017 = !{i32 -2136844595, i32 -2136844566, i32 -2136844520, i32 -2136844462, i32 -2136844408, i32 -2136844354, i32 -2136844299, i32 -2136844268}
!12018 = !DILocation(line: 327, column: 3, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 327, column: 3)
!12020 = !{i32 -2136843849, i32 -2136843842, i32 -2136843790, i32 -2136843759, i32 -2136843729}
!12021 = !DILocation(line: 327, column: 3, scope: !12022)
!12022 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 327, column: 3)
!12023 = !DILocation(line: 328, column: 29, scope: !11957)
!12024 = !DILocation(line: 328, column: 3, scope: !11957)
!12025 = !DILocation(line: 328, column: 10, scope: !11957)
!12026 = !DILocation(line: 328, column: 23, scope: !11957)
!12027 = !DILocation(line: 328, column: 27, scope: !11957)
!12028 = !DILocation(line: 330, column: 25, scope: !11957)
!12029 = !DILocation(line: 330, column: 42, scope: !11957)
!12030 = !DILocation(line: 330, column: 10, scope: !11957)
!12031 = !DILocation(line: 330, column: 8, scope: !11957)
!12032 = !DILocation(line: 332, column: 9, scope: !11957)
!12033 = !DILocation(line: 332, column: 7, scope: !11957)
!12034 = !DILocation(line: 333, column: 44, scope: !11957)
!12035 = !DILocation(line: 334, column: 9, scope: !11957)
!12036 = !DILocation(line: 334, column: 16, scope: !11957)
!12037 = !DILocation(line: 334, column: 22, scope: !11957)
!12038 = !DILocation(line: 334, column: 29, scope: !11957)
!12039 = !DILocation(line: 335, column: 9, scope: !11957)
!12040 = !DILocation(line: 333, column: 3, scope: !11957)
!12041 = !DILocation(line: 337, column: 13, scope: !11957)
!12042 = !DILocation(line: 337, column: 3, scope: !11957)
!12043 = !DILocation(line: 337, column: 8, scope: !11957)
!12044 = !DILocation(line: 337, column: 11, scope: !11957)
!12045 = !DILocation(line: 338, column: 15, scope: !11957)
!12046 = !DILocation(line: 338, column: 3, scope: !11957)
!12047 = !DILocation(line: 338, column: 8, scope: !11957)
!12048 = !DILocation(line: 338, column: 13, scope: !11957)
!12049 = !DILocation(line: 339, column: 2, scope: !11957)
!12050 = !DILocation(line: 308, column: 15, scope: !11949)
!12051 = !DILocation(line: 306, column: 2, scope: !11949)
!12052 = distinct !{!12052, !11955, !12053}
!12053 = !DILocation(line: 339, column: 2, scope: !11943)
!12054 = !DILocation(line: 341, column: 27, scope: !11924)
!12055 = !DILocation(line: 341, column: 2, scope: !11924)
!12056 = !DILocation(line: 341, column: 9, scope: !11924)
!12057 = !DILocation(line: 341, column: 12, scope: !11924)
!12058 = !DILocation(line: 341, column: 25, scope: !11924)
!12059 = !DILocation(line: 348, column: 6, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !11924, file: !3, line: 348, column: 6)
!12061 = !DILocation(line: 348, column: 17, scope: !12060)
!12062 = !DILocation(line: 348, column: 24, scope: !12060)
!12063 = !DILocation(line: 348, column: 27, scope: !12060)
!12064 = !DILocation(line: 348, column: 15, scope: !12060)
!12065 = !DILocation(line: 348, column: 36, scope: !12060)
!12066 = !DILocation(line: 348, column: 55, scope: !12060)
!12067 = !DILocation(line: 349, column: 6, scope: !12060)
!12068 = !DILocation(line: 348, column: 6, scope: !11924)
!12069 = !DILocation(line: 350, column: 14, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 349, column: 21)
!12071 = !DILocation(line: 350, column: 21, scope: !12070)
!12072 = !DILocation(line: 350, column: 38, scope: !12070)
!12073 = !DILocation(line: 350, column: 46, scope: !12070)
!12074 = !DILocation(line: 350, column: 3, scope: !12070)
!12075 = !DILocation(line: 351, column: 3, scope: !12070)
!12076 = !DILocation(line: 354, column: 2, scope: !11924)
!12077 = !DILocalVariable(name: "__old", scope: !12078, file: !3, line: 354, type: !10103)
!12078 = distinct !DILexicalBlock(scope: !11924, file: !3, line: 354, column: 2)
!12079 = !DILocation(line: 354, column: 2, scope: !12078)
!12080 = !DILocalVariable(name: "__new", scope: !12078, file: !3, line: 354, type: !10103)
!12081 = !{i32 -2136842885}
!12082 = !{i32 -2136842844}
!12083 = !DILocation(line: 355, column: 6, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !11924, file: !3, line: 355, column: 6)
!12085 = !DILocation(line: 355, column: 6, scope: !11924)
!12086 = !DILocation(line: 356, column: 25, scope: !12084)
!12087 = !DILocation(line: 356, column: 32, scope: !12084)
!12088 = !DILocation(line: 356, column: 3, scope: !12084)
!12089 = !DILocation(line: 357, column: 1, scope: !11924)
!12090 = distinct !DISubprogram(name: "napi_schedule", scope: !42, file: !42, line: 449, type: !11843, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12091 = !DILocalVariable(name: "n", arg: 1, scope: !12090, file: !42, line: 449, type: !10210)
!12092 = !DILocation(line: 449, column: 54, scope: !12090)
!12093 = !DILocation(line: 451, column: 25, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12090, file: !42, line: 451, column: 6)
!12095 = !DILocation(line: 451, column: 6, scope: !12094)
!12096 = !DILocation(line: 451, column: 6, scope: !12090)
!12097 = !DILocation(line: 452, column: 19, scope: !12094)
!12098 = !DILocation(line: 452, column: 3, scope: !12094)
!12099 = !DILocation(line: 453, column: 1, scope: !12090)
!12100 = distinct !DISubprogram(name: "spin_unlock_bh", scope: !11089, file: !11089, line: 397, type: !11874, scopeLine: 398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12101 = !DILocalVariable(name: "lock", arg: 1, scope: !12100, file: !11089, line: 397, type: !2450)
!12102 = !DILocation(line: 397, column: 56, scope: !12100)
!12103 = !DILocation(line: 399, column: 2, scope: !12100)
!12104 = !DILocation(line: 399, column: 2, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12106, file: !11089, line: 399, column: 2)
!12106 = distinct !DILexicalBlock(scope: !12100, file: !11089, line: 399, column: 2)
!12107 = !DILabel(scope: !12105, name: "__here", file: !11089, line: 399)
!12108 = !DILocation(line: 399, column: 2, scope: !12106)
!12109 = !DILocation(line: 399, column: 2, scope: !12110)
!12110 = distinct !DILexicalBlock(scope: !12106, file: !11089, line: 399, column: 2)
!12111 = !DILocation(line: 400, column: 1, scope: !12100)
!12112 = distinct !DISubprogram(name: "netif_tx_start_all_queues", scope: !42, file: !42, line: 3290, type: !417, scopeLine: 3291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12113 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !12114, file: !42, line: 3274, type: !9308)
!12114 = distinct !DISubprogram(name: "netif_tx_start_queue", scope: !42, file: !42, line: 3274, type: !11098, scopeLine: 3275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12115 = !DILocation(line: 3274, column: 71, scope: !12114, inlinedAt: !12116)
!12116 = distinct !DILocation(line: 3296, column: 3, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12118, file: !42, line: 3294, column: 43)
!12118 = distinct !DILexicalBlock(scope: !12119, file: !42, line: 3294, column: 2)
!12119 = distinct !DILexicalBlock(scope: !12112, file: !42, line: 3294, column: 2)
!12120 = !DILocalVariable(name: "dev", arg: 1, scope: !12112, file: !42, line: 3290, type: !301)
!12121 = !DILocation(line: 3290, column: 65, scope: !12112)
!12122 = !DILocalVariable(name: "i", scope: !12112, file: !42, line: 3292, type: !7)
!12123 = !DILocation(line: 3292, column: 15, scope: !12112)
!12124 = !DILocation(line: 3294, column: 9, scope: !12119)
!12125 = !DILocation(line: 3294, column: 7, scope: !12119)
!12126 = !DILocation(line: 3294, column: 14, scope: !12118)
!12127 = !DILocation(line: 3294, column: 18, scope: !12118)
!12128 = !DILocation(line: 3294, column: 23, scope: !12118)
!12129 = !DILocation(line: 3294, column: 16, scope: !12118)
!12130 = !DILocation(line: 3294, column: 2, scope: !12119)
!12131 = !DILocalVariable(name: "txq", scope: !12117, file: !42, line: 3295, type: !9308)
!12132 = !DILocation(line: 3295, column: 24, scope: !12117)
!12133 = !DILocation(line: 3295, column: 50, scope: !12117)
!12134 = !DILocation(line: 3295, column: 55, scope: !12117)
!12135 = !DILocation(line: 3295, column: 30, scope: !12117)
!12136 = !DILocation(line: 3296, column: 24, scope: !12117)
!12137 = !DILocation(line: 3276, column: 37, scope: !12114, inlinedAt: !12116)
!12138 = !DILocation(line: 3276, column: 48, scope: !12114, inlinedAt: !12116)
!12139 = !DILocation(line: 3276, column: 2, scope: !12114, inlinedAt: !12116)
!12140 = !DILocation(line: 3297, column: 2, scope: !12117)
!12141 = !DILocation(line: 3294, column: 39, scope: !12118)
!12142 = !DILocation(line: 3294, column: 2, scope: !12118)
!12143 = distinct !{!12143, !12130, !12144}
!12144 = !DILocation(line: 3297, column: 2, scope: !12119)
!12145 = !DILocation(line: 3298, column: 1, scope: !12112)
!12146 = distinct !DISubprogram(name: "test_bit", scope: !12147, file: !12147, line: 132, type: !12148, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12147 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!12148 = !DISubroutineType(types: !12149)
!12149 = !{!546, !519, !10379}
!12150 = !DILocalVariable(name: "nr", arg: 1, scope: !12151, file: !12152, line: 210, type: !519)
!12151 = distinct !DISubprogram(name: "variable_test_bit", scope: !12152, file: !12152, line: 210, type: !12148, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12152 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!12153 = !DILocation(line: 210, column: 52, scope: !12151, inlinedAt: !12154)
!12154 = distinct !DILocation(line: 135, column: 9, scope: !12146)
!12155 = !DILocalVariable(name: "addr", arg: 2, scope: !12151, file: !12152, line: 210, type: !10379)
!12156 = !DILocation(line: 210, column: 86, scope: !12151, inlinedAt: !12154)
!12157 = !DILocalVariable(name: "oldbit", scope: !12151, file: !12152, line: 212, type: !546)
!12158 = !DILocation(line: 212, column: 7, scope: !12151, inlinedAt: !12154)
!12159 = !DILocalVariable(name: "nr", arg: 1, scope: !12160, file: !12152, line: 204, type: !519)
!12160 = distinct !DISubprogram(name: "constant_test_bit", scope: !12152, file: !12152, line: 204, type: !12148, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12161 = !DILocation(line: 204, column: 52, scope: !12160, inlinedAt: !12162)
!12162 = distinct !DILocation(line: 135, column: 9, scope: !12146)
!12163 = !DILocalVariable(name: "addr", arg: 2, scope: !12160, file: !12152, line: 204, type: !10379)
!12164 = !DILocation(line: 204, column: 86, scope: !12160, inlinedAt: !12162)
!12165 = !DILocalVariable(name: "v", arg: 1, scope: !12166, file: !12167, line: 69, type: !12170)
!12166 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !12167, file: !12167, line: 69, type: !12168, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12167 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!12168 = !DISubroutineType(types: !12169)
!12169 = !{null, !12170, !600}
!12170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12171, size: 64)
!12171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12172)
!12172 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!12173 = !DILocation(line: 69, column: 73, scope: !12166, inlinedAt: !12174)
!12174 = distinct !DILocation(line: 134, column: 2, scope: !12146)
!12175 = !DILocalVariable(name: "size", arg: 2, scope: !12166, file: !12167, line: 69, type: !600)
!12176 = !DILocation(line: 69, column: 83, scope: !12166, inlinedAt: !12174)
!12177 = !DILocalVariable(name: "nr", arg: 1, scope: !12146, file: !12147, line: 132, type: !519)
!12178 = !DILocation(line: 132, column: 34, scope: !12146)
!12179 = !DILocalVariable(name: "addr", arg: 2, scope: !12146, file: !12147, line: 132, type: !10379)
!12180 = !DILocation(line: 132, column: 68, scope: !12146)
!12181 = !DILocation(line: 134, column: 25, scope: !12146)
!12182 = !DILocation(line: 134, column: 32, scope: !12146)
!12183 = !DILocation(line: 134, column: 30, scope: !12146)
!12184 = !DILocation(line: 71, column: 19, scope: !12166, inlinedAt: !12174)
!12185 = !DILocation(line: 71, column: 22, scope: !12166, inlinedAt: !12174)
!12186 = !DILocation(line: 71, column: 2, scope: !12166, inlinedAt: !12174)
!12187 = !DILocation(line: 72, column: 2, scope: !12166, inlinedAt: !12174)
!12188 = !DILocation(line: 135, column: 9, scope: !12146)
!12189 = !DILocation(line: 206, column: 19, scope: !12160, inlinedAt: !12162)
!12190 = !DILocation(line: 206, column: 22, scope: !12160, inlinedAt: !12162)
!12191 = !DILocation(line: 206, column: 15, scope: !12160, inlinedAt: !12162)
!12192 = !DILocation(line: 207, column: 4, scope: !12160, inlinedAt: !12162)
!12193 = !DILocation(line: 207, column: 9, scope: !12160, inlinedAt: !12162)
!12194 = !DILocation(line: 207, column: 12, scope: !12160, inlinedAt: !12162)
!12195 = !DILocation(line: 206, column: 44, scope: !12160, inlinedAt: !12162)
!12196 = !DILocation(line: 207, column: 37, scope: !12160, inlinedAt: !12162)
!12197 = !DILocation(line: 217, column: 33, scope: !12151, inlinedAt: !12154)
!12198 = !DILocation(line: 217, column: 46, scope: !12151, inlinedAt: !12154)
!12199 = !DILocation(line: 214, column: 2, scope: !12151, inlinedAt: !12154)
!12200 = !{i32 -2147082153, i32 -2147082093}
!12201 = !DILocation(line: 219, column: 9, scope: !12151, inlinedAt: !12154)
!12202 = !DILocation(line: 135, column: 2, scope: !12146)
!12203 = distinct !DISubprogram(name: "clear_bit", scope: !12204, file: !12204, line: 39, type: !12205, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12204 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!12205 = !DISubroutineType(types: !12206)
!12206 = !{null, !519, !12207}
!12207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10381, size: 64)
!12208 = !DILocalVariable(name: "nr", arg: 1, scope: !12209, file: !12152, line: 72, type: !519)
!12209 = distinct !DISubprogram(name: "arch_clear_bit", scope: !12152, file: !12152, line: 72, type: !12205, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12210 = !DILocation(line: 72, column: 21, scope: !12209, inlinedAt: !12211)
!12211 = distinct !DILocation(line: 42, column: 2, scope: !12203)
!12212 = !DILocalVariable(name: "addr", arg: 2, scope: !12209, file: !12152, line: 72, type: !12207)
!12213 = !DILocation(line: 72, column: 49, scope: !12209, inlinedAt: !12211)
!12214 = !DILocalVariable(name: "v", arg: 1, scope: !12215, file: !12167, line: 84, type: !12170)
!12215 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !12167, file: !12167, line: 84, type: !12168, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12216 = !DILocation(line: 84, column: 74, scope: !12215, inlinedAt: !12217)
!12217 = distinct !DILocation(line: 41, column: 2, scope: !12203)
!12218 = !DILocalVariable(name: "size", arg: 2, scope: !12215, file: !12167, line: 84, type: !600)
!12219 = !DILocation(line: 84, column: 84, scope: !12215, inlinedAt: !12217)
!12220 = !DILocalVariable(name: "nr", arg: 1, scope: !12203, file: !12204, line: 39, type: !519)
!12221 = !DILocation(line: 39, column: 35, scope: !12203)
!12222 = !DILocalVariable(name: "addr", arg: 2, scope: !12203, file: !12204, line: 39, type: !12207)
!12223 = !DILocation(line: 39, column: 63, scope: !12203)
!12224 = !DILocation(line: 41, column: 26, scope: !12203)
!12225 = !DILocation(line: 41, column: 33, scope: !12203)
!12226 = !DILocation(line: 41, column: 31, scope: !12203)
!12227 = !DILocation(line: 86, column: 20, scope: !12215, inlinedAt: !12217)
!12228 = !DILocation(line: 86, column: 23, scope: !12215, inlinedAt: !12217)
!12229 = !DILocation(line: 86, column: 2, scope: !12215, inlinedAt: !12217)
!12230 = !DILocation(line: 87, column: 2, scope: !12215, inlinedAt: !12217)
!12231 = !DILocation(line: 42, column: 17, scope: !12203)
!12232 = !DILocation(line: 42, column: 21, scope: !12203)
!12233 = !DILocation(line: 74, column: 27, scope: !12234, inlinedAt: !12211)
!12234 = distinct !DILexicalBlock(scope: !12209, file: !12152, line: 74, column: 6)
!12235 = !DILocation(line: 74, column: 6, scope: !12234, inlinedAt: !12211)
!12236 = !DILocation(line: 74, column: 6, scope: !12209, inlinedAt: !12211)
!12237 = !DILocation(line: 76, column: 6, scope: !12238, inlinedAt: !12211)
!12238 = distinct !DILexicalBlock(scope: !12234, file: !12152, line: 74, column: 32)
!12239 = !DILocation(line: 77, column: 13, scope: !12238, inlinedAt: !12211)
!12240 = !DILocation(line: 77, column: 12, scope: !12238, inlinedAt: !12211)
!12241 = !DILocation(line: 75, column: 3, scope: !12238, inlinedAt: !12211)
!12242 = !{i32 -2147090447}
!12243 = !DILocation(line: 78, column: 2, scope: !12238, inlinedAt: !12211)
!12244 = !DILocation(line: 80, column: 8, scope: !12245, inlinedAt: !12211)
!12245 = distinct !DILexicalBlock(scope: !12234, file: !12152, line: 78, column: 9)
!12246 = !DILocation(line: 80, column: 32, scope: !12245, inlinedAt: !12211)
!12247 = !DILocation(line: 79, column: 3, scope: !12245, inlinedAt: !12211)
!12248 = !{i32 -2147090315}
!12249 = !DILocation(line: 43, column: 1, scope: !12203)
!12250 = distinct !DISubprogram(name: "kasan_check_read", scope: !12251, file: !12251, line: 34, type: !12252, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12251 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!12252 = !DISubroutineType(types: !12253)
!12253 = !{!546, !12170, !7}
!12254 = !DILocalVariable(name: "p", arg: 1, scope: !12250, file: !12251, line: 34, type: !12170)
!12255 = !DILocation(line: 34, column: 58, scope: !12250)
!12256 = !DILocalVariable(name: "size", arg: 2, scope: !12250, file: !12251, line: 34, type: !7)
!12257 = !DILocation(line: 34, column: 74, scope: !12250)
!12258 = !DILocation(line: 36, column: 2, scope: !12250)
!12259 = distinct !DISubprogram(name: "kcsan_check_access", scope: !12260, file: !12260, line: 178, type: !12261, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12260 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!12261 = !DISubroutineType(types: !12262)
!12262 = !{null, !12170, !600, !43}
!12263 = !DILocalVariable(name: "ptr", arg: 1, scope: !12259, file: !12260, line: 178, type: !12170)
!12264 = !DILocation(line: 178, column: 60, scope: !12259)
!12265 = !DILocalVariable(name: "size", arg: 2, scope: !12259, file: !12260, line: 178, type: !600)
!12266 = !DILocation(line: 178, column: 72, scope: !12259)
!12267 = !DILocalVariable(name: "type", arg: 3, scope: !12259, file: !12260, line: 179, type: !43)
!12268 = !DILocation(line: 179, column: 15, scope: !12259)
!12269 = !DILocation(line: 179, column: 23, scope: !12259)
!12270 = distinct !DISubprogram(name: "kasan_check_write", scope: !12251, file: !12251, line: 38, type: !12252, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12271 = !DILocalVariable(name: "p", arg: 1, scope: !12270, file: !12251, line: 38, type: !12170)
!12272 = !DILocation(line: 38, column: 59, scope: !12270)
!12273 = !DILocalVariable(name: "size", arg: 2, scope: !12270, file: !12251, line: 38, type: !7)
!12274 = !DILocation(line: 38, column: 75, scope: !12270)
!12275 = !DILocation(line: 40, column: 2, scope: !12270)
!12276 = distinct !DISubprogram(name: "xennet_alloc_one_rx_buffer", scope: !3, file: !3, line: 271, type: !12277, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12277 = !DISubroutineType(types: !12278)
!12278 = !{!426, !10150}
!12279 = !DILocalVariable(name: "queue", arg: 1, scope: !12276, file: !3, line: 271, type: !10150)
!12280 = !DILocation(line: 271, column: 74, scope: !12276)
!12281 = !DILocalVariable(name: "skb", scope: !12276, file: !3, line: 273, type: !426)
!12282 = !DILocation(line: 273, column: 18, scope: !12276)
!12283 = !DILocalVariable(name: "page", scope: !12276, file: !3, line: 274, type: !630)
!12284 = !DILocation(line: 274, column: 15, scope: !12276)
!12285 = !DILocation(line: 276, column: 27, scope: !12276)
!12286 = !DILocation(line: 276, column: 34, scope: !12276)
!12287 = !DILocation(line: 276, column: 40, scope: !12276)
!12288 = !DILocation(line: 276, column: 8, scope: !12276)
!12289 = !DILocation(line: 276, column: 6, scope: !12276)
!12290 = !DILocation(line: 279, column: 6, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12276, file: !3, line: 279, column: 6)
!12292 = !DILocation(line: 279, column: 6, scope: !12276)
!12293 = !DILocation(line: 280, column: 3, scope: !12291)
!12294 = !DILocation(line: 282, column: 35, scope: !12276)
!12295 = !DILocation(line: 282, column: 42, scope: !12276)
!12296 = !DILocation(line: 282, column: 9, scope: !12276)
!12297 = !DILocation(line: 282, column: 7, scope: !12276)
!12298 = !DILocation(line: 283, column: 6, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !12276, file: !3, line: 283, column: 6)
!12300 = !DILocation(line: 283, column: 6, scope: !12276)
!12301 = !DILocation(line: 284, column: 13, scope: !12302)
!12302 = distinct !DILexicalBlock(scope: !12299, file: !3, line: 283, column: 23)
!12303 = !DILocation(line: 284, column: 3, scope: !12302)
!12304 = !DILocation(line: 285, column: 3, scope: !12302)
!12305 = !DILocation(line: 287, column: 18, scope: !12276)
!12306 = !DILocation(line: 287, column: 26, scope: !12276)
!12307 = !DILocation(line: 287, column: 2, scope: !12276)
!12308 = !DILocation(line: 290, column: 14, scope: !12276)
!12309 = !DILocation(line: 290, column: 2, scope: !12276)
!12310 = !DILocation(line: 291, column: 13, scope: !12276)
!12311 = !DILocation(line: 291, column: 20, scope: !12276)
!12312 = !DILocation(line: 291, column: 26, scope: !12276)
!12313 = !DILocation(line: 291, column: 2, scope: !12276)
!12314 = !DILocation(line: 291, column: 7, scope: !12276)
!12315 = !DILocation(line: 291, column: 11, scope: !12276)
!12316 = !DILocation(line: 293, column: 9, scope: !12276)
!12317 = !DILocation(line: 293, column: 2, scope: !12276)
!12318 = !DILocation(line: 294, column: 1, scope: !12276)
!12319 = distinct !DISubprogram(name: "xennet_rxidx", scope: !3, file: !3, line: 214, type: !12320, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12320 = !DISubroutineType(types: !12321)
!12321 = !{!43, !10103}
!12322 = !DILocalVariable(name: "idx", arg: 1, scope: !12319, file: !3, line: 214, type: !10103)
!12323 = !DILocation(line: 214, column: 34, scope: !12319)
!12324 = !DILocation(line: 216, column: 9, scope: !12319)
!12325 = !DILocation(line: 216, column: 13, scope: !12319)
!12326 = !DILocation(line: 216, column: 2, scope: !12319)
!12327 = distinct !DISubprogram(name: "skb_frag_page", scope: !428, file: !428, line: 2983, type: !12328, scopeLine: 2984, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12328 = !DISubroutineType(types: !12329)
!12329 = !{!630, !12330}
!12330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12331, size: 64)
!12331 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10100)
!12332 = !DILocalVariable(name: "frag", arg: 1, scope: !12327, file: !428, line: 2983, type: !12330)
!12333 = !DILocation(line: 2983, column: 60, scope: !12327)
!12334 = !DILocation(line: 2985, column: 9, scope: !12327)
!12335 = !DILocation(line: 2985, column: 15, scope: !12327)
!12336 = !DILocation(line: 2985, column: 2, scope: !12327)
!12337 = distinct !DISubprogram(name: "skb_end_pointer", scope: !428, file: !428, line: 1404, type: !12338, scopeLine: 1405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12338 = !DISubroutineType(types: !12339)
!12339 = !{!8012, !9211}
!12340 = !DILocalVariable(name: "skb", arg: 1, scope: !12337, file: !428, line: 1404, type: !9211)
!12341 = !DILocation(line: 1404, column: 68, scope: !12337)
!12342 = !DILocation(line: 1406, column: 9, scope: !12337)
!12343 = !DILocation(line: 1406, column: 14, scope: !12337)
!12344 = !DILocation(line: 1406, column: 21, scope: !12337)
!12345 = !DILocation(line: 1406, column: 26, scope: !12337)
!12346 = !DILocation(line: 1406, column: 19, scope: !12337)
!12347 = !DILocation(line: 1406, column: 2, scope: !12337)
!12348 = distinct !DISubprogram(name: "gnttab_page_grant_foreign_access_ref_one", scope: !12349, file: !12349, line: 135, type: !12350, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12349 = !DIFile(filename: "./include/xen/grant_table.h", directory: "/home/lizy2001/genbc/linux")
!12350 = !DISubroutineType(types: !12351)
!12351 = !{null, !10259, !12352, !630, !43}
!12352 = !DIDerivedType(tag: DW_TAG_typedef, name: "domid_t", file: !12353, line: 437, baseType: !10119)
!12353 = !DIFile(filename: "./include/xen/interface/xen.h", directory: "/home/lizy2001/genbc/linux")
!12354 = !DILocalVariable(name: "ref", arg: 1, scope: !12348, file: !12349, line: 136, type: !10259)
!12355 = !DILocation(line: 136, column: 14, scope: !12348)
!12356 = !DILocalVariable(name: "domid", arg: 2, scope: !12348, file: !12349, line: 136, type: !12352)
!12357 = !DILocation(line: 136, column: 27, scope: !12348)
!12358 = !DILocalVariable(name: "page", arg: 3, scope: !12348, file: !12349, line: 137, type: !630)
!12359 = !DILocation(line: 137, column: 15, scope: !12348)
!12360 = !DILocalVariable(name: "readonly", arg: 4, scope: !12348, file: !12349, line: 137, type: !43)
!12361 = !DILocation(line: 137, column: 25, scope: !12348)
!12362 = !DILocation(line: 139, column: 34, scope: !12348)
!12363 = !DILocation(line: 139, column: 39, scope: !12348)
!12364 = !DILocation(line: 139, column: 62, scope: !12348)
!12365 = !DILocation(line: 139, column: 46, scope: !12348)
!12366 = !DILocation(line: 140, column: 6, scope: !12348)
!12367 = !DILocation(line: 139, column: 2, scope: !12348)
!12368 = !DILocation(line: 141, column: 1, scope: !12348)
!12369 = distinct !DISubprogram(name: "page_pool_dev_alloc_pages", scope: !10328, file: !10328, line: 133, type: !12370, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12370 = !DISubroutineType(types: !12371)
!12371 = !{!630, !10326}
!12372 = !DILocalVariable(name: "pool", arg: 1, scope: !12369, file: !10328, line: 133, type: !10326)
!12373 = !DILocation(line: 133, column: 72, scope: !12369)
!12374 = !DILocalVariable(name: "gfp", scope: !12369, file: !10328, line: 135, type: !1996)
!12375 = !DILocation(line: 135, column: 8, scope: !12369)
!12376 = !DILocation(line: 137, column: 31, scope: !12369)
!12377 = !DILocation(line: 137, column: 37, scope: !12369)
!12378 = !DILocation(line: 137, column: 9, scope: !12369)
!12379 = !DILocation(line: 137, column: 2, scope: !12369)
!12380 = distinct !DISubprogram(name: "skb_reserve", scope: !428, file: !428, line: 2378, type: !12381, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12381 = !DISubroutineType(types: !12382)
!12382 = !{null, !426, !43}
!12383 = !DILocalVariable(name: "skb", arg: 1, scope: !12380, file: !428, line: 2378, type: !426)
!12384 = !DILocation(line: 2378, column: 48, scope: !12380)
!12385 = !DILocalVariable(name: "len", arg: 2, scope: !12380, file: !428, line: 2378, type: !43)
!12386 = !DILocation(line: 2378, column: 57, scope: !12380)
!12387 = !DILocation(line: 2380, column: 15, scope: !12380)
!12388 = !DILocation(line: 2380, column: 2, scope: !12380)
!12389 = !DILocation(line: 2380, column: 7, scope: !12380)
!12390 = !DILocation(line: 2380, column: 12, scope: !12380)
!12391 = !DILocation(line: 2381, column: 15, scope: !12380)
!12392 = !DILocation(line: 2381, column: 2, scope: !12380)
!12393 = !DILocation(line: 2381, column: 7, scope: !12380)
!12394 = !DILocation(line: 2381, column: 12, scope: !12380)
!12395 = !DILocation(line: 2382, column: 1, scope: !12380)
!12396 = distinct !DISubprogram(name: "xen_page_to_gfn", scope: !12397, file: !12397, line: 31, type: !12398, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12397 = !DIFile(filename: "./include/xen/page.h", directory: "/home/lizy2001/genbc/linux")
!12398 = !DISubroutineType(types: !12399)
!12399 = !{!323, !630}
!12400 = !DILocalVariable(name: "page", arg: 1, scope: !12396, file: !12397, line: 31, type: !630)
!12401 = !DILocation(line: 31, column: 58, scope: !12396)
!12402 = !DILocation(line: 33, column: 20, scope: !12396)
!12403 = !DILocation(line: 33, column: 9, scope: !12396)
!12404 = !DILocation(line: 33, column: 2, scope: !12396)
!12405 = distinct !DISubprogram(name: "pfn_to_gfn", scope: !12406, file: !12406, line: 251, type: !12407, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12406 = !DIFile(filename: "./arch/x86/include/asm/xen/page.h", directory: "/home/lizy2001/genbc/linux")
!12407 = !DISubroutineType(types: !12408)
!12408 = !{!323, !323}
!12409 = !DILocalVariable(name: "pfn", arg: 1, scope: !12405, file: !12406, line: 251, type: !323)
!12410 = !DILocation(line: 251, column: 54, scope: !12405)
!12411 = !DILocation(line: 253, column: 6, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12405, file: !12406, line: 253, column: 6)
!12413 = !DILocation(line: 253, column: 6, scope: !12405)
!12414 = !DILocation(line: 254, column: 10, scope: !12412)
!12415 = !DILocation(line: 254, column: 3, scope: !12412)
!12416 = !DILocation(line: 256, column: 21, scope: !12412)
!12417 = !DILocation(line: 256, column: 10, scope: !12412)
!12418 = !DILocation(line: 256, column: 3, scope: !12412)
!12419 = !DILocation(line: 257, column: 1, scope: !12405)
!12420 = distinct !DISubprogram(name: "xen_feature", scope: !12421, file: !12421, line: 19, type: !6585, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12421 = !DIFile(filename: "./include/xen/features.h", directory: "/home/lizy2001/genbc/linux")
!12422 = !DILocalVariable(name: "flag", arg: 1, scope: !12420, file: !12421, line: 19, type: !43)
!12423 = !DILocation(line: 19, column: 35, scope: !12420)
!12424 = !DILocation(line: 21, column: 22, scope: !12420)
!12425 = !DILocation(line: 21, column: 9, scope: !12420)
!12426 = !DILocation(line: 21, column: 2, scope: !12420)
!12427 = distinct !DISubprogram(name: "pfn_to_mfn", scope: !12406, file: !12406, line: 164, type: !12407, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12428 = !DILocalVariable(name: "pfn", arg: 1, scope: !12427, file: !12406, line: 164, type: !323)
!12429 = !DILocation(line: 164, column: 54, scope: !12427)
!12430 = !DILocalVariable(name: "mfn", scope: !12427, file: !12406, line: 166, type: !323)
!12431 = !DILocation(line: 166, column: 16, scope: !12427)
!12432 = !DILocation(line: 173, column: 6, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12427, file: !12406, line: 173, column: 6)
!12434 = !DILocation(line: 173, column: 6, scope: !12427)
!12435 = !DILocation(line: 174, column: 10, scope: !12433)
!12436 = !DILocation(line: 174, column: 3, scope: !12433)
!12437 = !DILocation(line: 176, column: 21, scope: !12427)
!12438 = !DILocation(line: 176, column: 8, scope: !12427)
!12439 = !DILocation(line: 176, column: 6, scope: !12427)
!12440 = !DILocation(line: 178, column: 6, scope: !12441)
!12441 = distinct !DILexicalBlock(scope: !12427, file: !12406, line: 178, column: 6)
!12442 = !DILocation(line: 178, column: 10, scope: !12441)
!12443 = !DILocation(line: 178, column: 6, scope: !12427)
!12444 = !DILocation(line: 179, column: 7, scope: !12441)
!12445 = !DILocation(line: 179, column: 3, scope: !12441)
!12446 = !DILocation(line: 181, column: 9, scope: !12427)
!12447 = !DILocation(line: 181, column: 2, scope: !12427)
!12448 = !DILocation(line: 182, column: 1, scope: !12427)
!12449 = distinct !DISubprogram(name: "__pfn_to_mfn", scope: !12406, file: !12406, line: 141, type: !12407, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12450 = !DILocalVariable(name: "pfn", arg: 1, scope: !12449, file: !12406, line: 141, type: !323)
!12451 = !DILocation(line: 141, column: 56, scope: !12449)
!12452 = !DILocalVariable(name: "mfn", scope: !12449, file: !12406, line: 143, type: !323)
!12453 = !DILocation(line: 143, column: 16, scope: !12449)
!12454 = !DILocation(line: 145, column: 6, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12449, file: !12406, line: 145, column: 6)
!12456 = !DILocation(line: 145, column: 12, scope: !12455)
!12457 = !DILocation(line: 145, column: 10, scope: !12455)
!12458 = !DILocation(line: 145, column: 6, scope: !12449)
!12459 = !DILocation(line: 146, column: 9, scope: !12455)
!12460 = !DILocation(line: 146, column: 22, scope: !12455)
!12461 = !DILocation(line: 146, column: 7, scope: !12455)
!12462 = !DILocation(line: 146, column: 3, scope: !12455)
!12463 = !DILocation(line: 147, column: 11, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12455, file: !12406, line: 147, column: 11)
!12465 = !DILocation(line: 147, column: 11, scope: !12455)
!12466 = !DILocation(line: 148, column: 30, scope: !12464)
!12467 = !DILocation(line: 148, column: 10, scope: !12464)
!12468 = !DILocation(line: 148, column: 3, scope: !12464)
!12469 = !DILocation(line: 150, column: 10, scope: !12464)
!12470 = !DILocation(line: 150, column: 3, scope: !12464)
!12471 = !DILocation(line: 152, column: 6, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12449, file: !12406, line: 152, column: 6)
!12473 = !DILocation(line: 152, column: 6, scope: !12449)
!12474 = !DILocation(line: 153, column: 30, scope: !12472)
!12475 = !DILocation(line: 153, column: 10, scope: !12472)
!12476 = !DILocation(line: 153, column: 3, scope: !12472)
!12477 = !DILocation(line: 155, column: 9, scope: !12449)
!12478 = !DILocation(line: 155, column: 2, scope: !12449)
!12479 = !DILocation(line: 156, column: 1, scope: !12449)
!12480 = distinct !DISubprogram(name: "netdev_get_tx_queue", scope: !42, file: !42, line: 2234, type: !12481, scopeLine: 2236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12481 = !DISubroutineType(types: !12482)
!12482 = !{!9308, !2893, !7}
!12483 = !DILocalVariable(name: "dev", arg: 1, scope: !12480, file: !42, line: 2234, type: !2893)
!12484 = !DILocation(line: 2234, column: 67, scope: !12480)
!12485 = !DILocalVariable(name: "index", arg: 2, scope: !12480, file: !42, line: 2235, type: !7)
!12486 = !DILocation(line: 2235, column: 20, scope: !12480)
!12487 = !DILocation(line: 2237, column: 10, scope: !12480)
!12488 = !DILocation(line: 2237, column: 15, scope: !12480)
!12489 = !DILocation(line: 2237, column: 19, scope: !12480)
!12490 = !DILocation(line: 2237, column: 2, scope: !12480)
!12491 = distinct !DISubprogram(name: "skb_get_queue_mapping", scope: !428, file: !428, line: 4339, type: !12492, scopeLine: 4340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12492 = !DISubroutineType(types: !12493)
!12493 = !{!1044, !9211}
!12494 = !DILocalVariable(name: "skb", arg: 1, scope: !12491, file: !428, line: 4339, type: !9211)
!12495 = !DILocation(line: 4339, column: 63, scope: !12491)
!12496 = !DILocation(line: 4341, column: 9, scope: !12491)
!12497 = !DILocation(line: 4341, column: 14, scope: !12491)
!12498 = !DILocation(line: 4341, column: 2, scope: !12491)
!12499 = distinct !DISubprogram(name: "xennet_count_skb_slots", scope: !3, file: !3, line: 537, type: !2816, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12500 = !DILocalVariable(name: "skb", arg: 1, scope: !12499, file: !3, line: 537, type: !426)
!12501 = !DILocation(line: 537, column: 51, scope: !12499)
!12502 = !DILocalVariable(name: "i", scope: !12499, file: !3, line: 539, type: !43)
!12503 = !DILocation(line: 539, column: 6, scope: !12499)
!12504 = !DILocalVariable(name: "frags", scope: !12499, file: !3, line: 539, type: !43)
!12505 = !DILocation(line: 539, column: 9, scope: !12499)
!12506 = !DILocation(line: 539, column: 17, scope: !12499)
!12507 = !DILocation(line: 539, column: 34, scope: !12499)
!12508 = !DILocalVariable(name: "slots", scope: !12499, file: !3, line: 540, type: !43)
!12509 = !DILocation(line: 540, column: 6, scope: !12499)
!12510 = !DILocation(line: 542, column: 29, scope: !12499)
!12511 = !DILocation(line: 543, column: 20, scope: !12499)
!12512 = !DILocation(line: 543, column: 8, scope: !12499)
!12513 = !DILocation(line: 542, column: 10, scope: !12499)
!12514 = !DILocation(line: 542, column: 8, scope: !12499)
!12515 = !DILocation(line: 545, column: 9, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12499, file: !3, line: 545, column: 2)
!12517 = !DILocation(line: 545, column: 7, scope: !12516)
!12518 = !DILocation(line: 545, column: 14, scope: !12519)
!12519 = distinct !DILexicalBlock(scope: !12516, file: !3, line: 545, column: 2)
!12520 = !DILocation(line: 545, column: 18, scope: !12519)
!12521 = !DILocation(line: 545, column: 16, scope: !12519)
!12522 = !DILocation(line: 545, column: 2, scope: !12516)
!12523 = !DILocalVariable(name: "frag", scope: !12524, file: !3, line: 546, type: !11379)
!12524 = distinct !DILexicalBlock(scope: !12519, file: !3, line: 545, column: 30)
!12525 = !DILocation(line: 546, column: 15, scope: !12524)
!12526 = !DILocation(line: 546, column: 22, scope: !12524)
!12527 = !DILocation(line: 546, column: 39, scope: !12524)
!12528 = !DILocation(line: 546, column: 47, scope: !12524)
!12529 = !DILocation(line: 546, column: 45, scope: !12524)
!12530 = !DILocalVariable(name: "size", scope: !12524, file: !3, line: 547, type: !323)
!12531 = !DILocation(line: 547, column: 17, scope: !12524)
!12532 = !DILocation(line: 547, column: 38, scope: !12524)
!12533 = !DILocation(line: 547, column: 24, scope: !12524)
!12534 = !DILocalVariable(name: "offset", scope: !12524, file: !3, line: 548, type: !323)
!12535 = !DILocation(line: 548, column: 17, scope: !12524)
!12536 = !DILocation(line: 548, column: 39, scope: !12524)
!12537 = !DILocation(line: 548, column: 26, scope: !12524)
!12538 = !DILocation(line: 551, column: 10, scope: !12524)
!12539 = !DILocation(line: 553, column: 31, scope: !12524)
!12540 = !DILocation(line: 553, column: 39, scope: !12524)
!12541 = !DILocation(line: 553, column: 12, scope: !12524)
!12542 = !DILocation(line: 553, column: 9, scope: !12524)
!12543 = !DILocation(line: 554, column: 2, scope: !12524)
!12544 = !DILocation(line: 545, column: 26, scope: !12519)
!12545 = !DILocation(line: 545, column: 2, scope: !12519)
!12546 = distinct !{!12546, !12522, !12547}
!12547 = !DILocation(line: 554, column: 2, scope: !12516)
!12548 = !DILocation(line: 556, column: 9, scope: !12499)
!12549 = !DILocation(line: 556, column: 2, scope: !12499)
!12550 = distinct !DISubprogram(name: "skb_linearize", scope: !428, file: !428, line: 3306, type: !2816, scopeLine: 3307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12551 = !DILocalVariable(name: "skb", arg: 1, scope: !12550, file: !428, line: 3306, type: !426)
!12552 = !DILocation(line: 3306, column: 49, scope: !12550)
!12553 = !DILocation(line: 3308, column: 26, scope: !12550)
!12554 = !DILocation(line: 3308, column: 9, scope: !12550)
!12555 = !DILocation(line: 3308, column: 49, scope: !12550)
!12556 = !DILocation(line: 3308, column: 33, scope: !12550)
!12557 = !DILocation(line: 3308, column: 2, scope: !12550)
!12558 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !12559, file: !12559, line: 18, type: !12407, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12559 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!12560 = !DILocalVariable(name: "x", arg: 1, scope: !12558, file: !12559, line: 18, type: !323)
!12561 = !DILocation(line: 18, column: 63, scope: !12558)
!12562 = !DILocalVariable(name: "y", scope: !12558, file: !12559, line: 20, type: !323)
!12563 = !DILocation(line: 20, column: 16, scope: !12558)
!12564 = !DILocation(line: 20, column: 20, scope: !12558)
!12565 = !DILocation(line: 20, column: 22, scope: !12558)
!12566 = !DILocation(line: 23, column: 6, scope: !12558)
!12567 = !DILocation(line: 23, column: 12, scope: !12558)
!12568 = !DILocation(line: 23, column: 16, scope: !12558)
!12569 = !DILocation(line: 23, column: 14, scope: !12558)
!12570 = !DILocation(line: 23, column: 11, scope: !12558)
!12571 = !DILocation(line: 23, column: 21, scope: !12558)
!12572 = !DILocation(line: 23, column: 55, scope: !12558)
!12573 = !DILocation(line: 23, column: 53, scope: !12558)
!12574 = !DILocation(line: 23, column: 8, scope: !12558)
!12575 = !DILocation(line: 23, column: 4, scope: !12558)
!12576 = !DILocation(line: 25, column: 9, scope: !12558)
!12577 = !DILocation(line: 25, column: 2, scope: !12558)
!12578 = distinct !DISubprogram(name: "dev_consume_skb_any", scope: !42, file: !42, line: 3822, type: !2861, scopeLine: 3823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12579 = !DILocalVariable(name: "skb", arg: 1, scope: !12578, file: !42, line: 3822, type: !426)
!12580 = !DILocation(line: 3822, column: 56, scope: !12578)
!12581 = !DILocation(line: 3824, column: 22, scope: !12578)
!12582 = !DILocation(line: 3824, column: 2, scope: !12578)
!12583 = !DILocation(line: 3825, column: 1, scope: !12578)
!12584 = distinct !DISubprogram(name: "skb_headlen", scope: !428, file: !428, line: 2110, type: !12585, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12585 = !DISubroutineType(types: !12586)
!12586 = !{!7, !9211}
!12587 = !DILocalVariable(name: "skb", arg: 1, scope: !12584, file: !428, line: 2110, type: !9211)
!12588 = !DILocation(line: 2110, column: 62, scope: !12584)
!12589 = !DILocation(line: 2112, column: 9, scope: !12584)
!12590 = !DILocation(line: 2112, column: 14, scope: !12584)
!12591 = !DILocation(line: 2112, column: 20, scope: !12584)
!12592 = !DILocation(line: 2112, column: 25, scope: !12584)
!12593 = !DILocation(line: 2112, column: 18, scope: !12584)
!12594 = !DILocation(line: 2112, column: 2, scope: !12584)
!12595 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !12596, file: !12596, line: 666, type: !12597, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12596 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!12597 = !DISubroutineType(types: !12598)
!12598 = !{!323}
!12599 = !DILocalVariable(name: "f", scope: !12595, file: !12596, line: 668, type: !323)
!12600 = !DILocation(line: 668, column: 16, scope: !12595)
!12601 = !DILocation(line: 670, column: 6, scope: !12595)
!12602 = !DILocation(line: 670, column: 4, scope: !12595)
!12603 = !DILocation(line: 671, column: 2, scope: !12595)
!12604 = !DILocation(line: 672, column: 9, scope: !12595)
!12605 = !DILocation(line: 672, column: 2, scope: !12595)
!12606 = distinct !DISubprogram(name: "xennet_can_sg", scope: !3, file: !3, line: 241, type: !12607, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12607 = !DISubroutineType(types: !12608)
!12608 = !{!546, !301}
!12609 = !DILocalVariable(name: "dev", arg: 1, scope: !12606, file: !3, line: 241, type: !301)
!12610 = !DILocation(line: 241, column: 46, scope: !12606)
!12611 = !DILocation(line: 243, column: 9, scope: !12606)
!12612 = !DILocation(line: 243, column: 14, scope: !12606)
!12613 = !DILocation(line: 243, column: 23, scope: !12606)
!12614 = !DILocation(line: 243, column: 2, scope: !12606)
!12615 = distinct !DISubprogram(name: "netif_needs_gso", scope: !42, file: !42, line: 4844, type: !12616, scopeLine: 4846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12616 = !DISubroutineType(types: !12617)
!12617 = !{!546, !426, !340}
!12618 = !DILocalVariable(name: "skb", arg: 1, scope: !12615, file: !42, line: 4844, type: !426)
!12619 = !DILocation(line: 4844, column: 52, scope: !12615)
!12620 = !DILocalVariable(name: "features", arg: 2, scope: !12615, file: !42, line: 4845, type: !340)
!12621 = !DILocation(line: 4845, column: 26, scope: !12615)
!12622 = !DILocation(line: 4847, column: 20, scope: !12615)
!12623 = !DILocation(line: 4847, column: 9, scope: !12615)
!12624 = !DILocation(line: 4847, column: 25, scope: !12615)
!12625 = !DILocation(line: 4847, column: 41, scope: !12615)
!12626 = !DILocation(line: 4847, column: 46, scope: !12615)
!12627 = !DILocation(line: 4847, column: 30, scope: !12615)
!12628 = !DILocation(line: 4847, column: 56, scope: !12615)
!12629 = !DILocation(line: 4848, column: 3, scope: !12615)
!12630 = !DILocation(line: 0, scope: !12615)
!12631 = !DILocation(line: 4847, column: 2, scope: !12615)
!12632 = distinct !DISubprogram(name: "xennet_make_first_txreq", scope: !3, file: !3, line: 476, type: !12633, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12633 = !DISubroutineType(types: !12634)
!12634 = !{!11138, !10150, !426, !630, !7, !7}
!12635 = !DILocalVariable(name: "queue", arg: 1, scope: !12632, file: !3, line: 477, type: !10150)
!12636 = !DILocation(line: 477, column: 25, scope: !12632)
!12637 = !DILocalVariable(name: "skb", arg: 2, scope: !12632, file: !3, line: 477, type: !426)
!12638 = !DILocation(line: 477, column: 48, scope: !12632)
!12639 = !DILocalVariable(name: "page", arg: 3, scope: !12632, file: !3, line: 478, type: !630)
!12640 = !DILocation(line: 478, column: 15, scope: !12632)
!12641 = !DILocalVariable(name: "offset", arg: 4, scope: !12632, file: !3, line: 478, type: !7)
!12642 = !DILocation(line: 478, column: 34, scope: !12632)
!12643 = !DILocalVariable(name: "len", arg: 5, scope: !12632, file: !3, line: 478, type: !7)
!12644 = !DILocation(line: 478, column: 55, scope: !12632)
!12645 = !DILocalVariable(name: "info", scope: !12632, file: !3, line: 480, type: !12646)
!12646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xennet_gnttab_make_txreq", file: !3, line: 434, size: 320, elements: !12647)
!12647 = !{!12648, !12649, !12650, !12651, !12652}
!12648 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !12646, file: !3, line: 435, baseType: !10150, size: 64)
!12649 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !12646, file: !3, line: 436, baseType: !426, size: 64, offset: 64)
!12650 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !12646, file: !3, line: 437, baseType: !630, size: 64, offset: 128)
!12651 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !12646, file: !3, line: 438, baseType: !11138, size: 64, offset: 192)
!12652 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12646, file: !3, line: 439, baseType: !7, size: 32, offset: 256)
!12653 = !DILocation(line: 480, column: 34, scope: !12632)
!12654 = !DILocation(line: 480, column: 41, scope: !12632)
!12655 = !DILocation(line: 481, column: 12, scope: !12632)
!12656 = !DILocation(line: 482, column: 10, scope: !12632)
!12657 = !DILocation(line: 483, column: 11, scope: !12632)
!12658 = !DILocation(line: 487, column: 23, scope: !12632)
!12659 = !DILocation(line: 487, column: 29, scope: !12632)
!12660 = !DILocation(line: 487, column: 37, scope: !12632)
!12661 = !DILocation(line: 487, column: 65, scope: !12632)
!12662 = !DILocation(line: 487, column: 2, scope: !12632)
!12663 = !DILocation(line: 489, column: 14, scope: !12632)
!12664 = !DILocation(line: 489, column: 2, scope: !12632)
!12665 = distinct !DISubprogram(name: "xennet_make_txreqs", scope: !3, file: !3, line: 502, type: !12666, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12666 = !DISubroutineType(types: !12667)
!12667 = !{!11138, !10150, !11138, !426, !630, !7, !7}
!12668 = !DILocalVariable(name: "queue", arg: 1, scope: !12665, file: !3, line: 503, type: !10150)
!12669 = !DILocation(line: 503, column: 25, scope: !12665)
!12670 = !DILocalVariable(name: "tx", arg: 2, scope: !12665, file: !3, line: 503, type: !11138)
!12671 = !DILocation(line: 503, column: 61, scope: !12665)
!12672 = !DILocalVariable(name: "skb", arg: 3, scope: !12665, file: !3, line: 504, type: !426)
!12673 = !DILocation(line: 504, column: 18, scope: !12665)
!12674 = !DILocalVariable(name: "page", arg: 4, scope: !12665, file: !3, line: 504, type: !630)
!12675 = !DILocation(line: 504, column: 36, scope: !12665)
!12676 = !DILocalVariable(name: "offset", arg: 5, scope: !12665, file: !3, line: 505, type: !7)
!12677 = !DILocation(line: 505, column: 15, scope: !12665)
!12678 = !DILocalVariable(name: "len", arg: 6, scope: !12665, file: !3, line: 505, type: !7)
!12679 = !DILocation(line: 505, column: 36, scope: !12665)
!12680 = !DILocalVariable(name: "info", scope: !12665, file: !3, line: 507, type: !12646)
!12681 = !DILocation(line: 507, column: 34, scope: !12665)
!12682 = !DILocation(line: 507, column: 41, scope: !12665)
!12683 = !DILocation(line: 508, column: 12, scope: !12665)
!12684 = !DILocation(line: 509, column: 10, scope: !12665)
!12685 = !DILocation(line: 510, column: 9, scope: !12665)
!12686 = !DILocation(line: 514, column: 10, scope: !12665)
!12687 = !DILocation(line: 514, column: 17, scope: !12665)
!12688 = !DILocation(line: 514, column: 7, scope: !12665)
!12689 = !DILocation(line: 515, column: 9, scope: !12665)
!12690 = !DILocation(line: 517, column: 2, scope: !12665)
!12691 = !DILocation(line: 517, column: 9, scope: !12665)
!12692 = !DILocation(line: 518, column: 15, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12665, file: !3, line: 517, column: 14)
!12694 = !DILocation(line: 518, column: 8, scope: !12693)
!12695 = !DILocation(line: 518, column: 13, scope: !12693)
!12696 = !DILocation(line: 519, column: 8, scope: !12693)
!12697 = !DILocation(line: 519, column: 13, scope: !12693)
!12698 = !DILocation(line: 521, column: 33, scope: !12693)
!12699 = !DILocation(line: 521, column: 39, scope: !12693)
!12700 = !DILocation(line: 521, column: 47, scope: !12693)
!12701 = !DILocation(line: 523, column: 12, scope: !12693)
!12702 = !DILocation(line: 521, column: 3, scope: !12693)
!12703 = !DILocation(line: 525, column: 7, scope: !12693)
!12704 = !DILocation(line: 526, column: 10, scope: !12693)
!12705 = !DILocation(line: 527, column: 15, scope: !12693)
!12706 = !DILocation(line: 527, column: 7, scope: !12693)
!12707 = distinct !{!12707, !12690, !12708}
!12708 = !DILocation(line: 528, column: 2, scope: !12665)
!12709 = !DILocation(line: 530, column: 14, scope: !12665)
!12710 = !DILocation(line: 530, column: 2, scope: !12665)
!12711 = distinct !DISubprogram(name: "skb_frag_off", scope: !428, file: !428, line: 2941, type: !12712, scopeLine: 2942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12712 = !DISubroutineType(types: !12713)
!12713 = !{!7, !12330}
!12714 = !DILocalVariable(name: "frag", arg: 1, scope: !12711, file: !428, line: 2941, type: !12330)
!12715 = !DILocation(line: 2941, column: 59, scope: !12711)
!12716 = !DILocation(line: 2943, column: 9, scope: !12711)
!12717 = !DILocation(line: 2943, column: 15, scope: !12711)
!12718 = !DILocation(line: 2943, column: 2, scope: !12711)
!12719 = distinct !DISubprogram(name: "skb_frag_size", scope: !428, file: !428, line: 327, type: !12712, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12720 = !DILocalVariable(name: "frag", arg: 1, scope: !12719, file: !428, line: 327, type: !12330)
!12721 = !DILocation(line: 327, column: 60, scope: !12719)
!12722 = !DILocation(line: 329, column: 9, scope: !12719)
!12723 = !DILocation(line: 329, column: 15, scope: !12719)
!12724 = !DILocation(line: 329, column: 2, scope: !12719)
!12725 = distinct !DISubprogram(name: "skb_tx_timestamp", scope: !428, file: !428, line: 3876, type: !2861, scopeLine: 3877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12726 = !DILocalVariable(name: "skb", arg: 1, scope: !12725, file: !428, line: 3876, type: !426)
!12727 = !DILocation(line: 3876, column: 53, scope: !12725)
!12728 = !DILocation(line: 3878, column: 25, scope: !12725)
!12729 = !DILocation(line: 3878, column: 2, scope: !12725)
!12730 = !DILocation(line: 3879, column: 6, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12725, file: !428, line: 3879, column: 6)
!12732 = !DILocation(line: 3879, column: 23, scope: !12731)
!12733 = !DILocation(line: 3879, column: 32, scope: !12731)
!12734 = !DILocation(line: 3879, column: 6, scope: !12725)
!12735 = !DILocation(line: 3880, column: 17, scope: !12731)
!12736 = !DILocation(line: 3880, column: 3, scope: !12731)
!12737 = !DILocation(line: 3881, column: 1, scope: !12725)
!12738 = distinct !DISubprogram(name: "u64_stats_update_begin", scope: !2064, file: !2064, line: 125, type: !10950, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12739 = !DILocalVariable(name: "syncp", arg: 1, scope: !12738, file: !2064, line: 125, type: !10952)
!12740 = !DILocation(line: 125, column: 66, scope: !12738)
!12741 = !DILocation(line: 130, column: 1, scope: !12738)
!12742 = distinct !DISubprogram(name: "u64_stats_update_end", scope: !2064, file: !2064, line: 132, type: !10950, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12743 = !DILocalVariable(name: "syncp", arg: 1, scope: !12742, file: !2064, line: 132, type: !10952)
!12744 = !DILocation(line: 132, column: 64, scope: !12742)
!12745 = !DILocation(line: 137, column: 1, scope: !12742)
!12746 = distinct !DISubprogram(name: "xennet_tx_buf_gc", scope: !3, file: !3, line: 388, type: !11925, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12747 = !DILocalVariable(name: "queue", arg: 1, scope: !12746, file: !3, line: 388, type: !10150)
!12748 = !DILocation(line: 388, column: 53, scope: !12746)
!12749 = !DILocalVariable(name: "cons", scope: !12746, file: !3, line: 390, type: !10103)
!12750 = !DILocation(line: 390, column: 11, scope: !12746)
!12751 = !DILocalVariable(name: "prod", scope: !12746, file: !3, line: 390, type: !10103)
!12752 = !DILocation(line: 390, column: 17, scope: !12746)
!12753 = !DILocalVariable(name: "id", scope: !12746, file: !3, line: 391, type: !483)
!12754 = !DILocation(line: 391, column: 17, scope: !12746)
!12755 = !DILocalVariable(name: "skb", scope: !12746, file: !3, line: 392, type: !426)
!12756 = !DILocation(line: 392, column: 18, scope: !12746)
!12757 = !DILocalVariable(name: "more_to_do", scope: !12746, file: !3, line: 393, type: !546)
!12758 = !DILocation(line: 393, column: 7, scope: !12746)
!12759 = !DILocation(line: 395, column: 2, scope: !12746)
!12760 = !DILocation(line: 395, column: 2, scope: !12761)
!12761 = distinct !DILexicalBlock(scope: !12762, file: !3, line: 395, column: 2)
!12762 = distinct !DILexicalBlock(scope: !12746, file: !3, line: 395, column: 2)
!12763 = !DILocation(line: 395, column: 2, scope: !12762)
!12764 = !DILocation(line: 395, column: 2, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12761, file: !3, line: 395, column: 2)
!12766 = !DILocation(line: 395, column: 2, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12765, file: !3, line: 395, column: 2)
!12768 = !DILocation(line: 395, column: 2, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12765, file: !3, line: 395, column: 2)
!12770 = !{i32 -2136842399, i32 -2136842370, i32 -2136842324, i32 -2136842266, i32 -2136842212, i32 -2136842158, i32 -2136842103, i32 -2136842072}
!12771 = !DILocation(line: 395, column: 2, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12773, file: !3, line: 395, column: 2)
!12773 = distinct !DILexicalBlock(scope: !12765, file: !3, line: 395, column: 2)
!12774 = !{i32 -2136841623, i32 -2136841616, i32 -2136841562, i32 -2136841531, i32 -2136841501}
!12775 = !DILocation(line: 395, column: 2, scope: !12773)
!12776 = !DILocation(line: 397, column: 2, scope: !12746)
!12777 = !DILocation(line: 398, column: 10, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12746, file: !3, line: 397, column: 5)
!12779 = !DILocation(line: 398, column: 17, scope: !12778)
!12780 = !DILocation(line: 398, column: 20, scope: !12778)
!12781 = !DILocation(line: 398, column: 27, scope: !12778)
!12782 = !DILocation(line: 398, column: 8, scope: !12778)
!12783 = !DILocation(line: 399, column: 3, scope: !12778)
!12784 = !{i32 -2136841450}
!12785 = !DILocation(line: 401, column: 15, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12778, file: !3, line: 401, column: 3)
!12787 = !DILocation(line: 401, column: 22, scope: !12786)
!12788 = !DILocation(line: 401, column: 25, scope: !12786)
!12789 = !DILocation(line: 401, column: 13, scope: !12786)
!12790 = !DILocation(line: 401, column: 8, scope: !12786)
!12791 = !DILocation(line: 401, column: 35, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12786, file: !3, line: 401, column: 3)
!12793 = !DILocation(line: 401, column: 43, scope: !12792)
!12794 = !DILocation(line: 401, column: 40, scope: !12792)
!12795 = !DILocation(line: 401, column: 3, scope: !12786)
!12796 = !DILocalVariable(name: "txrsp", scope: !12797, file: !3, line: 402, type: !12798)
!12797 = distinct !DILexicalBlock(scope: !12792, file: !3, line: 401, column: 57)
!12798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10266, size: 64)
!12799 = !DILocation(line: 402, column: 34, scope: !12797)
!12800 = !DILocation(line: 404, column: 12, scope: !12797)
!12801 = !DILocation(line: 404, column: 10, scope: !12797)
!12802 = !DILocation(line: 405, column: 8, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12797, file: !3, line: 405, column: 8)
!12804 = !DILocation(line: 405, column: 15, scope: !12803)
!12805 = !DILocation(line: 405, column: 22, scope: !12803)
!12806 = !DILocation(line: 405, column: 8, scope: !12797)
!12807 = !DILocation(line: 406, column: 5, scope: !12803)
!12808 = !DILocation(line: 408, column: 10, scope: !12797)
!12809 = !DILocation(line: 408, column: 17, scope: !12797)
!12810 = !DILocation(line: 408, column: 8, scope: !12797)
!12811 = !DILocation(line: 409, column: 10, scope: !12797)
!12812 = !DILocation(line: 409, column: 17, scope: !12797)
!12813 = !DILocation(line: 409, column: 25, scope: !12797)
!12814 = !DILocation(line: 409, column: 29, scope: !12797)
!12815 = !DILocation(line: 409, column: 8, scope: !12797)
!12816 = !DILocation(line: 410, column: 8, scope: !12817)
!12817 = distinct !DILexicalBlock(scope: !12797, file: !3, line: 410, column: 8)
!12818 = !DILocation(line: 410, column: 8, scope: !12797)
!12819 = !DILocation(line: 412, column: 5, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12817, file: !3, line: 411, column: 37)
!12821 = !DILocation(line: 414, column: 5, scope: !12820)
!12822 = !DILocation(line: 414, column: 5, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12820, file: !3, line: 414, column: 5)
!12824 = !DILocation(line: 414, column: 5, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12823, file: !3, line: 414, column: 5)
!12826 = !DILocation(line: 414, column: 5, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12823, file: !3, line: 414, column: 5)
!12828 = !{i32 -2136840831, i32 -2136840802, i32 -2136840756, i32 -2136840698, i32 -2136840644, i32 -2136840590, i32 -2136840535, i32 -2136840504}
!12829 = !DILocation(line: 414, column: 5, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12831, file: !3, line: 414, column: 5)
!12831 = distinct !DILexicalBlock(scope: !12823, file: !3, line: 414, column: 5)
!12832 = !{i32 -2136840055, i32 -2136840048, i32 -2136839994, i32 -2136839963, i32 -2136839933}
!12833 = !DILocation(line: 414, column: 5, scope: !12831)
!12834 = !DILocation(line: 415, column: 4, scope: !12820)
!12835 = !DILocation(line: 417, column: 5, scope: !12797)
!12836 = !DILocation(line: 417, column: 12, scope: !12797)
!12837 = !DILocation(line: 417, column: 25, scope: !12797)
!12838 = !DILocation(line: 416, column: 4, scope: !12797)
!12839 = !DILocation(line: 419, column: 6, scope: !12797)
!12840 = !DILocation(line: 419, column: 13, scope: !12797)
!12841 = !DILocation(line: 419, column: 27, scope: !12797)
!12842 = !DILocation(line: 419, column: 34, scope: !12797)
!12843 = !DILocation(line: 419, column: 47, scope: !12797)
!12844 = !DILocation(line: 418, column: 4, scope: !12797)
!12845 = !DILocation(line: 420, column: 4, scope: !12797)
!12846 = !DILocation(line: 420, column: 11, scope: !12797)
!12847 = !DILocation(line: 420, column: 24, scope: !12797)
!12848 = !DILocation(line: 420, column: 28, scope: !12797)
!12849 = !DILocation(line: 421, column: 4, scope: !12797)
!12850 = !DILocation(line: 421, column: 11, scope: !12797)
!12851 = !DILocation(line: 421, column: 25, scope: !12797)
!12852 = !DILocation(line: 421, column: 29, scope: !12797)
!12853 = !DILocation(line: 422, column: 24, scope: !12797)
!12854 = !DILocation(line: 422, column: 31, scope: !12797)
!12855 = !DILocation(line: 422, column: 48, scope: !12797)
!12856 = !DILocation(line: 422, column: 55, scope: !12797)
!12857 = !DILocation(line: 422, column: 64, scope: !12797)
!12858 = !DILocation(line: 422, column: 4, scope: !12797)
!12859 = !DILocation(line: 423, column: 22, scope: !12797)
!12860 = !DILocation(line: 423, column: 4, scope: !12797)
!12861 = !DILocation(line: 424, column: 3, scope: !12797)
!12862 = !DILocation(line: 401, column: 53, scope: !12792)
!12863 = !DILocation(line: 401, column: 3, scope: !12792)
!12864 = distinct !{!12864, !12795, !12865}
!12865 = !DILocation(line: 424, column: 3, scope: !12786)
!12866 = !DILocation(line: 426, column: 24, scope: !12778)
!12867 = !DILocation(line: 426, column: 3, scope: !12778)
!12868 = !DILocation(line: 426, column: 10, scope: !12778)
!12869 = !DILocation(line: 426, column: 13, scope: !12778)
!12870 = !DILocation(line: 426, column: 22, scope: !12778)
!12871 = !DILocation(line: 428, column: 3, scope: !12778)
!12872 = !DILocation(line: 428, column: 3, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !12778, file: !3, line: 428, column: 3)
!12874 = !DILocation(line: 428, column: 3, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12873, file: !3, line: 428, column: 3)
!12876 = !{i32 -2136839441}
!12877 = !DILocation(line: 429, column: 2, scope: !12778)
!12878 = !DILocation(line: 429, column: 11, scope: !12746)
!12879 = distinct !{!12879, !12776, !12880}
!12880 = !DILocation(line: 429, column: 21, scope: !12746)
!12881 = !DILocation(line: 431, column: 23, scope: !12746)
!12882 = !DILocation(line: 431, column: 2, scope: !12746)
!12883 = !DILocation(line: 432, column: 1, scope: !12746)
!12884 = distinct !DISubprogram(name: "netfront_tx_slot_available", scope: !3, file: !3, line: 253, type: !12885, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12885 = !DISubroutineType(types: !12886)
!12886 = !{!43, !10150}
!12887 = !DILocalVariable(name: "queue", arg: 1, scope: !12884, file: !3, line: 253, type: !10150)
!12888 = !DILocation(line: 253, column: 62, scope: !12884)
!12889 = !DILocation(line: 255, column: 10, scope: !12884)
!12890 = !DILocation(line: 255, column: 17, scope: !12884)
!12891 = !DILocation(line: 255, column: 20, scope: !12884)
!12892 = !DILocation(line: 255, column: 35, scope: !12884)
!12893 = !DILocation(line: 255, column: 42, scope: !12884)
!12894 = !DILocation(line: 255, column: 45, scope: !12884)
!12895 = !DILocation(line: 255, column: 33, scope: !12884)
!12896 = !DILocation(line: 255, column: 9, scope: !12884)
!12897 = !DILocation(line: 255, column: 55, scope: !12884)
!12898 = !DILocation(line: 255, column: 2, scope: !12884)
!12899 = distinct !DISubprogram(name: "dev_kfree_skb_any", scope: !42, file: !42, line: 3817, type: !2861, scopeLine: 3818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12900 = !DILocalVariable(name: "skb", arg: 1, scope: !12899, file: !42, line: 3817, type: !426)
!12901 = !DILocation(line: 3817, column: 54, scope: !12899)
!12902 = !DILocation(line: 3819, column: 22, scope: !12899)
!12903 = !DILocation(line: 3819, column: 2, scope: !12899)
!12904 = !DILocation(line: 3820, column: 1, scope: !12899)
!12905 = distinct !DISubprogram(name: "gnttab_count_grant", scope: !12349, file: !12349, line: 319, type: !12906, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12906 = !DISubroutineType(types: !12907)
!12907 = !{!7, !7, !7}
!12908 = !DILocalVariable(name: "start", arg: 1, scope: !12905, file: !12349, line: 319, type: !7)
!12909 = !DILocation(line: 319, column: 60, scope: !12905)
!12910 = !DILocalVariable(name: "len", arg: 2, scope: !12905, file: !12349, line: 320, type: !7)
!12911 = !DILocation(line: 320, column: 25, scope: !12905)
!12912 = !DILocation(line: 322, column: 9, scope: !12905)
!12913 = !DILocation(line: 322, column: 2, scope: !12905)
!12914 = distinct !DISubprogram(name: "skb_is_nonlinear", scope: !428, file: !428, line: 2105, type: !12915, scopeLine: 2106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12915 = !DISubroutineType(types: !12916)
!12916 = !{!546, !9211}
!12917 = !DILocalVariable(name: "skb", arg: 1, scope: !12914, file: !428, line: 2105, type: !9211)
!12918 = !DILocation(line: 2105, column: 59, scope: !12914)
!12919 = !DILocation(line: 2107, column: 9, scope: !12914)
!12920 = !DILocation(line: 2107, column: 14, scope: !12914)
!12921 = !DILocation(line: 2107, column: 2, scope: !12914)
!12922 = distinct !DISubprogram(name: "__skb_linearize", scope: !428, file: !428, line: 3294, type: !2816, scopeLine: 3295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12923 = !DILocalVariable(name: "skb", arg: 1, scope: !12922, file: !428, line: 3294, type: !426)
!12924 = !DILocation(line: 3294, column: 51, scope: !12922)
!12925 = !DILocation(line: 3296, column: 26, scope: !12922)
!12926 = !DILocation(line: 3296, column: 31, scope: !12922)
!12927 = !DILocation(line: 3296, column: 36, scope: !12922)
!12928 = !DILocation(line: 3296, column: 9, scope: !12922)
!12929 = !DILocation(line: 3296, column: 2, scope: !12922)
!12930 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !12596, file: !12596, line: 646, type: !12597, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12931 = !DILocalVariable(name: "__ret", scope: !12932, file: !12596, line: 648, type: !323)
!12932 = distinct !DILexicalBlock(scope: !12930, file: !12596, line: 648, column: 9)
!12933 = !DILocation(line: 648, column: 9, scope: !12932)
!12934 = !DILocalVariable(name: "__edi", scope: !12932, file: !12596, line: 648, type: !323)
!12935 = !DILocalVariable(name: "__esi", scope: !12932, file: !12596, line: 648, type: !323)
!12936 = !DILocalVariable(name: "__edx", scope: !12932, file: !12596, line: 648, type: !323)
!12937 = !DILocalVariable(name: "__ecx", scope: !12932, file: !12596, line: 648, type: !323)
!12938 = !DILocalVariable(name: "__eax", scope: !12932, file: !12596, line: 648, type: !323)
!12939 = !DILocation(line: 648, column: 9, scope: !12940)
!12940 = distinct !DILexicalBlock(scope: !12941, file: !12596, line: 648, column: 9)
!12941 = distinct !DILexicalBlock(scope: !12932, file: !12596, line: 648, column: 9)
!12942 = !{i32 -2145727139, i32 -2145724824, i32 -2145724590, i32 -2145724539, i32 -2145724511, i32 -2145724486, i32 -2145724802, i32 -2145724789, i32 -2145724351, i32 -2145724232, i32 -2145724697, i32 -2145724670, i32 -2145724642, i32 -2145724612}
!12943 = !DILocalVariable(name: "__mask", scope: !12944, file: !12596, line: 648, type: !323)
!12944 = distinct !DILexicalBlock(scope: !12940, file: !12596, line: 648, column: 9)
!12945 = !DILocation(line: 648, column: 9, scope: !12944)
!12946 = !DILocation(line: 648, column: 9, scope: !12941)
!12947 = !DILocation(line: 648, column: 2, scope: !12930)
!12948 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !12596, file: !12596, line: 656, type: !3915, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12949 = !DILocalVariable(name: "__edi", scope: !12950, file: !12596, line: 658, type: !323)
!12950 = distinct !DILexicalBlock(scope: !12948, file: !12596, line: 658, column: 2)
!12951 = !DILocation(line: 658, column: 2, scope: !12950)
!12952 = !DILocalVariable(name: "__esi", scope: !12950, file: !12596, line: 658, type: !323)
!12953 = !DILocalVariable(name: "__edx", scope: !12950, file: !12596, line: 658, type: !323)
!12954 = !DILocalVariable(name: "__ecx", scope: !12950, file: !12596, line: 658, type: !323)
!12955 = !DILocalVariable(name: "__eax", scope: !12950, file: !12596, line: 658, type: !323)
!12956 = !{i32 -2145720045, i32 -2145719313, i32 -2145719079, i32 -2145719028, i32 -2145719000, i32 -2145718975, i32 -2145719291, i32 -2145719278, i32 -2145718840, i32 -2145718721, i32 -2145719186, i32 -2145719159, i32 -2145719131, i32 -2145719101}
!12957 = !DILocation(line: 659, column: 1, scope: !12948)
!12958 = distinct !DISubprogram(name: "skb_is_gso", scope: !428, file: !428, line: 4452, type: !12915, scopeLine: 4453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12959 = !DILocalVariable(name: "skb", arg: 1, scope: !12958, file: !428, line: 4452, type: !9211)
!12960 = !DILocation(line: 4452, column: 53, scope: !12958)
!12961 = !DILocation(line: 4454, column: 9, scope: !12958)
!12962 = !DILocation(line: 4454, column: 26, scope: !12958)
!12963 = !DILocation(line: 4454, column: 2, scope: !12958)
!12964 = distinct !DISubprogram(name: "skb_gso_ok", scope: !42, file: !42, line: 4838, type: !12616, scopeLine: 4839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12965 = !DILocalVariable(name: "skb", arg: 1, scope: !12964, file: !42, line: 4838, type: !426)
!12966 = !DILocation(line: 4838, column: 47, scope: !12964)
!12967 = !DILocalVariable(name: "features", arg: 2, scope: !12964, file: !42, line: 4838, type: !340)
!12968 = !DILocation(line: 4838, column: 70, scope: !12964)
!12969 = !DILocation(line: 4840, column: 20, scope: !12964)
!12970 = !DILocation(line: 4840, column: 30, scope: !12964)
!12971 = !DILocation(line: 4840, column: 47, scope: !12964)
!12972 = !DILocation(line: 4840, column: 9, scope: !12964)
!12973 = !DILocation(line: 4840, column: 57, scope: !12964)
!12974 = !DILocation(line: 4841, column: 29, scope: !12964)
!12975 = !DILocation(line: 4841, column: 11, scope: !12964)
!12976 = !DILocation(line: 4841, column: 34, scope: !12964)
!12977 = !DILocation(line: 4841, column: 38, scope: !12964)
!12978 = !DILocation(line: 4841, column: 47, scope: !12964)
!12979 = !DILocation(line: 0, scope: !12964)
!12980 = !DILocation(line: 4840, column: 2, scope: !12964)
!12981 = distinct !DISubprogram(name: "net_gso_ok", scope: !42, file: !42, line: 4810, type: !12982, scopeLine: 4811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!12982 = !DISubroutineType(types: !12983)
!12983 = !{!546, !340, !43}
!12984 = !DILocalVariable(name: "features", arg: 1, scope: !12981, file: !42, line: 4810, type: !340)
!12985 = !DILocation(line: 4810, column: 49, scope: !12981)
!12986 = !DILocalVariable(name: "gso_type", arg: 2, scope: !12981, file: !42, line: 4810, type: !43)
!12987 = !DILocation(line: 4810, column: 63, scope: !12981)
!12988 = !DILocalVariable(name: "feature", scope: !12981, file: !42, line: 4812, type: !340)
!12989 = !DILocation(line: 4812, column: 20, scope: !12981)
!12990 = !DILocation(line: 4812, column: 49, scope: !12981)
!12991 = !DILocation(line: 4812, column: 30, scope: !12981)
!12992 = !DILocation(line: 4812, column: 58, scope: !12981)
!12993 = !DILocation(line: 4815, column: 2, scope: !12981)
!12994 = !DILocation(line: 4815, column: 2, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4815, column: 2)
!12996 = !DILocation(line: 4816, column: 2, scope: !12981)
!12997 = !DILocation(line: 4816, column: 2, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4816, column: 2)
!12999 = !DILocation(line: 4817, column: 2, scope: !12981)
!13000 = !DILocation(line: 4817, column: 2, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4817, column: 2)
!13002 = !DILocation(line: 4818, column: 2, scope: !12981)
!13003 = !DILocation(line: 4818, column: 2, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4818, column: 2)
!13005 = !DILocation(line: 4819, column: 2, scope: !12981)
!13006 = !DILocation(line: 4819, column: 2, scope: !13007)
!13007 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4819, column: 2)
!13008 = !DILocation(line: 4820, column: 2, scope: !12981)
!13009 = !DILocation(line: 4820, column: 2, scope: !13010)
!13010 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4820, column: 2)
!13011 = !DILocation(line: 4821, column: 2, scope: !12981)
!13012 = !DILocation(line: 4821, column: 2, scope: !13013)
!13013 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4821, column: 2)
!13014 = !DILocation(line: 4822, column: 2, scope: !12981)
!13015 = !DILocation(line: 4822, column: 2, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4822, column: 2)
!13017 = !DILocation(line: 4823, column: 2, scope: !12981)
!13018 = !DILocation(line: 4823, column: 2, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4823, column: 2)
!13020 = !DILocation(line: 4824, column: 2, scope: !12981)
!13021 = !DILocation(line: 4824, column: 2, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4824, column: 2)
!13023 = !DILocation(line: 4825, column: 2, scope: !12981)
!13024 = !DILocation(line: 4825, column: 2, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4825, column: 2)
!13026 = !DILocation(line: 4826, column: 2, scope: !12981)
!13027 = !DILocation(line: 4826, column: 2, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4826, column: 2)
!13029 = !DILocation(line: 4827, column: 2, scope: !12981)
!13030 = !DILocation(line: 4827, column: 2, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4827, column: 2)
!13032 = !DILocation(line: 4828, column: 2, scope: !12981)
!13033 = !DILocation(line: 4828, column: 2, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4828, column: 2)
!13035 = !DILocation(line: 4829, column: 2, scope: !12981)
!13036 = !DILocation(line: 4829, column: 2, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4829, column: 2)
!13038 = !DILocation(line: 4830, column: 2, scope: !12981)
!13039 = !DILocation(line: 4830, column: 2, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4830, column: 2)
!13041 = !DILocation(line: 4831, column: 2, scope: !12981)
!13042 = !DILocation(line: 4831, column: 2, scope: !13043)
!13043 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4831, column: 2)
!13044 = !DILocation(line: 4832, column: 2, scope: !12981)
!13045 = !DILocation(line: 4832, column: 2, scope: !13046)
!13046 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4832, column: 2)
!13047 = !DILocation(line: 4833, column: 2, scope: !12981)
!13048 = !DILocation(line: 4833, column: 2, scope: !13049)
!13049 = distinct !DILexicalBlock(scope: !12981, file: !42, line: 4833, column: 2)
!13050 = !DILocation(line: 4835, column: 10, scope: !12981)
!13051 = !DILocation(line: 4835, column: 21, scope: !12981)
!13052 = !DILocation(line: 4835, column: 19, scope: !12981)
!13053 = !DILocation(line: 4835, column: 33, scope: !12981)
!13054 = !DILocation(line: 4835, column: 30, scope: !12981)
!13055 = !DILocation(line: 4835, column: 2, scope: !12981)
!13056 = distinct !DISubprogram(name: "skb_has_frag_list", scope: !428, file: !428, line: 3494, type: !12915, scopeLine: 3495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13057 = !DILocalVariable(name: "skb", arg: 1, scope: !13056, file: !428, line: 3494, type: !9211)
!13058 = !DILocation(line: 3494, column: 60, scope: !13056)
!13059 = !DILocation(line: 3496, column: 9, scope: !13056)
!13060 = !DILocation(line: 3496, column: 26, scope: !13056)
!13061 = !DILocation(line: 3496, column: 36, scope: !13056)
!13062 = !DILocation(line: 3496, column: 2, scope: !13056)
!13063 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !12596, file: !12596, line: 651, type: !13064, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13064 = !DISubroutineType(types: !13065)
!13065 = !{null, !323}
!13066 = !DILocalVariable(name: "f", arg: 1, scope: !13063, file: !12596, line: 651, type: !323)
!13067 = !DILocation(line: 651, column: 65, scope: !13063)
!13068 = !DILocalVariable(name: "__edi", scope: !13069, file: !12596, line: 653, type: !323)
!13069 = distinct !DILexicalBlock(scope: !13063, file: !12596, line: 653, column: 2)
!13070 = !DILocation(line: 653, column: 2, scope: !13069)
!13071 = !DILocalVariable(name: "__esi", scope: !13069, file: !12596, line: 653, type: !323)
!13072 = !DILocalVariable(name: "__edx", scope: !13069, file: !12596, line: 653, type: !323)
!13073 = !DILocalVariable(name: "__ecx", scope: !13069, file: !12596, line: 653, type: !323)
!13074 = !DILocalVariable(name: "__eax", scope: !13069, file: !12596, line: 653, type: !323)
!13075 = !{i32 -2145722672, i32 -2145721922, i32 -2145721688, i32 -2145721637, i32 -2145721609, i32 -2145721584, i32 -2145721900, i32 -2145721887, i32 -2145721449, i32 -2145721330, i32 -2145721795, i32 -2145721768, i32 -2145721740, i32 -2145721710}
!13076 = !DILocation(line: 654, column: 1, scope: !13063)
!13077 = distinct !DISubprogram(name: "gnttab_for_one_grant", scope: !12349, file: !12349, line: 297, type: !13078, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13078 = !DISubroutineType(types: !13079)
!13079 = !{null, !630, !7, !7, !13080, !576}
!13080 = !DIDerivedType(tag: DW_TAG_typedef, name: "xen_grant_fn_t", file: !12349, line: 287, baseType: !13081)
!13081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13082, size: 64)
!13082 = !DISubroutineType(types: !13083)
!13083 = !{null, !323, !7, !7, !576}
!13084 = !DILocalVariable(name: "page", arg: 1, scope: !13077, file: !12349, line: 297, type: !630)
!13085 = !DILocation(line: 297, column: 54, scope: !13077)
!13086 = !DILocalVariable(name: "offset", arg: 2, scope: !13077, file: !12349, line: 297, type: !7)
!13087 = !DILocation(line: 297, column: 73, scope: !13077)
!13088 = !DILocalVariable(name: "len", arg: 3, scope: !13077, file: !12349, line: 298, type: !7)
!13089 = !DILocation(line: 298, column: 15, scope: !13077)
!13090 = !DILocalVariable(name: "fn", arg: 4, scope: !13077, file: !12349, line: 298, type: !13080)
!13091 = !DILocation(line: 298, column: 35, scope: !13077)
!13092 = !DILocalVariable(name: "data", arg: 5, scope: !13077, file: !12349, line: 299, type: !576)
!13093 = !DILocation(line: 299, column: 12, scope: !13077)
!13094 = !DILocalVariable(name: "__UNIQUE_ID___x630", scope: !13095, file: !12349, line: 302, type: !7)
!13095 = distinct !DILexicalBlock(scope: !13077, file: !12349, line: 302, column: 8)
!13096 = !DILocation(line: 302, column: 8, scope: !13095)
!13097 = !DILocalVariable(name: "__UNIQUE_ID___y631", scope: !13095, file: !12349, line: 302, type: !7)
!13098 = !DILocation(line: 302, column: 6, scope: !13077)
!13099 = !DILocation(line: 305, column: 32, scope: !13077)
!13100 = !DILocation(line: 305, column: 38, scope: !13077)
!13101 = !DILocation(line: 305, column: 46, scope: !13077)
!13102 = !DILocation(line: 305, column: 51, scope: !13077)
!13103 = !DILocation(line: 305, column: 55, scope: !13077)
!13104 = !DILocation(line: 305, column: 2, scope: !13077)
!13105 = !DILocation(line: 306, column: 1, scope: !13077)
!13106 = distinct !DISubprogram(name: "xennet_tx_setup_grant", scope: !3, file: !3, line: 442, type: !13082, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13107 = !DILocalVariable(name: "gfn", arg: 1, scope: !13106, file: !3, line: 442, type: !323)
!13108 = !DILocation(line: 442, column: 49, scope: !13106)
!13109 = !DILocalVariable(name: "offset", arg: 2, scope: !13106, file: !3, line: 442, type: !7)
!13110 = !DILocation(line: 442, column: 67, scope: !13106)
!13111 = !DILocalVariable(name: "len", arg: 3, scope: !13106, file: !3, line: 443, type: !7)
!13112 = !DILocation(line: 443, column: 20, scope: !13106)
!13113 = !DILocalVariable(name: "data", arg: 4, scope: !13106, file: !3, line: 443, type: !576)
!13114 = !DILocation(line: 443, column: 31, scope: !13106)
!13115 = !DILocalVariable(name: "info", scope: !13106, file: !3, line: 445, type: !13116)
!13116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12646, size: 64)
!13117 = !DILocation(line: 445, column: 35, scope: !13106)
!13118 = !DILocation(line: 445, column: 42, scope: !13106)
!13119 = !DILocalVariable(name: "id", scope: !13106, file: !3, line: 446, type: !7)
!13120 = !DILocation(line: 446, column: 15, scope: !13106)
!13121 = !DILocalVariable(name: "tx", scope: !13106, file: !3, line: 447, type: !11138)
!13122 = !DILocation(line: 447, column: 31, scope: !13106)
!13123 = !DILocalVariable(name: "ref", scope: !13106, file: !3, line: 448, type: !10259)
!13124 = !DILocation(line: 448, column: 14, scope: !13106)
!13125 = !DILocalVariable(name: "page", scope: !13106, file: !3, line: 450, type: !630)
!13126 = !DILocation(line: 450, column: 15, scope: !13106)
!13127 = !DILocation(line: 450, column: 22, scope: !13106)
!13128 = !DILocation(line: 450, column: 28, scope: !13106)
!13129 = !DILocalVariable(name: "queue", scope: !13106, file: !3, line: 451, type: !10150)
!13130 = !DILocation(line: 451, column: 25, scope: !13106)
!13131 = !DILocation(line: 451, column: 33, scope: !13106)
!13132 = !DILocation(line: 451, column: 39, scope: !13106)
!13133 = !DILocalVariable(name: "skb", scope: !13106, file: !3, line: 452, type: !426)
!13134 = !DILocation(line: 452, column: 18, scope: !13106)
!13135 = !DILocation(line: 452, column: 24, scope: !13106)
!13136 = !DILocation(line: 452, column: 30, scope: !13106)
!13137 = !DILocation(line: 454, column: 29, scope: !13106)
!13138 = !DILocation(line: 454, column: 36, scope: !13106)
!13139 = !DILocation(line: 454, column: 53, scope: !13106)
!13140 = !DILocation(line: 454, column: 60, scope: !13106)
!13141 = !DILocation(line: 454, column: 7, scope: !13106)
!13142 = !DILocation(line: 454, column: 5, scope: !13106)
!13143 = !DILocation(line: 455, column: 7, scope: !13106)
!13144 = !DILocation(line: 455, column: 5, scope: !13106)
!13145 = !DILocation(line: 456, column: 38, scope: !13106)
!13146 = !DILocation(line: 456, column: 45, scope: !13106)
!13147 = !DILocation(line: 456, column: 8, scope: !13106)
!13148 = !DILocation(line: 456, column: 6, scope: !13106)
!13149 = !DILocalVariable(name: "__ret_warn_on", scope: !13150, file: !3, line: 457, type: !43)
!13150 = distinct !DILexicalBlock(scope: !13106, file: !3, line: 457, column: 2)
!13151 = !DILocation(line: 457, column: 2, scope: !13150)
!13152 = !DILocation(line: 457, column: 2, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13150, file: !3, line: 457, column: 2)
!13154 = !DILocation(line: 457, column: 2, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 457, column: 2)
!13156 = !DILocation(line: 457, column: 2, scope: !13157)
!13157 = distinct !DILexicalBlock(scope: !13155, file: !3, line: 457, column: 2)
!13158 = !DILocation(line: 457, column: 2, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13155, file: !3, line: 457, column: 2)
!13160 = !{i32 -2136838394, i32 -2136838365, i32 -2136838319, i32 -2136838261, i32 -2136838207, i32 -2136838153, i32 -2136838098, i32 -2136838067}
!13161 = !DILocation(line: 457, column: 2, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13155, file: !3, line: 457, column: 2)
!13163 = !{i32 -2136837648, i32 -2136837641, i32 -2136837589, i32 -2136837558, i32 -2136837528}
!13164 = !DILocation(line: 457, column: 2, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13155, file: !3, line: 457, column: 2)
!13166 = !DILocation(line: 459, column: 34, scope: !13106)
!13167 = !DILocation(line: 459, column: 39, scope: !13106)
!13168 = !DILocation(line: 459, column: 46, scope: !13106)
!13169 = !DILocation(line: 459, column: 52, scope: !13106)
!13170 = !DILocation(line: 459, column: 59, scope: !13106)
!13171 = !DILocation(line: 460, column: 6, scope: !13106)
!13172 = !DILocation(line: 459, column: 2, scope: !13106)
!13173 = !DILocation(line: 462, column: 27, scope: !13106)
!13174 = !DILocation(line: 462, column: 2, scope: !13106)
!13175 = !DILocation(line: 462, column: 9, scope: !13106)
!13176 = !DILocation(line: 462, column: 17, scope: !13106)
!13177 = !DILocation(line: 462, column: 21, scope: !13106)
!13178 = !DILocation(line: 462, column: 25, scope: !13106)
!13179 = !DILocation(line: 463, column: 29, scope: !13106)
!13180 = !DILocation(line: 463, column: 2, scope: !13106)
!13181 = !DILocation(line: 463, column: 9, scope: !13106)
!13182 = !DILocation(line: 463, column: 23, scope: !13106)
!13183 = !DILocation(line: 463, column: 27, scope: !13106)
!13184 = !DILocation(line: 464, column: 28, scope: !13106)
!13185 = !DILocation(line: 464, column: 2, scope: !13106)
!13186 = !DILocation(line: 464, column: 9, scope: !13106)
!13187 = !DILocation(line: 464, column: 22, scope: !13106)
!13188 = !DILocation(line: 464, column: 26, scope: !13106)
!13189 = !DILocation(line: 466, column: 11, scope: !13106)
!13190 = !DILocation(line: 466, column: 2, scope: !13106)
!13191 = !DILocation(line: 466, column: 6, scope: !13106)
!13192 = !DILocation(line: 466, column: 9, scope: !13106)
!13193 = !DILocation(line: 467, column: 13, scope: !13106)
!13194 = !DILocation(line: 467, column: 2, scope: !13106)
!13195 = !DILocation(line: 467, column: 6, scope: !13106)
!13196 = !DILocation(line: 467, column: 11, scope: !13106)
!13197 = !DILocation(line: 468, column: 15, scope: !13106)
!13198 = !DILocation(line: 468, column: 2, scope: !13106)
!13199 = !DILocation(line: 468, column: 6, scope: !13106)
!13200 = !DILocation(line: 468, column: 13, scope: !13106)
!13201 = !DILocation(line: 469, column: 13, scope: !13106)
!13202 = !DILocation(line: 469, column: 2, scope: !13106)
!13203 = !DILocation(line: 469, column: 6, scope: !13106)
!13204 = !DILocation(line: 469, column: 11, scope: !13106)
!13205 = !DILocation(line: 470, column: 2, scope: !13106)
!13206 = !DILocation(line: 470, column: 6, scope: !13106)
!13207 = !DILocation(line: 470, column: 12, scope: !13106)
!13208 = !DILocation(line: 472, column: 13, scope: !13106)
!13209 = !DILocation(line: 472, column: 2, scope: !13106)
!13210 = !DILocation(line: 472, column: 8, scope: !13106)
!13211 = !DILocation(line: 472, column: 11, scope: !13106)
!13212 = !DILocation(line: 473, column: 16, scope: !13106)
!13213 = !DILocation(line: 473, column: 20, scope: !13106)
!13214 = !DILocation(line: 473, column: 2, scope: !13106)
!13215 = !DILocation(line: 473, column: 8, scope: !13106)
!13216 = !DILocation(line: 473, column: 13, scope: !13106)
!13217 = !DILocation(line: 474, column: 1, scope: !13106)
!13218 = distinct !DISubprogram(name: "get_id_from_freelist", scope: !3, file: !3, line: 206, type: !13219, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13219 = !DISubroutineType(types: !13220)
!13220 = !{!483, !4838, !13221}
!13221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10274, size: 64)
!13222 = !DILocalVariable(name: "head", arg: 1, scope: !13218, file: !3, line: 206, type: !4838)
!13223 = !DILocation(line: 206, column: 54, scope: !13218)
!13224 = !DILocalVariable(name: "list", arg: 2, scope: !13218, file: !3, line: 207, type: !13221)
!13225 = !DILocation(line: 207, column: 26, scope: !13218)
!13226 = !DILocalVariable(name: "id", scope: !13218, file: !3, line: 209, type: !7)
!13227 = !DILocation(line: 209, column: 15, scope: !13218)
!13228 = !DILocation(line: 209, column: 21, scope: !13218)
!13229 = !DILocation(line: 209, column: 20, scope: !13218)
!13230 = !DILocation(line: 210, column: 10, scope: !13218)
!13231 = !DILocation(line: 210, column: 15, scope: !13218)
!13232 = !DILocation(line: 210, column: 19, scope: !13218)
!13233 = !DILocation(line: 210, column: 3, scope: !13218)
!13234 = !DILocation(line: 210, column: 8, scope: !13218)
!13235 = !DILocation(line: 211, column: 9, scope: !13218)
!13236 = !DILocation(line: 211, column: 2, scope: !13218)
!13237 = distinct !DISubprogram(name: "xennet_make_one_txreq", scope: !3, file: !3, line: 492, type: !13082, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13238 = !DILocalVariable(name: "gfn", arg: 1, scope: !13237, file: !3, line: 492, type: !323)
!13239 = !DILocation(line: 492, column: 49, scope: !13237)
!13240 = !DILocalVariable(name: "offset", arg: 2, scope: !13237, file: !3, line: 492, type: !7)
!13241 = !DILocation(line: 492, column: 67, scope: !13237)
!13242 = !DILocalVariable(name: "len", arg: 3, scope: !13237, file: !3, line: 493, type: !7)
!13243 = !DILocation(line: 493, column: 20, scope: !13237)
!13244 = !DILocalVariable(name: "data", arg: 4, scope: !13237, file: !3, line: 493, type: !576)
!13245 = !DILocation(line: 493, column: 31, scope: !13237)
!13246 = !DILocalVariable(name: "info", scope: !13237, file: !3, line: 495, type: !13116)
!13247 = !DILocation(line: 495, column: 35, scope: !13237)
!13248 = !DILocation(line: 495, column: 42, scope: !13237)
!13249 = !DILocation(line: 497, column: 2, scope: !13237)
!13250 = !DILocation(line: 497, column: 8, scope: !13237)
!13251 = !DILocation(line: 497, column: 12, scope: !13237)
!13252 = !DILocation(line: 497, column: 18, scope: !13237)
!13253 = !DILocation(line: 498, column: 10, scope: !13237)
!13254 = !DILocation(line: 498, column: 16, scope: !13237)
!13255 = !DILocation(line: 498, column: 2, scope: !13237)
!13256 = !DILocation(line: 499, column: 24, scope: !13237)
!13257 = !DILocation(line: 499, column: 29, scope: !13237)
!13258 = !DILocation(line: 499, column: 37, scope: !13237)
!13259 = !DILocation(line: 499, column: 42, scope: !13237)
!13260 = !DILocation(line: 499, column: 2, scope: !13237)
!13261 = !DILocation(line: 500, column: 1, scope: !13237)
!13262 = distinct !DISubprogram(name: "skb_get", scope: !428, file: !428, line: 1608, type: !13263, scopeLine: 1609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13263 = !DISubroutineType(types: !13264)
!13264 = !{!426, !426}
!13265 = !DILocalVariable(name: "skb", arg: 1, scope: !13262, file: !428, line: 1608, type: !426)
!13266 = !DILocation(line: 1608, column: 55, scope: !13262)
!13267 = !DILocation(line: 1610, column: 16, scope: !13262)
!13268 = !DILocation(line: 1610, column: 21, scope: !13262)
!13269 = !DILocation(line: 1610, column: 2, scope: !13262)
!13270 = !DILocation(line: 1611, column: 9, scope: !13262)
!13271 = !DILocation(line: 1611, column: 2, scope: !13262)
!13272 = distinct !DISubprogram(name: "refcount_inc", scope: !1278, file: !1278, line: 265, type: !13273, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13273 = !DISubroutineType(types: !13274)
!13274 = !{null, !13275}
!13275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!13276 = !DILocalVariable(name: "r", arg: 1, scope: !13272, file: !1278, line: 265, type: !13275)
!13277 = !DILocation(line: 265, column: 45, scope: !13272)
!13278 = !DILocation(line: 267, column: 17, scope: !13272)
!13279 = !DILocation(line: 267, column: 2, scope: !13272)
!13280 = !DILocation(line: 268, column: 1, scope: !13272)
!13281 = distinct !DISubprogram(name: "__refcount_inc", scope: !1278, file: !1278, line: 248, type: !13282, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13282 = !DISubroutineType(types: !13283)
!13283 = !{null, !13275, !545}
!13284 = !DILocalVariable(name: "r", arg: 1, scope: !13281, file: !1278, line: 248, type: !13275)
!13285 = !DILocation(line: 248, column: 47, scope: !13281)
!13286 = !DILocalVariable(name: "oldp", arg: 2, scope: !13281, file: !1278, line: 248, type: !545)
!13287 = !DILocation(line: 248, column: 55, scope: !13281)
!13288 = !DILocation(line: 250, column: 20, scope: !13281)
!13289 = !DILocation(line: 250, column: 23, scope: !13281)
!13290 = !DILocation(line: 250, column: 2, scope: !13281)
!13291 = !DILocation(line: 251, column: 1, scope: !13281)
!13292 = distinct !DISubprogram(name: "__refcount_add", scope: !1278, file: !1278, line: 191, type: !13293, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13293 = !DISubroutineType(types: !13294)
!13294 = !{null, !43, !13275, !545}
!13295 = !DILocalVariable(name: "i", arg: 1, scope: !13296, file: !13297, line: 182, type: !43)
!13296 = distinct !DISubprogram(name: "arch_atomic_fetch_add", scope: !13297, file: !13297, line: 182, type: !13298, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13297 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!13298 = !DISubroutineType(types: !13299)
!13299 = !{!43, !43, !10146}
!13300 = !DILocation(line: 182, column: 54, scope: !13296, inlinedAt: !13301)
!13301 = distinct !DILocation(line: 143, column: 9, scope: !13302, inlinedAt: !13304)
!13302 = distinct !DISubprogram(name: "atomic_fetch_add_relaxed", scope: !13303, file: !13303, line: 140, type: !13298, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13303 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!13304 = distinct !DILocation(line: 193, column: 12, scope: !13292)
!13305 = !DILocalVariable(name: "v", arg: 2, scope: !13296, file: !13297, line: 182, type: !10146)
!13306 = !DILocation(line: 182, column: 67, scope: !13296, inlinedAt: !13301)
!13307 = !DILocalVariable(name: "__ret", scope: !13308, file: !13297, line: 184, type: !43)
!13308 = distinct !DILexicalBlock(scope: !13296, file: !13297, line: 184, column: 9)
!13309 = !DILocation(line: 184, column: 9, scope: !13308, inlinedAt: !13301)
!13310 = !DILocalVariable(name: "v", arg: 1, scope: !13311, file: !12167, line: 99, type: !12170)
!13311 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !12167, file: !12167, line: 99, type: !12168, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13312 = !DILocation(line: 99, column: 79, scope: !13311, inlinedAt: !13313)
!13313 = distinct !DILocation(line: 142, column: 2, scope: !13302, inlinedAt: !13304)
!13314 = !DILocalVariable(name: "size", arg: 2, scope: !13311, file: !12167, line: 99, type: !600)
!13315 = !DILocation(line: 99, column: 89, scope: !13311, inlinedAt: !13313)
!13316 = !DILocalVariable(name: "i", arg: 1, scope: !13302, file: !13303, line: 140, type: !43)
!13317 = !DILocation(line: 140, column: 30, scope: !13302, inlinedAt: !13304)
!13318 = !DILocalVariable(name: "v", arg: 2, scope: !13302, file: !13303, line: 140, type: !10146)
!13319 = !DILocation(line: 140, column: 43, scope: !13302, inlinedAt: !13304)
!13320 = !DILocalVariable(name: "i", arg: 1, scope: !13292, file: !1278, line: 191, type: !43)
!13321 = !DILocation(line: 191, column: 39, scope: !13292)
!13322 = !DILocalVariable(name: "r", arg: 2, scope: !13292, file: !1278, line: 191, type: !13275)
!13323 = !DILocation(line: 191, column: 54, scope: !13292)
!13324 = !DILocalVariable(name: "oldp", arg: 3, scope: !13292, file: !1278, line: 191, type: !545)
!13325 = !DILocation(line: 191, column: 62, scope: !13292)
!13326 = !DILocalVariable(name: "old", scope: !13292, file: !1278, line: 193, type: !43)
!13327 = !DILocation(line: 193, column: 6, scope: !13292)
!13328 = !DILocation(line: 193, column: 37, scope: !13292)
!13329 = !DILocation(line: 193, column: 41, scope: !13292)
!13330 = !DILocation(line: 193, column: 44, scope: !13292)
!13331 = !DILocation(line: 142, column: 31, scope: !13302, inlinedAt: !13304)
!13332 = !DILocation(line: 101, column: 20, scope: !13311, inlinedAt: !13313)
!13333 = !DILocation(line: 101, column: 23, scope: !13311, inlinedAt: !13313)
!13334 = !DILocation(line: 101, column: 2, scope: !13311, inlinedAt: !13313)
!13335 = !DILocation(line: 102, column: 2, scope: !13311, inlinedAt: !13313)
!13336 = !DILocation(line: 143, column: 39, scope: !13302, inlinedAt: !13304)
!13337 = !DILocation(line: 143, column: 42, scope: !13302, inlinedAt: !13304)
!13338 = !{i32 -2146561345}
!13339 = !DILocation(line: 195, column: 6, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13292, file: !1278, line: 195, column: 6)
!13341 = !DILocation(line: 195, column: 6, scope: !13292)
!13342 = !DILocation(line: 196, column: 11, scope: !13340)
!13343 = !DILocation(line: 196, column: 4, scope: !13340)
!13344 = !DILocation(line: 196, column: 9, scope: !13340)
!13345 = !DILocation(line: 196, column: 3, scope: !13340)
!13346 = !DILocation(line: 198, column: 6, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13292, file: !1278, line: 198, column: 6)
!13348 = !DILocation(line: 198, column: 6, scope: !13292)
!13349 = !DILocation(line: 199, column: 26, scope: !13347)
!13350 = !DILocation(line: 199, column: 3, scope: !13347)
!13351 = !DILocation(line: 200, column: 11, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13347, file: !1278, line: 200, column: 11)
!13353 = !DILocation(line: 200, column: 11, scope: !13347)
!13354 = !DILocation(line: 201, column: 26, scope: !13352)
!13355 = !DILocation(line: 201, column: 3, scope: !13352)
!13356 = !DILocation(line: 202, column: 1, scope: !13292)
!13357 = distinct !DISubprogram(name: "skb_clone_tx_timestamp", scope: !428, file: !428, line: 3820, type: !2861, scopeLine: 3821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13358 = !DILocalVariable(name: "skb", arg: 1, scope: !13357, file: !428, line: 3820, type: !426)
!13359 = !DILocation(line: 3820, column: 59, scope: !13357)
!13360 = !DILocation(line: 3822, column: 1, scope: !13357)
!13361 = distinct !DISubprogram(name: "add_id_to_freelist", scope: !3, file: !3, line: 199, type: !13362, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13362 = !DISubroutineType(types: !13363)
!13363 = !{null, !4838, !13221, !483}
!13364 = !DILocalVariable(name: "head", arg: 1, scope: !13361, file: !3, line: 199, type: !4838)
!13365 = !DILocation(line: 199, column: 42, scope: !13361)
!13366 = !DILocalVariable(name: "list", arg: 2, scope: !13361, file: !3, line: 199, type: !13221)
!13367 = !DILocation(line: 199, column: 65, scope: !13361)
!13368 = !DILocalVariable(name: "id", arg: 3, scope: !13361, file: !3, line: 200, type: !483)
!13369 = !DILocation(line: 200, column: 26, scope: !13361)
!13370 = !DILocation(line: 202, column: 22, scope: !13361)
!13371 = !DILocation(line: 202, column: 27, scope: !13361)
!13372 = !DILocation(line: 202, column: 33, scope: !13361)
!13373 = !DILocation(line: 202, column: 32, scope: !13361)
!13374 = !DILocation(line: 202, column: 2, scope: !13361)
!13375 = !DILocation(line: 203, column: 10, scope: !13361)
!13376 = !DILocation(line: 203, column: 3, scope: !13361)
!13377 = !DILocation(line: 203, column: 8, scope: !13361)
!13378 = !DILocation(line: 204, column: 1, scope: !13361)
!13379 = distinct !DISubprogram(name: "dev_kfree_skb_irq", scope: !42, file: !42, line: 3807, type: !2861, scopeLine: 3808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13380 = !DILocalVariable(name: "skb", arg: 1, scope: !13379, file: !42, line: 3807, type: !426)
!13381 = !DILocation(line: 3807, column: 54, scope: !13379)
!13382 = !DILocation(line: 3809, column: 22, scope: !13379)
!13383 = !DILocation(line: 3809, column: 2, scope: !13379)
!13384 = !DILocation(line: 3810, column: 1, scope: !13379)
!13385 = distinct !DISubprogram(name: "xennet_maybe_wake_tx", scope: !3, file: !3, line: 259, type: !11925, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13386 = !DILocalVariable(name: "queue", arg: 1, scope: !13385, file: !3, line: 259, type: !10150)
!13387 = !DILocation(line: 259, column: 57, scope: !13385)
!13388 = !DILocalVariable(name: "dev", scope: !13385, file: !3, line: 261, type: !301)
!13389 = !DILocation(line: 261, column: 21, scope: !13385)
!13390 = !DILocation(line: 261, column: 27, scope: !13385)
!13391 = !DILocation(line: 261, column: 34, scope: !13385)
!13392 = !DILocation(line: 261, column: 40, scope: !13385)
!13393 = !DILocalVariable(name: "dev_queue", scope: !13385, file: !3, line: 262, type: !9308)
!13394 = !DILocation(line: 262, column: 23, scope: !13385)
!13395 = !DILocation(line: 262, column: 55, scope: !13385)
!13396 = !DILocation(line: 262, column: 60, scope: !13385)
!13397 = !DILocation(line: 262, column: 67, scope: !13385)
!13398 = !DILocation(line: 262, column: 35, scope: !13385)
!13399 = !DILocation(line: 264, column: 6, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 264, column: 6)
!13401 = !DILocation(line: 264, column: 50, scope: !13400)
!13402 = !DILocation(line: 265, column: 33, scope: !13400)
!13403 = !DILocation(line: 265, column: 6, scope: !13400)
!13404 = !DILocation(line: 265, column: 40, scope: !13400)
!13405 = !DILocation(line: 266, column: 6, scope: !13400)
!13406 = !DILocation(line: 264, column: 6, scope: !13385)
!13407 = !DILocation(line: 267, column: 43, scope: !13400)
!13408 = !DILocation(line: 267, column: 48, scope: !13400)
!13409 = !DILocation(line: 267, column: 55, scope: !13400)
!13410 = !DILocation(line: 267, column: 23, scope: !13400)
!13411 = !DILocation(line: 267, column: 3, scope: !13400)
!13412 = !DILocation(line: 268, column: 1, scope: !13385)
!13413 = distinct !DISubprogram(name: "skb_entry_set_link", scope: !3, file: !3, line: 184, type: !13414, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13414 = !DISubroutineType(types: !13415)
!13415 = !{null, !13221, !483}
!13416 = !DILocalVariable(name: "list", arg: 1, scope: !13413, file: !3, line: 184, type: !13221)
!13417 = !DILocation(line: 184, column: 49, scope: !13413)
!13418 = !DILocalVariable(name: "id", arg: 2, scope: !13413, file: !3, line: 184, type: !483)
!13419 = !DILocation(line: 184, column: 70, scope: !13413)
!13420 = !DILocation(line: 186, column: 15, scope: !13413)
!13421 = !DILocation(line: 186, column: 2, scope: !13413)
!13422 = !DILocation(line: 186, column: 8, scope: !13413)
!13423 = !DILocation(line: 186, column: 13, scope: !13413)
!13424 = !DILocation(line: 187, column: 1, scope: !13413)
!13425 = distinct !DISubprogram(name: "netif_tx_queue_stopped", scope: !42, file: !42, line: 3343, type: !13426, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13426 = !DISubroutineType(types: !13427)
!13427 = !{!546, !13428}
!13428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13429, size: 64)
!13429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9309)
!13430 = !DILocalVariable(name: "dev_queue", arg: 1, scope: !13425, file: !42, line: 3343, type: !13428)
!13431 = !DILocation(line: 3343, column: 70, scope: !13425)
!13432 = !DILocation(line: 3345, column: 43, scope: !13425)
!13433 = !DILocation(line: 3345, column: 54, scope: !13425)
!13434 = !DILocation(line: 3345, column: 9, scope: !13425)
!13435 = !DILocation(line: 3345, column: 2, scope: !13425)
!13436 = distinct !DISubprogram(name: "netif_running", scope: !42, file: !42, line: 3556, type: !11915, scopeLine: 3557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13437 = !DILocalVariable(name: "dev", arg: 1, scope: !13436, file: !42, line: 3556, type: !2893)
!13438 = !DILocation(line: 3556, column: 59, scope: !13436)
!13439 = !DILocation(line: 3558, column: 39, scope: !13436)
!13440 = !DILocation(line: 3558, column: 44, scope: !13436)
!13441 = !DILocation(line: 3558, column: 9, scope: !13436)
!13442 = !DILocation(line: 3558, column: 2, scope: !13436)
!13443 = distinct !DISubprogram(name: "set_bit", scope: !12204, file: !12204, line: 26, type: !12205, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13444 = !DILocalVariable(name: "nr", arg: 1, scope: !13445, file: !12152, line: 52, type: !519)
!13445 = distinct !DISubprogram(name: "arch_set_bit", scope: !12152, file: !12152, line: 52, type: !12205, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13446 = !DILocation(line: 52, column: 19, scope: !13445, inlinedAt: !13447)
!13447 = distinct !DILocation(line: 29, column: 2, scope: !13443)
!13448 = !DILocalVariable(name: "addr", arg: 2, scope: !13445, file: !12152, line: 52, type: !12207)
!13449 = !DILocation(line: 52, column: 47, scope: !13445, inlinedAt: !13447)
!13450 = !DILocation(line: 84, column: 74, scope: !12215, inlinedAt: !13451)
!13451 = distinct !DILocation(line: 28, column: 2, scope: !13443)
!13452 = !DILocation(line: 84, column: 84, scope: !12215, inlinedAt: !13451)
!13453 = !DILocalVariable(name: "nr", arg: 1, scope: !13443, file: !12204, line: 26, type: !519)
!13454 = !DILocation(line: 26, column: 33, scope: !13443)
!13455 = !DILocalVariable(name: "addr", arg: 2, scope: !13443, file: !12204, line: 26, type: !12207)
!13456 = !DILocation(line: 26, column: 61, scope: !13443)
!13457 = !DILocation(line: 28, column: 26, scope: !13443)
!13458 = !DILocation(line: 28, column: 33, scope: !13443)
!13459 = !DILocation(line: 28, column: 31, scope: !13443)
!13460 = !DILocation(line: 86, column: 20, scope: !12215, inlinedAt: !13451)
!13461 = !DILocation(line: 86, column: 23, scope: !12215, inlinedAt: !13451)
!13462 = !DILocation(line: 86, column: 2, scope: !12215, inlinedAt: !13451)
!13463 = !DILocation(line: 87, column: 2, scope: !12215, inlinedAt: !13451)
!13464 = !DILocation(line: 29, column: 15, scope: !13443)
!13465 = !DILocation(line: 29, column: 19, scope: !13443)
!13466 = !DILocation(line: 54, column: 27, scope: !13467, inlinedAt: !13447)
!13467 = distinct !DILexicalBlock(scope: !13445, file: !12152, line: 54, column: 6)
!13468 = !DILocation(line: 54, column: 6, scope: !13467, inlinedAt: !13447)
!13469 = !DILocation(line: 54, column: 6, scope: !13445, inlinedAt: !13447)
!13470 = !DILocation(line: 56, column: 6, scope: !13471, inlinedAt: !13447)
!13471 = distinct !DILexicalBlock(scope: !13467, file: !12152, line: 54, column: 32)
!13472 = !DILocation(line: 57, column: 12, scope: !13471, inlinedAt: !13447)
!13473 = !DILocation(line: 55, column: 3, scope: !13471, inlinedAt: !13447)
!13474 = !{i32 -2147091401}
!13475 = !DILocation(line: 59, column: 2, scope: !13471, inlinedAt: !13447)
!13476 = !DILocation(line: 61, column: 8, scope: !13477, inlinedAt: !13447)
!13477 = distinct !DILexicalBlock(scope: !13467, file: !12152, line: 59, column: 9)
!13478 = !DILocation(line: 61, column: 32, scope: !13477, inlinedAt: !13447)
!13479 = !DILocation(line: 60, column: 3, scope: !13477, inlinedAt: !13447)
!13480 = !{i32 -2147091269}
!13481 = !DILocation(line: 30, column: 1, scope: !13443)
!13482 = distinct !DISubprogram(name: "skb_get_hash", scope: !428, file: !428, line: 1360, type: !13483, scopeLine: 1361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13483 = !DISubroutineType(types: !13484)
!13484 = !{!474, !426}
!13485 = !DILocalVariable(name: "skb", arg: 1, scope: !13482, file: !428, line: 1360, type: !426)
!13486 = !DILocation(line: 1360, column: 50, scope: !13482)
!13487 = !DILocation(line: 1362, column: 7, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13482, file: !428, line: 1362, column: 6)
!13489 = !DILocation(line: 1362, column: 12, scope: !13488)
!13490 = !DILocation(line: 1362, column: 20, scope: !13488)
!13491 = !DILocation(line: 1362, column: 24, scope: !13488)
!13492 = !DILocation(line: 1362, column: 29, scope: !13488)
!13493 = !DILocation(line: 1362, column: 6, scope: !13482)
!13494 = !DILocation(line: 1363, column: 18, scope: !13488)
!13495 = !DILocation(line: 1363, column: 3, scope: !13488)
!13496 = !DILocation(line: 1365, column: 9, scope: !13482)
!13497 = !DILocation(line: 1365, column: 14, scope: !13482)
!13498 = !DILocation(line: 1365, column: 2, scope: !13482)
!13499 = distinct !DISubprogram(name: "u64_stats_fetch_begin_irq", scope: !2064, file: !2064, line: 203, type: !13500, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13500 = !DISubroutineType(types: !13501)
!13501 = !{!7, !13502}
!13502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13503, size: 64)
!13503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2063)
!13504 = !DILocalVariable(name: "syncp", arg: 1, scope: !13499, file: !2064, line: 203, type: !13502)
!13505 = !DILocation(line: 203, column: 83, scope: !13499)
!13506 = !DILocation(line: 208, column: 33, scope: !13499)
!13507 = !DILocation(line: 208, column: 9, scope: !13499)
!13508 = !DILocation(line: 208, column: 2, scope: !13499)
!13509 = distinct !DISubprogram(name: "u64_stats_fetch_retry_irq", scope: !2064, file: !2064, line: 211, type: !13510, scopeLine: 213, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13510 = !DISubroutineType(types: !13511)
!13511 = !{!546, !13502, !7}
!13512 = !DILocalVariable(name: "syncp", arg: 1, scope: !13509, file: !2064, line: 211, type: !13502)
!13513 = !DILocation(line: 211, column: 75, scope: !13509)
!13514 = !DILocalVariable(name: "start", arg: 2, scope: !13509, file: !2064, line: 212, type: !7)
!13515 = !DILocation(line: 212, column: 24, scope: !13509)
!13516 = !DILocation(line: 217, column: 33, scope: !13509)
!13517 = !DILocation(line: 217, column: 40, scope: !13509)
!13518 = !DILocation(line: 217, column: 9, scope: !13509)
!13519 = !DILocation(line: 217, column: 2, scope: !13509)
!13520 = distinct !DISubprogram(name: "__u64_stats_fetch_begin", scope: !2064, file: !2064, line: 161, type: !13500, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13521 = !DILocalVariable(name: "syncp", arg: 1, scope: !13520, file: !2064, line: 161, type: !13502)
!13522 = !DILocation(line: 161, column: 81, scope: !13520)
!13523 = !DILocation(line: 166, column: 2, scope: !13520)
!13524 = distinct !DISubprogram(name: "__u64_stats_fetch_retry", scope: !2064, file: !2064, line: 178, type: !13510, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13525 = !DILocalVariable(name: "syncp", arg: 1, scope: !13524, file: !2064, line: 178, type: !13502)
!13526 = !DILocation(line: 178, column: 73, scope: !13524)
!13527 = !DILocalVariable(name: "start", arg: 2, scope: !13524, file: !2064, line: 179, type: !7)
!13528 = !DILocation(line: 179, column: 20, scope: !13524)
!13529 = !DILocation(line: 184, column: 2, scope: !13524)
!13530 = distinct !DISubprogram(name: "xennet_xdp_set", scope: !3, file: !3, line: 1437, type: !13531, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13531 = !DISubroutineType(types: !13532)
!13532 = !{!43, !301, !3120, !2610}
!13533 = !DILocalVariable(name: "dev", arg: 1, scope: !13530, file: !3, line: 1437, type: !301)
!13534 = !DILocation(line: 1437, column: 46, scope: !13530)
!13535 = !DILocalVariable(name: "prog", arg: 2, scope: !13530, file: !3, line: 1437, type: !3120)
!13536 = !DILocation(line: 1437, column: 68, scope: !13530)
!13537 = !DILocalVariable(name: "extack", arg: 3, scope: !13530, file: !3, line: 1438, type: !2610)
!13538 = !DILocation(line: 1438, column: 30, scope: !13530)
!13539 = !DILocalVariable(name: "max_mtu", scope: !13530, file: !3, line: 1440, type: !323)
!13540 = !DILocation(line: 1440, column: 16, scope: !13530)
!13541 = !DILocalVariable(name: "np", scope: !13530, file: !3, line: 1441, type: !10156)
!13542 = !DILocation(line: 1441, column: 24, scope: !13530)
!13543 = !DILocation(line: 1441, column: 41, scope: !13530)
!13544 = !DILocation(line: 1441, column: 29, scope: !13530)
!13545 = !DILocalVariable(name: "old_prog", scope: !13530, file: !3, line: 1442, type: !3120)
!13546 = !DILocation(line: 1442, column: 19, scope: !13530)
!13547 = !DILocalVariable(name: "i", scope: !13530, file: !3, line: 1443, type: !7)
!13548 = !DILocation(line: 1443, column: 15, scope: !13530)
!13549 = !DILocalVariable(name: "err", scope: !13530, file: !3, line: 1443, type: !7)
!13550 = !DILocation(line: 1443, column: 18, scope: !13530)
!13551 = !DILocation(line: 1445, column: 6, scope: !13552)
!13552 = distinct !DILexicalBlock(scope: !13530, file: !3, line: 1445, column: 6)
!13553 = !DILocation(line: 1445, column: 11, scope: !13552)
!13554 = !DILocation(line: 1445, column: 17, scope: !13552)
!13555 = !DILocation(line: 1445, column: 15, scope: !13552)
!13556 = !DILocation(line: 1445, column: 6, scope: !13530)
!13557 = !DILocation(line: 1446, column: 15, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13552, file: !3, line: 1445, column: 26)
!13559 = !DILocation(line: 1446, column: 56, scope: !13558)
!13560 = !DILocation(line: 1446, column: 3, scope: !13558)
!13561 = !DILocation(line: 1447, column: 3, scope: !13558)
!13562 = !DILocation(line: 1450, column: 7, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13530, file: !3, line: 1450, column: 6)
!13564 = !DILocation(line: 1450, column: 11, scope: !13563)
!13565 = !DILocation(line: 1450, column: 6, scope: !13530)
!13566 = !DILocation(line: 1451, column: 3, scope: !13563)
!13567 = !DILocation(line: 1453, column: 22, scope: !13530)
!13568 = !DILocation(line: 1453, column: 26, scope: !13530)
!13569 = !DILocation(line: 1453, column: 2, scope: !13530)
!13570 = !DILocation(line: 1455, column: 28, scope: !13530)
!13571 = !DILocation(line: 1455, column: 32, scope: !13530)
!13572 = !DILocation(line: 1455, column: 8, scope: !13530)
!13573 = !DILocation(line: 1455, column: 6, scope: !13530)
!13574 = !DILocation(line: 1457, column: 6, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13530, file: !3, line: 1457, column: 6)
!13576 = !DILocation(line: 1457, column: 6, scope: !13530)
!13577 = !DILocation(line: 1458, column: 10, scope: !13575)
!13578 = !DILocation(line: 1458, column: 3, scope: !13575)
!13579 = !DILocation(line: 1461, column: 2, scope: !13530)
!13580 = !DILocation(line: 1461, column: 2, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13530, file: !3, line: 1461, column: 2)
!13582 = !DILocation(line: 1461, column: 2, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13581, file: !3, line: 1461, column: 2)
!13584 = !DILocation(line: 1461, column: 2, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13583, file: !3, line: 1461, column: 2)
!13586 = !DILocation(line: 1461, column: 2, scope: !13587)
!13587 = distinct !DILexicalBlock(scope: !13581, file: !3, line: 1461, column: 2)
!13588 = !DILocalVariable(name: "__wq_entry", scope: !13589, file: !3, line: 1461, type: !1060)
!13589 = distinct !DILexicalBlock(scope: !13581, file: !3, line: 1461, column: 2)
!13590 = !DILocation(line: 1461, column: 2, scope: !13589)
!13591 = !DILocalVariable(name: "__ret", scope: !13589, file: !3, line: 1461, type: !519)
!13592 = !DILocalVariable(name: "__int", scope: !13593, file: !3, line: 1461, type: !519)
!13593 = distinct !DILexicalBlock(scope: !13594, file: !3, line: 1461, column: 2)
!13594 = distinct !DILexicalBlock(scope: !13595, file: !3, line: 1461, column: 2)
!13595 = distinct !DILexicalBlock(scope: !13589, file: !3, line: 1461, column: 2)
!13596 = !DILocation(line: 1461, column: 2, scope: !13593)
!13597 = !DILocation(line: 1461, column: 2, scope: !13598)
!13598 = distinct !DILexicalBlock(scope: !13593, file: !3, line: 1461, column: 2)
!13599 = !DILocation(line: 1461, column: 2, scope: !13594)
!13600 = distinct !{!13600, !13601, !13601}
!13601 = !DILocation(line: 1461, column: 2, scope: !13595)
!13602 = !DILabel(scope: !13589, name: "__out", file: !3, line: 1461)
!13603 = !DILocation(line: 1464, column: 2, scope: !13530)
!13604 = !DILocation(line: 1464, column: 6, scope: !13530)
!13605 = !DILocation(line: 1464, column: 27, scope: !13530)
!13606 = !DILocation(line: 1466, column: 13, scope: !13607)
!13607 = distinct !DILexicalBlock(scope: !13530, file: !3, line: 1466, column: 13)
!13608 = !DILocation(line: 1466, column: 13, scope: !13609)
!13609 = distinct !DILexicalBlock(scope: !13607, file: !3, line: 1466, column: 13)
!13610 = !DILocation(line: 1466, column: 11, scope: !13530)
!13611 = !DILocation(line: 1468, column: 6, scope: !13612)
!13612 = distinct !DILexicalBlock(scope: !13530, file: !3, line: 1468, column: 6)
!13613 = !DILocation(line: 1468, column: 6, scope: !13530)
!13614 = !DILocation(line: 1469, column: 16, scope: !13612)
!13615 = !DILocation(line: 1469, column: 22, scope: !13612)
!13616 = !DILocation(line: 1469, column: 27, scope: !13612)
!13617 = !DILocation(line: 1469, column: 3, scope: !13612)
!13618 = !DILocation(line: 1471, column: 9, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13530, file: !3, line: 1471, column: 2)
!13620 = !DILocation(line: 1471, column: 7, scope: !13619)
!13621 = !DILocation(line: 1471, column: 14, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13619, file: !3, line: 1471, column: 2)
!13623 = !DILocation(line: 1471, column: 18, scope: !13622)
!13624 = !DILocation(line: 1471, column: 23, scope: !13622)
!13625 = !DILocation(line: 1471, column: 16, scope: !13622)
!13626 = !DILocation(line: 1471, column: 2, scope: !13619)
!13627 = !DILocation(line: 1472, column: 3, scope: !13622)
!13628 = !DILocalVariable(name: "_r_a_p__v", scope: !13629, file: !3, line: 1472, type: !10143)
!13629 = distinct !DILexicalBlock(scope: !13622, file: !3, line: 1472, column: 3)
!13630 = !DILocation(line: 1472, column: 3, scope: !13629)
!13631 = !DILocation(line: 1472, column: 3, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13629, file: !3, line: 1472, column: 3)
!13633 = !DILocation(line: 1472, column: 3, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13632, file: !3, line: 1472, column: 3)
!13635 = !DILocation(line: 1472, column: 3, scope: !13636)
!13636 = distinct !DILexicalBlock(scope: !13634, file: !3, line: 1472, column: 3)
!13637 = !DILocation(line: 1472, column: 3, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13634, file: !3, line: 1472, column: 3)
!13639 = !DILocation(line: 1472, column: 3, scope: !13640)
!13640 = distinct !DILexicalBlock(scope: !13632, file: !3, line: 1472, column: 3)
!13641 = !DILocation(line: 1472, column: 3, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13640, file: !3, line: 1472, column: 3)
!13643 = !{i32 -2136780195}
!13644 = !DILocation(line: 1472, column: 3, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13640, file: !3, line: 1472, column: 3)
!13646 = !DILocation(line: 1472, column: 3, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13645, file: !3, line: 1472, column: 3)
!13648 = !DILocation(line: 1472, column: 3, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13645, file: !3, line: 1472, column: 3)
!13650 = !DILocation(line: 1471, column: 43, scope: !13622)
!13651 = !DILocation(line: 1471, column: 2, scope: !13622)
!13652 = distinct !{!13652, !13626, !13653}
!13653 = !DILocation(line: 1472, column: 3, scope: !13619)
!13654 = !DILocation(line: 1474, column: 6, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13530, file: !3, line: 1474, column: 6)
!13656 = !DILocation(line: 1474, column: 6, scope: !13530)
!13657 = !DILocation(line: 1475, column: 10, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13655, file: !3, line: 1475, column: 3)
!13659 = !DILocation(line: 1475, column: 8, scope: !13658)
!13660 = !DILocation(line: 1475, column: 15, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 1475, column: 3)
!13662 = !DILocation(line: 1475, column: 19, scope: !13661)
!13663 = !DILocation(line: 1475, column: 24, scope: !13661)
!13664 = !DILocation(line: 1475, column: 17, scope: !13661)
!13665 = !DILocation(line: 1475, column: 3, scope: !13658)
!13666 = !DILocation(line: 1476, column: 17, scope: !13661)
!13667 = !DILocation(line: 1476, column: 4, scope: !13661)
!13668 = !DILocation(line: 1475, column: 44, scope: !13661)
!13669 = !DILocation(line: 1475, column: 3, scope: !13661)
!13670 = distinct !{!13670, !13665, !13671}
!13671 = !DILocation(line: 1476, column: 25, scope: !13658)
!13672 = !DILocation(line: 1478, column: 22, scope: !13530)
!13673 = !DILocation(line: 1478, column: 26, scope: !13530)
!13674 = !DILocation(line: 1478, column: 2, scope: !13530)
!13675 = !DILocation(line: 1480, column: 2, scope: !13530)
!13676 = !DILocation(line: 1481, column: 1, scope: !13530)
!13677 = distinct !DISubprogram(name: "talk_to_netback_xdp", scope: !3, file: !3, line: 1422, type: !13678, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13678 = !DISubroutineType(types: !13679)
!13679 = !{!43, !10156, !43}
!13680 = !DILocalVariable(name: "np", arg: 1, scope: !13677, file: !3, line: 1422, type: !10156)
!13681 = !DILocation(line: 1422, column: 54, scope: !13677)
!13682 = !DILocalVariable(name: "xdp", arg: 2, scope: !13677, file: !3, line: 1422, type: !43)
!13683 = !DILocation(line: 1422, column: 62, scope: !13677)
!13684 = !DILocalVariable(name: "err", scope: !13677, file: !3, line: 1424, type: !43)
!13685 = !DILocation(line: 1424, column: 6, scope: !13677)
!13686 = !DILocalVariable(name: "headroom", scope: !13677, file: !3, line: 1425, type: !483)
!13687 = !DILocation(line: 1425, column: 17, scope: !13677)
!13688 = !DILocation(line: 1427, column: 13, scope: !13677)
!13689 = !DILocation(line: 1427, column: 11, scope: !13677)
!13690 = !DILocation(line: 1428, column: 22, scope: !13677)
!13691 = !DILocation(line: 1428, column: 31, scope: !13677)
!13692 = !DILocation(line: 1428, column: 35, scope: !13677)
!13693 = !DILocation(line: 1428, column: 42, scope: !13677)
!13694 = !DILocation(line: 1430, column: 8, scope: !13677)
!13695 = !DILocation(line: 1428, column: 8, scope: !13677)
!13696 = !DILocation(line: 1428, column: 6, scope: !13677)
!13697 = !DILocation(line: 1431, column: 6, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13677, file: !3, line: 1431, column: 6)
!13699 = !DILocation(line: 1431, column: 6, scope: !13677)
!13700 = !DILocation(line: 1432, column: 3, scope: !13698)
!13701 = !DILocation(line: 1434, column: 9, scope: !13677)
!13702 = !DILocation(line: 1434, column: 2, scope: !13677)
!13703 = distinct !DISubprogram(name: "bpf_prog_add", scope: !151, file: !151, line: 1463, type: !13704, scopeLine: 1464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13704 = !DISubroutineType(types: !13705)
!13705 = !{null, !3120, !43}
!13706 = !DILocalVariable(name: "prog", arg: 1, scope: !13703, file: !151, line: 1463, type: !3120)
!13707 = !DILocation(line: 1463, column: 50, scope: !13703)
!13708 = !DILocalVariable(name: "i", arg: 2, scope: !13703, file: !151, line: 1463, type: !43)
!13709 = !DILocation(line: 1463, column: 60, scope: !13703)
!13710 = !DILocation(line: 1465, column: 1, scope: !13703)
!13711 = distinct !DISubprogram(name: "bpf_prog_put", scope: !151, file: !151, line: 1471, type: !13712, scopeLine: 1472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13712 = !DISubroutineType(types: !13713)
!13713 = !{null, !3120}
!13714 = !DILocalVariable(name: "prog", arg: 1, scope: !13711, file: !151, line: 1471, type: !3120)
!13715 = !DILocation(line: 1471, column: 50, scope: !13711)
!13716 = !DILocation(line: 1473, column: 1, scope: !13711)
!13717 = distinct !DISubprogram(name: "xennet_xdp_xmit_one", scope: !3, file: !3, line: 577, type: !13718, scopeLine: 580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13718 = !DISubroutineType(types: !13719)
!13719 = !{!43, !301, !10150, !8508}
!13720 = !DILocalVariable(name: "dev", arg: 1, scope: !13717, file: !3, line: 577, type: !301)
!13721 = !DILocation(line: 577, column: 51, scope: !13717)
!13722 = !DILocalVariable(name: "queue", arg: 2, scope: !13717, file: !3, line: 578, type: !10150)
!13723 = !DILocation(line: 578, column: 34, scope: !13717)
!13724 = !DILocalVariable(name: "xdpf", arg: 3, scope: !13717, file: !3, line: 579, type: !8508)
!13725 = !DILocation(line: 579, column: 29, scope: !13717)
!13726 = !DILocalVariable(name: "np", scope: !13717, file: !3, line: 581, type: !10156)
!13727 = !DILocation(line: 581, column: 24, scope: !13717)
!13728 = !DILocation(line: 581, column: 41, scope: !13717)
!13729 = !DILocation(line: 581, column: 29, scope: !13717)
!13730 = !DILocalVariable(name: "tx_stats", scope: !13717, file: !3, line: 582, type: !10071)
!13731 = !DILocation(line: 582, column: 25, scope: !13717)
!13732 = !DILocation(line: 582, column: 36, scope: !13733)
!13733 = distinct !DILexicalBlock(scope: !13734, file: !3, line: 582, column: 36)
!13734 = distinct !DILexicalBlock(scope: !13717, file: !3, line: 582, column: 36)
!13735 = !DILocalVariable(name: "__vpp_verify", scope: !13736, file: !3, line: 582, type: !2269)
!13736 = distinct !DILexicalBlock(scope: !13733, file: !3, line: 582, column: 36)
!13737 = !DILocation(line: 582, column: 36, scope: !13736)
!13738 = !DILocation(line: 582, column: 36, scope: !13734)
!13739 = !DILocalVariable(name: "notify", scope: !13717, file: !3, line: 583, type: !43)
!13740 = !DILocation(line: 583, column: 6, scope: !13717)
!13741 = !DILocation(line: 585, column: 26, scope: !13717)
!13742 = !DILocation(line: 586, column: 5, scope: !13717)
!13743 = !DILocation(line: 587, column: 5, scope: !13717)
!13744 = !DILocation(line: 588, column: 5, scope: !13717)
!13745 = !DILocation(line: 588, column: 11, scope: !13717)
!13746 = !DILocation(line: 585, column: 2, scope: !13717)
!13747 = !DILocation(line: 590, column: 2, scope: !13717)
!13748 = !DILocalVariable(name: "__old", scope: !13749, file: !3, line: 590, type: !10103)
!13749 = distinct !DILexicalBlock(scope: !13717, file: !3, line: 590, column: 2)
!13750 = !DILocation(line: 590, column: 2, scope: !13749)
!13751 = !DILocalVariable(name: "__new", scope: !13749, file: !3, line: 590, type: !10103)
!13752 = !{i32 -2136835666}
!13753 = !{i32 -2136835625}
!13754 = !DILocation(line: 591, column: 6, scope: !13755)
!13755 = distinct !DILexicalBlock(scope: !13717, file: !3, line: 591, column: 6)
!13756 = !DILocation(line: 591, column: 6, scope: !13717)
!13757 = !DILocation(line: 592, column: 25, scope: !13755)
!13758 = !DILocation(line: 592, column: 32, scope: !13755)
!13759 = !DILocation(line: 592, column: 3, scope: !13755)
!13760 = !DILocation(line: 594, column: 26, scope: !13717)
!13761 = !DILocation(line: 594, column: 36, scope: !13717)
!13762 = !DILocation(line: 594, column: 2, scope: !13717)
!13763 = !DILocation(line: 595, column: 21, scope: !13717)
!13764 = !DILocation(line: 595, column: 27, scope: !13717)
!13765 = !DILocation(line: 595, column: 2, scope: !13717)
!13766 = !DILocation(line: 595, column: 12, scope: !13717)
!13767 = !DILocation(line: 595, column: 18, scope: !13717)
!13768 = !DILocation(line: 596, column: 2, scope: !13717)
!13769 = !DILocation(line: 596, column: 12, scope: !13717)
!13770 = !DILocation(line: 596, column: 19, scope: !13717)
!13771 = !DILocation(line: 597, column: 24, scope: !13717)
!13772 = !DILocation(line: 597, column: 34, scope: !13717)
!13773 = !DILocation(line: 597, column: 2, scope: !13717)
!13774 = !DILocation(line: 599, column: 19, scope: !13717)
!13775 = !DILocation(line: 599, column: 2, scope: !13717)
!13776 = !DILocation(line: 601, column: 2, scope: !13717)
!13777 = distinct !DISubprogram(name: "xennet_get_strings", scope: !3, file: !3, line: 2381, type: !8728, scopeLine: 2382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13778 = !DILocalVariable(name: "dev", arg: 1, scope: !13777, file: !3, line: 2381, type: !301)
!13779 = !DILocation(line: 2381, column: 51, scope: !13777)
!13780 = !DILocalVariable(name: "stringset", arg: 2, scope: !13777, file: !3, line: 2381, type: !713)
!13781 = !DILocation(line: 2381, column: 60, scope: !13777)
!13782 = !DILocalVariable(name: "data", arg: 3, scope: !13777, file: !3, line: 2381, type: !8216)
!13783 = !DILocation(line: 2381, column: 76, scope: !13777)
!13784 = !DILocalVariable(name: "i", scope: !13777, file: !3, line: 2383, type: !43)
!13785 = !DILocation(line: 2383, column: 6, scope: !13777)
!13786 = !DILocation(line: 2385, column: 10, scope: !13777)
!13787 = !DILocation(line: 2385, column: 2, scope: !13777)
!13788 = !DILocation(line: 2387, column: 10, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13790, file: !3, line: 2387, column: 3)
!13790 = distinct !DILexicalBlock(scope: !13777, file: !3, line: 2385, column: 21)
!13791 = !DILocation(line: 2387, column: 8, scope: !13789)
!13792 = !DILocation(line: 2387, column: 15, scope: !13793)
!13793 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 2387, column: 3)
!13794 = !DILocation(line: 2387, column: 17, scope: !13793)
!13795 = !DILocation(line: 2387, column: 3, scope: !13789)
!13796 = !DILocation(line: 2388, column: 11, scope: !13793)
!13797 = !DILocation(line: 2388, column: 18, scope: !13793)
!13798 = !DILocation(line: 2388, column: 20, scope: !13793)
!13799 = !DILocation(line: 2388, column: 16, scope: !13793)
!13800 = !DILocation(line: 2389, column: 24, scope: !13793)
!13801 = !DILocation(line: 2389, column: 11, scope: !13793)
!13802 = !DILocation(line: 2389, column: 27, scope: !13793)
!13803 = !DILocation(line: 2388, column: 4, scope: !13793)
!13804 = !DILocation(line: 2387, column: 46, scope: !13793)
!13805 = !DILocation(line: 2387, column: 3, scope: !13793)
!13806 = distinct !{!13806, !13795, !13807}
!13807 = !DILocation(line: 2389, column: 48, scope: !13789)
!13808 = !DILocation(line: 2390, column: 3, scope: !13790)
!13809 = !DILocation(line: 2392, column: 1, scope: !13777)
!13810 = distinct !DISubprogram(name: "xennet_get_ethtool_stats", scope: !3, file: !3, line: 2371, type: !8736, scopeLine: 2373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13811 = !DILocalVariable(name: "v", arg: 1, scope: !13812, file: !13297, line: 23, type: !13815)
!13812 = distinct !DISubprogram(name: "arch_atomic_read", scope: !13297, file: !13297, line: 23, type: !13813, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13813 = !DISubroutineType(types: !13814)
!13814 = !{!43, !13815}
!13815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13816, size: 64)
!13816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !394)
!13817 = !DILocation(line: 23, column: 61, scope: !13812, inlinedAt: !13818)
!13818 = distinct !DILocation(line: 28, column: 9, scope: !13819, inlinedAt: !13820)
!13819 = distinct !DISubprogram(name: "atomic_read", scope: !13303, file: !13303, line: 25, type: !13813, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13820 = distinct !DILocation(line: 2378, column: 13, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13822, file: !3, line: 2377, column: 2)
!13822 = distinct !DILexicalBlock(scope: !13810, file: !3, line: 2377, column: 2)
!13823 = !DILocation(line: 69, column: 73, scope: !12166, inlinedAt: !13824)
!13824 = distinct !DILocation(line: 27, column: 2, scope: !13819, inlinedAt: !13820)
!13825 = !DILocation(line: 69, column: 83, scope: !12166, inlinedAt: !13824)
!13826 = !DILocalVariable(name: "v", arg: 1, scope: !13819, file: !13303, line: 25, type: !13815)
!13827 = !DILocation(line: 25, column: 29, scope: !13819, inlinedAt: !13820)
!13828 = !DILocalVariable(name: "dev", arg: 1, scope: !13810, file: !3, line: 2371, type: !301)
!13829 = !DILocation(line: 2371, column: 57, scope: !13810)
!13830 = !DILocalVariable(name: "stats", arg: 2, scope: !13810, file: !3, line: 2372, type: !8738)
!13831 = !DILocation(line: 2372, column: 32, scope: !13810)
!13832 = !DILocalVariable(name: "data", arg: 3, scope: !13810, file: !3, line: 2372, type: !3549)
!13833 = !DILocation(line: 2372, column: 45, scope: !13810)
!13834 = !DILocalVariable(name: "np", scope: !13810, file: !3, line: 2374, type: !576)
!13835 = !DILocation(line: 2374, column: 8, scope: !13810)
!13836 = !DILocation(line: 2374, column: 25, scope: !13810)
!13837 = !DILocation(line: 2374, column: 13, scope: !13810)
!13838 = !DILocalVariable(name: "i", scope: !13810, file: !3, line: 2375, type: !43)
!13839 = !DILocation(line: 2375, column: 6, scope: !13810)
!13840 = !DILocation(line: 2377, column: 9, scope: !13822)
!13841 = !DILocation(line: 2377, column: 7, scope: !13822)
!13842 = !DILocation(line: 2377, column: 14, scope: !13821)
!13843 = !DILocation(line: 2377, column: 16, scope: !13821)
!13844 = !DILocation(line: 2377, column: 2, scope: !13822)
!13845 = !DILocation(line: 2378, column: 38, scope: !13821)
!13846 = !DILocation(line: 2378, column: 56, scope: !13821)
!13847 = !DILocation(line: 2378, column: 43, scope: !13821)
!13848 = !DILocation(line: 2378, column: 59, scope: !13821)
!13849 = !DILocation(line: 2378, column: 41, scope: !13821)
!13850 = !DILocation(line: 2378, column: 25, scope: !13821)
!13851 = !DILocation(line: 27, column: 25, scope: !13819, inlinedAt: !13820)
!13852 = !DILocation(line: 71, column: 19, scope: !12166, inlinedAt: !13824)
!13853 = !DILocation(line: 71, column: 22, scope: !12166, inlinedAt: !13824)
!13854 = !DILocation(line: 71, column: 2, scope: !12166, inlinedAt: !13824)
!13855 = !DILocation(line: 72, column: 2, scope: !12166, inlinedAt: !13824)
!13856 = !DILocation(line: 28, column: 26, scope: !13819, inlinedAt: !13820)
!13857 = !DILocation(line: 29, column: 9, scope: !13812, inlinedAt: !13818)
!13858 = !DILocation(line: 2378, column: 13, scope: !13821)
!13859 = !DILocation(line: 2378, column: 3, scope: !13821)
!13860 = !DILocation(line: 2378, column: 8, scope: !13821)
!13861 = !DILocation(line: 2378, column: 11, scope: !13821)
!13862 = !DILocation(line: 2377, column: 45, scope: !13821)
!13863 = !DILocation(line: 2377, column: 2, scope: !13821)
!13864 = distinct !{!13864, !13844, !13865}
!13865 = !DILocation(line: 2378, column: 66, scope: !13822)
!13866 = !DILocation(line: 2379, column: 1, scope: !13810)
!13867 = distinct !DISubprogram(name: "xennet_get_sset_count", scope: !3, file: !3, line: 2361, type: !8152, scopeLine: 2362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13868 = !DILocalVariable(name: "dev", arg: 1, scope: !13867, file: !3, line: 2361, type: !301)
!13869 = !DILocation(line: 2361, column: 53, scope: !13867)
!13870 = !DILocalVariable(name: "string_set", arg: 2, scope: !13867, file: !3, line: 2361, type: !43)
!13871 = !DILocation(line: 2361, column: 62, scope: !13867)
!13872 = !DILocation(line: 2363, column: 10, scope: !13867)
!13873 = !DILocation(line: 2363, column: 2, scope: !13867)
!13874 = !DILocation(line: 2365, column: 3, scope: !13875)
!13875 = distinct !DILexicalBlock(scope: !13867, file: !3, line: 2363, column: 22)
!13876 = !DILocation(line: 2367, column: 3, scope: !13875)
!13877 = !DILocation(line: 2369, column: 1, scope: !13867)
!13878 = distinct !DISubprogram(name: "show_rxbuf", scope: !3, file: !3, line: 2405, type: !10545, scopeLine: 2407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13879 = !DILocalVariable(name: "dev", arg: 1, scope: !13878, file: !3, line: 2405, type: !4382)
!13880 = !DILocation(line: 2405, column: 42, scope: !13878)
!13881 = !DILocalVariable(name: "attr", arg: 2, scope: !13878, file: !3, line: 2406, type: !10547)
!13882 = !DILocation(line: 2406, column: 31, scope: !13878)
!13883 = !DILocalVariable(name: "buf", arg: 3, scope: !13878, file: !3, line: 2406, type: !583)
!13884 = !DILocation(line: 2406, column: 43, scope: !13878)
!13885 = !DILocation(line: 2408, column: 17, scope: !13878)
!13886 = !DILocation(line: 2408, column: 9, scope: !13878)
!13887 = !DILocation(line: 2408, column: 2, scope: !13878)
!13888 = distinct !DISubprogram(name: "store_rxbuf", scope: !3, file: !3, line: 2411, type: !10550, scopeLine: 2414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13889 = !DILocalVariable(name: "dev", arg: 1, scope: !13888, file: !3, line: 2411, type: !4382)
!13890 = !DILocation(line: 2411, column: 43, scope: !13888)
!13891 = !DILocalVariable(name: "attr", arg: 2, scope: !13888, file: !3, line: 2412, type: !10547)
!13892 = !DILocation(line: 2412, column: 32, scope: !13888)
!13893 = !DILocalVariable(name: "buf", arg: 3, scope: !13888, file: !3, line: 2413, type: !303)
!13894 = !DILocation(line: 2413, column: 19, scope: !13888)
!13895 = !DILocalVariable(name: "len", arg: 4, scope: !13888, file: !3, line: 2413, type: !600)
!13896 = !DILocation(line: 2413, column: 31, scope: !13888)
!13897 = !DILocalVariable(name: "endp", scope: !13888, file: !3, line: 2415, type: !583)
!13898 = !DILocation(line: 2415, column: 8, scope: !13888)
!13899 = !DILocalVariable(name: "target", scope: !13888, file: !3, line: 2416, type: !323)
!13900 = !DILocation(line: 2416, column: 16, scope: !13888)
!13901 = !DILocation(line: 2418, column: 7, scope: !13902)
!13902 = distinct !DILexicalBlock(scope: !13888, file: !3, line: 2418, column: 6)
!13903 = !DILocation(line: 2418, column: 6, scope: !13888)
!13904 = !DILocation(line: 2419, column: 3, scope: !13902)
!13905 = !DILocation(line: 2421, column: 26, scope: !13888)
!13906 = !DILocation(line: 2421, column: 11, scope: !13888)
!13907 = !DILocation(line: 2421, column: 9, scope: !13888)
!13908 = !DILocation(line: 2422, column: 6, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13888, file: !3, line: 2422, column: 6)
!13910 = !DILocation(line: 2422, column: 14, scope: !13909)
!13911 = !DILocation(line: 2422, column: 11, scope: !13909)
!13912 = !DILocation(line: 2422, column: 6, scope: !13888)
!13913 = !DILocation(line: 2423, column: 3, scope: !13909)
!13914 = !DILocation(line: 2427, column: 9, scope: !13888)
!13915 = !DILocation(line: 2427, column: 2, scope: !13888)
!13916 = !DILocation(line: 2428, column: 1, scope: !13888)
!13917 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !4015, file: !4015, line: 655, type: !13918, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13918 = !DISubroutineType(types: !13919)
!13919 = !{!576, !4723}
!13920 = !DILocalVariable(name: "dev", arg: 1, scope: !13917, file: !4015, line: 655, type: !4723)
!13921 = !DILocation(line: 655, column: 58, scope: !13917)
!13922 = !DILocation(line: 657, column: 9, scope: !13917)
!13923 = !DILocation(line: 657, column: 14, scope: !13917)
!13924 = !DILocation(line: 657, column: 2, scope: !13917)
!13925 = distinct !DISubprogram(name: "xennet_connect", scope: !3, file: !3, line: 2246, type: !413, scopeLine: 2247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13926 = !DILocalVariable(name: "lock", arg: 1, scope: !13927, file: !11089, line: 402, type: !2450)
!13927 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !11089, file: !11089, line: 402, type: !11874, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13928 = !DILocation(line: 402, column: 57, scope: !13927, inlinedAt: !13929)
!13929 = distinct !DILocation(line: 2298, column: 3, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13931, file: !3, line: 2289, column: 35)
!13931 = distinct !DILexicalBlock(scope: !13932, file: !3, line: 2289, column: 2)
!13932 = distinct !DILexicalBlock(scope: !13925, file: !3, line: 2289, column: 2)
!13933 = !DILocalVariable(name: "lock", arg: 1, scope: !13934, file: !11089, line: 377, type: !2450)
!13934 = distinct !DISubprogram(name: "spin_lock_irq", scope: !11089, file: !11089, line: 377, type: !11874, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!13935 = !DILocation(line: 377, column: 55, scope: !13934, inlinedAt: !13936)
!13936 = distinct !DILocation(line: 2296, column: 3, scope: !13930)
!13937 = !DILocalVariable(name: "dev", arg: 1, scope: !13925, file: !3, line: 2246, type: !301)
!13938 = !DILocation(line: 2246, column: 46, scope: !13925)
!13939 = !DILocalVariable(name: "np", scope: !13925, file: !3, line: 2248, type: !10156)
!13940 = !DILocation(line: 2248, column: 24, scope: !13925)
!13941 = !DILocation(line: 2248, column: 41, scope: !13925)
!13942 = !DILocation(line: 2248, column: 29, scope: !13925)
!13943 = !DILocalVariable(name: "num_queues", scope: !13925, file: !3, line: 2249, type: !7)
!13944 = !DILocation(line: 2249, column: 15, scope: !13925)
!13945 = !DILocalVariable(name: "err", scope: !13925, file: !3, line: 2250, type: !43)
!13946 = !DILocation(line: 2250, column: 6, scope: !13925)
!13947 = !DILocalVariable(name: "j", scope: !13925, file: !3, line: 2251, type: !7)
!13948 = !DILocation(line: 2251, column: 15, scope: !13925)
!13949 = !DILocalVariable(name: "queue", scope: !13925, file: !3, line: 2252, type: !10150)
!13950 = !DILocation(line: 2252, column: 25, scope: !13925)
!13951 = !DILocation(line: 2254, column: 28, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13925, file: !3, line: 2254, column: 6)
!13953 = !DILocation(line: 2254, column: 32, scope: !13952)
!13954 = !DILocation(line: 2254, column: 39, scope: !13952)
!13955 = !DILocation(line: 2254, column: 7, scope: !13952)
!13956 = !DILocation(line: 2254, column: 6, scope: !13925)
!13957 = !DILocation(line: 2255, column: 3, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 2254, column: 72)
!13959 = !DILocation(line: 2257, column: 3, scope: !13958)
!13960 = !DILocation(line: 2260, column: 24, scope: !13925)
!13961 = !DILocation(line: 2260, column: 28, scope: !13925)
!13962 = !DILocation(line: 2260, column: 35, scope: !13925)
!13963 = !DILocation(line: 2260, column: 8, scope: !13925)
!13964 = !DILocation(line: 2260, column: 6, scope: !13925)
!13965 = !DILocation(line: 2261, column: 6, scope: !13966)
!13966 = distinct !DILexicalBlock(scope: !13925, file: !3, line: 2261, column: 6)
!13967 = !DILocation(line: 2261, column: 6, scope: !13925)
!13968 = !DILocation(line: 2262, column: 10, scope: !13966)
!13969 = !DILocation(line: 2262, column: 3, scope: !13966)
!13970 = !DILocation(line: 2263, column: 6, scope: !13971)
!13971 = distinct !DILexicalBlock(scope: !13925, file: !3, line: 2263, column: 6)
!13972 = !DILocation(line: 2263, column: 10, scope: !13971)
!13973 = !DILocation(line: 2263, column: 6, scope: !13925)
!13974 = !DILocation(line: 2264, column: 3, scope: !13971)
!13975 = !DILocation(line: 2267, column: 15, scope: !13925)
!13976 = !DILocation(line: 2267, column: 20, scope: !13925)
!13977 = !DILocation(line: 2267, column: 13, scope: !13925)
!13978 = !DILocation(line: 2269, column: 6, scope: !13979)
!13979 = distinct !DILexicalBlock(scope: !13925, file: !3, line: 2269, column: 6)
!13980 = !DILocation(line: 2269, column: 11, scope: !13979)
!13981 = !DILocation(line: 2269, column: 21, scope: !13979)
!13982 = !DILocation(line: 2269, column: 6, scope: !13925)
!13983 = !DILocation(line: 2270, column: 25, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13979, file: !3, line: 2269, column: 46)
!13985 = !DILocation(line: 2270, column: 9, scope: !13984)
!13986 = !DILocation(line: 2270, column: 7, scope: !13984)
!13987 = !DILocation(line: 2271, column: 7, scope: !13988)
!13988 = distinct !DILexicalBlock(scope: !13984, file: !3, line: 2271, column: 7)
!13989 = !DILocation(line: 2271, column: 7, scope: !13984)
!13990 = !DILocation(line: 2272, column: 4, scope: !13991)
!13991 = distinct !DILexicalBlock(scope: !13988, file: !3, line: 2271, column: 12)
!13992 = !DILocation(line: 2273, column: 23, scope: !13991)
!13993 = !DILocation(line: 2273, column: 27, scope: !13991)
!13994 = !DILocation(line: 2273, column: 34, scope: !13991)
!13995 = !DILocation(line: 2273, column: 4, scope: !13991)
!13996 = !DILocation(line: 2274, column: 11, scope: !13991)
!13997 = !DILocation(line: 2274, column: 4, scope: !13991)
!13998 = !DILocation(line: 2276, column: 2, scope: !13984)
!13999 = !DILocation(line: 2278, column: 2, scope: !13925)
!14000 = !DILocation(line: 2279, column: 25, scope: !13925)
!14001 = !DILocation(line: 2279, column: 2, scope: !13925)
!14002 = !DILocation(line: 2280, column: 2, scope: !13925)
!14003 = !DILocation(line: 2288, column: 19, scope: !13925)
!14004 = !DILocation(line: 2288, column: 23, scope: !13925)
!14005 = !DILocation(line: 2288, column: 2, scope: !13925)
!14006 = !DILocation(line: 2289, column: 9, scope: !13932)
!14007 = !DILocation(line: 2289, column: 7, scope: !13932)
!14008 = !DILocation(line: 2289, column: 14, scope: !13931)
!14009 = !DILocation(line: 2289, column: 18, scope: !13931)
!14010 = !DILocation(line: 2289, column: 16, scope: !13931)
!14011 = !DILocation(line: 2289, column: 2, scope: !13932)
!14012 = !DILocation(line: 2290, column: 12, scope: !13930)
!14013 = !DILocation(line: 2290, column: 16, scope: !13930)
!14014 = !DILocation(line: 2290, column: 23, scope: !13930)
!14015 = !DILocation(line: 2290, column: 9, scope: !13930)
!14016 = !DILocation(line: 2292, column: 25, scope: !13930)
!14017 = !DILocation(line: 2292, column: 32, scope: !13930)
!14018 = !DILocation(line: 2292, column: 3, scope: !13930)
!14019 = !DILocation(line: 2293, column: 7, scope: !14020)
!14020 = distinct !DILexicalBlock(scope: !13930, file: !3, line: 2293, column: 7)
!14021 = !DILocation(line: 2293, column: 14, scope: !14020)
!14022 = !DILocation(line: 2293, column: 24, scope: !14020)
!14023 = !DILocation(line: 2293, column: 31, scope: !14020)
!14024 = !DILocation(line: 2293, column: 21, scope: !14020)
!14025 = !DILocation(line: 2293, column: 7, scope: !13930)
!14026 = !DILocation(line: 2294, column: 26, scope: !14020)
!14027 = !DILocation(line: 2294, column: 33, scope: !14020)
!14028 = !DILocation(line: 2294, column: 4, scope: !14020)
!14029 = !DILocation(line: 2296, column: 18, scope: !13930)
!14030 = !DILocation(line: 2296, column: 25, scope: !13930)
!14031 = !DILocation(line: 379, column: 2, scope: !14032, inlinedAt: !13936)
!14032 = distinct !DILexicalBlock(scope: !14033, file: !11089, line: 379, column: 2)
!14033 = distinct !DILexicalBlock(scope: !13934, file: !11089, line: 379, column: 2)
!14034 = !DILocation(line: 379, column: 2, scope: !14035, inlinedAt: !13936)
!14035 = distinct !DILexicalBlock(scope: !14033, file: !11089, line: 379, column: 2)
!14036 = !{i32 -2145416362}
!14037 = !DILocation(line: 379, column: 2, scope: !14038, inlinedAt: !13936)
!14038 = distinct !DILexicalBlock(scope: !14035, file: !11089, line: 379, column: 2)
!14039 = !DILocation(line: 2297, column: 20, scope: !13930)
!14040 = !DILocation(line: 2297, column: 3, scope: !13930)
!14041 = !DILocation(line: 2298, column: 20, scope: !13930)
!14042 = !DILocation(line: 2298, column: 27, scope: !13930)
!14043 = !DILocation(line: 404, column: 2, scope: !14044, inlinedAt: !13929)
!14044 = distinct !DILexicalBlock(scope: !14045, file: !11089, line: 404, column: 2)
!14045 = distinct !DILexicalBlock(scope: !13927, file: !11089, line: 404, column: 2)
!14046 = !DILocation(line: 404, column: 2, scope: !14047, inlinedAt: !13929)
!14047 = distinct !DILexicalBlock(scope: !14045, file: !11089, line: 404, column: 2)
!14048 = !{i32 -2145414614}
!14049 = !DILocation(line: 404, column: 2, scope: !14050, inlinedAt: !13929)
!14050 = distinct !DILexicalBlock(scope: !14047, file: !11089, line: 404, column: 2)
!14051 = !DILocation(line: 2300, column: 17, scope: !13930)
!14052 = !DILocation(line: 2300, column: 24, scope: !13930)
!14053 = !DILocation(line: 2300, column: 3, scope: !13930)
!14054 = !DILocation(line: 2301, column: 27, scope: !13930)
!14055 = !DILocation(line: 2301, column: 3, scope: !13930)
!14056 = !DILocation(line: 2302, column: 19, scope: !13930)
!14057 = !DILocation(line: 2302, column: 26, scope: !13930)
!14058 = !DILocation(line: 2302, column: 3, scope: !13930)
!14059 = !DILocation(line: 2303, column: 2, scope: !13930)
!14060 = !DILocation(line: 2289, column: 30, scope: !13931)
!14061 = !DILocation(line: 2289, column: 2, scope: !13931)
!14062 = distinct !{!14062, !14011, !14063}
!14063 = !DILocation(line: 2303, column: 2, scope: !13932)
!14064 = !DILocation(line: 2305, column: 2, scope: !13925)
!14065 = !DILocation(line: 2306, column: 1, scope: !13925)
!14066 = distinct !DISubprogram(name: "talk_to_netback", scope: !3, file: !3, line: 2088, type: !14067, scopeLine: 2090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!14067 = !DISubroutineType(types: !14068)
!14068 = !{!43, !10162, !10156}
!14069 = !DILocalVariable(name: "dev", arg: 1, scope: !14066, file: !3, line: 2088, type: !10162)
!14070 = !DILocation(line: 2088, column: 50, scope: !14066)
!14071 = !DILocalVariable(name: "info", arg: 2, scope: !14066, file: !3, line: 2089, type: !10156)
!14072 = !DILocation(line: 2089, column: 29, scope: !14066)
!14073 = !DILocalVariable(name: "message", scope: !14066, file: !3, line: 2091, type: !303)
!14074 = !DILocation(line: 2091, column: 14, scope: !14066)
!14075 = !DILocalVariable(name: "xbt", scope: !14066, file: !3, line: 2092, type: !14076)
!14076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xenbus_transaction", file: !10164, line: 133, size: 32, elements: !14077)
!14077 = !{!14078}
!14078 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !14076, file: !10164, line: 135, baseType: !713, size: 32)
!14079 = !DILocation(line: 2092, column: 28, scope: !14066)
!14080 = !DILocalVariable(name: "err", scope: !14066, file: !3, line: 2093, type: !43)
!14081 = !DILocation(line: 2093, column: 6, scope: !14066)
!14082 = !DILocalVariable(name: "feature_split_evtchn", scope: !14066, file: !3, line: 2094, type: !7)
!14083 = !DILocation(line: 2094, column: 15, scope: !14066)
!14084 = !DILocalVariable(name: "i", scope: !14066, file: !3, line: 2095, type: !7)
!14085 = !DILocation(line: 2095, column: 15, scope: !14066)
!14086 = !DILocalVariable(name: "max_queues", scope: !14066, file: !3, line: 2096, type: !7)
!14087 = !DILocation(line: 2096, column: 15, scope: !14066)
!14088 = !DILocalVariable(name: "queue", scope: !14066, file: !3, line: 2097, type: !10150)
!14089 = !DILocation(line: 2097, column: 25, scope: !14066)
!14090 = !DILocalVariable(name: "num_queues", scope: !14066, file: !3, line: 2098, type: !7)
!14091 = !DILocation(line: 2098, column: 15, scope: !14066)
!14092 = !DILocation(line: 2100, column: 2, scope: !14066)
!14093 = !DILocation(line: 2100, column: 8, scope: !14066)
!14094 = !DILocation(line: 2100, column: 16, scope: !14066)
!14095 = !DILocation(line: 2100, column: 20, scope: !14066)
!14096 = !DILocation(line: 2103, column: 36, scope: !14066)
!14097 = !DILocation(line: 2103, column: 42, scope: !14066)
!14098 = !DILocation(line: 2103, column: 49, scope: !14066)
!14099 = !DILocation(line: 2103, column: 15, scope: !14066)
!14100 = !DILocation(line: 2103, column: 13, scope: !14066)
!14101 = !DILocalVariable(name: "__UNIQUE_ID___x649", scope: !14102, file: !3, line: 2105, type: !7)
!14102 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2105, column: 15)
!14103 = !DILocation(line: 2105, column: 15, scope: !14102)
!14104 = !DILocalVariable(name: "__UNIQUE_ID___y650", scope: !14102, file: !3, line: 2105, type: !7)
!14105 = !DILocation(line: 2105, column: 13, scope: !14066)
!14106 = !DILocation(line: 2108, column: 46, scope: !14066)
!14107 = !DILocation(line: 2108, column: 52, scope: !14066)
!14108 = !DILocation(line: 2108, column: 59, scope: !14066)
!14109 = !DILocation(line: 2108, column: 25, scope: !14066)
!14110 = !DILocation(line: 2108, column: 23, scope: !14066)
!14111 = !DILocation(line: 2112, column: 25, scope: !14066)
!14112 = !DILocation(line: 2112, column: 30, scope: !14066)
!14113 = !DILocation(line: 2112, column: 36, scope: !14066)
!14114 = !DILocation(line: 2112, column: 44, scope: !14066)
!14115 = !DILocation(line: 2112, column: 8, scope: !14066)
!14116 = !DILocation(line: 2112, column: 6, scope: !14066)
!14117 = !DILocation(line: 2113, column: 6, scope: !14118)
!14118 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2113, column: 6)
!14119 = !DILocation(line: 2113, column: 6, scope: !14066)
!14120 = !DILocation(line: 2114, column: 20, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14118, file: !3, line: 2113, column: 11)
!14122 = !DILocation(line: 2114, column: 25, scope: !14121)
!14123 = !DILocation(line: 2114, column: 48, scope: !14121)
!14124 = !DILocation(line: 2114, column: 53, scope: !14121)
!14125 = !DILocation(line: 2114, column: 3, scope: !14121)
!14126 = !DILocation(line: 2115, column: 3, scope: !14121)
!14127 = !DILocation(line: 2118, column: 56, scope: !14066)
!14128 = !DILocation(line: 2118, column: 62, scope: !14066)
!14129 = !DILocation(line: 2118, column: 69, scope: !14066)
!14130 = !DILocation(line: 2118, column: 35, scope: !14066)
!14131 = !DILocation(line: 2118, column: 2, scope: !14066)
!14132 = !DILocation(line: 2118, column: 8, scope: !14066)
!14133 = !DILocation(line: 2118, column: 33, scope: !14066)
!14134 = !DILocation(line: 2120, column: 6, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2120, column: 6)
!14136 = !DILocation(line: 2120, column: 12, scope: !14135)
!14137 = !DILocation(line: 2120, column: 6, scope: !14066)
!14138 = !DILocation(line: 2122, column: 29, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14135, file: !3, line: 2120, column: 38)
!14140 = !DILocation(line: 2122, column: 35, scope: !14139)
!14141 = !DILocation(line: 2122, column: 41, scope: !14139)
!14142 = !DILocation(line: 2122, column: 9, scope: !14139)
!14143 = !DILocation(line: 2122, column: 7, scope: !14139)
!14144 = !DILocation(line: 2125, column: 7, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14139, file: !3, line: 2125, column: 7)
!14146 = !DILocation(line: 2125, column: 7, scope: !14139)
!14147 = !DILocation(line: 2126, column: 4, scope: !14145)
!14148 = !DILocation(line: 2127, column: 2, scope: !14139)
!14149 = !DILocation(line: 2129, column: 2, scope: !14066)
!14150 = !DILocation(line: 2130, column: 6, scope: !14151)
!14151 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2130, column: 6)
!14152 = !DILocation(line: 2130, column: 12, scope: !14151)
!14153 = !DILocation(line: 2130, column: 6, scope: !14066)
!14154 = !DILocation(line: 2131, column: 25, scope: !14151)
!14155 = !DILocation(line: 2131, column: 3, scope: !14151)
!14156 = !DILocation(line: 2133, column: 29, scope: !14066)
!14157 = !DILocation(line: 2133, column: 8, scope: !14066)
!14158 = !DILocation(line: 2133, column: 6, scope: !14066)
!14159 = !DILocation(line: 2134, column: 6, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2134, column: 6)
!14161 = !DILocation(line: 2134, column: 10, scope: !14160)
!14162 = !DILocation(line: 2134, column: 6, scope: !14066)
!14163 = !DILocation(line: 2135, column: 20, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !14160, file: !3, line: 2134, column: 15)
!14165 = !DILocation(line: 2135, column: 25, scope: !14164)
!14166 = !DILocation(line: 2135, column: 3, scope: !14164)
!14167 = !DILocation(line: 2136, column: 9, scope: !14164)
!14168 = !DILocation(line: 2136, column: 15, scope: !14164)
!14169 = !DILocation(line: 2136, column: 3, scope: !14164)
!14170 = !DILocation(line: 2137, column: 3, scope: !14164)
!14171 = !DILocation(line: 2137, column: 9, scope: !14164)
!14172 = !DILocation(line: 2137, column: 16, scope: !14164)
!14173 = !DILocation(line: 2138, column: 3, scope: !14164)
!14174 = !DILocation(line: 2140, column: 2, scope: !14066)
!14175 = !DILocation(line: 2143, column: 9, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2143, column: 2)
!14177 = !DILocation(line: 2143, column: 7, scope: !14176)
!14178 = !DILocation(line: 2143, column: 14, scope: !14179)
!14179 = distinct !DILexicalBlock(scope: !14176, file: !3, line: 2143, column: 2)
!14180 = !DILocation(line: 2143, column: 18, scope: !14179)
!14181 = !DILocation(line: 2143, column: 16, scope: !14179)
!14182 = !DILocation(line: 2143, column: 2, scope: !14176)
!14183 = !DILocation(line: 2144, column: 12, scope: !14184)
!14184 = distinct !DILexicalBlock(scope: !14179, file: !3, line: 2143, column: 35)
!14185 = !DILocation(line: 2144, column: 18, scope: !14184)
!14186 = !DILocation(line: 2144, column: 25, scope: !14184)
!14187 = !DILocation(line: 2144, column: 9, scope: !14184)
!14188 = !DILocation(line: 2145, column: 24, scope: !14184)
!14189 = !DILocation(line: 2145, column: 29, scope: !14184)
!14190 = !DILocation(line: 2145, column: 36, scope: !14184)
!14191 = !DILocation(line: 2145, column: 9, scope: !14184)
!14192 = !DILocation(line: 2145, column: 7, scope: !14184)
!14193 = !DILocation(line: 2146, column: 7, scope: !14194)
!14194 = distinct !DILexicalBlock(scope: !14184, file: !3, line: 2146, column: 7)
!14195 = !DILocation(line: 2146, column: 7, scope: !14184)
!14196 = !DILocation(line: 2147, column: 4, scope: !14194)
!14197 = !DILocation(line: 2148, column: 2, scope: !14184)
!14198 = !DILocation(line: 2143, column: 30, scope: !14179)
!14199 = !DILocation(line: 2143, column: 2, scope: !14179)
!14200 = distinct !{!14200, !14182, !14201}
!14201 = !DILocation(line: 2148, column: 2, scope: !14176)
!14202 = !DILabel(scope: !14066, name: "again", file: !3, line: 2150)
!14203 = !DILocation(line: 2150, column: 1, scope: !14066)
!14204 = !DILocation(line: 2151, column: 8, scope: !14066)
!14205 = !DILocation(line: 2151, column: 6, scope: !14066)
!14206 = !DILocation(line: 2152, column: 6, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2152, column: 6)
!14208 = !DILocation(line: 2152, column: 6, scope: !14066)
!14209 = !DILocation(line: 2153, column: 20, scope: !14210)
!14210 = distinct !DILexicalBlock(scope: !14207, file: !3, line: 2152, column: 11)
!14211 = !DILocation(line: 2153, column: 25, scope: !14210)
!14212 = !DILocation(line: 2153, column: 3, scope: !14210)
!14213 = !DILocation(line: 2154, column: 3, scope: !14210)
!14214 = !DILocation(line: 2157, column: 20, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2157, column: 6)
!14216 = !DILocation(line: 2158, column: 6, scope: !14215)
!14217 = !DILocation(line: 2158, column: 12, scope: !14215)
!14218 = !DILocation(line: 2158, column: 19, scope: !14215)
!14219 = !DILocation(line: 2157, column: 6, scope: !14215)
!14220 = !DILocation(line: 2157, column: 6, scope: !14066)
!14221 = !DILocation(line: 2160, column: 28, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14215, file: !3, line: 2158, column: 56)
!14223 = !DILocation(line: 2160, column: 33, scope: !14222)
!14224 = !DILocation(line: 2161, column: 41, scope: !14222)
!14225 = !DILocation(line: 2160, column: 9, scope: !14222)
!14226 = !DILocation(line: 2160, column: 7, scope: !14222)
!14227 = !DILocation(line: 2162, column: 7, scope: !14228)
!14228 = distinct !DILexicalBlock(scope: !14222, file: !3, line: 2162, column: 7)
!14229 = !DILocation(line: 2162, column: 7, scope: !14222)
!14230 = !DILocation(line: 2163, column: 12, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14228, file: !3, line: 2162, column: 12)
!14232 = !DILocation(line: 2164, column: 4, scope: !14231)
!14233 = !DILocation(line: 2166, column: 2, scope: !14222)
!14234 = !DILocation(line: 2168, column: 6, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2168, column: 6)
!14236 = !DILocation(line: 2168, column: 17, scope: !14235)
!14237 = !DILocation(line: 2168, column: 6, scope: !14066)
!14238 = !DILocation(line: 2169, column: 36, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14235, file: !3, line: 2168, column: 23)
!14240 = !DILocation(line: 2169, column: 42, scope: !14239)
!14241 = !DILocation(line: 2169, column: 9, scope: !14239)
!14242 = !DILocation(line: 2169, column: 7, scope: !14239)
!14243 = !DILocation(line: 2170, column: 7, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !14239, file: !3, line: 2170, column: 7)
!14245 = !DILocation(line: 2170, column: 7, scope: !14239)
!14246 = !DILocation(line: 2171, column: 4, scope: !14244)
!14247 = !DILocation(line: 2172, column: 2, scope: !14239)
!14248 = !DILocation(line: 2174, column: 10, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14250, file: !3, line: 2174, column: 3)
!14250 = distinct !DILexicalBlock(scope: !14235, file: !3, line: 2172, column: 9)
!14251 = !DILocation(line: 2174, column: 8, scope: !14249)
!14252 = !DILocation(line: 2174, column: 15, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14249, file: !3, line: 2174, column: 3)
!14254 = !DILocation(line: 2174, column: 19, scope: !14253)
!14255 = !DILocation(line: 2174, column: 17, scope: !14253)
!14256 = !DILocation(line: 2174, column: 3, scope: !14249)
!14257 = !DILocation(line: 2175, column: 13, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14253, file: !3, line: 2174, column: 36)
!14259 = !DILocation(line: 2175, column: 19, scope: !14258)
!14260 = !DILocation(line: 2175, column: 26, scope: !14258)
!14261 = !DILocation(line: 2175, column: 10, scope: !14258)
!14262 = !DILocation(line: 2176, column: 36, scope: !14258)
!14263 = !DILocation(line: 2176, column: 10, scope: !14258)
!14264 = !DILocation(line: 2176, column: 8, scope: !14258)
!14265 = !DILocation(line: 2177, column: 8, scope: !14266)
!14266 = distinct !DILexicalBlock(scope: !14258, file: !3, line: 2177, column: 8)
!14267 = !DILocation(line: 2177, column: 8, scope: !14258)
!14268 = !DILocation(line: 2178, column: 5, scope: !14266)
!14269 = !DILocation(line: 2179, column: 3, scope: !14258)
!14270 = !DILocation(line: 2174, column: 31, scope: !14253)
!14271 = !DILocation(line: 2174, column: 3, scope: !14253)
!14272 = distinct !{!14272, !14256, !14273}
!14273 = !DILocation(line: 2179, column: 3, scope: !14249)
!14274 = !DILocation(line: 2183, column: 27, scope: !14066)
!14275 = !DILocation(line: 2183, column: 32, scope: !14066)
!14276 = !DILocation(line: 2183, column: 8, scope: !14066)
!14277 = !DILocation(line: 2183, column: 6, scope: !14066)
!14278 = !DILocation(line: 2185, column: 6, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2185, column: 6)
!14280 = !DILocation(line: 2185, column: 6, scope: !14066)
!14281 = !DILocation(line: 2186, column: 11, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14279, file: !3, line: 2185, column: 11)
!14283 = !DILocation(line: 2187, column: 3, scope: !14282)
!14284 = !DILocation(line: 2190, column: 27, scope: !14066)
!14285 = !DILocation(line: 2190, column: 32, scope: !14066)
!14286 = !DILocation(line: 2190, column: 8, scope: !14066)
!14287 = !DILocation(line: 2190, column: 6, scope: !14066)
!14288 = !DILocation(line: 2191, column: 6, scope: !14289)
!14289 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2191, column: 6)
!14290 = !DILocation(line: 2191, column: 6, scope: !14066)
!14291 = !DILocation(line: 2192, column: 11, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14289, file: !3, line: 2191, column: 11)
!14293 = !DILocation(line: 2193, column: 3, scope: !14292)
!14294 = !DILocation(line: 2196, column: 27, scope: !14066)
!14295 = !DILocation(line: 2196, column: 32, scope: !14066)
!14296 = !DILocation(line: 2196, column: 8, scope: !14066)
!14297 = !DILocation(line: 2196, column: 6, scope: !14066)
!14298 = !DILocation(line: 2197, column: 6, scope: !14299)
!14299 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2197, column: 6)
!14300 = !DILocation(line: 2197, column: 6, scope: !14066)
!14301 = !DILocation(line: 2198, column: 11, scope: !14302)
!14302 = distinct !DILexicalBlock(scope: !14299, file: !3, line: 2197, column: 11)
!14303 = !DILocation(line: 2199, column: 3, scope: !14302)
!14304 = !DILocation(line: 2202, column: 27, scope: !14066)
!14305 = !DILocation(line: 2202, column: 32, scope: !14066)
!14306 = !DILocation(line: 2202, column: 8, scope: !14066)
!14307 = !DILocation(line: 2202, column: 6, scope: !14066)
!14308 = !DILocation(line: 2203, column: 6, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2203, column: 6)
!14310 = !DILocation(line: 2203, column: 6, scope: !14066)
!14311 = !DILocation(line: 2204, column: 11, scope: !14312)
!14312 = distinct !DILexicalBlock(scope: !14309, file: !3, line: 2203, column: 11)
!14313 = !DILocation(line: 2205, column: 3, scope: !14312)
!14314 = !DILocation(line: 2208, column: 26, scope: !14066)
!14315 = !DILocation(line: 2208, column: 31, scope: !14066)
!14316 = !DILocation(line: 2208, column: 8, scope: !14066)
!14317 = !DILocation(line: 2208, column: 6, scope: !14066)
!14318 = !DILocation(line: 2209, column: 6, scope: !14319)
!14319 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2209, column: 6)
!14320 = !DILocation(line: 2209, column: 6, scope: !14066)
!14321 = !DILocation(line: 2210, column: 11, scope: !14322)
!14322 = distinct !DILexicalBlock(scope: !14319, file: !3, line: 2209, column: 11)
!14323 = !DILocation(line: 2211, column: 3, scope: !14322)
!14324 = !DILocation(line: 2214, column: 26, scope: !14066)
!14325 = !DILocation(line: 2214, column: 31, scope: !14066)
!14326 = !DILocation(line: 2214, column: 8, scope: !14066)
!14327 = !DILocation(line: 2214, column: 6, scope: !14066)
!14328 = !DILocation(line: 2216, column: 6, scope: !14329)
!14329 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2216, column: 6)
!14330 = !DILocation(line: 2216, column: 6, scope: !14066)
!14331 = !DILocation(line: 2217, column: 11, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !14329, file: !3, line: 2216, column: 11)
!14333 = !DILocation(line: 2218, column: 3, scope: !14332)
!14334 = !DILocation(line: 2221, column: 8, scope: !14066)
!14335 = !DILocation(line: 2221, column: 6, scope: !14066)
!14336 = !DILocation(line: 2222, column: 6, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14066, file: !3, line: 2222, column: 6)
!14338 = !DILocation(line: 2222, column: 6, scope: !14066)
!14339 = !DILocation(line: 2223, column: 7, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14341, file: !3, line: 2223, column: 7)
!14341 = distinct !DILexicalBlock(scope: !14337, file: !3, line: 2222, column: 11)
!14342 = !DILocation(line: 2223, column: 11, scope: !14340)
!14343 = !DILocation(line: 2223, column: 7, scope: !14341)
!14344 = !DILocation(line: 2224, column: 4, scope: !14340)
!14345 = !DILocation(line: 2225, column: 20, scope: !14341)
!14346 = !DILocation(line: 2225, column: 25, scope: !14341)
!14347 = !DILocation(line: 2225, column: 3, scope: !14341)
!14348 = !DILocation(line: 2226, column: 3, scope: !14341)
!14349 = !DILocation(line: 2229, column: 2, scope: !14066)
!14350 = !DILabel(scope: !14066, name: "abort_transaction", file: !3, line: 2231)
!14351 = !DILocation(line: 2231, column: 2, scope: !14066)
!14352 = !DILocation(line: 2232, column: 19, scope: !14066)
!14353 = !DILocation(line: 2232, column: 24, scope: !14066)
!14354 = !DILocation(line: 2232, column: 35, scope: !14066)
!14355 = !DILocation(line: 2232, column: 2, scope: !14066)
!14356 = !DILabel(scope: !14066, name: "abort_transaction_no_dev_fatal", file: !3, line: 2233)
!14357 = !DILocation(line: 2233, column: 1, scope: !14066)
!14358 = !DILocation(line: 2234, column: 2, scope: !14066)
!14359 = !DILabel(scope: !14066, name: "destroy_ring", file: !3, line: 2235)
!14360 = !DILocation(line: 2235, column: 2, scope: !14066)
!14361 = !DILocation(line: 2236, column: 28, scope: !14066)
!14362 = !DILocation(line: 2236, column: 2, scope: !14066)
!14363 = !DILocation(line: 2237, column: 2, scope: !14066)
!14364 = !DILocation(line: 2238, column: 24, scope: !14066)
!14365 = !DILocation(line: 2238, column: 2, scope: !14066)
!14366 = !DILabel(scope: !14066, name: "out", file: !3, line: 2239)
!14367 = !DILocation(line: 2239, column: 2, scope: !14066)
!14368 = !DILocation(line: 2240, column: 2, scope: !14066)
!14369 = !DILabel(scope: !14066, name: "out_unlocked", file: !3, line: 2241)
!14370 = !DILocation(line: 2241, column: 1, scope: !14066)
!14371 = !DILocation(line: 2242, column: 21, scope: !14066)
!14372 = !DILocation(line: 2242, column: 26, scope: !14066)
!14373 = !DILocation(line: 2242, column: 2, scope: !14066)
!14374 = !DILocation(line: 2243, column: 9, scope: !14066)
!14375 = !DILocation(line: 2243, column: 2, scope: !14066)
!14376 = !DILocation(line: 2244, column: 1, scope: !14066)
!14377 = distinct !DISubprogram(name: "xen_net_read_mac", scope: !3, file: !3, line: 1678, type: !14378, scopeLine: 1679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!14378 = !DISubroutineType(types: !14379)
!14379 = !{!43, !10162, !8216}
!14380 = !DILocalVariable(name: "dev", arg: 1, scope: !14377, file: !3, line: 1678, type: !10162)
!14381 = !DILocation(line: 1678, column: 51, scope: !14377)
!14382 = !DILocalVariable(name: "mac", arg: 2, scope: !14377, file: !3, line: 1678, type: !8216)
!14383 = !DILocation(line: 1678, column: 59, scope: !14377)
!14384 = !DILocalVariable(name: "s", scope: !14377, file: !3, line: 1680, type: !583)
!14385 = !DILocation(line: 1680, column: 8, scope: !14377)
!14386 = !DILocalVariable(name: "e", scope: !14377, file: !3, line: 1680, type: !583)
!14387 = !DILocation(line: 1680, column: 12, scope: !14377)
!14388 = !DILocalVariable(name: "macstr", scope: !14377, file: !3, line: 1680, type: !583)
!14389 = !DILocation(line: 1680, column: 16, scope: !14377)
!14390 = !DILocalVariable(name: "i", scope: !14377, file: !3, line: 1681, type: !43)
!14391 = !DILocation(line: 1681, column: 6, scope: !14377)
!14392 = !DILocation(line: 1683, column: 27, scope: !14377)
!14393 = !DILocation(line: 1683, column: 36, scope: !14377)
!14394 = !DILocation(line: 1683, column: 41, scope: !14377)
!14395 = !DILocation(line: 1683, column: 15, scope: !14377)
!14396 = !DILocation(line: 1683, column: 13, scope: !14377)
!14397 = !DILocation(line: 1683, column: 9, scope: !14377)
!14398 = !DILocation(line: 1684, column: 13, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 1684, column: 6)
!14400 = !DILocation(line: 1684, column: 6, scope: !14399)
!14401 = !DILocation(line: 1684, column: 6, scope: !14377)
!14402 = !DILocation(line: 1685, column: 18, scope: !14399)
!14403 = !DILocation(line: 1685, column: 10, scope: !14399)
!14404 = !DILocation(line: 1685, column: 3, scope: !14399)
!14405 = !DILocation(line: 1687, column: 9, scope: !14406)
!14406 = distinct !DILexicalBlock(scope: !14377, file: !3, line: 1687, column: 2)
!14407 = !DILocation(line: 1687, column: 7, scope: !14406)
!14408 = !DILocation(line: 1687, column: 14, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !14406, file: !3, line: 1687, column: 2)
!14410 = !DILocation(line: 1687, column: 16, scope: !14409)
!14411 = !DILocation(line: 1687, column: 2, scope: !14406)
!14412 = !DILocation(line: 1688, column: 27, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14409, file: !3, line: 1687, column: 33)
!14414 = !DILocation(line: 1688, column: 12, scope: !14413)
!14415 = !DILocation(line: 1688, column: 3, scope: !14413)
!14416 = !DILocation(line: 1688, column: 7, scope: !14413)
!14417 = !DILocation(line: 1688, column: 10, scope: !14413)
!14418 = !DILocation(line: 1689, column: 8, scope: !14419)
!14419 = distinct !DILexicalBlock(scope: !14413, file: !3, line: 1689, column: 7)
!14420 = !DILocation(line: 1689, column: 13, scope: !14419)
!14421 = !DILocation(line: 1689, column: 10, scope: !14419)
!14422 = !DILocation(line: 1689, column: 16, scope: !14419)
!14423 = !DILocation(line: 1689, column: 21, scope: !14419)
!14424 = !DILocation(line: 1689, column: 20, scope: !14419)
!14425 = !DILocation(line: 1689, column: 28, scope: !14419)
!14426 = !DILocation(line: 1689, column: 30, scope: !14419)
!14427 = !DILocation(line: 1689, column: 27, scope: !14419)
!14428 = !DILocation(line: 1689, column: 23, scope: !14419)
!14429 = !DILocation(line: 1689, column: 7, scope: !14413)
!14430 = !DILocation(line: 1690, column: 10, scope: !14431)
!14431 = distinct !DILexicalBlock(scope: !14419, file: !3, line: 1689, column: 61)
!14432 = !DILocation(line: 1690, column: 4, scope: !14431)
!14433 = !DILocation(line: 1691, column: 4, scope: !14431)
!14434 = !DILocation(line: 1693, column: 7, scope: !14413)
!14435 = !DILocation(line: 1693, column: 8, scope: !14413)
!14436 = !DILocation(line: 1693, column: 5, scope: !14413)
!14437 = !DILocation(line: 1694, column: 2, scope: !14413)
!14438 = !DILocation(line: 1687, column: 29, scope: !14409)
!14439 = !DILocation(line: 1687, column: 2, scope: !14409)
!14440 = distinct !{!14440, !14411, !14441}
!14441 = !DILocation(line: 1694, column: 2, scope: !14406)
!14442 = !DILocation(line: 1696, column: 8, scope: !14377)
!14443 = !DILocation(line: 1696, column: 2, scope: !14377)
!14444 = !DILocation(line: 1697, column: 2, scope: !14377)
!14445 = !DILocation(line: 1698, column: 1, scope: !14377)
!14446 = distinct !DISubprogram(name: "xennet_destroy_queues", scope: !3, file: !3, line: 1978, type: !14447, scopeLine: 1979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!14447 = !DISubroutineType(types: !14448)
!14448 = !{null, !10156}
!14449 = !DILocalVariable(name: "info", arg: 1, scope: !14446, file: !3, line: 1978, type: !10156)
!14450 = !DILocation(line: 1978, column: 57, scope: !14446)
!14451 = !DILocalVariable(name: "i", scope: !14446, file: !3, line: 1980, type: !7)
!14452 = !DILocation(line: 1980, column: 15, scope: !14446)
!14453 = !DILocation(line: 1982, column: 9, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !14446, file: !3, line: 1982, column: 2)
!14455 = !DILocation(line: 1982, column: 7, scope: !14454)
!14456 = !DILocation(line: 1982, column: 14, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14454, file: !3, line: 1982, column: 2)
!14458 = !DILocation(line: 1982, column: 18, scope: !14457)
!14459 = !DILocation(line: 1982, column: 24, scope: !14457)
!14460 = !DILocation(line: 1982, column: 32, scope: !14457)
!14461 = !DILocation(line: 1982, column: 16, scope: !14457)
!14462 = !DILocation(line: 1982, column: 2, scope: !14454)
!14463 = !DILocalVariable(name: "queue", scope: !14464, file: !3, line: 1983, type: !10150)
!14464 = distinct !DILexicalBlock(scope: !14457, file: !3, line: 1982, column: 57)
!14465 = !DILocation(line: 1983, column: 26, scope: !14464)
!14466 = !DILocation(line: 1983, column: 35, scope: !14464)
!14467 = !DILocation(line: 1983, column: 41, scope: !14464)
!14468 = !DILocation(line: 1983, column: 48, scope: !14464)
!14469 = !DILocation(line: 1985, column: 21, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14464, file: !3, line: 1985, column: 7)
!14471 = !DILocation(line: 1985, column: 27, scope: !14470)
!14472 = !DILocation(line: 1985, column: 7, scope: !14470)
!14473 = !DILocation(line: 1985, column: 7, scope: !14464)
!14474 = !DILocation(line: 1986, column: 18, scope: !14470)
!14475 = !DILocation(line: 1986, column: 25, scope: !14470)
!14476 = !DILocation(line: 1986, column: 4, scope: !14470)
!14477 = !DILocation(line: 1987, column: 19, scope: !14464)
!14478 = !DILocation(line: 1987, column: 26, scope: !14464)
!14479 = !DILocation(line: 1987, column: 3, scope: !14464)
!14480 = !DILocation(line: 1988, column: 2, scope: !14464)
!14481 = !DILocation(line: 1982, column: 53, scope: !14457)
!14482 = !DILocation(line: 1982, column: 2, scope: !14457)
!14483 = distinct !{!14483, !14462, !14484}
!14484 = !DILocation(line: 1988, column: 2, scope: !14454)
!14485 = !DILocation(line: 1990, column: 8, scope: !14446)
!14486 = !DILocation(line: 1990, column: 14, scope: !14446)
!14487 = !DILocation(line: 1990, column: 2, scope: !14446)
!14488 = !DILocation(line: 1991, column: 2, scope: !14446)
!14489 = !DILocation(line: 1991, column: 8, scope: !14446)
!14490 = !DILocation(line: 1991, column: 15, scope: !14446)
!14491 = !DILocation(line: 1992, column: 1, scope: !14446)
!14492 = distinct !DISubprogram(name: "xennet_create_queues", scope: !3, file: !3, line: 2039, type: !14493, scopeLine: 2041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!14493 = !DISubroutineType(types: !14494)
!14494 = !{!43, !10156, !4838}
!14495 = !DILocalVariable(name: "info", arg: 1, scope: !14492, file: !3, line: 2039, type: !10156)
!14496 = !DILocation(line: 2039, column: 55, scope: !14492)
!14497 = !DILocalVariable(name: "num_queues", arg: 2, scope: !14492, file: !3, line: 2040, type: !4838)
!14498 = !DILocation(line: 2040, column: 19, scope: !14492)
!14499 = !DILocalVariable(name: "i", scope: !14492, file: !3, line: 2042, type: !7)
!14500 = !DILocation(line: 2042, column: 15, scope: !14492)
!14501 = !DILocalVariable(name: "ret", scope: !14492, file: !3, line: 2043, type: !43)
!14502 = !DILocation(line: 2043, column: 6, scope: !14492)
!14503 = !DILocation(line: 2045, column: 26, scope: !14492)
!14504 = !DILocation(line: 2045, column: 25, scope: !14492)
!14505 = !DILocation(line: 2045, column: 17, scope: !14492)
!14506 = !DILocation(line: 2045, column: 2, scope: !14492)
!14507 = !DILocation(line: 2045, column: 8, scope: !14492)
!14508 = !DILocation(line: 2045, column: 15, scope: !14492)
!14509 = !DILocation(line: 2047, column: 7, scope: !14510)
!14510 = distinct !DILexicalBlock(scope: !14492, file: !3, line: 2047, column: 6)
!14511 = !DILocation(line: 2047, column: 13, scope: !14510)
!14512 = !DILocation(line: 2047, column: 6, scope: !14492)
!14513 = !DILocation(line: 2048, column: 3, scope: !14510)
!14514 = !DILocation(line: 2050, column: 9, scope: !14515)
!14515 = distinct !DILexicalBlock(scope: !14492, file: !3, line: 2050, column: 2)
!14516 = !DILocation(line: 2050, column: 7, scope: !14515)
!14517 = !DILocation(line: 2050, column: 14, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !14515, file: !3, line: 2050, column: 2)
!14519 = !DILocation(line: 2050, column: 19, scope: !14518)
!14520 = !DILocation(line: 2050, column: 18, scope: !14518)
!14521 = !DILocation(line: 2050, column: 16, scope: !14518)
!14522 = !DILocation(line: 2050, column: 2, scope: !14515)
!14523 = !DILocalVariable(name: "queue", scope: !14524, file: !3, line: 2051, type: !10150)
!14524 = distinct !DILexicalBlock(scope: !14518, file: !3, line: 2050, column: 36)
!14525 = !DILocation(line: 2051, column: 26, scope: !14524)
!14526 = !DILocation(line: 2051, column: 35, scope: !14524)
!14527 = !DILocation(line: 2051, column: 41, scope: !14524)
!14528 = !DILocation(line: 2051, column: 48, scope: !14524)
!14529 = !DILocation(line: 2053, column: 15, scope: !14524)
!14530 = !DILocation(line: 2053, column: 3, scope: !14524)
!14531 = !DILocation(line: 2053, column: 10, scope: !14524)
!14532 = !DILocation(line: 2053, column: 13, scope: !14524)
!14533 = !DILocation(line: 2054, column: 17, scope: !14524)
!14534 = !DILocation(line: 2054, column: 3, scope: !14524)
!14535 = !DILocation(line: 2054, column: 10, scope: !14524)
!14536 = !DILocation(line: 2054, column: 15, scope: !14524)
!14537 = !DILocation(line: 2056, column: 27, scope: !14524)
!14538 = !DILocation(line: 2056, column: 9, scope: !14524)
!14539 = !DILocation(line: 2056, column: 7, scope: !14524)
!14540 = !DILocation(line: 2057, column: 7, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !14524, file: !3, line: 2057, column: 7)
!14542 = !DILocation(line: 2057, column: 11, scope: !14541)
!14543 = !DILocation(line: 2057, column: 7, scope: !14524)
!14544 = !DILocation(line: 2058, column: 4, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14541, file: !3, line: 2057, column: 16)
!14546 = !DILocation(line: 2060, column: 18, scope: !14545)
!14547 = !DILocation(line: 2060, column: 5, scope: !14545)
!14548 = !DILocation(line: 2060, column: 16, scope: !14545)
!14549 = !DILocation(line: 2061, column: 4, scope: !14545)
!14550 = !DILocation(line: 2065, column: 33, scope: !14524)
!14551 = !DILocation(line: 2065, column: 9, scope: !14524)
!14552 = !DILocation(line: 2065, column: 7, scope: !14524)
!14553 = !DILocation(line: 2066, column: 7, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14524, file: !3, line: 2066, column: 7)
!14555 = !DILocation(line: 2066, column: 11, scope: !14554)
!14556 = !DILocation(line: 2066, column: 7, scope: !14524)
!14557 = !DILocation(line: 2067, column: 4, scope: !14558)
!14558 = distinct !DILexicalBlock(scope: !14554, file: !3, line: 2066, column: 16)
!14559 = !DILocation(line: 2068, column: 18, scope: !14558)
!14560 = !DILocation(line: 2068, column: 5, scope: !14558)
!14561 = !DILocation(line: 2068, column: 16, scope: !14558)
!14562 = !DILocation(line: 2069, column: 11, scope: !14558)
!14563 = !DILocation(line: 2069, column: 4, scope: !14558)
!14564 = !DILocation(line: 2072, column: 18, scope: !14524)
!14565 = !DILocation(line: 2072, column: 25, scope: !14524)
!14566 = !DILocation(line: 2072, column: 31, scope: !14524)
!14567 = !DILocation(line: 2072, column: 40, scope: !14524)
!14568 = !DILocation(line: 2072, column: 47, scope: !14524)
!14569 = !DILocation(line: 2072, column: 3, scope: !14524)
!14570 = !DILocation(line: 2074, column: 21, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !14524, file: !3, line: 2074, column: 7)
!14572 = !DILocation(line: 2074, column: 27, scope: !14571)
!14573 = !DILocation(line: 2074, column: 7, scope: !14571)
!14574 = !DILocation(line: 2074, column: 7, scope: !14524)
!14575 = !DILocation(line: 2075, column: 17, scope: !14571)
!14576 = !DILocation(line: 2075, column: 24, scope: !14571)
!14577 = !DILocation(line: 2075, column: 4, scope: !14571)
!14578 = !DILocation(line: 2076, column: 2, scope: !14524)
!14579 = !DILocation(line: 2050, column: 32, scope: !14518)
!14580 = !DILocation(line: 2050, column: 2, scope: !14518)
!14581 = distinct !{!14581, !14522, !14582}
!14582 = !DILocation(line: 2076, column: 2, scope: !14515)
!14583 = !DILocation(line: 2078, column: 31, scope: !14492)
!14584 = !DILocation(line: 2078, column: 37, scope: !14492)
!14585 = !DILocation(line: 2078, column: 46, scope: !14492)
!14586 = !DILocation(line: 2078, column: 45, scope: !14492)
!14587 = !DILocation(line: 2078, column: 2, scope: !14492)
!14588 = !DILocation(line: 2080, column: 7, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14492, file: !3, line: 2080, column: 6)
!14590 = !DILocation(line: 2080, column: 6, scope: !14589)
!14591 = !DILocation(line: 2080, column: 18, scope: !14589)
!14592 = !DILocation(line: 2080, column: 6, scope: !14492)
!14593 = !DILocation(line: 2081, column: 3, scope: !14594)
!14594 = distinct !DILexicalBlock(scope: !14589, file: !3, line: 2080, column: 24)
!14595 = !DILocation(line: 2082, column: 3, scope: !14594)
!14596 = !DILocation(line: 2084, column: 2, scope: !14492)
!14597 = !DILocation(line: 2085, column: 1, scope: !14492)
!14598 = distinct !DISubprogram(name: "setup_netfront", scope: !3, file: !3, line: 1769, type: !14599, scopeLine: 1771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!14599 = !DISubroutineType(types: !14600)
!14600 = !{!43, !10162, !10150, !7}
!14601 = !DILocalVariable(name: "dev", arg: 1, scope: !14598, file: !3, line: 1769, type: !10162)
!14602 = !DILocation(line: 1769, column: 49, scope: !14598)
!14603 = !DILocalVariable(name: "queue", arg: 2, scope: !14598, file: !3, line: 1770, type: !10150)
!14604 = !DILocation(line: 1770, column: 27, scope: !14598)
!14605 = !DILocalVariable(name: "feature_split_evtchn", arg: 3, scope: !14598, file: !3, line: 1770, type: !7)
!14606 = !DILocation(line: 1770, column: 47, scope: !14598)
!14607 = !DILocalVariable(name: "txs", scope: !14598, file: !3, line: 1772, type: !10242)
!14608 = !DILocation(line: 1772, column: 29, scope: !14598)
!14609 = !DILocalVariable(name: "rxs", scope: !14598, file: !3, line: 1773, type: !10294)
!14610 = !DILocation(line: 1773, column: 29, scope: !14598)
!14611 = !DILocalVariable(name: "gref", scope: !14598, file: !3, line: 1774, type: !10259)
!14612 = !DILocation(line: 1774, column: 14, scope: !14598)
!14613 = !DILocalVariable(name: "err", scope: !14598, file: !3, line: 1775, type: !43)
!14614 = !DILocation(line: 1775, column: 6, scope: !14598)
!14615 = !DILocation(line: 1777, column: 2, scope: !14598)
!14616 = !DILocation(line: 1777, column: 9, scope: !14598)
!14617 = !DILocation(line: 1777, column: 21, scope: !14598)
!14618 = !DILocation(line: 1778, column: 2, scope: !14598)
!14619 = !DILocation(line: 1778, column: 9, scope: !14598)
!14620 = !DILocation(line: 1778, column: 21, scope: !14598)
!14621 = !DILocation(line: 1779, column: 2, scope: !14598)
!14622 = !DILocation(line: 1779, column: 9, scope: !14598)
!14623 = !DILocation(line: 1779, column: 12, scope: !14598)
!14624 = !DILocation(line: 1779, column: 18, scope: !14598)
!14625 = !DILocation(line: 1780, column: 2, scope: !14598)
!14626 = !DILocation(line: 1780, column: 9, scope: !14598)
!14627 = !DILocation(line: 1780, column: 12, scope: !14598)
!14628 = !DILocation(line: 1780, column: 18, scope: !14598)
!14629 = !DILocation(line: 1782, column: 37, scope: !14598)
!14630 = !DILocation(line: 1782, column: 8, scope: !14598)
!14631 = !DILocation(line: 1782, column: 6, scope: !14598)
!14632 = !DILocation(line: 1783, column: 7, scope: !14633)
!14633 = distinct !DILexicalBlock(scope: !14598, file: !3, line: 1783, column: 6)
!14634 = !DILocation(line: 1783, column: 6, scope: !14598)
!14635 = !DILocation(line: 1784, column: 7, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14633, file: !3, line: 1783, column: 12)
!14637 = !DILocation(line: 1785, column: 20, scope: !14636)
!14638 = !DILocation(line: 1785, column: 25, scope: !14636)
!14639 = !DILocation(line: 1785, column: 3, scope: !14636)
!14640 = !DILocation(line: 1786, column: 3, scope: !14636)
!14641 = !DILocation(line: 1788, column: 2, scope: !14598)
!14642 = !DILocation(line: 1788, column: 2, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14598, file: !3, line: 1788, column: 2)
!14644 = !DILocation(line: 1789, column: 2, scope: !14598)
!14645 = !DILocation(line: 1789, column: 2, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14598, file: !3, line: 1789, column: 2)
!14647 = !DILocation(line: 1791, column: 26, scope: !14598)
!14648 = !DILocation(line: 1791, column: 31, scope: !14598)
!14649 = !DILocation(line: 1791, column: 8, scope: !14598)
!14650 = !DILocation(line: 1791, column: 6, scope: !14598)
!14651 = !DILocation(line: 1792, column: 6, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14598, file: !3, line: 1792, column: 6)
!14653 = !DILocation(line: 1792, column: 10, scope: !14652)
!14654 = !DILocation(line: 1792, column: 6, scope: !14598)
!14655 = !DILocation(line: 1793, column: 3, scope: !14652)
!14656 = !DILocation(line: 1794, column: 23, scope: !14598)
!14657 = !DILocation(line: 1794, column: 2, scope: !14598)
!14658 = !DILocation(line: 1794, column: 9, scope: !14598)
!14659 = !DILocation(line: 1794, column: 21, scope: !14598)
!14660 = !DILocation(line: 1796, column: 37, scope: !14598)
!14661 = !DILocation(line: 1796, column: 8, scope: !14598)
!14662 = !DILocation(line: 1796, column: 6, scope: !14598)
!14663 = !DILocation(line: 1797, column: 7, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14598, file: !3, line: 1797, column: 6)
!14665 = !DILocation(line: 1797, column: 6, scope: !14598)
!14666 = !DILocation(line: 1798, column: 7, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14664, file: !3, line: 1797, column: 12)
!14668 = !DILocation(line: 1799, column: 20, scope: !14667)
!14669 = !DILocation(line: 1799, column: 25, scope: !14667)
!14670 = !DILocation(line: 1799, column: 3, scope: !14667)
!14671 = !DILocation(line: 1800, column: 3, scope: !14667)
!14672 = !DILocation(line: 1802, column: 2, scope: !14598)
!14673 = !DILocation(line: 1802, column: 2, scope: !14674)
!14674 = distinct !DILexicalBlock(scope: !14598, file: !3, line: 1802, column: 2)
!14675 = !DILocation(line: 1803, column: 2, scope: !14598)
!14676 = !DILocation(line: 1803, column: 2, scope: !14677)
!14677 = distinct !DILexicalBlock(scope: !14598, file: !3, line: 1803, column: 2)
!14678 = !DILocation(line: 1805, column: 26, scope: !14598)
!14679 = !DILocation(line: 1805, column: 31, scope: !14598)
!14680 = !DILocation(line: 1805, column: 8, scope: !14598)
!14681 = !DILocation(line: 1805, column: 6, scope: !14598)
!14682 = !DILocation(line: 1806, column: 6, scope: !14683)
!14683 = distinct !DILexicalBlock(scope: !14598, file: !3, line: 1806, column: 6)
!14684 = !DILocation(line: 1806, column: 10, scope: !14683)
!14685 = !DILocation(line: 1806, column: 6, scope: !14598)
!14686 = !DILocation(line: 1807, column: 3, scope: !14683)
!14687 = !DILocation(line: 1808, column: 23, scope: !14598)
!14688 = !DILocation(line: 1808, column: 2, scope: !14598)
!14689 = !DILocation(line: 1808, column: 9, scope: !14598)
!14690 = !DILocation(line: 1808, column: 21, scope: !14598)
!14691 = !DILocation(line: 1810, column: 6, scope: !14692)
!14692 = distinct !DILexicalBlock(scope: !14598, file: !3, line: 1810, column: 6)
!14693 = !DILocation(line: 1810, column: 6, scope: !14598)
!14694 = !DILocation(line: 1811, column: 30, scope: !14692)
!14695 = !DILocation(line: 1811, column: 9, scope: !14692)
!14696 = !DILocation(line: 1811, column: 7, scope: !14692)
!14697 = !DILocation(line: 1811, column: 3, scope: !14692)
!14698 = !DILocation(line: 1816, column: 7, scope: !14699)
!14699 = distinct !DILexicalBlock(scope: !14598, file: !3, line: 1816, column: 6)
!14700 = !DILocation(line: 1816, column: 28, scope: !14699)
!14701 = !DILocation(line: 1816, column: 32, scope: !14699)
!14702 = !DILocation(line: 1816, column: 53, scope: !14699)
!14703 = !DILocation(line: 1816, column: 56, scope: !14699)
!14704 = !DILocation(line: 1816, column: 6, scope: !14598)
!14705 = !DILocation(line: 1817, column: 31, scope: !14699)
!14706 = !DILocation(line: 1817, column: 9, scope: !14699)
!14707 = !DILocation(line: 1817, column: 7, scope: !14699)
!14708 = !DILocation(line: 1817, column: 3, scope: !14699)
!14709 = !DILocation(line: 1819, column: 6, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14598, file: !3, line: 1819, column: 6)
!14711 = !DILocation(line: 1819, column: 6, scope: !14598)
!14712 = !DILocation(line: 1820, column: 3, scope: !14710)
!14713 = !DILocation(line: 1822, column: 2, scope: !14598)
!14714 = !DILabel(scope: !14598, name: "alloc_evtchn_fail", file: !3, line: 1827)
!14715 = !DILocation(line: 1827, column: 1, scope: !14598)
!14716 = !DILocation(line: 1828, column: 32, scope: !14598)
!14717 = !DILocation(line: 1828, column: 39, scope: !14598)
!14718 = !DILocation(line: 1828, column: 2, scope: !14598)
!14719 = !DILabel(scope: !14598, name: "grant_rx_ring_fail", file: !3, line: 1829)
!14720 = !DILocation(line: 1829, column: 1, scope: !14598)
!14721 = !DILocation(line: 1830, column: 2, scope: !14598)
!14722 = !DILabel(scope: !14598, name: "alloc_rx_ring_fail", file: !3, line: 1831)
!14723 = !DILocation(line: 1831, column: 1, scope: !14598)
!14724 = !DILocation(line: 1832, column: 32, scope: !14598)
!14725 = !DILocation(line: 1832, column: 39, scope: !14598)
!14726 = !DILocation(line: 1832, column: 2, scope: !14598)
!14727 = !DILabel(scope: !14598, name: "grant_tx_ring_fail", file: !3, line: 1833)
!14728 = !DILocation(line: 1833, column: 1, scope: !14598)
!14729 = !DILocation(line: 1834, column: 2, scope: !14598)
!14730 = !DILabel(scope: !14598, name: "fail", file: !3, line: 1835)
!14731 = !DILocation(line: 1835, column: 1, scope: !14598)
!14732 = !DILocation(line: 1836, column: 9, scope: !14598)
!14733 = !DILocation(line: 1836, column: 2, scope: !14598)
!14734 = !DILocation(line: 1837, column: 1, scope: !14598)
!14735 = distinct !DISubprogram(name: "write_queue_xenstore_keys", scope: !3, file: !3, line: 1896, type: !14736, scopeLine: 1898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!14736 = !DISubroutineType(types: !14737)
!14737 = !{!43, !10150, !14738, !43}
!14738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14076, size: 64)
!14739 = !DILocalVariable(name: "queue", arg: 1, scope: !14735, file: !3, line: 1896, type: !10150)
!14740 = !DILocation(line: 1896, column: 61, scope: !14735)
!14741 = !DILocalVariable(name: "xbt", arg: 2, scope: !14735, file: !3, line: 1897, type: !14738)
!14742 = !DILocation(line: 1897, column: 34, scope: !14735)
!14743 = !DILocalVariable(name: "write_hierarchical", arg: 3, scope: !14735, file: !3, line: 1897, type: !43)
!14744 = !DILocation(line: 1897, column: 43, scope: !14735)
!14745 = !DILocalVariable(name: "dev", scope: !14735, file: !3, line: 1903, type: !10162)
!14746 = !DILocation(line: 1903, column: 24, scope: !14735)
!14747 = !DILocation(line: 1903, column: 30, scope: !14735)
!14748 = !DILocation(line: 1903, column: 37, scope: !14735)
!14749 = !DILocation(line: 1903, column: 43, scope: !14735)
!14750 = !DILocalVariable(name: "err", scope: !14735, file: !3, line: 1904, type: !43)
!14751 = !DILocation(line: 1904, column: 6, scope: !14735)
!14752 = !DILocalVariable(name: "message", scope: !14735, file: !3, line: 1905, type: !303)
!14753 = !DILocation(line: 1905, column: 14, scope: !14735)
!14754 = !DILocalVariable(name: "path", scope: !14735, file: !3, line: 1906, type: !583)
!14755 = !DILocation(line: 1906, column: 8, scope: !14735)
!14756 = !DILocalVariable(name: "pathsize", scope: !14735, file: !3, line: 1907, type: !600)
!14757 = !DILocation(line: 1907, column: 9, scope: !14735)
!14758 = !DILocation(line: 1910, column: 6, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14735, file: !3, line: 1910, column: 6)
!14760 = !DILocation(line: 1910, column: 6, scope: !14735)
!14761 = !DILocation(line: 1911, column: 21, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14759, file: !3, line: 1910, column: 26)
!14763 = !DILocation(line: 1911, column: 26, scope: !14762)
!14764 = !DILocation(line: 1911, column: 14, scope: !14762)
!14765 = !DILocation(line: 1911, column: 36, scope: !14762)
!14766 = !DILocation(line: 1911, column: 12, scope: !14762)
!14767 = !DILocation(line: 1912, column: 18, scope: !14762)
!14768 = !DILocation(line: 1912, column: 10, scope: !14762)
!14769 = !DILocation(line: 1912, column: 8, scope: !14762)
!14770 = !DILocation(line: 1913, column: 8, scope: !14771)
!14771 = distinct !DILexicalBlock(scope: !14762, file: !3, line: 1913, column: 7)
!14772 = !DILocation(line: 1913, column: 7, scope: !14762)
!14773 = !DILocation(line: 1914, column: 8, scope: !14774)
!14774 = distinct !DILexicalBlock(scope: !14771, file: !3, line: 1913, column: 14)
!14775 = !DILocation(line: 1915, column: 12, scope: !14774)
!14776 = !DILocation(line: 1916, column: 4, scope: !14774)
!14777 = !DILocation(line: 1918, column: 12, scope: !14762)
!14778 = !DILocation(line: 1918, column: 18, scope: !14762)
!14779 = !DILocation(line: 1919, column: 5, scope: !14762)
!14780 = !DILocation(line: 1919, column: 10, scope: !14762)
!14781 = !DILocation(line: 1919, column: 20, scope: !14762)
!14782 = !DILocation(line: 1919, column: 27, scope: !14762)
!14783 = !DILocation(line: 1918, column: 3, scope: !14762)
!14784 = !DILocation(line: 1920, column: 2, scope: !14762)
!14785 = !DILocation(line: 1921, column: 18, scope: !14786)
!14786 = distinct !DILexicalBlock(scope: !14759, file: !3, line: 1920, column: 9)
!14787 = !DILocation(line: 1921, column: 23, scope: !14786)
!14788 = !DILocation(line: 1921, column: 8, scope: !14786)
!14789 = !DILocation(line: 1925, column: 23, scope: !14735)
!14790 = !DILocation(line: 1925, column: 28, scope: !14735)
!14791 = !DILocation(line: 1926, column: 4, scope: !14735)
!14792 = !DILocation(line: 1926, column: 11, scope: !14735)
!14793 = !DILocation(line: 1925, column: 8, scope: !14735)
!14794 = !DILocation(line: 1925, column: 6, scope: !14735)
!14795 = !DILocation(line: 1927, column: 6, scope: !14796)
!14796 = distinct !DILexicalBlock(scope: !14735, file: !3, line: 1927, column: 6)
!14797 = !DILocation(line: 1927, column: 6, scope: !14735)
!14798 = !DILocation(line: 1928, column: 11, scope: !14799)
!14799 = distinct !DILexicalBlock(scope: !14796, file: !3, line: 1927, column: 11)
!14800 = !DILocation(line: 1929, column: 3, scope: !14799)
!14801 = !DILocation(line: 1932, column: 23, scope: !14735)
!14802 = !DILocation(line: 1932, column: 28, scope: !14735)
!14803 = !DILocation(line: 1933, column: 4, scope: !14735)
!14804 = !DILocation(line: 1933, column: 11, scope: !14735)
!14805 = !DILocation(line: 1932, column: 8, scope: !14735)
!14806 = !DILocation(line: 1932, column: 6, scope: !14735)
!14807 = !DILocation(line: 1934, column: 6, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14735, file: !3, line: 1934, column: 6)
!14809 = !DILocation(line: 1934, column: 6, scope: !14735)
!14810 = !DILocation(line: 1935, column: 11, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14808, file: !3, line: 1934, column: 11)
!14812 = !DILocation(line: 1936, column: 3, scope: !14811)
!14813 = !DILocation(line: 1942, column: 6, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14735, file: !3, line: 1942, column: 6)
!14815 = !DILocation(line: 1942, column: 13, scope: !14814)
!14816 = !DILocation(line: 1942, column: 26, scope: !14814)
!14817 = !DILocation(line: 1942, column: 33, scope: !14814)
!14818 = !DILocation(line: 1942, column: 23, scope: !14814)
!14819 = !DILocation(line: 1942, column: 6, scope: !14735)
!14820 = !DILocation(line: 1944, column: 24, scope: !14821)
!14821 = distinct !DILexicalBlock(scope: !14814, file: !3, line: 1942, column: 44)
!14822 = !DILocation(line: 1944, column: 29, scope: !14821)
!14823 = !DILocation(line: 1945, column: 28, scope: !14821)
!14824 = !DILocation(line: 1945, column: 35, scope: !14821)
!14825 = !DILocation(line: 1944, column: 9, scope: !14821)
!14826 = !DILocation(line: 1944, column: 7, scope: !14821)
!14827 = !DILocation(line: 1946, column: 7, scope: !14828)
!14828 = distinct !DILexicalBlock(scope: !14821, file: !3, line: 1946, column: 7)
!14829 = !DILocation(line: 1946, column: 7, scope: !14821)
!14830 = !DILocation(line: 1947, column: 12, scope: !14831)
!14831 = distinct !DILexicalBlock(scope: !14828, file: !3, line: 1946, column: 12)
!14832 = !DILocation(line: 1948, column: 4, scope: !14831)
!14833 = !DILocation(line: 1950, column: 2, scope: !14821)
!14834 = !DILocation(line: 1952, column: 24, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14814, file: !3, line: 1950, column: 9)
!14836 = !DILocation(line: 1952, column: 29, scope: !14835)
!14837 = !DILocation(line: 1953, column: 31, scope: !14835)
!14838 = !DILocation(line: 1953, column: 38, scope: !14835)
!14839 = !DILocation(line: 1952, column: 9, scope: !14835)
!14840 = !DILocation(line: 1952, column: 7, scope: !14835)
!14841 = !DILocation(line: 1954, column: 7, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14835, file: !3, line: 1954, column: 7)
!14843 = !DILocation(line: 1954, column: 7, scope: !14835)
!14844 = !DILocation(line: 1955, column: 12, scope: !14845)
!14845 = distinct !DILexicalBlock(scope: !14842, file: !3, line: 1954, column: 12)
!14846 = !DILocation(line: 1956, column: 4, scope: !14845)
!14847 = !DILocation(line: 1959, column: 24, scope: !14835)
!14848 = !DILocation(line: 1959, column: 29, scope: !14835)
!14849 = !DILocation(line: 1960, column: 31, scope: !14835)
!14850 = !DILocation(line: 1960, column: 38, scope: !14835)
!14851 = !DILocation(line: 1959, column: 9, scope: !14835)
!14852 = !DILocation(line: 1959, column: 7, scope: !14835)
!14853 = !DILocation(line: 1961, column: 7, scope: !14854)
!14854 = distinct !DILexicalBlock(scope: !14835, file: !3, line: 1961, column: 7)
!14855 = !DILocation(line: 1961, column: 7, scope: !14835)
!14856 = !DILocation(line: 1962, column: 12, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14854, file: !3, line: 1961, column: 12)
!14858 = !DILocation(line: 1963, column: 4, scope: !14857)
!14859 = !DILocation(line: 1967, column: 6, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14735, file: !3, line: 1967, column: 6)
!14861 = !DILocation(line: 1967, column: 6, scope: !14735)
!14862 = !DILocation(line: 1968, column: 9, scope: !14860)
!14863 = !DILocation(line: 1968, column: 3, scope: !14860)
!14864 = !DILocation(line: 1969, column: 2, scope: !14735)
!14865 = !DILabel(scope: !14735, name: "error", file: !3, line: 1971)
!14866 = !DILocation(line: 1971, column: 1, scope: !14735)
!14867 = !DILocation(line: 1972, column: 6, scope: !14868)
!14868 = distinct !DILexicalBlock(scope: !14735, file: !3, line: 1972, column: 6)
!14869 = !DILocation(line: 1972, column: 6, scope: !14735)
!14870 = !DILocation(line: 1973, column: 9, scope: !14868)
!14871 = !DILocation(line: 1973, column: 3, scope: !14868)
!14872 = !DILocation(line: 1974, column: 19, scope: !14735)
!14873 = !DILocation(line: 1974, column: 24, scope: !14735)
!14874 = !DILocation(line: 1974, column: 35, scope: !14735)
!14875 = !DILocation(line: 1974, column: 2, scope: !14735)
!14876 = !DILocation(line: 1975, column: 9, scope: !14735)
!14877 = !DILocation(line: 1975, column: 2, scope: !14735)
!14878 = !DILocation(line: 1976, column: 1, scope: !14735)
!14879 = distinct !DISubprogram(name: "xennet_disconnect_backend", scope: !3, file: !3, line: 1620, type: !14447, scopeLine: 1621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!14880 = !DILocalVariable(name: "info", arg: 1, scope: !14879, file: !3, line: 1620, type: !10156)
!14881 = !DILocation(line: 1620, column: 61, scope: !14879)
!14882 = !DILocalVariable(name: "i", scope: !14879, file: !3, line: 1622, type: !7)
!14883 = !DILocation(line: 1622, column: 15, scope: !14879)
!14884 = !DILocalVariable(name: "num_queues", scope: !14879, file: !3, line: 1623, type: !7)
!14885 = !DILocation(line: 1623, column: 15, scope: !14879)
!14886 = !DILocation(line: 1623, column: 28, scope: !14879)
!14887 = !DILocation(line: 1623, column: 34, scope: !14879)
!14888 = !DILocation(line: 1623, column: 42, scope: !14879)
!14889 = !DILocation(line: 1625, column: 20, scope: !14879)
!14890 = !DILocation(line: 1625, column: 26, scope: !14879)
!14891 = !DILocation(line: 1625, column: 2, scope: !14879)
!14892 = !DILocation(line: 1627, column: 9, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14879, file: !3, line: 1627, column: 2)
!14894 = !DILocation(line: 1627, column: 7, scope: !14893)
!14895 = !DILocation(line: 1627, column: 14, scope: !14896)
!14896 = distinct !DILexicalBlock(scope: !14893, file: !3, line: 1627, column: 2)
!14897 = !DILocation(line: 1627, column: 18, scope: !14896)
!14898 = !DILocation(line: 1627, column: 16, scope: !14896)
!14899 = !DILocation(line: 1627, column: 29, scope: !14896)
!14900 = !DILocation(line: 1627, column: 32, scope: !14896)
!14901 = !DILocation(line: 1627, column: 38, scope: !14896)
!14902 = !DILocation(line: 0, scope: !14896)
!14903 = !DILocation(line: 1627, column: 2, scope: !14893)
!14904 = !DILocalVariable(name: "queue", scope: !14905, file: !3, line: 1628, type: !10150)
!14905 = distinct !DILexicalBlock(scope: !14896, file: !3, line: 1627, column: 51)
!14906 = !DILocation(line: 1628, column: 26, scope: !14905)
!14907 = !DILocation(line: 1628, column: 35, scope: !14905)
!14908 = !DILocation(line: 1628, column: 41, scope: !14905)
!14909 = !DILocation(line: 1628, column: 48, scope: !14905)
!14910 = !DILocation(line: 1630, column: 3, scope: !14905)
!14911 = !DILocation(line: 1632, column: 7, scope: !14912)
!14912 = distinct !DILexicalBlock(scope: !14905, file: !3, line: 1632, column: 7)
!14913 = !DILocation(line: 1632, column: 14, scope: !14912)
!14914 = !DILocation(line: 1632, column: 21, scope: !14912)
!14915 = !DILocation(line: 1632, column: 25, scope: !14912)
!14916 = !DILocation(line: 1632, column: 32, scope: !14912)
!14917 = !DILocation(line: 1632, column: 42, scope: !14912)
!14918 = !DILocation(line: 1632, column: 49, scope: !14912)
!14919 = !DILocation(line: 1632, column: 39, scope: !14912)
!14920 = !DILocation(line: 1632, column: 7, scope: !14905)
!14921 = !DILocation(line: 1633, column: 27, scope: !14912)
!14922 = !DILocation(line: 1633, column: 34, scope: !14912)
!14923 = !DILocation(line: 1633, column: 42, scope: !14912)
!14924 = !DILocation(line: 1633, column: 4, scope: !14912)
!14925 = !DILocation(line: 1634, column: 7, scope: !14926)
!14926 = distinct !DILexicalBlock(scope: !14905, file: !3, line: 1634, column: 7)
!14927 = !DILocation(line: 1634, column: 14, scope: !14926)
!14928 = !DILocation(line: 1634, column: 21, scope: !14926)
!14929 = !DILocation(line: 1634, column: 25, scope: !14926)
!14930 = !DILocation(line: 1634, column: 32, scope: !14926)
!14931 = !DILocation(line: 1634, column: 42, scope: !14926)
!14932 = !DILocation(line: 1634, column: 49, scope: !14926)
!14933 = !DILocation(line: 1634, column: 39, scope: !14926)
!14934 = !DILocation(line: 1634, column: 7, scope: !14905)
!14935 = !DILocation(line: 1635, column: 27, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14926, file: !3, line: 1634, column: 58)
!14937 = !DILocation(line: 1635, column: 34, scope: !14936)
!14938 = !DILocation(line: 1635, column: 42, scope: !14936)
!14939 = !DILocation(line: 1635, column: 4, scope: !14936)
!14940 = !DILocation(line: 1636, column: 27, scope: !14936)
!14941 = !DILocation(line: 1636, column: 34, scope: !14936)
!14942 = !DILocation(line: 1636, column: 42, scope: !14936)
!14943 = !DILocation(line: 1636, column: 4, scope: !14936)
!14944 = !DILocation(line: 1637, column: 3, scope: !14936)
!14945 = !DILocation(line: 1638, column: 22, scope: !14905)
!14946 = !DILocation(line: 1638, column: 29, scope: !14905)
!14947 = !DILocation(line: 1638, column: 39, scope: !14905)
!14948 = !DILocation(line: 1638, column: 3, scope: !14905)
!14949 = !DILocation(line: 1638, column: 10, scope: !14905)
!14950 = !DILocation(line: 1638, column: 20, scope: !14905)
!14951 = !DILocation(line: 1639, column: 19, scope: !14905)
!14952 = !DILocation(line: 1639, column: 26, scope: !14905)
!14953 = !DILocation(line: 1639, column: 33, scope: !14905)
!14954 = !DILocation(line: 1639, column: 3, scope: !14905)
!14955 = !DILocation(line: 1639, column: 10, scope: !14905)
!14956 = !DILocation(line: 1639, column: 17, scope: !14905)
!14957 = !DILocation(line: 1641, column: 21, scope: !14958)
!14958 = distinct !DILexicalBlock(scope: !14905, file: !3, line: 1641, column: 7)
!14959 = !DILocation(line: 1641, column: 27, scope: !14958)
!14960 = !DILocation(line: 1641, column: 7, scope: !14958)
!14961 = !DILocation(line: 1641, column: 7, scope: !14905)
!14962 = !DILocation(line: 1642, column: 22, scope: !14958)
!14963 = !DILocation(line: 1642, column: 29, scope: !14958)
!14964 = !DILocation(line: 1642, column: 4, scope: !14958)
!14965 = !DILocation(line: 1644, column: 26, scope: !14905)
!14966 = !DILocation(line: 1644, column: 3, scope: !14905)
!14967 = !DILocation(line: 1645, column: 26, scope: !14905)
!14968 = !DILocation(line: 1645, column: 3, scope: !14905)
!14969 = !DILocation(line: 1646, column: 32, scope: !14905)
!14970 = !DILocation(line: 1646, column: 39, scope: !14905)
!14971 = !DILocation(line: 1646, column: 3, scope: !14905)
!14972 = !DILocation(line: 1647, column: 32, scope: !14905)
!14973 = !DILocation(line: 1647, column: 39, scope: !14905)
!14974 = !DILocation(line: 1647, column: 3, scope: !14905)
!14975 = !DILocation(line: 1650, column: 21, scope: !14905)
!14976 = !DILocation(line: 1650, column: 28, scope: !14905)
!14977 = !DILocation(line: 1650, column: 41, scope: !14905)
!14978 = !DILocation(line: 1650, column: 48, scope: !14905)
!14979 = !DILocation(line: 1650, column: 51, scope: !14905)
!14980 = !DILocation(line: 1650, column: 3, scope: !14905)
!14981 = !DILocation(line: 1651, column: 21, scope: !14905)
!14982 = !DILocation(line: 1651, column: 28, scope: !14905)
!14983 = !DILocation(line: 1651, column: 41, scope: !14905)
!14984 = !DILocation(line: 1651, column: 48, scope: !14905)
!14985 = !DILocation(line: 1651, column: 51, scope: !14905)
!14986 = !DILocation(line: 1651, column: 3, scope: !14905)
!14987 = !DILocation(line: 1653, column: 3, scope: !14905)
!14988 = !DILocation(line: 1653, column: 10, scope: !14905)
!14989 = !DILocation(line: 1653, column: 22, scope: !14905)
!14990 = !DILocation(line: 1654, column: 3, scope: !14905)
!14991 = !DILocation(line: 1654, column: 10, scope: !14905)
!14992 = !DILocation(line: 1654, column: 22, scope: !14905)
!14993 = !DILocation(line: 1655, column: 3, scope: !14905)
!14994 = !DILocation(line: 1655, column: 10, scope: !14905)
!14995 = !DILocation(line: 1655, column: 13, scope: !14905)
!14996 = !DILocation(line: 1655, column: 19, scope: !14905)
!14997 = !DILocation(line: 1656, column: 3, scope: !14905)
!14998 = !DILocation(line: 1656, column: 10, scope: !14905)
!14999 = !DILocation(line: 1656, column: 13, scope: !14905)
!15000 = !DILocation(line: 1656, column: 19, scope: !14905)
!15001 = !DILocation(line: 1658, column: 21, scope: !14905)
!15002 = !DILocation(line: 1658, column: 28, scope: !14905)
!15003 = !DILocation(line: 1658, column: 3, scope: !14905)
!15004 = !DILocation(line: 1659, column: 2, scope: !14905)
!15005 = !DILocation(line: 1627, column: 46, scope: !14896)
!15006 = !DILocation(line: 1627, column: 2, scope: !14896)
!15007 = distinct !{!15007, !14903, !15008}
!15008 = !DILocation(line: 1659, column: 2, scope: !14893)
!15009 = !DILocation(line: 1660, column: 1, scope: !14879)
!15010 = distinct !DISubprogram(name: "netif_napi_del", scope: !42, file: !42, line: 2392, type: !11843, scopeLine: 2393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15011 = !DILocalVariable(name: "napi", arg: 1, scope: !15010, file: !42, line: 2392, type: !10210)
!15012 = !DILocation(line: 2392, column: 55, scope: !15010)
!15013 = !DILocation(line: 2394, column: 19, scope: !15010)
!15014 = !DILocation(line: 2394, column: 2, scope: !15010)
!15015 = !DILocation(line: 2395, column: 2, scope: !15010)
!15016 = !DILocation(line: 2396, column: 1, scope: !15010)
!15017 = distinct !DISubprogram(name: "kcalloc", scope: !10050, file: !10050, line: 601, type: !15018, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15018 = !DISubroutineType(types: !15019)
!15019 = !{!576, !600, !600, !1996}
!15020 = !DILocalVariable(name: "n", arg: 1, scope: !15017, file: !10050, line: 601, type: !600)
!15021 = !DILocation(line: 601, column: 36, scope: !15017)
!15022 = !DILocalVariable(name: "size", arg: 2, scope: !15017, file: !10050, line: 601, type: !600)
!15023 = !DILocation(line: 601, column: 46, scope: !15017)
!15024 = !DILocalVariable(name: "flags", arg: 3, scope: !15017, file: !10050, line: 601, type: !1996)
!15025 = !DILocation(line: 601, column: 58, scope: !15017)
!15026 = !DILocation(line: 603, column: 23, scope: !15017)
!15027 = !DILocation(line: 603, column: 26, scope: !15017)
!15028 = !DILocation(line: 603, column: 32, scope: !15017)
!15029 = !DILocation(line: 603, column: 38, scope: !15017)
!15030 = !DILocation(line: 603, column: 9, scope: !15017)
!15031 = !DILocation(line: 603, column: 2, scope: !15017)
!15032 = distinct !DISubprogram(name: "xennet_init_queue", scope: !3, file: !3, line: 1843, type: !12885, scopeLine: 1844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15033 = !DILocation(line: 327, column: 67, scope: !11109, inlinedAt: !15034)
!15034 = distinct !DILocation(line: 1850, column: 2, scope: !15035)
!15035 = distinct !DILexicalBlock(scope: !15032, file: !3, line: 1850, column: 2)
!15036 = !DILocation(line: 327, column: 67, scope: !11109, inlinedAt: !15037)
!15037 = distinct !DILocation(line: 1849, column: 2, scope: !15038)
!15038 = distinct !DILexicalBlock(scope: !15032, file: !3, line: 1849, column: 2)
!15039 = !DILocalVariable(name: "queue", arg: 1, scope: !15032, file: !3, line: 1843, type: !10150)
!15040 = !DILocation(line: 1843, column: 53, scope: !15032)
!15041 = !DILocalVariable(name: "i", scope: !15032, file: !3, line: 1845, type: !483)
!15042 = !DILocation(line: 1845, column: 17, scope: !15032)
!15043 = !DILocalVariable(name: "err", scope: !15032, file: !3, line: 1846, type: !43)
!15044 = !DILocation(line: 1846, column: 6, scope: !15032)
!15045 = !DILocalVariable(name: "devid", scope: !15032, file: !3, line: 1847, type: !583)
!15046 = !DILocation(line: 1847, column: 8, scope: !15032)
!15047 = !DILocation(line: 1849, column: 2, scope: !15032)
!15048 = !DILocation(line: 1849, column: 2, scope: !15038)
!15049 = !DILocation(line: 329, column: 10, scope: !11109, inlinedAt: !15037)
!15050 = !DILocation(line: 329, column: 16, scope: !11109, inlinedAt: !15037)
!15051 = !DILocation(line: 1850, column: 2, scope: !15032)
!15052 = !DILocation(line: 1850, column: 2, scope: !15035)
!15053 = !DILocation(line: 329, column: 10, scope: !11109, inlinedAt: !15034)
!15054 = !DILocation(line: 329, column: 16, scope: !11109, inlinedAt: !15034)
!15055 = !DILocation(line: 1852, column: 2, scope: !15032)
!15056 = !DILocation(line: 1854, column: 18, scope: !15032)
!15057 = !DILocation(line: 1854, column: 25, scope: !15032)
!15058 = !DILocation(line: 1854, column: 31, scope: !15032)
!15059 = !DILocation(line: 1854, column: 38, scope: !15032)
!15060 = !DILocation(line: 1854, column: 10, scope: !15032)
!15061 = !DILocation(line: 1854, column: 53, scope: !15032)
!15062 = !DILocation(line: 1854, column: 8, scope: !15032)
!15063 = !DILocation(line: 1855, column: 11, scope: !15032)
!15064 = !DILocation(line: 1855, column: 18, scope: !15032)
!15065 = !DILocation(line: 1856, column: 4, scope: !15032)
!15066 = !DILocation(line: 1856, column: 11, scope: !15032)
!15067 = !DILocation(line: 1856, column: 18, scope: !15032)
!15068 = !DILocation(line: 1855, column: 2, scope: !15032)
!15069 = !DILocation(line: 1859, column: 2, scope: !15032)
!15070 = !DILocation(line: 1859, column: 9, scope: !15032)
!15071 = !DILocation(line: 1859, column: 25, scope: !15032)
!15072 = !DILocation(line: 1860, column: 9, scope: !15073)
!15073 = distinct !DILexicalBlock(scope: !15032, file: !3, line: 1860, column: 2)
!15074 = !DILocation(line: 1860, column: 7, scope: !15073)
!15075 = !DILocation(line: 1860, column: 14, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !15073, file: !3, line: 1860, column: 2)
!15077 = !DILocation(line: 1860, column: 16, scope: !15076)
!15078 = !DILocation(line: 1860, column: 2, scope: !15073)
!15079 = !DILocation(line: 1861, column: 23, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !15076, file: !3, line: 1860, column: 41)
!15081 = !DILocation(line: 1861, column: 30, scope: !15080)
!15082 = !DILocation(line: 1861, column: 38, scope: !15080)
!15083 = !DILocation(line: 1861, column: 42, scope: !15080)
!15084 = !DILocation(line: 1861, column: 43, scope: !15080)
!15085 = !DILocation(line: 1861, column: 3, scope: !15080)
!15086 = !DILocation(line: 1862, column: 3, scope: !15080)
!15087 = !DILocation(line: 1862, column: 10, scope: !15080)
!15088 = !DILocation(line: 1862, column: 23, scope: !15080)
!15089 = !DILocation(line: 1862, column: 26, scope: !15080)
!15090 = !DILocation(line: 1863, column: 3, scope: !15080)
!15091 = !DILocation(line: 1863, column: 10, scope: !15080)
!15092 = !DILocation(line: 1863, column: 24, scope: !15080)
!15093 = !DILocation(line: 1863, column: 27, scope: !15080)
!15094 = !DILocation(line: 1864, column: 2, scope: !15080)
!15095 = !DILocation(line: 1860, column: 37, scope: !15076)
!15096 = !DILocation(line: 1860, column: 2, scope: !15076)
!15097 = distinct !{!15097, !15078, !15098}
!15098 = !DILocation(line: 1864, column: 2, scope: !15073)
!15099 = !DILocation(line: 1867, column: 9, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !15032, file: !3, line: 1867, column: 2)
!15101 = !DILocation(line: 1867, column: 7, scope: !15100)
!15102 = !DILocation(line: 1867, column: 14, scope: !15103)
!15103 = distinct !DILexicalBlock(scope: !15100, file: !3, line: 1867, column: 2)
!15104 = !DILocation(line: 1867, column: 16, scope: !15103)
!15105 = !DILocation(line: 1867, column: 2, scope: !15100)
!15106 = !DILocation(line: 1868, column: 3, scope: !15107)
!15107 = distinct !DILexicalBlock(scope: !15103, file: !3, line: 1867, column: 41)
!15108 = !DILocation(line: 1868, column: 10, scope: !15107)
!15109 = !DILocation(line: 1868, column: 18, scope: !15107)
!15110 = !DILocation(line: 1868, column: 21, scope: !15107)
!15111 = !DILocation(line: 1869, column: 3, scope: !15107)
!15112 = !DILocation(line: 1869, column: 10, scope: !15107)
!15113 = !DILocation(line: 1869, column: 23, scope: !15107)
!15114 = !DILocation(line: 1869, column: 26, scope: !15107)
!15115 = !DILocation(line: 1870, column: 2, scope: !15107)
!15116 = !DILocation(line: 1867, column: 37, scope: !15103)
!15117 = !DILocation(line: 1867, column: 2, scope: !15103)
!15118 = distinct !{!15118, !15105, !15119}
!15119 = !DILocation(line: 1870, column: 2, scope: !15100)
!15120 = !DILocation(line: 1874, column: 9, scope: !15121)
!15121 = distinct !DILexicalBlock(scope: !15032, file: !3, line: 1873, column: 6)
!15122 = !DILocation(line: 1874, column: 16, scope: !15121)
!15123 = !DILocation(line: 1873, column: 6, scope: !15121)
!15124 = !DILocation(line: 1874, column: 30, scope: !15121)
!15125 = !DILocation(line: 1873, column: 6, scope: !15032)
!15126 = !DILocation(line: 1875, column: 3, scope: !15127)
!15127 = distinct !DILexicalBlock(scope: !15121, file: !3, line: 1874, column: 35)
!15128 = !DILocation(line: 1876, column: 7, scope: !15127)
!15129 = !DILocation(line: 1877, column: 3, scope: !15127)
!15130 = !DILocation(line: 1882, column: 9, scope: !15131)
!15131 = distinct !DILexicalBlock(scope: !15032, file: !3, line: 1881, column: 6)
!15132 = !DILocation(line: 1882, column: 16, scope: !15131)
!15133 = !DILocation(line: 1881, column: 6, scope: !15131)
!15134 = !DILocation(line: 1882, column: 30, scope: !15131)
!15135 = !DILocation(line: 1881, column: 6, scope: !15032)
!15136 = !DILocation(line: 1883, column: 3, scope: !15137)
!15137 = distinct !DILexicalBlock(scope: !15131, file: !3, line: 1882, column: 35)
!15138 = !DILocation(line: 1884, column: 7, scope: !15137)
!15139 = !DILocation(line: 1885, column: 3, scope: !15137)
!15140 = !DILocation(line: 1888, column: 2, scope: !15032)
!15141 = !DILabel(scope: !15032, name: "exit_free_tx", file: !3, line: 1890)
!15142 = !DILocation(line: 1890, column: 2, scope: !15032)
!15143 = !DILocation(line: 1891, column: 31, scope: !15032)
!15144 = !DILocation(line: 1891, column: 38, scope: !15032)
!15145 = !DILocation(line: 1891, column: 2, scope: !15032)
!15146 = !DILabel(scope: !15032, name: "exit", file: !3, line: 1892)
!15147 = !DILocation(line: 1892, column: 2, scope: !15032)
!15148 = !DILocation(line: 1893, column: 9, scope: !15032)
!15149 = !DILocation(line: 1893, column: 2, scope: !15032)
!15150 = !DILocation(line: 1894, column: 1, scope: !15032)
!15151 = distinct !DISubprogram(name: "xennet_create_page_pool", scope: !3, file: !3, line: 1996, type: !12885, scopeLine: 1997, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15152 = !DILocalVariable(name: "queue", arg: 1, scope: !15151, file: !3, line: 1996, type: !10150)
!15153 = !DILocation(line: 1996, column: 59, scope: !15151)
!15154 = !DILocalVariable(name: "err", scope: !15151, file: !3, line: 1998, type: !43)
!15155 = !DILocation(line: 1998, column: 6, scope: !15151)
!15156 = !DILocalVariable(name: "pp_params", scope: !15151, file: !3, line: 1999, type: !10331)
!15157 = !DILocation(line: 1999, column: 26, scope: !15151)
!15158 = !DILocation(line: 1999, column: 38, scope: !15151)
!15159 = !DILocation(line: 2004, column: 11, scope: !15151)
!15160 = !DILocation(line: 2004, column: 18, scope: !15151)
!15161 = !DILocation(line: 2004, column: 24, scope: !15151)
!15162 = !DILocation(line: 2004, column: 32, scope: !15151)
!15163 = !DILocation(line: 2009, column: 21, scope: !15151)
!15164 = !DILocation(line: 2009, column: 2, scope: !15151)
!15165 = !DILocation(line: 2009, column: 9, scope: !15151)
!15166 = !DILocation(line: 2009, column: 19, scope: !15151)
!15167 = !DILocation(line: 2010, column: 13, scope: !15168)
!15168 = distinct !DILexicalBlock(scope: !15151, file: !3, line: 2010, column: 6)
!15169 = !DILocation(line: 2010, column: 20, scope: !15168)
!15170 = !DILocation(line: 2010, column: 6, scope: !15168)
!15171 = !DILocation(line: 2010, column: 6, scope: !15151)
!15172 = !DILocation(line: 2011, column: 17, scope: !15173)
!15173 = distinct !DILexicalBlock(scope: !15168, file: !3, line: 2010, column: 32)
!15174 = !DILocation(line: 2011, column: 24, scope: !15173)
!15175 = !DILocation(line: 2011, column: 9, scope: !15173)
!15176 = !DILocation(line: 2011, column: 7, scope: !15173)
!15177 = !DILocation(line: 2012, column: 3, scope: !15173)
!15178 = !DILocation(line: 2012, column: 10, scope: !15173)
!15179 = !DILocation(line: 2012, column: 20, scope: !15173)
!15180 = !DILocation(line: 2013, column: 10, scope: !15173)
!15181 = !DILocation(line: 2013, column: 3, scope: !15173)
!15182 = !DILocation(line: 2016, column: 26, scope: !15151)
!15183 = !DILocation(line: 2016, column: 33, scope: !15151)
!15184 = !DILocation(line: 2016, column: 42, scope: !15151)
!15185 = !DILocation(line: 2016, column: 49, scope: !15151)
!15186 = !DILocation(line: 2016, column: 55, scope: !15151)
!15187 = !DILocation(line: 2017, column: 11, scope: !15151)
!15188 = !DILocation(line: 2017, column: 18, scope: !15151)
!15189 = !DILocation(line: 2016, column: 8, scope: !15151)
!15190 = !DILocation(line: 2016, column: 6, scope: !15151)
!15191 = !DILocation(line: 2018, column: 6, scope: !15192)
!15192 = distinct !DILexicalBlock(scope: !15151, file: !3, line: 2018, column: 6)
!15193 = !DILocation(line: 2018, column: 6, scope: !15151)
!15194 = !DILocation(line: 2019, column: 14, scope: !15195)
!15195 = distinct !DILexicalBlock(scope: !15192, file: !3, line: 2018, column: 11)
!15196 = !DILocation(line: 2019, column: 21, scope: !15195)
!15197 = !DILocation(line: 2019, column: 27, scope: !15195)
!15198 = !DILocation(line: 2019, column: 3, scope: !15195)
!15199 = !DILocation(line: 2020, column: 3, scope: !15195)
!15200 = !DILocation(line: 2023, column: 36, scope: !15151)
!15201 = !DILocation(line: 2023, column: 43, scope: !15151)
!15202 = !DILocation(line: 2024, column: 27, scope: !15151)
!15203 = !DILocation(line: 2024, column: 34, scope: !15151)
!15204 = !DILocation(line: 2023, column: 8, scope: !15151)
!15205 = !DILocation(line: 2023, column: 6, scope: !15151)
!15206 = !DILocation(line: 2025, column: 6, scope: !15207)
!15207 = distinct !DILexicalBlock(scope: !15151, file: !3, line: 2025, column: 6)
!15208 = !DILocation(line: 2025, column: 6, scope: !15151)
!15209 = !DILocation(line: 2026, column: 14, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !15207, file: !3, line: 2025, column: 11)
!15211 = !DILocation(line: 2026, column: 21, scope: !15210)
!15212 = !DILocation(line: 2026, column: 27, scope: !15210)
!15213 = !DILocation(line: 2026, column: 3, scope: !15210)
!15214 = !DILocation(line: 2027, column: 3, scope: !15210)
!15215 = !DILocation(line: 2029, column: 2, scope: !15151)
!15216 = !DILabel(scope: !15151, name: "err_unregister_rxq", file: !3, line: 2031)
!15217 = !DILocation(line: 2031, column: 1, scope: !15151)
!15218 = !DILocation(line: 2032, column: 22, scope: !15151)
!15219 = !DILocation(line: 2032, column: 29, scope: !15151)
!15220 = !DILocation(line: 2032, column: 2, scope: !15151)
!15221 = !DILabel(scope: !15151, name: "err_free_pp", file: !3, line: 2033)
!15222 = !DILocation(line: 2033, column: 1, scope: !15151)
!15223 = !DILocation(line: 2034, column: 20, scope: !15151)
!15224 = !DILocation(line: 2034, column: 27, scope: !15151)
!15225 = !DILocation(line: 2034, column: 2, scope: !15151)
!15226 = !DILocation(line: 2035, column: 2, scope: !15151)
!15227 = !DILocation(line: 2035, column: 9, scope: !15151)
!15228 = !DILocation(line: 2035, column: 19, scope: !15151)
!15229 = !DILocation(line: 2036, column: 9, scope: !15151)
!15230 = !DILocation(line: 2036, column: 2, scope: !15151)
!15231 = !DILocation(line: 2037, column: 1, scope: !15151)
!15232 = distinct !DISubprogram(name: "xennet_poll", scope: !3, file: !3, line: 1138, type: !10208, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15233 = !DILocalVariable(name: "lock", arg: 1, scope: !15234, file: !11089, line: 392, type: !2450)
!15234 = distinct !DISubprogram(name: "spin_unlock", scope: !11089, file: !11089, line: 392, type: !11874, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15235 = !DILocation(line: 392, column: 53, scope: !15234, inlinedAt: !15236)
!15236 = distinct !DILocation(line: 1235, column: 2, scope: !15232)
!15237 = !DILocalVariable(name: "lock", arg: 1, scope: !15238, file: !11089, line: 352, type: !2450)
!15238 = distinct !DISubprogram(name: "spin_lock", scope: !11089, file: !11089, line: 352, type: !11874, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15239 = !DILocation(line: 352, column: 51, scope: !15238, inlinedAt: !15240)
!15240 = distinct !DILocation(line: 1154, column: 2, scope: !15232)
!15241 = !DILocalVariable(name: "napi", arg: 1, scope: !15232, file: !3, line: 1138, type: !10210)
!15242 = !DILocation(line: 1138, column: 44, scope: !15232)
!15243 = !DILocalVariable(name: "budget", arg: 2, scope: !15232, file: !3, line: 1138, type: !43)
!15244 = !DILocation(line: 1138, column: 54, scope: !15232)
!15245 = !DILocalVariable(name: "queue", scope: !15232, file: !3, line: 1140, type: !10150)
!15246 = !DILocation(line: 1140, column: 25, scope: !15232)
!15247 = !DILocalVariable(name: "__mptr", scope: !15248, file: !3, line: 1140, type: !576)
!15248 = distinct !DILexicalBlock(scope: !15232, file: !3, line: 1140, column: 33)
!15249 = !DILocation(line: 1140, column: 33, scope: !15248)
!15250 = !DILocation(line: 1140, column: 33, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !15248, file: !3, line: 1140, column: 33)
!15252 = !DILocalVariable(name: "dev", scope: !15232, file: !3, line: 1141, type: !301)
!15253 = !DILocation(line: 1141, column: 21, scope: !15232)
!15254 = !DILocation(line: 1141, column: 27, scope: !15232)
!15255 = !DILocation(line: 1141, column: 34, scope: !15232)
!15256 = !DILocation(line: 1141, column: 40, scope: !15232)
!15257 = !DILocalVariable(name: "skb", scope: !15232, file: !3, line: 1142, type: !426)
!15258 = !DILocation(line: 1142, column: 18, scope: !15232)
!15259 = !DILocalVariable(name: "rinfo", scope: !15232, file: !3, line: 1143, type: !15260)
!15260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netfront_rx_info", file: !3, line: 179, size: 384, elements: !15261)
!15261 = !{!15262, !15263}
!15262 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !15260, file: !3, line: 180, baseType: !10313, size: 64)
!15263 = !DIDerivedType(tag: DW_TAG_member, name: "extras", scope: !15260, file: !3, line: 181, baseType: !15264, size: 320, offset: 64)
!15264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10106, size: 320, elements: !1783)
!15265 = !DILocation(line: 1143, column: 26, scope: !15232)
!15266 = !DILocalVariable(name: "rx", scope: !15232, file: !3, line: 1144, type: !15267)
!15267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10313, size: 64)
!15268 = !DILocation(line: 1144, column: 32, scope: !15232)
!15269 = !DILocation(line: 1144, column: 44, scope: !15232)
!15270 = !DILocalVariable(name: "extras", scope: !15232, file: !3, line: 1145, type: !10105)
!15271 = !DILocation(line: 1145, column: 31, scope: !15232)
!15272 = !DILocation(line: 1145, column: 46, scope: !15232)
!15273 = !DILocation(line: 1145, column: 40, scope: !15232)
!15274 = !DILocalVariable(name: "i", scope: !15232, file: !3, line: 1146, type: !10103)
!15275 = !DILocation(line: 1146, column: 11, scope: !15232)
!15276 = !DILocalVariable(name: "rp", scope: !15232, file: !3, line: 1146, type: !10103)
!15277 = !DILocation(line: 1146, column: 14, scope: !15232)
!15278 = !DILocalVariable(name: "work_done", scope: !15232, file: !3, line: 1147, type: !43)
!15279 = !DILocation(line: 1147, column: 6, scope: !15232)
!15280 = !DILocalVariable(name: "rxq", scope: !15232, file: !3, line: 1148, type: !2973)
!15281 = !DILocation(line: 1148, column: 22, scope: !15232)
!15282 = !DILocalVariable(name: "errq", scope: !15232, file: !3, line: 1149, type: !2973)
!15283 = !DILocation(line: 1149, column: 22, scope: !15232)
!15284 = !DILocalVariable(name: "tmpq", scope: !15232, file: !3, line: 1150, type: !2973)
!15285 = !DILocation(line: 1150, column: 22, scope: !15232)
!15286 = !DILocalVariable(name: "err", scope: !15232, file: !3, line: 1151, type: !43)
!15287 = !DILocation(line: 1151, column: 6, scope: !15232)
!15288 = !DILocalVariable(name: "need_xdp_flush", scope: !15232, file: !3, line: 1152, type: !546)
!15289 = !DILocation(line: 1152, column: 7, scope: !15232)
!15290 = !DILocation(line: 1154, column: 13, scope: !15232)
!15291 = !DILocation(line: 1154, column: 20, scope: !15232)
!15292 = !DILocation(line: 354, column: 2, scope: !15293, inlinedAt: !15240)
!15293 = distinct !DILexicalBlock(scope: !15238, file: !11089, line: 354, column: 2)
!15294 = !{i32 -2145418257}
!15295 = !DILocation(line: 354, column: 2, scope: !15296, inlinedAt: !15240)
!15296 = distinct !DILexicalBlock(scope: !15293, file: !11089, line: 354, column: 2)
!15297 = !DILocation(line: 1156, column: 2, scope: !15232)
!15298 = !DILocation(line: 1157, column: 2, scope: !15232)
!15299 = !DILocation(line: 1158, column: 2, scope: !15232)
!15300 = !DILocation(line: 1160, column: 7, scope: !15232)
!15301 = !DILocation(line: 1160, column: 14, scope: !15232)
!15302 = !DILocation(line: 1160, column: 17, scope: !15232)
!15303 = !DILocation(line: 1160, column: 24, scope: !15232)
!15304 = !DILocation(line: 1160, column: 5, scope: !15232)
!15305 = !DILocation(line: 1161, column: 2, scope: !15232)
!15306 = !{i32 -2136817684}
!15307 = !DILocation(line: 1163, column: 6, scope: !15232)
!15308 = !DILocation(line: 1163, column: 13, scope: !15232)
!15309 = !DILocation(line: 1163, column: 16, scope: !15232)
!15310 = !DILocation(line: 1163, column: 4, scope: !15232)
!15311 = !DILocation(line: 1164, column: 12, scope: !15232)
!15312 = !DILocation(line: 1165, column: 2, scope: !15232)
!15313 = !DILocation(line: 1165, column: 10, scope: !15232)
!15314 = !DILocation(line: 1165, column: 15, scope: !15232)
!15315 = !DILocation(line: 1165, column: 12, scope: !15232)
!15316 = !DILocation(line: 1165, column: 19, scope: !15232)
!15317 = !DILocation(line: 1165, column: 23, scope: !15232)
!15318 = !DILocation(line: 1165, column: 35, scope: !15232)
!15319 = !DILocation(line: 1165, column: 33, scope: !15232)
!15320 = !DILocation(line: 0, scope: !15232)
!15321 = !DILocation(line: 1166, column: 10, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15232, file: !3, line: 1165, column: 44)
!15323 = !DILocation(line: 1166, column: 3, scope: !15322)
!15324 = !DILocation(line: 1166, column: 14, scope: !15322)
!15325 = !DILocation(line: 1167, column: 10, scope: !15322)
!15326 = !DILocation(line: 1167, column: 3, scope: !15322)
!15327 = !DILocation(line: 1169, column: 30, scope: !15322)
!15328 = !DILocation(line: 1169, column: 45, scope: !15322)
!15329 = !DILocation(line: 1169, column: 9, scope: !15322)
!15330 = !DILocation(line: 1169, column: 7, scope: !15322)
!15331 = !DILocation(line: 1172, column: 7, scope: !15332)
!15332 = distinct !DILexicalBlock(scope: !15322, file: !3, line: 1172, column: 7)
!15333 = !DILocation(line: 1172, column: 7, scope: !15322)
!15334 = !DILocation(line: 1172, column: 22, scope: !15332)
!15335 = !DILabel(scope: !15336, name: "err", file: !3, line: 1173)
!15336 = distinct !DILexicalBlock(scope: !15332, file: !3, line: 1172, column: 22)
!15337 = !DILocation(line: 1173, column: 1, scope: !15336)
!15338 = !DILocation(line: 1174, column: 4, scope: !15336)
!15339 = !DILocation(line: 1174, column: 18, scope: !15336)
!15340 = !DILocation(line: 1174, column: 16, scope: !15336)
!15341 = !DILocation(line: 1175, column: 29, scope: !15336)
!15342 = !DILocation(line: 1175, column: 5, scope: !15336)
!15343 = distinct !{!15343, !15338, !15344}
!15344 = !DILocation(line: 1175, column: 32, scope: !15336)
!15345 = !DILocation(line: 1176, column: 4, scope: !15336)
!15346 = !DILocation(line: 1176, column: 9, scope: !15336)
!15347 = !DILocation(line: 1176, column: 15, scope: !15336)
!15348 = !DILocation(line: 1176, column: 24, scope: !15336)
!15349 = !DILocation(line: 1177, column: 8, scope: !15336)
!15350 = !DILocation(line: 1177, column: 15, scope: !15336)
!15351 = !DILocation(line: 1177, column: 18, scope: !15336)
!15352 = !DILocation(line: 1177, column: 6, scope: !15336)
!15353 = !DILocation(line: 1178, column: 4, scope: !15336)
!15354 = distinct !{!15354, !15312, !15355}
!15355 = !DILocation(line: 1215, column: 2, scope: !15232)
!15356 = !DILocation(line: 1181, column: 9, scope: !15322)
!15357 = !DILocation(line: 1181, column: 7, scope: !15322)
!15358 = !DILocation(line: 1183, column: 7, scope: !15359)
!15359 = distinct !DILexicalBlock(scope: !15322, file: !3, line: 1183, column: 7)
!15360 = !DILocation(line: 1183, column: 44, scope: !15359)
!15361 = !DILocation(line: 1183, column: 7, scope: !15322)
!15362 = !DILocalVariable(name: "gso", scope: !15363, file: !3, line: 1184, type: !10105)
!15363 = distinct !DILexicalBlock(scope: !15359, file: !3, line: 1183, column: 50)
!15364 = !DILocation(line: 1184, column: 33, scope: !15363)
!15365 = !DILocation(line: 1185, column: 11, scope: !15363)
!15366 = !DILocation(line: 1185, column: 8, scope: !15363)
!15367 = !DILocation(line: 1187, column: 8, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15363, file: !3, line: 1187, column: 8)
!15369 = !DILocation(line: 1187, column: 8, scope: !15363)
!15370 = !DILocation(line: 1188, column: 29, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15368, file: !3, line: 1187, column: 48)
!15372 = !DILocation(line: 1188, column: 5, scope: !15371)
!15373 = !DILocation(line: 1189, column: 27, scope: !15371)
!15374 = !DILocation(line: 1189, column: 5, scope: !15371)
!15375 = !DILocation(line: 1189, column: 12, scope: !15371)
!15376 = !DILocation(line: 1189, column: 15, scope: !15371)
!15377 = !DILocation(line: 1189, column: 24, scope: !15371)
!15378 = !DILocation(line: 1190, column: 5, scope: !15371)
!15379 = !DILocation(line: 1192, column: 3, scope: !15363)
!15380 = !DILocation(line: 1194, column: 35, scope: !15322)
!15381 = !DILocation(line: 1194, column: 39, scope: !15322)
!15382 = !DILocation(line: 1194, column: 3, scope: !15322)
!15383 = !DILocation(line: 1194, column: 25, scope: !15322)
!15384 = !DILocation(line: 1194, column: 33, scope: !15322)
!15385 = !DILocation(line: 1195, column: 7, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !15322, file: !3, line: 1195, column: 7)
!15387 = !DILocation(line: 1195, column: 29, scope: !15386)
!15388 = !DILocation(line: 1195, column: 37, scope: !15386)
!15389 = !DILocation(line: 1195, column: 7, scope: !15322)
!15390 = !DILocation(line: 1196, column: 4, scope: !15386)
!15391 = !DILocation(line: 1196, column: 26, scope: !15386)
!15392 = !DILocation(line: 1196, column: 34, scope: !15386)
!15393 = !DILocation(line: 1198, column: 21, scope: !15322)
!15394 = !DILocation(line: 1198, column: 38, scope: !15322)
!15395 = !DILocation(line: 1198, column: 48, scope: !15322)
!15396 = !DILocation(line: 1198, column: 52, scope: !15322)
!15397 = !DILocation(line: 1198, column: 3, scope: !15322)
!15398 = !DILocation(line: 1199, column: 22, scope: !15322)
!15399 = !DILocation(line: 1199, column: 39, scope: !15322)
!15400 = !DILocation(line: 1199, column: 49, scope: !15322)
!15401 = !DILocation(line: 1199, column: 53, scope: !15322)
!15402 = !DILocation(line: 1199, column: 3, scope: !15322)
!15403 = !DILocation(line: 1200, column: 19, scope: !15322)
!15404 = !DILocation(line: 1200, column: 23, scope: !15322)
!15405 = !DILocation(line: 1200, column: 3, scope: !15322)
!15406 = !DILocation(line: 1200, column: 8, scope: !15322)
!15407 = !DILocation(line: 1200, column: 17, scope: !15322)
!15408 = !DILocation(line: 1201, column: 15, scope: !15322)
!15409 = !DILocation(line: 1201, column: 19, scope: !15322)
!15410 = !DILocation(line: 1201, column: 3, scope: !15322)
!15411 = !DILocation(line: 1201, column: 8, scope: !15322)
!15412 = !DILocation(line: 1201, column: 12, scope: !15322)
!15413 = !DILocation(line: 1203, column: 7, scope: !15414)
!15414 = distinct !DILexicalBlock(scope: !15322, file: !3, line: 1203, column: 7)
!15415 = !DILocation(line: 1203, column: 7, scope: !15322)
!15416 = !DILocation(line: 1204, column: 4, scope: !15414)
!15417 = !DILocation(line: 1206, column: 7, scope: !15418)
!15418 = distinct !DILexicalBlock(scope: !15322, file: !3, line: 1206, column: 7)
!15419 = !DILocation(line: 1206, column: 11, scope: !15418)
!15420 = !DILocation(line: 1206, column: 17, scope: !15418)
!15421 = !DILocation(line: 1206, column: 7, scope: !15322)
!15422 = !DILocation(line: 1207, column: 4, scope: !15418)
!15423 = !DILocation(line: 1207, column: 9, scope: !15418)
!15424 = !DILocation(line: 1207, column: 19, scope: !15418)
!15425 = !DILocation(line: 1208, column: 12, scope: !15426)
!15426 = distinct !DILexicalBlock(scope: !15418, file: !3, line: 1208, column: 12)
!15427 = !DILocation(line: 1208, column: 16, scope: !15426)
!15428 = !DILocation(line: 1208, column: 22, scope: !15426)
!15429 = !DILocation(line: 1208, column: 12, scope: !15418)
!15430 = !DILocation(line: 1209, column: 4, scope: !15426)
!15431 = !DILocation(line: 1209, column: 9, scope: !15426)
!15432 = !DILocation(line: 1209, column: 19, scope: !15426)
!15433 = !DILocation(line: 1211, column: 26, scope: !15322)
!15434 = !DILocation(line: 1211, column: 3, scope: !15322)
!15435 = !DILocation(line: 1213, column: 9, scope: !15322)
!15436 = !DILocation(line: 1213, column: 16, scope: !15322)
!15437 = !DILocation(line: 1213, column: 19, scope: !15322)
!15438 = !DILocation(line: 1213, column: 7, scope: !15322)
!15439 = !DILocation(line: 1213, column: 5, scope: !15322)
!15440 = !DILocation(line: 1214, column: 12, scope: !15322)
!15441 = !DILocation(line: 1216, column: 6, scope: !15442)
!15442 = distinct !DILexicalBlock(scope: !15232, file: !3, line: 1216, column: 6)
!15443 = !DILocation(line: 1216, column: 6, scope: !15232)
!15444 = !DILocation(line: 1217, column: 3, scope: !15442)
!15445 = !DILocation(line: 1219, column: 2, scope: !15232)
!15446 = !DILocation(line: 1221, column: 37, scope: !15232)
!15447 = !DILocation(line: 1221, column: 15, scope: !15232)
!15448 = !DILocation(line: 1221, column: 12, scope: !15232)
!15449 = !DILocation(line: 1223, column: 26, scope: !15232)
!15450 = !DILocation(line: 1223, column: 2, scope: !15232)
!15451 = !DILocation(line: 1225, column: 6, scope: !15452)
!15452 = distinct !DILexicalBlock(scope: !15232, file: !3, line: 1225, column: 6)
!15453 = !DILocation(line: 1225, column: 18, scope: !15452)
!15454 = !DILocation(line: 1225, column: 16, scope: !15452)
!15455 = !DILocation(line: 1225, column: 6, scope: !15232)
!15456 = !DILocalVariable(name: "more_to_do", scope: !15457, file: !3, line: 1226, type: !43)
!15457 = distinct !DILexicalBlock(scope: !15452, file: !3, line: 1225, column: 26)
!15458 = !DILocation(line: 1226, column: 7, scope: !15457)
!15459 = !DILocation(line: 1228, column: 22, scope: !15457)
!15460 = !DILocation(line: 1228, column: 28, scope: !15457)
!15461 = !DILocation(line: 1228, column: 3, scope: !15457)
!15462 = !DILocation(line: 1230, column: 3, scope: !15457)
!15463 = !DILocation(line: 1230, column: 3, scope: !15464)
!15464 = distinct !DILexicalBlock(scope: !15457, file: !3, line: 1230, column: 3)
!15465 = !DILocation(line: 1230, column: 3, scope: !15466)
!15466 = distinct !DILexicalBlock(scope: !15464, file: !3, line: 1230, column: 3)
!15467 = !{i32 -2136816668}
!15468 = !DILocation(line: 1231, column: 7, scope: !15469)
!15469 = distinct !DILexicalBlock(scope: !15457, file: !3, line: 1231, column: 7)
!15470 = !DILocation(line: 1231, column: 7, scope: !15457)
!15471 = !DILocation(line: 1232, column: 18, scope: !15469)
!15472 = !DILocation(line: 1232, column: 4, scope: !15469)
!15473 = !DILocation(line: 1233, column: 2, scope: !15457)
!15474 = !DILocation(line: 1235, column: 15, scope: !15232)
!15475 = !DILocation(line: 1235, column: 22, scope: !15232)
!15476 = !DILocation(line: 394, column: 2, scope: !15477, inlinedAt: !15236)
!15477 = distinct !DILexicalBlock(scope: !15234, file: !11089, line: 394, column: 2)
!15478 = !{i32 -2145415896}
!15479 = !DILocation(line: 394, column: 2, scope: !15480, inlinedAt: !15236)
!15480 = distinct !DILexicalBlock(scope: !15477, file: !11089, line: 394, column: 2)
!15481 = !DILocation(line: 1237, column: 9, scope: !15232)
!15482 = !DILocation(line: 1237, column: 2, scope: !15232)
!15483 = distinct !DISubprogram(name: "kmalloc_array", scope: !10050, file: !10050, line: 584, type: !15018, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15484 = !DILocalVariable(name: "s", arg: 1, scope: !15485, file: !10050, line: 445, type: !2277)
!15485 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !10050, file: !10050, line: 445, type: !15486, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15486 = !DISubroutineType(types: !15487)
!15487 = !{!576, !2277, !1996, !600}
!15488 = !DILocation(line: 445, column: 72, scope: !15485, inlinedAt: !15489)
!15489 = distinct !DILocation(line: 552, column: 10, scope: !15490, inlinedAt: !15495)
!15490 = distinct !DILexicalBlock(scope: !15491, file: !10050, line: 540, column: 34)
!15491 = distinct !DILexicalBlock(scope: !15492, file: !10050, line: 540, column: 6)
!15492 = distinct !DISubprogram(name: "kmalloc", scope: !10050, file: !10050, line: 538, type: !15493, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15493 = !DISubroutineType(types: !15494)
!15494 = !{!576, !600, !1996}
!15495 = distinct !DILocation(line: 591, column: 10, scope: !15496)
!15496 = distinct !DILexicalBlock(scope: !15483, file: !10050, line: 590, column: 6)
!15497 = !DILocalVariable(name: "flags", arg: 2, scope: !15485, file: !10050, line: 446, type: !1996)
!15498 = !DILocation(line: 446, column: 9, scope: !15485, inlinedAt: !15489)
!15499 = !DILocalVariable(name: "size", arg: 3, scope: !15485, file: !10050, line: 446, type: !600)
!15500 = !DILocation(line: 446, column: 23, scope: !15485, inlinedAt: !15489)
!15501 = !DILocalVariable(name: "ret", scope: !15485, file: !10050, line: 448, type: !576)
!15502 = !DILocation(line: 448, column: 8, scope: !15485, inlinedAt: !15489)
!15503 = !DILocalVariable(name: "flags", arg: 1, scope: !15504, file: !10050, line: 318, type: !1996)
!15504 = distinct !DISubprogram(name: "kmalloc_type", scope: !10050, file: !10050, line: 318, type: !15505, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15505 = !DISubroutineType(types: !15506)
!15506 = !{!10049, !1996}
!15507 = !DILocation(line: 318, column: 67, scope: !15504, inlinedAt: !15508)
!15508 = distinct !DILocation(line: 553, column: 20, scope: !15490, inlinedAt: !15495)
!15509 = !DILocalVariable(name: "size", arg: 1, scope: !15510, file: !10050, line: 346, type: !600)
!15510 = distinct !DISubprogram(name: "kmalloc_index", scope: !10050, file: !10050, line: 346, type: !15511, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15511 = !DISubroutineType(types: !15512)
!15512 = !{!7, !600}
!15513 = !DILocation(line: 346, column: 58, scope: !15510, inlinedAt: !15514)
!15514 = distinct !DILocation(line: 547, column: 11, scope: !15490, inlinedAt: !15495)
!15515 = !DILocalVariable(name: "size", arg: 1, scope: !15516, file: !10050, line: 472, type: !600)
!15516 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !10050, file: !10050, line: 472, type: !15517, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15517 = !DISubroutineType(types: !15518)
!15518 = !{!576, !600, !1996, !7}
!15519 = !DILocation(line: 472, column: 28, scope: !15516, inlinedAt: !15520)
!15520 = distinct !DILocation(line: 481, column: 9, scope: !15521, inlinedAt: !15522)
!15521 = distinct !DISubprogram(name: "kmalloc_large", scope: !10050, file: !10050, line: 478, type: !15493, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15522 = distinct !DILocation(line: 545, column: 11, scope: !15523, inlinedAt: !15495)
!15523 = distinct !DILexicalBlock(scope: !15490, file: !10050, line: 544, column: 7)
!15524 = !DILocalVariable(name: "flags", arg: 2, scope: !15516, file: !10050, line: 472, type: !1996)
!15525 = !DILocation(line: 472, column: 40, scope: !15516, inlinedAt: !15520)
!15526 = !DILocalVariable(name: "order", arg: 3, scope: !15516, file: !10050, line: 472, type: !7)
!15527 = !DILocation(line: 472, column: 60, scope: !15516, inlinedAt: !15520)
!15528 = !DILocalVariable(name: "size", arg: 1, scope: !15521, file: !10050, line: 478, type: !600)
!15529 = !DILocation(line: 478, column: 51, scope: !15521, inlinedAt: !15522)
!15530 = !DILocalVariable(name: "flags", arg: 2, scope: !15521, file: !10050, line: 478, type: !1996)
!15531 = !DILocation(line: 478, column: 63, scope: !15521, inlinedAt: !15522)
!15532 = !DILocalVariable(name: "order", scope: !15521, file: !10050, line: 480, type: !7)
!15533 = !DILocation(line: 480, column: 15, scope: !15521, inlinedAt: !15522)
!15534 = !DILocalVariable(name: "size", arg: 1, scope: !15492, file: !10050, line: 538, type: !600)
!15535 = !DILocation(line: 538, column: 45, scope: !15492, inlinedAt: !15495)
!15536 = !DILocalVariable(name: "flags", arg: 2, scope: !15492, file: !10050, line: 538, type: !1996)
!15537 = !DILocation(line: 538, column: 57, scope: !15492, inlinedAt: !15495)
!15538 = !DILocalVariable(name: "index", scope: !15490, file: !10050, line: 542, type: !7)
!15539 = !DILocation(line: 542, column: 16, scope: !15490, inlinedAt: !15495)
!15540 = !DILocalVariable(name: "n", arg: 1, scope: !15483, file: !10050, line: 584, type: !600)
!15541 = !DILocation(line: 584, column: 42, scope: !15483)
!15542 = !DILocalVariable(name: "size", arg: 2, scope: !15483, file: !10050, line: 584, type: !600)
!15543 = !DILocation(line: 584, column: 52, scope: !15483)
!15544 = !DILocalVariable(name: "flags", arg: 3, scope: !15483, file: !10050, line: 584, type: !1996)
!15545 = !DILocation(line: 584, column: 64, scope: !15483)
!15546 = !DILocalVariable(name: "bytes", scope: !15483, file: !10050, line: 586, type: !600)
!15547 = !DILocation(line: 586, column: 9, scope: !15483)
!15548 = !DILocalVariable(name: "__a", scope: !15549, file: !10050, line: 588, type: !600)
!15549 = distinct !DILexicalBlock(scope: !15550, file: !10050, line: 588, column: 6)
!15550 = distinct !DILexicalBlock(scope: !15483, file: !10050, line: 588, column: 6)
!15551 = !DILocation(line: 588, column: 6, scope: !15549)
!15552 = !DILocalVariable(name: "__b", scope: !15549, file: !10050, line: 588, type: !600)
!15553 = !DILocalVariable(name: "__d", scope: !15549, file: !10050, line: 588, type: !1859)
!15554 = !DILocation(line: 588, column: 6, scope: !15550)
!15555 = !DILocation(line: 588, column: 6, scope: !15483)
!15556 = !DILocation(line: 589, column: 3, scope: !15550)
!15557 = !DILocation(line: 590, column: 27, scope: !15496)
!15558 = !DILocation(line: 590, column: 6, scope: !15496)
!15559 = !DILocation(line: 590, column: 30, scope: !15496)
!15560 = !DILocation(line: 590, column: 54, scope: !15496)
!15561 = !DILocation(line: 590, column: 33, scope: !15496)
!15562 = !DILocation(line: 590, column: 6, scope: !15483)
!15563 = !DILocation(line: 591, column: 18, scope: !15496)
!15564 = !DILocation(line: 591, column: 25, scope: !15496)
!15565 = !DILocation(line: 540, column: 27, scope: !15491, inlinedAt: !15495)
!15566 = !DILocation(line: 540, column: 6, scope: !15491, inlinedAt: !15495)
!15567 = !DILocation(line: 540, column: 6, scope: !15492, inlinedAt: !15495)
!15568 = !DILocation(line: 544, column: 7, scope: !15523, inlinedAt: !15495)
!15569 = !DILocation(line: 544, column: 12, scope: !15523, inlinedAt: !15495)
!15570 = !DILocation(line: 544, column: 7, scope: !15490, inlinedAt: !15495)
!15571 = !DILocation(line: 545, column: 25, scope: !15523, inlinedAt: !15495)
!15572 = !DILocation(line: 545, column: 31, scope: !15523, inlinedAt: !15495)
!15573 = !DILocation(line: 480, column: 33, scope: !15521, inlinedAt: !15522)
!15574 = !DILocation(line: 480, column: 23, scope: !15521, inlinedAt: !15522)
!15575 = !DILocation(line: 481, column: 29, scope: !15521, inlinedAt: !15522)
!15576 = !DILocation(line: 481, column: 35, scope: !15521, inlinedAt: !15522)
!15577 = !DILocation(line: 481, column: 42, scope: !15521, inlinedAt: !15522)
!15578 = !DILocation(line: 474, column: 23, scope: !15516, inlinedAt: !15520)
!15579 = !DILocation(line: 474, column: 29, scope: !15516, inlinedAt: !15520)
!15580 = !DILocation(line: 474, column: 36, scope: !15516, inlinedAt: !15520)
!15581 = !DILocation(line: 474, column: 9, scope: !15516, inlinedAt: !15520)
!15582 = !DILocation(line: 545, column: 4, scope: !15523, inlinedAt: !15495)
!15583 = !DILocation(line: 547, column: 25, scope: !15490, inlinedAt: !15495)
!15584 = !DILocation(line: 348, column: 7, scope: !15585, inlinedAt: !15514)
!15585 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 348, column: 6)
!15586 = !DILocation(line: 348, column: 6, scope: !15510, inlinedAt: !15514)
!15587 = !DILocation(line: 349, column: 3, scope: !15585, inlinedAt: !15514)
!15588 = !DILocation(line: 351, column: 6, scope: !15589, inlinedAt: !15514)
!15589 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 351, column: 6)
!15590 = !DILocation(line: 351, column: 11, scope: !15589, inlinedAt: !15514)
!15591 = !DILocation(line: 351, column: 6, scope: !15510, inlinedAt: !15514)
!15592 = !DILocation(line: 352, column: 3, scope: !15589, inlinedAt: !15514)
!15593 = !DILocation(line: 354, column: 32, scope: !15594, inlinedAt: !15514)
!15594 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 354, column: 6)
!15595 = !DILocation(line: 354, column: 37, scope: !15594, inlinedAt: !15514)
!15596 = !DILocation(line: 354, column: 42, scope: !15594, inlinedAt: !15514)
!15597 = !DILocation(line: 354, column: 45, scope: !15594, inlinedAt: !15514)
!15598 = !DILocation(line: 354, column: 50, scope: !15594, inlinedAt: !15514)
!15599 = !DILocation(line: 354, column: 6, scope: !15510, inlinedAt: !15514)
!15600 = !DILocation(line: 355, column: 3, scope: !15594, inlinedAt: !15514)
!15601 = !DILocation(line: 356, column: 32, scope: !15602, inlinedAt: !15514)
!15602 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 356, column: 6)
!15603 = !DILocation(line: 356, column: 37, scope: !15602, inlinedAt: !15514)
!15604 = !DILocation(line: 356, column: 43, scope: !15602, inlinedAt: !15514)
!15605 = !DILocation(line: 356, column: 46, scope: !15602, inlinedAt: !15514)
!15606 = !DILocation(line: 356, column: 51, scope: !15602, inlinedAt: !15514)
!15607 = !DILocation(line: 356, column: 6, scope: !15510, inlinedAt: !15514)
!15608 = !DILocation(line: 357, column: 3, scope: !15602, inlinedAt: !15514)
!15609 = !DILocation(line: 358, column: 6, scope: !15610, inlinedAt: !15514)
!15610 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 358, column: 6)
!15611 = !DILocation(line: 358, column: 11, scope: !15610, inlinedAt: !15514)
!15612 = !DILocation(line: 358, column: 6, scope: !15510, inlinedAt: !15514)
!15613 = !DILocation(line: 358, column: 26, scope: !15610, inlinedAt: !15514)
!15614 = !DILocation(line: 359, column: 6, scope: !15615, inlinedAt: !15514)
!15615 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 359, column: 6)
!15616 = !DILocation(line: 359, column: 11, scope: !15615, inlinedAt: !15514)
!15617 = !DILocation(line: 359, column: 6, scope: !15510, inlinedAt: !15514)
!15618 = !DILocation(line: 359, column: 26, scope: !15615, inlinedAt: !15514)
!15619 = !DILocation(line: 360, column: 6, scope: !15620, inlinedAt: !15514)
!15620 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 360, column: 6)
!15621 = !DILocation(line: 360, column: 11, scope: !15620, inlinedAt: !15514)
!15622 = !DILocation(line: 360, column: 6, scope: !15510, inlinedAt: !15514)
!15623 = !DILocation(line: 360, column: 26, scope: !15620, inlinedAt: !15514)
!15624 = !DILocation(line: 361, column: 6, scope: !15625, inlinedAt: !15514)
!15625 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 361, column: 6)
!15626 = !DILocation(line: 361, column: 11, scope: !15625, inlinedAt: !15514)
!15627 = !DILocation(line: 361, column: 6, scope: !15510, inlinedAt: !15514)
!15628 = !DILocation(line: 361, column: 26, scope: !15625, inlinedAt: !15514)
!15629 = !DILocation(line: 362, column: 6, scope: !15630, inlinedAt: !15514)
!15630 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 362, column: 6)
!15631 = !DILocation(line: 362, column: 11, scope: !15630, inlinedAt: !15514)
!15632 = !DILocation(line: 362, column: 6, scope: !15510, inlinedAt: !15514)
!15633 = !DILocation(line: 362, column: 26, scope: !15630, inlinedAt: !15514)
!15634 = !DILocation(line: 363, column: 6, scope: !15635, inlinedAt: !15514)
!15635 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 363, column: 6)
!15636 = !DILocation(line: 363, column: 11, scope: !15635, inlinedAt: !15514)
!15637 = !DILocation(line: 363, column: 6, scope: !15510, inlinedAt: !15514)
!15638 = !DILocation(line: 363, column: 26, scope: !15635, inlinedAt: !15514)
!15639 = !DILocation(line: 364, column: 6, scope: !15640, inlinedAt: !15514)
!15640 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 364, column: 6)
!15641 = !DILocation(line: 364, column: 11, scope: !15640, inlinedAt: !15514)
!15642 = !DILocation(line: 364, column: 6, scope: !15510, inlinedAt: !15514)
!15643 = !DILocation(line: 364, column: 26, scope: !15640, inlinedAt: !15514)
!15644 = !DILocation(line: 365, column: 6, scope: !15645, inlinedAt: !15514)
!15645 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 365, column: 6)
!15646 = !DILocation(line: 365, column: 11, scope: !15645, inlinedAt: !15514)
!15647 = !DILocation(line: 365, column: 6, scope: !15510, inlinedAt: !15514)
!15648 = !DILocation(line: 365, column: 26, scope: !15645, inlinedAt: !15514)
!15649 = !DILocation(line: 366, column: 6, scope: !15650, inlinedAt: !15514)
!15650 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 366, column: 6)
!15651 = !DILocation(line: 366, column: 11, scope: !15650, inlinedAt: !15514)
!15652 = !DILocation(line: 366, column: 6, scope: !15510, inlinedAt: !15514)
!15653 = !DILocation(line: 366, column: 26, scope: !15650, inlinedAt: !15514)
!15654 = !DILocation(line: 367, column: 6, scope: !15655, inlinedAt: !15514)
!15655 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 367, column: 6)
!15656 = !DILocation(line: 367, column: 11, scope: !15655, inlinedAt: !15514)
!15657 = !DILocation(line: 367, column: 6, scope: !15510, inlinedAt: !15514)
!15658 = !DILocation(line: 367, column: 26, scope: !15655, inlinedAt: !15514)
!15659 = !DILocation(line: 368, column: 6, scope: !15660, inlinedAt: !15514)
!15660 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 368, column: 6)
!15661 = !DILocation(line: 368, column: 11, scope: !15660, inlinedAt: !15514)
!15662 = !DILocation(line: 368, column: 6, scope: !15510, inlinedAt: !15514)
!15663 = !DILocation(line: 368, column: 26, scope: !15660, inlinedAt: !15514)
!15664 = !DILocation(line: 369, column: 6, scope: !15665, inlinedAt: !15514)
!15665 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 369, column: 6)
!15666 = !DILocation(line: 369, column: 11, scope: !15665, inlinedAt: !15514)
!15667 = !DILocation(line: 369, column: 6, scope: !15510, inlinedAt: !15514)
!15668 = !DILocation(line: 369, column: 26, scope: !15665, inlinedAt: !15514)
!15669 = !DILocation(line: 370, column: 6, scope: !15670, inlinedAt: !15514)
!15670 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 370, column: 6)
!15671 = !DILocation(line: 370, column: 11, scope: !15670, inlinedAt: !15514)
!15672 = !DILocation(line: 370, column: 6, scope: !15510, inlinedAt: !15514)
!15673 = !DILocation(line: 370, column: 26, scope: !15670, inlinedAt: !15514)
!15674 = !DILocation(line: 371, column: 6, scope: !15675, inlinedAt: !15514)
!15675 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 371, column: 6)
!15676 = !DILocation(line: 371, column: 11, scope: !15675, inlinedAt: !15514)
!15677 = !DILocation(line: 371, column: 6, scope: !15510, inlinedAt: !15514)
!15678 = !DILocation(line: 371, column: 26, scope: !15675, inlinedAt: !15514)
!15679 = !DILocation(line: 372, column: 6, scope: !15680, inlinedAt: !15514)
!15680 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 372, column: 6)
!15681 = !DILocation(line: 372, column: 11, scope: !15680, inlinedAt: !15514)
!15682 = !DILocation(line: 372, column: 6, scope: !15510, inlinedAt: !15514)
!15683 = !DILocation(line: 372, column: 26, scope: !15680, inlinedAt: !15514)
!15684 = !DILocation(line: 373, column: 6, scope: !15685, inlinedAt: !15514)
!15685 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 373, column: 6)
!15686 = !DILocation(line: 373, column: 11, scope: !15685, inlinedAt: !15514)
!15687 = !DILocation(line: 373, column: 6, scope: !15510, inlinedAt: !15514)
!15688 = !DILocation(line: 373, column: 26, scope: !15685, inlinedAt: !15514)
!15689 = !DILocation(line: 374, column: 6, scope: !15690, inlinedAt: !15514)
!15690 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 374, column: 6)
!15691 = !DILocation(line: 374, column: 11, scope: !15690, inlinedAt: !15514)
!15692 = !DILocation(line: 374, column: 6, scope: !15510, inlinedAt: !15514)
!15693 = !DILocation(line: 374, column: 26, scope: !15690, inlinedAt: !15514)
!15694 = !DILocation(line: 375, column: 6, scope: !15695, inlinedAt: !15514)
!15695 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 375, column: 6)
!15696 = !DILocation(line: 375, column: 11, scope: !15695, inlinedAt: !15514)
!15697 = !DILocation(line: 375, column: 6, scope: !15510, inlinedAt: !15514)
!15698 = !DILocation(line: 375, column: 27, scope: !15695, inlinedAt: !15514)
!15699 = !DILocation(line: 376, column: 6, scope: !15700, inlinedAt: !15514)
!15700 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 376, column: 6)
!15701 = !DILocation(line: 376, column: 11, scope: !15700, inlinedAt: !15514)
!15702 = !DILocation(line: 376, column: 6, scope: !15510, inlinedAt: !15514)
!15703 = !DILocation(line: 376, column: 32, scope: !15700, inlinedAt: !15514)
!15704 = !DILocation(line: 377, column: 6, scope: !15705, inlinedAt: !15514)
!15705 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 377, column: 6)
!15706 = !DILocation(line: 377, column: 11, scope: !15705, inlinedAt: !15514)
!15707 = !DILocation(line: 377, column: 6, scope: !15510, inlinedAt: !15514)
!15708 = !DILocation(line: 377, column: 32, scope: !15705, inlinedAt: !15514)
!15709 = !DILocation(line: 378, column: 6, scope: !15710, inlinedAt: !15514)
!15710 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 378, column: 6)
!15711 = !DILocation(line: 378, column: 11, scope: !15710, inlinedAt: !15514)
!15712 = !DILocation(line: 378, column: 6, scope: !15510, inlinedAt: !15514)
!15713 = !DILocation(line: 378, column: 32, scope: !15710, inlinedAt: !15514)
!15714 = !DILocation(line: 379, column: 6, scope: !15715, inlinedAt: !15514)
!15715 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 379, column: 6)
!15716 = !DILocation(line: 379, column: 11, scope: !15715, inlinedAt: !15514)
!15717 = !DILocation(line: 379, column: 6, scope: !15510, inlinedAt: !15514)
!15718 = !DILocation(line: 379, column: 33, scope: !15715, inlinedAt: !15514)
!15719 = !DILocation(line: 380, column: 6, scope: !15720, inlinedAt: !15514)
!15720 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 380, column: 6)
!15721 = !DILocation(line: 380, column: 11, scope: !15720, inlinedAt: !15514)
!15722 = !DILocation(line: 380, column: 6, scope: !15510, inlinedAt: !15514)
!15723 = !DILocation(line: 380, column: 33, scope: !15720, inlinedAt: !15514)
!15724 = !DILocation(line: 381, column: 6, scope: !15725, inlinedAt: !15514)
!15725 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 381, column: 6)
!15726 = !DILocation(line: 381, column: 11, scope: !15725, inlinedAt: !15514)
!15727 = !DILocation(line: 381, column: 6, scope: !15510, inlinedAt: !15514)
!15728 = !DILocation(line: 381, column: 33, scope: !15725, inlinedAt: !15514)
!15729 = !DILocation(line: 382, column: 2, scope: !15730, inlinedAt: !15514)
!15730 = distinct !DILexicalBlock(scope: !15731, file: !10050, line: 382, column: 2)
!15731 = distinct !DILexicalBlock(scope: !15510, file: !10050, line: 382, column: 2)
!15732 = !{i32 -2141769450, i32 -2141769421, i32 -2141769375, i32 -2141769317, i32 -2141769263, i32 -2141769209, i32 -2141769154, i32 -2141769123}
!15733 = !DILocation(line: 382, column: 2, scope: !15734, inlinedAt: !15514)
!15734 = distinct !DILexicalBlock(scope: !15735, file: !10050, line: 382, column: 2)
!15735 = distinct !DILexicalBlock(scope: !15731, file: !10050, line: 382, column: 2)
!15736 = !{i32 -2141768680, i32 -2141768673, i32 -2141768619, i32 -2141768588, i32 -2141768558}
!15737 = !DILocation(line: 382, column: 2, scope: !15735, inlinedAt: !15514)
!15738 = !DILocation(line: 386, column: 1, scope: !15510, inlinedAt: !15514)
!15739 = !DILocation(line: 547, column: 9, scope: !15490, inlinedAt: !15495)
!15740 = !DILocation(line: 549, column: 8, scope: !15741, inlinedAt: !15495)
!15741 = distinct !DILexicalBlock(scope: !15490, file: !10050, line: 549, column: 7)
!15742 = !DILocation(line: 549, column: 7, scope: !15490, inlinedAt: !15495)
!15743 = !DILocation(line: 550, column: 4, scope: !15741, inlinedAt: !15495)
!15744 = !DILocation(line: 553, column: 33, scope: !15490, inlinedAt: !15495)
!15745 = !DILocation(line: 325, column: 6, scope: !15746, inlinedAt: !15508)
!15746 = distinct !DILexicalBlock(scope: !15504, file: !10050, line: 325, column: 6)
!15747 = !DILocation(line: 325, column: 6, scope: !15504, inlinedAt: !15508)
!15748 = !DILocation(line: 326, column: 3, scope: !15746, inlinedAt: !15508)
!15749 = !DILocation(line: 332, column: 9, scope: !15504, inlinedAt: !15508)
!15750 = !DILocation(line: 332, column: 15, scope: !15504, inlinedAt: !15508)
!15751 = !DILocation(line: 332, column: 2, scope: !15504, inlinedAt: !15508)
!15752 = !DILocation(line: 336, column: 1, scope: !15504, inlinedAt: !15508)
!15753 = !DILocation(line: 553, column: 5, scope: !15490, inlinedAt: !15495)
!15754 = !DILocation(line: 553, column: 41, scope: !15490, inlinedAt: !15495)
!15755 = !DILocation(line: 554, column: 5, scope: !15490, inlinedAt: !15495)
!15756 = !DILocation(line: 554, column: 12, scope: !15490, inlinedAt: !15495)
!15757 = !DILocation(line: 448, column: 31, scope: !15485, inlinedAt: !15489)
!15758 = !DILocation(line: 448, column: 34, scope: !15485, inlinedAt: !15489)
!15759 = !DILocation(line: 448, column: 14, scope: !15485, inlinedAt: !15489)
!15760 = !DILocation(line: 450, column: 22, scope: !15485, inlinedAt: !15489)
!15761 = !DILocation(line: 450, column: 25, scope: !15485, inlinedAt: !15489)
!15762 = !DILocation(line: 450, column: 30, scope: !15485, inlinedAt: !15489)
!15763 = !DILocation(line: 450, column: 36, scope: !15485, inlinedAt: !15489)
!15764 = !DILocation(line: 450, column: 8, scope: !15485, inlinedAt: !15489)
!15765 = !DILocation(line: 450, column: 6, scope: !15485, inlinedAt: !15489)
!15766 = !DILocation(line: 451, column: 9, scope: !15485, inlinedAt: !15489)
!15767 = !DILocation(line: 552, column: 3, scope: !15490, inlinedAt: !15495)
!15768 = !DILocation(line: 557, column: 19, scope: !15492, inlinedAt: !15495)
!15769 = !DILocation(line: 557, column: 25, scope: !15492, inlinedAt: !15495)
!15770 = !DILocation(line: 557, column: 9, scope: !15492, inlinedAt: !15495)
!15771 = !DILocation(line: 557, column: 2, scope: !15492, inlinedAt: !15495)
!15772 = !DILocation(line: 558, column: 1, scope: !15492, inlinedAt: !15495)
!15773 = !DILocation(line: 591, column: 3, scope: !15496)
!15774 = !DILocation(line: 592, column: 19, scope: !15483)
!15775 = !DILocation(line: 592, column: 26, scope: !15483)
!15776 = !DILocation(line: 592, column: 9, scope: !15483)
!15777 = !DILocation(line: 592, column: 2, scope: !15483)
!15778 = !DILocation(line: 593, column: 1, scope: !15483)
!15779 = distinct !DISubprogram(name: "__must_check_overflow", scope: !15780, file: !15780, line: 52, type: !15781, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15780 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!15781 = !DISubroutineType(types: !15782)
!15782 = !{!546, !546}
!15783 = !DILocalVariable(name: "overflow", arg: 1, scope: !15779, file: !15780, line: 52, type: !546)
!15784 = !DILocation(line: 52, column: 60, scope: !15779)
!15785 = !DILocation(line: 54, column: 9, scope: !15779)
!15786 = !DILocation(line: 54, column: 2, scope: !15779)
!15787 = distinct !DISubprogram(name: "get_order", scope: !15788, file: !15788, line: 29, type: !15789, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15788 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!15789 = !DISubroutineType(types: !15790)
!15790 = !{!43, !323}
!15791 = !DILocalVariable(name: "x", arg: 1, scope: !15792, file: !12152, line: 366, type: !344)
!15792 = distinct !DISubprogram(name: "fls64", scope: !12152, file: !12152, line: 366, type: !15793, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15793 = !DISubroutineType(types: !15794)
!15794 = !{!43, !344}
!15795 = !DILocation(line: 366, column: 40, scope: !15792, inlinedAt: !15796)
!15796 = distinct !DILocation(line: 46, column: 9, scope: !15787)
!15797 = !DILocalVariable(name: "bitpos", scope: !15792, file: !12152, line: 368, type: !43)
!15798 = !DILocation(line: 368, column: 6, scope: !15792, inlinedAt: !15796)
!15799 = !DILocalVariable(name: "size", arg: 1, scope: !15787, file: !15788, line: 29, type: !323)
!15800 = !DILocation(line: 29, column: 63, scope: !15787)
!15801 = !DILocation(line: 31, column: 27, scope: !15802)
!15802 = distinct !DILexicalBlock(scope: !15787, file: !15788, line: 31, column: 6)
!15803 = !DILocation(line: 31, column: 6, scope: !15802)
!15804 = !DILocation(line: 31, column: 6, scope: !15787)
!15805 = !DILocation(line: 32, column: 8, scope: !15806)
!15806 = distinct !DILexicalBlock(scope: !15807, file: !15788, line: 32, column: 7)
!15807 = distinct !DILexicalBlock(scope: !15802, file: !15788, line: 31, column: 34)
!15808 = !DILocation(line: 32, column: 7, scope: !15807)
!15809 = !DILocation(line: 33, column: 4, scope: !15806)
!15810 = !DILocation(line: 35, column: 7, scope: !15811)
!15811 = distinct !DILexicalBlock(scope: !15807, file: !15788, line: 35, column: 7)
!15812 = !DILocation(line: 35, column: 12, scope: !15811)
!15813 = !DILocation(line: 35, column: 7, scope: !15807)
!15814 = !DILocation(line: 36, column: 4, scope: !15811)
!15815 = !DILocation(line: 38, column: 10, scope: !15807)
!15816 = !DILocation(line: 38, column: 28, scope: !15807)
!15817 = !DILocation(line: 38, column: 41, scope: !15807)
!15818 = !DILocation(line: 38, column: 3, scope: !15807)
!15819 = !DILocation(line: 41, column: 6, scope: !15787)
!15820 = !DILocation(line: 42, column: 7, scope: !15787)
!15821 = !DILocation(line: 46, column: 15, scope: !15787)
!15822 = !DILocation(line: 374, column: 2, scope: !15792, inlinedAt: !15796)
!15823 = !DILocation(line: 376, column: 14, scope: !15792, inlinedAt: !15796)
!15824 = !{i32 360820}
!15825 = !DILocation(line: 377, column: 9, scope: !15792, inlinedAt: !15796)
!15826 = !DILocation(line: 377, column: 16, scope: !15792, inlinedAt: !15796)
!15827 = !DILocation(line: 46, column: 2, scope: !15787)
!15828 = !DILocation(line: 48, column: 1, scope: !15787)
!15829 = distinct !DISubprogram(name: "__ilog2_u64", scope: !15830, file: !15830, line: 30, type: !15831, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15830 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!15831 = !DISubroutineType(types: !15832)
!15832 = !{!43, !342}
!15833 = !DILocation(line: 366, column: 40, scope: !15792, inlinedAt: !15834)
!15834 = distinct !DILocation(line: 32, column: 9, scope: !15829)
!15835 = !DILocation(line: 368, column: 6, scope: !15792, inlinedAt: !15834)
!15836 = !DILocalVariable(name: "n", arg: 1, scope: !15829, file: !15830, line: 30, type: !342)
!15837 = !DILocation(line: 30, column: 21, scope: !15829)
!15838 = !DILocation(line: 32, column: 15, scope: !15829)
!15839 = !DILocation(line: 374, column: 2, scope: !15792, inlinedAt: !15834)
!15840 = !DILocation(line: 376, column: 14, scope: !15792, inlinedAt: !15834)
!15841 = !DILocation(line: 377, column: 9, scope: !15792, inlinedAt: !15834)
!15842 = !DILocation(line: 377, column: 16, scope: !15792, inlinedAt: !15834)
!15843 = !DILocation(line: 32, column: 18, scope: !15829)
!15844 = !DILocation(line: 32, column: 2, scope: !15829)
!15845 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !15846, file: !15846, line: 137, type: !15847, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15846 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!15847 = !DISubroutineType(types: !15848)
!15848 = !{!576, !2277, !2269, !600, !1996}
!15849 = !DILocalVariable(name: "s", arg: 1, scope: !15845, file: !15846, line: 137, type: !2277)
!15850 = !DILocation(line: 137, column: 54, scope: !15845)
!15851 = !DILocalVariable(name: "object", arg: 2, scope: !15845, file: !15846, line: 137, type: !2269)
!15852 = !DILocation(line: 137, column: 69, scope: !15845)
!15853 = !DILocalVariable(name: "size", arg: 3, scope: !15845, file: !15846, line: 138, type: !600)
!15854 = !DILocation(line: 138, column: 12, scope: !15845)
!15855 = !DILocalVariable(name: "flags", arg: 4, scope: !15845, file: !15846, line: 138, type: !1996)
!15856 = !DILocation(line: 138, column: 24, scope: !15845)
!15857 = !DILocation(line: 140, column: 17, scope: !15845)
!15858 = !DILocation(line: 140, column: 2, scope: !15845)
!15859 = distinct !DISubprogram(name: "rx_refill_timeout", scope: !3, file: !3, line: 247, type: !2253, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15860 = !DILocalVariable(name: "t", arg: 1, scope: !15859, file: !3, line: 247, type: !2255)
!15861 = !DILocation(line: 247, column: 50, scope: !15859)
!15862 = !DILocalVariable(name: "queue", scope: !15859, file: !3, line: 249, type: !10150)
!15863 = !DILocation(line: 249, column: 25, scope: !15859)
!15864 = !DILocalVariable(name: "__mptr", scope: !15865, file: !3, line: 249, type: !576)
!15865 = distinct !DILexicalBlock(scope: !15859, file: !3, line: 249, column: 33)
!15866 = !DILocation(line: 249, column: 33, scope: !15865)
!15867 = !DILocation(line: 249, column: 33, scope: !15868)
!15868 = distinct !DILexicalBlock(scope: !15865, file: !3, line: 249, column: 33)
!15869 = !DILocation(line: 250, column: 17, scope: !15859)
!15870 = !DILocation(line: 250, column: 24, scope: !15859)
!15871 = !DILocation(line: 250, column: 2, scope: !15859)
!15872 = !DILocation(line: 251, column: 1, scope: !15859)
!15873 = distinct !DISubprogram(name: "skb_queue_head_init", scope: !428, file: !428, line: 1881, type: !15874, scopeLine: 1882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15874 = !DISubroutineType(types: !15875)
!15875 = !{null, !15876}
!15876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!15877 = !DILocation(line: 327, column: 67, scope: !11109, inlinedAt: !15878)
!15878 = distinct !DILocation(line: 1883, column: 2, scope: !15879)
!15879 = distinct !DILexicalBlock(scope: !15873, file: !428, line: 1883, column: 2)
!15880 = !DILocalVariable(name: "list", arg: 1, scope: !15873, file: !428, line: 1881, type: !15876)
!15881 = !DILocation(line: 1881, column: 61, scope: !15873)
!15882 = !DILocation(line: 1883, column: 2, scope: !15873)
!15883 = !DILocation(line: 1883, column: 2, scope: !15879)
!15884 = !DILocation(line: 329, column: 10, scope: !11109, inlinedAt: !15878)
!15885 = !DILocation(line: 329, column: 16, scope: !11109, inlinedAt: !15878)
!15886 = !DILocation(line: 1884, column: 24, scope: !15873)
!15887 = !DILocation(line: 1884, column: 2, scope: !15873)
!15888 = !DILocation(line: 1885, column: 1, scope: !15873)
!15889 = distinct !DISubprogram(name: "xennet_get_responses", scope: !3, file: !3, line: 905, type: !15890, scopeLine: 909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!15890 = !DISubroutineType(types: !15891)
!15891 = !{!43, !10150, !15892, !10103, !15876, !4998}
!15892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15260, size: 64)
!15893 = !DILocalVariable(name: "queue", arg: 1, scope: !15889, file: !3, line: 905, type: !10150)
!15894 = !DILocation(line: 905, column: 56, scope: !15889)
!15895 = !DILocalVariable(name: "rinfo", arg: 2, scope: !15889, file: !3, line: 906, type: !15892)
!15896 = !DILocation(line: 906, column: 30, scope: !15889)
!15897 = !DILocalVariable(name: "rp", arg: 3, scope: !15889, file: !3, line: 906, type: !10103)
!15898 = !DILocation(line: 906, column: 46, scope: !15889)
!15899 = !DILocalVariable(name: "list", arg: 4, scope: !15889, file: !3, line: 907, type: !15876)
!15900 = !DILocation(line: 907, column: 26, scope: !15889)
!15901 = !DILocalVariable(name: "need_xdp_flush", arg: 5, scope: !15889, file: !3, line: 908, type: !4998)
!15902 = !DILocation(line: 908, column: 11, scope: !15889)
!15903 = !DILocalVariable(name: "rx", scope: !15889, file: !3, line: 910, type: !15267)
!15904 = !DILocation(line: 910, column: 32, scope: !15889)
!15905 = !DILocation(line: 910, column: 38, scope: !15889)
!15906 = !DILocation(line: 910, column: 45, scope: !15889)
!15907 = !DILocalVariable(name: "max", scope: !15889, file: !3, line: 911, type: !43)
!15908 = !DILocation(line: 911, column: 6, scope: !15889)
!15909 = !DILocation(line: 911, column: 38, scope: !15889)
!15910 = !DILocation(line: 911, column: 42, scope: !15889)
!15911 = !DILocation(line: 911, column: 49, scope: !15889)
!15912 = !DILocation(line: 911, column: 35, scope: !15889)
!15913 = !DILocalVariable(name: "cons", scope: !15889, file: !3, line: 912, type: !10103)
!15914 = !DILocation(line: 912, column: 11, scope: !15889)
!15915 = !DILocation(line: 912, column: 18, scope: !15889)
!15916 = !DILocation(line: 912, column: 25, scope: !15889)
!15917 = !DILocation(line: 912, column: 28, scope: !15889)
!15918 = !DILocalVariable(name: "skb", scope: !15889, file: !3, line: 913, type: !426)
!15919 = !DILocation(line: 913, column: 18, scope: !15889)
!15920 = !DILocation(line: 913, column: 42, scope: !15889)
!15921 = !DILocation(line: 913, column: 49, scope: !15889)
!15922 = !DILocation(line: 913, column: 24, scope: !15889)
!15923 = !DILocalVariable(name: "extras", scope: !15889, file: !3, line: 914, type: !10105)
!15924 = !DILocation(line: 914, column: 31, scope: !15889)
!15925 = !DILocation(line: 914, column: 40, scope: !15889)
!15926 = !DILocation(line: 914, column: 47, scope: !15889)
!15927 = !DILocalVariable(name: "ref", scope: !15889, file: !3, line: 915, type: !10259)
!15928 = !DILocation(line: 915, column: 14, scope: !15889)
!15929 = !DILocation(line: 915, column: 38, scope: !15889)
!15930 = !DILocation(line: 915, column: 45, scope: !15889)
!15931 = !DILocation(line: 915, column: 20, scope: !15889)
!15932 = !DILocalVariable(name: "dev", scope: !15889, file: !3, line: 916, type: !4382)
!15933 = !DILocation(line: 916, column: 17, scope: !15889)
!15934 = !DILocation(line: 916, column: 24, scope: !15889)
!15935 = !DILocation(line: 916, column: 31, scope: !15889)
!15936 = !DILocation(line: 916, column: 37, scope: !15889)
!15937 = !DILocation(line: 916, column: 45, scope: !15889)
!15938 = !DILocalVariable(name: "xdp_prog", scope: !15889, file: !3, line: 917, type: !3120)
!15939 = !DILocation(line: 917, column: 19, scope: !15889)
!15940 = !DILocalVariable(name: "xdp", scope: !15889, file: !3, line: 918, type: !15941)
!15941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_buff", file: !8510, line: 68, size: 448, elements: !15942)
!15942 = !{!15943, !15944, !15945, !15946, !15947, !15949, !15954}
!15943 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15941, file: !8510, line: 69, baseType: !576, size: 64)
!15944 = !DIDerivedType(tag: DW_TAG_member, name: "data_end", scope: !15941, file: !8510, line: 70, baseType: !576, size: 64, offset: 64)
!15945 = !DIDerivedType(tag: DW_TAG_member, name: "data_meta", scope: !15941, file: !8510, line: 71, baseType: !576, size: 64, offset: 128)
!15946 = !DIDerivedType(tag: DW_TAG_member, name: "data_hard_start", scope: !15941, file: !8510, line: 72, baseType: !576, size: 64, offset: 192)
!15947 = !DIDerivedType(tag: DW_TAG_member, name: "rxq", scope: !15941, file: !8510, line: 73, baseType: !15948, size: 64, offset: 256)
!15948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9288, size: 64)
!15949 = !DIDerivedType(tag: DW_TAG_member, name: "txq", scope: !15941, file: !8510, line: 74, baseType: !15950, size: 64, offset: 320)
!15950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15951, size: 64)
!15951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_txq_info", file: !8510, line: 64, size: 64, elements: !15952)
!15952 = !{!15953}
!15953 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !15951, file: !8510, line: 65, baseType: !301, size: 64)
!15954 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !15941, file: !8510, line: 75, baseType: !713, size: 32, offset: 384)
!15955 = !DILocation(line: 918, column: 18, scope: !15889)
!15956 = !DILocalVariable(name: "ret", scope: !15889, file: !3, line: 919, type: !323)
!15957 = !DILocation(line: 919, column: 16, scope: !15889)
!15958 = !DILocalVariable(name: "slots", scope: !15889, file: !3, line: 920, type: !43)
!15959 = !DILocation(line: 920, column: 6, scope: !15889)
!15960 = !DILocalVariable(name: "err", scope: !15889, file: !3, line: 921, type: !43)
!15961 = !DILocation(line: 921, column: 6, scope: !15889)
!15962 = !DILocalVariable(name: "verdict", scope: !15889, file: !3, line: 922, type: !713)
!15963 = !DILocation(line: 922, column: 6, scope: !15889)
!15964 = !DILocation(line: 924, column: 6, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15889, file: !3, line: 924, column: 6)
!15966 = !DILocation(line: 924, column: 10, scope: !15965)
!15967 = !DILocation(line: 924, column: 16, scope: !15965)
!15968 = !DILocation(line: 924, column: 6, scope: !15889)
!15969 = !DILocation(line: 925, column: 27, scope: !15970)
!15970 = distinct !DILexicalBlock(scope: !15965, file: !3, line: 924, column: 41)
!15971 = !DILocation(line: 925, column: 34, scope: !15970)
!15972 = !DILocation(line: 925, column: 42, scope: !15970)
!15973 = !DILocation(line: 925, column: 9, scope: !15970)
!15974 = !DILocation(line: 925, column: 7, scope: !15970)
!15975 = !DILocation(line: 926, column: 8, scope: !15976)
!15976 = distinct !DILexicalBlock(scope: !15970, file: !3, line: 926, column: 7)
!15977 = !DILocation(line: 926, column: 7, scope: !15970)
!15978 = !DILocation(line: 927, column: 8, scope: !15979)
!15979 = distinct !DILexicalBlock(scope: !15980, file: !3, line: 927, column: 8)
!15980 = distinct !DILexicalBlock(scope: !15976, file: !3, line: 926, column: 13)
!15981 = !DILocation(line: 927, column: 45, scope: !15979)
!15982 = !DILocation(line: 927, column: 8, scope: !15980)
!15983 = !DILocalVariable(name: "xdp", scope: !15984, file: !3, line: 928, type: !10105)
!15984 = distinct !DILexicalBlock(scope: !15979, file: !3, line: 927, column: 51)
!15985 = !DILocation(line: 928, column: 34, scope: !15984)
!15986 = !DILocation(line: 930, column: 12, scope: !15984)
!15987 = !DILocation(line: 930, column: 9, scope: !15984)
!15988 = !DILocation(line: 931, column: 18, scope: !15984)
!15989 = !DILocation(line: 931, column: 23, scope: !15984)
!15990 = !DILocation(line: 931, column: 25, scope: !15984)
!15991 = !DILocation(line: 931, column: 29, scope: !15984)
!15992 = !DILocation(line: 931, column: 5, scope: !15984)
!15993 = !DILocation(line: 931, column: 9, scope: !15984)
!15994 = !DILocation(line: 931, column: 16, scope: !15984)
!15995 = !DILocation(line: 932, column: 4, scope: !15984)
!15996 = !DILocation(line: 933, column: 3, scope: !15980)
!15997 = !DILocation(line: 934, column: 10, scope: !15970)
!15998 = !DILocation(line: 934, column: 17, scope: !15970)
!15999 = !DILocation(line: 934, column: 20, scope: !15970)
!16000 = !DILocation(line: 934, column: 8, scope: !15970)
!16001 = !DILocation(line: 935, column: 2, scope: !15970)
!16002 = !DILocation(line: 937, column: 2, scope: !15889)
!16003 = !DILocation(line: 938, column: 7, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !16005, file: !3, line: 938, column: 7)
!16005 = distinct !DILexicalBlock(scope: !16006, file: !3, line: 937, column: 11)
!16006 = distinct !DILexicalBlock(scope: !16007, file: !3, line: 937, column: 2)
!16007 = distinct !DILexicalBlock(scope: !15889, file: !3, line: 937, column: 2)
!16008 = !DILocation(line: 938, column: 7, scope: !16005)
!16009 = !DILocation(line: 940, column: 8, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !16011, file: !3, line: 940, column: 8)
!16011 = distinct !DILexicalBlock(scope: !16004, file: !3, line: 939, column: 51)
!16012 = !DILocation(line: 940, column: 8, scope: !16011)
!16013 = !DILocation(line: 941, column: 5, scope: !16010)
!16014 = !DILocation(line: 943, column: 24, scope: !16011)
!16015 = !DILocation(line: 943, column: 31, scope: !16011)
!16016 = !DILocation(line: 943, column: 36, scope: !16011)
!16017 = !DILocation(line: 943, column: 4, scope: !16011)
!16018 = !DILocation(line: 944, column: 8, scope: !16011)
!16019 = !DILocation(line: 945, column: 4, scope: !16011)
!16020 = !DILocation(line: 953, column: 7, scope: !16021)
!16021 = distinct !DILexicalBlock(scope: !16005, file: !3, line: 953, column: 7)
!16022 = !DILocation(line: 953, column: 11, scope: !16021)
!16023 = !DILocation(line: 953, column: 7, scope: !16005)
!16024 = !DILocation(line: 954, column: 8, scope: !16025)
!16025 = distinct !DILexicalBlock(scope: !16026, file: !3, line: 954, column: 8)
!16026 = distinct !DILexicalBlock(scope: !16021, file: !3, line: 953, column: 33)
!16027 = !DILocation(line: 954, column: 8, scope: !16026)
!16028 = !DILocation(line: 955, column: 5, scope: !16025)
!16029 = !DILocation(line: 957, column: 8, scope: !16026)
!16030 = !DILocation(line: 958, column: 4, scope: !16026)
!16031 = !DILocation(line: 961, column: 39, scope: !16005)
!16032 = !DILocation(line: 961, column: 9, scope: !16005)
!16033 = !DILocation(line: 961, column: 7, scope: !16005)
!16034 = !DILocation(line: 962, column: 3, scope: !16005)
!16035 = !DILocation(line: 962, column: 3, scope: !16036)
!16036 = distinct !DILexicalBlock(scope: !16037, file: !3, line: 962, column: 3)
!16037 = distinct !DILexicalBlock(scope: !16005, file: !3, line: 962, column: 3)
!16038 = !DILocation(line: 962, column: 3, scope: !16037)
!16039 = !DILocation(line: 962, column: 3, scope: !16040)
!16040 = distinct !DILexicalBlock(scope: !16036, file: !3, line: 962, column: 3)
!16041 = !DILocation(line: 962, column: 3, scope: !16042)
!16042 = distinct !DILexicalBlock(scope: !16040, file: !3, line: 962, column: 3)
!16043 = !DILocation(line: 962, column: 3, scope: !16044)
!16044 = distinct !DILexicalBlock(scope: !16040, file: !3, line: 962, column: 3)
!16045 = !{i32 -2136826428, i32 -2136826399, i32 -2136826353, i32 -2136826295, i32 -2136826241, i32 -2136826187, i32 -2136826132, i32 -2136826101}
!16046 = !DILocation(line: 962, column: 3, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !16048, file: !3, line: 962, column: 3)
!16048 = distinct !DILexicalBlock(scope: !16040, file: !3, line: 962, column: 3)
!16049 = !{i32 -2136825652, i32 -2136825645, i32 -2136825591, i32 -2136825560, i32 -2136825530}
!16050 = !DILocation(line: 962, column: 3, scope: !16048)
!16051 = !DILocation(line: 964, column: 35, scope: !16005)
!16052 = !DILocation(line: 964, column: 42, scope: !16005)
!16053 = !DILocation(line: 964, column: 56, scope: !16005)
!16054 = !DILocation(line: 964, column: 3, scope: !16005)
!16055 = !DILocation(line: 639, column: 2, scope: !16056, inlinedAt: !16058)
!16056 = distinct !DISubprogram(name: "rcu_read_lock", scope: !16057, file: !16057, line: 637, type: !3915, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16057 = !DIFile(filename: "./include/linux/rcupdate.h", directory: "/home/lizy2001/genbc/linux")
!16058 = distinct !DILocation(line: 966, column: 3, scope: !16005)
!16059 = !DILocalVariable(name: "________p1", scope: !16060, file: !3, line: 967, type: !3120)
!16060 = distinct !DILexicalBlock(scope: !16005, file: !3, line: 967, column: 14)
!16061 = !DILocation(line: 967, column: 14, scope: !16060)
!16062 = !DILocation(line: 967, column: 14, scope: !16063)
!16063 = distinct !DILexicalBlock(scope: !16060, file: !3, line: 967, column: 14)
!16064 = !DILocation(line: 967, column: 14, scope: !16065)
!16065 = distinct !DILexicalBlock(scope: !16063, file: !3, line: 967, column: 14)
!16066 = !DILocation(line: 967, column: 14, scope: !16067)
!16067 = distinct !DILexicalBlock(scope: !16060, file: !3, line: 967, column: 14)
!16068 = !DILocation(line: 967, column: 12, scope: !16005)
!16069 = !DILocation(line: 968, column: 7, scope: !16070)
!16070 = distinct !DILexicalBlock(scope: !16005, file: !3, line: 968, column: 7)
!16071 = !DILocation(line: 968, column: 7, scope: !16005)
!16072 = !DILocation(line: 969, column: 10, scope: !16073)
!16073 = distinct !DILexicalBlock(scope: !16074, file: !3, line: 969, column: 8)
!16074 = distinct !DILexicalBlock(scope: !16070, file: !3, line: 968, column: 17)
!16075 = !DILocation(line: 969, column: 14, scope: !16073)
!16076 = !DILocation(line: 969, column: 20, scope: !16073)
!16077 = !DILocation(line: 969, column: 8, scope: !16074)
!16078 = !DILocation(line: 971, column: 30, scope: !16079)
!16079 = distinct !DILexicalBlock(scope: !16073, file: !3, line: 969, column: 45)
!16080 = !DILocation(line: 972, column: 24, scope: !16079)
!16081 = !DILocation(line: 972, column: 41, scope: !16079)
!16082 = !DILocation(line: 972, column: 9, scope: !16079)
!16083 = !DILocation(line: 973, column: 9, scope: !16079)
!16084 = !DILocation(line: 973, column: 13, scope: !16079)
!16085 = !DILocation(line: 973, column: 29, scope: !16079)
!16086 = !DILocation(line: 971, column: 15, scope: !16079)
!16087 = !DILocation(line: 971, column: 13, scope: !16079)
!16088 = !DILocation(line: 974, column: 9, scope: !16089)
!16089 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 974, column: 9)
!16090 = !DILocation(line: 974, column: 17, scope: !16089)
!16091 = !DILocation(line: 974, column: 9, scope: !16079)
!16092 = !DILocation(line: 975, column: 10, scope: !16089)
!16093 = !DILocation(line: 975, column: 6, scope: !16089)
!16094 = !DILocation(line: 976, column: 4, scope: !16079)
!16095 = !DILocation(line: 978, column: 9, scope: !16096)
!16096 = distinct !DILexicalBlock(scope: !16073, file: !3, line: 976, column: 11)
!16097 = !DILocation(line: 980, column: 3, scope: !16074)
!16098 = !DILocation(line: 981, column: 3, scope: !16005)
!16099 = !DILabel(scope: !16005, name: "next", file: !3, line: 982)
!16100 = !DILocation(line: 982, column: 1, scope: !16005)
!16101 = !DILocation(line: 983, column: 20, scope: !16005)
!16102 = !DILocation(line: 983, column: 26, scope: !16005)
!16103 = !DILocation(line: 983, column: 3, scope: !16005)
!16104 = !DILocation(line: 984, column: 9, scope: !16105)
!16105 = distinct !DILexicalBlock(scope: !16005, file: !3, line: 984, column: 7)
!16106 = !DILocation(line: 984, column: 13, scope: !16105)
!16107 = !DILocation(line: 984, column: 19, scope: !16105)
!16108 = !DILocation(line: 984, column: 7, scope: !16005)
!16109 = !DILocation(line: 985, column: 4, scope: !16105)
!16110 = !DILocation(line: 987, column: 7, scope: !16111)
!16111 = distinct !DILexicalBlock(scope: !16005, file: !3, line: 987, column: 7)
!16112 = !DILocation(line: 987, column: 14, scope: !16111)
!16113 = !DILocation(line: 987, column: 12, scope: !16111)
!16114 = !DILocation(line: 987, column: 23, scope: !16111)
!16115 = !DILocation(line: 987, column: 20, scope: !16111)
!16116 = !DILocation(line: 987, column: 7, scope: !16005)
!16117 = !DILocation(line: 988, column: 8, scope: !16118)
!16118 = distinct !DILexicalBlock(scope: !16119, file: !3, line: 988, column: 8)
!16119 = distinct !DILexicalBlock(scope: !16111, file: !3, line: 987, column: 27)
!16120 = !DILocation(line: 988, column: 8, scope: !16119)
!16121 = !DILocation(line: 989, column: 5, scope: !16118)
!16122 = !DILocation(line: 990, column: 8, scope: !16119)
!16123 = !DILocation(line: 991, column: 4, scope: !16119)
!16124 = !DILocation(line: 994, column: 8, scope: !16005)
!16125 = !DILocation(line: 994, column: 6, scope: !16005)
!16126 = !DILocation(line: 995, column: 27, scope: !16005)
!16127 = !DILocation(line: 995, column: 34, scope: !16005)
!16128 = !DILocation(line: 995, column: 41, scope: !16005)
!16129 = !DILocation(line: 995, column: 39, scope: !16005)
!16130 = !DILocation(line: 995, column: 9, scope: !16005)
!16131 = !DILocation(line: 995, column: 7, scope: !16005)
!16132 = !DILocation(line: 996, column: 27, scope: !16005)
!16133 = !DILocation(line: 996, column: 34, scope: !16005)
!16134 = !DILocation(line: 996, column: 41, scope: !16005)
!16135 = !DILocation(line: 996, column: 39, scope: !16005)
!16136 = !DILocation(line: 996, column: 9, scope: !16005)
!16137 = !DILocation(line: 996, column: 7, scope: !16005)
!16138 = !DILocation(line: 997, column: 8, scope: !16005)
!16139 = !DILocation(line: 937, column: 2, scope: !16006)
!16140 = distinct !{!16140, !16141, !16142}
!16141 = !DILocation(line: 937, column: 2, scope: !16007)
!16142 = !DILocation(line: 998, column: 2, scope: !16007)
!16143 = !DILocation(line: 1000, column: 6, scope: !16144)
!16144 = distinct !DILexicalBlock(scope: !15889, file: !3, line: 1000, column: 6)
!16145 = !DILocation(line: 1000, column: 6, scope: !15889)
!16146 = !DILocation(line: 1001, column: 7, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16148, file: !3, line: 1001, column: 7)
!16148 = distinct !DILexicalBlock(scope: !16144, file: !3, line: 1000, column: 29)
!16149 = !DILocation(line: 1001, column: 7, scope: !16148)
!16150 = !DILocation(line: 1002, column: 4, scope: !16147)
!16151 = !DILocation(line: 1003, column: 7, scope: !16148)
!16152 = !DILocation(line: 1004, column: 2, scope: !16148)
!16153 = !DILocation(line: 1006, column: 6, scope: !16154)
!16154 = distinct !DILexicalBlock(scope: !15889, file: !3, line: 1006, column: 6)
!16155 = !DILocation(line: 1006, column: 6, scope: !15889)
!16156 = !DILocation(line: 1007, column: 24, scope: !16154)
!16157 = !DILocation(line: 1007, column: 31, scope: !16154)
!16158 = !DILocation(line: 1007, column: 29, scope: !16154)
!16159 = !DILocation(line: 1007, column: 3, scope: !16154)
!16160 = !DILocation(line: 1007, column: 10, scope: !16154)
!16161 = !DILocation(line: 1007, column: 13, scope: !16154)
!16162 = !DILocation(line: 1007, column: 22, scope: !16154)
!16163 = !DILocation(line: 1009, column: 9, scope: !15889)
!16164 = !DILocation(line: 1009, column: 2, scope: !15889)
!16165 = distinct !DISubprogram(name: "__skb_dequeue", scope: !428, file: !428, line: 2078, type: !16166, scopeLine: 2079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16166 = !DISubroutineType(types: !16167)
!16167 = !{!426, !15876}
!16168 = !DILocalVariable(name: "list", arg: 1, scope: !16165, file: !428, line: 2078, type: !15876)
!16169 = !DILocation(line: 2078, column: 66, scope: !16165)
!16170 = !DILocalVariable(name: "skb", scope: !16165, file: !428, line: 2080, type: !426)
!16171 = !DILocation(line: 2080, column: 18, scope: !16165)
!16172 = !DILocation(line: 2080, column: 33, scope: !16165)
!16173 = !DILocation(line: 2080, column: 24, scope: !16165)
!16174 = !DILocation(line: 2081, column: 6, scope: !16175)
!16175 = distinct !DILexicalBlock(scope: !16165, file: !428, line: 2081, column: 6)
!16176 = !DILocation(line: 2081, column: 6, scope: !16165)
!16177 = !DILocation(line: 2082, column: 16, scope: !16175)
!16178 = !DILocation(line: 2082, column: 21, scope: !16175)
!16179 = !DILocation(line: 2082, column: 3, scope: !16175)
!16180 = !DILocation(line: 2083, column: 9, scope: !16165)
!16181 = !DILocation(line: 2083, column: 2, scope: !16165)
!16182 = distinct !DISubprogram(name: "__skb_queue_tail", scope: !428, file: !428, line: 2046, type: !16183, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16183 = !DISubroutineType(types: !16184)
!16184 = !{null, !15876, !426}
!16185 = !DILocalVariable(name: "list", arg: 1, scope: !16182, file: !428, line: 2046, type: !15876)
!16186 = !DILocation(line: 2046, column: 58, scope: !16182)
!16187 = !DILocalVariable(name: "newsk", arg: 2, scope: !16182, file: !428, line: 2047, type: !426)
!16188 = !DILocation(line: 2047, column: 24, scope: !16182)
!16189 = !DILocation(line: 2049, column: 21, scope: !16182)
!16190 = !DILocation(line: 2049, column: 45, scope: !16182)
!16191 = !DILocation(line: 2049, column: 27, scope: !16182)
!16192 = !DILocation(line: 2049, column: 51, scope: !16182)
!16193 = !DILocation(line: 2049, column: 2, scope: !16182)
!16194 = !DILocation(line: 2050, column: 1, scope: !16182)
!16195 = distinct !DISubprogram(name: "xennet_set_skb_gso", scope: !3, file: !3, line: 1012, type: !16196, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16196 = !DISubroutineType(types: !16197)
!16197 = !{!43, !426, !10105}
!16198 = !DILocalVariable(name: "skb", arg: 1, scope: !16195, file: !3, line: 1012, type: !426)
!16199 = !DILocation(line: 1012, column: 47, scope: !16195)
!16200 = !DILocalVariable(name: "gso", arg: 2, scope: !16195, file: !3, line: 1013, type: !10105)
!16201 = !DILocation(line: 1013, column: 39, scope: !16195)
!16202 = !DILocation(line: 1015, column: 7, scope: !16203)
!16203 = distinct !DILexicalBlock(scope: !16195, file: !3, line: 1015, column: 6)
!16204 = !DILocation(line: 1015, column: 12, scope: !16203)
!16205 = !DILocation(line: 1015, column: 14, scope: !16203)
!16206 = !DILocation(line: 1015, column: 18, scope: !16203)
!16207 = !DILocation(line: 1015, column: 6, scope: !16195)
!16208 = !DILocation(line: 1016, column: 7, scope: !16209)
!16209 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 1016, column: 7)
!16210 = distinct !DILexicalBlock(scope: !16203, file: !3, line: 1015, column: 24)
!16211 = !DILocation(line: 1016, column: 7, scope: !16210)
!16212 = !DILocation(line: 1017, column: 4, scope: !16209)
!16213 = !DILocation(line: 1018, column: 3, scope: !16210)
!16214 = !DILocation(line: 1021, column: 6, scope: !16215)
!16215 = distinct !DILexicalBlock(scope: !16195, file: !3, line: 1021, column: 6)
!16216 = !DILocation(line: 1021, column: 11, scope: !16215)
!16217 = !DILocation(line: 1021, column: 13, scope: !16215)
!16218 = !DILocation(line: 1021, column: 17, scope: !16215)
!16219 = !DILocation(line: 1021, column: 22, scope: !16215)
!16220 = !DILocation(line: 1021, column: 50, scope: !16215)
!16221 = !DILocation(line: 1022, column: 6, scope: !16215)
!16222 = !DILocation(line: 1022, column: 11, scope: !16215)
!16223 = !DILocation(line: 1022, column: 13, scope: !16215)
!16224 = !DILocation(line: 1022, column: 17, scope: !16215)
!16225 = !DILocation(line: 1022, column: 22, scope: !16215)
!16226 = !DILocation(line: 1021, column: 6, scope: !16195)
!16227 = !DILocation(line: 1023, column: 7, scope: !16228)
!16228 = distinct !DILexicalBlock(scope: !16229, file: !3, line: 1023, column: 7)
!16229 = distinct !DILexicalBlock(scope: !16215, file: !3, line: 1022, column: 51)
!16230 = !DILocation(line: 1023, column: 7, scope: !16229)
!16231 = !DILocation(line: 1024, column: 4, scope: !16228)
!16232 = !DILocation(line: 1025, column: 3, scope: !16229)
!16233 = !DILocation(line: 1028, column: 30, scope: !16195)
!16234 = !DILocation(line: 1028, column: 35, scope: !16195)
!16235 = !DILocation(line: 1028, column: 37, scope: !16195)
!16236 = !DILocation(line: 1028, column: 41, scope: !16195)
!16237 = !DILocation(line: 1028, column: 2, scope: !16195)
!16238 = !DILocation(line: 1028, column: 19, scope: !16195)
!16239 = !DILocation(line: 1028, column: 28, scope: !16195)
!16240 = !DILocation(line: 1030, column: 4, scope: !16195)
!16241 = !DILocation(line: 1030, column: 9, scope: !16195)
!16242 = !DILocation(line: 1030, column: 11, scope: !16195)
!16243 = !DILocation(line: 1030, column: 15, scope: !16195)
!16244 = !DILocation(line: 1030, column: 20, scope: !16195)
!16245 = !DILocation(line: 1030, column: 3, scope: !16195)
!16246 = !DILocation(line: 1029, column: 2, scope: !16195)
!16247 = !DILocation(line: 1029, column: 19, scope: !16195)
!16248 = !DILocation(line: 1029, column: 28, scope: !16195)
!16249 = !DILocation(line: 1035, column: 2, scope: !16195)
!16250 = !DILocation(line: 1035, column: 19, scope: !16195)
!16251 = !DILocation(line: 1035, column: 28, scope: !16195)
!16252 = !DILocation(line: 1036, column: 2, scope: !16195)
!16253 = !DILocation(line: 1036, column: 19, scope: !16195)
!16254 = !DILocation(line: 1036, column: 28, scope: !16195)
!16255 = !DILocation(line: 1038, column: 2, scope: !16195)
!16256 = !DILocation(line: 1039, column: 1, scope: !16195)
!16257 = distinct !DISubprogram(name: "__skb_queue_head", scope: !428, file: !428, line: 2029, type: !16183, scopeLine: 2031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16258 = !DILocalVariable(name: "list", arg: 1, scope: !16257, file: !428, line: 2029, type: !15876)
!16259 = !DILocation(line: 2029, column: 58, scope: !16257)
!16260 = !DILocalVariable(name: "newsk", arg: 2, scope: !16257, file: !428, line: 2030, type: !426)
!16261 = !DILocation(line: 2030, column: 25, scope: !16257)
!16262 = !DILocation(line: 2032, column: 20, scope: !16257)
!16263 = !DILocation(line: 2032, column: 44, scope: !16257)
!16264 = !DILocation(line: 2032, column: 26, scope: !16257)
!16265 = !DILocation(line: 2032, column: 50, scope: !16257)
!16266 = !DILocation(line: 2032, column: 2, scope: !16257)
!16267 = !DILocation(line: 2033, column: 1, scope: !16257)
!16268 = distinct !DISubprogram(name: "skb_queue_len", scope: !428, file: !428, line: 1840, type: !16269, scopeLine: 1841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16269 = !DISubroutineType(types: !16270)
!16270 = !{!474, !16271}
!16271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16272, size: 64)
!16272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2973)
!16273 = !DILocalVariable(name: "list_", arg: 1, scope: !16268, file: !428, line: 1840, type: !16271)
!16274 = !DILocation(line: 1840, column: 62, scope: !16268)
!16275 = !DILocation(line: 1842, column: 9, scope: !16268)
!16276 = !DILocation(line: 1842, column: 16, scope: !16268)
!16277 = !DILocation(line: 1842, column: 2, scope: !16268)
!16278 = distinct !DISubprogram(name: "skb_frag_off_set", scope: !428, file: !428, line: 2961, type: !16279, scopeLine: 2962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16279 = !DISubroutineType(types: !16280)
!16280 = !{null, !11379, !7}
!16281 = !DILocalVariable(name: "frag", arg: 1, scope: !16278, file: !428, line: 2961, type: !11379)
!16282 = !DILocation(line: 2961, column: 49, scope: !16278)
!16283 = !DILocalVariable(name: "offset", arg: 2, scope: !16278, file: !428, line: 2961, type: !7)
!16284 = !DILocation(line: 2961, column: 68, scope: !16278)
!16285 = !DILocation(line: 2963, column: 20, scope: !16278)
!16286 = !DILocation(line: 2963, column: 2, scope: !16278)
!16287 = !DILocation(line: 2963, column: 8, scope: !16278)
!16288 = !DILocation(line: 2963, column: 18, scope: !16278)
!16289 = !DILocation(line: 2964, column: 1, scope: !16278)
!16290 = distinct !DISubprogram(name: "skb_frag_size_set", scope: !428, file: !428, line: 337, type: !16279, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16291 = !DILocalVariable(name: "frag", arg: 1, scope: !16290, file: !428, line: 337, type: !11379)
!16292 = !DILocation(line: 337, column: 50, scope: !16290)
!16293 = !DILocalVariable(name: "size", arg: 2, scope: !16290, file: !428, line: 337, type: !7)
!16294 = !DILocation(line: 337, column: 69, scope: !16290)
!16295 = !DILocation(line: 339, column: 17, scope: !16290)
!16296 = !DILocation(line: 339, column: 2, scope: !16290)
!16297 = !DILocation(line: 339, column: 8, scope: !16290)
!16298 = !DILocation(line: 339, column: 15, scope: !16290)
!16299 = !DILocation(line: 340, column: 1, scope: !16290)
!16300 = distinct !DISubprogram(name: "xennet_fill_frags", scope: !3, file: !3, line: 1041, type: !16301, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16301 = !DISubroutineType(types: !16302)
!16302 = !{!43, !10150, !426, !15876}
!16303 = !DILocalVariable(name: "queue", arg: 1, scope: !16300, file: !3, line: 1041, type: !10150)
!16304 = !DILocation(line: 1041, column: 53, scope: !16300)
!16305 = !DILocalVariable(name: "skb", arg: 2, scope: !16300, file: !3, line: 1042, type: !426)
!16306 = !DILocation(line: 1042, column: 25, scope: !16300)
!16307 = !DILocalVariable(name: "list", arg: 3, scope: !16300, file: !3, line: 1043, type: !15876)
!16308 = !DILocation(line: 1043, column: 30, scope: !16300)
!16309 = !DILocalVariable(name: "cons", scope: !16300, file: !3, line: 1045, type: !10103)
!16310 = !DILocation(line: 1045, column: 11, scope: !16300)
!16311 = !DILocation(line: 1045, column: 18, scope: !16300)
!16312 = !DILocation(line: 1045, column: 25, scope: !16300)
!16313 = !DILocation(line: 1045, column: 28, scope: !16300)
!16314 = !DILocalVariable(name: "nskb", scope: !16300, file: !3, line: 1046, type: !426)
!16315 = !DILocation(line: 1046, column: 18, scope: !16300)
!16316 = !DILocation(line: 1048, column: 2, scope: !16300)
!16317 = !DILocation(line: 1048, column: 31, scope: !16300)
!16318 = !DILocation(line: 1048, column: 17, scope: !16300)
!16319 = !DILocation(line: 1048, column: 15, scope: !16300)
!16320 = !DILocalVariable(name: "rx", scope: !16321, file: !3, line: 1049, type: !15267)
!16321 = distinct !DILexicalBlock(scope: !16300, file: !3, line: 1048, column: 39)
!16322 = !DILocation(line: 1049, column: 33, scope: !16321)
!16323 = !DILocation(line: 1050, column: 4, scope: !16321)
!16324 = !DILocalVariable(name: "nfrag", scope: !16321, file: !3, line: 1051, type: !11379)
!16325 = !DILocation(line: 1051, column: 15, scope: !16321)
!16326 = !DILocation(line: 1051, column: 24, scope: !16321)
!16327 = !DILocation(line: 1051, column: 42, scope: !16321)
!16328 = !DILocation(line: 1053, column: 7, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16321, file: !3, line: 1053, column: 7)
!16330 = !DILocation(line: 1053, column: 24, scope: !16329)
!16331 = !DILocation(line: 1053, column: 33, scope: !16329)
!16332 = !DILocation(line: 1053, column: 7, scope: !16321)
!16333 = !DILocalVariable(name: "pull_to", scope: !16334, file: !3, line: 1054, type: !7)
!16334 = distinct !DILexicalBlock(scope: !16329, file: !3, line: 1053, column: 51)
!16335 = !DILocation(line: 1054, column: 17, scope: !16334)
!16336 = !DILocation(line: 1054, column: 27, scope: !16334)
!16337 = !DILocation(line: 1054, column: 49, scope: !16334)
!16338 = !DILocation(line: 1056, column: 4, scope: !16334)
!16339 = !DILocation(line: 1056, column: 4, scope: !16340)
!16340 = distinct !DILexicalBlock(scope: !16341, file: !3, line: 1056, column: 4)
!16341 = distinct !DILexicalBlock(scope: !16334, file: !3, line: 1056, column: 4)
!16342 = !DILocation(line: 1056, column: 4, scope: !16341)
!16343 = !DILocation(line: 1056, column: 4, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16340, file: !3, line: 1056, column: 4)
!16345 = !DILocation(line: 1056, column: 4, scope: !16346)
!16346 = distinct !DILexicalBlock(scope: !16344, file: !3, line: 1056, column: 4)
!16347 = !DILocation(line: 1056, column: 4, scope: !16348)
!16348 = distinct !DILexicalBlock(scope: !16344, file: !3, line: 1056, column: 4)
!16349 = !{i32 -2136821089, i32 -2136821060, i32 -2136821014, i32 -2136820956, i32 -2136820902, i32 -2136820848, i32 -2136820793, i32 -2136820762}
!16350 = !DILocation(line: 1056, column: 4, scope: !16351)
!16351 = distinct !DILexicalBlock(scope: !16352, file: !3, line: 1056, column: 4)
!16352 = distinct !DILexicalBlock(scope: !16344, file: !3, line: 1056, column: 4)
!16353 = !{i32 -2136820312, i32 -2136820305, i32 -2136820251, i32 -2136820220, i32 -2136820190}
!16354 = !DILocation(line: 1056, column: 4, scope: !16352)
!16355 = !DILocation(line: 1057, column: 21, scope: !16334)
!16356 = !DILocation(line: 1057, column: 26, scope: !16334)
!16357 = !DILocation(line: 1057, column: 48, scope: !16334)
!16358 = !DILocation(line: 1057, column: 36, scope: !16334)
!16359 = !DILocation(line: 1057, column: 34, scope: !16334)
!16360 = !DILocation(line: 1057, column: 4, scope: !16334)
!16361 = !DILocation(line: 1058, column: 3, scope: !16334)
!16362 = !DILocation(line: 1059, column: 7, scope: !16363)
!16363 = distinct !DILexicalBlock(scope: !16321, file: !3, line: 1059, column: 7)
!16364 = !DILocation(line: 1059, column: 7, scope: !16321)
!16365 = !DILocation(line: 1060, column: 25, scope: !16366)
!16366 = distinct !DILexicalBlock(scope: !16363, file: !3, line: 1059, column: 61)
!16367 = !DILocation(line: 1060, column: 48, scope: !16366)
!16368 = !DILocation(line: 1060, column: 34, scope: !16366)
!16369 = !DILocation(line: 1060, column: 32, scope: !16366)
!16370 = !DILocation(line: 1060, column: 4, scope: !16366)
!16371 = !DILocation(line: 1060, column: 11, scope: !16366)
!16372 = !DILocation(line: 1060, column: 14, scope: !16366)
!16373 = !DILocation(line: 1060, column: 23, scope: !16366)
!16374 = !DILocation(line: 1061, column: 14, scope: !16366)
!16375 = !DILocation(line: 1061, column: 4, scope: !16366)
!16376 = !DILocation(line: 1062, column: 4, scope: !16366)
!16377 = !DILocation(line: 1065, column: 19, scope: !16321)
!16378 = !DILocation(line: 1065, column: 24, scope: !16321)
!16379 = !DILocation(line: 1065, column: 41, scope: !16321)
!16380 = !DILocation(line: 1066, column: 19, scope: !16321)
!16381 = !DILocation(line: 1066, column: 5, scope: !16321)
!16382 = !DILocation(line: 1067, column: 5, scope: !16321)
!16383 = !DILocation(line: 1067, column: 9, scope: !16321)
!16384 = !DILocation(line: 1067, column: 17, scope: !16321)
!16385 = !DILocation(line: 1067, column: 21, scope: !16321)
!16386 = !DILocation(line: 1065, column: 3, scope: !16321)
!16387 = !DILocation(line: 1069, column: 3, scope: !16321)
!16388 = !DILocation(line: 1069, column: 21, scope: !16321)
!16389 = !DILocation(line: 1069, column: 30, scope: !16321)
!16390 = !DILocation(line: 1070, column: 13, scope: !16321)
!16391 = !DILocation(line: 1070, column: 3, scope: !16321)
!16392 = distinct !{!16392, !16316, !16393}
!16393 = !DILocation(line: 1071, column: 2, scope: !16300)
!16394 = !DILocation(line: 1073, column: 23, scope: !16300)
!16395 = !DILocation(line: 1073, column: 2, scope: !16300)
!16396 = !DILocation(line: 1073, column: 9, scope: !16300)
!16397 = !DILocation(line: 1073, column: 12, scope: !16300)
!16398 = !DILocation(line: 1073, column: 21, scope: !16300)
!16399 = !DILocation(line: 1075, column: 2, scope: !16300)
!16400 = !DILocation(line: 1076, column: 1, scope: !16300)
!16401 = distinct !DISubprogram(name: "__skb_queue_purge", scope: !428, file: !428, line: 2795, type: !15874, scopeLine: 2796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16402 = !DILocalVariable(name: "list", arg: 1, scope: !16401, file: !428, line: 2795, type: !15876)
!16403 = !DILocation(line: 2795, column: 59, scope: !16401)
!16404 = !DILocalVariable(name: "skb", scope: !16401, file: !428, line: 2797, type: !426)
!16405 = !DILocation(line: 2797, column: 18, scope: !16401)
!16406 = !DILocation(line: 2798, column: 2, scope: !16401)
!16407 = !DILocation(line: 2798, column: 30, scope: !16401)
!16408 = !DILocation(line: 2798, column: 16, scope: !16401)
!16409 = !DILocation(line: 2798, column: 14, scope: !16401)
!16410 = !DILocation(line: 2798, column: 37, scope: !16401)
!16411 = !DILocation(line: 2799, column: 13, scope: !16401)
!16412 = !DILocation(line: 2799, column: 3, scope: !16401)
!16413 = distinct !{!16413, !16406, !16414}
!16414 = !DILocation(line: 2799, column: 16, scope: !16401)
!16415 = !DILocation(line: 2800, column: 1, scope: !16401)
!16416 = distinct !DISubprogram(name: "handle_incoming_queue", scope: !3, file: !3, line: 1102, type: !16417, scopeLine: 1104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16417 = !DISubroutineType(types: !16418)
!16418 = !{!43, !10150, !15876}
!16419 = !DILocalVariable(name: "queue", arg: 1, scope: !16416, file: !3, line: 1102, type: !10150)
!16420 = !DILocation(line: 1102, column: 57, scope: !16416)
!16421 = !DILocalVariable(name: "rxq", arg: 2, scope: !16416, file: !3, line: 1103, type: !15876)
!16422 = !DILocation(line: 1103, column: 27, scope: !16416)
!16423 = !DILocalVariable(name: "rx_stats", scope: !16416, file: !3, line: 1105, type: !10071)
!16424 = !DILocation(line: 1105, column: 25, scope: !16416)
!16425 = !DILocation(line: 1105, column: 36, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !16427, file: !3, line: 1105, column: 36)
!16427 = distinct !DILexicalBlock(scope: !16416, file: !3, line: 1105, column: 36)
!16428 = !DILocalVariable(name: "__vpp_verify", scope: !16429, file: !3, line: 1105, type: !2269)
!16429 = distinct !DILexicalBlock(scope: !16426, file: !3, line: 1105, column: 36)
!16430 = !DILocation(line: 1105, column: 36, scope: !16429)
!16431 = !DILocation(line: 1105, column: 36, scope: !16427)
!16432 = !DILocalVariable(name: "packets_dropped", scope: !16416, file: !3, line: 1106, type: !43)
!16433 = !DILocation(line: 1106, column: 6, scope: !16416)
!16434 = !DILocalVariable(name: "skb", scope: !16416, file: !3, line: 1107, type: !426)
!16435 = !DILocation(line: 1107, column: 18, scope: !16416)
!16436 = !DILocation(line: 1109, column: 2, scope: !16416)
!16437 = !DILocation(line: 1109, column: 30, scope: !16416)
!16438 = !DILocation(line: 1109, column: 16, scope: !16416)
!16439 = !DILocation(line: 1109, column: 14, scope: !16416)
!16440 = !DILocation(line: 1109, column: 36, scope: !16416)
!16441 = !DILocalVariable(name: "pull_to", scope: !16442, file: !3, line: 1110, type: !43)
!16442 = distinct !DILexicalBlock(scope: !16416, file: !3, line: 1109, column: 45)
!16443 = !DILocation(line: 1110, column: 7, scope: !16442)
!16444 = !DILocation(line: 1110, column: 17, scope: !16442)
!16445 = !DILocation(line: 1110, column: 39, scope: !16442)
!16446 = !DILocation(line: 1112, column: 7, scope: !16447)
!16447 = distinct !DILexicalBlock(scope: !16442, file: !3, line: 1112, column: 7)
!16448 = !DILocation(line: 1112, column: 29, scope: !16447)
!16449 = !DILocation(line: 1112, column: 17, scope: !16447)
!16450 = !DILocation(line: 1112, column: 15, scope: !16447)
!16451 = !DILocation(line: 1112, column: 7, scope: !16442)
!16452 = !DILocation(line: 1113, column: 21, scope: !16447)
!16453 = !DILocation(line: 1113, column: 26, scope: !16447)
!16454 = !DILocation(line: 1113, column: 48, scope: !16447)
!16455 = !DILocation(line: 1113, column: 36, scope: !16447)
!16456 = !DILocation(line: 1113, column: 34, scope: !16447)
!16457 = !DILocation(line: 1113, column: 4, scope: !16447)
!16458 = !DILocation(line: 1116, column: 34, scope: !16442)
!16459 = !DILocation(line: 1116, column: 39, scope: !16442)
!16460 = !DILocation(line: 1116, column: 46, scope: !16442)
!16461 = !DILocation(line: 1116, column: 52, scope: !16442)
!16462 = !DILocation(line: 1116, column: 19, scope: !16442)
!16463 = !DILocation(line: 1116, column: 3, scope: !16442)
!16464 = !DILocation(line: 1116, column: 8, scope: !16442)
!16465 = !DILocation(line: 1116, column: 17, scope: !16442)
!16466 = !DILocation(line: 1117, column: 28, scope: !16442)
!16467 = !DILocation(line: 1117, column: 3, scope: !16442)
!16468 = !DILocation(line: 1119, column: 22, scope: !16469)
!16469 = distinct !DILexicalBlock(scope: !16442, file: !3, line: 1119, column: 7)
!16470 = !DILocation(line: 1119, column: 29, scope: !16469)
!16471 = !DILocation(line: 1119, column: 35, scope: !16469)
!16472 = !DILocation(line: 1119, column: 43, scope: !16469)
!16473 = !DILocation(line: 1119, column: 7, scope: !16469)
!16474 = !DILocation(line: 1119, column: 7, scope: !16442)
!16475 = !DILocation(line: 1120, column: 14, scope: !16476)
!16476 = distinct !DILexicalBlock(scope: !16469, file: !3, line: 1119, column: 49)
!16477 = !DILocation(line: 1120, column: 4, scope: !16476)
!16478 = !DILocation(line: 1121, column: 19, scope: !16476)
!16479 = !DILocation(line: 1122, column: 4, scope: !16476)
!16480 = !DILocation(line: 1122, column: 11, scope: !16476)
!16481 = !DILocation(line: 1122, column: 17, scope: !16476)
!16482 = !DILocation(line: 1122, column: 25, scope: !16476)
!16483 = !DILocation(line: 1122, column: 31, scope: !16476)
!16484 = !DILocation(line: 1122, column: 40, scope: !16476)
!16485 = !DILocation(line: 1123, column: 4, scope: !16476)
!16486 = distinct !{!16486, !16436, !16487}
!16487 = !DILocation(line: 1133, column: 2, scope: !16416)
!16488 = !DILocation(line: 1126, column: 27, scope: !16442)
!16489 = !DILocation(line: 1126, column: 37, scope: !16442)
!16490 = !DILocation(line: 1126, column: 3, scope: !16442)
!16491 = !DILocation(line: 1127, column: 3, scope: !16442)
!16492 = !DILocation(line: 1127, column: 13, scope: !16442)
!16493 = !DILocation(line: 1127, column: 20, scope: !16442)
!16494 = !DILocation(line: 1128, column: 22, scope: !16442)
!16495 = !DILocation(line: 1128, column: 27, scope: !16442)
!16496 = !DILocation(line: 1128, column: 3, scope: !16442)
!16497 = !DILocation(line: 1128, column: 13, scope: !16442)
!16498 = !DILocation(line: 1128, column: 19, scope: !16442)
!16499 = !DILocation(line: 1129, column: 25, scope: !16442)
!16500 = !DILocation(line: 1129, column: 35, scope: !16442)
!16501 = !DILocation(line: 1129, column: 3, scope: !16442)
!16502 = !DILocation(line: 1132, column: 21, scope: !16442)
!16503 = !DILocation(line: 1132, column: 28, scope: !16442)
!16504 = !DILocation(line: 1132, column: 34, scope: !16442)
!16505 = !DILocation(line: 1132, column: 3, scope: !16442)
!16506 = !DILocation(line: 1135, column: 9, scope: !16416)
!16507 = !DILocation(line: 1135, column: 2, scope: !16416)
!16508 = distinct !DISubprogram(name: "__skb_queue_head_init", scope: !428, file: !428, line: 1867, type: !15874, scopeLine: 1868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16509 = !DILocalVariable(name: "list", arg: 1, scope: !16508, file: !428, line: 1867, type: !15876)
!16510 = !DILocation(line: 1867, column: 63, scope: !16508)
!16511 = !DILocation(line: 1869, column: 46, scope: !16508)
!16512 = !DILocation(line: 1869, column: 28, scope: !16508)
!16513 = !DILocation(line: 1869, column: 15, scope: !16508)
!16514 = !DILocation(line: 1869, column: 21, scope: !16508)
!16515 = !DILocation(line: 1869, column: 26, scope: !16508)
!16516 = !DILocation(line: 1869, column: 2, scope: !16508)
!16517 = !DILocation(line: 1869, column: 8, scope: !16508)
!16518 = !DILocation(line: 1869, column: 13, scope: !16508)
!16519 = !DILocation(line: 1870, column: 2, scope: !16508)
!16520 = !DILocation(line: 1870, column: 8, scope: !16508)
!16521 = !DILocation(line: 1870, column: 13, scope: !16508)
!16522 = !DILocation(line: 1871, column: 1, scope: !16508)
!16523 = distinct !DISubprogram(name: "xennet_get_rx_skb", scope: !3, file: !3, line: 219, type: !16524, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16524 = !DISubroutineType(types: !16525)
!16525 = !{!426, !10150, !10103}
!16526 = !DILocalVariable(name: "queue", arg: 1, scope: !16523, file: !3, line: 219, type: !10150)
!16527 = !DILocation(line: 219, column: 65, scope: !16523)
!16528 = !DILocalVariable(name: "ri", arg: 2, scope: !16523, file: !3, line: 220, type: !10103)
!16529 = !DILocation(line: 220, column: 16, scope: !16523)
!16530 = !DILocalVariable(name: "i", scope: !16523, file: !3, line: 222, type: !43)
!16531 = !DILocation(line: 222, column: 6, scope: !16523)
!16532 = !DILocation(line: 222, column: 23, scope: !16523)
!16533 = !DILocation(line: 222, column: 10, scope: !16523)
!16534 = !DILocalVariable(name: "skb", scope: !16523, file: !3, line: 223, type: !426)
!16535 = !DILocation(line: 223, column: 18, scope: !16523)
!16536 = !DILocation(line: 223, column: 24, scope: !16523)
!16537 = !DILocation(line: 223, column: 31, scope: !16523)
!16538 = !DILocation(line: 223, column: 39, scope: !16523)
!16539 = !DILocation(line: 224, column: 2, scope: !16523)
!16540 = !DILocation(line: 224, column: 9, scope: !16523)
!16541 = !DILocation(line: 224, column: 17, scope: !16523)
!16542 = !DILocation(line: 224, column: 20, scope: !16523)
!16543 = !DILocation(line: 225, column: 9, scope: !16523)
!16544 = !DILocation(line: 225, column: 2, scope: !16523)
!16545 = distinct !DISubprogram(name: "xennet_get_rx_ref", scope: !3, file: !3, line: 228, type: !16546, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16546 = !DISubroutineType(types: !16547)
!16547 = !{!10259, !10150, !10103}
!16548 = !DILocalVariable(name: "queue", arg: 1, scope: !16545, file: !3, line: 228, type: !10150)
!16549 = !DILocation(line: 228, column: 61, scope: !16545)
!16550 = !DILocalVariable(name: "ri", arg: 2, scope: !16545, file: !3, line: 229, type: !10103)
!16551 = !DILocation(line: 229, column: 19, scope: !16545)
!16552 = !DILocalVariable(name: "i", scope: !16545, file: !3, line: 231, type: !43)
!16553 = !DILocation(line: 231, column: 6, scope: !16545)
!16554 = !DILocation(line: 231, column: 23, scope: !16545)
!16555 = !DILocation(line: 231, column: 10, scope: !16545)
!16556 = !DILocalVariable(name: "ref", scope: !16545, file: !3, line: 232, type: !10259)
!16557 = !DILocation(line: 232, column: 14, scope: !16545)
!16558 = !DILocation(line: 232, column: 20, scope: !16545)
!16559 = !DILocation(line: 232, column: 27, scope: !16545)
!16560 = !DILocation(line: 232, column: 40, scope: !16545)
!16561 = !DILocation(line: 233, column: 2, scope: !16545)
!16562 = !DILocation(line: 233, column: 9, scope: !16545)
!16563 = !DILocation(line: 233, column: 22, scope: !16545)
!16564 = !DILocation(line: 233, column: 25, scope: !16545)
!16565 = !DILocation(line: 234, column: 9, scope: !16545)
!16566 = !DILocation(line: 234, column: 2, scope: !16545)
!16567 = distinct !DISubprogram(name: "xennet_get_extras", scope: !3, file: !3, line: 814, type: !16568, scopeLine: 818, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16568 = !DISubroutineType(types: !16569)
!16569 = !{!43, !10150, !10105, !10103}
!16570 = !DILocalVariable(name: "queue", arg: 1, scope: !16567, file: !3, line: 814, type: !10150)
!16571 = !DILocation(line: 814, column: 53, scope: !16567)
!16572 = !DILocalVariable(name: "extras", arg: 2, scope: !16567, file: !3, line: 815, type: !10105)
!16573 = !DILocation(line: 815, column: 38, scope: !16567)
!16574 = !DILocalVariable(name: "rp", arg: 3, scope: !16567, file: !3, line: 816, type: !10103)
!16575 = !DILocation(line: 816, column: 18, scope: !16567)
!16576 = !DILocalVariable(name: "extra", scope: !16567, file: !3, line: 819, type: !10105)
!16577 = !DILocation(line: 819, column: 31, scope: !16567)
!16578 = !DILocalVariable(name: "dev", scope: !16567, file: !3, line: 820, type: !4382)
!16579 = !DILocation(line: 820, column: 17, scope: !16567)
!16580 = !DILocation(line: 820, column: 24, scope: !16567)
!16581 = !DILocation(line: 820, column: 31, scope: !16567)
!16582 = !DILocation(line: 820, column: 37, scope: !16567)
!16583 = !DILocation(line: 820, column: 45, scope: !16567)
!16584 = !DILocalVariable(name: "cons", scope: !16567, file: !3, line: 821, type: !10103)
!16585 = !DILocation(line: 821, column: 11, scope: !16567)
!16586 = !DILocation(line: 821, column: 18, scope: !16567)
!16587 = !DILocation(line: 821, column: 25, scope: !16567)
!16588 = !DILocation(line: 821, column: 28, scope: !16567)
!16589 = !DILocalVariable(name: "err", scope: !16567, file: !3, line: 822, type: !43)
!16590 = !DILocation(line: 822, column: 6, scope: !16567)
!16591 = !DILocation(line: 824, column: 2, scope: !16567)
!16592 = !DILocalVariable(name: "skb", scope: !16593, file: !3, line: 825, type: !426)
!16593 = distinct !DILexicalBlock(scope: !16567, file: !3, line: 824, column: 5)
!16594 = !DILocation(line: 825, column: 19, scope: !16593)
!16595 = !DILocalVariable(name: "ref", scope: !16593, file: !3, line: 826, type: !10259)
!16596 = !DILocation(line: 826, column: 15, scope: !16593)
!16597 = !DILocation(line: 828, column: 7, scope: !16598)
!16598 = distinct !DILexicalBlock(scope: !16593, file: !3, line: 828, column: 7)
!16599 = !DILocation(line: 828, column: 7, scope: !16593)
!16600 = !DILocation(line: 829, column: 8, scope: !16601)
!16601 = distinct !DILexicalBlock(scope: !16602, file: !3, line: 829, column: 8)
!16602 = distinct !DILexicalBlock(scope: !16598, file: !3, line: 828, column: 33)
!16603 = !DILocation(line: 829, column: 8, scope: !16602)
!16604 = !DILocation(line: 830, column: 5, scope: !16601)
!16605 = !DILocation(line: 831, column: 8, scope: !16602)
!16606 = !DILocation(line: 832, column: 4, scope: !16602)
!16607 = !DILocation(line: 836, column: 4, scope: !16593)
!16608 = !DILocation(line: 835, column: 11, scope: !16593)
!16609 = !DILocation(line: 835, column: 9, scope: !16593)
!16610 = !DILocation(line: 838, column: 7, scope: !16611)
!16611 = distinct !DILexicalBlock(scope: !16593, file: !3, line: 838, column: 7)
!16612 = !DILocation(line: 838, column: 7, scope: !16593)
!16613 = !DILocation(line: 840, column: 8, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !16615, file: !3, line: 840, column: 8)
!16615 = distinct !DILexicalBlock(scope: !16611, file: !3, line: 839, column: 51)
!16616 = !DILocation(line: 840, column: 8, scope: !16615)
!16617 = !DILocation(line: 841, column: 5, scope: !16614)
!16618 = !DILocation(line: 843, column: 8, scope: !16615)
!16619 = !DILocation(line: 844, column: 3, scope: !16615)
!16620 = !DILocation(line: 845, column: 12, scope: !16621)
!16621 = distinct !DILexicalBlock(scope: !16611, file: !3, line: 844, column: 10)
!16622 = !DILocation(line: 845, column: 19, scope: !16621)
!16623 = !DILocation(line: 845, column: 26, scope: !16621)
!16624 = !DILocation(line: 845, column: 31, scope: !16621)
!16625 = !DILocation(line: 845, column: 4, scope: !16621)
!16626 = !DILocation(line: 845, column: 37, scope: !16621)
!16627 = !DILocation(line: 849, column: 27, scope: !16593)
!16628 = !DILocation(line: 849, column: 34, scope: !16593)
!16629 = !DILocation(line: 849, column: 9, scope: !16593)
!16630 = !DILocation(line: 849, column: 7, scope: !16593)
!16631 = !DILocation(line: 850, column: 27, scope: !16593)
!16632 = !DILocation(line: 850, column: 34, scope: !16593)
!16633 = !DILocation(line: 850, column: 9, scope: !16593)
!16634 = !DILocation(line: 850, column: 7, scope: !16593)
!16635 = !DILocation(line: 851, column: 23, scope: !16593)
!16636 = !DILocation(line: 851, column: 30, scope: !16593)
!16637 = !DILocation(line: 851, column: 35, scope: !16593)
!16638 = !DILocation(line: 851, column: 3, scope: !16593)
!16639 = !DILocation(line: 852, column: 2, scope: !16593)
!16640 = !DILocation(line: 852, column: 11, scope: !16567)
!16641 = !DILocation(line: 852, column: 18, scope: !16567)
!16642 = !DILocation(line: 852, column: 24, scope: !16567)
!16643 = distinct !{!16643, !16591, !16644}
!16644 = !DILocation(line: 852, column: 51, scope: !16567)
!16645 = !DILocation(line: 854, column: 23, scope: !16567)
!16646 = !DILocation(line: 854, column: 2, scope: !16567)
!16647 = !DILocation(line: 854, column: 9, scope: !16567)
!16648 = !DILocation(line: 854, column: 12, scope: !16567)
!16649 = !DILocation(line: 854, column: 21, scope: !16567)
!16650 = !DILocation(line: 855, column: 9, scope: !16567)
!16651 = !DILocation(line: 855, column: 2, scope: !16567)
!16652 = distinct !DISubprogram(name: "xennet_move_rx_slot", scope: !3, file: !3, line: 801, type: !16653, scopeLine: 803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16653 = !DISubroutineType(types: !16654)
!16654 = !{null, !10150, !426, !10259}
!16655 = !DILocalVariable(name: "queue", arg: 1, scope: !16652, file: !3, line: 801, type: !10150)
!16656 = !DILocation(line: 801, column: 56, scope: !16652)
!16657 = !DILocalVariable(name: "skb", arg: 2, scope: !16652, file: !3, line: 801, type: !426)
!16658 = !DILocation(line: 801, column: 79, scope: !16652)
!16659 = !DILocalVariable(name: "ref", arg: 3, scope: !16652, file: !3, line: 802, type: !10259)
!16660 = !DILocation(line: 802, column: 17, scope: !16652)
!16661 = !DILocalVariable(name: "new", scope: !16652, file: !3, line: 804, type: !43)
!16662 = !DILocation(line: 804, column: 6, scope: !16652)
!16663 = !DILocation(line: 804, column: 25, scope: !16652)
!16664 = !DILocation(line: 804, column: 32, scope: !16652)
!16665 = !DILocation(line: 804, column: 35, scope: !16652)
!16666 = !DILocation(line: 804, column: 12, scope: !16652)
!16667 = !DILocation(line: 806, column: 2, scope: !16652)
!16668 = !DILocation(line: 806, column: 2, scope: !16669)
!16669 = distinct !DILexicalBlock(scope: !16670, file: !3, line: 806, column: 2)
!16670 = distinct !DILexicalBlock(scope: !16652, file: !3, line: 806, column: 2)
!16671 = !DILocation(line: 806, column: 2, scope: !16670)
!16672 = !DILocation(line: 806, column: 2, scope: !16673)
!16673 = distinct !DILexicalBlock(scope: !16669, file: !3, line: 806, column: 2)
!16674 = !DILocation(line: 806, column: 2, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16673, file: !3, line: 806, column: 2)
!16676 = !DILocation(line: 806, column: 2, scope: !16677)
!16677 = distinct !DILexicalBlock(scope: !16673, file: !3, line: 806, column: 2)
!16678 = !{i32 -2136829004, i32 -2136828975, i32 -2136828929, i32 -2136828871, i32 -2136828817, i32 -2136828763, i32 -2136828708, i32 -2136828677}
!16679 = !DILocation(line: 806, column: 2, scope: !16680)
!16680 = distinct !DILexicalBlock(scope: !16681, file: !3, line: 806, column: 2)
!16681 = distinct !DILexicalBlock(scope: !16673, file: !3, line: 806, column: 2)
!16682 = !{i32 -2136828228, i32 -2136828221, i32 -2136828167, i32 -2136828136, i32 -2136828106}
!16683 = !DILocation(line: 806, column: 2, scope: !16681)
!16684 = !DILocation(line: 807, column: 24, scope: !16652)
!16685 = !DILocation(line: 807, column: 2, scope: !16652)
!16686 = !DILocation(line: 807, column: 9, scope: !16652)
!16687 = !DILocation(line: 807, column: 17, scope: !16652)
!16688 = !DILocation(line: 807, column: 22, scope: !16652)
!16689 = !DILocation(line: 808, column: 29, scope: !16652)
!16690 = !DILocation(line: 808, column: 2, scope: !16652)
!16691 = !DILocation(line: 808, column: 9, scope: !16652)
!16692 = !DILocation(line: 808, column: 22, scope: !16652)
!16693 = !DILocation(line: 808, column: 27, scope: !16652)
!16694 = !DILocation(line: 809, column: 61, scope: !16652)
!16695 = !DILocation(line: 809, column: 2, scope: !16652)
!16696 = !DILocation(line: 809, column: 56, scope: !16652)
!16697 = !DILocation(line: 809, column: 59, scope: !16652)
!16698 = !DILocation(line: 810, column: 63, scope: !16652)
!16699 = !DILocation(line: 810, column: 2, scope: !16652)
!16700 = !DILocation(line: 810, column: 56, scope: !16652)
!16701 = !DILocation(line: 810, column: 61, scope: !16652)
!16702 = !DILocation(line: 811, column: 2, scope: !16652)
!16703 = !DILocation(line: 811, column: 9, scope: !16652)
!16704 = !DILocation(line: 811, column: 12, scope: !16652)
!16705 = !DILocation(line: 811, column: 24, scope: !16652)
!16706 = !DILocation(line: 812, column: 1, scope: !16652)
!16707 = distinct !DISubprogram(name: "xennet_run_xdp", scope: !3, file: !3, line: 858, type: !16708, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16708 = !DISubroutineType(types: !16709)
!16709 = !{!713, !10150, !630, !15267, !3120, !16710, !4998}
!16710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15941, size: 64)
!16711 = !DILocalVariable(name: "ctx", arg: 1, scope: !16712, file: !151, line: 639, type: !2269)
!16712 = distinct !DISubprogram(name: "bpf_dispatcher_nop_func", scope: !151, file: !151, line: 638, type: !16713, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16713 = !DISubroutineType(types: !16714)
!16714 = !{!7, !2269, !3734, !3731}
!16715 = !DILocation(line: 639, column: 14, scope: !16712, inlinedAt: !16716)
!16716 = distinct !DILocation(line: 743, column: 9, scope: !16717, inlinedAt: !16725)
!16717 = distinct !DILexicalBlock(scope: !16718, file: !3122, line: 743, column: 9)
!16718 = distinct !DILexicalBlock(scope: !16719, file: !3122, line: 743, column: 9)
!16719 = distinct !DILexicalBlock(scope: !16720, file: !3122, line: 743, column: 9)
!16720 = distinct !DISubprogram(name: "bpf_prog_run_xdp", scope: !3122, file: !3122, line: 734, type: !16721, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16721 = !DISubroutineType(types: !16722)
!16722 = !{!713, !16723, !16710}
!16723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16724, size: 64)
!16724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3121)
!16725 = distinct !DILocation(line: 874, column: 8, scope: !16707)
!16726 = !DILocalVariable(name: "insnsi", arg: 2, scope: !16712, file: !151, line: 640, type: !3734)
!16727 = !DILocation(line: 640, column: 25, scope: !16712, inlinedAt: !16716)
!16728 = !DILocalVariable(name: "bpf_func", arg: 3, scope: !16712, file: !151, line: 641, type: !3731)
!16729 = !DILocation(line: 641, column: 17, scope: !16712, inlinedAt: !16716)
!16730 = !DILocation(line: 639, column: 14, scope: !16712, inlinedAt: !16731)
!16731 = distinct !DILocation(line: 743, column: 9, scope: !16732, inlinedAt: !16725)
!16732 = distinct !DILexicalBlock(scope: !16718, file: !3122, line: 743, column: 9)
!16733 = !DILocation(line: 640, column: 25, scope: !16712, inlinedAt: !16731)
!16734 = !DILocation(line: 641, column: 17, scope: !16712, inlinedAt: !16731)
!16735 = !DILocalVariable(name: "prog", arg: 1, scope: !16720, file: !3122, line: 734, type: !16723)
!16736 = !DILocation(line: 734, column: 68, scope: !16720, inlinedAt: !16725)
!16737 = !DILocalVariable(name: "xdp", arg: 2, scope: !16720, file: !3122, line: 735, type: !16710)
!16738 = !DILocation(line: 735, column: 27, scope: !16720, inlinedAt: !16725)
!16739 = !DILocalVariable(name: "__ret", scope: !16719, file: !3122, line: 743, type: !713)
!16740 = !DILocation(line: 743, column: 9, scope: !16719, inlinedAt: !16725)
!16741 = !DILocalVariable(name: "__stats", scope: !16732, file: !3122, line: 743, type: !3705)
!16742 = !DILocation(line: 743, column: 9, scope: !16732, inlinedAt: !16725)
!16743 = !DILocalVariable(name: "__start", scope: !16732, file: !3122, line: 743, type: !342)
!16744 = !DILocalVariable(name: "__vpp_verify", scope: !16745, file: !3122, line: 743, type: !2269)
!16745 = distinct !DILexicalBlock(scope: !16746, file: !3122, line: 743, column: 9)
!16746 = distinct !DILexicalBlock(scope: !16747, file: !3122, line: 743, column: 9)
!16747 = distinct !DILexicalBlock(scope: !16732, file: !3122, line: 743, column: 9)
!16748 = !DILocation(line: 743, column: 9, scope: !16745, inlinedAt: !16725)
!16749 = !DILocalVariable(name: "xdp", arg: 1, scope: !16750, file: !8510, line: 226, type: !16710)
!16750 = distinct !DISubprogram(name: "xdp_set_data_meta_invalid", scope: !8510, file: !8510, line: 226, type: !16751, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16751 = !DISubroutineType(types: !16752)
!16752 = !{null, !16710}
!16753 = !DILocation(line: 226, column: 44, scope: !16750, inlinedAt: !16754)
!16754 = distinct !DILocation(line: 869, column: 2, scope: !16707)
!16755 = !DILocalVariable(name: "page", arg: 1, scope: !16756, file: !25, line: 1514, type: !16759)
!16756 = distinct !DISubprogram(name: "lowmem_page_address", scope: !25, file: !25, line: 1514, type: !16757, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16757 = !DISubroutineType(types: !16758)
!16758 = !{!576, !16759}
!16759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16760, size: 64)
!16760 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !631)
!16761 = !DILocation(line: 1514, column: 69, scope: !16756, inlinedAt: !16762)
!16762 = distinct !DILocation(line: 867, column: 25, scope: !16707)
!16763 = !DILocalVariable(name: "queue", arg: 1, scope: !16707, file: !3, line: 858, type: !10150)
!16764 = !DILocation(line: 858, column: 50, scope: !16707)
!16765 = !DILocalVariable(name: "pdata", arg: 2, scope: !16707, file: !3, line: 858, type: !630)
!16766 = !DILocation(line: 858, column: 70, scope: !16707)
!16767 = !DILocalVariable(name: "rx", arg: 3, scope: !16707, file: !3, line: 859, type: !15267)
!16768 = !DILocation(line: 859, column: 36, scope: !16707)
!16769 = !DILocalVariable(name: "prog", arg: 4, scope: !16707, file: !3, line: 859, type: !3120)
!16770 = !DILocation(line: 859, column: 57, scope: !16707)
!16771 = !DILocalVariable(name: "xdp", arg: 5, scope: !16707, file: !3, line: 860, type: !16710)
!16772 = !DILocation(line: 860, column: 23, scope: !16707)
!16773 = !DILocalVariable(name: "need_xdp_flush", arg: 6, scope: !16707, file: !3, line: 860, type: !4998)
!16774 = !DILocation(line: 860, column: 34, scope: !16707)
!16775 = !DILocalVariable(name: "xdpf", scope: !16707, file: !3, line: 862, type: !8508)
!16776 = !DILocation(line: 862, column: 20, scope: !16707)
!16777 = !DILocalVariable(name: "len", scope: !16707, file: !3, line: 863, type: !713)
!16778 = !DILocation(line: 863, column: 6, scope: !16707)
!16779 = !DILocation(line: 863, column: 12, scope: !16707)
!16780 = !DILocation(line: 863, column: 16, scope: !16707)
!16781 = !DILocalVariable(name: "act", scope: !16707, file: !3, line: 864, type: !713)
!16782 = !DILocation(line: 864, column: 6, scope: !16707)
!16783 = !DILocalVariable(name: "err", scope: !16707, file: !3, line: 865, type: !43)
!16784 = !DILocation(line: 865, column: 6, scope: !16707)
!16785 = !DILocation(line: 867, column: 25, scope: !16707)
!16786 = !DILocation(line: 1516, column: 9, scope: !16756, inlinedAt: !16762)
!16787 = !DILocation(line: 867, column: 2, scope: !16707)
!16788 = !DILocation(line: 867, column: 7, scope: !16707)
!16789 = !DILocation(line: 867, column: 23, scope: !16707)
!16790 = !DILocation(line: 868, column: 14, scope: !16707)
!16791 = !DILocation(line: 868, column: 19, scope: !16707)
!16792 = !DILocation(line: 868, column: 35, scope: !16707)
!16793 = !DILocation(line: 868, column: 2, scope: !16707)
!16794 = !DILocation(line: 868, column: 7, scope: !16707)
!16795 = !DILocation(line: 868, column: 12, scope: !16707)
!16796 = !DILocation(line: 869, column: 28, scope: !16707)
!16797 = !DILocation(line: 228, column: 19, scope: !16750, inlinedAt: !16754)
!16798 = !DILocation(line: 228, column: 24, scope: !16750, inlinedAt: !16754)
!16799 = !DILocation(line: 228, column: 29, scope: !16750, inlinedAt: !16754)
!16800 = !DILocation(line: 228, column: 2, scope: !16750, inlinedAt: !16754)
!16801 = !DILocation(line: 228, column: 7, scope: !16750, inlinedAt: !16754)
!16802 = !DILocation(line: 228, column: 17, scope: !16750, inlinedAt: !16754)
!16803 = !DILocation(line: 870, column: 18, scope: !16707)
!16804 = !DILocation(line: 870, column: 23, scope: !16707)
!16805 = !DILocation(line: 870, column: 30, scope: !16707)
!16806 = !DILocation(line: 870, column: 28, scope: !16707)
!16807 = !DILocation(line: 870, column: 2, scope: !16707)
!16808 = !DILocation(line: 870, column: 7, scope: !16707)
!16809 = !DILocation(line: 870, column: 16, scope: !16707)
!16810 = !DILocation(line: 871, column: 14, scope: !16707)
!16811 = !DILocation(line: 871, column: 21, scope: !16707)
!16812 = !DILocation(line: 871, column: 2, scope: !16707)
!16813 = !DILocation(line: 871, column: 7, scope: !16707)
!16814 = !DILocation(line: 871, column: 11, scope: !16707)
!16815 = !DILocation(line: 872, column: 2, scope: !16707)
!16816 = !DILocation(line: 872, column: 7, scope: !16707)
!16817 = !DILocation(line: 872, column: 16, scope: !16707)
!16818 = !DILocation(line: 874, column: 25, scope: !16707)
!16819 = !DILocation(line: 874, column: 31, scope: !16707)
!16820 = !DILocation(line: 743, column: 9, scope: !16821, inlinedAt: !16725)
!16821 = distinct !DILexicalBlock(scope: !16718, file: !3122, line: 743, column: 9)
!16822 = !DILocation(line: 743, column: 9, scope: !16823, inlinedAt: !16725)
!16823 = distinct !DILexicalBlock(scope: !16821, file: !3122, line: 743, column: 9)
!16824 = !DILocation(line: 743, column: 9, scope: !16718, inlinedAt: !16725)
!16825 = !DILocation(line: 644, column: 9, scope: !16712, inlinedAt: !16731)
!16826 = !DILocation(line: 644, column: 18, scope: !16712, inlinedAt: !16731)
!16827 = !DILocation(line: 644, column: 23, scope: !16712, inlinedAt: !16731)
!16828 = !DILocation(line: 743, column: 9, scope: !16746, inlinedAt: !16725)
!16829 = !DILocation(line: 743, column: 9, scope: !16747, inlinedAt: !16725)
!16830 = !DILocation(line: 743, column: 9, scope: !16717, inlinedAt: !16725)
!16831 = !DILocation(line: 644, column: 9, scope: !16712, inlinedAt: !16716)
!16832 = !DILocation(line: 644, column: 18, scope: !16712, inlinedAt: !16716)
!16833 = !DILocation(line: 644, column: 23, scope: !16712, inlinedAt: !16716)
!16834 = !DILocation(line: 874, column: 6, scope: !16707)
!16835 = !DILocation(line: 875, column: 10, scope: !16707)
!16836 = !DILocation(line: 875, column: 2, scope: !16707)
!16837 = !DILocation(line: 877, column: 12, scope: !16838)
!16838 = distinct !DILexicalBlock(scope: !16707, file: !3, line: 875, column: 15)
!16839 = !DILocation(line: 877, column: 3, scope: !16838)
!16840 = !DILocation(line: 878, column: 36, scope: !16838)
!16841 = !DILocation(line: 878, column: 10, scope: !16838)
!16842 = !DILocation(line: 878, column: 8, scope: !16838)
!16843 = !DILocation(line: 879, column: 25, scope: !16838)
!16844 = !DILocation(line: 879, column: 32, scope: !16838)
!16845 = !DILocation(line: 879, column: 38, scope: !16838)
!16846 = !DILocation(line: 879, column: 9, scope: !16838)
!16847 = !DILocation(line: 879, column: 7, scope: !16838)
!16848 = !DILocation(line: 880, column: 7, scope: !16849)
!16849 = distinct !DILexicalBlock(scope: !16838, file: !3, line: 880, column: 7)
!16850 = !DILocation(line: 880, column: 7, scope: !16838)
!16851 = !DILocation(line: 881, column: 24, scope: !16849)
!16852 = !DILocation(line: 881, column: 31, scope: !16849)
!16853 = !DILocation(line: 881, column: 37, scope: !16849)
!16854 = !DILocation(line: 881, column: 45, scope: !16849)
!16855 = !DILocation(line: 881, column: 51, scope: !16849)
!16856 = !DILocation(line: 881, column: 4, scope: !16849)
!16857 = !DILocation(line: 882, column: 3, scope: !16838)
!16858 = !DILocation(line: 884, column: 12, scope: !16838)
!16859 = !DILocation(line: 884, column: 3, scope: !16838)
!16860 = !DILocation(line: 885, column: 25, scope: !16838)
!16861 = !DILocation(line: 885, column: 32, scope: !16838)
!16862 = !DILocation(line: 885, column: 38, scope: !16838)
!16863 = !DILocation(line: 885, column: 46, scope: !16838)
!16864 = !DILocation(line: 885, column: 51, scope: !16838)
!16865 = !DILocation(line: 885, column: 9, scope: !16838)
!16866 = !DILocation(line: 885, column: 7, scope: !16838)
!16867 = !DILocation(line: 886, column: 4, scope: !16838)
!16868 = !DILocation(line: 886, column: 19, scope: !16838)
!16869 = !DILocation(line: 887, column: 7, scope: !16870)
!16870 = distinct !DILexicalBlock(scope: !16838, file: !3, line: 887, column: 7)
!16871 = !DILocation(line: 887, column: 7, scope: !16838)
!16872 = !DILocation(line: 888, column: 24, scope: !16870)
!16873 = !DILocation(line: 888, column: 31, scope: !16870)
!16874 = !DILocation(line: 888, column: 37, scope: !16870)
!16875 = !DILocation(line: 888, column: 45, scope: !16870)
!16876 = !DILocation(line: 888, column: 51, scope: !16870)
!16877 = !DILocation(line: 888, column: 4, scope: !16870)
!16878 = !DILocation(line: 889, column: 3, scope: !16838)
!16879 = !DILocation(line: 892, column: 3, scope: !16838)
!16880 = !DILocation(line: 895, column: 23, scope: !16838)
!16881 = !DILocation(line: 895, column: 30, scope: !16838)
!16882 = !DILocation(line: 895, column: 36, scope: !16838)
!16883 = !DILocation(line: 895, column: 44, scope: !16838)
!16884 = !DILocation(line: 895, column: 50, scope: !16838)
!16885 = !DILocation(line: 895, column: 3, scope: !16838)
!16886 = !DILocation(line: 896, column: 3, scope: !16838)
!16887 = !DILocation(line: 899, column: 31, scope: !16838)
!16888 = !DILocation(line: 899, column: 3, scope: !16838)
!16889 = !DILocation(line: 900, column: 2, scope: !16838)
!16890 = !DILocation(line: 902, column: 9, scope: !16707)
!16891 = !DILocation(line: 902, column: 2, scope: !16707)
!16892 = distinct !DISubprogram(name: "rcu_read_unlock", scope: !16057, file: !16057, line: 689, type: !3915, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16893 = !DILocation(line: 691, column: 2, scope: !16892)
!16894 = !DILocation(line: 691, column: 2, scope: !16895)
!16895 = distinct !DILexicalBlock(scope: !16892, file: !16057, line: 691, column: 2)
!16896 = !DILocation(line: 694, column: 2, scope: !16892)
!16897 = !DILocation(line: 695, column: 2, scope: !16892)
!16898 = !DILocation(line: 695, column: 2, scope: !16899)
!16899 = distinct !DILexicalBlock(scope: !16892, file: !16057, line: 695, column: 2)
!16900 = !DILocation(line: 696, column: 1, scope: !16892)
!16901 = distinct !DISubprogram(name: "__rcu_read_lock", scope: !16057, file: !16057, line: 64, type: !3915, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16902 = !DILocation(line: 66, column: 2, scope: !16901)
!16903 = !{i32 -2145121575}
!16904 = !DILocation(line: 67, column: 1, scope: !16901)
!16905 = distinct !DISubprogram(name: "get_page", scope: !25, file: !25, line: 1156, type: !7297, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16906 = !DILocalVariable(name: "page", arg: 1, scope: !16905, file: !25, line: 1156, type: !630)
!16907 = !DILocation(line: 1156, column: 42, scope: !16905)
!16908 = !DILocation(line: 1158, column: 23, scope: !16905)
!16909 = !DILocation(line: 1158, column: 9, scope: !16905)
!16910 = !DILocation(line: 1158, column: 7, scope: !16905)
!16911 = !DILocation(line: 1164, column: 15, scope: !16905)
!16912 = !DILocation(line: 1164, column: 2, scope: !16905)
!16913 = !DILocation(line: 1165, column: 1, scope: !16905)
!16914 = distinct !DISubprogram(name: "xdp_convert_buff_to_frame", scope: !8510, file: !8510, line: 176, type: !16915, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16915 = !DISubroutineType(types: !16916)
!16916 = !{!8508, !16710}
!16917 = !DILocalVariable(name: "xdp", arg: 1, scope: !16914, file: !8510, line: 176, type: !16710)
!16918 = !DILocation(line: 176, column: 62, scope: !16914)
!16919 = !DILocalVariable(name: "xdp_frame", scope: !16914, file: !8510, line: 178, type: !8508)
!16920 = !DILocation(line: 178, column: 20, scope: !16914)
!16921 = !DILocation(line: 180, column: 6, scope: !16922)
!16922 = distinct !DILexicalBlock(scope: !16914, file: !8510, line: 180, column: 6)
!16923 = !DILocation(line: 180, column: 11, scope: !16922)
!16924 = !DILocation(line: 180, column: 16, scope: !16922)
!16925 = !DILocation(line: 180, column: 20, scope: !16922)
!16926 = !DILocation(line: 180, column: 25, scope: !16922)
!16927 = !DILocation(line: 180, column: 6, scope: !16914)
!16928 = !DILocation(line: 181, column: 38, scope: !16922)
!16929 = !DILocation(line: 181, column: 10, scope: !16922)
!16930 = !DILocation(line: 181, column: 3, scope: !16922)
!16931 = !DILocation(line: 184, column: 14, scope: !16914)
!16932 = !DILocation(line: 184, column: 19, scope: !16914)
!16933 = !DILocation(line: 184, column: 12, scope: !16914)
!16934 = !DILocation(line: 185, column: 6, scope: !16935)
!16935 = distinct !DILexicalBlock(scope: !16914, file: !8510, line: 185, column: 6)
!16936 = !DILocation(line: 185, column: 6, scope: !16914)
!16937 = !DILocation(line: 186, column: 3, scope: !16935)
!16938 = !DILocation(line: 189, column: 2, scope: !16914)
!16939 = !DILocation(line: 189, column: 13, scope: !16914)
!16940 = !DILocation(line: 189, column: 19, scope: !16914)
!16941 = !DILocation(line: 189, column: 24, scope: !16914)
!16942 = !DILocation(line: 189, column: 29, scope: !16914)
!16943 = !DILocation(line: 191, column: 9, scope: !16914)
!16944 = !DILocation(line: 191, column: 2, scope: !16914)
!16945 = !DILocation(line: 192, column: 1, scope: !16914)
!16946 = distinct !DISubprogram(name: "trace_xdp_exception", scope: !16947, file: !16947, line: 28, type: !16948, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16947 = !DIFile(filename: "./include/trace/events/xdp.h", directory: "/home/lizy2001/genbc/linux")
!16948 = !DISubroutineType(types: !16949)
!16949 = !{null, !2893, !16723, !713}
!16950 = !DILocalVariable(name: "dev", arg: 1, scope: !16946, file: !16947, line: 28, type: !2893)
!16951 = !DILocation(line: 28, column: 1, scope: !16946)
!16952 = !DILocalVariable(name: "xdp", arg: 2, scope: !16946, file: !16947, line: 28, type: !16723)
!16953 = !DILocalVariable(name: "act", arg: 3, scope: !16946, file: !16947, line: 28, type: !713)
!16954 = distinct !DISubprogram(name: "static_key_count", scope: !10376, file: !10376, line: 252, type: !16955, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16955 = !DISubroutineType(types: !16956)
!16956 = !{!43, !10374}
!16957 = !DILocation(line: 23, column: 61, scope: !13812, inlinedAt: !16958)
!16958 = distinct !DILocation(line: 28, column: 9, scope: !13819, inlinedAt: !16959)
!16959 = distinct !DILocation(line: 254, column: 9, scope: !16954)
!16960 = !DILocation(line: 69, column: 73, scope: !12166, inlinedAt: !16961)
!16961 = distinct !DILocation(line: 27, column: 2, scope: !13819, inlinedAt: !16959)
!16962 = !DILocation(line: 69, column: 83, scope: !12166, inlinedAt: !16961)
!16963 = !DILocation(line: 25, column: 29, scope: !13819, inlinedAt: !16959)
!16964 = !DILocalVariable(name: "key", arg: 1, scope: !16954, file: !10376, line: 252, type: !10374)
!16965 = !DILocation(line: 252, column: 55, scope: !16954)
!16966 = !DILocation(line: 254, column: 22, scope: !16954)
!16967 = !DILocation(line: 254, column: 27, scope: !16954)
!16968 = !DILocation(line: 27, column: 25, scope: !13819, inlinedAt: !16959)
!16969 = !DILocation(line: 71, column: 19, scope: !12166, inlinedAt: !16961)
!16970 = !DILocation(line: 71, column: 22, scope: !12166, inlinedAt: !16961)
!16971 = !DILocation(line: 71, column: 2, scope: !12166, inlinedAt: !16961)
!16972 = !DILocation(line: 72, column: 2, scope: !12166, inlinedAt: !16961)
!16973 = !DILocation(line: 28, column: 26, scope: !13819, inlinedAt: !16959)
!16974 = !DILocation(line: 29, column: 9, scope: !13812, inlinedAt: !16958)
!16975 = !DILocation(line: 254, column: 2, scope: !16954)
!16976 = distinct !DISubprogram(name: "compound_head", scope: !16977, file: !16977, line: 183, type: !16978, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16977 = !DIFile(filename: "./include/linux/page-flags.h", directory: "/home/lizy2001/genbc/linux")
!16978 = !DISubroutineType(types: !16979)
!16979 = !{!630, !630}
!16980 = !DILocalVariable(name: "page", arg: 1, scope: !16976, file: !16977, line: 183, type: !630)
!16981 = !DILocation(line: 183, column: 55, scope: !16976)
!16982 = !DILocalVariable(name: "head", scope: !16976, file: !16977, line: 185, type: !323)
!16983 = !DILocation(line: 185, column: 16, scope: !16976)
!16984 = !DILocation(line: 185, column: 23, scope: !16985)
!16985 = distinct !DILexicalBlock(scope: !16976, file: !16977, line: 185, column: 23)
!16986 = !DILocation(line: 185, column: 23, scope: !16987)
!16987 = distinct !DILexicalBlock(scope: !16985, file: !16977, line: 185, column: 23)
!16988 = !DILocation(line: 187, column: 6, scope: !16989)
!16989 = distinct !DILexicalBlock(scope: !16976, file: !16977, line: 187, column: 6)
!16990 = !DILocation(line: 187, column: 6, scope: !16976)
!16991 = !DILocation(line: 188, column: 27, scope: !16989)
!16992 = !DILocation(line: 188, column: 32, scope: !16989)
!16993 = !DILocation(line: 188, column: 10, scope: !16989)
!16994 = !DILocation(line: 188, column: 3, scope: !16989)
!16995 = !DILocation(line: 189, column: 9, scope: !16976)
!16996 = !DILocation(line: 189, column: 2, scope: !16976)
!16997 = !DILocation(line: 190, column: 1, scope: !16976)
!16998 = distinct !DISubprogram(name: "page_ref_inc", scope: !16999, file: !16999, line: 114, type: !7297, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!16999 = !DIFile(filename: "./include/linux/page_ref.h", directory: "/home/lizy2001/genbc/linux")
!17000 = !DILocalVariable(name: "v", arg: 1, scope: !17001, file: !13297, line: 93, type: !10146)
!17001 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !13297, file: !13297, line: 93, type: !17002, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17002 = !DISubroutineType(types: !17003)
!17003 = !{null, !10146}
!17004 = !DILocation(line: 93, column: 55, scope: !17001, inlinedAt: !17005)
!17005 = distinct !DILocation(line: 241, column: 2, scope: !17006, inlinedAt: !17007)
!17006 = distinct !DISubprogram(name: "atomic_inc", scope: !13303, file: !13303, line: 238, type: !17002, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17007 = distinct !DILocation(line: 116, column: 2, scope: !16998)
!17008 = !DILocation(line: 99, column: 79, scope: !13311, inlinedAt: !17009)
!17009 = distinct !DILocation(line: 240, column: 2, scope: !17006, inlinedAt: !17007)
!17010 = !DILocation(line: 99, column: 89, scope: !13311, inlinedAt: !17009)
!17011 = !DILocalVariable(name: "v", arg: 1, scope: !17006, file: !13303, line: 238, type: !10146)
!17012 = !DILocation(line: 238, column: 22, scope: !17006, inlinedAt: !17007)
!17013 = !DILocalVariable(name: "page", arg: 1, scope: !16998, file: !16999, line: 114, type: !630)
!17014 = !DILocation(line: 114, column: 46, scope: !16998)
!17015 = !DILocation(line: 116, column: 14, scope: !16998)
!17016 = !DILocation(line: 116, column: 20, scope: !16998)
!17017 = !DILocation(line: 240, column: 31, scope: !17006, inlinedAt: !17007)
!17018 = !DILocation(line: 101, column: 20, scope: !13311, inlinedAt: !17009)
!17019 = !DILocation(line: 101, column: 23, scope: !13311, inlinedAt: !17009)
!17020 = !DILocation(line: 101, column: 2, scope: !13311, inlinedAt: !17009)
!17021 = !DILocation(line: 102, column: 2, scope: !13311, inlinedAt: !17009)
!17022 = !DILocation(line: 241, column: 18, scope: !17006, inlinedAt: !17007)
!17023 = !DILocation(line: 96, column: 16, scope: !17001, inlinedAt: !17005)
!17024 = !DILocation(line: 96, column: 19, scope: !17001, inlinedAt: !17005)
!17025 = !DILocation(line: 95, column: 2, scope: !17001, inlinedAt: !17005)
!17026 = !{i32 -2146567277}
!17027 = !DILocation(line: 119, column: 1, scope: !16998)
!17028 = distinct !DISubprogram(name: "xdp_update_frame_from_buff", scope: !8510, file: !8510, line: 147, type: !17029, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17029 = !DISubroutineType(types: !17030)
!17030 = !{!43, !16710, !8508}
!17031 = !DILocalVariable(name: "xdp", arg: 1, scope: !17028, file: !8510, line: 147, type: !16710)
!17032 = !DILocation(line: 147, column: 49, scope: !17028)
!17033 = !DILocalVariable(name: "xdp_frame", arg: 2, scope: !17028, file: !8510, line: 148, type: !8508)
!17034 = !DILocation(line: 148, column: 29, scope: !17028)
!17035 = !DILocalVariable(name: "metasize", scope: !17028, file: !8510, line: 150, type: !43)
!17036 = !DILocation(line: 150, column: 6, scope: !17028)
!17037 = !DILocalVariable(name: "headroom", scope: !17028, file: !8510, line: 150, type: !43)
!17038 = !DILocation(line: 150, column: 16, scope: !17028)
!17039 = !DILocation(line: 153, column: 13, scope: !17028)
!17040 = !DILocation(line: 153, column: 18, scope: !17028)
!17041 = !DILocation(line: 153, column: 25, scope: !17028)
!17042 = !DILocation(line: 153, column: 30, scope: !17028)
!17043 = !DILocation(line: 153, column: 23, scope: !17028)
!17044 = !DILocation(line: 153, column: 11, scope: !17028)
!17045 = !DILocation(line: 154, column: 13, scope: !17028)
!17046 = !DILocation(line: 154, column: 18, scope: !17028)
!17047 = !DILocation(line: 154, column: 25, scope: !17028)
!17048 = !DILocation(line: 154, column: 30, scope: !17028)
!17049 = !DILocation(line: 154, column: 23, scope: !17028)
!17050 = !DILocation(line: 154, column: 11, scope: !17028)
!17051 = !DILocation(line: 155, column: 13, scope: !17028)
!17052 = !DILocation(line: 155, column: 22, scope: !17028)
!17053 = !DILocation(line: 155, column: 28, scope: !17028)
!17054 = !DILocation(line: 155, column: 11, scope: !17028)
!17055 = !DILocation(line: 156, column: 6, scope: !17056)
!17056 = distinct !DILexicalBlock(scope: !17028, file: !8510, line: 156, column: 6)
!17057 = !DILocation(line: 156, column: 6, scope: !17028)
!17058 = !DILocation(line: 157, column: 3, scope: !17056)
!17059 = !DILocation(line: 160, column: 6, scope: !17060)
!17060 = distinct !DILexicalBlock(scope: !17028, file: !8510, line: 160, column: 6)
!17061 = !DILocation(line: 160, column: 6, scope: !17028)
!17062 = !DILocation(line: 161, column: 3, scope: !17063)
!17063 = distinct !DILexicalBlock(scope: !17060, file: !8510, line: 160, column: 56)
!17064 = !DILocation(line: 162, column: 3, scope: !17063)
!17065 = !DILocation(line: 165, column: 20, scope: !17028)
!17066 = !DILocation(line: 165, column: 25, scope: !17028)
!17067 = !DILocation(line: 165, column: 2, scope: !17028)
!17068 = !DILocation(line: 165, column: 13, scope: !17028)
!17069 = !DILocation(line: 165, column: 18, scope: !17028)
!17070 = !DILocation(line: 166, column: 20, scope: !17028)
!17071 = !DILocation(line: 166, column: 25, scope: !17028)
!17072 = !DILocation(line: 166, column: 36, scope: !17028)
!17073 = !DILocation(line: 166, column: 41, scope: !17028)
!17074 = !DILocation(line: 166, column: 34, scope: !17028)
!17075 = !DILocation(line: 166, column: 2, scope: !17028)
!17076 = !DILocation(line: 166, column: 13, scope: !17028)
!17077 = !DILocation(line: 166, column: 18, scope: !17028)
!17078 = !DILocation(line: 167, column: 24, scope: !17028)
!17079 = !DILocation(line: 167, column: 33, scope: !17028)
!17080 = !DILocation(line: 167, column: 2, scope: !17028)
!17081 = !DILocation(line: 167, column: 13, scope: !17028)
!17082 = !DILocation(line: 167, column: 22, scope: !17028)
!17083 = !DILocation(line: 168, column: 24, scope: !17028)
!17084 = !DILocation(line: 168, column: 2, scope: !17028)
!17085 = !DILocation(line: 168, column: 13, scope: !17028)
!17086 = !DILocation(line: 168, column: 22, scope: !17028)
!17087 = !DILocation(line: 169, column: 24, scope: !17028)
!17088 = !DILocation(line: 169, column: 29, scope: !17028)
!17089 = !DILocation(line: 169, column: 2, scope: !17028)
!17090 = !DILocation(line: 169, column: 13, scope: !17028)
!17091 = !DILocation(line: 169, column: 22, scope: !17028)
!17092 = !DILocation(line: 171, column: 2, scope: !17028)
!17093 = !DILocation(line: 172, column: 1, scope: !17028)
!17094 = distinct !DISubprogram(name: "__rcu_read_unlock", scope: !16057, file: !16057, line: 69, type: !3915, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17095 = !DILocation(line: 71, column: 2, scope: !17094)
!17096 = !{i32 -2145121362}
!17097 = !DILocation(line: 72, column: 2, scope: !17094)
!17098 = !DILocation(line: 72, column: 2, scope: !17099)
!17099 = distinct !DILexicalBlock(scope: !17094, file: !16057, line: 72, column: 2)
!17100 = !DILocation(line: 73, column: 1, scope: !17094)
!17101 = distinct !DISubprogram(name: "skb_peek", scope: !428, file: !428, line: 1772, type: !17102, scopeLine: 1773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17102 = !DISubroutineType(types: !17103)
!17103 = !{!426, !16271}
!17104 = !DILocalVariable(name: "list_", arg: 1, scope: !17101, file: !428, line: 1772, type: !16271)
!17105 = !DILocation(line: 1772, column: 67, scope: !17101)
!17106 = !DILocalVariable(name: "skb", scope: !17101, file: !428, line: 1774, type: !426)
!17107 = !DILocation(line: 1774, column: 18, scope: !17101)
!17108 = !DILocation(line: 1774, column: 24, scope: !17101)
!17109 = !DILocation(line: 1774, column: 31, scope: !17101)
!17110 = !DILocation(line: 1776, column: 6, scope: !17111)
!17111 = distinct !DILexicalBlock(scope: !17101, file: !428, line: 1776, column: 6)
!17112 = !DILocation(line: 1776, column: 31, scope: !17111)
!17113 = !DILocation(line: 1776, column: 13, scope: !17111)
!17114 = !DILocation(line: 1776, column: 10, scope: !17111)
!17115 = !DILocation(line: 1776, column: 6, scope: !17101)
!17116 = !DILocation(line: 1777, column: 7, scope: !17111)
!17117 = !DILocation(line: 1777, column: 3, scope: !17111)
!17118 = !DILocation(line: 1778, column: 9, scope: !17101)
!17119 = !DILocation(line: 1778, column: 2, scope: !17101)
!17120 = distinct !DISubprogram(name: "__skb_unlink", scope: !428, file: !428, line: 2058, type: !17121, scopeLine: 2059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17121 = !DISubroutineType(types: !17122)
!17122 = !{null, !426, !15876}
!17123 = !DILocalVariable(name: "skb", arg: 1, scope: !17120, file: !428, line: 2058, type: !426)
!17124 = !DILocation(line: 2058, column: 49, scope: !17120)
!17125 = !DILocalVariable(name: "list", arg: 2, scope: !17120, file: !428, line: 2058, type: !15876)
!17126 = !DILocation(line: 2058, column: 75, scope: !17120)
!17127 = !DILocalVariable(name: "next", scope: !17120, file: !428, line: 2060, type: !426)
!17128 = !DILocation(line: 2060, column: 18, scope: !17120)
!17129 = !DILocalVariable(name: "prev", scope: !17120, file: !428, line: 2060, type: !426)
!17130 = !DILocation(line: 2060, column: 25, scope: !17120)
!17131 = !DILocation(line: 2062, column: 2, scope: !17120)
!17132 = !DILocation(line: 2062, column: 2, scope: !17133)
!17133 = distinct !DILexicalBlock(scope: !17120, file: !428, line: 2062, column: 2)
!17134 = !DILocation(line: 2062, column: 2, scope: !17135)
!17135 = distinct !DILexicalBlock(scope: !17133, file: !428, line: 2062, column: 2)
!17136 = !DILocation(line: 2062, column: 2, scope: !17137)
!17137 = distinct !DILexicalBlock(scope: !17133, file: !428, line: 2062, column: 2)
!17138 = !DILocation(line: 2063, column: 12, scope: !17120)
!17139 = !DILocation(line: 2063, column: 17, scope: !17120)
!17140 = !DILocation(line: 2063, column: 10, scope: !17120)
!17141 = !DILocation(line: 2064, column: 12, scope: !17120)
!17142 = !DILocation(line: 2064, column: 17, scope: !17120)
!17143 = !DILocation(line: 2064, column: 10, scope: !17120)
!17144 = !DILocation(line: 2065, column: 15, scope: !17120)
!17145 = !DILocation(line: 2065, column: 20, scope: !17120)
!17146 = !DILocation(line: 2065, column: 25, scope: !17120)
!17147 = !DILocation(line: 2065, column: 2, scope: !17120)
!17148 = !DILocation(line: 2065, column: 7, scope: !17120)
!17149 = !DILocation(line: 2065, column: 13, scope: !17120)
!17150 = !DILocation(line: 2066, column: 2, scope: !17120)
!17151 = !DILocation(line: 2066, column: 2, scope: !17152)
!17152 = distinct !DILexicalBlock(scope: !17120, file: !428, line: 2066, column: 2)
!17153 = !DILocation(line: 2066, column: 2, scope: !17154)
!17154 = distinct !DILexicalBlock(scope: !17152, file: !428, line: 2066, column: 2)
!17155 = !DILocation(line: 2066, column: 2, scope: !17156)
!17156 = distinct !DILexicalBlock(scope: !17152, file: !428, line: 2066, column: 2)
!17157 = !DILocation(line: 2067, column: 2, scope: !17120)
!17158 = !DILocation(line: 2067, column: 2, scope: !17159)
!17159 = distinct !DILexicalBlock(scope: !17120, file: !428, line: 2067, column: 2)
!17160 = !DILocation(line: 2067, column: 2, scope: !17161)
!17161 = distinct !DILexicalBlock(scope: !17159, file: !428, line: 2067, column: 2)
!17162 = !DILocation(line: 2067, column: 2, scope: !17163)
!17163 = distinct !DILexicalBlock(scope: !17159, file: !428, line: 2067, column: 2)
!17164 = !DILocation(line: 2068, column: 1, scope: !17120)
!17165 = distinct !DISubprogram(name: "__skb_queue_before", scope: !428, file: !428, line: 2012, type: !17166, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17166 = !DISubroutineType(types: !17167)
!17167 = !{null, !15876, !426, !426}
!17168 = !DILocalVariable(name: "list", arg: 1, scope: !17165, file: !428, line: 2012, type: !15876)
!17169 = !DILocation(line: 2012, column: 60, scope: !17165)
!17170 = !DILocalVariable(name: "next", arg: 2, scope: !17165, file: !428, line: 2013, type: !426)
!17171 = !DILocation(line: 2013, column: 27, scope: !17165)
!17172 = !DILocalVariable(name: "newsk", arg: 3, scope: !17165, file: !428, line: 2014, type: !426)
!17173 = !DILocation(line: 2014, column: 27, scope: !17165)
!17174 = !DILocation(line: 2016, column: 15, scope: !17165)
!17175 = !DILocation(line: 2016, column: 22, scope: !17165)
!17176 = !DILocation(line: 2016, column: 28, scope: !17165)
!17177 = !DILocation(line: 2016, column: 34, scope: !17165)
!17178 = !DILocation(line: 2016, column: 40, scope: !17165)
!17179 = !DILocation(line: 2016, column: 2, scope: !17165)
!17180 = !DILocation(line: 2017, column: 1, scope: !17165)
!17181 = distinct !DISubprogram(name: "__skb_insert", scope: !428, file: !428, line: 1900, type: !17182, scopeLine: 1903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17182 = !DISubroutineType(types: !17183)
!17183 = !{null, !426, !426, !426, !15876}
!17184 = !DILocalVariable(name: "newsk", arg: 1, scope: !17181, file: !428, line: 1900, type: !426)
!17185 = !DILocation(line: 1900, column: 49, scope: !17181)
!17186 = !DILocalVariable(name: "prev", arg: 2, scope: !17181, file: !428, line: 1901, type: !426)
!17187 = !DILocation(line: 1901, column: 21, scope: !17181)
!17188 = !DILocalVariable(name: "next", arg: 3, scope: !17181, file: !428, line: 1901, type: !426)
!17189 = !DILocation(line: 1901, column: 43, scope: !17181)
!17190 = !DILocalVariable(name: "list", arg: 4, scope: !17181, file: !428, line: 1902, type: !15876)
!17191 = !DILocation(line: 1902, column: 26, scope: !17181)
!17192 = !DILocation(line: 1907, column: 2, scope: !17181)
!17193 = !DILocation(line: 1907, column: 2, scope: !17194)
!17194 = distinct !DILexicalBlock(scope: !17181, file: !428, line: 1907, column: 2)
!17195 = !DILocation(line: 1907, column: 2, scope: !17196)
!17196 = distinct !DILexicalBlock(scope: !17194, file: !428, line: 1907, column: 2)
!17197 = !DILocation(line: 1907, column: 2, scope: !17198)
!17198 = distinct !DILexicalBlock(scope: !17194, file: !428, line: 1907, column: 2)
!17199 = !DILocation(line: 1908, column: 2, scope: !17181)
!17200 = !DILocation(line: 1908, column: 2, scope: !17201)
!17201 = distinct !DILexicalBlock(scope: !17181, file: !428, line: 1908, column: 2)
!17202 = !DILocation(line: 1908, column: 2, scope: !17203)
!17203 = distinct !DILexicalBlock(scope: !17201, file: !428, line: 1908, column: 2)
!17204 = !DILocation(line: 1908, column: 2, scope: !17205)
!17205 = distinct !DILexicalBlock(scope: !17201, file: !428, line: 1908, column: 2)
!17206 = !DILocation(line: 1909, column: 2, scope: !17181)
!17207 = !DILocation(line: 1909, column: 2, scope: !17208)
!17208 = distinct !DILexicalBlock(scope: !17181, file: !428, line: 1909, column: 2)
!17209 = !DILocation(line: 1909, column: 2, scope: !17210)
!17210 = distinct !DILexicalBlock(scope: !17208, file: !428, line: 1909, column: 2)
!17211 = !DILocation(line: 1909, column: 2, scope: !17212)
!17212 = distinct !DILexicalBlock(scope: !17208, file: !428, line: 1909, column: 2)
!17213 = !DILocation(line: 1910, column: 2, scope: !17181)
!17214 = !DILocation(line: 1910, column: 2, scope: !17215)
!17215 = distinct !DILexicalBlock(scope: !17181, file: !428, line: 1910, column: 2)
!17216 = !DILocation(line: 1910, column: 2, scope: !17217)
!17217 = distinct !DILexicalBlock(scope: !17215, file: !428, line: 1910, column: 2)
!17218 = !DILocation(line: 1910, column: 2, scope: !17219)
!17219 = distinct !DILexicalBlock(scope: !17215, file: !428, line: 1910, column: 2)
!17220 = !DILocation(line: 1911, column: 2, scope: !17181)
!17221 = !DILocation(line: 1911, column: 8, scope: !17181)
!17222 = !DILocation(line: 1911, column: 12, scope: !17181)
!17223 = !DILocation(line: 1912, column: 1, scope: !17181)
!17224 = distinct !DISubprogram(name: "__skb_queue_after", scope: !428, file: !428, line: 2002, type: !17166, scopeLine: 2005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17225 = !DILocalVariable(name: "list", arg: 1, scope: !17224, file: !428, line: 2002, type: !15876)
!17226 = !DILocation(line: 2002, column: 59, scope: !17224)
!17227 = !DILocalVariable(name: "prev", arg: 2, scope: !17224, file: !428, line: 2003, type: !426)
!17228 = !DILocation(line: 2003, column: 26, scope: !17224)
!17229 = !DILocalVariable(name: "newsk", arg: 3, scope: !17224, file: !428, line: 2004, type: !426)
!17230 = !DILocation(line: 2004, column: 26, scope: !17224)
!17231 = !DILocation(line: 2006, column: 15, scope: !17224)
!17232 = !DILocation(line: 2006, column: 22, scope: !17224)
!17233 = !DILocation(line: 2006, column: 28, scope: !17224)
!17234 = !DILocation(line: 2006, column: 34, scope: !17224)
!17235 = !DILocation(line: 2006, column: 40, scope: !17224)
!17236 = !DILocation(line: 2006, column: 2, scope: !17224)
!17237 = !DILocation(line: 2007, column: 1, scope: !17224)
!17238 = distinct !DISubprogram(name: "skb_reset_network_header", scope: !428, file: !428, line: 2520, type: !2861, scopeLine: 2521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17239 = !DILocalVariable(name: "skb", arg: 1, scope: !17238, file: !428, line: 2520, type: !426)
!17240 = !DILocation(line: 2520, column: 61, scope: !17238)
!17241 = !DILocation(line: 2522, column: 24, scope: !17238)
!17242 = !DILocation(line: 2522, column: 29, scope: !17238)
!17243 = !DILocation(line: 2522, column: 36, scope: !17238)
!17244 = !DILocation(line: 2522, column: 41, scope: !17238)
!17245 = !DILocation(line: 2522, column: 34, scope: !17238)
!17246 = !DILocation(line: 2522, column: 2, scope: !17238)
!17247 = !DILocation(line: 2522, column: 7, scope: !17238)
!17248 = !DILocation(line: 2522, column: 22, scope: !17238)
!17249 = !DILocation(line: 2523, column: 1, scope: !17238)
!17250 = distinct !DISubprogram(name: "checksum_setup", scope: !3, file: !3, line: 1078, type: !8447, scopeLine: 1079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17251 = !DILocation(line: 93, column: 55, scope: !17001, inlinedAt: !17252)
!17252 = distinct !DILocation(line: 241, column: 2, scope: !17006, inlinedAt: !17253)
!17253 = distinct !DILocation(line: 1090, column: 3, scope: !17254)
!17254 = distinct !DILexicalBlock(scope: !17255, file: !3, line: 1088, column: 61)
!17255 = distinct !DILexicalBlock(scope: !17250, file: !3, line: 1088, column: 6)
!17256 = !DILocation(line: 99, column: 79, scope: !13311, inlinedAt: !17257)
!17257 = distinct !DILocation(line: 240, column: 2, scope: !17006, inlinedAt: !17253)
!17258 = !DILocation(line: 99, column: 89, scope: !13311, inlinedAt: !17257)
!17259 = !DILocation(line: 238, column: 22, scope: !17006, inlinedAt: !17253)
!17260 = !DILocalVariable(name: "dev", arg: 1, scope: !17250, file: !3, line: 1078, type: !301)
!17261 = !DILocation(line: 1078, column: 46, scope: !17250)
!17262 = !DILocalVariable(name: "skb", arg: 2, scope: !17250, file: !3, line: 1078, type: !426)
!17263 = !DILocation(line: 1078, column: 67, scope: !17250)
!17264 = !DILocalVariable(name: "recalculate_partial_csum", scope: !17250, file: !3, line: 1080, type: !546)
!17265 = !DILocation(line: 1080, column: 7, scope: !17250)
!17266 = !DILocation(line: 1088, column: 6, scope: !17255)
!17267 = !DILocation(line: 1088, column: 11, scope: !17255)
!17268 = !DILocation(line: 1088, column: 21, scope: !17255)
!17269 = !DILocation(line: 1088, column: 41, scope: !17255)
!17270 = !DILocation(line: 1088, column: 55, scope: !17255)
!17271 = !DILocation(line: 1088, column: 44, scope: !17255)
!17272 = !DILocation(line: 1088, column: 6, scope: !17250)
!17273 = !DILocalVariable(name: "np", scope: !17254, file: !3, line: 1089, type: !10156)
!17274 = !DILocation(line: 1089, column: 25, scope: !17254)
!17275 = !DILocation(line: 1089, column: 42, scope: !17254)
!17276 = !DILocation(line: 1089, column: 30, scope: !17254)
!17277 = !DILocation(line: 1090, column: 15, scope: !17254)
!17278 = !DILocation(line: 1090, column: 19, scope: !17254)
!17279 = !DILocation(line: 240, column: 31, scope: !17006, inlinedAt: !17253)
!17280 = !DILocation(line: 101, column: 20, scope: !13311, inlinedAt: !17257)
!17281 = !DILocation(line: 101, column: 23, scope: !13311, inlinedAt: !17257)
!17282 = !DILocation(line: 101, column: 2, scope: !13311, inlinedAt: !17257)
!17283 = !DILocation(line: 102, column: 2, scope: !13311, inlinedAt: !17257)
!17284 = !DILocation(line: 241, column: 18, scope: !17006, inlinedAt: !17253)
!17285 = !DILocation(line: 96, column: 16, scope: !17001, inlinedAt: !17252)
!17286 = !DILocation(line: 96, column: 19, scope: !17001, inlinedAt: !17252)
!17287 = !DILocation(line: 95, column: 2, scope: !17001, inlinedAt: !17252)
!17288 = !DILocation(line: 1091, column: 3, scope: !17254)
!17289 = !DILocation(line: 1091, column: 8, scope: !17254)
!17290 = !DILocation(line: 1091, column: 18, scope: !17254)
!17291 = !DILocation(line: 1092, column: 28, scope: !17254)
!17292 = !DILocation(line: 1093, column: 2, scope: !17254)
!17293 = !DILocation(line: 1096, column: 6, scope: !17294)
!17294 = distinct !DILexicalBlock(scope: !17250, file: !3, line: 1096, column: 6)
!17295 = !DILocation(line: 1096, column: 11, scope: !17294)
!17296 = !DILocation(line: 1096, column: 21, scope: !17294)
!17297 = !DILocation(line: 1096, column: 6, scope: !17250)
!17298 = !DILocation(line: 1097, column: 3, scope: !17294)
!17299 = !DILocation(line: 1099, column: 28, scope: !17250)
!17300 = !DILocation(line: 1099, column: 33, scope: !17250)
!17301 = !DILocation(line: 1099, column: 9, scope: !17250)
!17302 = !DILocation(line: 1099, column: 2, scope: !17250)
!17303 = !DILocation(line: 1100, column: 1, scope: !17250)
!17304 = distinct !DISubprogram(name: "setup_netfront_split", scope: !3, file: !3, line: 1725, type: !12885, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17305 = !DILocalVariable(name: "queue", arg: 1, scope: !17304, file: !3, line: 1725, type: !10150)
!17306 = !DILocation(line: 1725, column: 56, scope: !17304)
!17307 = !DILocalVariable(name: "err", scope: !17304, file: !3, line: 1727, type: !43)
!17308 = !DILocation(line: 1727, column: 6, scope: !17304)
!17309 = !DILocation(line: 1729, column: 28, scope: !17304)
!17310 = !DILocation(line: 1729, column: 35, scope: !17304)
!17311 = !DILocation(line: 1729, column: 41, scope: !17304)
!17312 = !DILocation(line: 1729, column: 49, scope: !17304)
!17313 = !DILocation(line: 1729, column: 56, scope: !17304)
!17314 = !DILocation(line: 1729, column: 8, scope: !17304)
!17315 = !DILocation(line: 1729, column: 6, scope: !17304)
!17316 = !DILocation(line: 1730, column: 6, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17304, file: !3, line: 1730, column: 6)
!17318 = !DILocation(line: 1730, column: 10, scope: !17317)
!17319 = !DILocation(line: 1730, column: 6, scope: !17304)
!17320 = !DILocation(line: 1731, column: 3, scope: !17317)
!17321 = !DILocation(line: 1732, column: 28, scope: !17304)
!17322 = !DILocation(line: 1732, column: 35, scope: !17304)
!17323 = !DILocation(line: 1732, column: 41, scope: !17304)
!17324 = !DILocation(line: 1732, column: 49, scope: !17304)
!17325 = !DILocation(line: 1732, column: 56, scope: !17304)
!17326 = !DILocation(line: 1732, column: 8, scope: !17304)
!17327 = !DILocation(line: 1732, column: 6, scope: !17304)
!17328 = !DILocation(line: 1733, column: 6, scope: !17329)
!17329 = distinct !DILexicalBlock(scope: !17304, file: !3, line: 1733, column: 6)
!17330 = !DILocation(line: 1733, column: 10, scope: !17329)
!17331 = !DILocation(line: 1733, column: 6, scope: !17304)
!17332 = !DILocation(line: 1734, column: 3, scope: !17329)
!17333 = !DILocation(line: 1736, column: 11, scope: !17304)
!17334 = !DILocation(line: 1736, column: 18, scope: !17304)
!17335 = !DILocation(line: 1737, column: 13, scope: !17304)
!17336 = !DILocation(line: 1737, column: 20, scope: !17304)
!17337 = !DILocation(line: 1736, column: 2, scope: !17304)
!17338 = !DILocation(line: 1738, column: 34, scope: !17304)
!17339 = !DILocation(line: 1738, column: 41, scope: !17304)
!17340 = !DILocation(line: 1740, column: 9, scope: !17304)
!17341 = !DILocation(line: 1740, column: 16, scope: !17304)
!17342 = !DILocation(line: 1740, column: 29, scope: !17304)
!17343 = !DILocation(line: 1738, column: 8, scope: !17304)
!17344 = !DILocation(line: 1738, column: 6, scope: !17304)
!17345 = !DILocation(line: 1741, column: 6, scope: !17346)
!17346 = distinct !DILexicalBlock(scope: !17304, file: !3, line: 1741, column: 6)
!17347 = !DILocation(line: 1741, column: 10, scope: !17346)
!17348 = !DILocation(line: 1741, column: 6, scope: !17304)
!17349 = !DILocation(line: 1742, column: 3, scope: !17346)
!17350 = !DILocation(line: 1743, column: 18, scope: !17304)
!17351 = !DILocation(line: 1743, column: 2, scope: !17304)
!17352 = !DILocation(line: 1743, column: 9, scope: !17304)
!17353 = !DILocation(line: 1743, column: 16, scope: !17304)
!17354 = !DILocation(line: 1745, column: 11, scope: !17304)
!17355 = !DILocation(line: 1745, column: 18, scope: !17304)
!17356 = !DILocation(line: 1746, column: 13, scope: !17304)
!17357 = !DILocation(line: 1746, column: 20, scope: !17304)
!17358 = !DILocation(line: 1745, column: 2, scope: !17304)
!17359 = !DILocation(line: 1747, column: 34, scope: !17304)
!17360 = !DILocation(line: 1747, column: 41, scope: !17304)
!17361 = !DILocation(line: 1749, column: 9, scope: !17304)
!17362 = !DILocation(line: 1749, column: 16, scope: !17304)
!17363 = !DILocation(line: 1749, column: 29, scope: !17304)
!17364 = !DILocation(line: 1747, column: 8, scope: !17304)
!17365 = !DILocation(line: 1747, column: 6, scope: !17304)
!17366 = !DILocation(line: 1750, column: 6, scope: !17367)
!17367 = distinct !DILexicalBlock(scope: !17304, file: !3, line: 1750, column: 6)
!17368 = !DILocation(line: 1750, column: 10, scope: !17367)
!17369 = !DILocation(line: 1750, column: 6, scope: !17304)
!17370 = !DILocation(line: 1751, column: 3, scope: !17367)
!17371 = !DILocation(line: 1752, column: 18, scope: !17304)
!17372 = !DILocation(line: 1752, column: 2, scope: !17304)
!17373 = !DILocation(line: 1752, column: 9, scope: !17304)
!17374 = !DILocation(line: 1752, column: 16, scope: !17304)
!17375 = !DILocation(line: 1754, column: 2, scope: !17304)
!17376 = !DILabel(scope: !17304, name: "bind_rx_fail", file: !3, line: 1756)
!17377 = !DILocation(line: 1756, column: 1, scope: !17304)
!17378 = !DILocation(line: 1757, column: 25, scope: !17304)
!17379 = !DILocation(line: 1757, column: 32, scope: !17304)
!17380 = !DILocation(line: 1757, column: 40, scope: !17304)
!17381 = !DILocation(line: 1757, column: 2, scope: !17304)
!17382 = !DILocation(line: 1758, column: 2, scope: !17304)
!17383 = !DILocation(line: 1758, column: 9, scope: !17304)
!17384 = !DILocation(line: 1758, column: 16, scope: !17304)
!17385 = !DILabel(scope: !17304, name: "bind_tx_fail", file: !3, line: 1759)
!17386 = !DILocation(line: 1759, column: 1, scope: !17304)
!17387 = !DILocation(line: 1760, column: 21, scope: !17304)
!17388 = !DILocation(line: 1760, column: 28, scope: !17304)
!17389 = !DILocation(line: 1760, column: 34, scope: !17304)
!17390 = !DILocation(line: 1760, column: 41, scope: !17304)
!17391 = !DILocation(line: 1760, column: 48, scope: !17304)
!17392 = !DILocation(line: 1760, column: 2, scope: !17304)
!17393 = !DILocation(line: 1761, column: 2, scope: !17304)
!17394 = !DILocation(line: 1761, column: 9, scope: !17304)
!17395 = !DILocation(line: 1761, column: 19, scope: !17304)
!17396 = !DILabel(scope: !17304, name: "alloc_rx_evtchn_fail", file: !3, line: 1762)
!17397 = !DILocation(line: 1762, column: 1, scope: !17304)
!17398 = !DILocation(line: 1763, column: 21, scope: !17304)
!17399 = !DILocation(line: 1763, column: 28, scope: !17304)
!17400 = !DILocation(line: 1763, column: 34, scope: !17304)
!17401 = !DILocation(line: 1763, column: 41, scope: !17304)
!17402 = !DILocation(line: 1763, column: 48, scope: !17304)
!17403 = !DILocation(line: 1763, column: 2, scope: !17304)
!17404 = !DILocation(line: 1764, column: 2, scope: !17304)
!17405 = !DILocation(line: 1764, column: 9, scope: !17304)
!17406 = !DILocation(line: 1764, column: 19, scope: !17304)
!17407 = !DILabel(scope: !17304, name: "fail", file: !3, line: 1765)
!17408 = !DILocation(line: 1765, column: 1, scope: !17304)
!17409 = !DILocation(line: 1766, column: 9, scope: !17304)
!17410 = !DILocation(line: 1766, column: 2, scope: !17304)
!17411 = !DILocation(line: 1767, column: 1, scope: !17304)
!17412 = distinct !DISubprogram(name: "setup_netfront_single", scope: !3, file: !3, line: 1700, type: !12885, scopeLine: 1701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17413 = !DILocalVariable(name: "queue", arg: 1, scope: !17412, file: !3, line: 1700, type: !10150)
!17414 = !DILocation(line: 1700, column: 57, scope: !17412)
!17415 = !DILocalVariable(name: "err", scope: !17412, file: !3, line: 1702, type: !43)
!17416 = !DILocation(line: 1702, column: 6, scope: !17412)
!17417 = !DILocation(line: 1704, column: 28, scope: !17412)
!17418 = !DILocation(line: 1704, column: 35, scope: !17412)
!17419 = !DILocation(line: 1704, column: 41, scope: !17412)
!17420 = !DILocation(line: 1704, column: 49, scope: !17412)
!17421 = !DILocation(line: 1704, column: 56, scope: !17412)
!17422 = !DILocation(line: 1704, column: 8, scope: !17412)
!17423 = !DILocation(line: 1704, column: 6, scope: !17412)
!17424 = !DILocation(line: 1705, column: 6, scope: !17425)
!17425 = distinct !DILexicalBlock(scope: !17412, file: !3, line: 1705, column: 6)
!17426 = !DILocation(line: 1705, column: 10, scope: !17425)
!17427 = !DILocation(line: 1705, column: 6, scope: !17412)
!17428 = !DILocation(line: 1706, column: 3, scope: !17425)
!17429 = !DILocation(line: 1708, column: 34, scope: !17412)
!17430 = !DILocation(line: 1708, column: 41, scope: !17412)
!17431 = !DILocation(line: 1710, column: 9, scope: !17412)
!17432 = !DILocation(line: 1710, column: 16, scope: !17412)
!17433 = !DILocation(line: 1710, column: 22, scope: !17412)
!17434 = !DILocation(line: 1710, column: 30, scope: !17412)
!17435 = !DILocation(line: 1710, column: 36, scope: !17412)
!17436 = !DILocation(line: 1708, column: 8, scope: !17412)
!17437 = !DILocation(line: 1708, column: 6, scope: !17412)
!17438 = !DILocation(line: 1711, column: 6, scope: !17439)
!17439 = distinct !DILexicalBlock(scope: !17412, file: !3, line: 1711, column: 6)
!17440 = !DILocation(line: 1711, column: 10, scope: !17439)
!17441 = !DILocation(line: 1711, column: 6, scope: !17412)
!17442 = !DILocation(line: 1712, column: 3, scope: !17439)
!17443 = !DILocation(line: 1713, column: 21, scope: !17412)
!17444 = !DILocation(line: 1713, column: 28, scope: !17412)
!17445 = !DILocation(line: 1713, column: 2, scope: !17412)
!17446 = !DILocation(line: 1713, column: 9, scope: !17412)
!17447 = !DILocation(line: 1713, column: 19, scope: !17412)
!17448 = !DILocation(line: 1714, column: 34, scope: !17412)
!17449 = !DILocation(line: 1714, column: 18, scope: !17412)
!17450 = !DILocation(line: 1714, column: 25, scope: !17412)
!17451 = !DILocation(line: 1714, column: 32, scope: !17412)
!17452 = !DILocation(line: 1714, column: 2, scope: !17412)
!17453 = !DILocation(line: 1714, column: 9, scope: !17412)
!17454 = !DILocation(line: 1714, column: 16, scope: !17412)
!17455 = !DILocation(line: 1716, column: 2, scope: !17412)
!17456 = !DILabel(scope: !17412, name: "bind_fail", file: !3, line: 1718)
!17457 = !DILocation(line: 1718, column: 1, scope: !17412)
!17458 = !DILocation(line: 1719, column: 21, scope: !17412)
!17459 = !DILocation(line: 1719, column: 28, scope: !17412)
!17460 = !DILocation(line: 1719, column: 34, scope: !17412)
!17461 = !DILocation(line: 1719, column: 41, scope: !17412)
!17462 = !DILocation(line: 1719, column: 48, scope: !17412)
!17463 = !DILocation(line: 1719, column: 2, scope: !17412)
!17464 = !DILocation(line: 1720, column: 2, scope: !17412)
!17465 = !DILocation(line: 1720, column: 9, scope: !17412)
!17466 = !DILocation(line: 1720, column: 19, scope: !17412)
!17467 = !DILabel(scope: !17412, name: "fail", file: !3, line: 1721)
!17468 = !DILocation(line: 1721, column: 1, scope: !17412)
!17469 = !DILocation(line: 1722, column: 9, scope: !17412)
!17470 = !DILocation(line: 1722, column: 2, scope: !17412)
!17471 = !DILocation(line: 1723, column: 1, scope: !17412)
!17472 = distinct !DISubprogram(name: "xennet_tx_interrupt", scope: !3, file: !3, line: 1376, type: !5116, scopeLine: 1377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17473 = !DILocation(line: 407, column: 64, scope: !11088, inlinedAt: !17474)
!17474 = distinct !DILocation(line: 1383, column: 2, scope: !17472)
!17475 = !DILocation(line: 407, column: 84, scope: !11088, inlinedAt: !17474)
!17476 = !DILocation(line: 327, column: 67, scope: !11109, inlinedAt: !17477)
!17477 = distinct !DILocation(line: 1381, column: 2, scope: !17478)
!17478 = distinct !DILexicalBlock(scope: !17479, file: !3, line: 1381, column: 2)
!17479 = distinct !DILexicalBlock(scope: !17480, file: !3, line: 1381, column: 2)
!17480 = distinct !DILexicalBlock(scope: !17481, file: !3, line: 1381, column: 2)
!17481 = distinct !DILexicalBlock(scope: !17482, file: !3, line: 1381, column: 2)
!17482 = distinct !DILexicalBlock(scope: !17472, file: !3, line: 1381, column: 2)
!17483 = !DILocalVariable(name: "irq", arg: 1, scope: !17472, file: !3, line: 1376, type: !43)
!17484 = !DILocation(line: 1376, column: 44, scope: !17472)
!17485 = !DILocalVariable(name: "dev_id", arg: 2, scope: !17472, file: !3, line: 1376, type: !576)
!17486 = !DILocation(line: 1376, column: 55, scope: !17472)
!17487 = !DILocalVariable(name: "queue", scope: !17472, file: !3, line: 1378, type: !10150)
!17488 = !DILocation(line: 1378, column: 25, scope: !17472)
!17489 = !DILocation(line: 1378, column: 33, scope: !17472)
!17490 = !DILocalVariable(name: "flags", scope: !17472, file: !3, line: 1379, type: !323)
!17491 = !DILocation(line: 1379, column: 16, scope: !17472)
!17492 = !DILocation(line: 1381, column: 2, scope: !17472)
!17493 = !DILocation(line: 1381, column: 2, scope: !17482)
!17494 = !DILocalVariable(name: "__dummy", scope: !17495, file: !3, line: 1381, type: !323)
!17495 = distinct !DILexicalBlock(scope: !17481, file: !3, line: 1381, column: 2)
!17496 = !DILocation(line: 1381, column: 2, scope: !17495)
!17497 = !DILocalVariable(name: "__dummy2", scope: !17495, file: !3, line: 1381, type: !323)
!17498 = !DILocation(line: 1381, column: 2, scope: !17481)
!17499 = !DILocation(line: 1381, column: 2, scope: !17480)
!17500 = !DILocation(line: 1381, column: 2, scope: !17501)
!17501 = distinct !DILexicalBlock(scope: !17480, file: !3, line: 1381, column: 2)
!17502 = !DILocalVariable(name: "__dummy", scope: !17503, file: !3, line: 1381, type: !323)
!17503 = distinct !DILexicalBlock(scope: !17504, file: !3, line: 1381, column: 2)
!17504 = distinct !DILexicalBlock(scope: !17501, file: !3, line: 1381, column: 2)
!17505 = !DILocation(line: 1381, column: 2, scope: !17503)
!17506 = !DILocalVariable(name: "__dummy2", scope: !17503, file: !3, line: 1381, type: !323)
!17507 = !DILocation(line: 1381, column: 2, scope: !17504)
!17508 = !DILocation(line: 1381, column: 2, scope: !17479)
!17509 = !{i32 -2136786326}
!17510 = !DILocation(line: 1381, column: 2, scope: !17478)
!17511 = !DILocation(line: 329, column: 10, scope: !11109, inlinedAt: !17477)
!17512 = !DILocation(line: 329, column: 16, scope: !11109, inlinedAt: !17477)
!17513 = !DILocation(line: 1382, column: 19, scope: !17472)
!17514 = !DILocation(line: 1382, column: 2, scope: !17472)
!17515 = !DILocation(line: 1383, column: 26, scope: !17472)
!17516 = !DILocation(line: 1383, column: 33, scope: !17472)
!17517 = !DILocation(line: 1383, column: 42, scope: !17472)
!17518 = !DILocation(line: 409, column: 2, scope: !11258, inlinedAt: !17474)
!17519 = !DILocation(line: 409, column: 2, scope: !11263, inlinedAt: !17474)
!17520 = !DILocation(line: 409, column: 2, scope: !11264, inlinedAt: !17474)
!17521 = !DILocation(line: 409, column: 2, scope: !11271, inlinedAt: !17474)
!17522 = !DILocation(line: 409, column: 2, scope: !11274, inlinedAt: !17474)
!17523 = !DILocation(line: 1385, column: 2, scope: !17472)
!17524 = distinct !DISubprogram(name: "xennet_rx_interrupt", scope: !3, file: !3, line: 1388, type: !5116, scopeLine: 1389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17525 = !DILocalVariable(name: "irq", arg: 1, scope: !17524, file: !3, line: 1388, type: !43)
!17526 = !DILocation(line: 1388, column: 44, scope: !17524)
!17527 = !DILocalVariable(name: "dev_id", arg: 2, scope: !17524, file: !3, line: 1388, type: !576)
!17528 = !DILocation(line: 1388, column: 55, scope: !17524)
!17529 = !DILocalVariable(name: "queue", scope: !17524, file: !3, line: 1390, type: !10150)
!17530 = !DILocation(line: 1390, column: 25, scope: !17524)
!17531 = !DILocation(line: 1390, column: 33, scope: !17524)
!17532 = !DILocalVariable(name: "dev", scope: !17524, file: !3, line: 1391, type: !301)
!17533 = !DILocation(line: 1391, column: 21, scope: !17524)
!17534 = !DILocation(line: 1391, column: 27, scope: !17524)
!17535 = !DILocation(line: 1391, column: 34, scope: !17524)
!17536 = !DILocation(line: 1391, column: 40, scope: !17524)
!17537 = !DILocation(line: 1393, column: 6, scope: !17538)
!17538 = distinct !DILexicalBlock(scope: !17524, file: !3, line: 1393, column: 6)
!17539 = !DILocation(line: 0, scope: !17538)
!17540 = !DILocation(line: 1393, column: 6, scope: !17524)
!17541 = !DILocation(line: 1395, column: 18, scope: !17538)
!17542 = !DILocation(line: 1395, column: 25, scope: !17538)
!17543 = !DILocation(line: 1395, column: 3, scope: !17538)
!17544 = !DILocation(line: 1397, column: 2, scope: !17524)
!17545 = distinct !DISubprogram(name: "xennet_interrupt", scope: !3, file: !3, line: 1400, type: !5116, scopeLine: 1401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17546 = !DILocalVariable(name: "irq", arg: 1, scope: !17545, file: !3, line: 1400, type: !43)
!17547 = !DILocation(line: 1400, column: 41, scope: !17545)
!17548 = !DILocalVariable(name: "dev_id", arg: 2, scope: !17545, file: !3, line: 1400, type: !576)
!17549 = !DILocation(line: 1400, column: 52, scope: !17545)
!17550 = !DILocation(line: 1402, column: 22, scope: !17545)
!17551 = !DILocation(line: 1402, column: 27, scope: !17545)
!17552 = !DILocation(line: 1402, column: 2, scope: !17545)
!17553 = !DILocation(line: 1403, column: 22, scope: !17545)
!17554 = !DILocation(line: 1403, column: 27, scope: !17545)
!17555 = !DILocation(line: 1403, column: 2, scope: !17545)
!17556 = !DILocation(line: 1404, column: 2, scope: !17545)
!17557 = distinct !DISubprogram(name: "kzalloc", scope: !10050, file: !10050, line: 662, type: !15493, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17558 = !DILocation(line: 445, column: 72, scope: !15485, inlinedAt: !17559)
!17559 = distinct !DILocation(line: 552, column: 10, scope: !15490, inlinedAt: !17560)
!17560 = distinct !DILocation(line: 664, column: 9, scope: !17557)
!17561 = !DILocation(line: 446, column: 9, scope: !15485, inlinedAt: !17559)
!17562 = !DILocation(line: 446, column: 23, scope: !15485, inlinedAt: !17559)
!17563 = !DILocation(line: 448, column: 8, scope: !15485, inlinedAt: !17559)
!17564 = !DILocation(line: 318, column: 67, scope: !15504, inlinedAt: !17565)
!17565 = distinct !DILocation(line: 553, column: 20, scope: !15490, inlinedAt: !17560)
!17566 = !DILocation(line: 346, column: 58, scope: !15510, inlinedAt: !17567)
!17567 = distinct !DILocation(line: 547, column: 11, scope: !15490, inlinedAt: !17560)
!17568 = !DILocation(line: 472, column: 28, scope: !15516, inlinedAt: !17569)
!17569 = distinct !DILocation(line: 481, column: 9, scope: !15521, inlinedAt: !17570)
!17570 = distinct !DILocation(line: 545, column: 11, scope: !15523, inlinedAt: !17560)
!17571 = !DILocation(line: 472, column: 40, scope: !15516, inlinedAt: !17569)
!17572 = !DILocation(line: 472, column: 60, scope: !15516, inlinedAt: !17569)
!17573 = !DILocation(line: 478, column: 51, scope: !15521, inlinedAt: !17570)
!17574 = !DILocation(line: 478, column: 63, scope: !15521, inlinedAt: !17570)
!17575 = !DILocation(line: 480, column: 15, scope: !15521, inlinedAt: !17570)
!17576 = !DILocation(line: 538, column: 45, scope: !15492, inlinedAt: !17560)
!17577 = !DILocation(line: 538, column: 57, scope: !15492, inlinedAt: !17560)
!17578 = !DILocation(line: 542, column: 16, scope: !15490, inlinedAt: !17560)
!17579 = !DILocalVariable(name: "size", arg: 1, scope: !17557, file: !10050, line: 662, type: !600)
!17580 = !DILocation(line: 662, column: 36, scope: !17557)
!17581 = !DILocalVariable(name: "flags", arg: 2, scope: !17557, file: !10050, line: 662, type: !1996)
!17582 = !DILocation(line: 662, column: 48, scope: !17557)
!17583 = !DILocation(line: 664, column: 17, scope: !17557)
!17584 = !DILocation(line: 664, column: 23, scope: !17557)
!17585 = !DILocation(line: 664, column: 29, scope: !17557)
!17586 = !DILocation(line: 540, column: 27, scope: !15491, inlinedAt: !17560)
!17587 = !DILocation(line: 540, column: 6, scope: !15491, inlinedAt: !17560)
!17588 = !DILocation(line: 540, column: 6, scope: !15492, inlinedAt: !17560)
!17589 = !DILocation(line: 544, column: 7, scope: !15523, inlinedAt: !17560)
!17590 = !DILocation(line: 544, column: 12, scope: !15523, inlinedAt: !17560)
!17591 = !DILocation(line: 544, column: 7, scope: !15490, inlinedAt: !17560)
!17592 = !DILocation(line: 545, column: 25, scope: !15523, inlinedAt: !17560)
!17593 = !DILocation(line: 545, column: 31, scope: !15523, inlinedAt: !17560)
!17594 = !DILocation(line: 480, column: 33, scope: !15521, inlinedAt: !17570)
!17595 = !DILocation(line: 480, column: 23, scope: !15521, inlinedAt: !17570)
!17596 = !DILocation(line: 481, column: 29, scope: !15521, inlinedAt: !17570)
!17597 = !DILocation(line: 481, column: 35, scope: !15521, inlinedAt: !17570)
!17598 = !DILocation(line: 481, column: 42, scope: !15521, inlinedAt: !17570)
!17599 = !DILocation(line: 474, column: 23, scope: !15516, inlinedAt: !17569)
!17600 = !DILocation(line: 474, column: 29, scope: !15516, inlinedAt: !17569)
!17601 = !DILocation(line: 474, column: 36, scope: !15516, inlinedAt: !17569)
!17602 = !DILocation(line: 474, column: 9, scope: !15516, inlinedAt: !17569)
!17603 = !DILocation(line: 545, column: 4, scope: !15523, inlinedAt: !17560)
!17604 = !DILocation(line: 547, column: 25, scope: !15490, inlinedAt: !17560)
!17605 = !DILocation(line: 348, column: 7, scope: !15585, inlinedAt: !17567)
!17606 = !DILocation(line: 348, column: 6, scope: !15510, inlinedAt: !17567)
!17607 = !DILocation(line: 349, column: 3, scope: !15585, inlinedAt: !17567)
!17608 = !DILocation(line: 351, column: 6, scope: !15589, inlinedAt: !17567)
!17609 = !DILocation(line: 351, column: 11, scope: !15589, inlinedAt: !17567)
!17610 = !DILocation(line: 351, column: 6, scope: !15510, inlinedAt: !17567)
!17611 = !DILocation(line: 352, column: 3, scope: !15589, inlinedAt: !17567)
!17612 = !DILocation(line: 354, column: 32, scope: !15594, inlinedAt: !17567)
!17613 = !DILocation(line: 354, column: 37, scope: !15594, inlinedAt: !17567)
!17614 = !DILocation(line: 354, column: 42, scope: !15594, inlinedAt: !17567)
!17615 = !DILocation(line: 354, column: 45, scope: !15594, inlinedAt: !17567)
!17616 = !DILocation(line: 354, column: 50, scope: !15594, inlinedAt: !17567)
!17617 = !DILocation(line: 354, column: 6, scope: !15510, inlinedAt: !17567)
!17618 = !DILocation(line: 355, column: 3, scope: !15594, inlinedAt: !17567)
!17619 = !DILocation(line: 356, column: 32, scope: !15602, inlinedAt: !17567)
!17620 = !DILocation(line: 356, column: 37, scope: !15602, inlinedAt: !17567)
!17621 = !DILocation(line: 356, column: 43, scope: !15602, inlinedAt: !17567)
!17622 = !DILocation(line: 356, column: 46, scope: !15602, inlinedAt: !17567)
!17623 = !DILocation(line: 356, column: 51, scope: !15602, inlinedAt: !17567)
!17624 = !DILocation(line: 356, column: 6, scope: !15510, inlinedAt: !17567)
!17625 = !DILocation(line: 357, column: 3, scope: !15602, inlinedAt: !17567)
!17626 = !DILocation(line: 358, column: 6, scope: !15610, inlinedAt: !17567)
!17627 = !DILocation(line: 358, column: 11, scope: !15610, inlinedAt: !17567)
!17628 = !DILocation(line: 358, column: 6, scope: !15510, inlinedAt: !17567)
!17629 = !DILocation(line: 358, column: 26, scope: !15610, inlinedAt: !17567)
!17630 = !DILocation(line: 359, column: 6, scope: !15615, inlinedAt: !17567)
!17631 = !DILocation(line: 359, column: 11, scope: !15615, inlinedAt: !17567)
!17632 = !DILocation(line: 359, column: 6, scope: !15510, inlinedAt: !17567)
!17633 = !DILocation(line: 359, column: 26, scope: !15615, inlinedAt: !17567)
!17634 = !DILocation(line: 360, column: 6, scope: !15620, inlinedAt: !17567)
!17635 = !DILocation(line: 360, column: 11, scope: !15620, inlinedAt: !17567)
!17636 = !DILocation(line: 360, column: 6, scope: !15510, inlinedAt: !17567)
!17637 = !DILocation(line: 360, column: 26, scope: !15620, inlinedAt: !17567)
!17638 = !DILocation(line: 361, column: 6, scope: !15625, inlinedAt: !17567)
!17639 = !DILocation(line: 361, column: 11, scope: !15625, inlinedAt: !17567)
!17640 = !DILocation(line: 361, column: 6, scope: !15510, inlinedAt: !17567)
!17641 = !DILocation(line: 361, column: 26, scope: !15625, inlinedAt: !17567)
!17642 = !DILocation(line: 362, column: 6, scope: !15630, inlinedAt: !17567)
!17643 = !DILocation(line: 362, column: 11, scope: !15630, inlinedAt: !17567)
!17644 = !DILocation(line: 362, column: 6, scope: !15510, inlinedAt: !17567)
!17645 = !DILocation(line: 362, column: 26, scope: !15630, inlinedAt: !17567)
!17646 = !DILocation(line: 363, column: 6, scope: !15635, inlinedAt: !17567)
!17647 = !DILocation(line: 363, column: 11, scope: !15635, inlinedAt: !17567)
!17648 = !DILocation(line: 363, column: 6, scope: !15510, inlinedAt: !17567)
!17649 = !DILocation(line: 363, column: 26, scope: !15635, inlinedAt: !17567)
!17650 = !DILocation(line: 364, column: 6, scope: !15640, inlinedAt: !17567)
!17651 = !DILocation(line: 364, column: 11, scope: !15640, inlinedAt: !17567)
!17652 = !DILocation(line: 364, column: 6, scope: !15510, inlinedAt: !17567)
!17653 = !DILocation(line: 364, column: 26, scope: !15640, inlinedAt: !17567)
!17654 = !DILocation(line: 365, column: 6, scope: !15645, inlinedAt: !17567)
!17655 = !DILocation(line: 365, column: 11, scope: !15645, inlinedAt: !17567)
!17656 = !DILocation(line: 365, column: 6, scope: !15510, inlinedAt: !17567)
!17657 = !DILocation(line: 365, column: 26, scope: !15645, inlinedAt: !17567)
!17658 = !DILocation(line: 366, column: 6, scope: !15650, inlinedAt: !17567)
!17659 = !DILocation(line: 366, column: 11, scope: !15650, inlinedAt: !17567)
!17660 = !DILocation(line: 366, column: 6, scope: !15510, inlinedAt: !17567)
!17661 = !DILocation(line: 366, column: 26, scope: !15650, inlinedAt: !17567)
!17662 = !DILocation(line: 367, column: 6, scope: !15655, inlinedAt: !17567)
!17663 = !DILocation(line: 367, column: 11, scope: !15655, inlinedAt: !17567)
!17664 = !DILocation(line: 367, column: 6, scope: !15510, inlinedAt: !17567)
!17665 = !DILocation(line: 367, column: 26, scope: !15655, inlinedAt: !17567)
!17666 = !DILocation(line: 368, column: 6, scope: !15660, inlinedAt: !17567)
!17667 = !DILocation(line: 368, column: 11, scope: !15660, inlinedAt: !17567)
!17668 = !DILocation(line: 368, column: 6, scope: !15510, inlinedAt: !17567)
!17669 = !DILocation(line: 368, column: 26, scope: !15660, inlinedAt: !17567)
!17670 = !DILocation(line: 369, column: 6, scope: !15665, inlinedAt: !17567)
!17671 = !DILocation(line: 369, column: 11, scope: !15665, inlinedAt: !17567)
!17672 = !DILocation(line: 369, column: 6, scope: !15510, inlinedAt: !17567)
!17673 = !DILocation(line: 369, column: 26, scope: !15665, inlinedAt: !17567)
!17674 = !DILocation(line: 370, column: 6, scope: !15670, inlinedAt: !17567)
!17675 = !DILocation(line: 370, column: 11, scope: !15670, inlinedAt: !17567)
!17676 = !DILocation(line: 370, column: 6, scope: !15510, inlinedAt: !17567)
!17677 = !DILocation(line: 370, column: 26, scope: !15670, inlinedAt: !17567)
!17678 = !DILocation(line: 371, column: 6, scope: !15675, inlinedAt: !17567)
!17679 = !DILocation(line: 371, column: 11, scope: !15675, inlinedAt: !17567)
!17680 = !DILocation(line: 371, column: 6, scope: !15510, inlinedAt: !17567)
!17681 = !DILocation(line: 371, column: 26, scope: !15675, inlinedAt: !17567)
!17682 = !DILocation(line: 372, column: 6, scope: !15680, inlinedAt: !17567)
!17683 = !DILocation(line: 372, column: 11, scope: !15680, inlinedAt: !17567)
!17684 = !DILocation(line: 372, column: 6, scope: !15510, inlinedAt: !17567)
!17685 = !DILocation(line: 372, column: 26, scope: !15680, inlinedAt: !17567)
!17686 = !DILocation(line: 373, column: 6, scope: !15685, inlinedAt: !17567)
!17687 = !DILocation(line: 373, column: 11, scope: !15685, inlinedAt: !17567)
!17688 = !DILocation(line: 373, column: 6, scope: !15510, inlinedAt: !17567)
!17689 = !DILocation(line: 373, column: 26, scope: !15685, inlinedAt: !17567)
!17690 = !DILocation(line: 374, column: 6, scope: !15690, inlinedAt: !17567)
!17691 = !DILocation(line: 374, column: 11, scope: !15690, inlinedAt: !17567)
!17692 = !DILocation(line: 374, column: 6, scope: !15510, inlinedAt: !17567)
!17693 = !DILocation(line: 374, column: 26, scope: !15690, inlinedAt: !17567)
!17694 = !DILocation(line: 375, column: 6, scope: !15695, inlinedAt: !17567)
!17695 = !DILocation(line: 375, column: 11, scope: !15695, inlinedAt: !17567)
!17696 = !DILocation(line: 375, column: 6, scope: !15510, inlinedAt: !17567)
!17697 = !DILocation(line: 375, column: 27, scope: !15695, inlinedAt: !17567)
!17698 = !DILocation(line: 376, column: 6, scope: !15700, inlinedAt: !17567)
!17699 = !DILocation(line: 376, column: 11, scope: !15700, inlinedAt: !17567)
!17700 = !DILocation(line: 376, column: 6, scope: !15510, inlinedAt: !17567)
!17701 = !DILocation(line: 376, column: 32, scope: !15700, inlinedAt: !17567)
!17702 = !DILocation(line: 377, column: 6, scope: !15705, inlinedAt: !17567)
!17703 = !DILocation(line: 377, column: 11, scope: !15705, inlinedAt: !17567)
!17704 = !DILocation(line: 377, column: 6, scope: !15510, inlinedAt: !17567)
!17705 = !DILocation(line: 377, column: 32, scope: !15705, inlinedAt: !17567)
!17706 = !DILocation(line: 378, column: 6, scope: !15710, inlinedAt: !17567)
!17707 = !DILocation(line: 378, column: 11, scope: !15710, inlinedAt: !17567)
!17708 = !DILocation(line: 378, column: 6, scope: !15510, inlinedAt: !17567)
!17709 = !DILocation(line: 378, column: 32, scope: !15710, inlinedAt: !17567)
!17710 = !DILocation(line: 379, column: 6, scope: !15715, inlinedAt: !17567)
!17711 = !DILocation(line: 379, column: 11, scope: !15715, inlinedAt: !17567)
!17712 = !DILocation(line: 379, column: 6, scope: !15510, inlinedAt: !17567)
!17713 = !DILocation(line: 379, column: 33, scope: !15715, inlinedAt: !17567)
!17714 = !DILocation(line: 380, column: 6, scope: !15720, inlinedAt: !17567)
!17715 = !DILocation(line: 380, column: 11, scope: !15720, inlinedAt: !17567)
!17716 = !DILocation(line: 380, column: 6, scope: !15510, inlinedAt: !17567)
!17717 = !DILocation(line: 380, column: 33, scope: !15720, inlinedAt: !17567)
!17718 = !DILocation(line: 381, column: 6, scope: !15725, inlinedAt: !17567)
!17719 = !DILocation(line: 381, column: 11, scope: !15725, inlinedAt: !17567)
!17720 = !DILocation(line: 381, column: 6, scope: !15510, inlinedAt: !17567)
!17721 = !DILocation(line: 381, column: 33, scope: !15725, inlinedAt: !17567)
!17722 = !DILocation(line: 382, column: 2, scope: !15730, inlinedAt: !17567)
!17723 = !DILocation(line: 382, column: 2, scope: !15734, inlinedAt: !17567)
!17724 = !DILocation(line: 382, column: 2, scope: !15735, inlinedAt: !17567)
!17725 = !DILocation(line: 386, column: 1, scope: !15510, inlinedAt: !17567)
!17726 = !DILocation(line: 547, column: 9, scope: !15490, inlinedAt: !17560)
!17727 = !DILocation(line: 549, column: 8, scope: !15741, inlinedAt: !17560)
!17728 = !DILocation(line: 549, column: 7, scope: !15490, inlinedAt: !17560)
!17729 = !DILocation(line: 550, column: 4, scope: !15741, inlinedAt: !17560)
!17730 = !DILocation(line: 553, column: 33, scope: !15490, inlinedAt: !17560)
!17731 = !DILocation(line: 325, column: 6, scope: !15746, inlinedAt: !17565)
!17732 = !DILocation(line: 325, column: 6, scope: !15504, inlinedAt: !17565)
!17733 = !DILocation(line: 326, column: 3, scope: !15746, inlinedAt: !17565)
!17734 = !DILocation(line: 332, column: 9, scope: !15504, inlinedAt: !17565)
!17735 = !DILocation(line: 332, column: 15, scope: !15504, inlinedAt: !17565)
!17736 = !DILocation(line: 332, column: 2, scope: !15504, inlinedAt: !17565)
!17737 = !DILocation(line: 336, column: 1, scope: !15504, inlinedAt: !17565)
!17738 = !DILocation(line: 553, column: 5, scope: !15490, inlinedAt: !17560)
!17739 = !DILocation(line: 553, column: 41, scope: !15490, inlinedAt: !17560)
!17740 = !DILocation(line: 554, column: 5, scope: !15490, inlinedAt: !17560)
!17741 = !DILocation(line: 554, column: 12, scope: !15490, inlinedAt: !17560)
!17742 = !DILocation(line: 448, column: 31, scope: !15485, inlinedAt: !17559)
!17743 = !DILocation(line: 448, column: 34, scope: !15485, inlinedAt: !17559)
!17744 = !DILocation(line: 448, column: 14, scope: !15485, inlinedAt: !17559)
!17745 = !DILocation(line: 450, column: 22, scope: !15485, inlinedAt: !17559)
!17746 = !DILocation(line: 450, column: 25, scope: !15485, inlinedAt: !17559)
!17747 = !DILocation(line: 450, column: 30, scope: !15485, inlinedAt: !17559)
!17748 = !DILocation(line: 450, column: 36, scope: !15485, inlinedAt: !17559)
!17749 = !DILocation(line: 450, column: 8, scope: !15485, inlinedAt: !17559)
!17750 = !DILocation(line: 450, column: 6, scope: !15485, inlinedAt: !17559)
!17751 = !DILocation(line: 451, column: 9, scope: !15485, inlinedAt: !17559)
!17752 = !DILocation(line: 552, column: 3, scope: !15490, inlinedAt: !17560)
!17753 = !DILocation(line: 557, column: 19, scope: !15492, inlinedAt: !17560)
!17754 = !DILocation(line: 557, column: 25, scope: !15492, inlinedAt: !17560)
!17755 = !DILocation(line: 557, column: 9, scope: !15492, inlinedAt: !17560)
!17756 = !DILocation(line: 557, column: 2, scope: !15492, inlinedAt: !17560)
!17757 = !DILocation(line: 558, column: 1, scope: !15492, inlinedAt: !17560)
!17758 = !DILocation(line: 664, column: 2, scope: !17557)
!17759 = distinct !DISubprogram(name: "napi_synchronize", scope: !42, file: !42, line: 523, type: !17760, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17760 = !DISubroutineType(types: !17761)
!17761 = !{null, !17762}
!17762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17763, size: 64)
!17763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10199)
!17764 = !DILocalVariable(name: "n", arg: 1, scope: !17759, file: !42, line: 523, type: !17762)
!17765 = !DILocation(line: 523, column: 63, scope: !17759)
!17766 = !DILocation(line: 529, column: 3, scope: !17767)
!17767 = distinct !DILexicalBlock(scope: !17759, file: !42, line: 525, column: 6)
!17768 = !{i32 -2140329675}
!17769 = !DILocation(line: 530, column: 1, scope: !17759)
!17770 = distinct !DISubprogram(name: "xennet_release_tx_bufs", scope: !3, file: !3, line: 1284, type: !11925, scopeLine: 1285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17771 = !DILocation(line: 1514, column: 69, scope: !16756, inlinedAt: !17772)
!17772 = distinct !DILocation(line: 1298, column: 23, scope: !17773)
!17773 = distinct !DILexicalBlock(scope: !17774, file: !3, line: 1289, column: 41)
!17774 = distinct !DILexicalBlock(scope: !17775, file: !3, line: 1289, column: 2)
!17775 = distinct !DILexicalBlock(scope: !17770, file: !3, line: 1289, column: 2)
!17776 = !DILocalVariable(name: "queue", arg: 1, scope: !17770, file: !3, line: 1284, type: !10150)
!17777 = !DILocation(line: 1284, column: 59, scope: !17770)
!17778 = !DILocalVariable(name: "skb", scope: !17770, file: !3, line: 1286, type: !426)
!17779 = !DILocation(line: 1286, column: 18, scope: !17770)
!17780 = !DILocalVariable(name: "i", scope: !17770, file: !3, line: 1287, type: !43)
!17781 = !DILocation(line: 1287, column: 6, scope: !17770)
!17782 = !DILocation(line: 1289, column: 9, scope: !17775)
!17783 = !DILocation(line: 1289, column: 7, scope: !17775)
!17784 = !DILocation(line: 1289, column: 14, scope: !17774)
!17785 = !DILocation(line: 1289, column: 16, scope: !17774)
!17786 = !DILocation(line: 1289, column: 2, scope: !17775)
!17787 = !DILocation(line: 1291, column: 26, scope: !17788)
!17788 = distinct !DILexicalBlock(scope: !17773, file: !3, line: 1291, column: 7)
!17789 = !DILocation(line: 1291, column: 33, scope: !17788)
!17790 = !DILocation(line: 1291, column: 41, scope: !17788)
!17791 = !DILocation(line: 1291, column: 7, scope: !17788)
!17792 = !DILocation(line: 1291, column: 7, scope: !17773)
!17793 = !DILocation(line: 1292, column: 4, scope: !17788)
!17794 = !DILocation(line: 1294, column: 9, scope: !17773)
!17795 = !DILocation(line: 1294, column: 16, scope: !17773)
!17796 = !DILocation(line: 1294, column: 24, scope: !17773)
!17797 = !DILocation(line: 1294, column: 27, scope: !17773)
!17798 = !DILocation(line: 1294, column: 7, scope: !17773)
!17799 = !DILocation(line: 1295, column: 12, scope: !17773)
!17800 = !DILocation(line: 1295, column: 19, scope: !17773)
!17801 = !DILocation(line: 1295, column: 33, scope: !17773)
!17802 = !DILocation(line: 1295, column: 3, scope: !17773)
!17803 = !DILocation(line: 1296, column: 29, scope: !17773)
!17804 = !DILocation(line: 1296, column: 36, scope: !17773)
!17805 = !DILocation(line: 1296, column: 49, scope: !17773)
!17806 = !DILocation(line: 1298, column: 23, scope: !17773)
!17807 = !DILocation(line: 1516, column: 9, scope: !16756, inlinedAt: !17772)
!17808 = !DILocation(line: 1298, column: 8, scope: !17773)
!17809 = !DILocation(line: 1296, column: 3, scope: !17773)
!17810 = !DILocation(line: 1299, column: 3, scope: !17773)
!17811 = !DILocation(line: 1299, column: 10, scope: !17773)
!17812 = !DILocation(line: 1299, column: 24, scope: !17773)
!17813 = !DILocation(line: 1299, column: 27, scope: !17773)
!17814 = !DILocation(line: 1300, column: 3, scope: !17773)
!17815 = !DILocation(line: 1300, column: 10, scope: !17773)
!17816 = !DILocation(line: 1300, column: 23, scope: !17773)
!17817 = !DILocation(line: 1300, column: 26, scope: !17773)
!17818 = !DILocation(line: 1301, column: 23, scope: !17773)
!17819 = !DILocation(line: 1301, column: 30, scope: !17773)
!17820 = !DILocation(line: 1301, column: 47, scope: !17773)
!17821 = !DILocation(line: 1301, column: 54, scope: !17773)
!17822 = !DILocation(line: 1301, column: 63, scope: !17773)
!17823 = !DILocation(line: 1301, column: 3, scope: !17773)
!17824 = !DILocation(line: 1302, column: 21, scope: !17773)
!17825 = !DILocation(line: 1302, column: 3, scope: !17773)
!17826 = !DILocation(line: 1303, column: 2, scope: !17773)
!17827 = !DILocation(line: 1289, column: 37, scope: !17774)
!17828 = !DILocation(line: 1289, column: 2, scope: !17774)
!17829 = distinct !{!17829, !17786, !17830}
!17830 = !DILocation(line: 1303, column: 2, scope: !17775)
!17831 = !DILocation(line: 1304, column: 1, scope: !17770)
!17832 = distinct !DISubprogram(name: "xennet_release_rx_bufs", scope: !3, file: !3, line: 1306, type: !11925, scopeLine: 1307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17833 = !DILocation(line: 1514, column: 69, scope: !16756, inlinedAt: !17834)
!17834 = distinct !DILocation(line: 1331, column: 23, scope: !17835)
!17835 = distinct !DILexicalBlock(scope: !17836, file: !3, line: 1312, column: 44)
!17836 = distinct !DILexicalBlock(scope: !17837, file: !3, line: 1312, column: 2)
!17837 = distinct !DILexicalBlock(scope: !17832, file: !3, line: 1312, column: 2)
!17838 = !DILocalVariable(name: "queue", arg: 1, scope: !17832, file: !3, line: 1306, type: !10150)
!17839 = !DILocation(line: 1306, column: 59, scope: !17832)
!17840 = !DILocalVariable(name: "id", scope: !17832, file: !3, line: 1308, type: !43)
!17841 = !DILocation(line: 1308, column: 6, scope: !17832)
!17842 = !DILocalVariable(name: "ref", scope: !17832, file: !3, line: 1308, type: !43)
!17843 = !DILocation(line: 1308, column: 10, scope: !17832)
!17844 = !DILocation(line: 1310, column: 16, scope: !17832)
!17845 = !DILocation(line: 1310, column: 23, scope: !17832)
!17846 = !DILocation(line: 1310, column: 2, scope: !17832)
!17847 = !DILocation(line: 1312, column: 10, scope: !17837)
!17848 = !DILocation(line: 1312, column: 7, scope: !17837)
!17849 = !DILocation(line: 1312, column: 15, scope: !17836)
!17850 = !DILocation(line: 1312, column: 18, scope: !17836)
!17851 = !DILocation(line: 1312, column: 2, scope: !17837)
!17852 = !DILocalVariable(name: "skb", scope: !17835, file: !3, line: 1313, type: !426)
!17853 = !DILocation(line: 1313, column: 19, scope: !17835)
!17854 = !DILocalVariable(name: "page", scope: !17835, file: !3, line: 1314, type: !630)
!17855 = !DILocation(line: 1314, column: 16, scope: !17835)
!17856 = !DILocation(line: 1316, column: 9, scope: !17835)
!17857 = !DILocation(line: 1316, column: 16, scope: !17835)
!17858 = !DILocation(line: 1316, column: 24, scope: !17835)
!17859 = !DILocation(line: 1316, column: 7, scope: !17835)
!17860 = !DILocation(line: 1317, column: 8, scope: !17861)
!17861 = distinct !DILexicalBlock(scope: !17835, file: !3, line: 1317, column: 7)
!17862 = !DILocation(line: 1317, column: 7, scope: !17835)
!17863 = !DILocation(line: 1318, column: 4, scope: !17861)
!17864 = !DILocation(line: 1320, column: 9, scope: !17835)
!17865 = !DILocation(line: 1320, column: 16, scope: !17835)
!17866 = !DILocation(line: 1320, column: 29, scope: !17835)
!17867 = !DILocation(line: 1320, column: 7, scope: !17835)
!17868 = !DILocation(line: 1321, column: 7, scope: !17869)
!17869 = distinct !DILexicalBlock(scope: !17835, file: !3, line: 1321, column: 7)
!17870 = !DILocation(line: 1321, column: 11, scope: !17869)
!17871 = !DILocation(line: 1321, column: 7, scope: !17835)
!17872 = !DILocation(line: 1322, column: 4, scope: !17869)
!17873 = !DILocation(line: 1324, column: 25, scope: !17835)
!17874 = !DILocation(line: 1324, column: 42, scope: !17835)
!17875 = !DILocation(line: 1324, column: 10, scope: !17835)
!17876 = !DILocation(line: 1324, column: 8, scope: !17835)
!17877 = !DILocation(line: 1329, column: 12, scope: !17835)
!17878 = !DILocation(line: 1329, column: 3, scope: !17835)
!17879 = !DILocation(line: 1330, column: 29, scope: !17835)
!17880 = !DILocation(line: 1331, column: 23, scope: !17835)
!17881 = !DILocation(line: 1516, column: 9, scope: !16756, inlinedAt: !17834)
!17882 = !DILocation(line: 1331, column: 8, scope: !17835)
!17883 = !DILocation(line: 1330, column: 3, scope: !17835)
!17884 = !DILocation(line: 1332, column: 3, scope: !17835)
!17885 = !DILocation(line: 1332, column: 10, scope: !17835)
!17886 = !DILocation(line: 1332, column: 23, scope: !17835)
!17887 = !DILocation(line: 1332, column: 27, scope: !17835)
!17888 = !DILocation(line: 1334, column: 13, scope: !17835)
!17889 = !DILocation(line: 1334, column: 3, scope: !17835)
!17890 = !DILocation(line: 1335, column: 2, scope: !17835)
!17891 = !DILocation(line: 1312, column: 40, scope: !17836)
!17892 = !DILocation(line: 1312, column: 2, scope: !17836)
!17893 = distinct !{!17893, !17851, !17894}
!17894 = !DILocation(line: 1335, column: 2, scope: !17837)
!17895 = !DILocation(line: 1337, column: 18, scope: !17832)
!17896 = !DILocation(line: 1337, column: 25, scope: !17832)
!17897 = !DILocation(line: 1337, column: 2, scope: !17832)
!17898 = !DILocation(line: 1338, column: 1, scope: !17832)
!17899 = distinct !DISubprogram(name: "xennet_end_access", scope: !3, file: !3, line: 1613, type: !17900, scopeLine: 1614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17900 = !DISubroutineType(types: !17901)
!17901 = !{null, !43, !576}
!17902 = !DILocalVariable(name: "ref", arg: 1, scope: !17899, file: !3, line: 1613, type: !43)
!17903 = !DILocation(line: 1613, column: 35, scope: !17899)
!17904 = !DILocalVariable(name: "page", arg: 2, scope: !17899, file: !3, line: 1613, type: !576)
!17905 = !DILocation(line: 1613, column: 46, scope: !17899)
!17906 = !DILocation(line: 1616, column: 6, scope: !17907)
!17907 = distinct !DILexicalBlock(scope: !17899, file: !3, line: 1616, column: 6)
!17908 = !DILocation(line: 1616, column: 10, scope: !17907)
!17909 = !DILocation(line: 1616, column: 6, scope: !17899)
!17910 = !DILocation(line: 1617, column: 29, scope: !17907)
!17911 = !DILocation(line: 1617, column: 52, scope: !17907)
!17912 = !DILocation(line: 1617, column: 37, scope: !17907)
!17913 = !DILocation(line: 1617, column: 3, scope: !17907)
!17914 = !DILocation(line: 1618, column: 1, scope: !17899)
!17915 = distinct !DISubprogram(name: "skb_entry_is_link", scope: !3, file: !3, line: 189, type: !17916, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17916 = !DISubroutineType(types: !17917)
!17917 = !{!43, !17918}
!17918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17919, size: 64)
!17919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10274)
!17920 = !DILocalVariable(name: "list", arg: 1, scope: !17915, file: !3, line: 189, type: !17918)
!17921 = !DILocation(line: 189, column: 53, scope: !17915)
!17922 = !DILocation(line: 191, column: 2, scope: !17915)
!17923 = !DILocation(line: 191, column: 2, scope: !17924)
!17924 = distinct !DILexicalBlock(scope: !17915, file: !3, line: 191, column: 2)
!17925 = !DILocation(line: 192, column: 24, scope: !17915)
!17926 = !DILocation(line: 192, column: 30, scope: !17915)
!17927 = !DILocation(line: 192, column: 9, scope: !17915)
!17928 = !DILocation(line: 192, column: 36, scope: !17915)
!17929 = !DILocation(line: 192, column: 34, scope: !17915)
!17930 = !DILocation(line: 192, column: 2, scope: !17915)
!17931 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !12596, file: !12596, line: 661, type: !3915, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17932 = !DILocalVariable(name: "__edi", scope: !17933, file: !12596, line: 663, type: !323)
!17933 = distinct !DILexicalBlock(scope: !17931, file: !12596, line: 663, column: 2)
!17934 = !DILocation(line: 663, column: 2, scope: !17933)
!17935 = !DILocalVariable(name: "__esi", scope: !17933, file: !12596, line: 663, type: !323)
!17936 = !DILocalVariable(name: "__edx", scope: !17933, file: !12596, line: 663, type: !323)
!17937 = !DILocalVariable(name: "__ecx", scope: !17933, file: !12596, line: 663, type: !323)
!17938 = !DILocalVariable(name: "__eax", scope: !17933, file: !12596, line: 663, type: !323)
!17939 = !{i32 -2145717461, i32 -2145716731, i32 -2145716497, i32 -2145716446, i32 -2145716418, i32 -2145716393, i32 -2145716709, i32 -2145716696, i32 -2145716258, i32 -2145716139, i32 -2145716604, i32 -2145716577, i32 -2145716549, i32 -2145716519}
!17940 = !DILocation(line: 664, column: 1, scope: !17931)
!17941 = distinct !DISubprogram(name: "xennet_bus_close", scope: !3, file: !3, line: 2446, type: !10514, scopeLine: 2447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !749)
!17942 = !DILocalVariable(name: "dev", arg: 1, scope: !17941, file: !3, line: 2446, type: !10162)
!17943 = !DILocation(line: 2446, column: 52, scope: !17941)
!17944 = !DILocalVariable(name: "ret", scope: !17941, file: !3, line: 2448, type: !43)
!17945 = !DILocation(line: 2448, column: 6, scope: !17941)
!17946 = !DILocation(line: 2450, column: 31, scope: !17947)
!17947 = distinct !DILexicalBlock(scope: !17941, file: !3, line: 2450, column: 6)
!17948 = !DILocation(line: 2450, column: 36, scope: !17947)
!17949 = !DILocation(line: 2450, column: 6, scope: !17947)
!17950 = !DILocation(line: 2450, column: 46, scope: !17947)
!17951 = !DILocation(line: 2450, column: 6, scope: !17941)
!17952 = !DILocation(line: 2451, column: 3, scope: !17947)
!17953 = !DILocation(line: 2452, column: 2, scope: !17941)
!17954 = !DILocation(line: 2453, column: 23, scope: !17955)
!17955 = distinct !DILexicalBlock(scope: !17941, file: !3, line: 2452, column: 5)
!17956 = !DILocation(line: 2453, column: 3, scope: !17955)
!17957 = !DILocalVariable(name: "__ret", scope: !17958, file: !3, line: 2454, type: !519)
!17958 = distinct !DILexicalBlock(scope: !17955, file: !3, line: 2454, column: 9)
!17959 = !DILocation(line: 2454, column: 9, scope: !17958)
!17960 = !DILocation(line: 2454, column: 9, scope: !17961)
!17961 = distinct !DILexicalBlock(scope: !17958, file: !3, line: 2454, column: 9)
!17962 = !DILocation(line: 2454, column: 9, scope: !17963)
!17963 = distinct !DILexicalBlock(scope: !17961, file: !3, line: 2454, column: 9)
!17964 = !DILocalVariable(name: "__cond", scope: !17965, file: !3, line: 2454, type: !546)
!17965 = distinct !DILexicalBlock(scope: !17966, file: !3, line: 2454, column: 9)
!17966 = distinct !DILexicalBlock(scope: !17958, file: !3, line: 2454, column: 9)
!17967 = !DILocation(line: 2454, column: 9, scope: !17965)
!17968 = !DILocation(line: 2454, column: 9, scope: !17969)
!17969 = distinct !DILexicalBlock(scope: !17965, file: !3, line: 2454, column: 9)
!17970 = !DILocation(line: 2454, column: 9, scope: !17966)
!17971 = !DILocalVariable(name: "__wq_entry", scope: !17972, file: !3, line: 2454, type: !1060)
!17972 = distinct !DILexicalBlock(scope: !17966, file: !3, line: 2454, column: 9)
!17973 = !DILocation(line: 2454, column: 9, scope: !17972)
!17974 = !DILocalVariable(name: "__ret", scope: !17972, file: !3, line: 2454, type: !519)
!17975 = !DILocalVariable(name: "__int", scope: !17976, file: !3, line: 2454, type: !519)
!17976 = distinct !DILexicalBlock(scope: !17977, file: !3, line: 2454, column: 9)
!17977 = distinct !DILexicalBlock(scope: !17978, file: !3, line: 2454, column: 9)
!17978 = distinct !DILexicalBlock(scope: !17972, file: !3, line: 2454, column: 9)
!17979 = !DILocation(line: 2454, column: 9, scope: !17976)
!17980 = !DILocalVariable(name: "__cond", scope: !17981, file: !3, line: 2454, type: !546)
!17981 = distinct !DILexicalBlock(scope: !17982, file: !3, line: 2454, column: 9)
!17982 = distinct !DILexicalBlock(scope: !17976, file: !3, line: 2454, column: 9)
!17983 = !DILocation(line: 2454, column: 9, scope: !17981)
!17984 = !DILocation(line: 2454, column: 9, scope: !17985)
!17985 = distinct !DILexicalBlock(scope: !17981, file: !3, line: 2454, column: 9)
!17986 = !DILocation(line: 2454, column: 9, scope: !17982)
!17987 = !DILocation(line: 2454, column: 9, scope: !17977)
!17988 = distinct !{!17988, !17989, !17989}
!17989 = !DILocation(line: 2454, column: 9, scope: !17978)
!17990 = !DILabel(scope: !17972, name: "__out", file: !3, line: 2454)
!17991 = !DILocation(line: 2454, column: 9, scope: !17955)
!17992 = !DILocation(line: 2454, column: 7, scope: !17955)
!17993 = !DILocation(line: 2462, column: 2, scope: !17955)
!17994 = !DILocation(line: 2462, column: 12, scope: !17941)
!17995 = !DILocation(line: 2462, column: 11, scope: !17941)
!17996 = distinct !{!17996, !17953, !17997}
!17997 = !DILocation(line: 2462, column: 15, scope: !17941)
!17998 = !DILocation(line: 2464, column: 31, scope: !17999)
!17999 = distinct !DILexicalBlock(scope: !17941, file: !3, line: 2464, column: 6)
!18000 = !DILocation(line: 2464, column: 36, scope: !17999)
!18001 = !DILocation(line: 2464, column: 6, scope: !17999)
!18002 = !DILocation(line: 2464, column: 46, scope: !17999)
!18003 = !DILocation(line: 2464, column: 6, scope: !17941)
!18004 = !DILocation(line: 2465, column: 3, scope: !17999)
!18005 = !DILocation(line: 2467, column: 2, scope: !17941)
!18006 = !DILocation(line: 2468, column: 23, scope: !18007)
!18007 = distinct !DILexicalBlock(scope: !17941, file: !3, line: 2467, column: 5)
!18008 = !DILocation(line: 2468, column: 3, scope: !18007)
!18009 = !DILocalVariable(name: "__ret", scope: !18010, file: !3, line: 2469, type: !519)
!18010 = distinct !DILexicalBlock(scope: !18007, file: !3, line: 2469, column: 9)
!18011 = !DILocation(line: 2469, column: 9, scope: !18010)
!18012 = !DILocation(line: 2469, column: 9, scope: !18013)
!18013 = distinct !DILexicalBlock(scope: !18010, file: !3, line: 2469, column: 9)
!18014 = !DILocation(line: 2469, column: 9, scope: !18015)
!18015 = distinct !DILexicalBlock(scope: !18013, file: !3, line: 2469, column: 9)
!18016 = !DILocalVariable(name: "__cond", scope: !18017, file: !3, line: 2469, type: !546)
!18017 = distinct !DILexicalBlock(scope: !18018, file: !3, line: 2469, column: 9)
!18018 = distinct !DILexicalBlock(scope: !18010, file: !3, line: 2469, column: 9)
!18019 = !DILocation(line: 2469, column: 9, scope: !18017)
!18020 = !DILocation(line: 2469, column: 9, scope: !18021)
!18021 = distinct !DILexicalBlock(scope: !18017, file: !3, line: 2469, column: 9)
!18022 = !DILocation(line: 2469, column: 9, scope: !18018)
!18023 = !DILocalVariable(name: "__wq_entry", scope: !18024, file: !3, line: 2469, type: !1060)
!18024 = distinct !DILexicalBlock(scope: !18018, file: !3, line: 2469, column: 9)
!18025 = !DILocation(line: 2469, column: 9, scope: !18024)
!18026 = !DILocalVariable(name: "__ret", scope: !18024, file: !3, line: 2469, type: !519)
!18027 = !DILocalVariable(name: "__int", scope: !18028, file: !3, line: 2469, type: !519)
!18028 = distinct !DILexicalBlock(scope: !18029, file: !3, line: 2469, column: 9)
!18029 = distinct !DILexicalBlock(scope: !18030, file: !3, line: 2469, column: 9)
!18030 = distinct !DILexicalBlock(scope: !18024, file: !3, line: 2469, column: 9)
!18031 = !DILocation(line: 2469, column: 9, scope: !18028)
!18032 = !DILocalVariable(name: "__cond", scope: !18033, file: !3, line: 2469, type: !546)
!18033 = distinct !DILexicalBlock(scope: !18034, file: !3, line: 2469, column: 9)
!18034 = distinct !DILexicalBlock(scope: !18028, file: !3, line: 2469, column: 9)
!18035 = !DILocation(line: 2469, column: 9, scope: !18033)
!18036 = !DILocation(line: 2469, column: 9, scope: !18037)
!18037 = distinct !DILexicalBlock(scope: !18033, file: !3, line: 2469, column: 9)
!18038 = !DILocation(line: 2469, column: 9, scope: !18034)
!18039 = !DILocation(line: 2469, column: 9, scope: !18029)
!18040 = distinct !{!18040, !18041, !18041}
!18041 = !DILocation(line: 2469, column: 9, scope: !18030)
!18042 = !DILabel(scope: !18024, name: "__out", file: !3, line: 2469)
!18043 = !DILocation(line: 2469, column: 9, scope: !18007)
!18044 = !DILocation(line: 2469, column: 7, scope: !18007)
!18045 = !DILocation(line: 2475, column: 2, scope: !18007)
!18046 = !DILocation(line: 2475, column: 12, scope: !17941)
!18047 = !DILocation(line: 2475, column: 11, scope: !17941)
!18048 = distinct !{!18048, !18005, !18049}
!18049 = !DILocation(line: 2475, column: 15, scope: !17941)
!18050 = !DILocation(line: 2476, column: 1, scope: !17941)
