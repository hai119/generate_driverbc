; ModuleID = '../bcout/drivers/net/phy/phy_device.llvm.bc'
source_filename = "drivers/net/phy/phy_device.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall4.init\22, \22a\22\09"
module asm "__initcall_phy_init4:\09\09\09"
module asm ".long\09phy_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.86, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.86 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.84, %struct.list_head, %struct.list_head, %union.anon.85 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.82 }
%union.anon.82 = type { %struct.anon.83 }
%struct.anon.83 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.74, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.74 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.75, i32 }
%union.anon.75 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.67, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.87, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.127, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.87 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.sk_buff = type { %union.anon.40, %union.anon.43, %union.anon.44, [48 x i8], %union.anon.45, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.47, i32, i32, i32, i16, i16, %union.anon.49, %union.anon.50, %union.anon.51, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.40 = type { %struct.anon.41 }
%struct.anon.41 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.42 }
%union.anon.42 = type { %struct.net_device* }
%union.anon.43 = type { %struct.sock* }
%union.anon.44 = type { i64 }
%union.anon.45 = type { %struct.anon.46 }
%struct.anon.46 = type { i64, void (%struct.sk_buff*)* }
%union.anon.47 = type { i32 }
%union.anon.49 = type { i32 }
%union.anon.50 = type { i32 }
%union.anon.51 = type { i16 }
%struct.ifreq = type { %union.anon.88, %union.anon.89 }
%union.anon.88 = type { [16 x i8] }
%union.anon.89 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type opaque
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.nlattr = type { i16, i16 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nla_policy = type opaque
%struct.neighbour = type opaque
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.91 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.91 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.92 }
%union.anon.92 = type { %struct.anon.93 }
%struct.anon.93 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type opaque
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.124 }
%union.anon.124 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.125, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.125 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.126 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.126 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type opaque
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type opaque
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type opaque
%struct.xdp_dev_bulk_queue = type opaque
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.possible_net_t = type { %struct.net* }
%union.anon.127 = type { i8* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.rtnl_link_ops = type opaque
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type { %struct.mdio_device, %struct.phy_driver*, i32, %struct.phy_c45_device_ids, i16, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [2 x i64], [2 x i64], [2 x i64], [2 x i64], i32, i32, i8*, %struct.phy_package_shared*, %struct.sk_buff*, i8*, %struct.nlattr*, %struct.delayed_work, %struct.mutex, i8, %struct.sfp_bus*, %struct.phylink*, %struct.net_device*, %struct.mii_timestamper*, i8, i8, void (%struct.phy_device*, i1)*, void (%struct.net_device*)* }
%struct.mdio_device = type { %struct.device, %struct.mii_bus*, [32 x i8], i32 (%struct.device*, %struct.device_driver*)*, void (%struct.mdio_device*)*, void (%struct.mdio_device*)*, i32, i32, %struct.gpio_desc*, %struct.reset_control*, i32, i32 }
%struct.mii_bus = type { %struct.module*, i8*, [61 x i8], i8*, i32 (%struct.mii_bus*, i32, i32)*, i32 (%struct.mii_bus*, i32, i32, i16)*, i32 (%struct.mii_bus*)*, [32 x %struct.mdio_bus_stats], %struct.mutex, %struct.device*, i32, %struct.device, [32 x %struct.mdio_device*], i32, i32, [32 x i32], i32, i32, %struct.gpio_desc*, i32, %struct.mutex, [32 x %struct.phy_package_shared*] }
%struct.mdio_bus_stats = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync }
%struct.u64_stats_t = type { %struct.local64_t }
%struct.local64_t = type { %struct.local_t }
%struct.local_t = type { %struct.atomic64_t }
%struct.u64_stats_sync = type {}
%struct.gpio_desc = type opaque
%struct.reset_control = type opaque
%struct.phy_driver = type { %struct.mdio_driver_common, i32, i8*, i32, i64*, i32, i8*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, {}*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*, %struct.ethtool_wolinfo*)*, {}*, i32 (%struct.phy_device*, i32, i16)*, i32 (%struct.phy_device*, i32, i16, i16)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, i32)*, i32 (%struct.phy_device*, %struct.ethtool_modinfo*)*, i32 (%struct.phy_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.phy_tdr_config*)*, i32 (%struct.phy_device*, i8*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*, i8*)*, void (%struct.phy_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, i1)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)* }
%struct.mdio_driver_common = type { %struct.device_driver, i32 }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.phy_tdr_config = type { i32, i32, i32, i8 }
%struct.phy_c45_device_ids = type { i32, i32, [32 x i32] }
%struct.phy_package_shared = type { i32, %struct.refcount_struct, i64, i64, i8* }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.phylink = type opaque
%struct.mii_timestamper = type { i1 (%struct.mii_timestamper*, %struct.sk_buff*, i32)*, void (%struct.mii_timestamper*, %struct.sk_buff*, i32)*, i32 (%struct.mii_timestamper*, %struct.ifreq*)*, void (%struct.mii_timestamper*, %struct.phy_device*)*, i32 (%struct.mii_timestamper*, %struct.ethtool_ts_info*)*, %struct.device* }
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type opaque
%struct.inet_peer_base = type opaque
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.38, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.38 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.in6_addr = type { %union.anon.39 }
%union.anon.39 = type { [4 x i32] }
%struct.kmem_cache = type opaque
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type opaque
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.52 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.ipv6_devconf = type opaque
%struct.fib6_info = type opaque
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.dst_entry = type opaque
%struct.percpu_counter = type { i64 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.seg6_pernet_data = type opaque
%struct.anon.52 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.53, %union.anon.54, i32 }
%struct.request_queue = type opaque
%union.anon.53 = type { %struct.list_head }
%union.anon.54 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.55 }
%struct.anon.55 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.59 }
%struct.anon.59 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.66, i32, [12 x i8] }
%union.anon.66 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.67 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.68, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.71 }
%union.anon.68 = type { %struct.anon.69 }
%struct.anon.69 = type { i64, i64 }
%union.anon.71 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.33 }
%union.anon.33 = type { %struct.anon.34, [48 x i8] }
%struct.anon.34 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.84 = type { %struct.list_head }
%union.anon.85 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.76, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.77, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.78, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.81, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.76 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.77 = type { %struct.callback_head }
%union.anon.78 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.81 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.79 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.79 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.lock_class_key = type {}
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.ethtool_phy_ops = type { i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, i8*)*, i32 (%struct.phy_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.phy_device*, %struct.netlink_ext_ack*)*, i32 (%struct.phy_device*, %struct.netlink_ext_ack*, %struct.phy_tdr_config*)* }
%struct.phy_fixup = type { %struct.list_head, [64 x i8], i32, i32, i32 (%struct.phy_device*)* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.sfp_upstream_ops = type { void (i8*, %struct.sfp_bus*)*, void (i8*, %struct.sfp_bus*)*, i32 (i8*, %struct.sfp_eeprom_id*)*, void (i8*)*, i32 (i8*)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (i8*, %struct.phy_device*)*, void (i8*)* }
%struct.sfp_eeprom_id = type { %struct.sfp_eeprom_base, %struct.sfp_eeprom_ext }
%struct.sfp_eeprom_base = type <{ i8, i8, i8, i64, i8, i8, i8, [6 x i8], [16 x i8], i8, [3 x i8], [16 x i8], [4 x i8], %union.anon.128, i8, i8 }>
%union.anon.128 = type { i16 }
%struct.sfp_eeprom_ext = type { i16, i8, i8, [16 x i8], [8 x i8], i8, i8, i8, i8 }

@__UNIQUE_ID_description316 = internal constant [31 x i8] c"libphy.description=PHY library\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_author317 = internal constant [27 x i8] c"libphy.author=Andy Fleming\00", section ".modinfo", align 1, !dbg !7558
@__UNIQUE_ID_file318 = internal constant [35 x i8] c"libphy.file=drivers/net/phy/libphy\00", section ".modinfo", align 1, !dbg !7563
@__UNIQUE_ID_license319 = internal constant [19 x i8] c"libphy.license=GPL\00", section ".modinfo", align 1, !dbg !7568
@phy_basic_ports_array = dso_local constant [3 x i32] [i32 6, i32 7, i32 9], align 4, !dbg !7573
@phy_fibre_port_array = dso_local constant [1 x i32] [i32 10], align 4, !dbg !7577
@phy_all_ports_features_array = dso_local constant [7 x i32] [i32 6, i32 7, i32 9, i32 10, i32 8, i32 11, i32 16], align 16, !dbg !7580
@phy_10_100_features_array = dso_local constant [4 x i32] [i32 0, i32 1, i32 2, i32 3], align 16, !dbg !7583
@phy_basic_t1_features_array = dso_local constant [2 x i32] [i32 7, i32 67], align 4, !dbg !7586
@phy_gbit_features_array = dso_local constant [2 x i32] [i32 4, i32 5], align 4, !dbg !7589
@phy_10gbit_features_array = dso_local constant [1 x i32] [i32 12], align 4, !dbg !7591
@phy_fixup_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @phy_fixup_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @phy_fixup_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !7622
@phy_fixup_list = internal global %struct.list_head { %struct.list_head* @phy_fixup_list, %struct.list_head* @phy_fixup_list }, align 8, !dbg !7624
@.str = private unnamed_addr constant [14 x i8] c"MATCH ANY PHY\00", align 1
@mdio_bus_type = external dso_local global %struct.bus_type, align 8
@mdio_bus_phy_type = internal constant %struct.device_type { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @phy_dev_groups, i32 0, i32 0), i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)* null, void (%struct.device*)* @phy_device_release, %struct.dev_pm_ops* @mdio_bus_phy_pm_ops }, align 8, !dbg !7626
@.str.1 = private unnamed_addr constant [8 x i8] c"%s:%02x\00", align 1
@phy_device_create.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !7593
@.str.2 = private unnamed_addr constant [11 x i8] c"&dev->lock\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"failed to initialize\0A\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"failed to add\0A\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"\013libphy: PHY %s not found\0A\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"POLL\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"IGNORE\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"unbound\00", align 1
@.str.11 = private unnamed_addr constant [56 x i8] c"attached PHY driver [%s] (mii_bus:phy_addr=%s, irq=%s)\0A\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"attached PHY driver [%s] (mii_bus:phy_addr=%s, irq=%s)\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c"failed to get the bus module\0A\00", align 1
@genphy_c45_driver = external dso_local global %struct.phy_driver, align 8
@.str.14 = private unnamed_addr constant [40 x i8] c"failed to get the device driver module\0A\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"PHY already attached\0A\00", align 1
@dev_attr_phy_standalone = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @phy_standalone_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !7656
@.str.16 = private unnamed_addr constant [45 x i8] c"error creating 'phy_standalone' sysfs entry\0A\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"phydev\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"attached_dev\00", align 1
@__const.phy_suspend.wol = private unnamed_addr constant %struct.ethtool_wolinfo { i32 5, i32 0, i32 0, [6 x i8] zeroinitializer }, align 4
@.str.19 = private unnamed_addr constant [29 x i8] c"drivers/net/phy/phy_device.c\00", align 1
@.str.20 = private unnamed_addr constant [68 x i8] c"Master/Slave resolution failed, maybe conflicting manual settings?\0A\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"Master/Slave resolution failed\0A\00", align 1
@.str.22 = private unnamed_addr constant [21 x i8] c"rx-internal-delay-ps\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"tx-internal-delay-ps\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"Delay %d is out of range\0A\00", align 1
@.str.25 = private unnamed_addr constant [43 x i8] c"error finding internal delay index for %d\0A\00", align 1
@.str.26 = private unnamed_addr constant [62 x i8] c"\013libphy: %s: features and get_features must not both be set\0A\00", align 1
@.str.27 = private unnamed_addr constant [46 x i8] c"\013libphy: %s: Error %d in registering driver\0A\00", align 1
@__UNIQUE_ID___addressable_phy_init361 = internal global i8* bitcast (i32 ()* @phy_init to i8*), section ".discard.addressable", align 8, !dbg !7599
@__exitcall_phy_exit = internal global void ()* @phy_exit, section ".exitcall.exit", align 8, !dbg !7601
@phy_basic_features = dso_local global [2 x i64] zeroinitializer, section ".data..ro_after_init", align 16, !dbg !7606
@phy_basic_t1_features = dso_local global [2 x i64] zeroinitializer, section ".data..ro_after_init", align 16, !dbg !7608
@phy_gbit_features = dso_local global [2 x i64] zeroinitializer, section ".data..ro_after_init", align 16, !dbg !7610
@phy_gbit_fibre_features = dso_local global [2 x i64] zeroinitializer, section ".data..ro_after_init", align 16, !dbg !7612
@phy_gbit_all_ports_features = dso_local global [2 x i64] zeroinitializer, section ".data..ro_after_init", align 16, !dbg !7614
@phy_10gbit_features = dso_local global [2 x i64] zeroinitializer, section ".data..ro_after_init", align 16, !dbg !7616
@phy_10gbit_fec_features = dso_local global [2 x i64] zeroinitializer, section ".data..ro_after_init", align 16, !dbg !7618
@phy_10gbit_full_features = dso_local global [2 x i64] zeroinitializer, section ".data..ro_after_init", align 16, !dbg !7620
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.28 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"PHY\00", align 1
@phy_dev_groups = internal global [2 x %struct.attribute_group*] [%struct.attribute_group* @phy_dev_group, %struct.attribute_group* null], align 16, !dbg !7628
@mdio_bus_phy_pm_ops = internal constant %struct.dev_pm_ops { i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* @mdio_bus_phy_suspend, i32 (%struct.device*)* @mdio_bus_phy_resume, i32 (%struct.device*)* @mdio_bus_phy_suspend, i32 (%struct.device*)* @mdio_bus_phy_resume, i32 (%struct.device*)* null, i32 (%struct.device*)* @mdio_bus_phy_restore, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null }, align 8, !dbg !7654
@phy_dev_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([4 x %struct.attribute*], [4 x %struct.attribute*]* @phy_dev_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !7631
@phy_dev_attrs = internal global [4 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_phy_id, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_phy_interface, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_phy_has_fixups, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !7633
@dev_attr_phy_id = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @phy_id_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !7636
@dev_attr_phy_interface = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @phy_interface_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !7650
@dev_attr_phy_has_fixups = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @phy_has_fixups_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !7652
@.str.30 = private unnamed_addr constant [7 x i8] c"phy_id\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"0x%.8lx\0A\00", align 1
@.str.32 = private unnamed_addr constant [14 x i8] c"phy_interface\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"internal\00", align 1
@.str.34 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.35 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"mii\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"gmii\00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"sgmii\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"tbi\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"rev-mii\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"rmii\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"rgmii\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"rgmii-id\00", align 1
@.str.44 = private unnamed_addr constant [11 x i8] c"rgmii-rxid\00", align 1
@.str.45 = private unnamed_addr constant [11 x i8] c"rgmii-txid\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"rtbi\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"smii\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"xgmii\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"xlgmii\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"moca\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"qsgmii\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"trgmii\00", align 1
@.str.53 = private unnamed_addr constant [11 x i8] c"1000base-x\00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"2500base-x\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"rxaui\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"xaui\00", align 1
@.str.57 = private unnamed_addr constant [10 x i8] c"10gbase-r\00", align 1
@.str.58 = private unnamed_addr constant [8 x i8] c"usxgmii\00", align 1
@.str.59 = private unnamed_addr constant [11 x i8] c"10gbase-kr\00", align 1
@.str.60 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"phy_has_fixups\00", align 1
@.str.62 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.63 = private unnamed_addr constant [70 x i8] c"mdio:%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u%u\00", align 1
@.str.64 = private unnamed_addr constant [40 x i8] c"could not add device link to %s err %d\0A\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"phy_standalone\00", align 1
@.str.66 = private unnamed_addr constant [31 x i8] c"Unsupported Master/Slave mode\0A\00", align 1
@.str.67 = private unnamed_addr constant [15 x i8] c"%s failed: %d\0A\00", align 1
@__func__.phy_poll_reset = private unnamed_addr constant [15 x i8] c"phy_poll_reset\00", align 1
@.str.68 = private unnamed_addr constant [12 x i8] c"Generic PHY\00", align 1
@genphy_driver = internal global { %struct.mdio_driver_common, i32, i8*, i32, i64*, i32, i8*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*, i32, i16)*, i32 (%struct.phy_device*, i32, i16, i16)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, i32)*, i32 (%struct.phy_device*, %struct.ethtool_modinfo*)*, i32 (%struct.phy_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.phy_tdr_config*)*, i32 (%struct.phy_device*, i8*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*, i8*)*, void (%struct.phy_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, i1)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)* } { %struct.mdio_driver_common zeroinitializer, i32 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i32 0, i32 0), i32 -1, i64* null, i32 0, i8* null, i32 (%struct.phy_device*)* null, i32 (%struct.phy_device*)* null, i32 (%struct.phy_device*)* null, i32 (%struct.phy_device*)* @genphy_read_abilities, i32 (%struct.phy_device*)* @genphy_suspend, i32 (%struct.phy_device*)* @genphy_resume, i32 (%struct.phy_device*)* null, i32 (%struct.phy_device*)* null, i32 (%struct.phy_device*)* null, i32 (%struct.phy_device*)* null, i32 (%struct.phy_device*)* null, i32 (%struct.phy_device*)* null, i32 (%struct.phy_device*)* null, void (%struct.phy_device*)* null, i32 (%struct.phy_device*)* null, i32 (%struct.phy_device*, %struct.ethtool_wolinfo*)* null, void (%struct.phy_device*, %struct.ethtool_wolinfo*)* null, void (%struct.phy_device*)* null, i32 (%struct.phy_device*, i32, i16)* null, i32 (%struct.phy_device*, i32, i16, i16)* null, i32 (%struct.phy_device*)* null, i32 (%struct.phy_device*, i32)* null, i32 (%struct.phy_device*, %struct.ethtool_modinfo*)* null, i32 (%struct.phy_device*, %struct.ethtool_eeprom*, i8*)* null, i32 (%struct.phy_device*)* null, i32 (%struct.phy_device*, %struct.phy_tdr_config*)* null, i32 (%struct.phy_device*, i8*)* null, i32 (%struct.phy_device*)* null, void (%struct.phy_device*, i8*)* null, void (%struct.phy_device*, %struct.ethtool_stats*, i64*)* null, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)* null, i32 (%struct.phy_device*, i1)* @genphy_loopback, i32 (%struct.phy_device*)* null, i32 (%struct.phy_device*)* null }, align 8, !dbg !7658
@phy_ethtool_phy_ops = internal constant %struct.ethtool_phy_ops { i32 (%struct.phy_device*)* @phy_ethtool_get_sset_count, i32 (%struct.phy_device*, i8*)* @phy_ethtool_get_strings, i32 (%struct.phy_device*, %struct.ethtool_stats*, i64*)* @phy_ethtool_get_stats, i32 (%struct.phy_device*, %struct.netlink_ext_ack*)* @phy_start_cable_test, i32 (%struct.phy_device*, %struct.netlink_ext_ack*, %struct.phy_tdr_config*)* @phy_start_cable_test_tdr }, align 8, !dbg !7660
@phy_10gbit_full_features_array = internal constant [4 x i32] [i32 1, i32 3, i32 5, i32 12], align 16, !dbg !7682
@phy_10gbit_fec_features_array = internal constant [1 x i32] [i32 20], align 4, !dbg !7684
@llvm.used = appending global [7 x i8*] [i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_description316, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__UNIQUE_ID_author317, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_file318, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__UNIQUE_ID_license319, i32 0, i32 0), i8* bitcast (void ()* @phy_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_phy_init361 to i8*), i8* bitcast (void ()** @__exitcall_phy_exit to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_device_free(%struct.phy_device* %phydev) #0 !dbg !7694 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !7695, metadata !DIExpression()), !dbg !7696
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !7697
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 0, !dbg !7698
  %dev = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 0, !dbg !7699
  call void @put_device(%struct.device* %dev) #10, !dbg !7700
  ret void, !dbg !7701
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_register_fixup(i8* %bus_id, i32 %phy_uid, i32 %phy_uid_mask, i32 (%struct.phy_device*)* %run) #0 !dbg !7702 {
entry:
  %retval = alloca i32, align 4
  %bus_id.addr = alloca i8*, align 8
  %phy_uid.addr = alloca i32, align 4
  %phy_uid_mask.addr = alloca i32, align 4
  %run.addr = alloca i32 (%struct.phy_device*)*, align 8
  %fixup = alloca %struct.phy_fixup*, align 8
  store i8* %bus_id, i8** %bus_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bus_id.addr, metadata !7705, metadata !DIExpression()), !dbg !7706
  store i32 %phy_uid, i32* %phy_uid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_uid.addr, metadata !7707, metadata !DIExpression()), !dbg !7708
  store i32 %phy_uid_mask, i32* %phy_uid_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_uid_mask.addr, metadata !7709, metadata !DIExpression()), !dbg !7710
  store i32 (%struct.phy_device*)* %run, i32 (%struct.phy_device*)** %run.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.phy_device*)** %run.addr, metadata !7711, metadata !DIExpression()), !dbg !7712
  call void @llvm.dbg.declare(metadata %struct.phy_fixup** %fixup, metadata !7713, metadata !DIExpression()), !dbg !7714
  %call = call i8* @kzalloc(i64 96, i32 3264) #10, !dbg !7715
  %0 = bitcast i8* %call to %struct.phy_fixup*, !dbg !7715
  store %struct.phy_fixup* %0, %struct.phy_fixup** %fixup, align 8, !dbg !7714
  %1 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup, align 8, !dbg !7716
  %tobool = icmp ne %struct.phy_fixup* %1, null, !dbg !7716
  br i1 %tobool, label %if.end, label %if.then, !dbg !7718

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7719
  br label %return, !dbg !7719

if.end:                                           ; preds = %entry
  %2 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup, align 8, !dbg !7720
  %bus_id1 = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %2, i32 0, i32 1, !dbg !7721
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %bus_id1, i64 0, i64 0, !dbg !7720
  %3 = load i8*, i8** %bus_id.addr, align 8, !dbg !7722
  %call2 = call i64 @strlcpy(i8* %arraydecay, i8* %3, i64 64) #10, !dbg !7723
  %4 = load i32, i32* %phy_uid.addr, align 4, !dbg !7724
  %5 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup, align 8, !dbg !7725
  %phy_uid3 = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %5, i32 0, i32 2, !dbg !7726
  store i32 %4, i32* %phy_uid3, align 8, !dbg !7727
  %6 = load i32, i32* %phy_uid_mask.addr, align 4, !dbg !7728
  %7 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup, align 8, !dbg !7729
  %phy_uid_mask4 = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %7, i32 0, i32 3, !dbg !7730
  store i32 %6, i32* %phy_uid_mask4, align 4, !dbg !7731
  %8 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %run.addr, align 8, !dbg !7732
  %9 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup, align 8, !dbg !7733
  %run5 = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %9, i32 0, i32 4, !dbg !7734
  store i32 (%struct.phy_device*)* %8, i32 (%struct.phy_device*)** %run5, align 8, !dbg !7735
  call void @mutex_lock(%struct.mutex* @phy_fixup_lock) #10, !dbg !7736
  %10 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup, align 8, !dbg !7737
  %list = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %10, i32 0, i32 0, !dbg !7738
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* @phy_fixup_list) #10, !dbg !7739
  call void @mutex_unlock(%struct.mutex* @phy_fixup_lock) #10, !dbg !7740
  store i32 0, i32* %retval, align 4, !dbg !7741
  br label %return, !dbg !7741

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !7742
  ret i32 %11, !dbg !7742
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !7743 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7746, metadata !DIExpression()), !dbg !7750
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7756, metadata !DIExpression()), !dbg !7757
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7758, metadata !DIExpression()), !dbg !7759
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7760, metadata !DIExpression()), !dbg !7761
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7762, metadata !DIExpression()), !dbg !7766
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7768, metadata !DIExpression()), !dbg !7772
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7774, metadata !DIExpression()), !dbg !7778
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7783, metadata !DIExpression()), !dbg !7784
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7785, metadata !DIExpression()), !dbg !7786
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7787, metadata !DIExpression()), !dbg !7788
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7789, metadata !DIExpression()), !dbg !7790
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7791, metadata !DIExpression()), !dbg !7792
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7793, metadata !DIExpression()), !dbg !7794
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7795, metadata !DIExpression()), !dbg !7796
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7797, metadata !DIExpression()), !dbg !7798
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7799, metadata !DIExpression()), !dbg !7800
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7801, metadata !DIExpression()), !dbg !7802
  %0 = load i64, i64* %size.addr, align 8, !dbg !7803
  %1 = load i32, i32* %flags.addr, align 4, !dbg !7804
  %or = or i32 %1, 256, !dbg !7805
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !7806
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #5, !dbg !7807
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !7808

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7809
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !7810
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7811

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !7812
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !7813
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7814
  %call.i.i = call i32 @get_order(i64 %7) #11, !dbg !7815
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7792
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !7816
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7817
  %10 = load i32, i32* %order.i.i, align 4, !dbg !7818
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7819
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7820
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7821
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !7822
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7822
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7822
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7822
  call void @llvm.assume(i1 %maskcond.i.i.i) #5, !dbg !7822
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7823
  br label %kmalloc.exit, !dbg !7823

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !7824
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7825
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !7825
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7827

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7828
  br label %kmalloc_index.exit.i, !dbg !7828

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7829
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !7831
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7832

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7833
  br label %kmalloc_index.exit.i, !dbg !7833

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7834
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !7836
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7837

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7838
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !7839
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7840

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7841
  br label %kmalloc_index.exit.i, !dbg !7841

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7842
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !7844
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7845

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7846
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !7847
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7848

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7849
  br label %kmalloc_index.exit.i, !dbg !7849

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7850
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !7852
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7853

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7854
  br label %kmalloc_index.exit.i, !dbg !7854

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7855
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !7857
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7858

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7859
  br label %kmalloc_index.exit.i, !dbg !7859

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7860
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !7862
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7863

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7864
  br label %kmalloc_index.exit.i, !dbg !7864

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7865
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !7867
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7868

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7869
  br label %kmalloc_index.exit.i, !dbg !7869

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7870
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !7872
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7873

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7874
  br label %kmalloc_index.exit.i, !dbg !7874

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7875
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !7877
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7878

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7879
  br label %kmalloc_index.exit.i, !dbg !7879

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7880
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !7882
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7883

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7884
  br label %kmalloc_index.exit.i, !dbg !7884

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7885
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !7887
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7888

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7889
  br label %kmalloc_index.exit.i, !dbg !7889

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7890
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !7892
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7893

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7894
  br label %kmalloc_index.exit.i, !dbg !7894

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7895
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !7897
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7898

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7899
  br label %kmalloc_index.exit.i, !dbg !7899

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7900
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !7902
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7903

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7904
  br label %kmalloc_index.exit.i, !dbg !7904

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7905
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !7907
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7908

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7909
  br label %kmalloc_index.exit.i, !dbg !7909

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7910
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !7912
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7913

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7914
  br label %kmalloc_index.exit.i, !dbg !7914

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7915
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !7917
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7918

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7919
  br label %kmalloc_index.exit.i, !dbg !7919

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7920
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !7922
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7923

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7924
  br label %kmalloc_index.exit.i, !dbg !7924

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7925
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !7927
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7928

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7929
  br label %kmalloc_index.exit.i, !dbg !7929

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7930
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !7932
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7933

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7934
  br label %kmalloc_index.exit.i, !dbg !7934

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7935
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !7937
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7938

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7939
  br label %kmalloc_index.exit.i, !dbg !7939

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7940
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !7942
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7943

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7944
  br label %kmalloc_index.exit.i, !dbg !7944

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7945
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !7947
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7948

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7949
  br label %kmalloc_index.exit.i, !dbg !7949

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7950
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !7952
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7953

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7954
  br label %kmalloc_index.exit.i, !dbg !7954

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7955
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !7957
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7958

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7959
  br label %kmalloc_index.exit.i, !dbg !7959

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7960
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !7962
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7963

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7964
  br label %kmalloc_index.exit.i, !dbg !7964

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7965
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !7967
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7968

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7969
  br label %kmalloc_index.exit.i, !dbg !7969

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i64 0, i64 0), i32 382, i32 0, i64 12) #5, !dbg !7970, !srcloc !7973
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 221) #5, !dbg !7974, !srcloc !7977
  unreachable, !dbg !7978

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !7979
  store i32 %45, i32* %index.i, align 4, !dbg !7980
  %46 = load i32, i32* %index.i, align 4, !dbg !7981
  %tobool.i = icmp ne i32 %46, 0, !dbg !7981
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7983

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7984
  br label %kmalloc.exit, !dbg !7984

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !7985
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7986
  %and.i.i = and i32 %48, 17, !dbg !7986
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7986
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7986
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7986
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7986
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7988

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7989
  br label %kmalloc_type.exit.i, !dbg !7989

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7990
  %and2.i.i = and i32 %49, 1, !dbg !7991
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7990
  %50 = zext i1 %tobool3.i.i to i64, !dbg !7990
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7990
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7992
  br label %kmalloc_type.exit.i, !dbg !7992

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !7993
  %idxprom.i = zext i32 %51 to i64, !dbg !7994
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7994
  %52 = load i32, i32* %index.i, align 4, !dbg !7995
  %idxprom6.i = zext i32 %52 to i64, !dbg !7994
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7994
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7994
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !7996
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !7997
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7998
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7999
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !8000
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8000
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8000
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8000
  call void @llvm.assume(i1 %maskcond.i.i) #5, !dbg !8000
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7761
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8001
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !8002
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8003
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8004
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !8005
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8006
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !8007
  store i8* %62, i8** %retval.i, align 8, !dbg !8008
  br label %kmalloc.exit, !dbg !8008

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !8009
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !8010
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !8011
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8011
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8011
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8011
  call void @llvm.assume(i1 %maskcond.i) #5, !dbg !8011
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8012
  br label %kmalloc.exit, !dbg !8012

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !8013
  ret i8* %65, !dbg !8014
}

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !8015 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !8019, metadata !DIExpression()), !dbg !8020
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8021, metadata !DIExpression()), !dbg !8022
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !8023
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8024
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !8025
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !8025
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8026
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #10, !dbg !8027
  ret void, !dbg !8028
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_register_fixup_for_uid(i32 %phy_uid, i32 %phy_uid_mask, i32 (%struct.phy_device*)* %run) #0 !dbg !8029 {
entry:
  %phy_uid.addr = alloca i32, align 4
  %phy_uid_mask.addr = alloca i32, align 4
  %run.addr = alloca i32 (%struct.phy_device*)*, align 8
  store i32 %phy_uid, i32* %phy_uid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_uid.addr, metadata !8032, metadata !DIExpression()), !dbg !8033
  store i32 %phy_uid_mask, i32* %phy_uid_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_uid_mask.addr, metadata !8034, metadata !DIExpression()), !dbg !8035
  store i32 (%struct.phy_device*)* %run, i32 (%struct.phy_device*)** %run.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.phy_device*)** %run.addr, metadata !8036, metadata !DIExpression()), !dbg !8037
  %0 = load i32, i32* %phy_uid.addr, align 4, !dbg !8038
  %1 = load i32, i32* %phy_uid_mask.addr, align 4, !dbg !8039
  %2 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %run.addr, align 8, !dbg !8040
  %call = call i32 @phy_register_fixup(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 %0, i32 %1, i32 (%struct.phy_device*)* %2) #10, !dbg !8041
  ret i32 %call, !dbg !8042
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_register_fixup_for_id(i8* %bus_id, i32 (%struct.phy_device*)* %run) #0 !dbg !8043 {
entry:
  %bus_id.addr = alloca i8*, align 8
  %run.addr = alloca i32 (%struct.phy_device*)*, align 8
  store i8* %bus_id, i8** %bus_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bus_id.addr, metadata !8046, metadata !DIExpression()), !dbg !8047
  store i32 (%struct.phy_device*)* %run, i32 (%struct.phy_device*)** %run.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.phy_device*)** %run.addr, metadata !8048, metadata !DIExpression()), !dbg !8049
  %0 = load i8*, i8** %bus_id.addr, align 8, !dbg !8050
  %1 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %run.addr, align 8, !dbg !8051
  %call = call i32 @phy_register_fixup(i8* %0, i32 -1, i32 -1, i32 (%struct.phy_device*)* %1) #10, !dbg !8052
  ret i32 %call, !dbg !8053
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_unregister_fixup(i8* %bus_id, i32 %phy_uid, i32 %phy_uid_mask) #0 !dbg !8054 {
entry:
  %bus_id.addr = alloca i8*, align 8
  %phy_uid.addr = alloca i32, align 4
  %phy_uid_mask.addr = alloca i32, align 4
  %pos = alloca %struct.list_head*, align 8
  %n = alloca %struct.list_head*, align 8
  %fixup = alloca %struct.phy_fixup*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.phy_fixup*, align 8
  store i8* %bus_id, i8** %bus_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bus_id.addr, metadata !8057, metadata !DIExpression()), !dbg !8058
  store i32 %phy_uid, i32* %phy_uid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_uid.addr, metadata !8059, metadata !DIExpression()), !dbg !8060
  store i32 %phy_uid_mask, i32* %phy_uid_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_uid_mask.addr, metadata !8061, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos, metadata !8063, metadata !DIExpression()), !dbg !8064
  call void @llvm.dbg.declare(metadata %struct.list_head** %n, metadata !8065, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.declare(metadata %struct.phy_fixup** %fixup, metadata !8067, metadata !DIExpression()), !dbg !8068
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8069, metadata !DIExpression()), !dbg !8070
  store i32 -19, i32* %ret, align 4, !dbg !8071
  call void @mutex_lock(%struct.mutex* @phy_fixup_lock) #10, !dbg !8072
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @phy_fixup_list, i32 0, i32 0), align 8, !dbg !8073
  store %struct.list_head* %0, %struct.list_head** %pos, align 8, !dbg !8073
  %1 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !8073
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8073
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8073
  store %struct.list_head* %2, %struct.list_head** %n, align 8, !dbg !8073
  br label %for.cond, !dbg !8073

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !8075
  %cmp = icmp ne %struct.list_head* %3, @phy_fixup_list, !dbg !8075
  br i1 %cmp, label %for.body, label %for.end, !dbg !8073

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8077, metadata !DIExpression()), !dbg !8080
  %4 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !8080
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !8080
  store i8* %5, i8** %__mptr, align 8, !dbg !8080
  br label %do.body, !dbg !8080

do.body:                                          ; preds = %for.body
  br label %do.end, !dbg !8081

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !8080
  %add.ptr = getelementptr i8, i8* %6, i64 0, !dbg !8080
  %7 = bitcast i8* %add.ptr to %struct.phy_fixup*, !dbg !8080
  store %struct.phy_fixup* %7, %struct.phy_fixup** %tmp, align 8, !dbg !8081
  %8 = load %struct.phy_fixup*, %struct.phy_fixup** %tmp, align 8, !dbg !8080
  store %struct.phy_fixup* %8, %struct.phy_fixup** %fixup, align 8, !dbg !8083
  %9 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup, align 8, !dbg !8084
  %bus_id1 = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %9, i32 0, i32 1, !dbg !8086
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %bus_id1, i64 0, i64 0, !dbg !8084
  %10 = load i8*, i8** %bus_id.addr, align 8, !dbg !8087
  %call = call i32 @strcmp(i8* %arraydecay, i8* %10) #10, !dbg !8088
  %tobool = icmp ne i32 %call, 0, !dbg !8088
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8089

land.lhs.true:                                    ; preds = %do.end
  %11 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup, align 8, !dbg !8090
  %phy_uid2 = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %11, i32 0, i32 2, !dbg !8091
  %12 = load i32, i32* %phy_uid2, align 8, !dbg !8091
  %13 = load i32, i32* %phy_uid_mask.addr, align 4, !dbg !8092
  %and = and i32 %12, %13, !dbg !8093
  %14 = load i32, i32* %phy_uid.addr, align 4, !dbg !8094
  %15 = load i32, i32* %phy_uid_mask.addr, align 4, !dbg !8095
  %and3 = and i32 %14, %15, !dbg !8096
  %cmp4 = icmp eq i32 %and, %and3, !dbg !8097
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8098

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup, align 8, !dbg !8099
  %list = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %16, i32 0, i32 0, !dbg !8101
  call void @list_del(%struct.list_head* %list) #10, !dbg !8102
  %17 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup, align 8, !dbg !8103
  %18 = bitcast %struct.phy_fixup* %17 to i8*, !dbg !8103
  call void @kfree(i8* %18) #10, !dbg !8104
  store i32 0, i32* %ret, align 4, !dbg !8105
  br label %for.end, !dbg !8106

if.end:                                           ; preds = %land.lhs.true, %do.end
  br label %for.inc, !dbg !8107

for.inc:                                          ; preds = %if.end
  %19 = load %struct.list_head*, %struct.list_head** %n, align 8, !dbg !8075
  store %struct.list_head* %19, %struct.list_head** %pos, align 8, !dbg !8075
  %20 = load %struct.list_head*, %struct.list_head** %pos, align 8, !dbg !8075
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %20, i32 0, i32 0, !dbg !8075
  %21 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !8075
  store %struct.list_head* %21, %struct.list_head** %n, align 8, !dbg !8075
  br label %for.cond, !dbg !8075, !llvm.loop !8108

for.end:                                          ; preds = %if.then, %for.cond
  call void @mutex_unlock(%struct.mutex* @phy_fixup_lock) #10, !dbg !8110
  %22 = load i32, i32* %ret, align 4, !dbg !8111
  ret i32 %22, !dbg !8112
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !8113 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !8116, metadata !DIExpression()), !dbg !8117
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8118
  call void @__list_del_entry(%struct.list_head* %0) #10, !dbg !8119
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8120
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8121
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !8122
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !8123
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !8124
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !8125
  ret void, !dbg !8126
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_unregister_fixup_for_uid(i32 %phy_uid, i32 %phy_uid_mask) #0 !dbg !8127 {
entry:
  %phy_uid.addr = alloca i32, align 4
  %phy_uid_mask.addr = alloca i32, align 4
  store i32 %phy_uid, i32* %phy_uid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_uid.addr, metadata !8130, metadata !DIExpression()), !dbg !8131
  store i32 %phy_uid_mask, i32* %phy_uid_mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_uid_mask.addr, metadata !8132, metadata !DIExpression()), !dbg !8133
  %0 = load i32, i32* %phy_uid.addr, align 4, !dbg !8134
  %1 = load i32, i32* %phy_uid_mask.addr, align 4, !dbg !8135
  %call = call i32 @phy_unregister_fixup(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 %0, i32 %1) #10, !dbg !8136
  ret i32 %call, !dbg !8137
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_unregister_fixup_for_id(i8* %bus_id) #0 !dbg !8138 {
entry:
  %bus_id.addr = alloca i8*, align 8
  store i8* %bus_id, i8** %bus_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bus_id.addr, metadata !8141, metadata !DIExpression()), !dbg !8142
  %0 = load i8*, i8** %bus_id.addr, align 8, !dbg !8143
  %call = call i32 @phy_unregister_fixup(i8* %0, i32 -1, i32 -1) #10, !dbg !8144
  ret i32 %call, !dbg !8145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.phy_device* @phy_device_create(%struct.mii_bus* %bus, i32 %addr, i32 %phy_id, i1 zeroext %is_c45, %struct.phy_c45_device_ids* %c45_ids) #0 !dbg !7595 {
entry:
  %retval = alloca %struct.phy_device*, align 8
  %bus.addr = alloca %struct.mii_bus*, align 8
  %addr.addr = alloca i32, align 4
  %phy_id.addr = alloca i32, align 4
  %is_c45.addr = alloca i8, align 1
  %c45_ids.addr = alloca %struct.phy_c45_device_ids*, align 8
  %dev = alloca %struct.phy_device*, align 8
  %mdiodev = alloca %struct.mdio_device*, align 8
  %ret = alloca i32, align 4
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %num_ids = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.mii_bus* %bus, %struct.mii_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mii_bus** %bus.addr, metadata !8146, metadata !DIExpression()), !dbg !8147
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !8148, metadata !DIExpression()), !dbg !8149
  store i32 %phy_id, i32* %phy_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_id.addr, metadata !8150, metadata !DIExpression()), !dbg !8151
  %frombool = zext i1 %is_c45 to i8
  store i8 %frombool, i8* %is_c45.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_c45.addr, metadata !8152, metadata !DIExpression()), !dbg !8153
  store %struct.phy_c45_device_ids* %c45_ids, %struct.phy_c45_device_ids** %c45_ids.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_c45_device_ids** %c45_ids.addr, metadata !8154, metadata !DIExpression()), !dbg !8155
  call void @llvm.dbg.declare(metadata %struct.phy_device** %dev, metadata !8156, metadata !DIExpression()), !dbg !8157
  call void @llvm.dbg.declare(metadata %struct.mdio_device** %mdiodev, metadata !8158, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8160, metadata !DIExpression()), !dbg !8161
  store i32 0, i32* %ret, align 4, !dbg !8161
  %call = call i8* @kzalloc(i64 1264, i32 3264) #10, !dbg !8162
  %0 = bitcast i8* %call to %struct.phy_device*, !dbg !8162
  store %struct.phy_device* %0, %struct.phy_device** %dev, align 8, !dbg !8163
  %1 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8164
  %tobool = icmp ne %struct.phy_device* %1, null, !dbg !8164
  br i1 %tobool, label %if.end, label %if.then, !dbg !8166

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -12) #10, !dbg !8167
  %2 = bitcast i8* %call1 to %struct.phy_device*, !dbg !8167
  store %struct.phy_device* %2, %struct.phy_device** %retval, align 8, !dbg !8168
  br label %return, !dbg !8168

if.end:                                           ; preds = %entry
  %3 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8169
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %3, i32 0, i32 0, !dbg !8170
  store %struct.mdio_device* %mdio, %struct.mdio_device** %mdiodev, align 8, !dbg !8171
  %4 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8172
  %dev2 = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %4, i32 0, i32 11, !dbg !8173
  %5 = load %struct.mdio_device*, %struct.mdio_device** %mdiodev, align 8, !dbg !8174
  %dev3 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %5, i32 0, i32 0, !dbg !8175
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 1, !dbg !8176
  store %struct.device* %dev2, %struct.device** %parent, align 8, !dbg !8177
  %6 = load %struct.mdio_device*, %struct.mdio_device** %mdiodev, align 8, !dbg !8178
  %dev4 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %6, i32 0, i32 0, !dbg !8179
  %bus5 = getelementptr inbounds %struct.device, %struct.device* %dev4, i32 0, i32 5, !dbg !8180
  store %struct.bus_type* @mdio_bus_type, %struct.bus_type** %bus5, align 8, !dbg !8181
  %7 = load %struct.mdio_device*, %struct.mdio_device** %mdiodev, align 8, !dbg !8182
  %dev6 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %7, i32 0, i32 0, !dbg !8183
  %type = getelementptr inbounds %struct.device, %struct.device* %dev6, i32 0, i32 4, !dbg !8184
  store %struct.device_type* @mdio_bus_phy_type, %struct.device_type** %type, align 8, !dbg !8185
  %8 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8186
  %9 = load %struct.mdio_device*, %struct.mdio_device** %mdiodev, align 8, !dbg !8187
  %bus7 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %9, i32 0, i32 1, !dbg !8188
  store %struct.mii_bus* %8, %struct.mii_bus** %bus7, align 8, !dbg !8189
  %10 = load %struct.mdio_device*, %struct.mdio_device** %mdiodev, align 8, !dbg !8190
  %bus_match = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %10, i32 0, i32 3, !dbg !8191
  store i32 (%struct.device*, %struct.device_driver*)* @phy_bus_match, i32 (%struct.device*, %struct.device_driver*)** %bus_match, align 8, !dbg !8192
  %11 = load i32, i32* %addr.addr, align 4, !dbg !8193
  %12 = load %struct.mdio_device*, %struct.mdio_device** %mdiodev, align 8, !dbg !8194
  %addr8 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %12, i32 0, i32 6, !dbg !8195
  store i32 %11, i32* %addr8, align 8, !dbg !8196
  %13 = load %struct.mdio_device*, %struct.mdio_device** %mdiodev, align 8, !dbg !8197
  %flags = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %13, i32 0, i32 7, !dbg !8198
  store i32 1, i32* %flags, align 4, !dbg !8199
  %14 = load %struct.mdio_device*, %struct.mdio_device** %mdiodev, align 8, !dbg !8200
  %device_free = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %14, i32 0, i32 4, !dbg !8201
  store void (%struct.mdio_device*)* @phy_mdio_device_free, void (%struct.mdio_device*)** %device_free, align 8, !dbg !8202
  %15 = load %struct.mdio_device*, %struct.mdio_device** %mdiodev, align 8, !dbg !8203
  %device_remove = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %15, i32 0, i32 5, !dbg !8204
  store void (%struct.mdio_device*)* @phy_mdio_device_remove, void (%struct.mdio_device*)** %device_remove, align 8, !dbg !8205
  %16 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8206
  %speed = getelementptr inbounds %struct.phy_device, %struct.phy_device* %16, i32 0, i32 8, !dbg !8207
  store i32 -1, i32* %speed, align 4, !dbg !8208
  %17 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8209
  %duplex = getelementptr inbounds %struct.phy_device, %struct.phy_device* %17, i32 0, i32 9, !dbg !8210
  store i32 255, i32* %duplex, align 8, !dbg !8211
  %18 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8212
  %pause = getelementptr inbounds %struct.phy_device, %struct.phy_device* %18, i32 0, i32 10, !dbg !8213
  store i32 0, i32* %pause, align 4, !dbg !8214
  %19 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8215
  %asym_pause = getelementptr inbounds %struct.phy_device, %struct.phy_device* %19, i32 0, i32 11, !dbg !8216
  store i32 0, i32* %asym_pause, align 8, !dbg !8217
  %20 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8218
  %link = getelementptr inbounds %struct.phy_device, %struct.phy_device* %20, i32 0, i32 4, !dbg !8219
  %bf.load = load i16, i16* %link, align 4, !dbg !8220
  %bf.clear = and i16 %bf.load, -2049, !dbg !8220
  store i16 %bf.clear, i16* %link, align 4, !dbg !8220
  %21 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8221
  %interface = getelementptr inbounds %struct.phy_device, %struct.phy_device* %21, i32 0, i32 7, !dbg !8222
  store i32 3, i32* %interface, align 8, !dbg !8223
  %22 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8224
  %autoneg = getelementptr inbounds %struct.phy_device, %struct.phy_device* %22, i32 0, i32 4, !dbg !8225
  %bf.load9 = load i16, i16* %autoneg, align 4, !dbg !8226
  %bf.clear10 = and i16 %bf.load9, -1025, !dbg !8226
  %bf.set = or i16 %bf.clear10, 1024, !dbg !8226
  store i16 %bf.set, i16* %autoneg, align 4, !dbg !8226
  %23 = load i8, i8* %is_c45.addr, align 1, !dbg !8227
  %tobool11 = trunc i8 %23 to i1, !dbg !8227
  %conv = zext i1 %tobool11 to i32, !dbg !8227
  %24 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8228
  %is_c4512 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %24, i32 0, i32 4, !dbg !8229
  %25 = trunc i32 %conv to i16, !dbg !8230
  %bf.load13 = load i16, i16* %is_c4512, align 4, !dbg !8230
  %bf.value = and i16 %25, 1, !dbg !8230
  %bf.clear14 = and i16 %bf.load13, -2, !dbg !8230
  %bf.set15 = or i16 %bf.clear14, %bf.value, !dbg !8230
  store i16 %bf.set15, i16* %is_c4512, align 4, !dbg !8230
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !8230
  %26 = load i32, i32* %phy_id.addr, align 4, !dbg !8231
  %27 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8232
  %phy_id16 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %27, i32 0, i32 2, !dbg !8233
  store i32 %26, i32* %phy_id16, align 8, !dbg !8234
  %28 = load %struct.phy_c45_device_ids*, %struct.phy_c45_device_ids** %c45_ids.addr, align 8, !dbg !8235
  %tobool17 = icmp ne %struct.phy_c45_device_ids* %28, null, !dbg !8235
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !8237

if.then18:                                        ; preds = %if.end
  %29 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8238
  %c45_ids19 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %29, i32 0, i32 3, !dbg !8239
  %30 = load %struct.phy_c45_device_ids*, %struct.phy_c45_device_ids** %c45_ids.addr, align 8, !dbg !8240
  %31 = bitcast %struct.phy_c45_device_ids* %c45_ids19 to i8*, !dbg !8241
  %32 = bitcast %struct.phy_c45_device_ids* %30 to i8*, !dbg !8241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 136, i1 false), !dbg !8241
  br label %if.end20, !dbg !8238

if.end20:                                         ; preds = %if.then18, %if.end
  %33 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8242
  %irq = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %33, i32 0, i32 15, !dbg !8243
  %34 = load i32, i32* %addr.addr, align 4, !dbg !8244
  %idxprom = sext i32 %34 to i64, !dbg !8242
  %arrayidx = getelementptr [32 x i32], [32 x i32]* %irq, i64 0, i64 %idxprom, !dbg !8242
  %35 = load i32, i32* %arrayidx, align 4, !dbg !8242
  %36 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8245
  %irq21 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %36, i32 0, i32 20, !dbg !8246
  store i32 %35, i32* %irq21, align 4, !dbg !8247
  %37 = load %struct.mdio_device*, %struct.mdio_device** %mdiodev, align 8, !dbg !8248
  %dev22 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %37, i32 0, i32 0, !dbg !8249
  %38 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8250
  %id = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %38, i32 0, i32 2, !dbg !8251
  %arraydecay = getelementptr inbounds [61 x i8], [61 x i8]* %id, i64 0, i64 0, !dbg !8250
  %39 = load i32, i32* %addr.addr, align 4, !dbg !8252
  %call23 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev22, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8* %arraydecay, i32 %39) #10, !dbg !8253
  %40 = load %struct.mdio_device*, %struct.mdio_device** %mdiodev, align 8, !dbg !8254
  %dev24 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %40, i32 0, i32 0, !dbg !8255
  call void @device_initialize(%struct.device* %dev24) #10, !dbg !8256
  %41 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8257
  %state = getelementptr inbounds %struct.phy_device, %struct.phy_device* %41, i32 0, i32 5, !dbg !8258
  store i32 0, i32* %state, align 8, !dbg !8259
  br label %do.body, !dbg !8260

do.body:                                          ; preds = %if.end20
  %42 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8261
  %lock = getelementptr inbounds %struct.phy_device, %struct.phy_device* %42, i32 0, i32 27, !dbg !8261
  call void @__mutex_init(%struct.mutex* %lock, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), %struct.lock_class_key* @phy_device_create.__key) #10, !dbg !8261
  br label %do.end, !dbg !8261

do.end:                                           ; preds = %do.body
  br label %do.body25, !dbg !8263

do.body25:                                        ; preds = %do.end
  br label %do.body26, !dbg !8264

do.body26:                                        ; preds = %do.body25
  %43 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8266
  %state_queue = getelementptr inbounds %struct.phy_device, %struct.phy_device* %43, i32 0, i32 26, !dbg !8266
  %work = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %state_queue, i32 0, i32 0, !dbg !8266
  call void @__init_work(%struct.work_struct* %work, i32 0) #10, !dbg !8266
  %44 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8266
  %state_queue27 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %44, i32 0, i32 26, !dbg !8266
  %work28 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %state_queue27, i32 0, i32 0, !dbg !8266
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work28, i32 0, i32 0, !dbg !8266
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !8266
  store i64 68719476704, i64* %counter, align 8, !dbg !8266
  %45 = bitcast %struct.atomic64_t* %data to i8*, !dbg !8266
  %46 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !8266
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 8, i1 false), !dbg !8266
  %47 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8266
  %state_queue29 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %47, i32 0, i32 26, !dbg !8266
  %work30 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %state_queue29, i32 0, i32 0, !dbg !8266
  %entry31 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work30, i32 0, i32 1, !dbg !8266
  call void @INIT_LIST_HEAD(%struct.list_head* %entry31) #10, !dbg !8266
  %48 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8266
  %state_queue32 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %48, i32 0, i32 26, !dbg !8266
  %work33 = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %state_queue32, i32 0, i32 0, !dbg !8266
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work33, i32 0, i32 2, !dbg !8266
  store void (%struct.work_struct*)* @phy_state_machine, void (%struct.work_struct*)** %func, align 8, !dbg !8266
  br label %do.end34, !dbg !8266

do.end34:                                         ; preds = %do.body26
  %49 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8264
  %state_queue35 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %49, i32 0, i32 26, !dbg !8264
  %timer = getelementptr inbounds %struct.delayed_work, %struct.delayed_work* %state_queue35, i32 0, i32 1, !dbg !8264
  call void @init_timer_key(%struct.timer_list* %timer, void (%struct.timer_list*)* @delayed_work_timer_fn, i32 2097152, i8* null, %struct.lock_class_key* null) #10, !dbg !8264
  br label %do.end36, !dbg !8264

do.end36:                                         ; preds = %do.end34
  %50 = load i8, i8* %is_c45.addr, align 1, !dbg !8268
  %tobool37 = trunc i8 %50 to i1, !dbg !8268
  br i1 %tobool37, label %land.lhs.true, label %if.else, !dbg !8270

land.lhs.true:                                    ; preds = %do.end36
  %51 = load %struct.phy_c45_device_ids*, %struct.phy_c45_device_ids** %c45_ids.addr, align 8, !dbg !8271
  %tobool39 = icmp ne %struct.phy_c45_device_ids* %51, null, !dbg !8271
  br i1 %tobool39, label %if.then40, label %if.else, !dbg !8272

if.then40:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %num_ids, metadata !8273, metadata !DIExpression()), !dbg !8275
  store i32 32, i32* %num_ids, align 4, !dbg !8275
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8276, metadata !DIExpression()), !dbg !8277
  store i32 1, i32* %i, align 4, !dbg !8278
  br label %for.cond, !dbg !8280

for.cond:                                         ; preds = %for.inc, %if.then40
  %52 = load i32, i32* %i, align 4, !dbg !8281
  %cmp = icmp slt i32 %52, 32, !dbg !8283
  br i1 %cmp, label %for.body, label %for.end, !dbg !8284

for.body:                                         ; preds = %for.cond
  %53 = load %struct.phy_c45_device_ids*, %struct.phy_c45_device_ids** %c45_ids.addr, align 8, !dbg !8285
  %device_ids = getelementptr inbounds %struct.phy_c45_device_ids, %struct.phy_c45_device_ids* %53, i32 0, i32 2, !dbg !8288
  %54 = load i32, i32* %i, align 4, !dbg !8289
  %idxprom42 = sext i32 %54 to i64, !dbg !8285
  %arrayidx43 = getelementptr [32 x i32], [32 x i32]* %device_ids, i64 0, i64 %idxprom42, !dbg !8285
  %55 = load i32, i32* %arrayidx43, align 4, !dbg !8285
  %cmp44 = icmp eq i32 %55, -1, !dbg !8290
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !8291

if.then46:                                        ; preds = %for.body
  br label %for.inc, !dbg !8292

if.end47:                                         ; preds = %for.body
  %56 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8293
  %57 = load %struct.phy_c45_device_ids*, %struct.phy_c45_device_ids** %c45_ids.addr, align 8, !dbg !8294
  %device_ids48 = getelementptr inbounds %struct.phy_c45_device_ids, %struct.phy_c45_device_ids* %57, i32 0, i32 2, !dbg !8295
  %58 = load i32, i32* %i, align 4, !dbg !8296
  %idxprom49 = sext i32 %58 to i64, !dbg !8294
  %arrayidx50 = getelementptr [32 x i32], [32 x i32]* %device_ids48, i64 0, i64 %idxprom49, !dbg !8294
  %59 = load i32, i32* %arrayidx50, align 4, !dbg !8294
  %call51 = call i32 @phy_request_driver_module(%struct.phy_device* %56, i32 %59) #10, !dbg !8297
  store i32 %call51, i32* %ret, align 4, !dbg !8298
  %60 = load i32, i32* %ret, align 4, !dbg !8299
  %tobool52 = icmp ne i32 %60, 0, !dbg !8299
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !8301

if.then53:                                        ; preds = %if.end47
  br label %for.end, !dbg !8302

if.end54:                                         ; preds = %if.end47
  br label %for.inc, !dbg !8303

for.inc:                                          ; preds = %if.end54, %if.then46
  %61 = load i32, i32* %i, align 4, !dbg !8304
  %inc = add i32 %61, 1, !dbg !8304
  store i32 %inc, i32* %i, align 4, !dbg !8304
  br label %for.cond, !dbg !8305, !llvm.loop !8306

for.end:                                          ; preds = %if.then53, %for.cond
  br label %if.end56, !dbg !8308

if.else:                                          ; preds = %land.lhs.true, %do.end36
  %62 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8309
  %63 = load i32, i32* %phy_id.addr, align 4, !dbg !8311
  %call55 = call i32 @phy_request_driver_module(%struct.phy_device* %62, i32 %63) #10, !dbg !8312
  store i32 %call55, i32* %ret, align 4, !dbg !8313
  br label %if.end56

if.end56:                                         ; preds = %if.else, %for.end
  %64 = load i32, i32* %ret, align 4, !dbg !8314
  %tobool57 = icmp ne i32 %64, 0, !dbg !8314
  br i1 %tobool57, label %if.then58, label %if.end62, !dbg !8316

if.then58:                                        ; preds = %if.end56
  %65 = load %struct.mdio_device*, %struct.mdio_device** %mdiodev, align 8, !dbg !8317
  %dev59 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %65, i32 0, i32 0, !dbg !8319
  call void @put_device(%struct.device* %dev59) #10, !dbg !8320
  %66 = load i32, i32* %ret, align 4, !dbg !8321
  %conv60 = sext i32 %66 to i64, !dbg !8321
  %call61 = call i8* @ERR_PTR(i64 %conv60) #10, !dbg !8322
  %67 = bitcast i8* %call61 to %struct.phy_device*, !dbg !8322
  store %struct.phy_device* %67, %struct.phy_device** %dev, align 8, !dbg !8323
  br label %if.end62, !dbg !8324

if.end62:                                         ; preds = %if.then58, %if.end56
  %68 = load %struct.phy_device*, %struct.phy_device** %dev, align 8, !dbg !8325
  store %struct.phy_device* %68, %struct.phy_device** %retval, align 8, !dbg !8326
  br label %return, !dbg !8326

return:                                           ; preds = %if.end62, %if.then
  %69 = load %struct.phy_device*, %struct.phy_device** %retval, align 8, !dbg !8327
  ret %struct.phy_device* %69, !dbg !8327
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !8328 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !8332, metadata !DIExpression()), !dbg !8333
  %0 = load i64, i64* %error.addr, align 8, !dbg !8334
  %1 = inttoptr i64 %0 to i8*, !dbg !8335
  ret i8* %1, !dbg !8336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_bus_match(%struct.device* %dev, %struct.device_driver* %drv) #0 !dbg !8337 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %drv.addr = alloca %struct.device_driver*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.mdio_device*, align 8
  %tmp4 = alloca %struct.phy_device*, align 8
  %phydrv = alloca %struct.phy_driver*, align 8
  %__mptr6 = alloca i8*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp10 = alloca %struct.mdio_driver_common*, align 8
  %tmp14 = alloca %struct.phy_driver*, align 8
  %num_ids = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8338, metadata !DIExpression()), !dbg !8339
  store %struct.device_driver* %drv, %struct.device_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_driver** %drv.addr, metadata !8340, metadata !DIExpression()), !dbg !8341
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !8342, metadata !DIExpression()), !dbg !8343
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8344, metadata !DIExpression()), !dbg !8346
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !8347, metadata !DIExpression()), !dbg !8349
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8349
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8349
  store i8* %1, i8** %__mptr1, align 8, !dbg !8349
  br label %do.body, !dbg !8349

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8350

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr1, align 8, !dbg !8349
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8349
  %3 = bitcast i8* %add.ptr to %struct.mdio_device*, !dbg !8349
  store %struct.mdio_device* %3, %struct.mdio_device** %tmp, align 8, !dbg !8350
  %4 = load %struct.mdio_device*, %struct.mdio_device** %tmp, align 8, !dbg !8349
  %5 = bitcast %struct.mdio_device* %4 to i8*, !dbg !8346
  store i8* %5, i8** %__mptr, align 8, !dbg !8346
  br label %do.body2, !dbg !8346

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !8352

do.end3:                                          ; preds = %do.body2
  %6 = load i8*, i8** %__mptr, align 8, !dbg !8346
  %add.ptr5 = getelementptr i8, i8* %6, i64 0, !dbg !8346
  %7 = bitcast i8* %add.ptr5 to %struct.phy_device*, !dbg !8346
  store %struct.phy_device* %7, %struct.phy_device** %tmp4, align 8, !dbg !8352
  %8 = load %struct.phy_device*, %struct.phy_device** %tmp4, align 8, !dbg !8346
  store %struct.phy_device* %8, %struct.phy_device** %phydev, align 8, !dbg !8343
  call void @llvm.dbg.declare(metadata %struct.phy_driver** %phydrv, metadata !8354, metadata !DIExpression()), !dbg !8355
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !8356, metadata !DIExpression()), !dbg !8358
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !8359, metadata !DIExpression()), !dbg !8361
  %9 = load %struct.device_driver*, %struct.device_driver** %drv.addr, align 8, !dbg !8361
  %10 = bitcast %struct.device_driver* %9 to i8*, !dbg !8361
  store i8* %10, i8** %__mptr7, align 8, !dbg !8361
  br label %do.body8, !dbg !8361

do.body8:                                         ; preds = %do.end3
  br label %do.end9, !dbg !8362

do.end9:                                          ; preds = %do.body8
  %11 = load i8*, i8** %__mptr7, align 8, !dbg !8361
  %add.ptr11 = getelementptr i8, i8* %11, i64 0, !dbg !8361
  %12 = bitcast i8* %add.ptr11 to %struct.mdio_driver_common*, !dbg !8361
  store %struct.mdio_driver_common* %12, %struct.mdio_driver_common** %tmp10, align 8, !dbg !8362
  %13 = load %struct.mdio_driver_common*, %struct.mdio_driver_common** %tmp10, align 8, !dbg !8361
  %14 = bitcast %struct.mdio_driver_common* %13 to i8*, !dbg !8358
  store i8* %14, i8** %__mptr6, align 8, !dbg !8358
  br label %do.body12, !dbg !8358

do.body12:                                        ; preds = %do.end9
  br label %do.end13, !dbg !8364

do.end13:                                         ; preds = %do.body12
  %15 = load i8*, i8** %__mptr6, align 8, !dbg !8358
  %add.ptr15 = getelementptr i8, i8* %15, i64 0, !dbg !8358
  %16 = bitcast i8* %add.ptr15 to %struct.phy_driver*, !dbg !8358
  store %struct.phy_driver* %16, %struct.phy_driver** %tmp14, align 8, !dbg !8364
  %17 = load %struct.phy_driver*, %struct.phy_driver** %tmp14, align 8, !dbg !8358
  store %struct.phy_driver* %17, %struct.phy_driver** %phydrv, align 8, !dbg !8355
  call void @llvm.dbg.declare(metadata i32* %num_ids, metadata !8366, metadata !DIExpression()), !dbg !8367
  store i32 32, i32* %num_ids, align 4, !dbg !8367
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8368, metadata !DIExpression()), !dbg !8369
  %18 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !8370
  %mdiodrv = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %18, i32 0, i32 0, !dbg !8372
  %flags = getelementptr inbounds %struct.mdio_driver_common, %struct.mdio_driver_common* %mdiodrv, i32 0, i32 1, !dbg !8373
  %19 = load i32, i32* %flags, align 8, !dbg !8373
  %and = and i32 %19, -2147483648, !dbg !8374
  %tobool = icmp ne i32 %and, 0, !dbg !8374
  br i1 %tobool, label %if.end, label %if.then, !dbg !8375

if.then:                                          ; preds = %do.end13
  store i32 0, i32* %retval, align 4, !dbg !8376
  br label %return, !dbg !8376

if.end:                                           ; preds = %do.end13
  %20 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !8377
  %match_phy_device = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %20, i32 0, i32 21, !dbg !8379
  %21 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %match_phy_device, align 8, !dbg !8379
  %tobool16 = icmp ne i32 (%struct.phy_device*)* %21, null, !dbg !8377
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !8380

if.then17:                                        ; preds = %if.end
  %22 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !8381
  %match_phy_device18 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %22, i32 0, i32 21, !dbg !8382
  %23 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %match_phy_device18, align 8, !dbg !8382
  %24 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !8383
  %call = call i32 %23(%struct.phy_device* %24) #10, !dbg !8381
  store i32 %call, i32* %retval, align 4, !dbg !8384
  br label %return, !dbg !8384

if.end19:                                         ; preds = %if.end
  %25 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !8385
  %is_c45 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %25, i32 0, i32 4, !dbg !8387
  %bf.load = load i16, i16* %is_c45, align 4, !dbg !8387
  %bf.clear = and i16 %bf.load, 1, !dbg !8387
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8387
  %tobool20 = icmp ne i32 %bf.cast, 0, !dbg !8385
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !8388

if.then21:                                        ; preds = %if.end19
  store i32 1, i32* %i, align 4, !dbg !8389
  br label %for.cond, !dbg !8392

for.cond:                                         ; preds = %for.inc, %if.then21
  %26 = load i32, i32* %i, align 4, !dbg !8393
  %cmp = icmp slt i32 %26, 32, !dbg !8395
  br i1 %cmp, label %for.body, label %for.end, !dbg !8396

for.body:                                         ; preds = %for.cond
  %27 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !8397
  %c45_ids = getelementptr inbounds %struct.phy_device, %struct.phy_device* %27, i32 0, i32 3, !dbg !8400
  %device_ids = getelementptr inbounds %struct.phy_c45_device_ids, %struct.phy_c45_device_ids* %c45_ids, i32 0, i32 2, !dbg !8401
  %28 = load i32, i32* %i, align 4, !dbg !8402
  %idxprom = sext i32 %28 to i64, !dbg !8397
  %arrayidx = getelementptr [32 x i32], [32 x i32]* %device_ids, i64 0, i64 %idxprom, !dbg !8397
  %29 = load i32, i32* %arrayidx, align 4, !dbg !8397
  %cmp22 = icmp eq i32 %29, -1, !dbg !8403
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !8404

if.then23:                                        ; preds = %for.body
  br label %for.inc, !dbg !8405

if.end24:                                         ; preds = %for.body
  %30 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !8406
  %phy_id = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %30, i32 0, i32 1, !dbg !8408
  %31 = load i32, i32* %phy_id, align 8, !dbg !8408
  %32 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !8409
  %phy_id_mask = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %32, i32 0, i32 3, !dbg !8410
  %33 = load i32, i32* %phy_id_mask, align 8, !dbg !8410
  %and25 = and i32 %31, %33, !dbg !8411
  %34 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !8412
  %c45_ids26 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %34, i32 0, i32 3, !dbg !8413
  %device_ids27 = getelementptr inbounds %struct.phy_c45_device_ids, %struct.phy_c45_device_ids* %c45_ids26, i32 0, i32 2, !dbg !8414
  %35 = load i32, i32* %i, align 4, !dbg !8415
  %idxprom28 = sext i32 %35 to i64, !dbg !8412
  %arrayidx29 = getelementptr [32 x i32], [32 x i32]* %device_ids27, i64 0, i64 %idxprom28, !dbg !8412
  %36 = load i32, i32* %arrayidx29, align 4, !dbg !8412
  %37 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !8416
  %phy_id_mask30 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %37, i32 0, i32 3, !dbg !8417
  %38 = load i32, i32* %phy_id_mask30, align 8, !dbg !8417
  %and31 = and i32 %36, %38, !dbg !8418
  %cmp32 = icmp eq i32 %and25, %and31, !dbg !8419
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !8420

if.then33:                                        ; preds = %if.end24
  store i32 1, i32* %retval, align 4, !dbg !8421
  br label %return, !dbg !8421

if.end34:                                         ; preds = %if.end24
  br label %for.inc, !dbg !8422

for.inc:                                          ; preds = %if.end34, %if.then23
  %39 = load i32, i32* %i, align 4, !dbg !8423
  %inc = add i32 %39, 1, !dbg !8423
  store i32 %inc, i32* %i, align 4, !dbg !8423
  br label %for.cond, !dbg !8424, !llvm.loop !8425

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !8427
  br label %return, !dbg !8427

if.else:                                          ; preds = %if.end19
  %40 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !8428
  %phy_id35 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %40, i32 0, i32 1, !dbg !8430
  %41 = load i32, i32* %phy_id35, align 8, !dbg !8430
  %42 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !8431
  %phy_id_mask36 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %42, i32 0, i32 3, !dbg !8432
  %43 = load i32, i32* %phy_id_mask36, align 8, !dbg !8432
  %and37 = and i32 %41, %43, !dbg !8433
  %44 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !8434
  %phy_id38 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %44, i32 0, i32 2, !dbg !8435
  %45 = load i32, i32* %phy_id38, align 8, !dbg !8435
  %46 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !8436
  %phy_id_mask39 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %46, i32 0, i32 3, !dbg !8437
  %47 = load i32, i32* %phy_id_mask39, align 8, !dbg !8437
  %and40 = and i32 %45, %47, !dbg !8438
  %cmp41 = icmp eq i32 %and37, %and40, !dbg !8439
  %conv = zext i1 %cmp41 to i32, !dbg !8439
  store i32 %conv, i32* %retval, align 4, !dbg !8440
  br label %return, !dbg !8440

return:                                           ; preds = %if.else, %for.end, %if.then33, %if.then17, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !8441
  ret i32 %48, !dbg !8441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @phy_mdio_device_free(%struct.mdio_device* %mdiodev) #0 !dbg !8442 {
entry:
  %mdiodev.addr = alloca %struct.mdio_device*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.phy_device*, align 8
  store %struct.mdio_device* %mdiodev, %struct.mdio_device** %mdiodev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mdio_device** %mdiodev.addr, metadata !8443, metadata !DIExpression()), !dbg !8444
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !8445, metadata !DIExpression()), !dbg !8446
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8447, metadata !DIExpression()), !dbg !8449
  %0 = load %struct.mdio_device*, %struct.mdio_device** %mdiodev.addr, align 8, !dbg !8449
  %1 = bitcast %struct.mdio_device* %0 to i8*, !dbg !8449
  store i8* %1, i8** %__mptr, align 8, !dbg !8449
  br label %do.body, !dbg !8449

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8450

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8449
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8449
  %3 = bitcast i8* %add.ptr to %struct.phy_device*, !dbg !8449
  store %struct.phy_device* %3, %struct.phy_device** %tmp, align 8, !dbg !8450
  %4 = load %struct.phy_device*, %struct.phy_device** %tmp, align 8, !dbg !8449
  store %struct.phy_device* %4, %struct.phy_device** %phydev, align 8, !dbg !8452
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !8453
  call void @phy_device_free(%struct.phy_device* %5) #10, !dbg !8454
  ret void, !dbg !8455
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @phy_mdio_device_remove(%struct.mdio_device* %mdiodev) #0 !dbg !8456 {
entry:
  %mdiodev.addr = alloca %struct.mdio_device*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.phy_device*, align 8
  store %struct.mdio_device* %mdiodev, %struct.mdio_device** %mdiodev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mdio_device** %mdiodev.addr, metadata !8457, metadata !DIExpression()), !dbg !8458
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !8459, metadata !DIExpression()), !dbg !8460
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8461, metadata !DIExpression()), !dbg !8463
  %0 = load %struct.mdio_device*, %struct.mdio_device** %mdiodev.addr, align 8, !dbg !8463
  %1 = bitcast %struct.mdio_device* %0 to i8*, !dbg !8463
  store i8* %1, i8** %__mptr, align 8, !dbg !8463
  br label %do.body, !dbg !8463

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8464

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8463
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8463
  %3 = bitcast i8* %add.ptr to %struct.phy_device*, !dbg !8463
  store %struct.phy_device* %3, %struct.phy_device** %tmp, align 8, !dbg !8464
  %4 = load %struct.phy_device*, %struct.phy_device** %tmp, align 8, !dbg !8463
  store %struct.phy_device* %4, %struct.phy_device** %phydev, align 8, !dbg !8466
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !8467
  call void @phy_device_remove(%struct.phy_device* %5) #10, !dbg !8468
  ret void, !dbg !8469
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @device_initialize(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !8470 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !8473, metadata !DIExpression()), !dbg !8474
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !8475, metadata !DIExpression()), !dbg !8476
  ret void, !dbg !8477
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !8478 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !8479, metadata !DIExpression()), !dbg !8480
  br label %do.body, !dbg !8481

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8482

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !8484

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !8482

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8486
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8486
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8486
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !8486
  br label %do.end3, !dbg !8486

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !8482

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8488
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8489
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !8490
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !8491
  ret void, !dbg !8492
}

; Function Attrs: noredzone
declare dso_local void @phy_state_machine(%struct.work_struct*) #2

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local void @delayed_work_timer_fn(%struct.timer_list*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_request_driver_module(%struct.phy_device* %dev, i32 %phy_id) #0 !dbg !8493 {
entry:
  %dev.addr = alloca %struct.phy_device*, align 8
  %phy_id.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.phy_device* %dev, %struct.phy_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %dev.addr, metadata !8496, metadata !DIExpression()), !dbg !8497
  store i32 %phy_id, i32* %phy_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %phy_id.addr, metadata !8498, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8500, metadata !DIExpression()), !dbg !8501
  %0 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr = lshr i32 %0, 31, !dbg !8502
  %and = and i32 %shr, 1, !dbg !8502
  %1 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr1 = lshr i32 %1, 30, !dbg !8502
  %and2 = and i32 %shr1, 1, !dbg !8502
  %2 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr3 = lshr i32 %2, 29, !dbg !8502
  %and4 = and i32 %shr3, 1, !dbg !8502
  %3 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr5 = lshr i32 %3, 28, !dbg !8502
  %and6 = and i32 %shr5, 1, !dbg !8502
  %4 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr7 = lshr i32 %4, 27, !dbg !8502
  %and8 = and i32 %shr7, 1, !dbg !8502
  %5 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr9 = lshr i32 %5, 26, !dbg !8502
  %and10 = and i32 %shr9, 1, !dbg !8502
  %6 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr11 = lshr i32 %6, 25, !dbg !8502
  %and12 = and i32 %shr11, 1, !dbg !8502
  %7 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr13 = lshr i32 %7, 24, !dbg !8502
  %and14 = and i32 %shr13, 1, !dbg !8502
  %8 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr15 = lshr i32 %8, 23, !dbg !8502
  %and16 = and i32 %shr15, 1, !dbg !8502
  %9 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr17 = lshr i32 %9, 22, !dbg !8502
  %and18 = and i32 %shr17, 1, !dbg !8502
  %10 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr19 = lshr i32 %10, 21, !dbg !8502
  %and20 = and i32 %shr19, 1, !dbg !8502
  %11 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr21 = lshr i32 %11, 20, !dbg !8502
  %and22 = and i32 %shr21, 1, !dbg !8502
  %12 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr23 = lshr i32 %12, 19, !dbg !8502
  %and24 = and i32 %shr23, 1, !dbg !8502
  %13 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr25 = lshr i32 %13, 18, !dbg !8502
  %and26 = and i32 %shr25, 1, !dbg !8502
  %14 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr27 = lshr i32 %14, 17, !dbg !8502
  %and28 = and i32 %shr27, 1, !dbg !8502
  %15 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr29 = lshr i32 %15, 16, !dbg !8502
  %and30 = and i32 %shr29, 1, !dbg !8502
  %16 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr31 = lshr i32 %16, 15, !dbg !8502
  %and32 = and i32 %shr31, 1, !dbg !8502
  %17 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr33 = lshr i32 %17, 14, !dbg !8502
  %and34 = and i32 %shr33, 1, !dbg !8502
  %18 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr35 = lshr i32 %18, 13, !dbg !8502
  %and36 = and i32 %shr35, 1, !dbg !8502
  %19 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr37 = lshr i32 %19, 12, !dbg !8502
  %and38 = and i32 %shr37, 1, !dbg !8502
  %20 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr39 = lshr i32 %20, 11, !dbg !8502
  %and40 = and i32 %shr39, 1, !dbg !8502
  %21 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr41 = lshr i32 %21, 10, !dbg !8502
  %and42 = and i32 %shr41, 1, !dbg !8502
  %22 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr43 = lshr i32 %22, 9, !dbg !8502
  %and44 = and i32 %shr43, 1, !dbg !8502
  %23 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr45 = lshr i32 %23, 8, !dbg !8502
  %and46 = and i32 %shr45, 1, !dbg !8502
  %24 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr47 = lshr i32 %24, 7, !dbg !8502
  %and48 = and i32 %shr47, 1, !dbg !8502
  %25 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr49 = lshr i32 %25, 6, !dbg !8502
  %and50 = and i32 %shr49, 1, !dbg !8502
  %26 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr51 = lshr i32 %26, 5, !dbg !8502
  %and52 = and i32 %shr51, 1, !dbg !8502
  %27 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr53 = lshr i32 %27, 4, !dbg !8502
  %and54 = and i32 %shr53, 1, !dbg !8502
  %28 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr55 = lshr i32 %28, 3, !dbg !8502
  %and56 = and i32 %shr55, 1, !dbg !8502
  %29 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr57 = lshr i32 %29, 2, !dbg !8502
  %and58 = and i32 %shr57, 1, !dbg !8502
  %30 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %shr59 = lshr i32 %30, 1, !dbg !8502
  %and60 = and i32 %shr59, 1, !dbg !8502
  %31 = load i32, i32* %phy_id.addr, align 4, !dbg !8502
  %and61 = and i32 %31, 1, !dbg !8502
  %call = call i32 (i8*, ...) @request_module(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.63, i64 0, i64 0), i32 %and, i32 %and2, i32 %and4, i32 %and6, i32 %and8, i32 %and10, i32 %and12, i32 %and14, i32 %and16, i32 %and18, i32 %and20, i32 %and22, i32 %and24, i32 %and26, i32 %and28, i32 %and30, i32 %and32, i32 %and34, i32 %and36, i32 %and38, i32 %and40, i32 %and42, i32 %and44, i32 %and46, i32 %and48, i32 %and50, i32 %and52, i32 %and54, i32 %and56, i32 %and58, i32 %and60, i32 %and61) #10, !dbg !8503
  store i32 %call, i32* %ret, align 4, !dbg !8504
  ret i32 0, !dbg !8505
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.phy_device* @get_phy_device(%struct.mii_bus* %bus, i32 %addr, i1 zeroext %is_c45) #0 !dbg !8506 {
entry:
  %retval = alloca %struct.phy_device*, align 8
  %bus.addr = alloca %struct.mii_bus*, align 8
  %addr.addr = alloca i32, align 4
  %is_c45.addr = alloca i8, align 1
  %c45_ids = alloca %struct.phy_c45_device_ids, align 4
  %phy_id = alloca i32, align 4
  %r = alloca i32, align 4
  store %struct.mii_bus* %bus, %struct.mii_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mii_bus** %bus.addr, metadata !8509, metadata !DIExpression()), !dbg !8510
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !8511, metadata !DIExpression()), !dbg !8512
  %frombool = zext i1 %is_c45 to i8
  store i8 %frombool, i8* %is_c45.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_c45.addr, metadata !8513, metadata !DIExpression()), !dbg !8514
  call void @llvm.dbg.declare(metadata %struct.phy_c45_device_ids* %c45_ids, metadata !8515, metadata !DIExpression()), !dbg !8516
  call void @llvm.dbg.declare(metadata i32* %phy_id, metadata !8517, metadata !DIExpression()), !dbg !8518
  store i32 0, i32* %phy_id, align 4, !dbg !8518
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8519, metadata !DIExpression()), !dbg !8520
  %devices_in_package = getelementptr inbounds %struct.phy_c45_device_ids, %struct.phy_c45_device_ids* %c45_ids, i32 0, i32 0, !dbg !8521
  store i32 0, i32* %devices_in_package, align 4, !dbg !8522
  %mmds_present = getelementptr inbounds %struct.phy_c45_device_ids, %struct.phy_c45_device_ids* %c45_ids, i32 0, i32 1, !dbg !8523
  store i32 0, i32* %mmds_present, align 4, !dbg !8524
  %device_ids = getelementptr inbounds %struct.phy_c45_device_ids, %struct.phy_c45_device_ids* %c45_ids, i32 0, i32 2, !dbg !8525
  %arraydecay = getelementptr inbounds [32 x i32], [32 x i32]* %device_ids, i64 0, i64 0, !dbg !8526
  %0 = bitcast i32* %arraydecay to i8*, !dbg !8526
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 -1, i64 128, i1 false), !dbg !8526
  %1 = load i8, i8* %is_c45.addr, align 1, !dbg !8527
  %tobool = trunc i8 %1 to i1, !dbg !8527
  br i1 %tobool, label %if.then, label %if.else, !dbg !8529

if.then:                                          ; preds = %entry
  %2 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8530
  %3 = load i32, i32* %addr.addr, align 4, !dbg !8531
  %call = call i32 @get_phy_c45_ids(%struct.mii_bus* %2, i32 %3, %struct.phy_c45_device_ids* %c45_ids) #10, !dbg !8532
  store i32 %call, i32* %r, align 4, !dbg !8533
  br label %if.end, !dbg !8534

if.else:                                          ; preds = %entry
  %4 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8535
  %5 = load i32, i32* %addr.addr, align 4, !dbg !8536
  %call1 = call i32 @get_phy_c22_id(%struct.mii_bus* %4, i32 %5, i32* %phy_id) #10, !dbg !8537
  store i32 %call1, i32* %r, align 4, !dbg !8538
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %r, align 4, !dbg !8539
  %tobool2 = icmp ne i32 %6, 0, !dbg !8539
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !8541

if.then3:                                         ; preds = %if.end
  %7 = load i32, i32* %r, align 4, !dbg !8542
  %conv = sext i32 %7 to i64, !dbg !8542
  %call4 = call i8* @ERR_PTR(i64 %conv) #10, !dbg !8543
  %8 = bitcast i8* %call4 to %struct.phy_device*, !dbg !8543
  store %struct.phy_device* %8, %struct.phy_device** %retval, align 8, !dbg !8544
  br label %return, !dbg !8544

if.end5:                                          ; preds = %if.end
  %9 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8545
  %10 = load i32, i32* %addr.addr, align 4, !dbg !8546
  %11 = load i32, i32* %phy_id, align 4, !dbg !8547
  %12 = load i8, i8* %is_c45.addr, align 1, !dbg !8548
  %tobool6 = trunc i8 %12 to i1, !dbg !8548
  %call7 = call %struct.phy_device* @phy_device_create(%struct.mii_bus* %9, i32 %10, i32 %11, i1 zeroext %tobool6, %struct.phy_c45_device_ids* %c45_ids) #10, !dbg !8549
  store %struct.phy_device* %call7, %struct.phy_device** %retval, align 8, !dbg !8550
  br label %return, !dbg !8550

return:                                           ; preds = %if.end5, %if.then3
  %13 = load %struct.phy_device*, %struct.phy_device** %retval, align 8, !dbg !8551
  ret %struct.phy_device* %13, !dbg !8551
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_phy_c45_ids(%struct.mii_bus* %bus, i32 %addr, %struct.phy_c45_device_ids* %c45_ids) #0 !dbg !8552 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.mii_bus*, align 8
  %addr.addr = alloca i32, align 4
  %c45_ids.addr = alloca %struct.phy_c45_device_ids*, align 8
  %num_ids = alloca i32, align 4
  %devs_in_pkg = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %phy_reg = alloca i32, align 4
  store %struct.mii_bus* %bus, %struct.mii_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mii_bus** %bus.addr, metadata !8555, metadata !DIExpression()), !dbg !8556
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !8557, metadata !DIExpression()), !dbg !8558
  store %struct.phy_c45_device_ids* %c45_ids, %struct.phy_c45_device_ids** %c45_ids.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_c45_device_ids** %c45_ids.addr, metadata !8559, metadata !DIExpression()), !dbg !8560
  call void @llvm.dbg.declare(metadata i32* %num_ids, metadata !8561, metadata !DIExpression()), !dbg !8562
  store i32 32, i32* %num_ids, align 4, !dbg !8562
  call void @llvm.dbg.declare(metadata i32* %devs_in_pkg, metadata !8563, metadata !DIExpression()), !dbg !8564
  store i32 0, i32* %devs_in_pkg, align 4, !dbg !8564
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8565, metadata !DIExpression()), !dbg !8566
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8567, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.declare(metadata i32* %phy_reg, metadata !8569, metadata !DIExpression()), !dbg !8570
  store i32 1, i32* %i, align 4, !dbg !8571
  br label %for.cond, !dbg !8573

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8574
  %cmp = icmp slt i32 %0, 32, !dbg !8576
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8577

land.rhs:                                         ; preds = %for.cond
  %1 = load i32, i32* %devs_in_pkg, align 4, !dbg !8578
  %cmp1 = icmp eq i32 %1, 0, !dbg !8579
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !8580

lor.rhs:                                          ; preds = %land.rhs
  %2 = load i32, i32* %devs_in_pkg, align 4, !dbg !8581
  %and = and i32 %2, 536870911, !dbg !8582
  %cmp2 = icmp eq i32 %and, 536870911, !dbg !8583
  br label %lor.end, !dbg !8580

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %3 = phi i1 [ true, %land.rhs ], [ %cmp2, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %for.cond
  %4 = phi i1 [ false, %for.cond ], [ %3, %lor.end ], !dbg !8584
  br i1 %4, label %for.body, label %for.end, !dbg !8585

for.body:                                         ; preds = %land.end
  %5 = load i32, i32* %i, align 4, !dbg !8586
  %cmp3 = icmp eq i32 %5, 30, !dbg !8589
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !8590

lor.lhs.false:                                    ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !8591
  %cmp4 = icmp eq i32 %6, 31, !dbg !8592
  br i1 %cmp4, label %if.then, label %if.end9, !dbg !8593

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %7 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8594
  %8 = load i32, i32* %addr.addr, align 4, !dbg !8596
  %9 = load i32, i32* %i, align 4, !dbg !8597
  %call = call i32 @phy_c45_probe_present(%struct.mii_bus* %7, i32 %8, i32 %9) #10, !dbg !8598
  store i32 %call, i32* %ret, align 4, !dbg !8599
  %10 = load i32, i32* %ret, align 4, !dbg !8600
  %cmp5 = icmp slt i32 %10, 0, !dbg !8602
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !8603

if.then6:                                         ; preds = %if.then
  store i32 -5, i32* %retval, align 4, !dbg !8604
  br label %return, !dbg !8604

if.end:                                           ; preds = %if.then
  %11 = load i32, i32* %ret, align 4, !dbg !8605
  %tobool = icmp ne i32 %11, 0, !dbg !8605
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !8607

if.then7:                                         ; preds = %if.end
  br label %for.inc, !dbg !8608

if.end8:                                          ; preds = %if.end
  br label %if.end9, !dbg !8609

if.end9:                                          ; preds = %if.end8, %lor.lhs.false
  %12 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8610
  %13 = load i32, i32* %addr.addr, align 4, !dbg !8611
  %14 = load i32, i32* %i, align 4, !dbg !8612
  %call10 = call i32 @get_phy_c45_devs_in_pkg(%struct.mii_bus* %12, i32 %13, i32 %14, i32* %devs_in_pkg) #10, !dbg !8613
  store i32 %call10, i32* %phy_reg, align 4, !dbg !8614
  %15 = load i32, i32* %phy_reg, align 4, !dbg !8615
  %cmp11 = icmp slt i32 %15, 0, !dbg !8617
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !8618

if.then12:                                        ; preds = %if.end9
  store i32 -5, i32* %retval, align 4, !dbg !8619
  br label %return, !dbg !8619

if.end13:                                         ; preds = %if.end9
  br label %for.inc, !dbg !8620

for.inc:                                          ; preds = %if.end13, %if.then7
  %16 = load i32, i32* %i, align 4, !dbg !8621
  %inc = add i32 %16, 1, !dbg !8621
  store i32 %inc, i32* %i, align 4, !dbg !8621
  br label %for.cond, !dbg !8622, !llvm.loop !8623

for.end:                                          ; preds = %land.end
  %17 = load i32, i32* %devs_in_pkg, align 4, !dbg !8625
  %and14 = and i32 %17, 536870911, !dbg !8627
  %cmp15 = icmp eq i32 %and14, 536870911, !dbg !8628
  br i1 %cmp15, label %if.then16, label %if.end25, !dbg !8629

if.then16:                                        ; preds = %for.end
  %18 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8630
  %19 = load i32, i32* %addr.addr, align 4, !dbg !8632
  %call17 = call i32 @get_phy_c45_devs_in_pkg(%struct.mii_bus* %18, i32 %19, i32 0, i32* %devs_in_pkg) #10, !dbg !8633
  store i32 %call17, i32* %phy_reg, align 4, !dbg !8634
  %20 = load i32, i32* %phy_reg, align 4, !dbg !8635
  %cmp18 = icmp slt i32 %20, 0, !dbg !8637
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !8638

if.then19:                                        ; preds = %if.then16
  store i32 -5, i32* %retval, align 4, !dbg !8639
  br label %return, !dbg !8639

if.end20:                                         ; preds = %if.then16
  %21 = load i32, i32* %devs_in_pkg, align 4, !dbg !8640
  %and21 = and i32 %21, 536870911, !dbg !8642
  %cmp22 = icmp eq i32 %and21, 536870911, !dbg !8643
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !8644

if.then23:                                        ; preds = %if.end20
  store i32 -19, i32* %retval, align 4, !dbg !8645
  br label %return, !dbg !8645

if.end24:                                         ; preds = %if.end20
  br label %if.end25, !dbg !8646

if.end25:                                         ; preds = %if.end24, %for.end
  store i32 1, i32* %i, align 4, !dbg !8647
  br label %for.cond26, !dbg !8649

for.cond26:                                       ; preds = %for.inc57, %if.end25
  %22 = load i32, i32* %i, align 4, !dbg !8650
  %cmp27 = icmp slt i32 %22, 32, !dbg !8652
  br i1 %cmp27, label %for.body28, label %for.end59, !dbg !8653

for.body28:                                       ; preds = %for.cond26
  %23 = load i32, i32* %devs_in_pkg, align 4, !dbg !8654
  %24 = load i32, i32* %i, align 4, !dbg !8657
  %shl = shl i32 1, %24, !dbg !8658
  %and29 = and i32 %23, %shl, !dbg !8659
  %tobool30 = icmp ne i32 %and29, 0, !dbg !8659
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !8660

if.then31:                                        ; preds = %for.body28
  br label %for.inc57, !dbg !8661

if.end32:                                         ; preds = %for.body28
  %25 = load i32, i32* %i, align 4, !dbg !8662
  %cmp33 = icmp eq i32 %25, 30, !dbg !8664
  br i1 %cmp33, label %if.then36, label %lor.lhs.false34, !dbg !8665

lor.lhs.false34:                                  ; preds = %if.end32
  %26 = load i32, i32* %i, align 4, !dbg !8666
  %cmp35 = icmp eq i32 %26, 31, !dbg !8667
  br i1 %cmp35, label %if.then36, label %if.end44, !dbg !8668

if.then36:                                        ; preds = %lor.lhs.false34, %if.end32
  %27 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8669
  %28 = load i32, i32* %addr.addr, align 4, !dbg !8671
  %29 = load i32, i32* %i, align 4, !dbg !8672
  %call37 = call i32 @phy_c45_probe_present(%struct.mii_bus* %27, i32 %28, i32 %29) #10, !dbg !8673
  store i32 %call37, i32* %ret, align 4, !dbg !8674
  %30 = load i32, i32* %ret, align 4, !dbg !8675
  %cmp38 = icmp slt i32 %30, 0, !dbg !8677
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !8678

if.then39:                                        ; preds = %if.then36
  %31 = load i32, i32* %ret, align 4, !dbg !8679
  store i32 %31, i32* %retval, align 4, !dbg !8680
  br label %return, !dbg !8680

if.end40:                                         ; preds = %if.then36
  %32 = load i32, i32* %ret, align 4, !dbg !8681
  %tobool41 = icmp ne i32 %32, 0, !dbg !8681
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !8683

if.then42:                                        ; preds = %if.end40
  br label %for.inc57, !dbg !8684

if.end43:                                         ; preds = %if.end40
  br label %if.end44, !dbg !8685

if.end44:                                         ; preds = %if.end43, %lor.lhs.false34
  %33 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8686
  %34 = load i32, i32* %addr.addr, align 4, !dbg !8687
  %35 = load i32, i32* %i, align 4, !dbg !8688
  %call45 = call i32 @mdiobus_c45_read(%struct.mii_bus* %33, i32 %34, i32 %35, i16 zeroext 2) #10, !dbg !8689
  store i32 %call45, i32* %phy_reg, align 4, !dbg !8690
  %36 = load i32, i32* %phy_reg, align 4, !dbg !8691
  %cmp46 = icmp slt i32 %36, 0, !dbg !8693
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !8694

if.then47:                                        ; preds = %if.end44
  store i32 -5, i32* %retval, align 4, !dbg !8695
  br label %return, !dbg !8695

if.end48:                                         ; preds = %if.end44
  %37 = load i32, i32* %phy_reg, align 4, !dbg !8696
  %shl49 = shl i32 %37, 16, !dbg !8697
  %38 = load %struct.phy_c45_device_ids*, %struct.phy_c45_device_ids** %c45_ids.addr, align 8, !dbg !8698
  %device_ids = getelementptr inbounds %struct.phy_c45_device_ids, %struct.phy_c45_device_ids* %38, i32 0, i32 2, !dbg !8699
  %39 = load i32, i32* %i, align 4, !dbg !8700
  %idxprom = sext i32 %39 to i64, !dbg !8698
  %arrayidx = getelementptr [32 x i32], [32 x i32]* %device_ids, i64 0, i64 %idxprom, !dbg !8698
  store i32 %shl49, i32* %arrayidx, align 4, !dbg !8701
  %40 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8702
  %41 = load i32, i32* %addr.addr, align 4, !dbg !8703
  %42 = load i32, i32* %i, align 4, !dbg !8704
  %call50 = call i32 @mdiobus_c45_read(%struct.mii_bus* %40, i32 %41, i32 %42, i16 zeroext 3) #10, !dbg !8705
  store i32 %call50, i32* %phy_reg, align 4, !dbg !8706
  %43 = load i32, i32* %phy_reg, align 4, !dbg !8707
  %cmp51 = icmp slt i32 %43, 0, !dbg !8709
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !8710

if.then52:                                        ; preds = %if.end48
  store i32 -5, i32* %retval, align 4, !dbg !8711
  br label %return, !dbg !8711

if.end53:                                         ; preds = %if.end48
  %44 = load i32, i32* %phy_reg, align 4, !dbg !8712
  %45 = load %struct.phy_c45_device_ids*, %struct.phy_c45_device_ids** %c45_ids.addr, align 8, !dbg !8713
  %device_ids54 = getelementptr inbounds %struct.phy_c45_device_ids, %struct.phy_c45_device_ids* %45, i32 0, i32 2, !dbg !8714
  %46 = load i32, i32* %i, align 4, !dbg !8715
  %idxprom55 = sext i32 %46 to i64, !dbg !8713
  %arrayidx56 = getelementptr [32 x i32], [32 x i32]* %device_ids54, i64 0, i64 %idxprom55, !dbg !8713
  %47 = load i32, i32* %arrayidx56, align 4, !dbg !8716
  %or = or i32 %47, %44, !dbg !8716
  store i32 %or, i32* %arrayidx56, align 4, !dbg !8716
  br label %for.inc57, !dbg !8717

for.inc57:                                        ; preds = %if.end53, %if.then42, %if.then31
  %48 = load i32, i32* %i, align 4, !dbg !8718
  %inc58 = add i32 %48, 1, !dbg !8718
  store i32 %inc58, i32* %i, align 4, !dbg !8718
  br label %for.cond26, !dbg !8719, !llvm.loop !8720

for.end59:                                        ; preds = %for.cond26
  %49 = load i32, i32* %devs_in_pkg, align 4, !dbg !8722
  %50 = load %struct.phy_c45_device_ids*, %struct.phy_c45_device_ids** %c45_ids.addr, align 8, !dbg !8723
  %devices_in_package = getelementptr inbounds %struct.phy_c45_device_ids, %struct.phy_c45_device_ids* %50, i32 0, i32 0, !dbg !8724
  store i32 %49, i32* %devices_in_package, align 4, !dbg !8725
  %51 = load i32, i32* %devs_in_pkg, align 4, !dbg !8726
  %conv = zext i32 %51 to i64, !dbg !8726
  %and60 = and i64 %conv, -2, !dbg !8727
  %conv61 = trunc i64 %and60 to i32, !dbg !8726
  %52 = load %struct.phy_c45_device_ids*, %struct.phy_c45_device_ids** %c45_ids.addr, align 8, !dbg !8728
  %mmds_present = getelementptr inbounds %struct.phy_c45_device_ids, %struct.phy_c45_device_ids* %52, i32 0, i32 1, !dbg !8729
  store i32 %conv61, i32* %mmds_present, align 4, !dbg !8730
  store i32 0, i32* %retval, align 4, !dbg !8731
  br label %return, !dbg !8731

return:                                           ; preds = %for.end59, %if.then52, %if.then47, %if.then39, %if.then23, %if.then19, %if.then12, %if.then6
  %53 = load i32, i32* %retval, align 4, !dbg !8732
  ret i32 %53, !dbg !8732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_phy_c22_id(%struct.mii_bus* %bus, i32 %addr, i32* %phy_id) #0 !dbg !8733 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.mii_bus*, align 8
  %addr.addr = alloca i32, align 4
  %phy_id.addr = alloca i32*, align 8
  %phy_reg = alloca i32, align 4
  store %struct.mii_bus* %bus, %struct.mii_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mii_bus** %bus.addr, metadata !8736, metadata !DIExpression()), !dbg !8737
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !8738, metadata !DIExpression()), !dbg !8739
  store i32* %phy_id, i32** %phy_id.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %phy_id.addr, metadata !8740, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.declare(metadata i32* %phy_reg, metadata !8742, metadata !DIExpression()), !dbg !8743
  %0 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8744
  %1 = load i32, i32* %addr.addr, align 4, !dbg !8745
  %call = call i32 @mdiobus_read(%struct.mii_bus* %0, i32 %1, i32 2) #10, !dbg !8746
  store i32 %call, i32* %phy_reg, align 4, !dbg !8747
  %2 = load i32, i32* %phy_reg, align 4, !dbg !8748
  %cmp = icmp slt i32 %2, 0, !dbg !8750
  br i1 %cmp, label %if.then, label %if.end, !dbg !8751

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %phy_reg, align 4, !dbg !8752
  %cmp1 = icmp eq i32 %3, -5, !dbg !8754
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !8755

lor.rhs:                                          ; preds = %if.then
  %4 = load i32, i32* %phy_reg, align 4, !dbg !8756
  %cmp2 = icmp eq i32 %4, -19, !dbg !8757
  br label %lor.end, !dbg !8755

lor.end:                                          ; preds = %lor.rhs, %if.then
  %5 = phi i1 [ true, %if.then ], [ %cmp2, %lor.rhs ]
  %6 = zext i1 %5 to i64, !dbg !8758
  %cond = select i1 %5, i32 -19, i32 -5, !dbg !8758
  store i32 %cond, i32* %retval, align 4, !dbg !8759
  br label %return, !dbg !8759

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %phy_reg, align 4, !dbg !8760
  %shl = shl i32 %7, 16, !dbg !8761
  %8 = load i32*, i32** %phy_id.addr, align 8, !dbg !8762
  store i32 %shl, i32* %8, align 4, !dbg !8763
  %9 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8764
  %10 = load i32, i32* %addr.addr, align 4, !dbg !8765
  %call3 = call i32 @mdiobus_read(%struct.mii_bus* %9, i32 %10, i32 3) #10, !dbg !8766
  store i32 %call3, i32* %phy_reg, align 4, !dbg !8767
  %11 = load i32, i32* %phy_reg, align 4, !dbg !8768
  %cmp4 = icmp slt i32 %11, 0, !dbg !8770
  br i1 %cmp4, label %if.then5, label %if.end11, !dbg !8771

if.then5:                                         ; preds = %if.end
  %12 = load i32, i32* %phy_reg, align 4, !dbg !8772
  %cmp6 = icmp eq i32 %12, -5, !dbg !8774
  br i1 %cmp6, label %lor.end9, label %lor.rhs7, !dbg !8775

lor.rhs7:                                         ; preds = %if.then5
  %13 = load i32, i32* %phy_reg, align 4, !dbg !8776
  %cmp8 = icmp eq i32 %13, -19, !dbg !8777
  br label %lor.end9, !dbg !8775

lor.end9:                                         ; preds = %lor.rhs7, %if.then5
  %14 = phi i1 [ true, %if.then5 ], [ %cmp8, %lor.rhs7 ]
  %15 = zext i1 %14 to i64, !dbg !8778
  %cond10 = select i1 %14, i32 -19, i32 -5, !dbg !8778
  store i32 %cond10, i32* %retval, align 4, !dbg !8779
  br label %return, !dbg !8779

if.end11:                                         ; preds = %if.end
  %16 = load i32, i32* %phy_reg, align 4, !dbg !8780
  %17 = load i32*, i32** %phy_id.addr, align 8, !dbg !8781
  %18 = load i32, i32* %17, align 4, !dbg !8782
  %or = or i32 %18, %16, !dbg !8782
  store i32 %or, i32* %17, align 4, !dbg !8782
  %19 = load i32*, i32** %phy_id.addr, align 8, !dbg !8783
  %20 = load i32, i32* %19, align 4, !dbg !8785
  %and = and i32 %20, 536870911, !dbg !8786
  %cmp12 = icmp eq i32 %and, 536870911, !dbg !8787
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !8788

if.then13:                                        ; preds = %if.end11
  store i32 -19, i32* %retval, align 4, !dbg !8789
  br label %return, !dbg !8789

if.end14:                                         ; preds = %if.end11
  store i32 0, i32* %retval, align 4, !dbg !8790
  br label %return, !dbg !8790

return:                                           ; preds = %if.end14, %if.then13, %lor.end9, %lor.end
  %21 = load i32, i32* %retval, align 4, !dbg !8791
  ret i32 %21, !dbg !8791
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_device_register(%struct.phy_device* %phydev) #0 !dbg !8792 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %err = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !8793, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8795, metadata !DIExpression()), !dbg !8796
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8797
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 0, !dbg !8798
  %call = call i32 @mdiobus_register_device(%struct.mdio_device* %mdio) #10, !dbg !8799
  store i32 %call, i32* %err, align 4, !dbg !8800
  %1 = load i32, i32* %err, align 4, !dbg !8801
  %tobool = icmp ne i32 %1, 0, !dbg !8801
  br i1 %tobool, label %if.then, label %if.end, !dbg !8803

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %err, align 4, !dbg !8804
  store i32 %2, i32* %retval, align 4, !dbg !8805
  br label %return, !dbg !8805

if.end:                                           ; preds = %entry
  %3 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8806
  call void @phy_device_reset(%struct.phy_device* %3, i32 0) #10, !dbg !8807
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8808
  %call1 = call i32 @phy_scan_fixups(%struct.phy_device* %4) #10, !dbg !8809
  store i32 %call1, i32* %err, align 4, !dbg !8810
  %5 = load i32, i32* %err, align 4, !dbg !8811
  %tobool2 = icmp ne i32 %5, 0, !dbg !8811
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !8813

if.then3:                                         ; preds = %if.end
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8814
  %mdio4 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %6, i32 0, i32 0, !dbg !8814
  %dev = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio4, i32 0, i32 0, !dbg !8814
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #13, !dbg !8814
  br label %out, !dbg !8816

if.end5:                                          ; preds = %if.end
  %7 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8817
  %mdio6 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %7, i32 0, i32 0, !dbg !8818
  %dev7 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio6, i32 0, i32 0, !dbg !8819
  %call8 = call i32 @device_add(%struct.device* %dev7) #10, !dbg !8820
  store i32 %call8, i32* %err, align 4, !dbg !8821
  %8 = load i32, i32* %err, align 4, !dbg !8822
  %tobool9 = icmp ne i32 %8, 0, !dbg !8822
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !8824

if.then10:                                        ; preds = %if.end5
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8825
  %mdio11 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %9, i32 0, i32 0, !dbg !8825
  %dev12 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio11, i32 0, i32 0, !dbg !8825
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #13, !dbg !8825
  br label %out, !dbg !8827

if.end13:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !8828
  br label %return, !dbg !8828

out:                                              ; preds = %if.then10, %if.then3
  call void @llvm.dbg.label(metadata !8829), !dbg !8830
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8831
  call void @phy_device_reset(%struct.phy_device* %10, i32 1) #10, !dbg !8832
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8833
  %mdio14 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %11, i32 0, i32 0, !dbg !8834
  %call15 = call i32 @mdiobus_unregister_device(%struct.mdio_device* %mdio14) #10, !dbg !8835
  %12 = load i32, i32* %err, align 4, !dbg !8836
  store i32 %12, i32* %retval, align 4, !dbg !8837
  br label %return, !dbg !8837

return:                                           ; preds = %out, %if.end13, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8838
  ret i32 %13, !dbg !8838
}

; Function Attrs: noredzone
declare dso_local i32 @mdiobus_register_device(%struct.mdio_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @phy_device_reset(%struct.phy_device* %phydev, i32 %value) #0 !dbg !8839 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %value.addr = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !8842, metadata !DIExpression()), !dbg !8843
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !8844, metadata !DIExpression()), !dbg !8845
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8846
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 0, !dbg !8847
  %1 = load i32, i32* %value.addr, align 4, !dbg !8848
  call void @mdio_device_reset(%struct.mdio_device* %mdio, i32 %1) #10, !dbg !8849
  ret void, !dbg !8850
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_scan_fixups(%struct.phy_device* %phydev) #0 !dbg !8851 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %fixup = alloca %struct.phy_fixup*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.phy_fixup*, align 8
  %err = alloca i32, align 4
  %__mptr5 = alloca i8*, align 8
  %tmp9 = alloca %struct.phy_fixup*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !8852, metadata !DIExpression()), !dbg !8853
  call void @llvm.dbg.declare(metadata %struct.phy_fixup** %fixup, metadata !8854, metadata !DIExpression()), !dbg !8855
  call void @mutex_lock(%struct.mutex* @phy_fixup_lock) #10, !dbg !8856
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8857, metadata !DIExpression()), !dbg !8860
  %0 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @phy_fixup_list, i32 0, i32 0), align 8, !dbg !8860
  %1 = bitcast %struct.list_head* %0 to i8*, !dbg !8860
  store i8* %1, i8** %__mptr, align 8, !dbg !8860
  br label %do.body, !dbg !8860

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8861

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8860
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8860
  %3 = bitcast i8* %add.ptr to %struct.phy_fixup*, !dbg !8860
  store %struct.phy_fixup* %3, %struct.phy_fixup** %tmp, align 8, !dbg !8861
  %4 = load %struct.phy_fixup*, %struct.phy_fixup** %tmp, align 8, !dbg !8860
  store %struct.phy_fixup* %4, %struct.phy_fixup** %fixup, align 8, !dbg !8863
  br label %for.cond, !dbg !8863

for.cond:                                         ; preds = %do.end8, %do.end
  %5 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup, align 8, !dbg !8864
  %list = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %5, i32 0, i32 0, !dbg !8864
  %cmp = icmp eq %struct.list_head* %list, @phy_fixup_list, !dbg !8864
  %lnot = xor i1 %cmp, true, !dbg !8864
  br i1 %lnot, label %for.body, label %for.end, !dbg !8863

for.body:                                         ; preds = %for.cond
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8866
  %7 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup, align 8, !dbg !8869
  %call = call i32 @phy_needs_fixup(%struct.phy_device* %6, %struct.phy_fixup* %7) #10, !dbg !8870
  %tobool = icmp ne i32 %call, 0, !dbg !8870
  br i1 %tobool, label %if.then, label %if.end4, !dbg !8871

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %err, metadata !8872, metadata !DIExpression()), !dbg !8874
  %8 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup, align 8, !dbg !8875
  %run = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %8, i32 0, i32 4, !dbg !8876
  %9 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %run, align 8, !dbg !8876
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8877
  %call1 = call i32 %9(%struct.phy_device* %10) #10, !dbg !8875
  store i32 %call1, i32* %err, align 4, !dbg !8874
  %11 = load i32, i32* %err, align 4, !dbg !8878
  %cmp2 = icmp slt i32 %11, 0, !dbg !8880
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !8881

if.then3:                                         ; preds = %if.then
  call void @mutex_unlock(%struct.mutex* @phy_fixup_lock) #10, !dbg !8882
  %12 = load i32, i32* %err, align 4, !dbg !8884
  store i32 %12, i32* %retval, align 4, !dbg !8885
  br label %return, !dbg !8885

if.end:                                           ; preds = %if.then
  %13 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8886
  %has_fixups = getelementptr inbounds %struct.phy_device, %struct.phy_device* %13, i32 0, i32 4, !dbg !8887
  %bf.load = load i16, i16* %has_fixups, align 4, !dbg !8888
  %bf.clear = and i16 %bf.load, -17, !dbg !8888
  %bf.set = or i16 %bf.clear, 16, !dbg !8888
  store i16 %bf.set, i16* %has_fixups, align 4, !dbg !8888
  br label %if.end4, !dbg !8889

if.end4:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !8890

for.inc:                                          ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !8891, metadata !DIExpression()), !dbg !8893
  %14 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup, align 8, !dbg !8893
  %list6 = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %14, i32 0, i32 0, !dbg !8893
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list6, i32 0, i32 0, !dbg !8893
  %15 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8893
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !8893
  store i8* %16, i8** %__mptr5, align 8, !dbg !8893
  br label %do.body7, !dbg !8893

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !8894

do.end8:                                          ; preds = %do.body7
  %17 = load i8*, i8** %__mptr5, align 8, !dbg !8893
  %add.ptr10 = getelementptr i8, i8* %17, i64 0, !dbg !8893
  %18 = bitcast i8* %add.ptr10 to %struct.phy_fixup*, !dbg !8893
  store %struct.phy_fixup* %18, %struct.phy_fixup** %tmp9, align 8, !dbg !8894
  %19 = load %struct.phy_fixup*, %struct.phy_fixup** %tmp9, align 8, !dbg !8893
  store %struct.phy_fixup* %19, %struct.phy_fixup** %fixup, align 8, !dbg !8864
  br label %for.cond, !dbg !8864, !llvm.loop !8896

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @phy_fixup_lock) #10, !dbg !8898
  store i32 0, i32* %retval, align 4, !dbg !8899
  br label %return, !dbg !8899

return:                                           ; preds = %for.end, %if.then3
  %20 = load i32, i32* %retval, align 4, !dbg !8900
  ret i32 %20, !dbg !8900
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @device_add(%struct.device*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local i32 @mdiobus_unregister_device(%struct.mdio_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_device_remove(%struct.phy_device* %phydev) #0 !dbg !8901 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !8902, metadata !DIExpression()), !dbg !8903
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8904
  %mii_ts = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 32, !dbg !8906
  %1 = load %struct.mii_timestamper*, %struct.mii_timestamper** %mii_ts, align 8, !dbg !8906
  %tobool = icmp ne %struct.mii_timestamper* %1, null, !dbg !8904
  br i1 %tobool, label %if.then, label %if.end, !dbg !8907

if.then:                                          ; preds = %entry
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8908
  %mii_ts1 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 32, !dbg !8909
  %3 = load %struct.mii_timestamper*, %struct.mii_timestamper** %mii_ts1, align 8, !dbg !8909
  call void @unregister_mii_timestamper(%struct.mii_timestamper* %3) #10, !dbg !8910
  br label %if.end, !dbg !8910

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8911
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %4, i32 0, i32 0, !dbg !8912
  %dev = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 0, !dbg !8913
  call void @device_del(%struct.device* %dev) #10, !dbg !8914
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8915
  call void @phy_device_reset(%struct.phy_device* %5, i32 1) #10, !dbg !8916
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8917
  %mdio2 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %6, i32 0, i32 0, !dbg !8918
  %call = call i32 @mdiobus_unregister_device(%struct.mdio_device* %mdio2) #10, !dbg !8919
  ret void, !dbg !8920
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @unregister_mii_timestamper(%struct.mii_timestamper* %mii_ts) #0 !dbg !8921 {
entry:
  %mii_ts.addr = alloca %struct.mii_timestamper*, align 8
  store %struct.mii_timestamper* %mii_ts, %struct.mii_timestamper** %mii_ts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mii_timestamper** %mii_ts.addr, metadata !8924, metadata !DIExpression()), !dbg !8925
  ret void, !dbg !8926
}

; Function Attrs: noredzone
declare dso_local void @device_del(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.phy_device* @phy_find_first(%struct.mii_bus* %bus) #0 !dbg !8927 {
entry:
  %retval = alloca %struct.phy_device*, align 8
  %bus.addr = alloca %struct.mii_bus*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  %addr = alloca i32, align 4
  store %struct.mii_bus* %bus, %struct.mii_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mii_bus** %bus.addr, metadata !8930, metadata !DIExpression()), !dbg !8931
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !8932, metadata !DIExpression()), !dbg !8933
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !8934, metadata !DIExpression()), !dbg !8935
  store i32 0, i32* %addr, align 4, !dbg !8936
  br label %for.cond, !dbg !8938

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %addr, align 4, !dbg !8939
  %cmp = icmp slt i32 %0, 32, !dbg !8941
  br i1 %cmp, label %for.body, label %for.end, !dbg !8942

for.body:                                         ; preds = %for.cond
  %1 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !8943
  %2 = load i32, i32* %addr, align 4, !dbg !8945
  %call = call %struct.phy_device* @mdiobus_get_phy(%struct.mii_bus* %1, i32 %2) #10, !dbg !8946
  store %struct.phy_device* %call, %struct.phy_device** %phydev, align 8, !dbg !8947
  %3 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !8948
  %tobool = icmp ne %struct.phy_device* %3, null, !dbg !8948
  br i1 %tobool, label %if.then, label %if.end, !dbg !8950

if.then:                                          ; preds = %for.body
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !8951
  store %struct.phy_device* %4, %struct.phy_device** %retval, align 8, !dbg !8952
  br label %return, !dbg !8952

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8953

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %addr, align 4, !dbg !8954
  %inc = add i32 %5, 1, !dbg !8954
  store i32 %inc, i32* %addr, align 4, !dbg !8954
  br label %for.cond, !dbg !8955, !llvm.loop !8956

for.end:                                          ; preds = %for.cond
  store %struct.phy_device* null, %struct.phy_device** %retval, align 8, !dbg !8958
  br label %return, !dbg !8958

return:                                           ; preds = %for.end, %if.then
  %6 = load %struct.phy_device*, %struct.phy_device** %retval, align 8, !dbg !8959
  ret %struct.phy_device* %6, !dbg !8959
}

; Function Attrs: noredzone
declare dso_local %struct.phy_device* @mdiobus_get_phy(%struct.mii_bus*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_connect_direct(%struct.net_device* %dev, %struct.phy_device* %phydev, void (%struct.net_device*)* %handler, i32 %interface) #0 !dbg !8960 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %phydev.addr = alloca %struct.phy_device*, align 8
  %handler.addr = alloca void (%struct.net_device*)*, align 8
  %interface.addr = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !8963, metadata !DIExpression()), !dbg !8964
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !8965, metadata !DIExpression()), !dbg !8966
  store void (%struct.net_device*)* %handler, void (%struct.net_device*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.net_device*)** %handler.addr, metadata !8967, metadata !DIExpression()), !dbg !8968
  store i32 %interface, i32* %interface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interface.addr, metadata !8969, metadata !DIExpression()), !dbg !8970
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8971, metadata !DIExpression()), !dbg !8972
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !8973
  %tobool = icmp ne %struct.net_device* %0, null, !dbg !8973
  br i1 %tobool, label %if.end, label %if.then, !dbg !8975

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8976
  br label %return, !dbg !8976

if.end:                                           ; preds = %entry
  %1 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !8977
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8978
  %3 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8979
  %dev_flags = getelementptr inbounds %struct.phy_device, %struct.phy_device* %3, i32 0, i32 6, !dbg !8980
  %4 = load i32, i32* %dev_flags, align 4, !dbg !8980
  %5 = load i32, i32* %interface.addr, align 4, !dbg !8981
  %call = call i32 @phy_attach_direct(%struct.net_device* %1, %struct.phy_device* %2, i32 %4, i32 %5) #10, !dbg !8982
  store i32 %call, i32* %rc, align 4, !dbg !8983
  %6 = load i32, i32* %rc, align 4, !dbg !8984
  %tobool1 = icmp ne i32 %6, 0, !dbg !8984
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !8986

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %rc, align 4, !dbg !8987
  store i32 %7, i32* %retval, align 4, !dbg !8988
  br label %return, !dbg !8988

if.end3:                                          ; preds = %if.end
  %8 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8989
  %9 = load void (%struct.net_device*)*, void (%struct.net_device*)** %handler.addr, align 8, !dbg !8990
  call void @phy_prepare_link(%struct.phy_device* %8, void (%struct.net_device*)* %9) #10, !dbg !8991
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8992
  %call4 = call zeroext i1 @phy_interrupt_is_valid(%struct.phy_device* %10) #10, !dbg !8994
  br i1 %call4, label %if.then5, label %if.end6, !dbg !8995

if.then5:                                         ; preds = %if.end3
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !8996
  call void @phy_request_interrupt(%struct.phy_device* %11) #10, !dbg !8997
  br label %if.end6, !dbg !8997

if.end6:                                          ; preds = %if.then5, %if.end3
  store i32 0, i32* %retval, align 4, !dbg !8998
  br label %return, !dbg !8998

return:                                           ; preds = %if.end6, %if.then2, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !8999
  ret i32 %12, !dbg !8999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_attach_direct(%struct.net_device* %dev, %struct.phy_device* %phydev, i32 %flags, i32 %interface) #0 !dbg !9000 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.net_device*, align 8
  %phydev.addr = alloca %struct.phy_device*, align 8
  %flags.addr = alloca i32, align 4
  %interface.addr = alloca i32, align 4
  %bus = alloca %struct.mii_bus*, align 8
  %d = alloca %struct.device*, align 8
  %ndev_owner = alloca %struct.module*, align 8
  %using_genphy = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !9003, metadata !DIExpression()), !dbg !9004
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !9005, metadata !DIExpression()), !dbg !9006
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9007, metadata !DIExpression()), !dbg !9008
  store i32 %interface, i32* %interface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interface.addr, metadata !9009, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.declare(metadata %struct.mii_bus** %bus, metadata !9011, metadata !DIExpression()), !dbg !9012
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9013
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 0, !dbg !9014
  %bus1 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 1, !dbg !9015
  %1 = load %struct.mii_bus*, %struct.mii_bus** %bus1, align 8, !dbg !9015
  store %struct.mii_bus* %1, %struct.mii_bus** %bus, align 8, !dbg !9012
  call void @llvm.dbg.declare(metadata %struct.device** %d, metadata !9016, metadata !DIExpression()), !dbg !9017
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9018
  %mdio2 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 0, !dbg !9019
  %dev3 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio2, i32 0, i32 0, !dbg !9020
  store %struct.device* %dev3, %struct.device** %d, align 8, !dbg !9017
  call void @llvm.dbg.declare(metadata %struct.module** %ndev_owner, metadata !9021, metadata !DIExpression()), !dbg !9022
  store %struct.module* null, %struct.module** %ndev_owner, align 8, !dbg !9022
  call void @llvm.dbg.declare(metadata i8* %using_genphy, metadata !9023, metadata !DIExpression()), !dbg !9024
  store i8 0, i8* %using_genphy, align 1, !dbg !9024
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9025, metadata !DIExpression()), !dbg !9026
  %3 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9027
  %tobool = icmp ne %struct.net_device* %3, null, !dbg !9027
  br i1 %tobool, label %if.then, label %if.end, !dbg !9029

if.then:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9030
  %dev4 = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 106, !dbg !9031
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev4, i32 0, i32 1, !dbg !9032
  %5 = load %struct.device*, %struct.device** %parent, align 8, !dbg !9032
  %driver = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 6, !dbg !9033
  %6 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !9033
  %owner = getelementptr inbounds %struct.device_driver, %struct.device_driver* %6, i32 0, i32 2, !dbg !9034
  %7 = load %struct.module*, %struct.module** %owner, align 8, !dbg !9034
  store %struct.module* %7, %struct.module** %ndev_owner, align 8, !dbg !9035
  br label %if.end, !dbg !9036

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.module*, %struct.module** %ndev_owner, align 8, !dbg !9037
  %9 = load %struct.mii_bus*, %struct.mii_bus** %bus, align 8, !dbg !9039
  %owner5 = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %9, i32 0, i32 0, !dbg !9040
  %10 = load %struct.module*, %struct.module** %owner5, align 8, !dbg !9040
  %cmp = icmp ne %struct.module* %8, %10, !dbg !9041
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !9042

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.mii_bus*, %struct.mii_bus** %bus, align 8, !dbg !9043
  %owner6 = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %11, i32 0, i32 0, !dbg !9044
  %12 = load %struct.module*, %struct.module** %owner6, align 8, !dbg !9044
  %call = call zeroext i1 @try_module_get(%struct.module* %12) #10, !dbg !9045
  br i1 %call, label %if.end10, label %if.then7, !dbg !9046

if.then7:                                         ; preds = %land.lhs.true
  %13 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9047
  %mdio8 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %13, i32 0, i32 0, !dbg !9047
  %dev9 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio8, i32 0, i32 0, !dbg !9047
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev9, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i64 0, i64 0)) #13, !dbg !9047
  store i32 -5, i32* %retval, align 4, !dbg !9049
  br label %return, !dbg !9049

if.end10:                                         ; preds = %land.lhs.true, %if.end
  %14 = load %struct.device*, %struct.device** %d, align 8, !dbg !9050
  %call11 = call %struct.device* @get_device(%struct.device* %14) #10, !dbg !9051
  %15 = load %struct.device*, %struct.device** %d, align 8, !dbg !9052
  %driver12 = getelementptr inbounds %struct.device, %struct.device* %15, i32 0, i32 6, !dbg !9054
  %16 = load %struct.device_driver*, %struct.device_driver** %driver12, align 8, !dbg !9054
  %tobool13 = icmp ne %struct.device_driver* %16, null, !dbg !9052
  br i1 %tobool13, label %if.end20, label %if.then14, !dbg !9055

if.then14:                                        ; preds = %if.end10
  %17 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9056
  %is_c45 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %17, i32 0, i32 4, !dbg !9059
  %bf.load = load i16, i16* %is_c45, align 4, !dbg !9059
  %bf.clear = and i16 %bf.load, 1, !dbg !9059
  %bf.cast = zext i16 %bf.clear to i32, !dbg !9059
  %tobool15 = icmp ne i32 %bf.cast, 0, !dbg !9056
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !9060

if.then16:                                        ; preds = %if.then14
  %18 = load %struct.device*, %struct.device** %d, align 8, !dbg !9061
  %driver17 = getelementptr inbounds %struct.device, %struct.device* %18, i32 0, i32 6, !dbg !9062
  store %struct.device_driver* getelementptr inbounds (%struct.phy_driver, %struct.phy_driver* @genphy_c45_driver, i32 0, i32 0, i32 0), %struct.device_driver** %driver17, align 8, !dbg !9063
  br label %if.end19, !dbg !9061

if.else:                                          ; preds = %if.then14
  %19 = load %struct.device*, %struct.device** %d, align 8, !dbg !9064
  %driver18 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 6, !dbg !9065
  store %struct.device_driver* getelementptr inbounds (%struct.phy_driver, %struct.phy_driver* bitcast ({ %struct.mdio_driver_common, i32, i8*, i32, i64*, i32, i8*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*, i32, i16)*, i32 (%struct.phy_device*, i32, i16, i16)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, i32)*, i32 (%struct.phy_device*, %struct.ethtool_modinfo*)*, i32 (%struct.phy_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.phy_tdr_config*)*, i32 (%struct.phy_device*, i8*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*, i8*)*, void (%struct.phy_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, i1)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)* }* @genphy_driver to %struct.phy_driver*), i32 0, i32 0, i32 0), %struct.device_driver** %driver18, align 8, !dbg !9066
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then16
  store i8 1, i8* %using_genphy, align 1, !dbg !9067
  br label %if.end20, !dbg !9068

if.end20:                                         ; preds = %if.end19, %if.end10
  %20 = load %struct.device*, %struct.device** %d, align 8, !dbg !9069
  %driver21 = getelementptr inbounds %struct.device, %struct.device* %20, i32 0, i32 6, !dbg !9071
  %21 = load %struct.device_driver*, %struct.device_driver** %driver21, align 8, !dbg !9071
  %owner22 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %21, i32 0, i32 2, !dbg !9072
  %22 = load %struct.module*, %struct.module** %owner22, align 8, !dbg !9072
  %call23 = call zeroext i1 @try_module_get(%struct.module* %22) #10, !dbg !9073
  br i1 %call23, label %if.end27, label %if.then24, !dbg !9074

if.then24:                                        ; preds = %if.end20
  %23 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9075
  %mdio25 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %23, i32 0, i32 0, !dbg !9075
  %dev26 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio25, i32 0, i32 0, !dbg !9075
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev26, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0)) #13, !dbg !9075
  store i32 -5, i32* %err, align 4, !dbg !9077
  br label %error_put_device, !dbg !9078

if.end27:                                         ; preds = %if.end20
  %24 = load i8, i8* %using_genphy, align 1, !dbg !9079
  %tobool28 = trunc i8 %24 to i1, !dbg !9079
  br i1 %tobool28, label %if.then29, label %if.end39, !dbg !9081

if.then29:                                        ; preds = %if.end27
  %25 = load %struct.device*, %struct.device** %d, align 8, !dbg !9082
  %driver30 = getelementptr inbounds %struct.device, %struct.device* %25, i32 0, i32 6, !dbg !9084
  %26 = load %struct.device_driver*, %struct.device_driver** %driver30, align 8, !dbg !9084
  %probe = getelementptr inbounds %struct.device_driver, %struct.device_driver* %26, i32 0, i32 8, !dbg !9085
  %27 = load i32 (%struct.device*)*, i32 (%struct.device*)** %probe, align 8, !dbg !9085
  %28 = load %struct.device*, %struct.device** %d, align 8, !dbg !9086
  %call31 = call i32 %27(%struct.device* %28) #10, !dbg !9082
  store i32 %call31, i32* %err, align 4, !dbg !9087
  %29 = load i32, i32* %err, align 4, !dbg !9088
  %cmp32 = icmp sge i32 %29, 0, !dbg !9090
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !9091

if.then33:                                        ; preds = %if.then29
  %30 = load %struct.device*, %struct.device** %d, align 8, !dbg !9092
  %call34 = call i32 @device_bind_driver(%struct.device* %30) #10, !dbg !9093
  store i32 %call34, i32* %err, align 4, !dbg !9094
  br label %if.end35, !dbg !9095

if.end35:                                         ; preds = %if.then33, %if.then29
  %31 = load i32, i32* %err, align 4, !dbg !9096
  %tobool36 = icmp ne i32 %31, 0, !dbg !9096
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !9098

if.then37:                                        ; preds = %if.end35
  br label %error_module_put, !dbg !9099

if.end38:                                         ; preds = %if.end35
  br label %if.end39, !dbg !9100

if.end39:                                         ; preds = %if.end38, %if.end27
  %32 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9101
  %attached_dev = getelementptr inbounds %struct.phy_device, %struct.phy_device* %32, i32 0, i32 31, !dbg !9103
  %33 = load %struct.net_device*, %struct.net_device** %attached_dev, align 8, !dbg !9103
  %tobool40 = icmp ne %struct.net_device* %33, null, !dbg !9101
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !9104

if.then41:                                        ; preds = %if.end39
  %34 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9105
  %dev42 = getelementptr inbounds %struct.net_device, %struct.net_device* %34, i32 0, i32 106, !dbg !9105
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev42, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0)) #13, !dbg !9105
  store i32 -16, i32* %err, align 4, !dbg !9107
  br label %error, !dbg !9108

if.end43:                                         ; preds = %if.end39
  %35 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9109
  %phy_link_change = getelementptr inbounds %struct.phy_device, %struct.phy_device* %35, i32 0, i32 35, !dbg !9110
  store void (%struct.phy_device*, i1)* @phy_link_change, void (%struct.phy_device*, i1)** %phy_link_change, align 8, !dbg !9111
  %36 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9112
  %tobool44 = icmp ne %struct.net_device* %36, null, !dbg !9112
  br i1 %tobool44, label %if.then45, label %if.end52, !dbg !9114

if.then45:                                        ; preds = %if.end43
  %37 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9115
  %38 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9117
  %attached_dev46 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %38, i32 0, i32 31, !dbg !9118
  store %struct.net_device* %37, %struct.net_device** %attached_dev46, align 8, !dbg !9119
  %39 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9120
  %40 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9121
  %phydev47 = getelementptr inbounds %struct.net_device, %struct.net_device* %40, i32 0, i32 115, !dbg !9122
  store %struct.phy_device* %39, %struct.phy_device** %phydev47, align 8, !dbg !9123
  %41 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9124
  %sfp_bus_attached = getelementptr inbounds %struct.phy_device, %struct.phy_device* %41, i32 0, i32 28, !dbg !9126
  %42 = load i8, i8* %sfp_bus_attached, align 8, !dbg !9126
  %tobool48 = trunc i8 %42 to i1, !dbg !9126
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !9127

if.then49:                                        ; preds = %if.then45
  %43 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9128
  %sfp_bus = getelementptr inbounds %struct.phy_device, %struct.phy_device* %43, i32 0, i32 29, !dbg !9129
  %44 = load %struct.sfp_bus*, %struct.sfp_bus** %sfp_bus, align 8, !dbg !9129
  %45 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9130
  %sfp_bus50 = getelementptr inbounds %struct.net_device, %struct.net_device* %45, i32 0, i32 116, !dbg !9131
  store %struct.sfp_bus* %44, %struct.sfp_bus** %sfp_bus50, align 8, !dbg !9132
  br label %if.end51, !dbg !9130

if.end51:                                         ; preds = %if.then49, %if.then45
  br label %if.end52, !dbg !9133

if.end52:                                         ; preds = %if.end51, %if.end43
  %46 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9134
  %sysfs_links = getelementptr inbounds %struct.phy_device, %struct.phy_device* %46, i32 0, i32 4, !dbg !9135
  %bf.load53 = load i16, i16* %sysfs_links, align 4, !dbg !9136
  %bf.clear54 = and i16 %bf.load53, -129, !dbg !9136
  store i16 %bf.clear54, i16* %sysfs_links, align 4, !dbg !9136
  %47 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9137
  call void @phy_sysfs_create_links(%struct.phy_device* %47) #10, !dbg !9138
  %48 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9139
  %attached_dev55 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %48, i32 0, i32 31, !dbg !9141
  %49 = load %struct.net_device*, %struct.net_device** %attached_dev55, align 8, !dbg !9141
  %tobool56 = icmp ne %struct.net_device* %49, null, !dbg !9139
  br i1 %tobool56, label %if.end66, label %if.then57, !dbg !9142

if.then57:                                        ; preds = %if.end52
  %50 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9143
  %mdio58 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %50, i32 0, i32 0, !dbg !9145
  %dev59 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio58, i32 0, i32 0, !dbg !9146
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev59, i32 0, i32 0, !dbg !9147
  %call60 = call i32 @sysfs_create_file(%struct.kobject* %kobj, %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_phy_standalone, i32 0, i32 0)) #10, !dbg !9148
  store i32 %call60, i32* %err, align 4, !dbg !9149
  %51 = load i32, i32* %err, align 4, !dbg !9150
  %tobool61 = icmp ne i32 %51, 0, !dbg !9150
  br i1 %tobool61, label %if.then62, label %if.end65, !dbg !9152

if.then62:                                        ; preds = %if.then57
  %52 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9153
  %mdio63 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %52, i32 0, i32 0, !dbg !9153
  %dev64 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio63, i32 0, i32 0, !dbg !9153
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev64, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.16, i64 0, i64 0)) #13, !dbg !9153
  br label %if.end65, !dbg !9153

if.end65:                                         ; preds = %if.then62, %if.then57
  br label %if.end66, !dbg !9154

if.end66:                                         ; preds = %if.end65, %if.end52
  %53 = load i32, i32* %flags.addr, align 4, !dbg !9155
  %54 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9156
  %dev_flags = getelementptr inbounds %struct.phy_device, %struct.phy_device* %54, i32 0, i32 6, !dbg !9157
  %55 = load i32, i32* %dev_flags, align 4, !dbg !9158
  %or = or i32 %55, %53, !dbg !9158
  store i32 %or, i32* %dev_flags, align 4, !dbg !9158
  %56 = load i32, i32* %interface.addr, align 4, !dbg !9159
  %57 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9160
  %interface67 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %57, i32 0, i32 7, !dbg !9161
  store i32 %56, i32* %interface67, align 8, !dbg !9162
  %58 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9163
  %state = getelementptr inbounds %struct.phy_device, %struct.phy_device* %58, i32 0, i32 5, !dbg !9164
  store i32 1, i32* %state, align 8, !dbg !9165
  %59 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9166
  %tobool68 = icmp ne %struct.net_device* %59, null, !dbg !9166
  br i1 %tobool68, label %if.then69, label %if.end71, !dbg !9168

if.then69:                                        ; preds = %if.end66
  %60 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9169
  %attached_dev70 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %60, i32 0, i32 31, !dbg !9170
  %61 = load %struct.net_device*, %struct.net_device** %attached_dev70, align 8, !dbg !9170
  call void @netif_carrier_off(%struct.net_device* %61) #10, !dbg !9171
  br label %if.end71, !dbg !9171

if.end71:                                         ; preds = %if.then69, %if.end66
  %62 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9172
  %call72 = call i32 @phy_init_hw(%struct.phy_device* %62) #10, !dbg !9173
  store i32 %call72, i32* %err, align 4, !dbg !9174
  %63 = load i32, i32* %err, align 4, !dbg !9175
  %tobool73 = icmp ne i32 %63, 0, !dbg !9175
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !9177

if.then74:                                        ; preds = %if.end71
  br label %error, !dbg !9178

if.end75:                                         ; preds = %if.end71
  %64 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9179
  %call76 = call i32 @phy_disable_interrupts(%struct.phy_device* %64) #10, !dbg !9180
  store i32 %call76, i32* %err, align 4, !dbg !9181
  %65 = load i32, i32* %err, align 4, !dbg !9182
  %tobool77 = icmp ne i32 %65, 0, !dbg !9182
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !9184

if.then78:                                        ; preds = %if.end75
  %66 = load i32, i32* %err, align 4, !dbg !9185
  store i32 %66, i32* %retval, align 4, !dbg !9186
  br label %return, !dbg !9186

if.end79:                                         ; preds = %if.end75
  %67 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9187
  %call80 = call i32 @phy_resume(%struct.phy_device* %67) #10, !dbg !9188
  %68 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9189
  %call81 = call i32 @phy_led_triggers_register(%struct.phy_device* %68) #10, !dbg !9190
  %69 = load i32, i32* %err, align 4, !dbg !9191
  store i32 %69, i32* %retval, align 4, !dbg !9192
  br label %return, !dbg !9192

error:                                            ; preds = %if.then74, %if.then41
  call void @llvm.dbg.label(metadata !9193), !dbg !9194
  %70 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9195
  call void @phy_detach(%struct.phy_device* %70) #10, !dbg !9196
  %71 = load i32, i32* %err, align 4, !dbg !9197
  store i32 %71, i32* %retval, align 4, !dbg !9198
  br label %return, !dbg !9198

error_module_put:                                 ; preds = %if.then37
  call void @llvm.dbg.label(metadata !9199), !dbg !9200
  %72 = load %struct.device*, %struct.device** %d, align 8, !dbg !9201
  %driver82 = getelementptr inbounds %struct.device, %struct.device* %72, i32 0, i32 6, !dbg !9202
  %73 = load %struct.device_driver*, %struct.device_driver** %driver82, align 8, !dbg !9202
  %owner83 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %73, i32 0, i32 2, !dbg !9203
  %74 = load %struct.module*, %struct.module** %owner83, align 8, !dbg !9203
  call void @module_put(%struct.module* %74) #10, !dbg !9204
  br label %error_put_device, !dbg !9204

error_put_device:                                 ; preds = %error_module_put, %if.then24
  call void @llvm.dbg.label(metadata !9205), !dbg !9206
  %75 = load %struct.device*, %struct.device** %d, align 8, !dbg !9207
  call void @put_device(%struct.device* %75) #10, !dbg !9208
  %76 = load %struct.module*, %struct.module** %ndev_owner, align 8, !dbg !9209
  %77 = load %struct.mii_bus*, %struct.mii_bus** %bus, align 8, !dbg !9211
  %owner84 = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %77, i32 0, i32 0, !dbg !9212
  %78 = load %struct.module*, %struct.module** %owner84, align 8, !dbg !9212
  %cmp85 = icmp ne %struct.module* %76, %78, !dbg !9213
  br i1 %cmp85, label %if.then86, label %if.end88, !dbg !9214

if.then86:                                        ; preds = %error_put_device
  %79 = load %struct.mii_bus*, %struct.mii_bus** %bus, align 8, !dbg !9215
  %owner87 = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %79, i32 0, i32 0, !dbg !9216
  %80 = load %struct.module*, %struct.module** %owner87, align 8, !dbg !9216
  call void @module_put(%struct.module* %80) #10, !dbg !9217
  br label %if.end88, !dbg !9217

if.end88:                                         ; preds = %if.then86, %error_put_device
  %81 = load i32, i32* %err, align 4, !dbg !9218
  store i32 %81, i32* %retval, align 4, !dbg !9219
  br label %return, !dbg !9219

return:                                           ; preds = %if.end88, %error, %if.end79, %if.then78, %if.then7
  %82 = load i32, i32* %retval, align 4, !dbg !9220
  ret i32 %82, !dbg !9220
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @phy_prepare_link(%struct.phy_device* %phydev, void (%struct.net_device*)* %handler) #0 !dbg !9221 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %handler.addr = alloca void (%struct.net_device*)*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !9224, metadata !DIExpression()), !dbg !9225
  store void (%struct.net_device*)* %handler, void (%struct.net_device*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.net_device*)** %handler.addr, metadata !9226, metadata !DIExpression()), !dbg !9227
  %0 = load void (%struct.net_device*)*, void (%struct.net_device*)** %handler.addr, align 8, !dbg !9228
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9229
  %adjust_link = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 36, !dbg !9230
  store void (%struct.net_device*)* %0, void (%struct.net_device*)** %adjust_link, align 8, !dbg !9231
  ret void, !dbg !9232
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @phy_interrupt_is_valid(%struct.phy_device* %phydev) #0 !dbg !9233 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !9236, metadata !DIExpression()), !dbg !9237
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9238
  %irq = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 20, !dbg !9239
  %1 = load i32, i32* %irq, align 4, !dbg !9239
  %cmp = icmp ne i32 %1, -1, !dbg !9240
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9241

land.rhs:                                         ; preds = %entry
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9242
  %irq1 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 20, !dbg !9243
  %3 = load i32, i32* %irq1, align 4, !dbg !9243
  %cmp2 = icmp ne i32 %3, -2, !dbg !9244
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp2, %land.rhs ], !dbg !9245
  ret i1 %4, !dbg !9246
}

; Function Attrs: noredzone
declare dso_local void @phy_request_interrupt(%struct.phy_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.phy_device* @phy_connect(%struct.net_device* %dev, i8* %bus_id, void (%struct.net_device*)* %handler, i32 %interface) #0 !dbg !9247 {
entry:
  %retval = alloca %struct.phy_device*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %bus_id.addr = alloca i8*, align 8
  %handler.addr = alloca void (%struct.net_device*)*, align 8
  %interface.addr = alloca i32, align 4
  %phydev = alloca %struct.phy_device*, align 8
  %d = alloca %struct.device*, align 8
  %rc = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp = alloca %struct.mdio_device*, align 8
  %tmp6 = alloca %struct.phy_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !9250, metadata !DIExpression()), !dbg !9251
  store i8* %bus_id, i8** %bus_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bus_id.addr, metadata !9252, metadata !DIExpression()), !dbg !9253
  store void (%struct.net_device*)* %handler, void (%struct.net_device*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.net_device*)** %handler.addr, metadata !9254, metadata !DIExpression()), !dbg !9255
  store i32 %interface, i32* %interface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interface.addr, metadata !9256, metadata !DIExpression()), !dbg !9257
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !9258, metadata !DIExpression()), !dbg !9259
  call void @llvm.dbg.declare(metadata %struct.device** %d, metadata !9260, metadata !DIExpression()), !dbg !9261
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !9262, metadata !DIExpression()), !dbg !9263
  %0 = load i8*, i8** %bus_id.addr, align 8, !dbg !9264
  %call = call %struct.device* @bus_find_device_by_name(%struct.bus_type* @mdio_bus_type, %struct.device* null, i8* %0) #10, !dbg !9265
  store %struct.device* %call, %struct.device** %d, align 8, !dbg !9266
  %1 = load %struct.device*, %struct.device** %d, align 8, !dbg !9267
  %tobool = icmp ne %struct.device* %1, null, !dbg !9267
  br i1 %tobool, label %if.end, label %if.then, !dbg !9269

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %bus_id.addr, align 8, !dbg !9270
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* %2) #13, !dbg !9270
  %call2 = call i8* @ERR_PTR(i64 -19) #10, !dbg !9272
  %3 = bitcast i8* %call2 to %struct.phy_device*, !dbg !9272
  store %struct.phy_device* %3, %struct.phy_device** %retval, align 8, !dbg !9273
  br label %return, !dbg !9273

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9274, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !9277, metadata !DIExpression()), !dbg !9279
  %4 = load %struct.device*, %struct.device** %d, align 8, !dbg !9279
  %5 = bitcast %struct.device* %4 to i8*, !dbg !9279
  store i8* %5, i8** %__mptr3, align 8, !dbg !9279
  br label %do.body, !dbg !9279

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9280

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr3, align 8, !dbg !9279
  %add.ptr = getelementptr i8, i8* %6, i64 0, !dbg !9279
  %7 = bitcast i8* %add.ptr to %struct.mdio_device*, !dbg !9279
  store %struct.mdio_device* %7, %struct.mdio_device** %tmp, align 8, !dbg !9280
  %8 = load %struct.mdio_device*, %struct.mdio_device** %tmp, align 8, !dbg !9279
  %9 = bitcast %struct.mdio_device* %8 to i8*, !dbg !9276
  store i8* %9, i8** %__mptr, align 8, !dbg !9276
  br label %do.body4, !dbg !9276

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !9282

do.end5:                                          ; preds = %do.body4
  %10 = load i8*, i8** %__mptr, align 8, !dbg !9276
  %add.ptr7 = getelementptr i8, i8* %10, i64 0, !dbg !9276
  %11 = bitcast i8* %add.ptr7 to %struct.phy_device*, !dbg !9276
  store %struct.phy_device* %11, %struct.phy_device** %tmp6, align 8, !dbg !9282
  %12 = load %struct.phy_device*, %struct.phy_device** %tmp6, align 8, !dbg !9276
  store %struct.phy_device* %12, %struct.phy_device** %phydev, align 8, !dbg !9284
  %13 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !9285
  %14 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !9286
  %15 = load void (%struct.net_device*)*, void (%struct.net_device*)** %handler.addr, align 8, !dbg !9287
  %16 = load i32, i32* %interface.addr, align 4, !dbg !9288
  %call8 = call i32 @phy_connect_direct(%struct.net_device* %13, %struct.phy_device* %14, void (%struct.net_device*)* %15, i32 %16) #10, !dbg !9289
  store i32 %call8, i32* %rc, align 4, !dbg !9290
  %17 = load %struct.device*, %struct.device** %d, align 8, !dbg !9291
  call void @put_device(%struct.device* %17) #10, !dbg !9292
  %18 = load i32, i32* %rc, align 4, !dbg !9293
  %tobool9 = icmp ne i32 %18, 0, !dbg !9293
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !9295

if.then10:                                        ; preds = %do.end5
  %19 = load i32, i32* %rc, align 4, !dbg !9296
  %conv = sext i32 %19 to i64, !dbg !9296
  %call11 = call i8* @ERR_PTR(i64 %conv) #10, !dbg !9297
  %20 = bitcast i8* %call11 to %struct.phy_device*, !dbg !9297
  store %struct.phy_device* %20, %struct.phy_device** %retval, align 8, !dbg !9298
  br label %return, !dbg !9298

if.end12:                                         ; preds = %do.end5
  %21 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !9299
  store %struct.phy_device* %21, %struct.phy_device** %retval, align 8, !dbg !9300
  br label %return, !dbg !9300

return:                                           ; preds = %if.end12, %if.then10, %if.then
  %22 = load %struct.phy_device*, %struct.phy_device** %retval, align 8, !dbg !9301
  ret %struct.phy_device* %22, !dbg !9301
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device* @bus_find_device_by_name(%struct.bus_type* %bus, %struct.device* %start, i8* %name) #0 !dbg !9302 {
entry:
  %bus.addr = alloca %struct.bus_type*, align 8
  %start.addr = alloca %struct.device*, align 8
  %name.addr = alloca i8*, align 8
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !9305, metadata !DIExpression()), !dbg !9306
  store %struct.device* %start, %struct.device** %start.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %start.addr, metadata !9307, metadata !DIExpression()), !dbg !9308
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9309, metadata !DIExpression()), !dbg !9310
  %0 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !9311
  %1 = load %struct.device*, %struct.device** %start.addr, align 8, !dbg !9312
  %2 = load i8*, i8** %name.addr, align 8, !dbg !9313
  %call = call %struct.device* @bus_find_device(%struct.bus_type* %0, %struct.device* %1, i8* %2, i32 (%struct.device*, i8*)* @device_match_name) #10, !dbg !9314
  ret %struct.device* %call, !dbg !9315
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_disconnect(%struct.phy_device* %phydev) #0 !dbg !9316 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !9317, metadata !DIExpression()), !dbg !9318
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9319
  %call = call zeroext i1 @phy_is_started(%struct.phy_device* %0) #10, !dbg !9321
  br i1 %call, label %if.then, label %if.end, !dbg !9322

if.then:                                          ; preds = %entry
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9323
  call void @phy_stop(%struct.phy_device* %1) #10, !dbg !9324
  br label %if.end, !dbg !9324

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9325
  %call1 = call zeroext i1 @phy_interrupt_is_valid(%struct.phy_device* %2) #10, !dbg !9327
  br i1 %call1, label %if.then2, label %if.end3, !dbg !9328

if.then2:                                         ; preds = %if.end
  %3 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9329
  call void @phy_free_interrupt(%struct.phy_device* %3) #10, !dbg !9330
  br label %if.end3, !dbg !9330

if.end3:                                          ; preds = %if.then2, %if.end
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9331
  %adjust_link = getelementptr inbounds %struct.phy_device, %struct.phy_device* %4, i32 0, i32 36, !dbg !9332
  store void (%struct.net_device*)* null, void (%struct.net_device*)** %adjust_link, align 8, !dbg !9333
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9334
  call void @phy_detach(%struct.phy_device* %5) #10, !dbg !9335
  ret void, !dbg !9336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @phy_is_started(%struct.phy_device* %phydev) #0 !dbg !9337 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !9338, metadata !DIExpression()), !dbg !9339
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9340
  %state = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 5, !dbg !9341
  %1 = load i32, i32* %state, align 8, !dbg !9341
  %cmp = icmp uge i32 %1, 3, !dbg !9342
  ret i1 %cmp, !dbg !9343
}

; Function Attrs: noredzone
declare dso_local void @phy_stop(%struct.phy_device*) #2

; Function Attrs: noredzone
declare dso_local void @phy_free_interrupt(%struct.phy_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_detach(%struct.phy_device* %phydev) #0 !dbg !9344 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %dev = alloca %struct.net_device*, align 8
  %ndev_owner = alloca %struct.module*, align 8
  %bus = alloca %struct.mii_bus*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !9345, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !9347, metadata !DIExpression()), !dbg !9348
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9349
  %attached_dev = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 31, !dbg !9350
  %1 = load %struct.net_device*, %struct.net_device** %attached_dev, align 8, !dbg !9350
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !9348
  call void @llvm.dbg.declare(metadata %struct.module** %ndev_owner, metadata !9351, metadata !DIExpression()), !dbg !9352
  store %struct.module* null, %struct.module** %ndev_owner, align 8, !dbg !9352
  call void @llvm.dbg.declare(metadata %struct.mii_bus** %bus, metadata !9353, metadata !DIExpression()), !dbg !9354
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9355
  %sysfs_links = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 4, !dbg !9357
  %bf.load = load i16, i16* %sysfs_links, align 4, !dbg !9357
  %bf.lshr = lshr i16 %bf.load, 7, !dbg !9357
  %bf.clear = and i16 %bf.lshr, 1, !dbg !9357
  %bf.cast = zext i16 %bf.clear to i32, !dbg !9357
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9355
  br i1 %tobool, label %if.then, label %if.end6, !dbg !9358

if.then:                                          ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9359
  %tobool1 = icmp ne %struct.net_device* %3, null, !dbg !9359
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !9362

if.then2:                                         ; preds = %if.then
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9363
  %dev3 = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 106, !dbg !9364
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 0, !dbg !9365
  call void @sysfs_remove_link(%struct.kobject* %kobj, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !9366
  br label %if.end, !dbg !9366

if.end:                                           ; preds = %if.then2, %if.then
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9367
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %5, i32 0, i32 0, !dbg !9368
  %dev4 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 0, !dbg !9369
  %kobj5 = getelementptr inbounds %struct.device, %struct.device* %dev4, i32 0, i32 0, !dbg !9370
  call void @sysfs_remove_link(%struct.kobject* %kobj5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !9371
  br label %if.end6, !dbg !9372

if.end6:                                          ; preds = %if.end, %entry
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9373
  %attached_dev7 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %6, i32 0, i32 31, !dbg !9375
  %7 = load %struct.net_device*, %struct.net_device** %attached_dev7, align 8, !dbg !9375
  %tobool8 = icmp ne %struct.net_device* %7, null, !dbg !9373
  br i1 %tobool8, label %if.end13, label %if.then9, !dbg !9376

if.then9:                                         ; preds = %if.end6
  %8 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9377
  %mdio10 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %8, i32 0, i32 0, !dbg !9378
  %dev11 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio10, i32 0, i32 0, !dbg !9379
  %kobj12 = getelementptr inbounds %struct.device, %struct.device* %dev11, i32 0, i32 0, !dbg !9380
  call void @sysfs_remove_file(%struct.kobject* %kobj12, %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_phy_standalone, i32 0, i32 0)) #10, !dbg !9381
  br label %if.end13, !dbg !9381

if.end13:                                         ; preds = %if.then9, %if.end6
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9382
  %call = call i32 @phy_suspend(%struct.phy_device* %9) #10, !dbg !9383
  %10 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9384
  %tobool14 = icmp ne %struct.net_device* %10, null, !dbg !9384
  br i1 %tobool14, label %if.then15, label %if.end19, !dbg !9386

if.then15:                                        ; preds = %if.end13
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9387
  %attached_dev16 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %11, i32 0, i32 31, !dbg !9389
  %12 = load %struct.net_device*, %struct.net_device** %attached_dev16, align 8, !dbg !9389
  %phydev17 = getelementptr inbounds %struct.net_device, %struct.net_device* %12, i32 0, i32 115, !dbg !9390
  store %struct.phy_device* null, %struct.phy_device** %phydev17, align 8, !dbg !9391
  %13 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9392
  %attached_dev18 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %13, i32 0, i32 31, !dbg !9393
  store %struct.net_device* null, %struct.net_device** %attached_dev18, align 8, !dbg !9394
  br label %if.end19, !dbg !9395

if.end19:                                         ; preds = %if.then15, %if.end13
  %14 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9396
  %phylink = getelementptr inbounds %struct.phy_device, %struct.phy_device* %14, i32 0, i32 30, !dbg !9397
  store %struct.phylink* null, %struct.phylink** %phylink, align 8, !dbg !9398
  %15 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9399
  call void @phy_led_triggers_unregister(%struct.phy_device* %15) #10, !dbg !9400
  %16 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9401
  %mdio20 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %16, i32 0, i32 0, !dbg !9403
  %dev21 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio20, i32 0, i32 0, !dbg !9404
  %driver = getelementptr inbounds %struct.device, %struct.device* %dev21, i32 0, i32 6, !dbg !9405
  %17 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !9405
  %tobool22 = icmp ne %struct.device_driver* %17, null, !dbg !9401
  br i1 %tobool22, label %if.then23, label %if.end27, !dbg !9406

if.then23:                                        ; preds = %if.end19
  %18 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9407
  %mdio24 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %18, i32 0, i32 0, !dbg !9408
  %dev25 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio24, i32 0, i32 0, !dbg !9409
  %driver26 = getelementptr inbounds %struct.device, %struct.device* %dev25, i32 0, i32 6, !dbg !9410
  %19 = load %struct.device_driver*, %struct.device_driver** %driver26, align 8, !dbg !9410
  %owner = getelementptr inbounds %struct.device_driver, %struct.device_driver* %19, i32 0, i32 2, !dbg !9411
  %20 = load %struct.module*, %struct.module** %owner, align 8, !dbg !9411
  call void @module_put(%struct.module* %20) #10, !dbg !9412
  br label %if.end27, !dbg !9412

if.end27:                                         ; preds = %if.then23, %if.end19
  %21 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9413
  %call28 = call zeroext i1 @phy_driver_is_genphy(%struct.phy_device* %21) #10, !dbg !9415
  br i1 %call28, label %if.then30, label %lor.lhs.false, !dbg !9416

lor.lhs.false:                                    ; preds = %if.end27
  %22 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9417
  %call29 = call zeroext i1 @phy_driver_is_genphy_10g(%struct.phy_device* %22) #10, !dbg !9418
  br i1 %call29, label %if.then30, label %if.end33, !dbg !9419

if.then30:                                        ; preds = %lor.lhs.false, %if.end27
  %23 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9420
  %mdio31 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %23, i32 0, i32 0, !dbg !9421
  %dev32 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio31, i32 0, i32 0, !dbg !9422
  call void @device_release_driver(%struct.device* %dev32) #10, !dbg !9423
  br label %if.end33, !dbg !9423

if.end33:                                         ; preds = %if.then30, %lor.lhs.false
  %24 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9424
  %mdio34 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %24, i32 0, i32 0, !dbg !9425
  %bus35 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio34, i32 0, i32 1, !dbg !9426
  %25 = load %struct.mii_bus*, %struct.mii_bus** %bus35, align 8, !dbg !9426
  store %struct.mii_bus* %25, %struct.mii_bus** %bus, align 8, !dbg !9427
  %26 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9428
  %mdio36 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %26, i32 0, i32 0, !dbg !9429
  %dev37 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio36, i32 0, i32 0, !dbg !9430
  call void @put_device(%struct.device* %dev37) #10, !dbg !9431
  %27 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9432
  %tobool38 = icmp ne %struct.net_device* %27, null, !dbg !9432
  br i1 %tobool38, label %if.then39, label %if.end43, !dbg !9434

if.then39:                                        ; preds = %if.end33
  %28 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9435
  %dev40 = getelementptr inbounds %struct.net_device, %struct.net_device* %28, i32 0, i32 106, !dbg !9436
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev40, i32 0, i32 1, !dbg !9437
  %29 = load %struct.device*, %struct.device** %parent, align 8, !dbg !9437
  %driver41 = getelementptr inbounds %struct.device, %struct.device* %29, i32 0, i32 6, !dbg !9438
  %30 = load %struct.device_driver*, %struct.device_driver** %driver41, align 8, !dbg !9438
  %owner42 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %30, i32 0, i32 2, !dbg !9439
  %31 = load %struct.module*, %struct.module** %owner42, align 8, !dbg !9439
  store %struct.module* %31, %struct.module** %ndev_owner, align 8, !dbg !9440
  br label %if.end43, !dbg !9441

if.end43:                                         ; preds = %if.then39, %if.end33
  %32 = load %struct.module*, %struct.module** %ndev_owner, align 8, !dbg !9442
  %33 = load %struct.mii_bus*, %struct.mii_bus** %bus, align 8, !dbg !9444
  %owner44 = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %33, i32 0, i32 0, !dbg !9445
  %34 = load %struct.module*, %struct.module** %owner44, align 8, !dbg !9445
  %cmp = icmp ne %struct.module* %32, %34, !dbg !9446
  br i1 %cmp, label %if.then45, label %if.end47, !dbg !9447

if.then45:                                        ; preds = %if.end43
  %35 = load %struct.mii_bus*, %struct.mii_bus** %bus, align 8, !dbg !9448
  %owner46 = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %35, i32 0, i32 0, !dbg !9449
  %36 = load %struct.module*, %struct.module** %owner46, align 8, !dbg !9449
  call void @module_put(%struct.module* %36) #10, !dbg !9450
  br label %if.end47, !dbg !9450

if.end47:                                         ; preds = %if.then45, %if.end43
  %37 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9451
  call void @phy_device_reset(%struct.phy_device* %37, i32 1) #10, !dbg !9452
  ret void, !dbg !9453
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_init_hw(%struct.phy_device* %phydev) #0 !dbg !9454 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %ret = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !9455, metadata !DIExpression()), !dbg !9456
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9457, metadata !DIExpression()), !dbg !9458
  store i32 0, i32* %ret, align 4, !dbg !9458
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9459
  call void @phy_device_reset(%struct.phy_device* %0, i32 0) #10, !dbg !9460
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9461
  %drv = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 1, !dbg !9463
  %2 = load %struct.phy_driver*, %struct.phy_driver** %drv, align 8, !dbg !9463
  %tobool = icmp ne %struct.phy_driver* %2, null, !dbg !9461
  br i1 %tobool, label %if.end, label %if.then, !dbg !9464

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9465
  br label %return, !dbg !9465

if.end:                                           ; preds = %entry
  %3 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9466
  %drv1 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %3, i32 0, i32 1, !dbg !9468
  %4 = load %struct.phy_driver*, %struct.phy_driver** %drv1, align 8, !dbg !9468
  %soft_reset = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %4, i32 0, i32 7, !dbg !9469
  %5 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %soft_reset, align 8, !dbg !9469
  %tobool2 = icmp ne i32 (%struct.phy_device*)* %5, null, !dbg !9466
  br i1 %tobool2, label %if.then3, label %if.end9, !dbg !9470

if.then3:                                         ; preds = %if.end
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9471
  %drv4 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %6, i32 0, i32 1, !dbg !9473
  %7 = load %struct.phy_driver*, %struct.phy_driver** %drv4, align 8, !dbg !9473
  %soft_reset5 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %7, i32 0, i32 7, !dbg !9474
  %8 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %soft_reset5, align 8, !dbg !9474
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9475
  %call = call i32 %8(%struct.phy_device* %9) #10, !dbg !9471
  store i32 %call, i32* %ret, align 4, !dbg !9476
  %10 = load i32, i32* %ret, align 4, !dbg !9477
  %tobool6 = icmp ne i32 %10, 0, !dbg !9477
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !9479

if.then7:                                         ; preds = %if.then3
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9480
  %suspended = getelementptr inbounds %struct.phy_device, %struct.phy_device* %11, i32 0, i32 4, !dbg !9481
  %bf.load = load i16, i16* %suspended, align 4, !dbg !9482
  %bf.clear = and i16 %bf.load, -33, !dbg !9482
  store i16 %bf.clear, i16* %suspended, align 4, !dbg !9482
  br label %if.end8, !dbg !9480

if.end8:                                          ; preds = %if.then7, %if.then3
  br label %if.end9, !dbg !9483

if.end9:                                          ; preds = %if.end8, %if.end
  %12 = load i32, i32* %ret, align 4, !dbg !9484
  %cmp = icmp slt i32 %12, 0, !dbg !9486
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !9487

if.then10:                                        ; preds = %if.end9
  %13 = load i32, i32* %ret, align 4, !dbg !9488
  store i32 %13, i32* %retval, align 4, !dbg !9489
  br label %return, !dbg !9489

if.end11:                                         ; preds = %if.end9
  %14 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9490
  %call12 = call i32 @phy_scan_fixups(%struct.phy_device* %14) #10, !dbg !9491
  store i32 %call12, i32* %ret, align 4, !dbg !9492
  %15 = load i32, i32* %ret, align 4, !dbg !9493
  %cmp13 = icmp slt i32 %15, 0, !dbg !9495
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !9496

if.then14:                                        ; preds = %if.end11
  %16 = load i32, i32* %ret, align 4, !dbg !9497
  store i32 %16, i32* %retval, align 4, !dbg !9498
  br label %return, !dbg !9498

if.end15:                                         ; preds = %if.end11
  %17 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9499
  %drv16 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %17, i32 0, i32 1, !dbg !9501
  %18 = load %struct.phy_driver*, %struct.phy_driver** %drv16, align 8, !dbg !9501
  %config_init = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %18, i32 0, i32 8, !dbg !9502
  %19 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %config_init, align 8, !dbg !9502
  %tobool17 = icmp ne i32 (%struct.phy_device*)* %19, null, !dbg !9499
  br i1 %tobool17, label %if.then18, label %if.end22, !dbg !9503

if.then18:                                        ; preds = %if.end15
  %20 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9504
  %drv19 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %20, i32 0, i32 1, !dbg !9505
  %21 = load %struct.phy_driver*, %struct.phy_driver** %drv19, align 8, !dbg !9505
  %config_init20 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %21, i32 0, i32 8, !dbg !9506
  %22 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %config_init20, align 8, !dbg !9506
  %23 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9507
  %call21 = call i32 %22(%struct.phy_device* %23) #10, !dbg !9504
  store i32 %call21, i32* %ret, align 4, !dbg !9508
  br label %if.end22, !dbg !9509

if.end22:                                         ; preds = %if.then18, %if.end15
  %24 = load i32, i32* %ret, align 4, !dbg !9510
  store i32 %24, i32* %retval, align 4, !dbg !9511
  br label %return, !dbg !9511

return:                                           ; preds = %if.end22, %if.then14, %if.then10, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !9512
  ret i32 %25, !dbg !9512
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_attached_info(%struct.phy_device* %phydev) #0 !dbg !9513 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !9514, metadata !DIExpression()), !dbg !9515
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9516
  call void (%struct.phy_device*, i8*, ...) @phy_attached_print(%struct.phy_device* %0, i8* null) #10, !dbg !9517
  ret void, !dbg !9518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_attached_print(%struct.phy_device* %phydev, i8* %fmt, ...) #0 !dbg !9519 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %fmt.addr = alloca i8*, align 8
  %drv_name = alloca i8*, align 8
  %irq_str = alloca i8*, align 8
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !9522, metadata !DIExpression()), !dbg !9523
  store i8* %fmt, i8** %fmt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !9524, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.declare(metadata i8** %drv_name, metadata !9526, metadata !DIExpression()), !dbg !9527
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9528
  %drv = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 1, !dbg !9529
  %1 = load %struct.phy_driver*, %struct.phy_driver** %drv, align 8, !dbg !9529
  %tobool = icmp ne %struct.phy_driver* %1, null, !dbg !9528
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9528

cond.true:                                        ; preds = %entry
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9530
  %drv1 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 1, !dbg !9531
  %3 = load %struct.phy_driver*, %struct.phy_driver** %drv1, align 8, !dbg !9531
  %name = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %3, i32 0, i32 2, !dbg !9532
  %4 = load i8*, i8** %name, align 8, !dbg !9532
  br label %cond.end, !dbg !9528

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9528

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %4, %cond.true ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), %cond.false ], !dbg !9528
  store i8* %cond, i8** %drv_name, align 8, !dbg !9527
  call void @llvm.dbg.declare(metadata i8** %irq_str, metadata !9533, metadata !DIExpression()), !dbg !9534
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9535
  %call = call noalias i8* @phy_attached_info_irq(%struct.phy_device* %5) #10, !dbg !9536
  store i8* %call, i8** %irq_str, align 8, !dbg !9534
  %6 = load i8*, i8** %fmt.addr, align 8, !dbg !9537
  %tobool2 = icmp ne i8* %6, null, !dbg !9537
  br i1 %tobool2, label %if.else, label %if.then, !dbg !9539

if.then:                                          ; preds = %cond.end
  %7 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9540
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %7, i32 0, i32 0, !dbg !9540
  %dev = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 0, !dbg !9540
  %8 = load i8*, i8** %drv_name, align 8, !dbg !9540
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9540
  %call3 = call i8* @phydev_name(%struct.phy_device* %9) #10, !dbg !9540
  %10 = load i8*, i8** %irq_str, align 8, !dbg !9540
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.11, i64 0, i64 0), i8* %8, i8* %call3, i8* %10) #13, !dbg !9540
  br label %if.end, !dbg !9542

if.else:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !9543, metadata !DIExpression()), !dbg !9556
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9557
  %mdio4 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %11, i32 0, i32 0, !dbg !9557
  %dev5 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio4, i32 0, i32 0, !dbg !9557
  %12 = load i8*, i8** %drv_name, align 8, !dbg !9557
  %13 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9557
  %call6 = call i8* @phydev_name(%struct.phy_device* %13) #10, !dbg !9557
  %14 = load i8*, i8** %irq_str, align 8, !dbg !9557
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i8* %12, i8* %call6, i8* %14) #13, !dbg !9557
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !9558
  %arraydecay7 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !9558
  call void @llvm.va_start(i8* %arraydecay7), !dbg !9558
  %15 = load i8*, i8** %fmt.addr, align 8, !dbg !9559
  %arraydecay8 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !9560
  %call9 = call i32 @vprintk(i8* %15, %struct.__va_list_tag* %arraydecay8) #10, !dbg !9561
  %arraydecay10 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !9562
  %arraydecay1011 = bitcast %struct.__va_list_tag* %arraydecay10 to i8*, !dbg !9562
  call void @llvm.va_end(i8* %arraydecay1011), !dbg !9562
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load i8*, i8** %irq_str, align 8, !dbg !9563
  call void @kfree(i8* %16) #10, !dbg !9564
  ret void, !dbg !9565
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local noalias i8* @phy_attached_info_irq(%struct.phy_device* %phydev) #0 !dbg !9566 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %irq_str = alloca i8*, align 8
  %irq_num = alloca [8 x i8], align 1
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !9569, metadata !DIExpression()), !dbg !9570
  call void @llvm.dbg.declare(metadata i8** %irq_str, metadata !9571, metadata !DIExpression()), !dbg !9572
  call void @llvm.dbg.declare(metadata [8 x i8]* %irq_num, metadata !9573, metadata !DIExpression()), !dbg !9574
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9575
  %irq = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 20, !dbg !9576
  %1 = load i32, i32* %irq, align 4, !dbg !9576
  switch i32 %1, label %sw.default [
    i32 -1, label %sw.bb
    i32 -2, label %sw.bb1
  ], !dbg !9577

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8** %irq_str, align 8, !dbg !9578
  br label %sw.epilog, !dbg !9580

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i8** %irq_str, align 8, !dbg !9581
  br label %sw.epilog, !dbg !9582

sw.default:                                       ; preds = %entry
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %irq_num, i64 0, i64 0, !dbg !9583
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9584
  %irq2 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 20, !dbg !9585
  %3 = load i32, i32* %irq2, align 4, !dbg !9585
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i32 %3) #10, !dbg !9586
  %arraydecay3 = getelementptr inbounds [8 x i8], [8 x i8]* %irq_num, i64 0, i64 0, !dbg !9587
  store i8* %arraydecay3, i8** %irq_str, align 8, !dbg !9588
  br label %sw.epilog, !dbg !9589

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  %4 = load i8*, i8** %irq_str, align 8, !dbg !9590
  %call4 = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* %4) #10, !dbg !9591
  ret i8* %call4, !dbg !9592
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kasprintf(i32, i8*, ...) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @phydev_name(%struct.phy_device* %phydev) #0 !dbg !9593 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !9598, metadata !DIExpression()), !dbg !9599
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9600
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 0, !dbg !9601
  %dev = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 0, !dbg !9602
  %call = call i8* @dev_name(%struct.device* %dev) #10, !dbg !9603
  ret i8* %call, !dbg !9604
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #5

; Function Attrs: noredzone
declare dso_local i32 @vprintk(i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_sfp_attach(i8* %upstream, %struct.sfp_bus* %bus) #0 !dbg !9605 {
entry:
  %upstream.addr = alloca i8*, align 8
  %bus.addr = alloca %struct.sfp_bus*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  store i8* %upstream, i8** %upstream.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %upstream.addr, metadata !9608, metadata !DIExpression()), !dbg !9609
  store %struct.sfp_bus* %bus, %struct.sfp_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sfp_bus** %bus.addr, metadata !9610, metadata !DIExpression()), !dbg !9611
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !9612, metadata !DIExpression()), !dbg !9613
  %0 = load i8*, i8** %upstream.addr, align 8, !dbg !9614
  %1 = bitcast i8* %0 to %struct.phy_device*, !dbg !9614
  store %struct.phy_device* %1, %struct.phy_device** %phydev, align 8, !dbg !9613
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !9615
  %attached_dev = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 31, !dbg !9617
  %3 = load %struct.net_device*, %struct.net_device** %attached_dev, align 8, !dbg !9617
  %tobool = icmp ne %struct.net_device* %3, null, !dbg !9615
  br i1 %tobool, label %if.then, label %if.end, !dbg !9618

if.then:                                          ; preds = %entry
  %4 = load %struct.sfp_bus*, %struct.sfp_bus** %bus.addr, align 8, !dbg !9619
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !9620
  %attached_dev1 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %5, i32 0, i32 31, !dbg !9621
  %6 = load %struct.net_device*, %struct.net_device** %attached_dev1, align 8, !dbg !9621
  %sfp_bus = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 116, !dbg !9622
  store %struct.sfp_bus* %4, %struct.sfp_bus** %sfp_bus, align 8, !dbg !9623
  br label %if.end, !dbg !9620

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !9624
  %sfp_bus_attached = getelementptr inbounds %struct.phy_device, %struct.phy_device* %7, i32 0, i32 28, !dbg !9625
  store i8 1, i8* %sfp_bus_attached, align 8, !dbg !9626
  ret void, !dbg !9627
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_sfp_detach(i8* %upstream, %struct.sfp_bus* %bus) #0 !dbg !9628 {
entry:
  %upstream.addr = alloca i8*, align 8
  %bus.addr = alloca %struct.sfp_bus*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  store i8* %upstream, i8** %upstream.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %upstream.addr, metadata !9629, metadata !DIExpression()), !dbg !9630
  store %struct.sfp_bus* %bus, %struct.sfp_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sfp_bus** %bus.addr, metadata !9631, metadata !DIExpression()), !dbg !9632
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !9633, metadata !DIExpression()), !dbg !9634
  %0 = load i8*, i8** %upstream.addr, align 8, !dbg !9635
  %1 = bitcast i8* %0 to %struct.phy_device*, !dbg !9635
  store %struct.phy_device* %1, %struct.phy_device** %phydev, align 8, !dbg !9634
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !9636
  %attached_dev = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 31, !dbg !9638
  %3 = load %struct.net_device*, %struct.net_device** %attached_dev, align 8, !dbg !9638
  %tobool = icmp ne %struct.net_device* %3, null, !dbg !9636
  br i1 %tobool, label %if.then, label %if.end, !dbg !9639

if.then:                                          ; preds = %entry
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !9640
  %attached_dev1 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %4, i32 0, i32 31, !dbg !9641
  %5 = load %struct.net_device*, %struct.net_device** %attached_dev1, align 8, !dbg !9641
  %sfp_bus = getelementptr inbounds %struct.net_device, %struct.net_device* %5, i32 0, i32 116, !dbg !9642
  store %struct.sfp_bus* null, %struct.sfp_bus** %sfp_bus, align 8, !dbg !9643
  br label %if.end, !dbg !9640

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !9644
  %sfp_bus_attached = getelementptr inbounds %struct.phy_device, %struct.phy_device* %6, i32 0, i32 28, !dbg !9645
  store i8 0, i8* %sfp_bus_attached, align 8, !dbg !9646
  ret void, !dbg !9647
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_sfp_probe(%struct.phy_device* %phydev, %struct.sfp_upstream_ops* %ops) #0 !dbg !9648 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %ops.addr = alloca %struct.sfp_upstream_ops*, align 8
  %bus = alloca %struct.sfp_bus*, align 8
  %ret = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !9797, metadata !DIExpression()), !dbg !9798
  store %struct.sfp_upstream_ops* %ops, %struct.sfp_upstream_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sfp_upstream_ops** %ops.addr, metadata !9799, metadata !DIExpression()), !dbg !9800
  call void @llvm.dbg.declare(metadata %struct.sfp_bus** %bus, metadata !9801, metadata !DIExpression()), !dbg !9802
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9803, metadata !DIExpression()), !dbg !9804
  store i32 0, i32* %ret, align 4, !dbg !9804
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9805
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 0, !dbg !9807
  %dev = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 0, !dbg !9808
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 24, !dbg !9809
  %1 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !9809
  %tobool = icmp ne %struct.fwnode_handle* %1, null, !dbg !9805
  br i1 %tobool, label %if.then, label %if.end8, !dbg !9810

if.then:                                          ; preds = %entry
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9811
  %mdio1 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 0, !dbg !9813
  %dev2 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio1, i32 0, i32 0, !dbg !9814
  %fwnode3 = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 24, !dbg !9815
  %3 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode3, align 8, !dbg !9815
  %call = call %struct.sfp_bus* @sfp_bus_find_fwnode(%struct.fwnode_handle* %3) #10, !dbg !9816
  store %struct.sfp_bus* %call, %struct.sfp_bus** %bus, align 8, !dbg !9817
  %4 = load %struct.sfp_bus*, %struct.sfp_bus** %bus, align 8, !dbg !9818
  %5 = bitcast %struct.sfp_bus* %4 to i8*, !dbg !9818
  %call4 = call zeroext i1 @IS_ERR(i8* %5) #10, !dbg !9820
  br i1 %call4, label %if.then5, label %if.end, !dbg !9821

if.then5:                                         ; preds = %if.then
  %6 = load %struct.sfp_bus*, %struct.sfp_bus** %bus, align 8, !dbg !9822
  %7 = bitcast %struct.sfp_bus* %6 to i8*, !dbg !9822
  %call6 = call i64 @PTR_ERR(i8* %7) #10, !dbg !9823
  %conv = trunc i64 %call6 to i32, !dbg !9823
  store i32 %conv, i32* %retval, align 4, !dbg !9824
  br label %return, !dbg !9824

if.end:                                           ; preds = %if.then
  %8 = load %struct.sfp_bus*, %struct.sfp_bus** %bus, align 8, !dbg !9825
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9826
  %sfp_bus = getelementptr inbounds %struct.phy_device, %struct.phy_device* %9, i32 0, i32 29, !dbg !9827
  store %struct.sfp_bus* %8, %struct.sfp_bus** %sfp_bus, align 8, !dbg !9828
  %10 = load %struct.sfp_bus*, %struct.sfp_bus** %bus, align 8, !dbg !9829
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9830
  %12 = bitcast %struct.phy_device* %11 to i8*, !dbg !9830
  %13 = load %struct.sfp_upstream_ops*, %struct.sfp_upstream_ops** %ops.addr, align 8, !dbg !9831
  %call7 = call i32 @sfp_bus_add_upstream(%struct.sfp_bus* %10, i8* %12, %struct.sfp_upstream_ops* %13) #10, !dbg !9832
  store i32 %call7, i32* %ret, align 4, !dbg !9833
  %14 = load %struct.sfp_bus*, %struct.sfp_bus** %bus, align 8, !dbg !9834
  call void @sfp_bus_put(%struct.sfp_bus* %14) #10, !dbg !9835
  br label %if.end8, !dbg !9836

if.end8:                                          ; preds = %if.end, %entry
  %15 = load i32, i32* %ret, align 4, !dbg !9837
  store i32 %15, i32* %retval, align 4, !dbg !9838
  br label %return, !dbg !9838

return:                                           ; preds = %if.end8, %if.then5
  %16 = load i32, i32* %retval, align 4, !dbg !9839
  ret i32 %16, !dbg !9839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.sfp_bus* @sfp_bus_find_fwnode(%struct.fwnode_handle* %fwnode) #0 !dbg !9840 {
entry:
  %fwnode.addr = alloca %struct.fwnode_handle*, align 8
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode.addr, metadata !9843, metadata !DIExpression()), !dbg !9844
  ret %struct.sfp_bus* null, !dbg !9845
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !9846 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9849, metadata !DIExpression()), !dbg !9850
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !9851
  %1 = ptrtoint i8* %0 to i64, !dbg !9851
  %2 = inttoptr i64 %1 to i8*, !dbg !9851
  %3 = ptrtoint i8* %2 to i64, !dbg !9851
  %cmp = icmp uge i64 %3, -4095, !dbg !9851
  %lnot = xor i1 %cmp, true, !dbg !9851
  %lnot1 = xor i1 %lnot, true, !dbg !9851
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9851
  %conv = sext i32 %lnot.ext to i64, !dbg !9851
  %tobool = icmp ne i64 %conv, 0, !dbg !9851
  ret i1 %tobool, !dbg !9852
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !9853 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9856, metadata !DIExpression()), !dbg !9857
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !9858
  %1 = ptrtoint i8* %0 to i64, !dbg !9859
  ret i64 %1, !dbg !9860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sfp_bus_add_upstream(%struct.sfp_bus* %bus, i8* %upstream, %struct.sfp_upstream_ops* %ops) #0 !dbg !9861 {
entry:
  %bus.addr = alloca %struct.sfp_bus*, align 8
  %upstream.addr = alloca i8*, align 8
  %ops.addr = alloca %struct.sfp_upstream_ops*, align 8
  store %struct.sfp_bus* %bus, %struct.sfp_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sfp_bus** %bus.addr, metadata !9864, metadata !DIExpression()), !dbg !9865
  store i8* %upstream, i8** %upstream.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %upstream.addr, metadata !9866, metadata !DIExpression()), !dbg !9867
  store %struct.sfp_upstream_ops* %ops, %struct.sfp_upstream_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sfp_upstream_ops** %ops.addr, metadata !9868, metadata !DIExpression()), !dbg !9869
  ret i32 0, !dbg !9870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sfp_bus_put(%struct.sfp_bus* %bus) #0 !dbg !9871 {
entry:
  %bus.addr = alloca %struct.sfp_bus*, align 8
  store %struct.sfp_bus* %bus, %struct.sfp_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sfp_bus** %bus.addr, metadata !9874, metadata !DIExpression()), !dbg !9875
  ret void, !dbg !9876
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_module_get(%struct.module* %module) #0 !dbg !9877 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !9881, metadata !DIExpression()), !dbg !9882
  ret i1 true, !dbg !9883
}

; Function Attrs: noredzone
declare dso_local %struct.device* @get_device(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @device_bind_driver(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @phy_link_change(%struct.phy_device* %phydev, i1 zeroext %up) #0 !dbg !9884 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %up.addr = alloca i8, align 1
  %netdev = alloca %struct.net_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !9885, metadata !DIExpression()), !dbg !9886
  %frombool = zext i1 %up to i8
  store i8 %frombool, i8* %up.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up.addr, metadata !9887, metadata !DIExpression()), !dbg !9888
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !9889, metadata !DIExpression()), !dbg !9890
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9891
  %attached_dev = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 31, !dbg !9892
  %1 = load %struct.net_device*, %struct.net_device** %attached_dev, align 8, !dbg !9892
  store %struct.net_device* %1, %struct.net_device** %netdev, align 8, !dbg !9890
  %2 = load i8, i8* %up.addr, align 1, !dbg !9893
  %tobool = trunc i8 %2 to i1, !dbg !9893
  br i1 %tobool, label %if.then, label %if.else, !dbg !9895

if.then:                                          ; preds = %entry
  %3 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !9896
  call void @netif_carrier_on(%struct.net_device* %3) #10, !dbg !9897
  br label %if.end, !dbg !9897

if.else:                                          ; preds = %entry
  %4 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !9898
  call void @netif_carrier_off(%struct.net_device* %4) #10, !dbg !9899
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9900
  %adjust_link = getelementptr inbounds %struct.phy_device, %struct.phy_device* %5, i32 0, i32 36, !dbg !9901
  %6 = load void (%struct.net_device*)*, void (%struct.net_device*)** %adjust_link, align 8, !dbg !9901
  %7 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !9902
  call void %6(%struct.net_device* %7) #10, !dbg !9900
  %8 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9903
  %mii_ts = getelementptr inbounds %struct.phy_device, %struct.phy_device* %8, i32 0, i32 32, !dbg !9905
  %9 = load %struct.mii_timestamper*, %struct.mii_timestamper** %mii_ts, align 8, !dbg !9905
  %tobool1 = icmp ne %struct.mii_timestamper* %9, null, !dbg !9903
  br i1 %tobool1, label %land.lhs.true, label %if.end8, !dbg !9906

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9907
  %mii_ts2 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %10, i32 0, i32 32, !dbg !9908
  %11 = load %struct.mii_timestamper*, %struct.mii_timestamper** %mii_ts2, align 8, !dbg !9908
  %link_state = getelementptr inbounds %struct.mii_timestamper, %struct.mii_timestamper* %11, i32 0, i32 3, !dbg !9909
  %12 = load void (%struct.mii_timestamper*, %struct.phy_device*)*, void (%struct.mii_timestamper*, %struct.phy_device*)** %link_state, align 8, !dbg !9909
  %tobool3 = icmp ne void (%struct.mii_timestamper*, %struct.phy_device*)* %12, null, !dbg !9907
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !9910

if.then4:                                         ; preds = %land.lhs.true
  %13 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9911
  %mii_ts5 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %13, i32 0, i32 32, !dbg !9912
  %14 = load %struct.mii_timestamper*, %struct.mii_timestamper** %mii_ts5, align 8, !dbg !9912
  %link_state6 = getelementptr inbounds %struct.mii_timestamper, %struct.mii_timestamper* %14, i32 0, i32 3, !dbg !9913
  %15 = load void (%struct.mii_timestamper*, %struct.phy_device*)*, void (%struct.mii_timestamper*, %struct.phy_device*)** %link_state6, align 8, !dbg !9913
  %16 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9914
  %mii_ts7 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %16, i32 0, i32 32, !dbg !9915
  %17 = load %struct.mii_timestamper*, %struct.mii_timestamper** %mii_ts7, align 8, !dbg !9915
  %18 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9916
  call void %15(%struct.mii_timestamper* %17, %struct.phy_device* %18) #10, !dbg !9911
  br label %if.end8, !dbg !9911

if.end8:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  ret void, !dbg !9917
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @phy_sysfs_create_links(%struct.phy_device* %phydev) #0 !dbg !9918 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %dev = alloca %struct.net_device*, align 8
  %err = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !9919, metadata !DIExpression()), !dbg !9920
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev, metadata !9921, metadata !DIExpression()), !dbg !9922
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9923
  %attached_dev = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 31, !dbg !9924
  %1 = load %struct.net_device*, %struct.net_device** %attached_dev, align 8, !dbg !9924
  store %struct.net_device* %1, %struct.net_device** %dev, align 8, !dbg !9922
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9925, metadata !DIExpression()), !dbg !9926
  %2 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9927
  %tobool = icmp ne %struct.net_device* %2, null, !dbg !9927
  br i1 %tobool, label %if.end, label %if.then, !dbg !9929

if.then:                                          ; preds = %entry
  br label %return, !dbg !9930

if.end:                                           ; preds = %entry
  %3 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9931
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %3, i32 0, i32 0, !dbg !9932
  %dev1 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 0, !dbg !9933
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 0, !dbg !9934
  %4 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9935
  %dev2 = getelementptr inbounds %struct.net_device, %struct.net_device* %4, i32 0, i32 106, !dbg !9936
  %kobj3 = getelementptr inbounds %struct.device, %struct.device* %dev2, i32 0, i32 0, !dbg !9937
  %call = call i32 @sysfs_create_link(%struct.kobject* %kobj, %struct.kobject* %kobj3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10, !dbg !9938
  store i32 %call, i32* %err, align 4, !dbg !9939
  %5 = load i32, i32* %err, align 4, !dbg !9940
  %tobool4 = icmp ne i32 %5, 0, !dbg !9940
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9942

if.then5:                                         ; preds = %if.end
  br label %return, !dbg !9943

if.end6:                                          ; preds = %if.end
  %6 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9944
  %dev7 = getelementptr inbounds %struct.net_device, %struct.net_device* %6, i32 0, i32 106, !dbg !9945
  %kobj8 = getelementptr inbounds %struct.device, %struct.device* %dev7, i32 0, i32 0, !dbg !9946
  %7 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9947
  %mdio9 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %7, i32 0, i32 0, !dbg !9948
  %dev10 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio9, i32 0, i32 0, !dbg !9949
  %kobj11 = getelementptr inbounds %struct.device, %struct.device* %dev10, i32 0, i32 0, !dbg !9950
  %call12 = call i32 @sysfs_create_link_nowarn(%struct.kobject* %kobj8, %struct.kobject* %kobj11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0)) #10, !dbg !9951
  store i32 %call12, i32* %err, align 4, !dbg !9952
  %8 = load i32, i32* %err, align 4, !dbg !9953
  %tobool13 = icmp ne i32 %8, 0, !dbg !9953
  br i1 %tobool13, label %if.then14, label %if.end20, !dbg !9955

if.then14:                                        ; preds = %if.end6
  %9 = load %struct.net_device*, %struct.net_device** %dev, align 8, !dbg !9956
  %dev15 = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 106, !dbg !9956
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9956
  %mdio16 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %10, i32 0, i32 0, !dbg !9956
  %dev17 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio16, i32 0, i32 0, !dbg !9956
  %kobj18 = getelementptr inbounds %struct.device, %struct.device* %dev17, i32 0, i32 0, !dbg !9956
  %call19 = call i8* @kobject_name(%struct.kobject* %kobj18) #10, !dbg !9956
  %11 = load i32, i32* %err, align 4, !dbg !9956
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev15, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.64, i64 0, i64 0), i8* %call19, i32 %11) #13, !dbg !9956
  br label %if.end20, !dbg !9958

if.end20:                                         ; preds = %if.then14, %if.end6
  %12 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9959
  %sysfs_links = getelementptr inbounds %struct.phy_device, %struct.phy_device* %12, i32 0, i32 4, !dbg !9960
  %bf.load = load i16, i16* %sysfs_links, align 4, !dbg !9961
  %bf.clear = and i16 %bf.load, -129, !dbg !9961
  %bf.set = or i16 %bf.clear, 128, !dbg !9961
  store i16 %bf.set, i16* %sysfs_links, align 4, !dbg !9961
  br label %return, !dbg !9962

return:                                           ; preds = %if.end20, %if.then5, %if.then
  ret void, !dbg !9962
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sysfs_create_file(%struct.kobject* %kobj, %struct.attribute* %attr) #0 !dbg !9963 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %attr.addr = alloca %struct.attribute*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !9968, metadata !DIExpression()), !dbg !9969
  store %struct.attribute* %attr, %struct.attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute** %attr.addr, metadata !9970, metadata !DIExpression()), !dbg !9971
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !9972
  %1 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !9973
  %call = call i32 @sysfs_create_file_ns(%struct.kobject* %0, %struct.attribute* %1, i8* null) #10, !dbg !9974
  ret i32 %call, !dbg !9975
}

; Function Attrs: noredzone
declare dso_local void @netif_carrier_off(%struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @phy_disable_interrupts(%struct.phy_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_resume(%struct.phy_device* %phydev) #0 !dbg !9976 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %ret = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !9977, metadata !DIExpression()), !dbg !9978
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9979, metadata !DIExpression()), !dbg !9980
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9981
  %lock = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 27, !dbg !9982
  call void @mutex_lock(%struct.mutex* %lock) #10, !dbg !9983
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9984
  %call = call i32 @__phy_resume(%struct.phy_device* %1) #10, !dbg !9985
  store i32 %call, i32* %ret, align 4, !dbg !9986
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !9987
  %lock1 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 27, !dbg !9988
  call void @mutex_unlock(%struct.mutex* %lock1) #10, !dbg !9989
  %3 = load i32, i32* %ret, align 4, !dbg !9990
  ret i32 %3, !dbg !9991
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_led_triggers_register(%struct.phy_device* %phy) #0 !dbg !9992 {
entry:
  %phy.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phy, %struct.phy_device** %phy.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phy.addr, metadata !9994, metadata !DIExpression()), !dbg !9995
  ret i32 0, !dbg !9996
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #0 !dbg !9997 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !10000, metadata !DIExpression()), !dbg !10001
  ret void, !dbg !10002
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.phy_device* @phy_attach(%struct.net_device* %dev, i8* %bus_id, i32 %interface) #0 !dbg !10003 {
entry:
  %retval = alloca %struct.phy_device*, align 8
  %dev.addr = alloca %struct.net_device*, align 8
  %bus_id.addr = alloca i8*, align 8
  %interface.addr = alloca i32, align 4
  %bus = alloca %struct.bus_type*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  %d = alloca %struct.device*, align 8
  %rc = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp = alloca %struct.mdio_device*, align 8
  %tmp10 = alloca %struct.phy_device*, align 8
  store %struct.net_device* %dev, %struct.net_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.net_device** %dev.addr, metadata !10006, metadata !DIExpression()), !dbg !10007
  store i8* %bus_id, i8** %bus_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bus_id.addr, metadata !10008, metadata !DIExpression()), !dbg !10009
  store i32 %interface, i32* %interface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interface.addr, metadata !10010, metadata !DIExpression()), !dbg !10011
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus, metadata !10012, metadata !DIExpression()), !dbg !10013
  store %struct.bus_type* @mdio_bus_type, %struct.bus_type** %bus, align 8, !dbg !10013
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !10014, metadata !DIExpression()), !dbg !10015
  call void @llvm.dbg.declare(metadata %struct.device** %d, metadata !10016, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !10018, metadata !DIExpression()), !dbg !10019
  %0 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10020
  %tobool = icmp ne %struct.net_device* %0, null, !dbg !10020
  br i1 %tobool, label %if.end, label %if.then, !dbg !10022

if.then:                                          ; preds = %entry
  %call = call i8* @ERR_PTR(i64 -22) #10, !dbg !10023
  %1 = bitcast i8* %call to %struct.phy_device*, !dbg !10023
  store %struct.phy_device* %1, %struct.phy_device** %retval, align 8, !dbg !10024
  br label %return, !dbg !10024

if.end:                                           ; preds = %entry
  %2 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !10025
  %3 = load i8*, i8** %bus_id.addr, align 8, !dbg !10026
  %call1 = call %struct.device* @bus_find_device_by_name(%struct.bus_type* %2, %struct.device* null, i8* %3) #10, !dbg !10027
  store %struct.device* %call1, %struct.device** %d, align 8, !dbg !10028
  %4 = load %struct.device*, %struct.device** %d, align 8, !dbg !10029
  %tobool2 = icmp ne %struct.device* %4, null, !dbg !10029
  br i1 %tobool2, label %if.end6, label %if.then3, !dbg !10031

if.then3:                                         ; preds = %if.end
  %5 = load i8*, i8** %bus_id.addr, align 8, !dbg !10032
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* %5) #13, !dbg !10032
  %call5 = call i8* @ERR_PTR(i64 -19) #10, !dbg !10034
  %6 = bitcast i8* %call5 to %struct.phy_device*, !dbg !10034
  store %struct.phy_device* %6, %struct.phy_device** %retval, align 8, !dbg !10035
  br label %return, !dbg !10035

if.end6:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10036, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !10039, metadata !DIExpression()), !dbg !10041
  %7 = load %struct.device*, %struct.device** %d, align 8, !dbg !10041
  %8 = bitcast %struct.device* %7 to i8*, !dbg !10041
  store i8* %8, i8** %__mptr7, align 8, !dbg !10041
  br label %do.body, !dbg !10041

do.body:                                          ; preds = %if.end6
  br label %do.end, !dbg !10042

do.end:                                           ; preds = %do.body
  %9 = load i8*, i8** %__mptr7, align 8, !dbg !10041
  %add.ptr = getelementptr i8, i8* %9, i64 0, !dbg !10041
  %10 = bitcast i8* %add.ptr to %struct.mdio_device*, !dbg !10041
  store %struct.mdio_device* %10, %struct.mdio_device** %tmp, align 8, !dbg !10042
  %11 = load %struct.mdio_device*, %struct.mdio_device** %tmp, align 8, !dbg !10041
  %12 = bitcast %struct.mdio_device* %11 to i8*, !dbg !10038
  store i8* %12, i8** %__mptr, align 8, !dbg !10038
  br label %do.body8, !dbg !10038

do.body8:                                         ; preds = %do.end
  br label %do.end9, !dbg !10044

do.end9:                                          ; preds = %do.body8
  %13 = load i8*, i8** %__mptr, align 8, !dbg !10038
  %add.ptr11 = getelementptr i8, i8* %13, i64 0, !dbg !10038
  %14 = bitcast i8* %add.ptr11 to %struct.phy_device*, !dbg !10038
  store %struct.phy_device* %14, %struct.phy_device** %tmp10, align 8, !dbg !10044
  %15 = load %struct.phy_device*, %struct.phy_device** %tmp10, align 8, !dbg !10038
  store %struct.phy_device* %15, %struct.phy_device** %phydev, align 8, !dbg !10046
  %16 = load %struct.net_device*, %struct.net_device** %dev.addr, align 8, !dbg !10047
  %17 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !10048
  %18 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !10049
  %dev_flags = getelementptr inbounds %struct.phy_device, %struct.phy_device* %18, i32 0, i32 6, !dbg !10050
  %19 = load i32, i32* %dev_flags, align 4, !dbg !10050
  %20 = load i32, i32* %interface.addr, align 4, !dbg !10051
  %call12 = call i32 @phy_attach_direct(%struct.net_device* %16, %struct.phy_device* %17, i32 %19, i32 %20) #10, !dbg !10052
  store i32 %call12, i32* %rc, align 4, !dbg !10053
  %21 = load %struct.device*, %struct.device** %d, align 8, !dbg !10054
  call void @put_device(%struct.device* %21) #10, !dbg !10055
  %22 = load i32, i32* %rc, align 4, !dbg !10056
  %tobool13 = icmp ne i32 %22, 0, !dbg !10056
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !10058

if.then14:                                        ; preds = %do.end9
  %23 = load i32, i32* %rc, align 4, !dbg !10059
  %conv = sext i32 %23 to i64, !dbg !10059
  %call15 = call i8* @ERR_PTR(i64 %conv) #10, !dbg !10060
  %24 = bitcast i8* %call15 to %struct.phy_device*, !dbg !10060
  store %struct.phy_device* %24, %struct.phy_device** %retval, align 8, !dbg !10061
  br label %return, !dbg !10061

if.end16:                                         ; preds = %do.end9
  %25 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !10062
  store %struct.phy_device* %25, %struct.phy_device** %retval, align 8, !dbg !10063
  br label %return, !dbg !10063

return:                                           ; preds = %if.end16, %if.then14, %if.then3, %if.then
  %26 = load %struct.phy_device*, %struct.phy_device** %retval, align 8, !dbg !10064
  ret %struct.phy_device* %26, !dbg !10064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @phy_driver_is_genphy(%struct.phy_device* %phydev) #0 !dbg !10065 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10066, metadata !DIExpression()), !dbg !10067
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10068
  %call = call zeroext i1 @phy_driver_is_genphy_kind(%struct.phy_device* %0, %struct.device_driver* getelementptr inbounds (%struct.phy_driver, %struct.phy_driver* bitcast ({ %struct.mdio_driver_common, i32, i8*, i32, i64*, i32, i8*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*, i32, i16)*, i32 (%struct.phy_device*, i32, i16, i16)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, i32)*, i32 (%struct.phy_device*, %struct.ethtool_modinfo*)*, i32 (%struct.phy_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.phy_tdr_config*)*, i32 (%struct.phy_device*, i8*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*, i8*)*, void (%struct.phy_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, i1)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)* }* @genphy_driver to %struct.phy_driver*), i32 0, i32 0, i32 0)) #10, !dbg !10069
  ret i1 %call, !dbg !10070
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @phy_driver_is_genphy_kind(%struct.phy_device* %phydev, %struct.device_driver* %driver) #0 !dbg !10071 {
entry:
  %retval = alloca i1, align 1
  %phydev.addr = alloca %struct.phy_device*, align 8
  %driver.addr = alloca %struct.device_driver*, align 8
  %d = alloca %struct.device*, align 8
  %ret = alloca i8, align 1
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10074, metadata !DIExpression()), !dbg !10075
  store %struct.device_driver* %driver, %struct.device_driver** %driver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_driver** %driver.addr, metadata !10076, metadata !DIExpression()), !dbg !10077
  call void @llvm.dbg.declare(metadata %struct.device** %d, metadata !10078, metadata !DIExpression()), !dbg !10079
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10080
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 0, !dbg !10081
  %dev = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 0, !dbg !10082
  store %struct.device* %dev, %struct.device** %d, align 8, !dbg !10079
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !10083, metadata !DIExpression()), !dbg !10084
  store i8 0, i8* %ret, align 1, !dbg !10084
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10085
  %drv = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 1, !dbg !10087
  %2 = load %struct.phy_driver*, %struct.phy_driver** %drv, align 8, !dbg !10087
  %tobool = icmp ne %struct.phy_driver* %2, null, !dbg !10085
  br i1 %tobool, label %if.end, label %if.then, !dbg !10088

if.then:                                          ; preds = %entry
  %3 = load i8, i8* %ret, align 1, !dbg !10089
  %tobool1 = trunc i8 %3 to i1, !dbg !10089
  store i1 %tobool1, i1* %retval, align 1, !dbg !10090
  br label %return, !dbg !10090

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %d, align 8, !dbg !10091
  %call = call %struct.device* @get_device(%struct.device* %4) #10, !dbg !10092
  %5 = load %struct.device*, %struct.device** %d, align 8, !dbg !10093
  %driver2 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 6, !dbg !10094
  %6 = load %struct.device_driver*, %struct.device_driver** %driver2, align 8, !dbg !10094
  %7 = load %struct.device_driver*, %struct.device_driver** %driver.addr, align 8, !dbg !10095
  %cmp = icmp eq %struct.device_driver* %6, %7, !dbg !10096
  %frombool = zext i1 %cmp to i8, !dbg !10097
  store i8 %frombool, i8* %ret, align 1, !dbg !10097
  %8 = load %struct.device*, %struct.device** %d, align 8, !dbg !10098
  call void @put_device(%struct.device* %8) #10, !dbg !10099
  %9 = load i8, i8* %ret, align 1, !dbg !10100
  %tobool3 = trunc i8 %9 to i1, !dbg !10100
  store i1 %tobool3, i1* %retval, align 1, !dbg !10101
  br label %return, !dbg !10101

return:                                           ; preds = %if.end, %if.then
  %10 = load i1, i1* %retval, align 1, !dbg !10102
  ret i1 %10, !dbg !10102
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @phy_driver_is_genphy_10g(%struct.phy_device* %phydev) #0 !dbg !10103 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10104, metadata !DIExpression()), !dbg !10105
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10106
  %call = call zeroext i1 @phy_driver_is_genphy_kind(%struct.phy_device* %0, %struct.device_driver* getelementptr inbounds (%struct.phy_driver, %struct.phy_driver* @genphy_c45_driver, i32 0, i32 0, i32 0)) #10, !dbg !10107
  ret i1 %call, !dbg !10108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_package_join(%struct.phy_device* %phydev, i32 %addr, i64 %priv_size) #0 !dbg !10109 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %addr.addr = alloca i32, align 4
  %priv_size.addr = alloca i64, align 8
  %bus = alloca %struct.mii_bus*, align 8
  %shared = alloca %struct.phy_package_shared*, align 8
  %ret = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10112, metadata !DIExpression()), !dbg !10113
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !10114, metadata !DIExpression()), !dbg !10115
  store i64 %priv_size, i64* %priv_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %priv_size.addr, metadata !10116, metadata !DIExpression()), !dbg !10117
  call void @llvm.dbg.declare(metadata %struct.mii_bus** %bus, metadata !10118, metadata !DIExpression()), !dbg !10119
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10120
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 0, !dbg !10121
  %bus1 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 1, !dbg !10122
  %1 = load %struct.mii_bus*, %struct.mii_bus** %bus1, align 8, !dbg !10122
  store %struct.mii_bus* %1, %struct.mii_bus** %bus, align 8, !dbg !10119
  call void @llvm.dbg.declare(metadata %struct.phy_package_shared** %shared, metadata !10123, metadata !DIExpression()), !dbg !10124
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10125, metadata !DIExpression()), !dbg !10126
  %2 = load i32, i32* %addr.addr, align 4, !dbg !10127
  %cmp = icmp slt i32 %2, 0, !dbg !10129
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10130

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %addr.addr, align 4, !dbg !10131
  %cmp2 = icmp sge i32 %3, 32, !dbg !10132
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10133

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !10134
  br label %return, !dbg !10134

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.mii_bus*, %struct.mii_bus** %bus, align 8, !dbg !10135
  %shared_lock = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %4, i32 0, i32 20, !dbg !10136
  call void @mutex_lock(%struct.mutex* %shared_lock) #10, !dbg !10137
  %5 = load %struct.mii_bus*, %struct.mii_bus** %bus, align 8, !dbg !10138
  %shared3 = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %5, i32 0, i32 21, !dbg !10139
  %6 = load i32, i32* %addr.addr, align 4, !dbg !10140
  %idxprom = sext i32 %6 to i64, !dbg !10138
  %arrayidx = getelementptr [32 x %struct.phy_package_shared*], [32 x %struct.phy_package_shared*]* %shared3, i64 0, i64 %idxprom, !dbg !10138
  %7 = load %struct.phy_package_shared*, %struct.phy_package_shared** %arrayidx, align 8, !dbg !10138
  store %struct.phy_package_shared* %7, %struct.phy_package_shared** %shared, align 8, !dbg !10141
  %8 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10142
  %tobool = icmp ne %struct.phy_package_shared* %8, null, !dbg !10142
  br i1 %tobool, label %if.else, label %if.then4, !dbg !10144

if.then4:                                         ; preds = %if.end
  store i32 -12, i32* %ret, align 4, !dbg !10145
  %call = call i8* @kzalloc(i64 32, i32 3264) #10, !dbg !10147
  %9 = bitcast i8* %call to %struct.phy_package_shared*, !dbg !10147
  store %struct.phy_package_shared* %9, %struct.phy_package_shared** %shared, align 8, !dbg !10148
  %10 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10149
  %tobool5 = icmp ne %struct.phy_package_shared* %10, null, !dbg !10149
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !10151

if.then6:                                         ; preds = %if.then4
  br label %err_unlock, !dbg !10152

if.end7:                                          ; preds = %if.then4
  %11 = load i64, i64* %priv_size.addr, align 8, !dbg !10153
  %tobool8 = icmp ne i64 %11, 0, !dbg !10153
  br i1 %tobool8, label %if.then9, label %if.end16, !dbg !10155

if.then9:                                         ; preds = %if.end7
  %12 = load i64, i64* %priv_size.addr, align 8, !dbg !10156
  %call10 = call i8* @kzalloc(i64 %12, i32 3264) #10, !dbg !10158
  %13 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10159
  %priv = getelementptr inbounds %struct.phy_package_shared, %struct.phy_package_shared* %13, i32 0, i32 4, !dbg !10160
  store i8* %call10, i8** %priv, align 8, !dbg !10161
  %14 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10162
  %priv11 = getelementptr inbounds %struct.phy_package_shared, %struct.phy_package_shared* %14, i32 0, i32 4, !dbg !10164
  %15 = load i8*, i8** %priv11, align 8, !dbg !10164
  %tobool12 = icmp ne i8* %15, null, !dbg !10162
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !10165

if.then13:                                        ; preds = %if.then9
  br label %err_free, !dbg !10166

if.end14:                                         ; preds = %if.then9
  %16 = load i64, i64* %priv_size.addr, align 8, !dbg !10167
  %17 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10168
  %priv_size15 = getelementptr inbounds %struct.phy_package_shared, %struct.phy_package_shared* %17, i32 0, i32 3, !dbg !10169
  store i64 %16, i64* %priv_size15, align 8, !dbg !10170
  br label %if.end16, !dbg !10171

if.end16:                                         ; preds = %if.end14, %if.end7
  %18 = load i32, i32* %addr.addr, align 4, !dbg !10172
  %19 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10173
  %addr17 = getelementptr inbounds %struct.phy_package_shared, %struct.phy_package_shared* %19, i32 0, i32 0, !dbg !10174
  store i32 %18, i32* %addr17, align 8, !dbg !10175
  %20 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10176
  %refcnt = getelementptr inbounds %struct.phy_package_shared, %struct.phy_package_shared* %20, i32 0, i32 1, !dbg !10177
  call void @refcount_set(%struct.refcount_struct* %refcnt, i32 1) #10, !dbg !10178
  %21 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10179
  %22 = load %struct.mii_bus*, %struct.mii_bus** %bus, align 8, !dbg !10180
  %shared18 = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %22, i32 0, i32 21, !dbg !10181
  %23 = load i32, i32* %addr.addr, align 4, !dbg !10182
  %idxprom19 = sext i32 %23 to i64, !dbg !10180
  %arrayidx20 = getelementptr [32 x %struct.phy_package_shared*], [32 x %struct.phy_package_shared*]* %shared18, i64 0, i64 %idxprom19, !dbg !10180
  store %struct.phy_package_shared* %21, %struct.phy_package_shared** %arrayidx20, align 8, !dbg !10183
  br label %if.end27, !dbg !10184

if.else:                                          ; preds = %if.end
  store i32 -22, i32* %ret, align 4, !dbg !10185
  %24 = load i64, i64* %priv_size.addr, align 8, !dbg !10187
  %tobool21 = icmp ne i64 %24, 0, !dbg !10187
  br i1 %tobool21, label %land.lhs.true, label %if.end25, !dbg !10189

land.lhs.true:                                    ; preds = %if.else
  %25 = load i64, i64* %priv_size.addr, align 8, !dbg !10190
  %26 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10191
  %priv_size22 = getelementptr inbounds %struct.phy_package_shared, %struct.phy_package_shared* %26, i32 0, i32 3, !dbg !10192
  %27 = load i64, i64* %priv_size22, align 8, !dbg !10192
  %cmp23 = icmp ne i64 %25, %27, !dbg !10193
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !10194

if.then24:                                        ; preds = %land.lhs.true
  br label %err_unlock, !dbg !10195

if.end25:                                         ; preds = %land.lhs.true, %if.else
  %28 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10196
  %refcnt26 = getelementptr inbounds %struct.phy_package_shared, %struct.phy_package_shared* %28, i32 0, i32 1, !dbg !10197
  call void @refcount_inc(%struct.refcount_struct* %refcnt26) #10, !dbg !10198
  br label %if.end27

if.end27:                                         ; preds = %if.end25, %if.end16
  %29 = load %struct.mii_bus*, %struct.mii_bus** %bus, align 8, !dbg !10199
  %shared_lock28 = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %29, i32 0, i32 20, !dbg !10200
  call void @mutex_unlock(%struct.mutex* %shared_lock28) #10, !dbg !10201
  %30 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10202
  %31 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10203
  %shared29 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %31, i32 0, i32 22, !dbg !10204
  store %struct.phy_package_shared* %30, %struct.phy_package_shared** %shared29, align 8, !dbg !10205
  store i32 0, i32* %retval, align 4, !dbg !10206
  br label %return, !dbg !10206

err_free:                                         ; preds = %if.then13
  call void @llvm.dbg.label(metadata !10207), !dbg !10208
  %32 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10209
  %33 = bitcast %struct.phy_package_shared* %32 to i8*, !dbg !10209
  call void @kfree(i8* %33) #10, !dbg !10210
  br label %err_unlock, !dbg !10210

err_unlock:                                       ; preds = %err_free, %if.then24, %if.then6
  call void @llvm.dbg.label(metadata !10211), !dbg !10212
  %34 = load %struct.mii_bus*, %struct.mii_bus** %bus, align 8, !dbg !10213
  %shared_lock30 = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %34, i32 0, i32 20, !dbg !10214
  call void @mutex_unlock(%struct.mutex* %shared_lock30) #10, !dbg !10215
  %35 = load i32, i32* %ret, align 4, !dbg !10216
  store i32 %35, i32* %retval, align 4, !dbg !10217
  br label %return, !dbg !10217

return:                                           ; preds = %err_unlock, %if.end27, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !10218
  ret i32 %36, !dbg !10218
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_set(%struct.refcount_struct* %r, i32 %n) #0 !dbg !10219 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !10223, metadata !DIExpression()), !dbg !10229
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !10234, metadata !DIExpression()), !dbg !10235
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !10236, metadata !DIExpression()), !dbg !10244
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10246, metadata !DIExpression()), !dbg !10247
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10248, metadata !DIExpression()), !dbg !10249
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !10250, metadata !DIExpression()), !dbg !10251
  %r.addr = alloca %struct.refcount_struct*, align 8
  %n.addr = alloca i32, align 4
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !10252, metadata !DIExpression()), !dbg !10253
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !10254, metadata !DIExpression()), !dbg !10255
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !10256
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !10257
  %1 = load i32, i32* %n.addr, align 4, !dbg !10258
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32 %1, i32* %i.addr.i, align 4
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10259
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !10259
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10260
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !10261
  %conv.i.i = trunc i64 %5 to i32, !dbg !10261
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !10262
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10263
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !10263
  call void @kcsan_check_access(i8* %6, i64 %7, i32 5) #12, !dbg !10263
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10264
  %9 = load i32, i32* %i.addr.i, align 4, !dbg !10265
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %9, i32* %i.addr.i.i, align 4
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !10266
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10266
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !10266
  store volatile i32 %10, i32* %counter.i.i, align 4, !dbg !10266
  ret void, !dbg !10268
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_inc(%struct.refcount_struct* %r) #0 !dbg !10269 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !10272, metadata !DIExpression()), !dbg !10273
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !10274
  call void @__refcount_inc(%struct.refcount_struct* %0, i32* null) #10, !dbg !10275
  ret void, !dbg !10276
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_package_leave(%struct.phy_device* %phydev) #0 !dbg !10277 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %shared = alloca %struct.phy_package_shared*, align 8
  %bus = alloca %struct.mii_bus*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10278, metadata !DIExpression()), !dbg !10279
  call void @llvm.dbg.declare(metadata %struct.phy_package_shared** %shared, metadata !10280, metadata !DIExpression()), !dbg !10281
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10282
  %shared1 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 22, !dbg !10283
  %1 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared1, align 8, !dbg !10283
  store %struct.phy_package_shared* %1, %struct.phy_package_shared** %shared, align 8, !dbg !10281
  call void @llvm.dbg.declare(metadata %struct.mii_bus** %bus, metadata !10284, metadata !DIExpression()), !dbg !10285
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10286
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 0, !dbg !10287
  %bus2 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 1, !dbg !10288
  %3 = load %struct.mii_bus*, %struct.mii_bus** %bus2, align 8, !dbg !10288
  store %struct.mii_bus* %3, %struct.mii_bus** %bus, align 8, !dbg !10285
  %4 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10289
  %tobool = icmp ne %struct.phy_package_shared* %4, null, !dbg !10289
  br i1 %tobool, label %if.end, label %if.then, !dbg !10291

if.then:                                          ; preds = %entry
  br label %return, !dbg !10292

if.end:                                           ; preds = %entry
  %5 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10293
  %refcnt = getelementptr inbounds %struct.phy_package_shared, %struct.phy_package_shared* %5, i32 0, i32 1, !dbg !10295
  %6 = load %struct.mii_bus*, %struct.mii_bus** %bus, align 8, !dbg !10296
  %shared_lock = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %6, i32 0, i32 20, !dbg !10297
  %call = call zeroext i1 @refcount_dec_and_mutex_lock(%struct.refcount_struct* %refcnt, %struct.mutex* %shared_lock) #10, !dbg !10298
  br i1 %call, label %if.then3, label %if.end6, !dbg !10299

if.then3:                                         ; preds = %if.end
  %7 = load %struct.mii_bus*, %struct.mii_bus** %bus, align 8, !dbg !10300
  %shared4 = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %7, i32 0, i32 21, !dbg !10302
  %8 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10303
  %addr = getelementptr inbounds %struct.phy_package_shared, %struct.phy_package_shared* %8, i32 0, i32 0, !dbg !10304
  %9 = load i32, i32* %addr, align 8, !dbg !10304
  %idxprom = sext i32 %9 to i64, !dbg !10300
  %arrayidx = getelementptr [32 x %struct.phy_package_shared*], [32 x %struct.phy_package_shared*]* %shared4, i64 0, i64 %idxprom, !dbg !10300
  store %struct.phy_package_shared* null, %struct.phy_package_shared** %arrayidx, align 8, !dbg !10305
  %10 = load %struct.mii_bus*, %struct.mii_bus** %bus, align 8, !dbg !10306
  %shared_lock5 = getelementptr inbounds %struct.mii_bus, %struct.mii_bus* %10, i32 0, i32 20, !dbg !10307
  call void @mutex_unlock(%struct.mutex* %shared_lock5) #10, !dbg !10308
  %11 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10309
  %priv = getelementptr inbounds %struct.phy_package_shared, %struct.phy_package_shared* %11, i32 0, i32 4, !dbg !10310
  %12 = load i8*, i8** %priv, align 8, !dbg !10310
  call void @kfree(i8* %12) #10, !dbg !10311
  %13 = load %struct.phy_package_shared*, %struct.phy_package_shared** %shared, align 8, !dbg !10312
  %14 = bitcast %struct.phy_package_shared* %13 to i8*, !dbg !10312
  call void @kfree(i8* %14) #10, !dbg !10313
  br label %if.end6, !dbg !10314

if.end6:                                          ; preds = %if.then3, %if.end
  %15 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10315
  %shared7 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %15, i32 0, i32 22, !dbg !10316
  store %struct.phy_package_shared* null, %struct.phy_package_shared** %shared7, align 8, !dbg !10317
  br label %return, !dbg !10318

return:                                           ; preds = %if.end6, %if.then
  ret void, !dbg !10318
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @refcount_dec_and_mutex_lock(%struct.refcount_struct*, %struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devm_phy_package_join(%struct.device* %dev, %struct.phy_device* %phydev, i32 %addr, i64 %priv_size) #0 !dbg !10319 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %phydev.addr = alloca %struct.phy_device*, align 8
  %addr.addr = alloca i32, align 4
  %priv_size.addr = alloca i64, align 8
  %ptr = alloca %struct.phy_device**, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10322, metadata !DIExpression()), !dbg !10323
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10324, metadata !DIExpression()), !dbg !10325
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !10326, metadata !DIExpression()), !dbg !10327
  store i64 %priv_size, i64* %priv_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %priv_size.addr, metadata !10328, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.declare(metadata %struct.phy_device*** %ptr, metadata !10330, metadata !DIExpression()), !dbg !10331
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10332, metadata !DIExpression()), !dbg !10333
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_phy_package_leave, i64 8, i32 3264) #10, !dbg !10334
  %0 = bitcast i8* %call to %struct.phy_device**, !dbg !10334
  store %struct.phy_device** %0, %struct.phy_device*** %ptr, align 8, !dbg !10335
  %1 = load %struct.phy_device**, %struct.phy_device*** %ptr, align 8, !dbg !10336
  %tobool = icmp ne %struct.phy_device** %1, null, !dbg !10336
  br i1 %tobool, label %if.end, label %if.then, !dbg !10338

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !10339
  br label %return, !dbg !10339

if.end:                                           ; preds = %entry
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10340
  %3 = load i32, i32* %addr.addr, align 4, !dbg !10341
  %4 = load i64, i64* %priv_size.addr, align 8, !dbg !10342
  %call1 = call i32 @phy_package_join(%struct.phy_device* %2, i32 %3, i64 %4) #10, !dbg !10343
  store i32 %call1, i32* %ret, align 4, !dbg !10344
  %5 = load i32, i32* %ret, align 4, !dbg !10345
  %tobool2 = icmp ne i32 %5, 0, !dbg !10345
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !10347

if.then3:                                         ; preds = %if.end
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10348
  %7 = load %struct.phy_device**, %struct.phy_device*** %ptr, align 8, !dbg !10350
  store %struct.phy_device* %6, %struct.phy_device** %7, align 8, !dbg !10351
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10352
  %9 = load %struct.phy_device**, %struct.phy_device*** %ptr, align 8, !dbg !10353
  %10 = bitcast %struct.phy_device** %9 to i8*, !dbg !10353
  call void @devres_add(%struct.device* %8, i8* %10) #10, !dbg !10354
  br label %if.end4, !dbg !10355

if.else:                                          ; preds = %if.end
  %11 = load %struct.phy_device**, %struct.phy_device*** %ptr, align 8, !dbg !10356
  %12 = bitcast %struct.phy_device** %11 to i8*, !dbg !10356
  call void @devres_free(i8* %12) #10, !dbg !10358
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then3
  %13 = load i32, i32* %ret, align 4, !dbg !10359
  store i32 %13, i32* %retval, align 4, !dbg !10360
  br label %return, !dbg !10360

return:                                           ; preds = %if.end4, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !10361
  ret i32 %14, !dbg !10361
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devres_alloc(void (%struct.device*, i8*)* %release, i64 %size, i32 %gfp) #0 !dbg !10362 {
entry:
  %release.addr = alloca void (%struct.device*, i8*)*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store void (%struct.device*, i8*)* %release, void (%struct.device*, i8*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.device*, i8*)** %release.addr, metadata !10369, metadata !DIExpression()), !dbg !10370
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10371, metadata !DIExpression()), !dbg !10372
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !10373, metadata !DIExpression()), !dbg !10374
  %0 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %release.addr, align 8, !dbg !10375
  %1 = load i64, i64* %size.addr, align 8, !dbg !10376
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !10377
  %call = call noalias i8* @devres_alloc_node(void (%struct.device*, i8*)* %0, i64 %1, i32 %2, i32 -1) #10, !dbg !10378
  ret i8* %call, !dbg !10379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_phy_package_leave(%struct.device* %dev, i8* %res) #0 !dbg !10380 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10381, metadata !DIExpression()), !dbg !10382
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !10383, metadata !DIExpression()), !dbg !10384
  %0 = load i8*, i8** %res.addr, align 8, !dbg !10385
  %1 = bitcast i8* %0 to %struct.phy_device**, !dbg !10386
  %2 = load %struct.phy_device*, %struct.phy_device** %1, align 8, !dbg !10387
  call void @phy_package_leave(%struct.phy_device* %2) #10, !dbg !10388
  ret void, !dbg !10389
}

; Function Attrs: noredzone
declare dso_local void @devres_add(%struct.device*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @devres_free(i8*) #2

; Function Attrs: noredzone
declare dso_local void @sysfs_remove_link(%struct.kobject*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sysfs_remove_file(%struct.kobject* %kobj, %struct.attribute* %attr) #0 !dbg !10390 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %attr.addr = alloca %struct.attribute*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !10393, metadata !DIExpression()), !dbg !10394
  store %struct.attribute* %attr, %struct.attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute** %attr.addr, metadata !10395, metadata !DIExpression()), !dbg !10396
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !10397
  %1 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !10398
  call void @sysfs_remove_file_ns(%struct.kobject* %0, %struct.attribute* %1, i8* null) #10, !dbg !10399
  ret void, !dbg !10400
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_suspend(%struct.phy_device* %phydev) #0 !dbg !10401 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %wol = alloca %struct.ethtool_wolinfo, align 4
  %netdev = alloca %struct.net_device*, align 8
  %phydrv = alloca %struct.phy_driver*, align 8
  %ret = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10402, metadata !DIExpression()), !dbg !10403
  call void @llvm.dbg.declare(metadata %struct.ethtool_wolinfo* %wol, metadata !10404, metadata !DIExpression()), !dbg !10405
  %0 = bitcast %struct.ethtool_wolinfo* %wol to i8*, !dbg !10405
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 bitcast (%struct.ethtool_wolinfo* @__const.phy_suspend.wol to i8*), i64 20, i1 false), !dbg !10405
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !10406, metadata !DIExpression()), !dbg !10407
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10408
  %attached_dev = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 31, !dbg !10409
  %2 = load %struct.net_device*, %struct.net_device** %attached_dev, align 8, !dbg !10409
  store %struct.net_device* %2, %struct.net_device** %netdev, align 8, !dbg !10407
  call void @llvm.dbg.declare(metadata %struct.phy_driver** %phydrv, metadata !10410, metadata !DIExpression()), !dbg !10411
  %3 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10412
  %drv = getelementptr inbounds %struct.phy_device, %struct.phy_device* %3, i32 0, i32 1, !dbg !10413
  %4 = load %struct.phy_driver*, %struct.phy_driver** %drv, align 8, !dbg !10413
  store %struct.phy_driver* %4, %struct.phy_driver** %phydrv, align 8, !dbg !10411
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10414, metadata !DIExpression()), !dbg !10415
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10416
  %suspended = getelementptr inbounds %struct.phy_device, %struct.phy_device* %5, i32 0, i32 4, !dbg !10418
  %bf.load = load i16, i16* %suspended, align 4, !dbg !10418
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !10418
  %bf.clear = and i16 %bf.lshr, 1, !dbg !10418
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10418
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10416
  br i1 %tobool, label %if.then, label %if.end, !dbg !10419

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10420
  br label %return, !dbg !10420

if.end:                                           ; preds = %entry
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10421
  call void @phy_ethtool_get_wol(%struct.phy_device* %6, %struct.ethtool_wolinfo* %wol) #10, !dbg !10422
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, %struct.ethtool_wolinfo* %wol, i32 0, i32 2, !dbg !10423
  %7 = load i32, i32* %wolopts, align 4, !dbg !10423
  %tobool1 = icmp ne i32 %7, 0, !dbg !10425
  br i1 %tobool1, label %if.then7, label %lor.lhs.false, !dbg !10426

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10427
  %tobool2 = icmp ne %struct.net_device* %8, null, !dbg !10427
  br i1 %tobool2, label %land.lhs.true, label %if.end8, !dbg !10428

land.lhs.true:                                    ; preds = %lor.lhs.false
  %9 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !10429
  %wol_enabled = getelementptr inbounds %struct.net_device, %struct.net_device* %9, i32 0, i32 120, !dbg !10430
  %bf.load3 = load i8, i8* %wol_enabled, align 1, !dbg !10430
  %bf.clear4 = and i8 %bf.load3, 1, !dbg !10430
  %bf.cast5 = zext i8 %bf.clear4 to i32, !dbg !10430
  %tobool6 = icmp ne i32 %bf.cast5, 0, !dbg !10429
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !10431

if.then7:                                         ; preds = %land.lhs.true, %if.end
  store i32 -16, i32* %retval, align 4, !dbg !10432
  br label %return, !dbg !10432

if.end8:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %10 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !10433
  %tobool9 = icmp ne %struct.phy_driver* %10, null, !dbg !10433
  br i1 %tobool9, label %lor.lhs.false10, label %if.then12, !dbg !10435

lor.lhs.false10:                                  ; preds = %if.end8
  %11 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !10436
  %suspend = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %11, i32 0, i32 11, !dbg !10437
  %12 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %suspend, align 8, !dbg !10437
  %tobool11 = icmp ne i32 (%struct.phy_device*)* %12, null, !dbg !10436
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !10438

if.then12:                                        ; preds = %lor.lhs.false10, %if.end8
  store i32 0, i32* %retval, align 4, !dbg !10439
  br label %return, !dbg !10439

if.end13:                                         ; preds = %lor.lhs.false10
  %13 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !10440
  %suspend14 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %13, i32 0, i32 11, !dbg !10441
  %14 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %suspend14, align 8, !dbg !10441
  %15 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10442
  %call = call i32 %14(%struct.phy_device* %15) #10, !dbg !10440
  store i32 %call, i32* %ret, align 4, !dbg !10443
  %16 = load i32, i32* %ret, align 4, !dbg !10444
  %tobool15 = icmp ne i32 %16, 0, !dbg !10444
  br i1 %tobool15, label %if.end20, label %if.then16, !dbg !10446

if.then16:                                        ; preds = %if.end13
  %17 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10447
  %suspended17 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %17, i32 0, i32 4, !dbg !10448
  %bf.load18 = load i16, i16* %suspended17, align 4, !dbg !10449
  %bf.clear19 = and i16 %bf.load18, -33, !dbg !10449
  %bf.set = or i16 %bf.clear19, 32, !dbg !10449
  store i16 %bf.set, i16* %suspended17, align 4, !dbg !10449
  br label %if.end20, !dbg !10447

if.end20:                                         ; preds = %if.then16, %if.end13
  %18 = load i32, i32* %ret, align 4, !dbg !10450
  store i32 %18, i32* %retval, align 4, !dbg !10451
  br label %return, !dbg !10451

return:                                           ; preds = %if.end20, %if.then12, %if.then7, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !10452
  ret i32 %19, !dbg !10452
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @phy_led_triggers_unregister(%struct.phy_device* %phy) #0 !dbg !10453 {
entry:
  %phy.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phy, %struct.phy_device** %phy.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phy.addr, metadata !10454, metadata !DIExpression()), !dbg !10455
  ret void, !dbg !10456
}

; Function Attrs: noredzone
declare dso_local void @device_release_driver(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local void @phy_ethtool_get_wol(%struct.phy_device*, %struct.ethtool_wolinfo*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__phy_resume(%struct.phy_device* %phydev) #0 !dbg !10457 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %phydrv = alloca %struct.phy_driver*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10458, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.declare(metadata %struct.phy_driver** %phydrv, metadata !10460, metadata !DIExpression()), !dbg !10461
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10462
  %drv = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 1, !dbg !10463
  %1 = load %struct.phy_driver*, %struct.phy_driver** %drv, align 8, !dbg !10463
  store %struct.phy_driver* %1, %struct.phy_driver** %phydrv, align 8, !dbg !10461
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10464, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10466, metadata !DIExpression()), !dbg !10468
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10468
  %lock = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 27, !dbg !10468
  %call = call zeroext i1 @mutex_is_locked(%struct.mutex* %lock) #10, !dbg !10468
  %lnot = xor i1 %call, true, !dbg !10468
  %lnot1 = xor i1 %lnot, true, !dbg !10468
  %lnot2 = xor i1 %lnot1, true, !dbg !10468
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !10468
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10468
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !10469
  %tobool = icmp ne i32 %3, 0, !dbg !10469
  %lnot3 = xor i1 %tobool, true, !dbg !10469
  %lnot5 = xor i1 %lnot3, true, !dbg !10469
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !10469
  %conv = sext i32 %lnot.ext6 to i64, !dbg !10469
  %tobool7 = icmp ne i64 %conv, 0, !dbg !10469
  br i1 %tobool7, label %if.then, label %if.end, !dbg !10468

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10469

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !10471

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !10473

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !10471

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i64 0, i64 0), i32 1745, i32 2305, i64 12) #5, !dbg !10475, !srcloc !10477
  br label %do.end10, !dbg !10475

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 351) #5, !dbg !10478, !srcloc !10480
  br label %do.body11, !dbg !10471

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !10481

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !10471

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !10471

if.end:                                           ; preds = %do.end13, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !10468
  %tobool14 = icmp ne i32 %4, 0, !dbg !10468
  %lnot15 = xor i1 %tobool14, true, !dbg !10468
  %lnot17 = xor i1 %lnot15, true, !dbg !10468
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !10468
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !10468
  store i64 %conv19, i64* %tmp, align 8, !dbg !10469
  %5 = load i64, i64* %tmp, align 8, !dbg !10468
  %6 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !10483
  %tobool20 = icmp ne %struct.phy_driver* %6, null, !dbg !10483
  br i1 %tobool20, label %lor.lhs.false, label %if.then22, !dbg !10485

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !10486
  %resume = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %7, i32 0, i32 12, !dbg !10487
  %8 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %resume, align 8, !dbg !10487
  %tobool21 = icmp ne i32 (%struct.phy_device*)* %8, null, !dbg !10486
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !10488

if.then22:                                        ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !10489
  br label %return, !dbg !10489

if.end23:                                         ; preds = %lor.lhs.false
  %9 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !10490
  %resume24 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %9, i32 0, i32 12, !dbg !10491
  %10 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %resume24, align 8, !dbg !10491
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10492
  %call25 = call i32 %10(%struct.phy_device* %11) #10, !dbg !10490
  store i32 %call25, i32* %ret, align 4, !dbg !10493
  %12 = load i32, i32* %ret, align 4, !dbg !10494
  %tobool26 = icmp ne i32 %12, 0, !dbg !10494
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !10496

if.then27:                                        ; preds = %if.end23
  %13 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10497
  %suspended = getelementptr inbounds %struct.phy_device, %struct.phy_device* %13, i32 0, i32 4, !dbg !10498
  %bf.load = load i16, i16* %suspended, align 4, !dbg !10499
  %bf.clear = and i16 %bf.load, -33, !dbg !10499
  store i16 %bf.clear, i16* %suspended, align 4, !dbg !10499
  br label %if.end28, !dbg !10497

if.end28:                                         ; preds = %if.then27, %if.end23
  %14 = load i32, i32* %ret, align 4, !dbg !10500
  store i32 %14, i32* %retval, align 4, !dbg !10501
  br label %return, !dbg !10501

return:                                           ; preds = %if.end28, %if.then22
  %15 = load i32, i32* %retval, align 4, !dbg !10502
  ret i32 %15, !dbg !10502
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @mutex_is_locked(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_loopback(%struct.phy_device* %phydev, i1 zeroext %enable) #0 !dbg !10503 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %enable.addr = alloca i8, align 1
  %phydrv = alloca %struct.phy_driver*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.mdio_driver_common*, align 8
  %tmp4 = alloca %struct.phy_driver*, align 8
  %ret = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10504, metadata !DIExpression()), !dbg !10505
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !10506, metadata !DIExpression()), !dbg !10507
  call void @llvm.dbg.declare(metadata %struct.phy_driver** %phydrv, metadata !10508, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10510, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !10513, metadata !DIExpression()), !dbg !10515
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10515
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 0, !dbg !10515
  %dev = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 0, !dbg !10515
  %driver = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 6, !dbg !10515
  %1 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !10515
  %2 = bitcast %struct.device_driver* %1 to i8*, !dbg !10515
  store i8* %2, i8** %__mptr1, align 8, !dbg !10515
  br label %do.body, !dbg !10515

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10516

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr1, align 8, !dbg !10515
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !10515
  %4 = bitcast i8* %add.ptr to %struct.mdio_driver_common*, !dbg !10515
  store %struct.mdio_driver_common* %4, %struct.mdio_driver_common** %tmp, align 8, !dbg !10516
  %5 = load %struct.mdio_driver_common*, %struct.mdio_driver_common** %tmp, align 8, !dbg !10515
  %6 = bitcast %struct.mdio_driver_common* %5 to i8*, !dbg !10512
  store i8* %6, i8** %__mptr, align 8, !dbg !10512
  br label %do.body2, !dbg !10512

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !10518

do.end3:                                          ; preds = %do.body2
  %7 = load i8*, i8** %__mptr, align 8, !dbg !10512
  %add.ptr5 = getelementptr i8, i8* %7, i64 0, !dbg !10512
  %8 = bitcast i8* %add.ptr5 to %struct.phy_driver*, !dbg !10512
  store %struct.phy_driver* %8, %struct.phy_driver** %tmp4, align 8, !dbg !10518
  %9 = load %struct.phy_driver*, %struct.phy_driver** %tmp4, align 8, !dbg !10512
  store %struct.phy_driver* %9, %struct.phy_driver** %phydrv, align 8, !dbg !10509
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10520, metadata !DIExpression()), !dbg !10521
  store i32 0, i32* %ret, align 4, !dbg !10521
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10522
  %lock = getelementptr inbounds %struct.phy_device, %struct.phy_device* %10, i32 0, i32 27, !dbg !10523
  call void @mutex_lock(%struct.mutex* %lock) #10, !dbg !10524
  %11 = load i8, i8* %enable.addr, align 1, !dbg !10525
  %tobool = trunc i8 %11 to i1, !dbg !10525
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10527

land.lhs.true:                                    ; preds = %do.end3
  %12 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10528
  %loopback_enabled = getelementptr inbounds %struct.phy_device, %struct.phy_device* %12, i32 0, i32 4, !dbg !10529
  %bf.load = load i16, i16* %loopback_enabled, align 4, !dbg !10529
  %bf.lshr = lshr i16 %bf.load, 8, !dbg !10529
  %bf.clear = and i16 %bf.lshr, 1, !dbg !10529
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10529
  %tobool6 = icmp ne i32 %bf.cast, 0, !dbg !10528
  br i1 %tobool6, label %if.then, label %if.end, !dbg !10530

if.then:                                          ; preds = %land.lhs.true
  store i32 -16, i32* %ret, align 4, !dbg !10531
  br label %out, !dbg !10533

if.end:                                           ; preds = %land.lhs.true, %do.end3
  %13 = load i8, i8* %enable.addr, align 1, !dbg !10534
  %tobool7 = trunc i8 %13 to i1, !dbg !10534
  br i1 %tobool7, label %if.end16, label %land.lhs.true8, !dbg !10536

land.lhs.true8:                                   ; preds = %if.end
  %14 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10537
  %loopback_enabled9 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %14, i32 0, i32 4, !dbg !10538
  %bf.load10 = load i16, i16* %loopback_enabled9, align 4, !dbg !10538
  %bf.lshr11 = lshr i16 %bf.load10, 8, !dbg !10538
  %bf.clear12 = and i16 %bf.lshr11, 1, !dbg !10538
  %bf.cast13 = zext i16 %bf.clear12 to i32, !dbg !10538
  %tobool14 = icmp ne i32 %bf.cast13, 0, !dbg !10537
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !10539

if.then15:                                        ; preds = %land.lhs.true8
  store i32 -22, i32* %ret, align 4, !dbg !10540
  br label %out, !dbg !10542

if.end16:                                         ; preds = %land.lhs.true8, %if.end
  %15 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10543
  %drv = getelementptr inbounds %struct.phy_device, %struct.phy_device* %15, i32 0, i32 1, !dbg !10545
  %16 = load %struct.phy_driver*, %struct.phy_driver** %drv, align 8, !dbg !10545
  %tobool17 = icmp ne %struct.phy_driver* %16, null, !dbg !10543
  br i1 %tobool17, label %land.lhs.true18, label %if.else, !dbg !10546

land.lhs.true18:                                  ; preds = %if.end16
  %17 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !10547
  %set_loopback = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %17, i32 0, i32 39, !dbg !10548
  %18 = load i32 (%struct.phy_device*, i1)*, i32 (%struct.phy_device*, i1)** %set_loopback, align 8, !dbg !10548
  %tobool19 = icmp ne i32 (%struct.phy_device*, i1)* %18, null, !dbg !10547
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !10549

if.then20:                                        ; preds = %land.lhs.true18
  %19 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !10550
  %set_loopback21 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %19, i32 0, i32 39, !dbg !10551
  %20 = load i32 (%struct.phy_device*, i1)*, i32 (%struct.phy_device*, i1)** %set_loopback21, align 8, !dbg !10551
  %21 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10552
  %22 = load i8, i8* %enable.addr, align 1, !dbg !10553
  %tobool22 = trunc i8 %22 to i1, !dbg !10553
  %call = call i32 %20(%struct.phy_device* %21, i1 zeroext %tobool22) #10, !dbg !10550
  store i32 %call, i32* %ret, align 4, !dbg !10554
  br label %if.end23, !dbg !10555

if.else:                                          ; preds = %land.lhs.true18, %if.end16
  store i32 -95, i32* %ret, align 4, !dbg !10556
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then20
  %23 = load i32, i32* %ret, align 4, !dbg !10557
  %tobool24 = icmp ne i32 %23, 0, !dbg !10557
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !10559

if.then25:                                        ; preds = %if.end23
  br label %out, !dbg !10560

if.end26:                                         ; preds = %if.end23
  %24 = load i8, i8* %enable.addr, align 1, !dbg !10561
  %tobool27 = trunc i8 %24 to i1, !dbg !10561
  %conv = zext i1 %tobool27 to i32, !dbg !10561
  %25 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10562
  %loopback_enabled28 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %25, i32 0, i32 4, !dbg !10563
  %26 = trunc i32 %conv to i16, !dbg !10564
  %bf.load29 = load i16, i16* %loopback_enabled28, align 4, !dbg !10564
  %bf.value = and i16 %26, 1, !dbg !10564
  %bf.shl = shl i16 %bf.value, 8, !dbg !10564
  %bf.clear30 = and i16 %bf.load29, -257, !dbg !10564
  %bf.set = or i16 %bf.clear30, %bf.shl, !dbg !10564
  store i16 %bf.set, i16* %loopback_enabled28, align 4, !dbg !10564
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !10564
  br label %out, !dbg !10562

out:                                              ; preds = %if.end26, %if.then25, %if.then15, %if.then
  call void @llvm.dbg.label(metadata !10565), !dbg !10566
  %27 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10567
  %lock31 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %27, i32 0, i32 27, !dbg !10568
  call void @mutex_unlock(%struct.mutex* %lock31) #10, !dbg !10569
  %28 = load i32, i32* %ret, align 4, !dbg !10570
  ret i32 %28, !dbg !10571
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_reset_after_clk_enable(%struct.phy_device* %phydev) #0 !dbg !10572 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10573, metadata !DIExpression()), !dbg !10574
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10575
  %tobool = icmp ne %struct.phy_device* %0, null, !dbg !10575
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10577

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10578
  %drv = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 1, !dbg !10579
  %2 = load %struct.phy_driver*, %struct.phy_driver** %drv, align 8, !dbg !10579
  %tobool1 = icmp ne %struct.phy_driver* %2, null, !dbg !10578
  br i1 %tobool1, label %if.end, label %if.then, !dbg !10580

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -19, i32* %retval, align 4, !dbg !10581
  br label %return, !dbg !10581

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10582
  %drv2 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %3, i32 0, i32 1, !dbg !10584
  %4 = load %struct.phy_driver*, %struct.phy_driver** %drv2, align 8, !dbg !10584
  %flags = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %4, i32 0, i32 5, !dbg !10585
  %5 = load i32, i32* %flags, align 8, !dbg !10585
  %and = and i32 %5, 2, !dbg !10586
  %tobool3 = icmp ne i32 %and, 0, !dbg !10586
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !10587

if.then4:                                         ; preds = %if.end
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10588
  call void @phy_device_reset(%struct.phy_device* %6, i32 1) #10, !dbg !10590
  %7 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10591
  call void @phy_device_reset(%struct.phy_device* %7, i32 0) #10, !dbg !10592
  store i32 1, i32* %retval, align 4, !dbg !10593
  br label %return, !dbg !10593

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10594
  br label %return, !dbg !10594

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !10595
  ret i32 %8, !dbg !10595
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_config_eee_advert(%struct.phy_device* %phydev) #0 !dbg !10596 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %err = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10597, metadata !DIExpression()), !dbg !10598
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10599, metadata !DIExpression()), !dbg !10600
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10601
  %eee_broken_modes = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 19, !dbg !10603
  %1 = load i32, i32* %eee_broken_modes, align 8, !dbg !10603
  %tobool = icmp ne i32 %1, 0, !dbg !10601
  br i1 %tobool, label %if.end, label %if.then, !dbg !10604

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10605
  br label %return, !dbg !10605

if.end:                                           ; preds = %entry
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10606
  %3 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10607
  %eee_broken_modes1 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %3, i32 0, i32 19, !dbg !10608
  %4 = load i32, i32* %eee_broken_modes1, align 8, !dbg !10608
  %conv = trunc i32 %4 to i16, !dbg !10607
  %call = call i32 @phy_modify_mmd_changed(%struct.phy_device* %2, i32 7, i32 60, i16 zeroext %conv, i16 zeroext 0) #10, !dbg !10609
  store i32 %call, i32* %err, align 4, !dbg !10610
  %5 = load i32, i32* %err, align 4, !dbg !10611
  %cmp = icmp slt i32 %5, 0, !dbg !10612
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10611

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !10611

cond.false:                                       ; preds = %if.end
  %6 = load i32, i32* %err, align 4, !dbg !10613
  br label %cond.end, !dbg !10611

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %6, %cond.false ], !dbg !10611
  store i32 %cond, i32* %retval, align 4, !dbg !10614
  br label %return, !dbg !10614

return:                                           ; preds = %cond.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !10615
  ret i32 %7, !dbg !10615
}

; Function Attrs: noredzone
declare dso_local i32 @phy_modify_mmd_changed(%struct.phy_device*, i32, i32, i16 zeroext, i16 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_setup_forced(%struct.phy_device* %phydev) #0 !dbg !10616 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %ctl = alloca i16, align 2
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10617, metadata !DIExpression()), !dbg !10618
  call void @llvm.dbg.declare(metadata i16* %ctl, metadata !10619, metadata !DIExpression()), !dbg !10620
  store i16 0, i16* %ctl, align 2, !dbg !10620
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10621
  %pause = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 10, !dbg !10622
  store i32 0, i32* %pause, align 4, !dbg !10623
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10624
  %asym_pause = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 11, !dbg !10625
  store i32 0, i32* %asym_pause, align 8, !dbg !10626
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10627
  %speed = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 8, !dbg !10629
  %3 = load i32, i32* %speed, align 4, !dbg !10629
  %cmp = icmp eq i32 1000, %3, !dbg !10630
  br i1 %cmp, label %if.then, label %if.else, !dbg !10631

if.then:                                          ; preds = %entry
  %4 = load i16, i16* %ctl, align 2, !dbg !10632
  %conv = zext i16 %4 to i32, !dbg !10632
  %or = or i32 %conv, 64, !dbg !10632
  %conv1 = trunc i32 %or to i16, !dbg !10632
  store i16 %conv1, i16* %ctl, align 2, !dbg !10632
  br label %if.end9, !dbg !10633

if.else:                                          ; preds = %entry
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10634
  %speed2 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %5, i32 0, i32 8, !dbg !10636
  %6 = load i32, i32* %speed2, align 4, !dbg !10636
  %cmp3 = icmp eq i32 100, %6, !dbg !10637
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !10638

if.then5:                                         ; preds = %if.else
  %7 = load i16, i16* %ctl, align 2, !dbg !10639
  %conv6 = zext i16 %7 to i32, !dbg !10639
  %or7 = or i32 %conv6, 8192, !dbg !10639
  %conv8 = trunc i32 %or7 to i16, !dbg !10639
  store i16 %conv8, i16* %ctl, align 2, !dbg !10639
  br label %if.end, !dbg !10640

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %8 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10641
  %duplex = getelementptr inbounds %struct.phy_device, %struct.phy_device* %8, i32 0, i32 9, !dbg !10643
  %9 = load i32, i32* %duplex, align 8, !dbg !10643
  %cmp10 = icmp eq i32 1, %9, !dbg !10644
  br i1 %cmp10, label %if.then12, label %if.end16, !dbg !10645

if.then12:                                        ; preds = %if.end9
  %10 = load i16, i16* %ctl, align 2, !dbg !10646
  %conv13 = zext i16 %10 to i32, !dbg !10646
  %or14 = or i32 %conv13, 256, !dbg !10646
  %conv15 = trunc i32 %or14 to i16, !dbg !10646
  store i16 %conv15, i16* %ctl, align 2, !dbg !10646
  br label %if.end16, !dbg !10647

if.end16:                                         ; preds = %if.then12, %if.end9
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10648
  %12 = load i16, i16* %ctl, align 2, !dbg !10649
  %call = call i32 @phy_modify(%struct.phy_device* %11, i32 0, i16 zeroext -19457, i16 zeroext %12) #10, !dbg !10650
  ret i32 %call, !dbg !10651
}

; Function Attrs: noredzone
declare dso_local i32 @phy_modify(%struct.phy_device*, i32, i16 zeroext, i16 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_restart_aneg(%struct.phy_device* %phydev) #0 !dbg !10652 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10653, metadata !DIExpression()), !dbg !10654
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10655
  %call = call i32 @phy_modify(%struct.phy_device* %0, i32 0, i16 zeroext 1024, i16 zeroext 4608) #10, !dbg !10656
  ret i32 %call, !dbg !10657
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_check_and_restart_aneg(%struct.phy_device* %phydev, i1 zeroext %restart) #0 !dbg !10658 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %restart.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10659, metadata !DIExpression()), !dbg !10660
  %frombool = zext i1 %restart to i8
  store i8 %frombool, i8* %restart.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %restart.addr, metadata !10661, metadata !DIExpression()), !dbg !10662
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10663, metadata !DIExpression()), !dbg !10664
  %0 = load i8, i8* %restart.addr, align 1, !dbg !10665
  %tobool = trunc i8 %0 to i1, !dbg !10665
  br i1 %tobool, label %if.end7, label %if.then, !dbg !10667

if.then:                                          ; preds = %entry
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10668
  %call = call i32 @phy_read(%struct.phy_device* %1, i32 0) #10, !dbg !10670
  store i32 %call, i32* %ret, align 4, !dbg !10671
  %2 = load i32, i32* %ret, align 4, !dbg !10672
  %cmp = icmp slt i32 %2, 0, !dbg !10674
  br i1 %cmp, label %if.then1, label %if.end, !dbg !10675

if.then1:                                         ; preds = %if.then
  %3 = load i32, i32* %ret, align 4, !dbg !10676
  store i32 %3, i32* %retval, align 4, !dbg !10677
  br label %return, !dbg !10677

if.end:                                           ; preds = %if.then
  %4 = load i32, i32* %ret, align 4, !dbg !10678
  %and = and i32 %4, 4096, !dbg !10680
  %tobool2 = icmp ne i32 %and, 0, !dbg !10680
  br i1 %tobool2, label %lor.lhs.false, label %if.then5, !dbg !10681

lor.lhs.false:                                    ; preds = %if.end
  %5 = load i32, i32* %ret, align 4, !dbg !10682
  %and3 = and i32 %5, 1024, !dbg !10683
  %tobool4 = icmp ne i32 %and3, 0, !dbg !10683
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10684

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  store i8 1, i8* %restart.addr, align 1, !dbg !10685
  br label %if.end6, !dbg !10686

if.end6:                                          ; preds = %if.then5, %lor.lhs.false
  br label %if.end7, !dbg !10687

if.end7:                                          ; preds = %if.end6, %entry
  %6 = load i8, i8* %restart.addr, align 1, !dbg !10688
  %tobool8 = trunc i8 %6 to i1, !dbg !10688
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !10690

if.then9:                                         ; preds = %if.end7
  %7 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10691
  %call10 = call i32 @genphy_restart_aneg(%struct.phy_device* %7) #10, !dbg !10692
  store i32 %call10, i32* %retval, align 4, !dbg !10693
  br label %return, !dbg !10693

if.end11:                                         ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !10694
  br label %return, !dbg !10694

return:                                           ; preds = %if.end11, %if.then9, %if.then1
  %8 = load i32, i32* %retval, align 4, !dbg !10695
  ret i32 %8, !dbg !10695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_read(%struct.phy_device* %phydev, i32 %regnum) #0 !dbg !10696 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %regnum.addr = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10697, metadata !DIExpression()), !dbg !10698
  store i32 %regnum, i32* %regnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regnum.addr, metadata !10699, metadata !DIExpression()), !dbg !10700
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10701
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 0, !dbg !10702
  %bus = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 1, !dbg !10703
  %1 = load %struct.mii_bus*, %struct.mii_bus** %bus, align 8, !dbg !10703
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10704
  %mdio1 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 0, !dbg !10705
  %addr = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio1, i32 0, i32 6, !dbg !10706
  %3 = load i32, i32* %addr, align 8, !dbg !10706
  %4 = load i32, i32* %regnum.addr, align 4, !dbg !10707
  %call = call i32 @mdiobus_read(%struct.mii_bus* %1, i32 %3, i32 %4) #10, !dbg !10708
  ret i32 %call, !dbg !10709
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__genphy_config_aneg(%struct.phy_device* %phydev, i1 zeroext %changed) #0 !dbg !10710 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %changed.addr = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10711, metadata !DIExpression()), !dbg !10712
  %frombool = zext i1 %changed to i8
  store i8 %frombool, i8* %changed.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %changed.addr, metadata !10713, metadata !DIExpression()), !dbg !10714
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10715, metadata !DIExpression()), !dbg !10716
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10717
  %call = call i32 @genphy_config_eee_advert(%struct.phy_device* %0) #10, !dbg !10719
  %tobool = icmp ne i32 %call, 0, !dbg !10719
  br i1 %tobool, label %if.then, label %if.end, !dbg !10720

if.then:                                          ; preds = %entry
  store i8 1, i8* %changed.addr, align 1, !dbg !10721
  br label %if.end, !dbg !10722

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10723
  %call1 = call i32 @genphy_setup_master_slave(%struct.phy_device* %1) #10, !dbg !10724
  store i32 %call1, i32* %err, align 4, !dbg !10725
  %2 = load i32, i32* %err, align 4, !dbg !10726
  %cmp = icmp slt i32 %2, 0, !dbg !10728
  br i1 %cmp, label %if.then2, label %if.else, !dbg !10729

if.then2:                                         ; preds = %if.end
  %3 = load i32, i32* %err, align 4, !dbg !10730
  store i32 %3, i32* %retval, align 4, !dbg !10731
  br label %return, !dbg !10731

if.else:                                          ; preds = %if.end
  %4 = load i32, i32* %err, align 4, !dbg !10732
  %tobool3 = icmp ne i32 %4, 0, !dbg !10732
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !10734

if.then4:                                         ; preds = %if.else
  store i8 1, i8* %changed.addr, align 1, !dbg !10735
  br label %if.end5, !dbg !10736

if.end5:                                          ; preds = %if.then4, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end5
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10737
  %autoneg = getelementptr inbounds %struct.phy_device, %struct.phy_device* %5, i32 0, i32 4, !dbg !10739
  %bf.load = load i16, i16* %autoneg, align 4, !dbg !10739
  %bf.lshr = lshr i16 %bf.load, 10, !dbg !10739
  %bf.clear = and i16 %bf.lshr, 1, !dbg !10739
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10739
  %cmp7 = icmp ne i32 1, %bf.cast, !dbg !10740
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !10741

if.then8:                                         ; preds = %if.end6
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10742
  %call9 = call i32 @genphy_setup_forced(%struct.phy_device* %6) #10, !dbg !10743
  store i32 %call9, i32* %retval, align 4, !dbg !10744
  br label %return, !dbg !10744

if.end10:                                         ; preds = %if.end6
  %7 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10745
  %call11 = call i32 @genphy_config_advert(%struct.phy_device* %7) #10, !dbg !10746
  store i32 %call11, i32* %err, align 4, !dbg !10747
  %8 = load i32, i32* %err, align 4, !dbg !10748
  %cmp12 = icmp slt i32 %8, 0, !dbg !10750
  br i1 %cmp12, label %if.then13, label %if.else14, !dbg !10751

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %err, align 4, !dbg !10752
  store i32 %9, i32* %retval, align 4, !dbg !10753
  br label %return, !dbg !10753

if.else14:                                        ; preds = %if.end10
  %10 = load i32, i32* %err, align 4, !dbg !10754
  %tobool15 = icmp ne i32 %10, 0, !dbg !10754
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !10756

if.then16:                                        ; preds = %if.else14
  store i8 1, i8* %changed.addr, align 1, !dbg !10757
  br label %if.end17, !dbg !10758

if.end17:                                         ; preds = %if.then16, %if.else14
  br label %if.end18

if.end18:                                         ; preds = %if.end17
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10759
  %12 = load i8, i8* %changed.addr, align 1, !dbg !10760
  %tobool19 = trunc i8 %12 to i1, !dbg !10760
  %call20 = call i32 @genphy_check_and_restart_aneg(%struct.phy_device* %11, i1 zeroext %tobool19) #10, !dbg !10761
  store i32 %call20, i32* %retval, align 4, !dbg !10762
  br label %return, !dbg !10762

return:                                           ; preds = %if.end18, %if.then13, %if.then8, %if.then2
  %13 = load i32, i32* %retval, align 4, !dbg !10763
  ret i32 %13, !dbg !10763
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genphy_setup_master_slave(%struct.phy_device* %phydev) #0 !dbg !10764 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %ctl = alloca i16, align 2
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10765, metadata !DIExpression()), !dbg !10766
  call void @llvm.dbg.declare(metadata i16* %ctl, metadata !10767, metadata !DIExpression()), !dbg !10768
  store i16 0, i16* %ctl, align 2, !dbg !10768
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10769
  %is_gigabit_capable = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 4, !dbg !10771
  %bf.load = load i16, i16* %is_gigabit_capable, align 4, !dbg !10771
  %bf.lshr = lshr i16 %bf.load, 3, !dbg !10771
  %bf.clear = and i16 %bf.lshr, 1, !dbg !10771
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10771
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !10769
  br i1 %tobool, label %if.end, label %if.then, !dbg !10772

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10773
  br label %return, !dbg !10773

if.end:                                           ; preds = %entry
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10774
  %master_slave_set = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 13, !dbg !10775
  %2 = load i8, i8* %master_slave_set, align 1, !dbg !10775
  %conv = zext i8 %2 to i32, !dbg !10774
  switch i32 %conv, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 5, label %sw.bb8
    i32 1, label %sw.bb12
    i32 0, label %sw.bb12
  ], !dbg !10776

sw.bb:                                            ; preds = %if.end
  %3 = load i16, i16* %ctl, align 2, !dbg !10777
  %conv1 = zext i16 %3 to i32, !dbg !10777
  %or = or i32 %conv1, 1024, !dbg !10777
  %conv2 = trunc i32 %or to i16, !dbg !10777
  store i16 %conv2, i16* %ctl, align 2, !dbg !10777
  br label %sw.epilog, !dbg !10779

sw.bb3:                                           ; preds = %if.end
  br label %sw.epilog, !dbg !10780

sw.bb4:                                           ; preds = %if.end
  %4 = load i16, i16* %ctl, align 2, !dbg !10781
  %conv5 = zext i16 %4 to i32, !dbg !10781
  %or6 = or i32 %conv5, 2048, !dbg !10781
  %conv7 = trunc i32 %or6 to i16, !dbg !10781
  store i16 %conv7, i16* %ctl, align 2, !dbg !10781
  br label %sw.bb8, !dbg !10782

sw.bb8:                                           ; preds = %if.end, %sw.bb4
  %5 = load i16, i16* %ctl, align 2, !dbg !10783
  %conv9 = zext i16 %5 to i32, !dbg !10783
  %or10 = or i32 %conv9, 4096, !dbg !10783
  %conv11 = trunc i32 %or10 to i16, !dbg !10783
  store i16 %conv11, i16* %ctl, align 2, !dbg !10783
  br label %sw.epilog, !dbg !10784

sw.bb12:                                          ; preds = %if.end, %if.end
  store i32 0, i32* %retval, align 4, !dbg !10785
  br label %return, !dbg !10785

sw.default:                                       ; preds = %if.end
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10786
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %6, i32 0, i32 0, !dbg !10786
  %dev = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 0, !dbg !10786
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.66, i64 0, i64 0)) #13, !dbg !10786
  store i32 -95, i32* %retval, align 4, !dbg !10787
  br label %return, !dbg !10787

sw.epilog:                                        ; preds = %sw.bb8, %sw.bb3, %sw.bb
  %7 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10788
  %8 = load i16, i16* %ctl, align 2, !dbg !10789
  %call = call i32 @phy_modify_changed(%struct.phy_device* %7, i32 9, i16 zeroext 7168, i16 zeroext %8) #10, !dbg !10790
  store i32 %call, i32* %retval, align 4, !dbg !10791
  br label %return, !dbg !10791

return:                                           ; preds = %sw.epilog, %sw.default, %sw.bb12, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !10792
  ret i32 %9, !dbg !10792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genphy_config_advert(%struct.phy_device* %phydev) #0 !dbg !10793 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %err = alloca i32, align 4
  %bmsr = alloca i32, align 4
  %changed = alloca i32, align 4
  %adv = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10794, metadata !DIExpression()), !dbg !10795
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10796, metadata !DIExpression()), !dbg !10797
  call void @llvm.dbg.declare(metadata i32* %bmsr, metadata !10798, metadata !DIExpression()), !dbg !10799
  call void @llvm.dbg.declare(metadata i32* %changed, metadata !10800, metadata !DIExpression()), !dbg !10801
  store i32 0, i32* %changed, align 4, !dbg !10801
  call void @llvm.dbg.declare(metadata i32* %adv, metadata !10802, metadata !DIExpression()), !dbg !10803
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10804
  %advertising = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 16, !dbg !10805
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %advertising, i64 0, i64 0, !dbg !10804
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10806
  %advertising1 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 16, !dbg !10807
  %arraydecay2 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising1, i64 0, i64 0, !dbg !10806
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10808
  %supported = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 15, !dbg !10809
  %arraydecay3 = getelementptr inbounds [2 x i64], [2 x i64]* %supported, i64 0, i64 0, !dbg !10808
  call void @linkmode_and(i64* %arraydecay, i64* %arraydecay2, i64* %arraydecay3) #10, !dbg !10810
  %3 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10811
  %advertising4 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %3, i32 0, i32 16, !dbg !10812
  %arraydecay5 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising4, i64 0, i64 0, !dbg !10811
  %call = call i32 @linkmode_adv_to_mii_adv_t(i64* %arraydecay5) #10, !dbg !10813
  store i32 %call, i32* %adv, align 4, !dbg !10814
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10815
  %5 = load i32, i32* %adv, align 4, !dbg !10816
  %conv = trunc i32 %5 to i16, !dbg !10816
  %call6 = call i32 @phy_modify_changed(%struct.phy_device* %4, i32 4, i16 zeroext 4064, i16 zeroext %conv) #10, !dbg !10817
  store i32 %call6, i32* %err, align 4, !dbg !10818
  %6 = load i32, i32* %err, align 4, !dbg !10819
  %cmp = icmp slt i32 %6, 0, !dbg !10821
  br i1 %cmp, label %if.then, label %if.end, !dbg !10822

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !10823
  store i32 %7, i32* %retval, align 4, !dbg !10824
  br label %return, !dbg !10824

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %err, align 4, !dbg !10825
  %cmp8 = icmp sgt i32 %8, 0, !dbg !10827
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !10828

if.then10:                                        ; preds = %if.end
  store i32 1, i32* %changed, align 4, !dbg !10829
  br label %if.end11, !dbg !10830

if.end11:                                         ; preds = %if.then10, %if.end
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10831
  %call12 = call i32 @phy_read(%struct.phy_device* %9, i32 1) #10, !dbg !10832
  store i32 %call12, i32* %bmsr, align 4, !dbg !10833
  %10 = load i32, i32* %bmsr, align 4, !dbg !10834
  %cmp13 = icmp slt i32 %10, 0, !dbg !10836
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !10837

if.then15:                                        ; preds = %if.end11
  %11 = load i32, i32* %bmsr, align 4, !dbg !10838
  store i32 %11, i32* %retval, align 4, !dbg !10839
  br label %return, !dbg !10839

if.end16:                                         ; preds = %if.end11
  %12 = load i32, i32* %bmsr, align 4, !dbg !10840
  %and = and i32 %12, 256, !dbg !10842
  %tobool = icmp ne i32 %and, 0, !dbg !10842
  br i1 %tobool, label %if.end18, label %if.then17, !dbg !10843

if.then17:                                        ; preds = %if.end16
  %13 = load i32, i32* %changed, align 4, !dbg !10844
  store i32 %13, i32* %retval, align 4, !dbg !10845
  br label %return, !dbg !10845

if.end18:                                         ; preds = %if.end16
  %14 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10846
  %advertising19 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %14, i32 0, i32 16, !dbg !10847
  %arraydecay20 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising19, i64 0, i64 0, !dbg !10846
  %call21 = call i32 @linkmode_adv_to_mii_ctrl1000_t(i64* %arraydecay20) #10, !dbg !10848
  store i32 %call21, i32* %adv, align 4, !dbg !10849
  %15 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10850
  %16 = load i32, i32* %adv, align 4, !dbg !10851
  %conv22 = trunc i32 %16 to i16, !dbg !10851
  %call23 = call i32 @phy_modify_changed(%struct.phy_device* %15, i32 9, i16 zeroext 768, i16 zeroext %conv22) #10, !dbg !10852
  store i32 %call23, i32* %err, align 4, !dbg !10853
  %17 = load i32, i32* %err, align 4, !dbg !10854
  %cmp24 = icmp slt i32 %17, 0, !dbg !10856
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !10857

if.then26:                                        ; preds = %if.end18
  %18 = load i32, i32* %err, align 4, !dbg !10858
  store i32 %18, i32* %retval, align 4, !dbg !10859
  br label %return, !dbg !10859

if.end27:                                         ; preds = %if.end18
  %19 = load i32, i32* %err, align 4, !dbg !10860
  %cmp28 = icmp sgt i32 %19, 0, !dbg !10862
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !10863

if.then30:                                        ; preds = %if.end27
  store i32 1, i32* %changed, align 4, !dbg !10864
  br label %if.end31, !dbg !10865

if.end31:                                         ; preds = %if.then30, %if.end27
  %20 = load i32, i32* %changed, align 4, !dbg !10866
  store i32 %20, i32* %retval, align 4, !dbg !10867
  br label %return, !dbg !10867

return:                                           ; preds = %if.end31, %if.then26, %if.then17, %if.then15, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !10868
  ret i32 %21, !dbg !10868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_c37_config_aneg(%struct.phy_device* %phydev) #0 !dbg !10869 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %err = alloca i32, align 4
  %changed = alloca i32, align 4
  %ctl = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10870, metadata !DIExpression()), !dbg !10871
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10872, metadata !DIExpression()), !dbg !10873
  call void @llvm.dbg.declare(metadata i32* %changed, metadata !10874, metadata !DIExpression()), !dbg !10875
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10876
  %autoneg = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 4, !dbg !10878
  %bf.load = load i16, i16* %autoneg, align 4, !dbg !10878
  %bf.lshr = lshr i16 %bf.load, 10, !dbg !10878
  %bf.clear = and i16 %bf.lshr, 1, !dbg !10878
  %bf.cast = zext i16 %bf.clear to i32, !dbg !10878
  %cmp = icmp ne i32 %bf.cast, 1, !dbg !10879
  br i1 %cmp, label %if.then, label %if.end, !dbg !10880

if.then:                                          ; preds = %entry
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10881
  %call = call i32 @genphy_setup_forced(%struct.phy_device* %1) #10, !dbg !10882
  store i32 %call, i32* %retval, align 4, !dbg !10883
  br label %return, !dbg !10883

if.end:                                           ; preds = %entry
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10884
  %call1 = call i32 @phy_modify(%struct.phy_device* %2, i32 0, i16 zeroext 8256, i16 zeroext 64) #10, !dbg !10885
  store i32 %call1, i32* %err, align 4, !dbg !10886
  %3 = load i32, i32* %err, align 4, !dbg !10887
  %tobool = icmp ne i32 %3, 0, !dbg !10887
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !10889

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %err, align 4, !dbg !10890
  store i32 %4, i32* %retval, align 4, !dbg !10891
  br label %return, !dbg !10891

if.end3:                                          ; preds = %if.end
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10892
  %call4 = call i32 @genphy_c37_config_advert(%struct.phy_device* %5) #10, !dbg !10893
  store i32 %call4, i32* %changed, align 4, !dbg !10894
  %6 = load i32, i32* %changed, align 4, !dbg !10895
  %cmp5 = icmp slt i32 %6, 0, !dbg !10897
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10898

if.then6:                                         ; preds = %if.end3
  %7 = load i32, i32* %changed, align 4, !dbg !10899
  store i32 %7, i32* %retval, align 4, !dbg !10900
  br label %return, !dbg !10900

if.end7:                                          ; preds = %if.end3
  %8 = load i32, i32* %changed, align 4, !dbg !10901
  %tobool8 = icmp ne i32 %8, 0, !dbg !10901
  br i1 %tobool8, label %if.end19, label %if.then9, !dbg !10903

if.then9:                                         ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i32* %ctl, metadata !10904, metadata !DIExpression()), !dbg !10906
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10907
  %call10 = call i32 @phy_read(%struct.phy_device* %9, i32 0) #10, !dbg !10908
  store i32 %call10, i32* %ctl, align 4, !dbg !10906
  %10 = load i32, i32* %ctl, align 4, !dbg !10909
  %cmp11 = icmp slt i32 %10, 0, !dbg !10911
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !10912

if.then12:                                        ; preds = %if.then9
  %11 = load i32, i32* %ctl, align 4, !dbg !10913
  store i32 %11, i32* %retval, align 4, !dbg !10914
  br label %return, !dbg !10914

if.end13:                                         ; preds = %if.then9
  %12 = load i32, i32* %ctl, align 4, !dbg !10915
  %and = and i32 %12, 4096, !dbg !10917
  %tobool14 = icmp ne i32 %and, 0, !dbg !10917
  br i1 %tobool14, label %lor.lhs.false, label %if.then17, !dbg !10918

lor.lhs.false:                                    ; preds = %if.end13
  %13 = load i32, i32* %ctl, align 4, !dbg !10919
  %and15 = and i32 %13, 1024, !dbg !10920
  %tobool16 = icmp ne i32 %and15, 0, !dbg !10920
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !10921

if.then17:                                        ; preds = %lor.lhs.false, %if.end13
  store i32 1, i32* %changed, align 4, !dbg !10922
  br label %if.end18, !dbg !10923

if.end18:                                         ; preds = %if.then17, %lor.lhs.false
  br label %if.end19, !dbg !10924

if.end19:                                         ; preds = %if.end18, %if.end7
  %14 = load i32, i32* %changed, align 4, !dbg !10925
  %cmp20 = icmp sgt i32 %14, 0, !dbg !10927
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !10928

if.then21:                                        ; preds = %if.end19
  %15 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10929
  %call22 = call i32 @genphy_restart_aneg(%struct.phy_device* %15) #10, !dbg !10930
  store i32 %call22, i32* %retval, align 4, !dbg !10931
  br label %return, !dbg !10931

if.end23:                                         ; preds = %if.end19
  store i32 0, i32* %retval, align 4, !dbg !10932
  br label %return, !dbg !10932

return:                                           ; preds = %if.end23, %if.then21, %if.then12, %if.then6, %if.then2, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !10933
  ret i32 %16, !dbg !10933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genphy_c37_config_advert(%struct.phy_device* %phydev) #0 !dbg !10934 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %adv = alloca i16, align 2
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10935, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.declare(metadata i16* %adv, metadata !10937, metadata !DIExpression()), !dbg !10938
  store i16 0, i16* %adv, align 2, !dbg !10938
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10939
  %advertising = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 16, !dbg !10940
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %advertising, i64 0, i64 0, !dbg !10939
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10941
  %advertising1 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 16, !dbg !10942
  %arraydecay2 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising1, i64 0, i64 0, !dbg !10941
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10943
  %supported = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 15, !dbg !10944
  %arraydecay3 = getelementptr inbounds [2 x i64], [2 x i64]* %supported, i64 0, i64 0, !dbg !10943
  call void @linkmode_and(i64* %arraydecay, i64* %arraydecay2, i64* %arraydecay3) #10, !dbg !10945
  %3 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10946
  %advertising4 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %3, i32 0, i32 16, !dbg !10948
  %arraydecay5 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising4, i64 0, i64 0, !dbg !10946
  %call = call i32 @linkmode_test_bit(i32 41, i64* %arraydecay5) #10, !dbg !10949
  %tobool = icmp ne i32 %call, 0, !dbg !10949
  br i1 %tobool, label %if.then, label %if.end, !dbg !10950

if.then:                                          ; preds = %entry
  %4 = load i16, i16* %adv, align 2, !dbg !10951
  %conv = zext i16 %4 to i32, !dbg !10951
  %or = or i32 %conv, 32, !dbg !10951
  %conv6 = trunc i32 %or to i16, !dbg !10951
  store i16 %conv6, i16* %adv, align 2, !dbg !10951
  br label %if.end, !dbg !10952

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10953
  %advertising7 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %5, i32 0, i32 16, !dbg !10955
  %arraydecay8 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising7, i64 0, i64 0, !dbg !10953
  %call9 = call i32 @linkmode_test_bit(i32 13, i64* %arraydecay8) #10, !dbg !10956
  %tobool10 = icmp ne i32 %call9, 0, !dbg !10956
  br i1 %tobool10, label %if.then11, label %if.end15, !dbg !10957

if.then11:                                        ; preds = %if.end
  %6 = load i16, i16* %adv, align 2, !dbg !10958
  %conv12 = zext i16 %6 to i32, !dbg !10958
  %or13 = or i32 %conv12, 128, !dbg !10958
  %conv14 = trunc i32 %or13 to i16, !dbg !10958
  store i16 %conv14, i16* %adv, align 2, !dbg !10958
  br label %if.end15, !dbg !10959

if.end15:                                         ; preds = %if.then11, %if.end
  %7 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10960
  %advertising16 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %7, i32 0, i32 16, !dbg !10962
  %arraydecay17 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising16, i64 0, i64 0, !dbg !10960
  %call18 = call i32 @linkmode_test_bit(i32 14, i64* %arraydecay17) #10, !dbg !10963
  %tobool19 = icmp ne i32 %call18, 0, !dbg !10963
  br i1 %tobool19, label %if.then20, label %if.end24, !dbg !10964

if.then20:                                        ; preds = %if.end15
  %8 = load i16, i16* %adv, align 2, !dbg !10965
  %conv21 = zext i16 %8 to i32, !dbg !10965
  %or22 = or i32 %conv21, 256, !dbg !10965
  %conv23 = trunc i32 %or22 to i16, !dbg !10965
  store i16 %conv23, i16* %adv, align 2, !dbg !10965
  br label %if.end24, !dbg !10966

if.end24:                                         ; preds = %if.then20, %if.end15
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10967
  %10 = load i16, i16* %adv, align 2, !dbg !10968
  %call25 = call i32 @phy_modify_changed(%struct.phy_device* %9, i32 4, i16 zeroext 480, i16 zeroext %10) #10, !dbg !10969
  ret i32 %call25, !dbg !10970
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_aneg_done(%struct.phy_device* %phydev) #0 !dbg !10971 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %retval1 = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10972, metadata !DIExpression()), !dbg !10973
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !10974, metadata !DIExpression()), !dbg !10975
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10976
  %call = call i32 @phy_read(%struct.phy_device* %0, i32 1) #10, !dbg !10977
  store i32 %call, i32* %retval1, align 4, !dbg !10975
  %1 = load i32, i32* %retval1, align 4, !dbg !10978
  %cmp = icmp slt i32 %1, 0, !dbg !10979
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10980

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %retval1, align 4, !dbg !10981
  br label %cond.end, !dbg !10980

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %retval1, align 4, !dbg !10982
  %and = and i32 %3, 32, !dbg !10983
  br label %cond.end, !dbg !10980

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %and, %cond.false ], !dbg !10980
  ret i32 %cond, !dbg !10984
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_update_link(%struct.phy_device* %phydev) #0 !dbg !10985 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %status = alloca i32, align 4
  %bmcr = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !10986, metadata !DIExpression()), !dbg !10987
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10988, metadata !DIExpression()), !dbg !10989
  store i32 0, i32* %status, align 4, !dbg !10989
  call void @llvm.dbg.declare(metadata i32* %bmcr, metadata !10990, metadata !DIExpression()), !dbg !10991
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !10992
  %call = call i32 @phy_read(%struct.phy_device* %0, i32 0) #10, !dbg !10993
  store i32 %call, i32* %bmcr, align 4, !dbg !10994
  %1 = load i32, i32* %bmcr, align 4, !dbg !10995
  %cmp = icmp slt i32 %1, 0, !dbg !10997
  br i1 %cmp, label %if.then, label %if.end, !dbg !10998

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %bmcr, align 4, !dbg !10999
  store i32 %2, i32* %retval, align 4, !dbg !11000
  br label %return, !dbg !11000

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %bmcr, align 4, !dbg !11001
  %and = and i32 %3, 512, !dbg !11003
  %tobool = icmp ne i32 %and, 0, !dbg !11003
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !11004

if.then1:                                         ; preds = %if.end
  br label %done, !dbg !11005

if.end2:                                          ; preds = %if.end
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11006
  %call3 = call zeroext i1 @phy_polling_mode(%struct.phy_device* %4) #10, !dbg !11008
  br i1 %call3, label %lor.lhs.false, label %if.then5, !dbg !11009

lor.lhs.false:                                    ; preds = %if.end2
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11010
  %link = getelementptr inbounds %struct.phy_device, %struct.phy_device* %5, i32 0, i32 4, !dbg !11011
  %bf.load = load i16, i16* %link, align 4, !dbg !11011
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !11011
  %bf.clear = and i16 %bf.lshr, 1, !dbg !11011
  %bf.cast = zext i16 %bf.clear to i32, !dbg !11011
  %tobool4 = icmp ne i32 %bf.cast, 0, !dbg !11010
  br i1 %tobool4, label %if.end14, label %if.then5, !dbg !11012

if.then5:                                         ; preds = %lor.lhs.false, %if.end2
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11013
  %call6 = call i32 @phy_read(%struct.phy_device* %6, i32 1) #10, !dbg !11015
  store i32 %call6, i32* %status, align 4, !dbg !11016
  %7 = load i32, i32* %status, align 4, !dbg !11017
  %cmp7 = icmp slt i32 %7, 0, !dbg !11019
  br i1 %cmp7, label %if.then8, label %if.else, !dbg !11020

if.then8:                                         ; preds = %if.then5
  %8 = load i32, i32* %status, align 4, !dbg !11021
  store i32 %8, i32* %retval, align 4, !dbg !11022
  br label %return, !dbg !11022

if.else:                                          ; preds = %if.then5
  %9 = load i32, i32* %status, align 4, !dbg !11023
  %and9 = and i32 %9, 4, !dbg !11025
  %tobool10 = icmp ne i32 %and9, 0, !dbg !11025
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !11026

if.then11:                                        ; preds = %if.else
  br label %done, !dbg !11027

if.end12:                                         ; preds = %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12
  br label %if.end14, !dbg !11028

if.end14:                                         ; preds = %if.end13, %lor.lhs.false
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11029
  %call15 = call i32 @phy_read(%struct.phy_device* %10, i32 1) #10, !dbg !11030
  store i32 %call15, i32* %status, align 4, !dbg !11031
  %11 = load i32, i32* %status, align 4, !dbg !11032
  %cmp16 = icmp slt i32 %11, 0, !dbg !11034
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !11035

if.then17:                                        ; preds = %if.end14
  %12 = load i32, i32* %status, align 4, !dbg !11036
  store i32 %12, i32* %retval, align 4, !dbg !11037
  br label %return, !dbg !11037

if.end18:                                         ; preds = %if.end14
  br label %done, !dbg !11038

done:                                             ; preds = %if.end18, %if.then11, %if.then1
  call void @llvm.dbg.label(metadata !11039), !dbg !11040
  %13 = load i32, i32* %status, align 4, !dbg !11041
  %and19 = and i32 %13, 4, !dbg !11042
  %tobool20 = icmp ne i32 %and19, 0, !dbg !11041
  %14 = zext i1 %tobool20 to i64, !dbg !11041
  %cond = select i1 %tobool20, i32 1, i32 0, !dbg !11041
  %15 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11043
  %link21 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %15, i32 0, i32 4, !dbg !11044
  %16 = trunc i32 %cond to i16, !dbg !11045
  %bf.load22 = load i16, i16* %link21, align 4, !dbg !11045
  %bf.value = and i16 %16, 1, !dbg !11045
  %bf.shl = shl i16 %bf.value, 11, !dbg !11045
  %bf.clear23 = and i16 %bf.load22, -2049, !dbg !11045
  %bf.set = or i16 %bf.clear23, %bf.shl, !dbg !11045
  store i16 %bf.set, i16* %link21, align 4, !dbg !11045
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !11045
  %17 = load i32, i32* %status, align 4, !dbg !11046
  %and24 = and i32 %17, 32, !dbg !11047
  %tobool25 = icmp ne i32 %and24, 0, !dbg !11046
  %18 = zext i1 %tobool25 to i64, !dbg !11046
  %cond26 = select i1 %tobool25, i32 1, i32 0, !dbg !11046
  %19 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11048
  %autoneg_complete = getelementptr inbounds %struct.phy_device, %struct.phy_device* %19, i32 0, i32 4, !dbg !11049
  %20 = trunc i32 %cond26 to i16, !dbg !11050
  %bf.load27 = load i16, i16* %autoneg_complete, align 4, !dbg !11050
  %bf.value28 = and i16 %20, 1, !dbg !11050
  %bf.shl29 = shl i16 %bf.value28, 12, !dbg !11050
  %bf.clear30 = and i16 %bf.load27, -4097, !dbg !11050
  %bf.set31 = or i16 %bf.clear30, %bf.shl29, !dbg !11050
  store i16 %bf.set31, i16* %autoneg_complete, align 4, !dbg !11050
  %bf.result.cast32 = zext i16 %bf.value28 to i32, !dbg !11050
  %21 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11051
  %autoneg = getelementptr inbounds %struct.phy_device, %struct.phy_device* %21, i32 0, i32 4, !dbg !11053
  %bf.load33 = load i16, i16* %autoneg, align 4, !dbg !11053
  %bf.lshr34 = lshr i16 %bf.load33, 10, !dbg !11053
  %bf.clear35 = and i16 %bf.lshr34, 1, !dbg !11053
  %bf.cast36 = zext i16 %bf.clear35 to i32, !dbg !11053
  %cmp37 = icmp eq i32 %bf.cast36, 1, !dbg !11054
  br i1 %cmp37, label %land.lhs.true, label %if.end48, !dbg !11055

land.lhs.true:                                    ; preds = %done
  %22 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11056
  %autoneg_complete38 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %22, i32 0, i32 4, !dbg !11057
  %bf.load39 = load i16, i16* %autoneg_complete38, align 4, !dbg !11057
  %bf.lshr40 = lshr i16 %bf.load39, 12, !dbg !11057
  %bf.clear41 = and i16 %bf.lshr40, 1, !dbg !11057
  %bf.cast42 = zext i16 %bf.clear41 to i32, !dbg !11057
  %tobool43 = icmp ne i32 %bf.cast42, 0, !dbg !11056
  br i1 %tobool43, label %if.end48, label %if.then44, !dbg !11058

if.then44:                                        ; preds = %land.lhs.true
  %23 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11059
  %link45 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %23, i32 0, i32 4, !dbg !11060
  %bf.load46 = load i16, i16* %link45, align 4, !dbg !11061
  %bf.clear47 = and i16 %bf.load46, -2049, !dbg !11061
  store i16 %bf.clear47, i16* %link45, align 4, !dbg !11061
  br label %if.end48, !dbg !11059

if.end48:                                         ; preds = %if.then44, %land.lhs.true, %done
  store i32 0, i32* %retval, align 4, !dbg !11062
  br label %return, !dbg !11062

return:                                           ; preds = %if.end48, %if.then17, %if.then8, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !11063
  ret i32 %24, !dbg !11063
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @phy_polling_mode(%struct.phy_device* %phydev) #0 !dbg !11064 {
entry:
  %retval = alloca i1, align 1
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11065, metadata !DIExpression()), !dbg !11066
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11067
  %state = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 5, !dbg !11069
  %1 = load i32, i32* %state, align 8, !dbg !11069
  %cmp = icmp eq i32 %1, 6, !dbg !11070
  br i1 %cmp, label %if.then, label %if.end2, !dbg !11071

if.then:                                          ; preds = %entry
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11072
  %drv = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 1, !dbg !11074
  %3 = load %struct.phy_driver*, %struct.phy_driver** %drv, align 8, !dbg !11074
  %flags = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %3, i32 0, i32 5, !dbg !11075
  %4 = load i32, i32* %flags, align 8, !dbg !11075
  %and = and i32 %4, 4, !dbg !11076
  %tobool = icmp ne i32 %and, 0, !dbg !11076
  br i1 %tobool, label %if.then1, label %if.end, !dbg !11077

if.then1:                                         ; preds = %if.then
  store i1 true, i1* %retval, align 1, !dbg !11078
  br label %return, !dbg !11078

if.end:                                           ; preds = %if.then
  br label %if.end2, !dbg !11079

if.end2:                                          ; preds = %if.end, %entry
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11080
  %irq = getelementptr inbounds %struct.phy_device, %struct.phy_device* %5, i32 0, i32 20, !dbg !11081
  %6 = load i32, i32* %irq, align 4, !dbg !11081
  %cmp3 = icmp eq i32 %6, -1, !dbg !11082
  store i1 %cmp3, i1* %retval, align 1, !dbg !11083
  br label %return, !dbg !11083

return:                                           ; preds = %if.end2, %if.then1
  %7 = load i1, i1* %retval, align 1, !dbg !11084
  ret i1 %7, !dbg !11084
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_read_lpa(%struct.phy_device* %phydev) #0 !dbg !11085 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %lpa = alloca i32, align 4
  %lpagb = alloca i32, align 4
  %adv = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11086, metadata !DIExpression()), !dbg !11087
  call void @llvm.dbg.declare(metadata i32* %lpa, metadata !11088, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.declare(metadata i32* %lpagb, metadata !11090, metadata !DIExpression()), !dbg !11091
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11092
  %autoneg = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 4, !dbg !11094
  %bf.load = load i16, i16* %autoneg, align 4, !dbg !11094
  %bf.lshr = lshr i16 %bf.load, 10, !dbg !11094
  %bf.clear = and i16 %bf.lshr, 1, !dbg !11094
  %bf.cast = zext i16 %bf.clear to i32, !dbg !11094
  %cmp = icmp eq i32 %bf.cast, 1, !dbg !11095
  br i1 %cmp, label %if.then, label %if.else39, !dbg !11096

if.then:                                          ; preds = %entry
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11097
  %autoneg_complete = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 4, !dbg !11100
  %bf.load1 = load i16, i16* %autoneg_complete, align 4, !dbg !11100
  %bf.lshr2 = lshr i16 %bf.load1, 12, !dbg !11100
  %bf.clear3 = and i16 %bf.lshr2, 1, !dbg !11100
  %bf.cast4 = zext i16 %bf.clear3 to i32, !dbg !11100
  %tobool = icmp ne i32 %bf.cast4, 0, !dbg !11097
  br i1 %tobool, label %if.end, label %if.then5, !dbg !11101

if.then5:                                         ; preds = %if.then
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11102
  %lp_advertising = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 17, !dbg !11104
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %lp_advertising, i64 0, i64 0, !dbg !11102
  call void @mii_stat1000_mod_linkmode_lpa_t(i64* %arraydecay, i32 0) #10, !dbg !11105
  %3 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11106
  %lp_advertising6 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %3, i32 0, i32 17, !dbg !11107
  %arraydecay7 = getelementptr inbounds [2 x i64], [2 x i64]* %lp_advertising6, i64 0, i64 0, !dbg !11106
  call void @mii_lpa_mod_linkmode_lpa_t(i64* %arraydecay7, i32 0) #10, !dbg !11108
  store i32 0, i32* %retval, align 4, !dbg !11109
  br label %return, !dbg !11109

if.end:                                           ; preds = %if.then
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11110
  %is_gigabit_capable = getelementptr inbounds %struct.phy_device, %struct.phy_device* %4, i32 0, i32 4, !dbg !11112
  %bf.load8 = load i16, i16* %is_gigabit_capable, align 4, !dbg !11112
  %bf.lshr9 = lshr i16 %bf.load8, 3, !dbg !11112
  %bf.clear10 = and i16 %bf.lshr9, 1, !dbg !11112
  %bf.cast11 = zext i16 %bf.clear10 to i32, !dbg !11112
  %tobool12 = icmp ne i32 %bf.cast11, 0, !dbg !11110
  br i1 %tobool12, label %if.then13, label %if.end32, !dbg !11113

if.then13:                                        ; preds = %if.end
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11114
  %call = call i32 @phy_read(%struct.phy_device* %5, i32 10) #10, !dbg !11116
  store i32 %call, i32* %lpagb, align 4, !dbg !11117
  %6 = load i32, i32* %lpagb, align 4, !dbg !11118
  %cmp14 = icmp slt i32 %6, 0, !dbg !11120
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !11121

if.then15:                                        ; preds = %if.then13
  %7 = load i32, i32* %lpagb, align 4, !dbg !11122
  store i32 %7, i32* %retval, align 4, !dbg !11123
  br label %return, !dbg !11123

if.end16:                                         ; preds = %if.then13
  %8 = load i32, i32* %lpagb, align 4, !dbg !11124
  %and = and i32 %8, 32768, !dbg !11126
  %tobool17 = icmp ne i32 %and, 0, !dbg !11126
  br i1 %tobool17, label %if.then18, label %if.end29, !dbg !11127

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %adv, metadata !11128, metadata !DIExpression()), !dbg !11130
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11131
  %call19 = call i32 @phy_read(%struct.phy_device* %9, i32 9) #10, !dbg !11132
  store i32 %call19, i32* %adv, align 4, !dbg !11130
  %10 = load i32, i32* %adv, align 4, !dbg !11133
  %cmp20 = icmp slt i32 %10, 0, !dbg !11135
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !11136

if.then21:                                        ; preds = %if.then18
  %11 = load i32, i32* %adv, align 4, !dbg !11137
  store i32 %11, i32* %retval, align 4, !dbg !11138
  br label %return, !dbg !11138

if.end22:                                         ; preds = %if.then18
  %12 = load i32, i32* %adv, align 4, !dbg !11139
  %and23 = and i32 %12, 4096, !dbg !11141
  %tobool24 = icmp ne i32 %and23, 0, !dbg !11141
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !11142

if.then25:                                        ; preds = %if.end22
  %13 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11143
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %13, i32 0, i32 0, !dbg !11143
  %dev = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 0, !dbg !11143
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.20, i64 0, i64 0)) #13, !dbg !11143
  br label %if.end28, !dbg !11143

if.else:                                          ; preds = %if.end22
  %14 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11144
  %mdio26 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %14, i32 0, i32 0, !dbg !11144
  %dev27 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio26, i32 0, i32 0, !dbg !11144
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev27, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i64 0, i64 0)) #13, !dbg !11144
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then25
  store i32 -67, i32* %retval, align 4, !dbg !11145
  br label %return, !dbg !11145

if.end29:                                         ; preds = %if.end16
  %15 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11146
  %lp_advertising30 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %15, i32 0, i32 17, !dbg !11147
  %arraydecay31 = getelementptr inbounds [2 x i64], [2 x i64]* %lp_advertising30, i64 0, i64 0, !dbg !11146
  %16 = load i32, i32* %lpagb, align 4, !dbg !11148
  call void @mii_stat1000_mod_linkmode_lpa_t(i64* %arraydecay31, i32 %16) #10, !dbg !11149
  br label %if.end32, !dbg !11150

if.end32:                                         ; preds = %if.end29, %if.end
  %17 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11151
  %call33 = call i32 @phy_read(%struct.phy_device* %17, i32 5) #10, !dbg !11152
  store i32 %call33, i32* %lpa, align 4, !dbg !11153
  %18 = load i32, i32* %lpa, align 4, !dbg !11154
  %cmp34 = icmp slt i32 %18, 0, !dbg !11156
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !11157

if.then35:                                        ; preds = %if.end32
  %19 = load i32, i32* %lpa, align 4, !dbg !11158
  store i32 %19, i32* %retval, align 4, !dbg !11159
  br label %return, !dbg !11159

if.end36:                                         ; preds = %if.end32
  %20 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11160
  %lp_advertising37 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %20, i32 0, i32 17, !dbg !11161
  %arraydecay38 = getelementptr inbounds [2 x i64], [2 x i64]* %lp_advertising37, i64 0, i64 0, !dbg !11160
  %21 = load i32, i32* %lpa, align 4, !dbg !11162
  call void @mii_lpa_mod_linkmode_lpa_t(i64* %arraydecay38, i32 %21) #10, !dbg !11163
  br label %if.end42, !dbg !11164

if.else39:                                        ; preds = %entry
  %22 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11165
  %lp_advertising40 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %22, i32 0, i32 17, !dbg !11167
  %arraydecay41 = getelementptr inbounds [2 x i64], [2 x i64]* %lp_advertising40, i64 0, i64 0, !dbg !11165
  call void @linkmode_zero(i64* %arraydecay41) #10, !dbg !11168
  br label %if.end42

if.end42:                                         ; preds = %if.else39, %if.end36
  store i32 0, i32* %retval, align 4, !dbg !11169
  br label %return, !dbg !11169

return:                                           ; preds = %if.end42, %if.then35, %if.end28, %if.then21, %if.then15, %if.then5
  %23 = load i32, i32* %retval, align 4, !dbg !11170
  ret i32 %23, !dbg !11170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mii_stat1000_mod_linkmode_lpa_t(i64* %advertising, i32 %lpa) #0 !dbg !11171 {
entry:
  %advertising.addr = alloca i64*, align 8
  %lpa.addr = alloca i32, align 4
  store i64* %advertising, i64** %advertising.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %advertising.addr, metadata !11175, metadata !DIExpression()), !dbg !11176
  store i32 %lpa, i32* %lpa.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lpa.addr, metadata !11177, metadata !DIExpression()), !dbg !11178
  %0 = load i64*, i64** %advertising.addr, align 8, !dbg !11179
  %1 = load i32, i32* %lpa.addr, align 4, !dbg !11180
  %and = and i32 %1, 1024, !dbg !11181
  call void @linkmode_mod_bit(i32 4, i64* %0, i32 %and) #10, !dbg !11182
  %2 = load i64*, i64** %advertising.addr, align 8, !dbg !11183
  %3 = load i32, i32* %lpa.addr, align 4, !dbg !11184
  %and1 = and i32 %3, 2048, !dbg !11185
  call void @linkmode_mod_bit(i32 5, i64* %2, i32 %and1) #10, !dbg !11186
  ret void, !dbg !11187
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mii_lpa_mod_linkmode_lpa_t(i64* %lp_advertising, i32 %lpa) #0 !dbg !11188 {
entry:
  %lp_advertising.addr = alloca i64*, align 8
  %lpa.addr = alloca i32, align 4
  store i64* %lp_advertising, i64** %lp_advertising.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %lp_advertising.addr, metadata !11189, metadata !DIExpression()), !dbg !11190
  store i32 %lpa, i32* %lpa.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %lpa.addr, metadata !11191, metadata !DIExpression()), !dbg !11192
  %0 = load i64*, i64** %lp_advertising.addr, align 8, !dbg !11193
  %1 = load i32, i32* %lpa.addr, align 4, !dbg !11194
  call void @mii_adv_mod_linkmode_adv_t(i64* %0, i32 %1) #10, !dbg !11195
  %2 = load i64*, i64** %lp_advertising.addr, align 8, !dbg !11196
  %3 = load i32, i32* %lpa.addr, align 4, !dbg !11197
  %and = and i32 %3, 16384, !dbg !11198
  call void @linkmode_mod_bit(i32 6, i64* %2, i32 %and) #10, !dbg !11199
  ret void, !dbg !11200
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @linkmode_zero(i64* %dst) #0 !dbg !11201 {
entry:
  %dst.addr = alloca i64*, align 8
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !11205, metadata !DIExpression()), !dbg !11206
  %0 = load i64*, i64** %dst.addr, align 8, !dbg !11207
  call void @bitmap_zero(i64* %0, i32 92) #10, !dbg !11208
  ret void, !dbg !11209
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_read_status_fixed(%struct.phy_device* %phydev) #0 !dbg !11210 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %bmcr = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11211, metadata !DIExpression()), !dbg !11212
  call void @llvm.dbg.declare(metadata i32* %bmcr, metadata !11213, metadata !DIExpression()), !dbg !11214
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11215
  %call = call i32 @phy_read(%struct.phy_device* %0, i32 0) #10, !dbg !11216
  store i32 %call, i32* %bmcr, align 4, !dbg !11214
  %1 = load i32, i32* %bmcr, align 4, !dbg !11217
  %cmp = icmp slt i32 %1, 0, !dbg !11219
  br i1 %cmp, label %if.then, label %if.end, !dbg !11220

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %bmcr, align 4, !dbg !11221
  store i32 %2, i32* %retval, align 4, !dbg !11222
  br label %return, !dbg !11222

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %bmcr, align 4, !dbg !11223
  %and = and i32 %3, 256, !dbg !11225
  %tobool = icmp ne i32 %and, 0, !dbg !11225
  br i1 %tobool, label %if.then1, label %if.else, !dbg !11226

if.then1:                                         ; preds = %if.end
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11227
  %duplex = getelementptr inbounds %struct.phy_device, %struct.phy_device* %4, i32 0, i32 9, !dbg !11228
  store i32 1, i32* %duplex, align 8, !dbg !11229
  br label %if.end3, !dbg !11227

if.else:                                          ; preds = %if.end
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11230
  %duplex2 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %5, i32 0, i32 9, !dbg !11231
  store i32 0, i32* %duplex2, align 8, !dbg !11232
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then1
  %6 = load i32, i32* %bmcr, align 4, !dbg !11233
  %and4 = and i32 %6, 64, !dbg !11235
  %tobool5 = icmp ne i32 %and4, 0, !dbg !11235
  br i1 %tobool5, label %if.then6, label %if.else7, !dbg !11236

if.then6:                                         ; preds = %if.end3
  %7 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11237
  %speed = getelementptr inbounds %struct.phy_device, %struct.phy_device* %7, i32 0, i32 8, !dbg !11238
  store i32 1000, i32* %speed, align 4, !dbg !11239
  br label %if.end15, !dbg !11237

if.else7:                                         ; preds = %if.end3
  %8 = load i32, i32* %bmcr, align 4, !dbg !11240
  %and8 = and i32 %8, 8192, !dbg !11242
  %tobool9 = icmp ne i32 %and8, 0, !dbg !11242
  br i1 %tobool9, label %if.then10, label %if.else12, !dbg !11243

if.then10:                                        ; preds = %if.else7
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11244
  %speed11 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %9, i32 0, i32 8, !dbg !11245
  store i32 100, i32* %speed11, align 4, !dbg !11246
  br label %if.end14, !dbg !11244

if.else12:                                        ; preds = %if.else7
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11247
  %speed13 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %10, i32 0, i32 8, !dbg !11248
  store i32 10, i32* %speed13, align 4, !dbg !11249
  br label %if.end14

if.end14:                                         ; preds = %if.else12, %if.then10
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then6
  store i32 0, i32* %retval, align 4, !dbg !11250
  br label %return, !dbg !11250

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !11251
  ret i32 %11, !dbg !11251
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_read_status(%struct.phy_device* %phydev) #0 !dbg !11252 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %err = alloca i32, align 4
  %old_link = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11253, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11255, metadata !DIExpression()), !dbg !11256
  call void @llvm.dbg.declare(metadata i32* %old_link, metadata !11257, metadata !DIExpression()), !dbg !11258
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11259
  %link = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 4, !dbg !11260
  %bf.load = load i16, i16* %link, align 4, !dbg !11260
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !11260
  %bf.clear = and i16 %bf.lshr, 1, !dbg !11260
  %bf.cast = zext i16 %bf.clear to i32, !dbg !11260
  store i32 %bf.cast, i32* %old_link, align 4, !dbg !11258
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11261
  %call = call i32 @genphy_update_link(%struct.phy_device* %1) #10, !dbg !11262
  store i32 %call, i32* %err, align 4, !dbg !11263
  %2 = load i32, i32* %err, align 4, !dbg !11264
  %tobool = icmp ne i32 %2, 0, !dbg !11264
  br i1 %tobool, label %if.then, label %if.end, !dbg !11266

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !11267
  store i32 %3, i32* %retval, align 4, !dbg !11268
  br label %return, !dbg !11268

if.end:                                           ; preds = %entry
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11269
  %autoneg = getelementptr inbounds %struct.phy_device, %struct.phy_device* %4, i32 0, i32 4, !dbg !11271
  %bf.load1 = load i16, i16* %autoneg, align 4, !dbg !11271
  %bf.lshr2 = lshr i16 %bf.load1, 10, !dbg !11271
  %bf.clear3 = and i16 %bf.lshr2, 1, !dbg !11271
  %bf.cast4 = zext i16 %bf.clear3 to i32, !dbg !11271
  %cmp = icmp eq i32 %bf.cast4, 1, !dbg !11272
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !11273

land.lhs.true:                                    ; preds = %if.end
  %5 = load i32, i32* %old_link, align 4, !dbg !11274
  %tobool5 = icmp ne i32 %5, 0, !dbg !11274
  br i1 %tobool5, label %land.lhs.true6, label %if.end14, !dbg !11275

land.lhs.true6:                                   ; preds = %land.lhs.true
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11276
  %link7 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %6, i32 0, i32 4, !dbg !11277
  %bf.load8 = load i16, i16* %link7, align 4, !dbg !11277
  %bf.lshr9 = lshr i16 %bf.load8, 11, !dbg !11277
  %bf.clear10 = and i16 %bf.lshr9, 1, !dbg !11277
  %bf.cast11 = zext i16 %bf.clear10 to i32, !dbg !11277
  %tobool12 = icmp ne i32 %bf.cast11, 0, !dbg !11276
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !11278

if.then13:                                        ; preds = %land.lhs.true6
  store i32 0, i32* %retval, align 4, !dbg !11279
  br label %return, !dbg !11279

if.end14:                                         ; preds = %land.lhs.true6, %land.lhs.true, %if.end
  %7 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11280
  %speed = getelementptr inbounds %struct.phy_device, %struct.phy_device* %7, i32 0, i32 8, !dbg !11281
  store i32 -1, i32* %speed, align 4, !dbg !11282
  %8 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11283
  %duplex = getelementptr inbounds %struct.phy_device, %struct.phy_device* %8, i32 0, i32 9, !dbg !11284
  store i32 255, i32* %duplex, align 8, !dbg !11285
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11286
  %pause = getelementptr inbounds %struct.phy_device, %struct.phy_device* %9, i32 0, i32 10, !dbg !11287
  store i32 0, i32* %pause, align 4, !dbg !11288
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11289
  %asym_pause = getelementptr inbounds %struct.phy_device, %struct.phy_device* %10, i32 0, i32 11, !dbg !11290
  store i32 0, i32* %asym_pause, align 8, !dbg !11291
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11292
  %call15 = call i32 @genphy_read_master_slave(%struct.phy_device* %11) #10, !dbg !11293
  store i32 %call15, i32* %err, align 4, !dbg !11294
  %12 = load i32, i32* %err, align 4, !dbg !11295
  %cmp16 = icmp slt i32 %12, 0, !dbg !11297
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !11298

if.then17:                                        ; preds = %if.end14
  %13 = load i32, i32* %err, align 4, !dbg !11299
  store i32 %13, i32* %retval, align 4, !dbg !11300
  br label %return, !dbg !11300

if.end18:                                         ; preds = %if.end14
  %14 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11301
  %call19 = call i32 @genphy_read_lpa(%struct.phy_device* %14) #10, !dbg !11302
  store i32 %call19, i32* %err, align 4, !dbg !11303
  %15 = load i32, i32* %err, align 4, !dbg !11304
  %cmp20 = icmp slt i32 %15, 0, !dbg !11306
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !11307

if.then21:                                        ; preds = %if.end18
  %16 = load i32, i32* %err, align 4, !dbg !11308
  store i32 %16, i32* %retval, align 4, !dbg !11309
  br label %return, !dbg !11309

if.end22:                                         ; preds = %if.end18
  %17 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11310
  %autoneg23 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %17, i32 0, i32 4, !dbg !11312
  %bf.load24 = load i16, i16* %autoneg23, align 4, !dbg !11312
  %bf.lshr25 = lshr i16 %bf.load24, 10, !dbg !11312
  %bf.clear26 = and i16 %bf.lshr25, 1, !dbg !11312
  %bf.cast27 = zext i16 %bf.clear26 to i32, !dbg !11312
  %cmp28 = icmp eq i32 %bf.cast27, 1, !dbg !11313
  br i1 %cmp28, label %land.lhs.true29, label %if.else, !dbg !11314

land.lhs.true29:                                  ; preds = %if.end22
  %18 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11315
  %autoneg_complete = getelementptr inbounds %struct.phy_device, %struct.phy_device* %18, i32 0, i32 4, !dbg !11316
  %bf.load30 = load i16, i16* %autoneg_complete, align 4, !dbg !11316
  %bf.lshr31 = lshr i16 %bf.load30, 12, !dbg !11316
  %bf.clear32 = and i16 %bf.lshr31, 1, !dbg !11316
  %bf.cast33 = zext i16 %bf.clear32 to i32, !dbg !11316
  %tobool34 = icmp ne i32 %bf.cast33, 0, !dbg !11315
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !11317

if.then35:                                        ; preds = %land.lhs.true29
  %19 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11318
  call void @phy_resolve_aneg_linkmode(%struct.phy_device* %19) #10, !dbg !11320
  br label %if.end48, !dbg !11321

if.else:                                          ; preds = %land.lhs.true29, %if.end22
  %20 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11322
  %autoneg36 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %20, i32 0, i32 4, !dbg !11324
  %bf.load37 = load i16, i16* %autoneg36, align 4, !dbg !11324
  %bf.lshr38 = lshr i16 %bf.load37, 10, !dbg !11324
  %bf.clear39 = and i16 %bf.lshr38, 1, !dbg !11324
  %bf.cast40 = zext i16 %bf.clear39 to i32, !dbg !11324
  %cmp41 = icmp eq i32 %bf.cast40, 0, !dbg !11325
  br i1 %cmp41, label %if.then42, label %if.end47, !dbg !11326

if.then42:                                        ; preds = %if.else
  %21 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11327
  %call43 = call i32 @genphy_read_status_fixed(%struct.phy_device* %21) #10, !dbg !11329
  store i32 %call43, i32* %err, align 4, !dbg !11330
  %22 = load i32, i32* %err, align 4, !dbg !11331
  %cmp44 = icmp slt i32 %22, 0, !dbg !11333
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !11334

if.then45:                                        ; preds = %if.then42
  %23 = load i32, i32* %err, align 4, !dbg !11335
  store i32 %23, i32* %retval, align 4, !dbg !11336
  br label %return, !dbg !11336

if.end46:                                         ; preds = %if.then42
  br label %if.end47, !dbg !11337

if.end47:                                         ; preds = %if.end46, %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then35
  store i32 0, i32* %retval, align 4, !dbg !11338
  br label %return, !dbg !11338

return:                                           ; preds = %if.end48, %if.then45, %if.then21, %if.then17, %if.then13, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !11339
  ret i32 %24, !dbg !11339
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @genphy_read_master_slave(%struct.phy_device* %phydev) #0 !dbg !11340 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %cfg = alloca i32, align 4
  %state = alloca i32, align 4
  %val = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11341, metadata !DIExpression()), !dbg !11342
  call void @llvm.dbg.declare(metadata i32* %cfg, metadata !11343, metadata !DIExpression()), !dbg !11344
  call void @llvm.dbg.declare(metadata i32* %state, metadata !11345, metadata !DIExpression()), !dbg !11346
  call void @llvm.dbg.declare(metadata i32* %val, metadata !11347, metadata !DIExpression()), !dbg !11348
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11349
  %is_gigabit_capable = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 4, !dbg !11351
  %bf.load = load i16, i16* %is_gigabit_capable, align 4, !dbg !11351
  %bf.lshr = lshr i16 %bf.load, 3, !dbg !11351
  %bf.clear = and i16 %bf.lshr, 1, !dbg !11351
  %bf.cast = zext i16 %bf.clear to i32, !dbg !11351
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !11349
  br i1 %tobool, label %if.end, label %if.then, !dbg !11352

if.then:                                          ; preds = %entry
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11353
  %master_slave_get = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 12, !dbg !11355
  store i8 0, i8* %master_slave_get, align 4, !dbg !11356
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11357
  %master_slave_state = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 14, !dbg !11358
  store i8 0, i8* %master_slave_state, align 2, !dbg !11359
  store i32 0, i32* %retval, align 4, !dbg !11360
  br label %return, !dbg !11360

if.end:                                           ; preds = %entry
  %3 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11361
  %master_slave_get1 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %3, i32 0, i32 12, !dbg !11362
  store i8 1, i8* %master_slave_get1, align 4, !dbg !11363
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11364
  %master_slave_state2 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %4, i32 0, i32 14, !dbg !11365
  store i8 1, i8* %master_slave_state2, align 2, !dbg !11366
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11367
  %call = call i32 @phy_read(%struct.phy_device* %5, i32 9) #10, !dbg !11368
  store i32 %call, i32* %val, align 4, !dbg !11369
  %6 = load i32, i32* %val, align 4, !dbg !11370
  %cmp = icmp slt i32 %6, 0, !dbg !11372
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !11373

if.then3:                                         ; preds = %if.end
  %7 = load i32, i32* %val, align 4, !dbg !11374
  store i32 %7, i32* %retval, align 4, !dbg !11375
  br label %return, !dbg !11375

if.end4:                                          ; preds = %if.end
  %8 = load i32, i32* %val, align 4, !dbg !11376
  %and = and i32 %8, 4096, !dbg !11378
  %tobool5 = icmp ne i32 %and, 0, !dbg !11378
  br i1 %tobool5, label %if.then6, label %if.else11, !dbg !11379

if.then6:                                         ; preds = %if.end4
  %9 = load i32, i32* %val, align 4, !dbg !11380
  %and7 = and i32 %9, 2048, !dbg !11383
  %tobool8 = icmp ne i32 %and7, 0, !dbg !11383
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !11384

if.then9:                                         ; preds = %if.then6
  store i32 4, i32* %cfg, align 4, !dbg !11385
  br label %if.end10, !dbg !11386

if.else:                                          ; preds = %if.then6
  store i32 5, i32* %cfg, align 4, !dbg !11387
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then9
  br label %if.end17, !dbg !11388

if.else11:                                        ; preds = %if.end4
  %10 = load i32, i32* %val, align 4, !dbg !11389
  %and12 = and i32 %10, 1024, !dbg !11392
  %tobool13 = icmp ne i32 %and12, 0, !dbg !11392
  br i1 %tobool13, label %if.then14, label %if.else15, !dbg !11393

if.then14:                                        ; preds = %if.else11
  store i32 2, i32* %cfg, align 4, !dbg !11394
  br label %if.end16, !dbg !11395

if.else15:                                        ; preds = %if.else11
  store i32 3, i32* %cfg, align 4, !dbg !11396
  br label %if.end16

if.end16:                                         ; preds = %if.else15, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.end10
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11397
  %call18 = call i32 @phy_read(%struct.phy_device* %11, i32 10) #10, !dbg !11398
  store i32 %call18, i32* %val, align 4, !dbg !11399
  %12 = load i32, i32* %val, align 4, !dbg !11400
  %cmp19 = icmp slt i32 %12, 0, !dbg !11402
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !11403

if.then20:                                        ; preds = %if.end17
  %13 = load i32, i32* %val, align 4, !dbg !11404
  store i32 %13, i32* %retval, align 4, !dbg !11405
  br label %return, !dbg !11405

if.end21:                                         ; preds = %if.end17
  %14 = load i32, i32* %val, align 4, !dbg !11406
  %and22 = and i32 %14, 32768, !dbg !11408
  %tobool23 = icmp ne i32 %and22, 0, !dbg !11408
  br i1 %tobool23, label %if.then24, label %if.else25, !dbg !11409

if.then24:                                        ; preds = %if.end21
  store i32 4, i32* %state, align 4, !dbg !11410
  br label %if.end39, !dbg !11412

if.else25:                                        ; preds = %if.end21
  %15 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11413
  %link = getelementptr inbounds %struct.phy_device, %struct.phy_device* %15, i32 0, i32 4, !dbg !11415
  %bf.load26 = load i16, i16* %link, align 4, !dbg !11415
  %bf.lshr27 = lshr i16 %bf.load26, 11, !dbg !11415
  %bf.clear28 = and i16 %bf.lshr27, 1, !dbg !11415
  %bf.cast29 = zext i16 %bf.clear28 to i32, !dbg !11415
  %tobool30 = icmp ne i32 %bf.cast29, 0, !dbg !11413
  br i1 %tobool30, label %if.then31, label %if.else37, !dbg !11416

if.then31:                                        ; preds = %if.else25
  %16 = load i32, i32* %val, align 4, !dbg !11417
  %and32 = and i32 %16, 16384, !dbg !11420
  %tobool33 = icmp ne i32 %and32, 0, !dbg !11420
  br i1 %tobool33, label %if.then34, label %if.else35, !dbg !11421

if.then34:                                        ; preds = %if.then31
  store i32 2, i32* %state, align 4, !dbg !11422
  br label %if.end36, !dbg !11423

if.else35:                                        ; preds = %if.then31
  store i32 3, i32* %state, align 4, !dbg !11424
  br label %if.end36

if.end36:                                         ; preds = %if.else35, %if.then34
  br label %if.end38, !dbg !11425

if.else37:                                        ; preds = %if.else25
  store i32 1, i32* %state, align 4, !dbg !11426
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.end36
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then24
  %17 = load i32, i32* %cfg, align 4, !dbg !11428
  %conv = trunc i32 %17 to i8, !dbg !11428
  %18 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11429
  %master_slave_get40 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %18, i32 0, i32 12, !dbg !11430
  store i8 %conv, i8* %master_slave_get40, align 4, !dbg !11431
  %19 = load i32, i32* %state, align 4, !dbg !11432
  %conv41 = trunc i32 %19 to i8, !dbg !11432
  %20 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11433
  %master_slave_state42 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %20, i32 0, i32 14, !dbg !11434
  store i8 %conv41, i8* %master_slave_state42, align 2, !dbg !11435
  store i32 0, i32* %retval, align 4, !dbg !11436
  br label %return, !dbg !11436

return:                                           ; preds = %if.end39, %if.then20, %if.then3, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !11437
  ret i32 %21, !dbg !11437
}

; Function Attrs: noredzone
declare dso_local void @phy_resolve_aneg_linkmode(%struct.phy_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_c37_read_status(%struct.phy_device* %phydev) #0 !dbg !11438 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %lpa = alloca i32, align 4
  %err = alloca i32, align 4
  %old_link = alloca i32, align 4
  %bmcr = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11439, metadata !DIExpression()), !dbg !11440
  call void @llvm.dbg.declare(metadata i32* %lpa, metadata !11441, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11443, metadata !DIExpression()), !dbg !11444
  call void @llvm.dbg.declare(metadata i32* %old_link, metadata !11445, metadata !DIExpression()), !dbg !11446
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11447
  %link = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 4, !dbg !11448
  %bf.load = load i16, i16* %link, align 4, !dbg !11448
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !11448
  %bf.clear = and i16 %bf.lshr, 1, !dbg !11448
  %bf.cast = zext i16 %bf.clear to i32, !dbg !11448
  store i32 %bf.cast, i32* %old_link, align 4, !dbg !11446
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11449
  %call = call i32 @genphy_update_link(%struct.phy_device* %1) #10, !dbg !11450
  store i32 %call, i32* %err, align 4, !dbg !11451
  %2 = load i32, i32* %err, align 4, !dbg !11452
  %tobool = icmp ne i32 %2, 0, !dbg !11452
  br i1 %tobool, label %if.then, label %if.end, !dbg !11454

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !11455
  store i32 %3, i32* %retval, align 4, !dbg !11456
  br label %return, !dbg !11456

if.end:                                           ; preds = %entry
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11457
  %autoneg = getelementptr inbounds %struct.phy_device, %struct.phy_device* %4, i32 0, i32 4, !dbg !11459
  %bf.load1 = load i16, i16* %autoneg, align 4, !dbg !11459
  %bf.lshr2 = lshr i16 %bf.load1, 10, !dbg !11459
  %bf.clear3 = and i16 %bf.lshr2, 1, !dbg !11459
  %bf.cast4 = zext i16 %bf.clear3 to i32, !dbg !11459
  %cmp = icmp eq i32 %bf.cast4, 1, !dbg !11460
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !11461

land.lhs.true:                                    ; preds = %if.end
  %5 = load i32, i32* %old_link, align 4, !dbg !11462
  %tobool5 = icmp ne i32 %5, 0, !dbg !11462
  br i1 %tobool5, label %land.lhs.true6, label %if.end14, !dbg !11463

land.lhs.true6:                                   ; preds = %land.lhs.true
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11464
  %link7 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %6, i32 0, i32 4, !dbg !11465
  %bf.load8 = load i16, i16* %link7, align 4, !dbg !11465
  %bf.lshr9 = lshr i16 %bf.load8, 11, !dbg !11465
  %bf.clear10 = and i16 %bf.lshr9, 1, !dbg !11465
  %bf.cast11 = zext i16 %bf.clear10 to i32, !dbg !11465
  %tobool12 = icmp ne i32 %bf.cast11, 0, !dbg !11464
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !11466

if.then13:                                        ; preds = %land.lhs.true6
  store i32 0, i32* %retval, align 4, !dbg !11467
  br label %return, !dbg !11467

if.end14:                                         ; preds = %land.lhs.true6, %land.lhs.true, %if.end
  %7 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11468
  %duplex = getelementptr inbounds %struct.phy_device, %struct.phy_device* %7, i32 0, i32 9, !dbg !11469
  store i32 255, i32* %duplex, align 8, !dbg !11470
  %8 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11471
  %pause = getelementptr inbounds %struct.phy_device, %struct.phy_device* %8, i32 0, i32 10, !dbg !11472
  store i32 0, i32* %pause, align 4, !dbg !11473
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11474
  %asym_pause = getelementptr inbounds %struct.phy_device, %struct.phy_device* %9, i32 0, i32 11, !dbg !11475
  store i32 0, i32* %asym_pause, align 8, !dbg !11476
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11477
  %autoneg15 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %10, i32 0, i32 4, !dbg !11479
  %bf.load16 = load i16, i16* %autoneg15, align 4, !dbg !11479
  %bf.lshr17 = lshr i16 %bf.load16, 10, !dbg !11479
  %bf.clear18 = and i16 %bf.lshr17, 1, !dbg !11479
  %bf.cast19 = zext i16 %bf.clear18 to i32, !dbg !11479
  %cmp20 = icmp eq i32 %bf.cast19, 1, !dbg !11480
  br i1 %cmp20, label %land.lhs.true21, label %if.else, !dbg !11481

land.lhs.true21:                                  ; preds = %if.end14
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11482
  %autoneg_complete = getelementptr inbounds %struct.phy_device, %struct.phy_device* %11, i32 0, i32 4, !dbg !11483
  %bf.load22 = load i16, i16* %autoneg_complete, align 4, !dbg !11483
  %bf.lshr23 = lshr i16 %bf.load22, 12, !dbg !11483
  %bf.clear24 = and i16 %bf.lshr23, 1, !dbg !11483
  %bf.cast25 = zext i16 %bf.clear24 to i32, !dbg !11483
  %tobool26 = icmp ne i32 %bf.cast25, 0, !dbg !11482
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !11484

if.then27:                                        ; preds = %land.lhs.true21
  %12 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11485
  %call28 = call i32 @phy_read(%struct.phy_device* %12, i32 5) #10, !dbg !11487
  store i32 %call28, i32* %lpa, align 4, !dbg !11488
  %13 = load i32, i32* %lpa, align 4, !dbg !11489
  %cmp29 = icmp slt i32 %13, 0, !dbg !11491
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !11492

if.then30:                                        ; preds = %if.then27
  %14 = load i32, i32* %lpa, align 4, !dbg !11493
  store i32 %14, i32* %retval, align 4, !dbg !11494
  br label %return, !dbg !11494

if.end31:                                         ; preds = %if.then27
  %15 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11495
  %lp_advertising = getelementptr inbounds %struct.phy_device, %struct.phy_device* %15, i32 0, i32 17, !dbg !11496
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %lp_advertising, i64 0, i64 0, !dbg !11495
  %16 = load i32, i32* %lpa, align 4, !dbg !11497
  %and = and i32 %16, 16384, !dbg !11498
  call void @linkmode_mod_bit(i32 6, i64* %arraydecay, i32 %and) #10, !dbg !11499
  %17 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11500
  %lp_advertising32 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %17, i32 0, i32 17, !dbg !11501
  %arraydecay33 = getelementptr inbounds [2 x i64], [2 x i64]* %lp_advertising32, i64 0, i64 0, !dbg !11500
  %18 = load i32, i32* %lpa, align 4, !dbg !11502
  %and34 = and i32 %18, 32, !dbg !11503
  call void @linkmode_mod_bit(i32 41, i64* %arraydecay33, i32 %and34) #10, !dbg !11504
  %19 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11505
  %lp_advertising35 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %19, i32 0, i32 17, !dbg !11506
  %arraydecay36 = getelementptr inbounds [2 x i64], [2 x i64]* %lp_advertising35, i64 0, i64 0, !dbg !11505
  %20 = load i32, i32* %lpa, align 4, !dbg !11507
  %and37 = and i32 %20, 128, !dbg !11508
  call void @linkmode_mod_bit(i32 13, i64* %arraydecay36, i32 %and37) #10, !dbg !11509
  %21 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11510
  %lp_advertising38 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %21, i32 0, i32 17, !dbg !11511
  %arraydecay39 = getelementptr inbounds [2 x i64], [2 x i64]* %lp_advertising38, i64 0, i64 0, !dbg !11510
  %22 = load i32, i32* %lpa, align 4, !dbg !11512
  %and40 = and i32 %22, 256, !dbg !11513
  call void @linkmode_mod_bit(i32 14, i64* %arraydecay39, i32 %and40) #10, !dbg !11514
  %23 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11515
  call void @phy_resolve_aneg_linkmode(%struct.phy_device* %23) #10, !dbg !11516
  br label %if.end60, !dbg !11517

if.else:                                          ; preds = %land.lhs.true21, %if.end14
  %24 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11518
  %autoneg41 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %24, i32 0, i32 4, !dbg !11520
  %bf.load42 = load i16, i16* %autoneg41, align 4, !dbg !11520
  %bf.lshr43 = lshr i16 %bf.load42, 10, !dbg !11520
  %bf.clear44 = and i16 %bf.lshr43, 1, !dbg !11520
  %bf.cast45 = zext i16 %bf.clear44 to i32, !dbg !11520
  %cmp46 = icmp eq i32 %bf.cast45, 0, !dbg !11521
  br i1 %cmp46, label %if.then47, label %if.end59, !dbg !11522

if.then47:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %bmcr, metadata !11523, metadata !DIExpression()), !dbg !11525
  %25 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11526
  %call48 = call i32 @phy_read(%struct.phy_device* %25, i32 0) #10, !dbg !11527
  store i32 %call48, i32* %bmcr, align 4, !dbg !11525
  %26 = load i32, i32* %bmcr, align 4, !dbg !11528
  %cmp49 = icmp slt i32 %26, 0, !dbg !11530
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !11531

if.then50:                                        ; preds = %if.then47
  %27 = load i32, i32* %bmcr, align 4, !dbg !11532
  store i32 %27, i32* %retval, align 4, !dbg !11533
  br label %return, !dbg !11533

if.end51:                                         ; preds = %if.then47
  %28 = load i32, i32* %bmcr, align 4, !dbg !11534
  %and52 = and i32 %28, 256, !dbg !11536
  %tobool53 = icmp ne i32 %and52, 0, !dbg !11536
  br i1 %tobool53, label %if.then54, label %if.else56, !dbg !11537

if.then54:                                        ; preds = %if.end51
  %29 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11538
  %duplex55 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %29, i32 0, i32 9, !dbg !11539
  store i32 1, i32* %duplex55, align 8, !dbg !11540
  br label %if.end58, !dbg !11538

if.else56:                                        ; preds = %if.end51
  %30 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11541
  %duplex57 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %30, i32 0, i32 9, !dbg !11542
  store i32 0, i32* %duplex57, align 8, !dbg !11543
  br label %if.end58

if.end58:                                         ; preds = %if.else56, %if.then54
  br label %if.end59, !dbg !11544

if.end59:                                         ; preds = %if.end58, %if.else
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end31
  store i32 0, i32* %retval, align 4, !dbg !11545
  br label %return, !dbg !11545

return:                                           ; preds = %if.end60, %if.then50, %if.then30, %if.then13, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !11546
  ret i32 %31, !dbg !11546
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @linkmode_mod_bit(i32 %nr, i64* %addr, i32 %set) #0 !dbg !11547 {
entry:
  %nr.addr = alloca i32, align 4
  %addr.addr = alloca i64*, align 8
  %set.addr = alloca i32, align 4
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !11552, metadata !DIExpression()), !dbg !11553
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11554, metadata !DIExpression()), !dbg !11555
  store i32 %set, i32* %set.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %set.addr, metadata !11556, metadata !DIExpression()), !dbg !11557
  %0 = load i32, i32* %set.addr, align 4, !dbg !11558
  %tobool = icmp ne i32 %0, 0, !dbg !11558
  br i1 %tobool, label %if.then, label %if.else, !dbg !11560

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %nr.addr, align 4, !dbg !11561
  %2 = load i64*, i64** %addr.addr, align 8, !dbg !11562
  call void @linkmode_set_bit(i32 %1, i64* %2) #10, !dbg !11563
  br label %if.end, !dbg !11563

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %nr.addr, align 4, !dbg !11564
  %4 = load i64*, i64** %addr.addr, align 8, !dbg !11565
  call void @linkmode_clear_bit(i32 %3, i64* %4) #10, !dbg !11566
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !11567
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_soft_reset(%struct.phy_device* %phydev) #0 !dbg !11568 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %res = alloca i16, align 2
  %ret = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11569, metadata !DIExpression()), !dbg !11570
  call void @llvm.dbg.declare(metadata i16* %res, metadata !11571, metadata !DIExpression()), !dbg !11572
  store i16 -32768, i16* %res, align 2, !dbg !11572
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11573, metadata !DIExpression()), !dbg !11574
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11575
  %autoneg = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 4, !dbg !11577
  %bf.load = load i16, i16* %autoneg, align 4, !dbg !11577
  %bf.lshr = lshr i16 %bf.load, 10, !dbg !11577
  %bf.clear = and i16 %bf.lshr, 1, !dbg !11577
  %bf.cast = zext i16 %bf.clear to i32, !dbg !11577
  %cmp = icmp eq i32 %bf.cast, 1, !dbg !11578
  br i1 %cmp, label %if.then, label %if.end, !dbg !11579

if.then:                                          ; preds = %entry
  %1 = load i16, i16* %res, align 2, !dbg !11580
  %conv = zext i16 %1 to i32, !dbg !11580
  %or = or i32 %conv, 512, !dbg !11580
  %conv1 = trunc i32 %or to i16, !dbg !11580
  store i16 %conv1, i16* %res, align 2, !dbg !11580
  br label %if.end, !dbg !11581

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11582
  %3 = load i16, i16* %res, align 2, !dbg !11583
  %call = call i32 @phy_modify(%struct.phy_device* %2, i32 0, i16 zeroext 1024, i16 zeroext %3) #10, !dbg !11584
  store i32 %call, i32* %ret, align 4, !dbg !11585
  %4 = load i32, i32* %ret, align 4, !dbg !11586
  %cmp2 = icmp slt i32 %4, 0, !dbg !11588
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !11589

if.then4:                                         ; preds = %if.end
  %5 = load i32, i32* %ret, align 4, !dbg !11590
  store i32 %5, i32* %retval, align 4, !dbg !11591
  br label %return, !dbg !11591

if.end5:                                          ; preds = %if.end
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11592
  %suspended = getelementptr inbounds %struct.phy_device, %struct.phy_device* %6, i32 0, i32 4, !dbg !11593
  %bf.load6 = load i16, i16* %suspended, align 4, !dbg !11594
  %bf.clear7 = and i16 %bf.load6, -33, !dbg !11594
  store i16 %bf.clear7, i16* %suspended, align 4, !dbg !11594
  %7 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11595
  %call8 = call i32 @phy_poll_reset(%struct.phy_device* %7) #10, !dbg !11596
  store i32 %call8, i32* %ret, align 4, !dbg !11597
  %8 = load i32, i32* %ret, align 4, !dbg !11598
  %tobool = icmp ne i32 %8, 0, !dbg !11598
  br i1 %tobool, label %if.then9, label %if.end10, !dbg !11600

if.then9:                                         ; preds = %if.end5
  %9 = load i32, i32* %ret, align 4, !dbg !11601
  store i32 %9, i32* %retval, align 4, !dbg !11602
  br label %return, !dbg !11602

if.end10:                                         ; preds = %if.end5
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11603
  %autoneg11 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %10, i32 0, i32 4, !dbg !11605
  %bf.load12 = load i16, i16* %autoneg11, align 4, !dbg !11605
  %bf.lshr13 = lshr i16 %bf.load12, 10, !dbg !11605
  %bf.clear14 = and i16 %bf.lshr13, 1, !dbg !11605
  %bf.cast15 = zext i16 %bf.clear14 to i32, !dbg !11605
  %cmp16 = icmp eq i32 %bf.cast15, 0, !dbg !11606
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !11607

if.then18:                                        ; preds = %if.end10
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11608
  %call19 = call i32 @genphy_setup_forced(%struct.phy_device* %11) #10, !dbg !11609
  store i32 %call19, i32* %ret, align 4, !dbg !11610
  br label %if.end20, !dbg !11611

if.end20:                                         ; preds = %if.then18, %if.end10
  %12 = load i32, i32* %ret, align 4, !dbg !11612
  store i32 %12, i32* %retval, align 4, !dbg !11613
  br label %return, !dbg !11613

return:                                           ; preds = %if.end20, %if.then9, %if.then4
  %13 = load i32, i32* %retval, align 4, !dbg !11614
  ret i32 %13, !dbg !11614
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_poll_reset(%struct.phy_device* %phydev) #0 !dbg !11615 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %ret = alloca i32, align 4
  %val = alloca i32, align 4
  %__ret = alloca i32, align 4
  %__timeout_us = alloca i64, align 8
  %__sleep_us = alloca i64, align 8
  %__timeout = alloca i64, align 8
  %tmp = alloca i32, align 4
  %tmp34 = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11616, metadata !DIExpression()), !dbg !11617
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11618, metadata !DIExpression()), !dbg !11619
  call void @llvm.dbg.declare(metadata i32* %val, metadata !11620, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !11622, metadata !DIExpression()), !dbg !11624
  call void @llvm.dbg.declare(metadata i64* %__timeout_us, metadata !11625, metadata !DIExpression()), !dbg !11627
  store i64 600000, i64* %__timeout_us, align 8, !dbg !11627
  call void @llvm.dbg.declare(metadata i64* %__sleep_us, metadata !11628, metadata !DIExpression()), !dbg !11627
  store i64 50000, i64* %__sleep_us, align 8, !dbg !11627
  call void @llvm.dbg.declare(metadata i64* %__timeout, metadata !11629, metadata !DIExpression()), !dbg !11627
  %call = call i64 @ktime_get() #10, !dbg !11627
  %0 = load i64, i64* %__timeout_us, align 8, !dbg !11627
  %call1 = call i64 @ktime_add_us(i64 %call, i64 %0) #10, !dbg !11627
  store i64 %call1, i64* %__timeout, align 8, !dbg !11627
  br label %do.body, !dbg !11627

do.body:                                          ; preds = %entry
  %1 = load i64, i64* %__sleep_us, align 8, !dbg !11630
  %cmp = icmp ne i64 %1, 0, !dbg !11630
  br i1 %cmp, label %if.then, label %if.end, !dbg !11633

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !11630

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !11634

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !11636

do.end:                                           ; preds = %do.body3
  br label %do.end4, !dbg !11634

do.end4:                                          ; preds = %do.end
  br label %if.end, !dbg !11634

if.end:                                           ; preds = %do.end4, %do.body
  br label %do.end5, !dbg !11633

do.end5:                                          ; preds = %if.end
  %2 = load i64, i64* %__sleep_us, align 8, !dbg !11638
  %tobool = icmp ne i64 %2, 0, !dbg !11638
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !11627

if.then6:                                         ; preds = %do.end5
  %3 = load i64, i64* %__sleep_us, align 8, !dbg !11638
  %shr = lshr i64 %3, 2, !dbg !11638
  %add = add i64 %shr, 1, !dbg !11638
  %4 = load i64, i64* %__sleep_us, align 8, !dbg !11638
  call void @usleep_range(i64 %add, i64 %4) #10, !dbg !11638
  br label %if.end7, !dbg !11638

if.end7:                                          ; preds = %if.then6, %do.end5
  br label %for.cond, !dbg !11627

for.cond:                                         ; preds = %if.end24, %if.end7
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11640
  %call8 = call i32 @phy_read(%struct.phy_device* %5, i32 0) #10, !dbg !11640
  store i32 %call8, i32* %val, align 4, !dbg !11640
  %6 = load i32, i32* %val, align 4, !dbg !11644
  %and = and i32 %6, 32768, !dbg !11644
  %tobool9 = icmp ne i32 %and, 0, !dbg !11644
  br i1 %tobool9, label %lor.lhs.false, label %if.then11, !dbg !11644

lor.lhs.false:                                    ; preds = %for.cond
  %7 = load i32, i32* %val, align 4, !dbg !11644
  %cmp10 = icmp slt i32 %7, 0, !dbg !11644
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !11640

if.then11:                                        ; preds = %lor.lhs.false, %for.cond
  br label %for.end, !dbg !11644

if.end12:                                         ; preds = %lor.lhs.false
  %8 = load i64, i64* %__timeout_us, align 8, !dbg !11646
  %tobool13 = icmp ne i64 %8, 0, !dbg !11646
  br i1 %tobool13, label %land.lhs.true, label %if.end19, !dbg !11646

land.lhs.true:                                    ; preds = %if.end12
  %call14 = call i64 @ktime_get() #10, !dbg !11646
  %9 = load i64, i64* %__timeout, align 8, !dbg !11646
  %call15 = call i32 @ktime_compare(i64 %call14, i64 %9) #10, !dbg !11646
  %cmp16 = icmp sgt i32 %call15, 0, !dbg !11646
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !11640

if.then17:                                        ; preds = %land.lhs.true
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11648
  %call18 = call i32 @phy_read(%struct.phy_device* %10, i32 0) #10, !dbg !11648
  store i32 %call18, i32* %val, align 4, !dbg !11648
  br label %for.end, !dbg !11648

if.end19:                                         ; preds = %land.lhs.true, %if.end12
  %11 = load i64, i64* %__sleep_us, align 8, !dbg !11650
  %tobool20 = icmp ne i64 %11, 0, !dbg !11650
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !11640

if.then21:                                        ; preds = %if.end19
  %12 = load i64, i64* %__sleep_us, align 8, !dbg !11650
  %shr22 = lshr i64 %12, 2, !dbg !11650
  %add23 = add i64 %shr22, 1, !dbg !11650
  %13 = load i64, i64* %__sleep_us, align 8, !dbg !11650
  call void @usleep_range(i64 %add23, i64 %13) #10, !dbg !11650
  br label %if.end24, !dbg !11650

if.end24:                                         ; preds = %if.then21, %if.end19
  br label %for.cond, !dbg !11652, !llvm.loop !11653

for.end:                                          ; preds = %if.then17, %if.then11
  %14 = load i32, i32* %val, align 4, !dbg !11627
  %and25 = and i32 %14, 32768, !dbg !11627
  %tobool26 = icmp ne i32 %and25, 0, !dbg !11627
  br i1 %tobool26, label %lor.rhs, label %lor.end, !dbg !11627

lor.rhs:                                          ; preds = %for.end
  %15 = load i32, i32* %val, align 4, !dbg !11627
  %cmp27 = icmp slt i32 %15, 0, !dbg !11627
  br label %lor.end, !dbg !11627

lor.end:                                          ; preds = %lor.rhs, %for.end
  %16 = phi i1 [ true, %for.end ], [ %cmp27, %lor.rhs ]
  %17 = zext i1 %16 to i64, !dbg !11627
  %cond = select i1 %16, i32 0, i32 -110, !dbg !11627
  store i32 %cond, i32* %tmp, align 4, !dbg !11654
  %18 = load i32, i32* %tmp, align 4, !dbg !11627
  store i32 %18, i32* %__ret, align 4, !dbg !11624
  %19 = load i32, i32* %val, align 4, !dbg !11655
  %cmp28 = icmp slt i32 %19, 0, !dbg !11655
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !11624

if.then29:                                        ; preds = %lor.end
  %20 = load i32, i32* %val, align 4, !dbg !11655
  store i32 %20, i32* %__ret, align 4, !dbg !11655
  br label %if.end30, !dbg !11655

if.end30:                                         ; preds = %if.then29, %lor.end
  %21 = load i32, i32* %__ret, align 4, !dbg !11657
  %tobool31 = icmp ne i32 %21, 0, !dbg !11657
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !11624

if.then32:                                        ; preds = %if.end30
  %22 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11657
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %22, i32 0, i32 0, !dbg !11657
  %dev = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 0, !dbg !11657
  %23 = load i32, i32* %__ret, align 4, !dbg !11657
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.phy_poll_reset, i64 0, i64 0), i32 %23) #13, !dbg !11657
  br label %if.end33, !dbg !11657

if.end33:                                         ; preds = %if.then32, %if.end30
  %24 = load i32, i32* %__ret, align 4, !dbg !11624
  store i32 %24, i32* %tmp34, align 4, !dbg !11657
  %25 = load i32, i32* %tmp34, align 4, !dbg !11624
  store i32 %25, i32* %ret, align 4, !dbg !11659
  %26 = load i32, i32* %ret, align 4, !dbg !11660
  %tobool35 = icmp ne i32 %26, 0, !dbg !11660
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !11662

if.then36:                                        ; preds = %if.end33
  %27 = load i32, i32* %ret, align 4, !dbg !11663
  store i32 %27, i32* %retval, align 4, !dbg !11664
  br label %return, !dbg !11664

if.end37:                                         ; preds = %if.end33
  call void @msleep(i32 1) #10, !dbg !11665
  store i32 0, i32* %retval, align 4, !dbg !11666
  br label %return, !dbg !11666

return:                                           ; preds = %if.end37, %if.then36
  %28 = load i32, i32* %retval, align 4, !dbg !11667
  ret i32 %28, !dbg !11667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_read_abilities(%struct.phy_device* %phydev) #0 !dbg !11668 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %val = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11669, metadata !DIExpression()), !dbg !11670
  call void @llvm.dbg.declare(metadata i32* %val, metadata !11671, metadata !DIExpression()), !dbg !11672
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11673
  %supported = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 15, !dbg !11674
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %supported, i64 0, i64 0, !dbg !11673
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([3 x i32], [3 x i32]* @phy_basic_ports_array, i64 0, i64 0), i32 3, i64* %arraydecay) #10, !dbg !11675
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11676
  %call = call i32 @phy_read(%struct.phy_device* %1, i32 1) #10, !dbg !11677
  store i32 %call, i32* %val, align 4, !dbg !11678
  %2 = load i32, i32* %val, align 4, !dbg !11679
  %cmp = icmp slt i32 %2, 0, !dbg !11681
  br i1 %cmp, label %if.then, label %if.end, !dbg !11682

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %val, align 4, !dbg !11683
  store i32 %3, i32* %retval, align 4, !dbg !11684
  br label %return, !dbg !11684

if.end:                                           ; preds = %entry
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11685
  %supported1 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %4, i32 0, i32 15, !dbg !11686
  %arraydecay2 = getelementptr inbounds [2 x i64], [2 x i64]* %supported1, i64 0, i64 0, !dbg !11685
  %5 = load i32, i32* %val, align 4, !dbg !11687
  %and = and i32 %5, 8, !dbg !11688
  call void @linkmode_mod_bit(i32 6, i64* %arraydecay2, i32 %and) #10, !dbg !11689
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11690
  %supported3 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %6, i32 0, i32 15, !dbg !11691
  %arraydecay4 = getelementptr inbounds [2 x i64], [2 x i64]* %supported3, i64 0, i64 0, !dbg !11690
  %7 = load i32, i32* %val, align 4, !dbg !11692
  %and5 = and i32 %7, 16384, !dbg !11693
  call void @linkmode_mod_bit(i32 3, i64* %arraydecay4, i32 %and5) #10, !dbg !11694
  %8 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11695
  %supported6 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %8, i32 0, i32 15, !dbg !11696
  %arraydecay7 = getelementptr inbounds [2 x i64], [2 x i64]* %supported6, i64 0, i64 0, !dbg !11695
  %9 = load i32, i32* %val, align 4, !dbg !11697
  %and8 = and i32 %9, 8192, !dbg !11698
  call void @linkmode_mod_bit(i32 2, i64* %arraydecay7, i32 %and8) #10, !dbg !11699
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11700
  %supported9 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %10, i32 0, i32 15, !dbg !11701
  %arraydecay10 = getelementptr inbounds [2 x i64], [2 x i64]* %supported9, i64 0, i64 0, !dbg !11700
  %11 = load i32, i32* %val, align 4, !dbg !11702
  %and11 = and i32 %11, 4096, !dbg !11703
  call void @linkmode_mod_bit(i32 1, i64* %arraydecay10, i32 %and11) #10, !dbg !11704
  %12 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11705
  %supported12 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %12, i32 0, i32 15, !dbg !11706
  %arraydecay13 = getelementptr inbounds [2 x i64], [2 x i64]* %supported12, i64 0, i64 0, !dbg !11705
  %13 = load i32, i32* %val, align 4, !dbg !11707
  %and14 = and i32 %13, 2048, !dbg !11708
  call void @linkmode_mod_bit(i32 0, i64* %arraydecay13, i32 %and14) #10, !dbg !11709
  %14 = load i32, i32* %val, align 4, !dbg !11710
  %and15 = and i32 %14, 256, !dbg !11712
  %tobool = icmp ne i32 %and15, 0, !dbg !11712
  br i1 %tobool, label %if.then16, label %if.end30, !dbg !11713

if.then16:                                        ; preds = %if.end
  %15 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11714
  %call17 = call i32 @phy_read(%struct.phy_device* %15, i32 15) #10, !dbg !11716
  store i32 %call17, i32* %val, align 4, !dbg !11717
  %16 = load i32, i32* %val, align 4, !dbg !11718
  %cmp18 = icmp slt i32 %16, 0, !dbg !11720
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !11721

if.then19:                                        ; preds = %if.then16
  %17 = load i32, i32* %val, align 4, !dbg !11722
  store i32 %17, i32* %retval, align 4, !dbg !11723
  br label %return, !dbg !11723

if.end20:                                         ; preds = %if.then16
  %18 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11724
  %supported21 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %18, i32 0, i32 15, !dbg !11725
  %arraydecay22 = getelementptr inbounds [2 x i64], [2 x i64]* %supported21, i64 0, i64 0, !dbg !11724
  %19 = load i32, i32* %val, align 4, !dbg !11726
  %and23 = and i32 %19, 8192, !dbg !11727
  call void @linkmode_mod_bit(i32 5, i64* %arraydecay22, i32 %and23) #10, !dbg !11728
  %20 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11729
  %supported24 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %20, i32 0, i32 15, !dbg !11730
  %arraydecay25 = getelementptr inbounds [2 x i64], [2 x i64]* %supported24, i64 0, i64 0, !dbg !11729
  %21 = load i32, i32* %val, align 4, !dbg !11731
  %and26 = and i32 %21, 4096, !dbg !11732
  call void @linkmode_mod_bit(i32 4, i64* %arraydecay25, i32 %and26) #10, !dbg !11733
  %22 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11734
  %supported27 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %22, i32 0, i32 15, !dbg !11735
  %arraydecay28 = getelementptr inbounds [2 x i64], [2 x i64]* %supported27, i64 0, i64 0, !dbg !11734
  %23 = load i32, i32* %val, align 4, !dbg !11736
  %and29 = and i32 %23, 32768, !dbg !11737
  call void @linkmode_mod_bit(i32 41, i64* %arraydecay28, i32 %and29) #10, !dbg !11738
  br label %if.end30, !dbg !11739

if.end30:                                         ; preds = %if.end20, %if.end
  store i32 0, i32* %retval, align 4, !dbg !11740
  br label %return, !dbg !11740

return:                                           ; preds = %if.end30, %if.then19, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !11741
  ret i32 %24, !dbg !11741
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @linkmode_set_bit_array(i32* %array, i32 %array_size, i64* %addr) #0 !dbg !11742 {
entry:
  %array.addr = alloca i32*, align 8
  %array_size.addr = alloca i32, align 4
  %addr.addr = alloca i64*, align 8
  %i = alloca i32, align 4
  store i32* %array, i32** %array.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %array.addr, metadata !11746, metadata !DIExpression()), !dbg !11747
  store i32 %array_size, i32* %array_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %array_size.addr, metadata !11748, metadata !DIExpression()), !dbg !11749
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11750, metadata !DIExpression()), !dbg !11751
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11752, metadata !DIExpression()), !dbg !11753
  store i32 0, i32* %i, align 4, !dbg !11754
  br label %for.cond, !dbg !11756

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11757
  %1 = load i32, i32* %array_size.addr, align 4, !dbg !11759
  %cmp = icmp slt i32 %0, %1, !dbg !11760
  br i1 %cmp, label %for.body, label %for.end, !dbg !11761

for.body:                                         ; preds = %for.cond
  %2 = load i32*, i32** %array.addr, align 8, !dbg !11762
  %3 = load i32, i32* %i, align 4, !dbg !11763
  %idxprom = sext i32 %3 to i64, !dbg !11762
  %arrayidx = getelementptr i32, i32* %2, i64 %idxprom, !dbg !11762
  %4 = load i32, i32* %arrayidx, align 4, !dbg !11762
  %5 = load i64*, i64** %addr.addr, align 8, !dbg !11764
  call void @linkmode_set_bit(i32 %4, i64* %5) #10, !dbg !11765
  br label %for.inc, !dbg !11765

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !11766
  %inc = add i32 %6, 1, !dbg !11766
  store i32 %inc, i32* %i, align 4, !dbg !11766
  br label %for.cond, !dbg !11767, !llvm.loop !11768

for.end:                                          ; preds = %for.cond
  ret void, !dbg !11770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_read_mmd_unsupported(%struct.phy_device* %phdev, i32 %devad, i16 zeroext %regnum) #0 !dbg !11771 {
entry:
  %phdev.addr = alloca %struct.phy_device*, align 8
  %devad.addr = alloca i32, align 4
  %regnum.addr = alloca i16, align 2
  store %struct.phy_device* %phdev, %struct.phy_device** %phdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phdev.addr, metadata !11772, metadata !DIExpression()), !dbg !11773
  store i32 %devad, i32* %devad.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devad.addr, metadata !11774, metadata !DIExpression()), !dbg !11775
  store i16 %regnum, i16* %regnum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %regnum.addr, metadata !11776, metadata !DIExpression()), !dbg !11777
  ret i32 -95, !dbg !11778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_write_mmd_unsupported(%struct.phy_device* %phdev, i32 %devnum, i16 zeroext %regnum, i16 zeroext %val) #0 !dbg !11779 {
entry:
  %phdev.addr = alloca %struct.phy_device*, align 8
  %devnum.addr = alloca i32, align 4
  %regnum.addr = alloca i16, align 2
  %val.addr = alloca i16, align 2
  store %struct.phy_device* %phdev, %struct.phy_device** %phdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phdev.addr, metadata !11780, metadata !DIExpression()), !dbg !11781
  store i32 %devnum, i32* %devnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devnum.addr, metadata !11782, metadata !DIExpression()), !dbg !11783
  store i16 %regnum, i16* %regnum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %regnum.addr, metadata !11784, metadata !DIExpression()), !dbg !11785
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !11786, metadata !DIExpression()), !dbg !11787
  ret i32 -95, !dbg !11788
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_suspend(%struct.phy_device* %phydev) #0 !dbg !11789 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11790, metadata !DIExpression()), !dbg !11791
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11792
  %call = call i32 @phy_set_bits(%struct.phy_device* %0, i32 0, i16 zeroext 2048) #10, !dbg !11793
  ret i32 %call, !dbg !11794
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_set_bits(%struct.phy_device* %phydev, i32 %regnum, i16 zeroext %val) #0 !dbg !11795 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %regnum.addr = alloca i32, align 4
  %val.addr = alloca i16, align 2
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11798, metadata !DIExpression()), !dbg !11799
  store i32 %regnum, i32* %regnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regnum.addr, metadata !11800, metadata !DIExpression()), !dbg !11801
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !11802, metadata !DIExpression()), !dbg !11803
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11804
  %1 = load i32, i32* %regnum.addr, align 4, !dbg !11805
  %2 = load i16, i16* %val.addr, align 2, !dbg !11806
  %call = call i32 @phy_modify(%struct.phy_device* %0, i32 %1, i16 zeroext 0, i16 zeroext %2) #10, !dbg !11807
  ret i32 %call, !dbg !11808
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_resume(%struct.phy_device* %phydev) #0 !dbg !11809 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11810, metadata !DIExpression()), !dbg !11811
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11812
  %call = call i32 @phy_clear_bits(%struct.phy_device* %0, i32 0, i16 zeroext 2048) #10, !dbg !11813
  ret i32 %call, !dbg !11814
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_clear_bits(%struct.phy_device* %phydev, i32 %regnum, i16 zeroext %val) #0 !dbg !11815 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %regnum.addr = alloca i32, align 4
  %val.addr = alloca i16, align 2
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11816, metadata !DIExpression()), !dbg !11817
  store i32 %regnum, i32* %regnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regnum.addr, metadata !11818, metadata !DIExpression()), !dbg !11819
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !11820, metadata !DIExpression()), !dbg !11821
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11822
  %1 = load i32, i32* %regnum.addr, align 4, !dbg !11823
  %2 = load i16, i16* %val.addr, align 2, !dbg !11824
  %call = call i32 @phy_modify(%struct.phy_device* %0, i32 %1, i16 zeroext %2, i16 zeroext 0) #10, !dbg !11825
  ret i32 %call, !dbg !11826
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @genphy_loopback(%struct.phy_device* %phydev, i1 zeroext %enable) #0 !dbg !11827 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %enable.addr = alloca i8, align 1
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11828, metadata !DIExpression()), !dbg !11829
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !11830, metadata !DIExpression()), !dbg !11831
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11832
  %1 = load i8, i8* %enable.addr, align 1, !dbg !11833
  %tobool = trunc i8 %1 to i1, !dbg !11833
  %2 = zext i1 %tobool to i64, !dbg !11833
  %cond = select i1 %tobool, i32 16384, i32 0, !dbg !11833
  %conv = trunc i32 %cond to i16, !dbg !11833
  %call = call i32 @phy_modify(%struct.phy_device* %0, i32 0, i16 zeroext 16384, i16 zeroext %conv) #10, !dbg !11834
  ret i32 %call, !dbg !11835
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_remove_link_mode(%struct.phy_device* %phydev, i32 %link_mode) #0 !dbg !11836 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %link_mode.addr = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11839, metadata !DIExpression()), !dbg !11840
  store i32 %link_mode, i32* %link_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %link_mode.addr, metadata !11841, metadata !DIExpression()), !dbg !11842
  %0 = load i32, i32* %link_mode.addr, align 4, !dbg !11843
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11844
  %supported = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 15, !dbg !11845
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %supported, i64 0, i64 0, !dbg !11844
  call void @linkmode_clear_bit(i32 %0, i64* %arraydecay) #10, !dbg !11846
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11847
  call void @phy_advertise_supported(%struct.phy_device* %2) #10, !dbg !11848
  ret void, !dbg !11849
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @linkmode_clear_bit(i32 %nr, i64* %addr) #0 !dbg !11850 {
entry:
  %nr.addr = alloca i32, align 4
  %addr.addr = alloca i64*, align 8
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !11853, metadata !DIExpression()), !dbg !11854
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11855, metadata !DIExpression()), !dbg !11856
  %0 = load i32, i32* %nr.addr, align 4, !dbg !11857
  %conv = sext i32 %0 to i64, !dbg !11857
  %1 = load i64*, i64** %addr.addr, align 8, !dbg !11858
  call void @__clear_bit(i64 %conv, i64* %1) #10, !dbg !11859
  ret void, !dbg !11860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_advertise_supported(%struct.phy_device* %phydev) #0 !dbg !11861 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %new = alloca [2 x i64], align 16
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11862, metadata !DIExpression()), !dbg !11863
  call void @llvm.dbg.declare(metadata [2 x i64]* %new, metadata !11864, metadata !DIExpression()), !dbg !11865
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %new, i64 0, i64 0, !dbg !11866
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11867
  %supported = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 15, !dbg !11868
  %arraydecay1 = getelementptr inbounds [2 x i64], [2 x i64]* %supported, i64 0, i64 0, !dbg !11867
  call void @linkmode_copy(i64* %arraydecay, i64* %arraydecay1) #10, !dbg !11869
  %arraydecay2 = getelementptr inbounds [2 x i64], [2 x i64]* %new, i64 0, i64 0, !dbg !11870
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11871
  %advertising = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 16, !dbg !11872
  %arraydecay3 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising, i64 0, i64 0, !dbg !11871
  call void @phy_copy_pause_bits(i64* %arraydecay2, i64* %arraydecay3) #10, !dbg !11873
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11874
  %advertising4 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 16, !dbg !11875
  %arraydecay5 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising4, i64 0, i64 0, !dbg !11874
  %arraydecay6 = getelementptr inbounds [2 x i64], [2 x i64]* %new, i64 0, i64 0, !dbg !11876
  call void @linkmode_copy(i64* %arraydecay5, i64* %arraydecay6) #10, !dbg !11877
  ret void, !dbg !11878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @linkmode_copy(i64* %dst, i64* %src) #0 !dbg !11879 {
entry:
  %dst.addr = alloca i64*, align 8
  %src.addr = alloca i64*, align 8
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !11882, metadata !DIExpression()), !dbg !11883
  store i64* %src, i64** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src.addr, metadata !11884, metadata !DIExpression()), !dbg !11885
  %0 = load i64*, i64** %dst.addr, align 8, !dbg !11886
  %1 = load i64*, i64** %src.addr, align 8, !dbg !11887
  call void @bitmap_copy(i64* %0, i64* %1, i32 92) #10, !dbg !11888
  ret void, !dbg !11889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @phy_copy_pause_bits(i64* %dst, i64* %src) #0 !dbg !11890 {
entry:
  %dst.addr = alloca i64*, align 8
  %src.addr = alloca i64*, align 8
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !11893, metadata !DIExpression()), !dbg !11894
  store i64* %src, i64** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src.addr, metadata !11895, metadata !DIExpression()), !dbg !11896
  %0 = load i64*, i64** %dst.addr, align 8, !dbg !11897
  %1 = load i64*, i64** %src.addr, align 8, !dbg !11898
  %call = call i32 @linkmode_test_bit(i32 14, i64* %1) #10, !dbg !11899
  call void @linkmode_mod_bit(i32 14, i64* %0, i32 %call) #10, !dbg !11900
  %2 = load i64*, i64** %dst.addr, align 8, !dbg !11901
  %3 = load i64*, i64** %src.addr, align 8, !dbg !11902
  %call1 = call i32 @linkmode_test_bit(i32 13, i64* %3) #10, !dbg !11903
  call void @linkmode_mod_bit(i32 13, i64* %2, i32 %call1) #10, !dbg !11904
  ret void, !dbg !11905
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_support_sym_pause(%struct.phy_device* %phydev) #0 !dbg !11906 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11907, metadata !DIExpression()), !dbg !11908
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11909
  %supported = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 15, !dbg !11910
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %supported, i64 0, i64 0, !dbg !11909
  call void @linkmode_clear_bit(i32 14, i64* %arraydecay) #10, !dbg !11911
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11912
  %advertising = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 16, !dbg !11913
  %arraydecay1 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising, i64 0, i64 0, !dbg !11912
  %2 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11914
  %supported2 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %2, i32 0, i32 15, !dbg !11915
  %arraydecay3 = getelementptr inbounds [2 x i64], [2 x i64]* %supported2, i64 0, i64 0, !dbg !11914
  call void @phy_copy_pause_bits(i64* %arraydecay1, i64* %arraydecay3) #10, !dbg !11916
  ret void, !dbg !11917
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_support_asym_pause(%struct.phy_device* %phydev) #0 !dbg !11918 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11919, metadata !DIExpression()), !dbg !11920
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11921
  %advertising = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 16, !dbg !11922
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %advertising, i64 0, i64 0, !dbg !11921
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11923
  %supported = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 15, !dbg !11924
  %arraydecay1 = getelementptr inbounds [2 x i64], [2 x i64]* %supported, i64 0, i64 0, !dbg !11923
  call void @phy_copy_pause_bits(i64* %arraydecay, i64* %arraydecay1) #10, !dbg !11925
  ret void, !dbg !11926
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_set_sym_pause(%struct.phy_device* %phydev, i1 zeroext %rx, i1 zeroext %tx, i1 zeroext %autoneg) #0 !dbg !11927 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %rx.addr = alloca i8, align 1
  %tx.addr = alloca i8, align 1
  %autoneg.addr = alloca i8, align 1
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11930, metadata !DIExpression()), !dbg !11931
  %frombool = zext i1 %rx to i8
  store i8 %frombool, i8* %rx.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rx.addr, metadata !11932, metadata !DIExpression()), !dbg !11933
  %frombool1 = zext i1 %tx to i8
  store i8 %frombool1, i8* %tx.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %tx.addr, metadata !11934, metadata !DIExpression()), !dbg !11935
  %frombool2 = zext i1 %autoneg to i8
  store i8 %frombool2, i8* %autoneg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %autoneg.addr, metadata !11936, metadata !DIExpression()), !dbg !11937
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11938
  %supported = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 15, !dbg !11939
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %supported, i64 0, i64 0, !dbg !11938
  call void @linkmode_clear_bit(i32 13, i64* %arraydecay) #10, !dbg !11940
  %1 = load i8, i8* %rx.addr, align 1, !dbg !11941
  %tobool = trunc i8 %1 to i1, !dbg !11941
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11943

land.lhs.true:                                    ; preds = %entry
  %2 = load i8, i8* %tx.addr, align 1, !dbg !11944
  %tobool3 = trunc i8 %2 to i1, !dbg !11944
  br i1 %tobool3, label %land.lhs.true4, label %if.end, !dbg !11945

land.lhs.true4:                                   ; preds = %land.lhs.true
  %3 = load i8, i8* %autoneg.addr, align 1, !dbg !11946
  %tobool5 = trunc i8 %3 to i1, !dbg !11946
  br i1 %tobool5, label %if.then, label %if.end, !dbg !11947

if.then:                                          ; preds = %land.lhs.true4
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11948
  %supported6 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %4, i32 0, i32 15, !dbg !11949
  %arraydecay7 = getelementptr inbounds [2 x i64], [2 x i64]* %supported6, i64 0, i64 0, !dbg !11948
  call void @linkmode_set_bit(i32 13, i64* %arraydecay7) #10, !dbg !11950
  br label %if.end, !dbg !11950

if.end:                                           ; preds = %if.then, %land.lhs.true4, %land.lhs.true, %entry
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11951
  %advertising = getelementptr inbounds %struct.phy_device, %struct.phy_device* %5, i32 0, i32 16, !dbg !11952
  %arraydecay8 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising, i64 0, i64 0, !dbg !11951
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11953
  %supported9 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %6, i32 0, i32 15, !dbg !11954
  %arraydecay10 = getelementptr inbounds [2 x i64], [2 x i64]* %supported9, i64 0, i64 0, !dbg !11953
  call void @linkmode_copy(i64* %arraydecay8, i64* %arraydecay10) #10, !dbg !11955
  ret void, !dbg !11956
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @linkmode_set_bit(i32 %nr, i64* %addr) #0 !dbg !11957 {
entry:
  %nr.addr = alloca i32, align 4
  %addr.addr = alloca i64*, align 8
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !11958, metadata !DIExpression()), !dbg !11959
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !11960, metadata !DIExpression()), !dbg !11961
  %0 = load i32, i32* %nr.addr, align 4, !dbg !11962
  %conv = sext i32 %0 to i64, !dbg !11962
  %1 = load i64*, i64** %addr.addr, align 8, !dbg !11963
  call void @__set_bit(i64 %conv, i64* %1) #10, !dbg !11964
  ret void, !dbg !11965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_set_asym_pause(%struct.phy_device* %phydev, i1 zeroext %rx, i1 zeroext %tx) #0 !dbg !11966 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %rx.addr = alloca i8, align 1
  %tx.addr = alloca i8, align 1
  %oldadv = alloca [2 x i64], align 16
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !11969, metadata !DIExpression()), !dbg !11970
  %frombool = zext i1 %rx to i8
  store i8 %frombool, i8* %rx.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rx.addr, metadata !11971, metadata !DIExpression()), !dbg !11972
  %frombool1 = zext i1 %tx to i8
  store i8 %frombool1, i8* %tx.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %tx.addr, metadata !11973, metadata !DIExpression()), !dbg !11974
  call void @llvm.dbg.declare(metadata [2 x i64]* %oldadv, metadata !11975, metadata !DIExpression()), !dbg !11976
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %oldadv, i64 0, i64 0, !dbg !11977
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11978
  %advertising = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 16, !dbg !11979
  %arraydecay2 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising, i64 0, i64 0, !dbg !11978
  call void @linkmode_copy(i64* %arraydecay, i64* %arraydecay2) #10, !dbg !11980
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11981
  %advertising3 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %1, i32 0, i32 16, !dbg !11982
  %arraydecay4 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising3, i64 0, i64 0, !dbg !11981
  %2 = load i8, i8* %tx.addr, align 1, !dbg !11983
  %tobool = trunc i8 %2 to i1, !dbg !11983
  %3 = load i8, i8* %rx.addr, align 1, !dbg !11984
  %tobool5 = trunc i8 %3 to i1, !dbg !11984
  call void @linkmode_set_pause(i64* %arraydecay4, i1 zeroext %tobool, i1 zeroext %tobool5) #10, !dbg !11985
  %arraydecay6 = getelementptr inbounds [2 x i64], [2 x i64]* %oldadv, i64 0, i64 0, !dbg !11986
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11988
  %advertising7 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %4, i32 0, i32 16, !dbg !11989
  %arraydecay8 = getelementptr inbounds [2 x i64], [2 x i64]* %advertising7, i64 0, i64 0, !dbg !11988
  %call = call i32 @linkmode_equal(i64* %arraydecay6, i64* %arraydecay8) #10, !dbg !11990
  %tobool9 = icmp ne i32 %call, 0, !dbg !11990
  br i1 %tobool9, label %if.end, label %land.lhs.true, !dbg !11991

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11992
  %autoneg = getelementptr inbounds %struct.phy_device, %struct.phy_device* %5, i32 0, i32 4, !dbg !11993
  %bf.load = load i16, i16* %autoneg, align 4, !dbg !11993
  %bf.lshr = lshr i16 %bf.load, 10, !dbg !11993
  %bf.clear = and i16 %bf.lshr, 1, !dbg !11993
  %bf.cast = zext i16 %bf.clear to i32, !dbg !11993
  %tobool10 = icmp ne i32 %bf.cast, 0, !dbg !11992
  br i1 %tobool10, label %if.then, label %if.end, !dbg !11994

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !11995
  %call11 = call i32 @phy_start_aneg(%struct.phy_device* %6) #10, !dbg !11996
  br label %if.end, !dbg !11996

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !11997
}

; Function Attrs: noredzone
declare dso_local void @linkmode_set_pause(i64*, i1 zeroext, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @linkmode_equal(i64* %src1, i64* %src2) #0 !dbg !11998 {
entry:
  %src1.addr = alloca i64*, align 8
  %src2.addr = alloca i64*, align 8
  store i64* %src1, i64** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src1.addr, metadata !12001, metadata !DIExpression()), !dbg !12002
  store i64* %src2, i64** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src2.addr, metadata !12003, metadata !DIExpression()), !dbg !12004
  %0 = load i64*, i64** %src1.addr, align 8, !dbg !12005
  %1 = load i64*, i64** %src2.addr, align 8, !dbg !12006
  %call = call i32 @bitmap_equal(i64* %0, i64* %1, i32 92) #10, !dbg !12007
  ret i32 %call, !dbg !12008
}

; Function Attrs: noredzone
declare dso_local i32 @phy_start_aneg(%struct.phy_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @phy_validate_pause(%struct.phy_device* %phydev, %struct.ethtool_pauseparam* %pp) #0 !dbg !12009 {
entry:
  %retval = alloca i1, align 1
  %phydev.addr = alloca %struct.phy_device*, align 8
  %pp.addr = alloca %struct.ethtool_pauseparam*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !12012, metadata !DIExpression()), !dbg !12013
  store %struct.ethtool_pauseparam* %pp, %struct.ethtool_pauseparam** %pp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ethtool_pauseparam** %pp.addr, metadata !12014, metadata !DIExpression()), !dbg !12015
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !12016
  %supported = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 15, !dbg !12018
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %supported, i64 0, i64 0, !dbg !12016
  %call = call i32 @linkmode_test_bit(i32 13, i64* %arraydecay) #10, !dbg !12019
  %tobool = icmp ne i32 %call, 0, !dbg !12019
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !12020

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pp.addr, align 8, !dbg !12021
  %rx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %1, i32 0, i32 2, !dbg !12022
  %2 = load i32, i32* %rx_pause, align 4, !dbg !12022
  %tobool1 = icmp ne i32 %2, 0, !dbg !12021
  br i1 %tobool1, label %if.then, label %if.end, !dbg !12023

if.then:                                          ; preds = %land.lhs.true
  store i1 false, i1* %retval, align 1, !dbg !12024
  br label %return, !dbg !12024

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !12025
  %supported2 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %3, i32 0, i32 15, !dbg !12027
  %arraydecay3 = getelementptr inbounds [2 x i64], [2 x i64]* %supported2, i64 0, i64 0, !dbg !12025
  %call4 = call i32 @linkmode_test_bit(i32 14, i64* %arraydecay3) #10, !dbg !12028
  %tobool5 = icmp ne i32 %call4, 0, !dbg !12028
  br i1 %tobool5, label %if.end9, label %land.lhs.true6, !dbg !12029

land.lhs.true6:                                   ; preds = %if.end
  %4 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pp.addr, align 8, !dbg !12030
  %rx_pause7 = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %4, i32 0, i32 2, !dbg !12031
  %5 = load i32, i32* %rx_pause7, align 4, !dbg !12031
  %6 = load %struct.ethtool_pauseparam*, %struct.ethtool_pauseparam** %pp.addr, align 8, !dbg !12032
  %tx_pause = getelementptr inbounds %struct.ethtool_pauseparam, %struct.ethtool_pauseparam* %6, i32 0, i32 3, !dbg !12033
  %7 = load i32, i32* %tx_pause, align 4, !dbg !12033
  %cmp = icmp ne i32 %5, %7, !dbg !12034
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !12035

if.then8:                                         ; preds = %land.lhs.true6
  store i1 false, i1* %retval, align 1, !dbg !12036
  br label %return, !dbg !12036

if.end9:                                          ; preds = %land.lhs.true6, %if.end
  store i1 true, i1* %retval, align 1, !dbg !12037
  br label %return, !dbg !12037

return:                                           ; preds = %if.end9, %if.then8, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !12038
  ret i1 %8, !dbg !12038
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @linkmode_test_bit(i32 %nr, i64* %addr) #0 !dbg !12039 {
entry:
  %nr.addr = alloca i32, align 4
  %addr.addr = alloca i64*, align 8
  store i32 %nr, i32* %nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nr.addr, metadata !12044, metadata !DIExpression()), !dbg !12045
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !12046, metadata !DIExpression()), !dbg !12047
  %0 = load i32, i32* %nr.addr, align 4, !dbg !12048
  %conv = sext i32 %0 to i64, !dbg !12048
  %1 = load i64*, i64** %addr.addr, align 8, !dbg !12049
  %call = call zeroext i1 @test_bit(i64 %conv, i64* %1) #10, !dbg !12050
  %conv1 = zext i1 %call to i32, !dbg !12050
  ret i32 %conv1, !dbg !12051
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_get_pause(%struct.phy_device* %phydev, i8* %tx_pause, i8* %rx_pause) #0 !dbg !12052 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  %tx_pause.addr = alloca i8*, align 8
  %rx_pause.addr = alloca i8*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !12055, metadata !DIExpression()), !dbg !12056
  store i8* %tx_pause, i8** %tx_pause.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tx_pause.addr, metadata !12057, metadata !DIExpression()), !dbg !12058
  store i8* %rx_pause, i8** %rx_pause.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rx_pause.addr, metadata !12059, metadata !DIExpression()), !dbg !12060
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !12061
  %duplex = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 9, !dbg !12063
  %1 = load i32, i32* %duplex, align 8, !dbg !12063
  %cmp = icmp ne i32 %1, 1, !dbg !12064
  br i1 %cmp, label %if.then, label %if.end, !dbg !12065

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %tx_pause.addr, align 8, !dbg !12066
  store i8 0, i8* %2, align 1, !dbg !12068
  %3 = load i8*, i8** %rx_pause.addr, align 8, !dbg !12069
  store i8 0, i8* %3, align 1, !dbg !12070
  br label %return, !dbg !12071

if.end:                                           ; preds = %entry
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !12072
  %advertising = getelementptr inbounds %struct.phy_device, %struct.phy_device* %4, i32 0, i32 16, !dbg !12073
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %advertising, i64 0, i64 0, !dbg !12072
  %5 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !12074
  %lp_advertising = getelementptr inbounds %struct.phy_device, %struct.phy_device* %5, i32 0, i32 17, !dbg !12075
  %arraydecay1 = getelementptr inbounds [2 x i64], [2 x i64]* %lp_advertising, i64 0, i64 0, !dbg !12074
  %6 = load i8*, i8** %tx_pause.addr, align 8, !dbg !12076
  %7 = load i8*, i8** %rx_pause.addr, align 8, !dbg !12077
  call void @linkmode_resolve_pause(i64* %arraydecay, i64* %arraydecay1, i8* %6, i8* %7) #10, !dbg !12078
  br label %return, !dbg !12079

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !12080
}

; Function Attrs: noredzone
declare dso_local void @linkmode_resolve_pause(i64*, i64*, i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_get_internal_delay(%struct.phy_device* %phydev, %struct.device* %dev, i32* %delay_values, i32 %size, i1 zeroext %is_rx) #0 !dbg !12081 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %delay_values.addr = alloca i32*, align 8
  %size.addr = alloca i32, align 4
  %is_rx.addr = alloca i8, align 1
  %delay = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !12084, metadata !DIExpression()), !dbg !12085
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12086, metadata !DIExpression()), !dbg !12087
  store i32* %delay_values, i32** %delay_values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %delay_values.addr, metadata !12088, metadata !DIExpression()), !dbg !12089
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12090, metadata !DIExpression()), !dbg !12091
  %frombool = zext i1 %is_rx to i8
  store i8 %frombool, i8* %is_rx.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_rx.addr, metadata !12092, metadata !DIExpression()), !dbg !12093
  call void @llvm.dbg.declare(metadata i32* %delay, metadata !12094, metadata !DIExpression()), !dbg !12095
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12096, metadata !DIExpression()), !dbg !12097
  %0 = load i8, i8* %is_rx.addr, align 1, !dbg !12098
  %tobool = trunc i8 %0 to i1, !dbg !12098
  br i1 %tobool, label %if.then, label %if.else7, !dbg !12100

if.then:                                          ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12101
  %call = call i32 @phy_get_int_delay_property(%struct.device* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0)) #10, !dbg !12103
  store i32 %call, i32* %delay, align 4, !dbg !12104
  %2 = load i32, i32* %delay, align 4, !dbg !12105
  %cmp = icmp slt i32 %2, 0, !dbg !12107
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !12108

land.lhs.true:                                    ; preds = %if.then
  %3 = load i32, i32* %size.addr, align 4, !dbg !12109
  %cmp1 = icmp eq i32 %3, 0, !dbg !12110
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !12111

if.then2:                                         ; preds = %land.lhs.true
  %4 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !12112
  %interface = getelementptr inbounds %struct.phy_device, %struct.phy_device* %4, i32 0, i32 7, !dbg !12115
  %5 = load i32, i32* %interface, align 8, !dbg !12115
  %cmp3 = icmp eq i32 %5, 9, !dbg !12116
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !12117

lor.lhs.false:                                    ; preds = %if.then2
  %6 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !12118
  %interface4 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %6, i32 0, i32 7, !dbg !12119
  %7 = load i32, i32* %interface4, align 8, !dbg !12119
  %cmp5 = icmp eq i32 %7, 10, !dbg !12120
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !12121

if.then6:                                         ; preds = %lor.lhs.false, %if.then2
  store i32 1, i32* %retval, align 4, !dbg !12122
  br label %return, !dbg !12122

if.else:                                          ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !12123
  br label %return, !dbg !12123

if.end:                                           ; preds = %land.lhs.true, %if.then
  br label %if.end21, !dbg !12124

if.else7:                                         ; preds = %entry
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12125
  %call8 = call i32 @phy_get_int_delay_property(%struct.device* %8, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0)) #10, !dbg !12127
  store i32 %call8, i32* %delay, align 4, !dbg !12128
  %9 = load i32, i32* %delay, align 4, !dbg !12129
  %cmp9 = icmp slt i32 %9, 0, !dbg !12131
  br i1 %cmp9, label %land.lhs.true10, label %if.end20, !dbg !12132

land.lhs.true10:                                  ; preds = %if.else7
  %10 = load i32, i32* %size.addr, align 4, !dbg !12133
  %cmp11 = icmp eq i32 %10, 0, !dbg !12134
  br i1 %cmp11, label %if.then12, label %if.end20, !dbg !12135

if.then12:                                        ; preds = %land.lhs.true10
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !12136
  %interface13 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %11, i32 0, i32 7, !dbg !12139
  %12 = load i32, i32* %interface13, align 8, !dbg !12139
  %cmp14 = icmp eq i32 %12, 9, !dbg !12140
  br i1 %cmp14, label %if.then18, label %lor.lhs.false15, !dbg !12141

lor.lhs.false15:                                  ; preds = %if.then12
  %13 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !12142
  %interface16 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %13, i32 0, i32 7, !dbg !12143
  %14 = load i32, i32* %interface16, align 8, !dbg !12143
  %cmp17 = icmp eq i32 %14, 11, !dbg !12144
  br i1 %cmp17, label %if.then18, label %if.else19, !dbg !12145

if.then18:                                        ; preds = %lor.lhs.false15, %if.then12
  store i32 1, i32* %retval, align 4, !dbg !12146
  br label %return, !dbg !12146

if.else19:                                        ; preds = %lor.lhs.false15
  store i32 0, i32* %retval, align 4, !dbg !12147
  br label %return, !dbg !12147

if.end20:                                         ; preds = %land.lhs.true10, %if.else7
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end
  %15 = load i32, i32* %delay, align 4, !dbg !12148
  %cmp22 = icmp slt i32 %15, 0, !dbg !12150
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !12151

if.then23:                                        ; preds = %if.end21
  %16 = load i32, i32* %delay, align 4, !dbg !12152
  store i32 %16, i32* %retval, align 4, !dbg !12153
  br label %return, !dbg !12153

if.end24:                                         ; preds = %if.end21
  %17 = load i32, i32* %delay, align 4, !dbg !12154
  %tobool25 = icmp ne i32 %17, 0, !dbg !12154
  br i1 %tobool25, label %land.lhs.true26, label %if.end29, !dbg !12156

land.lhs.true26:                                  ; preds = %if.end24
  %18 = load i32, i32* %size.addr, align 4, !dbg !12157
  %cmp27 = icmp eq i32 %18, 0, !dbg !12158
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !12159

if.then28:                                        ; preds = %land.lhs.true26
  %19 = load i32, i32* %delay, align 4, !dbg !12160
  store i32 %19, i32* %retval, align 4, !dbg !12161
  br label %return, !dbg !12161

if.end29:                                         ; preds = %land.lhs.true26, %if.end24
  %20 = load i32, i32* %delay, align 4, !dbg !12162
  %21 = load i32*, i32** %delay_values.addr, align 8, !dbg !12164
  %arrayidx = getelementptr i32, i32* %21, i64 0, !dbg !12164
  %22 = load i32, i32* %arrayidx, align 4, !dbg !12164
  %cmp30 = icmp slt i32 %20, %22, !dbg !12165
  br i1 %cmp30, label %if.then34, label %lor.lhs.false31, !dbg !12166

lor.lhs.false31:                                  ; preds = %if.end29
  %23 = load i32, i32* %delay, align 4, !dbg !12167
  %24 = load i32*, i32** %delay_values.addr, align 8, !dbg !12168
  %25 = load i32, i32* %size.addr, align 4, !dbg !12169
  %sub = sub i32 %25, 1, !dbg !12170
  %idxprom = sext i32 %sub to i64, !dbg !12168
  %arrayidx32 = getelementptr i32, i32* %24, i64 %idxprom, !dbg !12168
  %26 = load i32, i32* %arrayidx32, align 4, !dbg !12168
  %cmp33 = icmp sgt i32 %23, %26, !dbg !12171
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !12172

if.then34:                                        ; preds = %lor.lhs.false31, %if.end29
  %27 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !12173
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %27, i32 0, i32 0, !dbg !12173
  %dev35 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 0, !dbg !12173
  %28 = load i32, i32* %delay, align 4, !dbg !12173
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev35, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0), i32 %28) #13, !dbg !12173
  store i32 -22, i32* %retval, align 4, !dbg !12175
  br label %return, !dbg !12175

if.end36:                                         ; preds = %lor.lhs.false31
  %29 = load i32, i32* %delay, align 4, !dbg !12176
  %30 = load i32*, i32** %delay_values.addr, align 8, !dbg !12178
  %arrayidx37 = getelementptr i32, i32* %30, i64 0, !dbg !12178
  %31 = load i32, i32* %arrayidx37, align 4, !dbg !12178
  %cmp38 = icmp eq i32 %29, %31, !dbg !12179
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !12180

if.then39:                                        ; preds = %if.end36
  store i32 0, i32* %retval, align 4, !dbg !12181
  br label %return, !dbg !12181

if.end40:                                         ; preds = %if.end36
  store i32 1, i32* %i, align 4, !dbg !12182
  br label %for.cond, !dbg !12184

for.cond:                                         ; preds = %for.inc, %if.end40
  %32 = load i32, i32* %i, align 4, !dbg !12185
  %33 = load i32, i32* %size.addr, align 4, !dbg !12187
  %cmp41 = icmp slt i32 %32, %33, !dbg !12188
  br i1 %cmp41, label %for.body, label %for.end, !dbg !12189

for.body:                                         ; preds = %for.cond
  %34 = load i32, i32* %delay, align 4, !dbg !12190
  %35 = load i32*, i32** %delay_values.addr, align 8, !dbg !12193
  %36 = load i32, i32* %i, align 4, !dbg !12194
  %idxprom42 = sext i32 %36 to i64, !dbg !12193
  %arrayidx43 = getelementptr i32, i32* %35, i64 %idxprom42, !dbg !12193
  %37 = load i32, i32* %arrayidx43, align 4, !dbg !12193
  %cmp44 = icmp eq i32 %34, %37, !dbg !12195
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !12196

if.then45:                                        ; preds = %for.body
  %38 = load i32, i32* %i, align 4, !dbg !12197
  store i32 %38, i32* %retval, align 4, !dbg !12198
  br label %return, !dbg !12198

if.end46:                                         ; preds = %for.body
  %39 = load i32, i32* %delay, align 4, !dbg !12199
  %40 = load i32*, i32** %delay_values.addr, align 8, !dbg !12201
  %41 = load i32, i32* %i, align 4, !dbg !12202
  %sub47 = sub i32 %41, 1, !dbg !12203
  %idxprom48 = sext i32 %sub47 to i64, !dbg !12201
  %arrayidx49 = getelementptr i32, i32* %40, i64 %idxprom48, !dbg !12201
  %42 = load i32, i32* %arrayidx49, align 4, !dbg !12201
  %cmp50 = icmp sgt i32 %39, %42, !dbg !12204
  br i1 %cmp50, label %land.lhs.true51, label %if.end67, !dbg !12205

land.lhs.true51:                                  ; preds = %if.end46
  %43 = load i32, i32* %delay, align 4, !dbg !12206
  %44 = load i32*, i32** %delay_values.addr, align 8, !dbg !12207
  %45 = load i32, i32* %i, align 4, !dbg !12208
  %idxprom52 = sext i32 %45 to i64, !dbg !12207
  %arrayidx53 = getelementptr i32, i32* %44, i64 %idxprom52, !dbg !12207
  %46 = load i32, i32* %arrayidx53, align 4, !dbg !12207
  %cmp54 = icmp slt i32 %43, %46, !dbg !12209
  br i1 %cmp54, label %if.then55, label %if.end67, !dbg !12210

if.then55:                                        ; preds = %land.lhs.true51
  %47 = load i32, i32* %delay, align 4, !dbg !12211
  %48 = load i32*, i32** %delay_values.addr, align 8, !dbg !12214
  %49 = load i32, i32* %i, align 4, !dbg !12215
  %sub56 = sub i32 %49, 1, !dbg !12216
  %idxprom57 = sext i32 %sub56 to i64, !dbg !12214
  %arrayidx58 = getelementptr i32, i32* %48, i64 %idxprom57, !dbg !12214
  %50 = load i32, i32* %arrayidx58, align 4, !dbg !12214
  %sub59 = sub i32 %47, %50, !dbg !12217
  %51 = load i32*, i32** %delay_values.addr, align 8, !dbg !12218
  %52 = load i32, i32* %i, align 4, !dbg !12219
  %idxprom60 = sext i32 %52 to i64, !dbg !12218
  %arrayidx61 = getelementptr i32, i32* %51, i64 %idxprom60, !dbg !12218
  %53 = load i32, i32* %arrayidx61, align 4, !dbg !12218
  %54 = load i32, i32* %delay, align 4, !dbg !12220
  %sub62 = sub i32 %53, %54, !dbg !12221
  %cmp63 = icmp slt i32 %sub59, %sub62, !dbg !12222
  br i1 %cmp63, label %if.then64, label %if.else66, !dbg !12223

if.then64:                                        ; preds = %if.then55
  %55 = load i32, i32* %i, align 4, !dbg !12224
  %sub65 = sub i32 %55, 1, !dbg !12225
  store i32 %sub65, i32* %retval, align 4, !dbg !12226
  br label %return, !dbg !12226

if.else66:                                        ; preds = %if.then55
  %56 = load i32, i32* %i, align 4, !dbg !12227
  store i32 %56, i32* %retval, align 4, !dbg !12228
  br label %return, !dbg !12228

if.end67:                                         ; preds = %land.lhs.true51, %if.end46
  br label %for.inc, !dbg !12229

for.inc:                                          ; preds = %if.end67
  %57 = load i32, i32* %i, align 4, !dbg !12230
  %inc = add i32 %57, 1, !dbg !12230
  store i32 %inc, i32* %i, align 4, !dbg !12230
  br label %for.cond, !dbg !12231, !llvm.loop !12232

for.end:                                          ; preds = %for.cond
  %58 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !12234
  %mdio68 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %58, i32 0, i32 0, !dbg !12234
  %dev69 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio68, i32 0, i32 0, !dbg !12234
  %59 = load i32, i32* %delay, align 4, !dbg !12234
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev69, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.25, i64 0, i64 0), i32 %59) #13, !dbg !12234
  store i32 -22, i32* %retval, align 4, !dbg !12235
  br label %return, !dbg !12235

return:                                           ; preds = %for.end, %if.else66, %if.then64, %if.then45, %if.then39, %if.then34, %if.then28, %if.then23, %if.else19, %if.then18, %if.else, %if.then6
  %60 = load i32, i32* %retval, align 4, !dbg !12236
  ret i32 %60, !dbg !12236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_get_int_delay_property(%struct.device* %dev, i8* %name) #0 !dbg !12237 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %name.addr = alloca i8*, align 8
  %int_delay = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12240, metadata !DIExpression()), !dbg !12241
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !12242, metadata !DIExpression()), !dbg !12243
  call void @llvm.dbg.declare(metadata i32* %int_delay, metadata !12244, metadata !DIExpression()), !dbg !12245
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12246, metadata !DIExpression()), !dbg !12247
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12248
  %1 = load i8*, i8** %name.addr, align 8, !dbg !12249
  %call = call i32 @device_property_read_u32(%struct.device* %0, i8* %1, i32* %int_delay) #10, !dbg !12250
  store i32 %call, i32* %ret, align 4, !dbg !12251
  %2 = load i32, i32* %ret, align 4, !dbg !12252
  %tobool = icmp ne i32 %2, 0, !dbg !12252
  br i1 %tobool, label %if.then, label %if.end, !dbg !12254

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !12255
  store i32 %3, i32* %retval, align 4, !dbg !12256
  br label %return, !dbg !12256

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %int_delay, align 4, !dbg !12257
  store i32 %4, i32* %retval, align 4, !dbg !12258
  br label %return, !dbg !12258

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !12259
  ret i32 %5, !dbg !12259
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_driver_register(%struct.phy_driver* %new_driver, %struct.module* %owner) #0 !dbg !12260 {
entry:
  %retval = alloca i32, align 4
  %new_driver.addr = alloca %struct.phy_driver*, align 8
  %owner.addr = alloca %struct.module*, align 8
  %retval1 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp47 = alloca i32, align 4
  store %struct.phy_driver* %new_driver, %struct.phy_driver** %new_driver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_driver** %new_driver.addr, metadata !12263, metadata !DIExpression()), !dbg !12264
  store %struct.module* %owner, %struct.module** %owner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %owner.addr, metadata !12265, metadata !DIExpression()), !dbg !12266
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !12267, metadata !DIExpression()), !dbg !12268
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12269, metadata !DIExpression()), !dbg !12272
  %0 = load %struct.phy_driver*, %struct.phy_driver** %new_driver.addr, align 8, !dbg !12272
  %features = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %0, i32 0, i32 4, !dbg !12272
  %1 = load i64*, i64** %features, align 8, !dbg !12272
  %tobool = icmp ne i64* %1, null, !dbg !12272
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !12272

land.rhs:                                         ; preds = %entry
  %2 = load %struct.phy_driver*, %struct.phy_driver** %new_driver.addr, align 8, !dbg !12272
  %get_features = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %2, i32 0, i32 10, !dbg !12272
  %3 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %get_features, align 8, !dbg !12272
  %tobool2 = icmp ne i32 (%struct.phy_device*)* %3, null, !dbg !12272
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !12273
  %lnot = xor i1 %4, true, !dbg !12272
  %lnot3 = xor i1 %lnot, true, !dbg !12272
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !12272
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !12272
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !12274
  %tobool4 = icmp ne i32 %5, 0, !dbg !12274
  %lnot5 = xor i1 %tobool4, true, !dbg !12274
  %lnot7 = xor i1 %lnot5, true, !dbg !12274
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !12274
  %conv = sext i32 %lnot.ext8 to i64, !dbg !12274
  %tobool9 = icmp ne i64 %conv, 0, !dbg !12274
  br i1 %tobool9, label %if.then, label %if.end, !dbg !12272

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !12274

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !12276

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !12278

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !12276

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19, i64 0, i64 0), i32 2962, i32 2305, i64 12) #5, !dbg !12280, !srcloc !12282
  br label %do.end12, !dbg !12280

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 360) #5, !dbg !12283, !srcloc !12285
  br label %do.body13, !dbg !12276

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !12286

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !12276

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !12276

if.end:                                           ; preds = %do.end15, %land.end
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !12272
  %tobool16 = icmp ne i32 %6, 0, !dbg !12272
  %lnot17 = xor i1 %tobool16, true, !dbg !12272
  %lnot19 = xor i1 %lnot17, true, !dbg !12272
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !12272
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !12272
  store i64 %conv21, i64* %tmp, align 8, !dbg !12274
  %7 = load i64, i64* %tmp, align 8, !dbg !12272
  %tobool22 = icmp ne i64 %7, 0, !dbg !12288
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !12289

if.then23:                                        ; preds = %if.end
  %8 = load %struct.phy_driver*, %struct.phy_driver** %new_driver.addr, align 8, !dbg !12290
  %name = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %8, i32 0, i32 2, !dbg !12290
  %9 = load i8*, i8** %name, align 8, !dbg !12290
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.26, i64 0, i64 0), i8* %9) #13, !dbg !12290
  store i32 -22, i32* %retval, align 4, !dbg !12292
  br label %return, !dbg !12292

if.end24:                                         ; preds = %if.end
  %10 = load %struct.phy_driver*, %struct.phy_driver** %new_driver.addr, align 8, !dbg !12293
  %mdiodrv = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %10, i32 0, i32 0, !dbg !12294
  %flags = getelementptr inbounds %struct.mdio_driver_common, %struct.mdio_driver_common* %mdiodrv, i32 0, i32 1, !dbg !12295
  %11 = load i32, i32* %flags, align 8, !dbg !12296
  %or = or i32 %11, -2147483648, !dbg !12296
  store i32 %or, i32* %flags, align 8, !dbg !12296
  %12 = load %struct.phy_driver*, %struct.phy_driver** %new_driver.addr, align 8, !dbg !12297
  %name25 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %12, i32 0, i32 2, !dbg !12298
  %13 = load i8*, i8** %name25, align 8, !dbg !12298
  %14 = load %struct.phy_driver*, %struct.phy_driver** %new_driver.addr, align 8, !dbg !12299
  %mdiodrv26 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %14, i32 0, i32 0, !dbg !12300
  %driver = getelementptr inbounds %struct.mdio_driver_common, %struct.mdio_driver_common* %mdiodrv26, i32 0, i32 0, !dbg !12301
  %name27 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver, i32 0, i32 0, !dbg !12302
  store i8* %13, i8** %name27, align 8, !dbg !12303
  %15 = load %struct.phy_driver*, %struct.phy_driver** %new_driver.addr, align 8, !dbg !12304
  %mdiodrv28 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %15, i32 0, i32 0, !dbg !12305
  %driver29 = getelementptr inbounds %struct.mdio_driver_common, %struct.mdio_driver_common* %mdiodrv28, i32 0, i32 0, !dbg !12306
  %bus = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver29, i32 0, i32 1, !dbg !12307
  store %struct.bus_type* @mdio_bus_type, %struct.bus_type** %bus, align 8, !dbg !12308
  %16 = load %struct.phy_driver*, %struct.phy_driver** %new_driver.addr, align 8, !dbg !12309
  %mdiodrv30 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %16, i32 0, i32 0, !dbg !12310
  %driver31 = getelementptr inbounds %struct.mdio_driver_common, %struct.mdio_driver_common* %mdiodrv30, i32 0, i32 0, !dbg !12311
  %probe = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver31, i32 0, i32 8, !dbg !12312
  store i32 (%struct.device*)* @phy_probe, i32 (%struct.device*)** %probe, align 8, !dbg !12313
  %17 = load %struct.phy_driver*, %struct.phy_driver** %new_driver.addr, align 8, !dbg !12314
  %mdiodrv32 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %17, i32 0, i32 0, !dbg !12315
  %driver33 = getelementptr inbounds %struct.mdio_driver_common, %struct.mdio_driver_common* %mdiodrv32, i32 0, i32 0, !dbg !12316
  %remove = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver33, i32 0, i32 10, !dbg !12317
  store i32 (%struct.device*)* @phy_remove, i32 (%struct.device*)** %remove, align 8, !dbg !12318
  %18 = load %struct.module*, %struct.module** %owner.addr, align 8, !dbg !12319
  %19 = load %struct.phy_driver*, %struct.phy_driver** %new_driver.addr, align 8, !dbg !12320
  %mdiodrv34 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %19, i32 0, i32 0, !dbg !12321
  %driver35 = getelementptr inbounds %struct.mdio_driver_common, %struct.mdio_driver_common* %mdiodrv34, i32 0, i32 0, !dbg !12322
  %owner36 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver35, i32 0, i32 2, !dbg !12323
  store %struct.module* %18, %struct.module** %owner36, align 8, !dbg !12324
  %20 = load %struct.phy_driver*, %struct.phy_driver** %new_driver.addr, align 8, !dbg !12325
  %mdiodrv37 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %20, i32 0, i32 0, !dbg !12326
  %driver38 = getelementptr inbounds %struct.mdio_driver_common, %struct.mdio_driver_common* %mdiodrv37, i32 0, i32 0, !dbg !12327
  %probe_type = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver38, i32 0, i32 5, !dbg !12328
  store i32 2, i32* %probe_type, align 4, !dbg !12329
  %21 = load %struct.phy_driver*, %struct.phy_driver** %new_driver.addr, align 8, !dbg !12330
  %mdiodrv39 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %21, i32 0, i32 0, !dbg !12331
  %driver40 = getelementptr inbounds %struct.mdio_driver_common, %struct.mdio_driver_common* %mdiodrv39, i32 0, i32 0, !dbg !12332
  %call41 = call i32 @driver_register(%struct.device_driver* %driver40) #10, !dbg !12333
  store i32 %call41, i32* %retval1, align 4, !dbg !12334
  %22 = load i32, i32* %retval1, align 4, !dbg !12335
  %tobool42 = icmp ne i32 %22, 0, !dbg !12335
  br i1 %tobool42, label %if.then43, label %if.end46, !dbg !12337

if.then43:                                        ; preds = %if.end24
  %23 = load %struct.phy_driver*, %struct.phy_driver** %new_driver.addr, align 8, !dbg !12338
  %name44 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %23, i32 0, i32 2, !dbg !12338
  %24 = load i8*, i8** %name44, align 8, !dbg !12338
  %25 = load i32, i32* %retval1, align 4, !dbg !12338
  %call45 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.27, i64 0, i64 0), i8* %24, i32 %25) #13, !dbg !12338
  %26 = load i32, i32* %retval1, align 4, !dbg !12340
  store i32 %26, i32* %retval, align 4, !dbg !12341
  br label %return, !dbg !12341

if.end46:                                         ; preds = %if.end24
  store i32 0, i32* %tmp47, align 4, !dbg !12342
  %27 = load i32, i32* %tmp47, align 4, !dbg !12345
  store i32 0, i32* %retval, align 4, !dbg !12346
  br label %return, !dbg !12346

return:                                           ; preds = %if.end46, %if.then43, %if.then23
  %28 = load i32, i32* %retval, align 4, !dbg !12347
  ret i32 %28, !dbg !12347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_probe(%struct.device* %dev) #0 !dbg !12348 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.mdio_device*, align 8
  %tmp4 = alloca %struct.phy_device*, align 8
  %drv = alloca %struct.device_driver*, align 8
  %phydrv = alloca %struct.phy_driver*, align 8
  %__mptr7 = alloca i8*, align 8
  %__mptr8 = alloca i8*, align 8
  %tmp11 = alloca %struct.mdio_driver_common*, align 8
  %tmp15 = alloca %struct.phy_driver*, align 8
  %err = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12349, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !12351, metadata !DIExpression()), !dbg !12352
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12353, metadata !DIExpression()), !dbg !12355
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !12356, metadata !DIExpression()), !dbg !12358
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12358
  %1 = bitcast %struct.device* %0 to i8*, !dbg !12358
  store i8* %1, i8** %__mptr1, align 8, !dbg !12358
  br label %do.body, !dbg !12358

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12359

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr1, align 8, !dbg !12358
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !12358
  %3 = bitcast i8* %add.ptr to %struct.mdio_device*, !dbg !12358
  store %struct.mdio_device* %3, %struct.mdio_device** %tmp, align 8, !dbg !12359
  %4 = load %struct.mdio_device*, %struct.mdio_device** %tmp, align 8, !dbg !12358
  %5 = bitcast %struct.mdio_device* %4 to i8*, !dbg !12355
  store i8* %5, i8** %__mptr, align 8, !dbg !12355
  br label %do.body2, !dbg !12355

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !12361

do.end3:                                          ; preds = %do.body2
  %6 = load i8*, i8** %__mptr, align 8, !dbg !12355
  %add.ptr5 = getelementptr i8, i8* %6, i64 0, !dbg !12355
  %7 = bitcast i8* %add.ptr5 to %struct.phy_device*, !dbg !12355
  store %struct.phy_device* %7, %struct.phy_device** %tmp4, align 8, !dbg !12361
  %8 = load %struct.phy_device*, %struct.phy_device** %tmp4, align 8, !dbg !12355
  store %struct.phy_device* %8, %struct.phy_device** %phydev, align 8, !dbg !12352
  call void @llvm.dbg.declare(metadata %struct.device_driver** %drv, metadata !12363, metadata !DIExpression()), !dbg !12364
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12365
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %9, i32 0, i32 0, !dbg !12366
  %dev6 = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 0, !dbg !12367
  %driver = getelementptr inbounds %struct.device, %struct.device* %dev6, i32 0, i32 6, !dbg !12368
  %10 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !12368
  store %struct.device_driver* %10, %struct.device_driver** %drv, align 8, !dbg !12364
  call void @llvm.dbg.declare(metadata %struct.phy_driver** %phydrv, metadata !12369, metadata !DIExpression()), !dbg !12370
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !12371, metadata !DIExpression()), !dbg !12373
  call void @llvm.dbg.declare(metadata i8** %__mptr8, metadata !12374, metadata !DIExpression()), !dbg !12376
  %11 = load %struct.device_driver*, %struct.device_driver** %drv, align 8, !dbg !12376
  %12 = bitcast %struct.device_driver* %11 to i8*, !dbg !12376
  store i8* %12, i8** %__mptr8, align 8, !dbg !12376
  br label %do.body9, !dbg !12376

do.body9:                                         ; preds = %do.end3
  br label %do.end10, !dbg !12377

do.end10:                                         ; preds = %do.body9
  %13 = load i8*, i8** %__mptr8, align 8, !dbg !12376
  %add.ptr12 = getelementptr i8, i8* %13, i64 0, !dbg !12376
  %14 = bitcast i8* %add.ptr12 to %struct.mdio_driver_common*, !dbg !12376
  store %struct.mdio_driver_common* %14, %struct.mdio_driver_common** %tmp11, align 8, !dbg !12377
  %15 = load %struct.mdio_driver_common*, %struct.mdio_driver_common** %tmp11, align 8, !dbg !12376
  %16 = bitcast %struct.mdio_driver_common* %15 to i8*, !dbg !12373
  store i8* %16, i8** %__mptr7, align 8, !dbg !12373
  br label %do.body13, !dbg !12373

do.body13:                                        ; preds = %do.end10
  br label %do.end14, !dbg !12379

do.end14:                                         ; preds = %do.body13
  %17 = load i8*, i8** %__mptr7, align 8, !dbg !12373
  %add.ptr16 = getelementptr i8, i8* %17, i64 0, !dbg !12373
  %18 = bitcast i8* %add.ptr16 to %struct.phy_driver*, !dbg !12373
  store %struct.phy_driver* %18, %struct.phy_driver** %tmp15, align 8, !dbg !12379
  %19 = load %struct.phy_driver*, %struct.phy_driver** %tmp15, align 8, !dbg !12373
  store %struct.phy_driver* %19, %struct.phy_driver** %phydrv, align 8, !dbg !12370
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12381, metadata !DIExpression()), !dbg !12382
  store i32 0, i32* %err, align 4, !dbg !12382
  %20 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !12383
  %21 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12384
  %drv17 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %21, i32 0, i32 1, !dbg !12385
  store %struct.phy_driver* %20, %struct.phy_driver** %drv17, align 8, !dbg !12386
  %22 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !12387
  %call = call zeroext i1 @phy_drv_supports_irq(%struct.phy_driver* %22) #10, !dbg !12389
  br i1 %call, label %if.end, label %land.lhs.true, !dbg !12390

land.lhs.true:                                    ; preds = %do.end14
  %23 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12391
  %call18 = call zeroext i1 @phy_interrupt_is_valid(%struct.phy_device* %23) #10, !dbg !12392
  br i1 %call18, label %if.then, label %if.end, !dbg !12393

if.then:                                          ; preds = %land.lhs.true
  %24 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12394
  %irq = getelementptr inbounds %struct.phy_device, %struct.phy_device* %24, i32 0, i32 20, !dbg !12395
  store i32 -1, i32* %irq, align 4, !dbg !12396
  br label %if.end, !dbg !12394

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end14
  %25 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !12397
  %flags = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %25, i32 0, i32 5, !dbg !12399
  %26 = load i32, i32* %flags, align 8, !dbg !12399
  %and = and i32 %26, 1, !dbg !12400
  %tobool = icmp ne i32 %and, 0, !dbg !12400
  br i1 %tobool, label %if.then19, label %if.end20, !dbg !12401

if.then19:                                        ; preds = %if.end
  %27 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12402
  %is_internal = getelementptr inbounds %struct.phy_device, %struct.phy_device* %27, i32 0, i32 4, !dbg !12403
  %bf.load = load i16, i16* %is_internal, align 4, !dbg !12404
  %bf.clear = and i16 %bf.load, -3, !dbg !12404
  %bf.set = or i16 %bf.clear, 2, !dbg !12404
  store i16 %bf.set, i16* %is_internal, align 4, !dbg !12404
  br label %if.end20, !dbg !12402

if.end20:                                         ; preds = %if.then19, %if.end
  %28 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12405
  %lock = getelementptr inbounds %struct.phy_device, %struct.phy_device* %28, i32 0, i32 27, !dbg !12406
  call void @mutex_lock(%struct.mutex* %lock) #10, !dbg !12407
  %29 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12408
  call void @phy_device_reset(%struct.phy_device* %29, i32 0) #10, !dbg !12409
  %30 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12410
  %drv21 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %30, i32 0, i32 1, !dbg !12412
  %31 = load %struct.phy_driver*, %struct.phy_driver** %drv21, align 8, !dbg !12412
  %probe = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %31, i32 0, i32 9, !dbg !12413
  %32 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %probe, align 8, !dbg !12413
  %tobool22 = icmp ne i32 (%struct.phy_device*)* %32, null, !dbg !12410
  br i1 %tobool22, label %if.then23, label %if.end30, !dbg !12414

if.then23:                                        ; preds = %if.end20
  %33 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12415
  %drv24 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %33, i32 0, i32 1, !dbg !12417
  %34 = load %struct.phy_driver*, %struct.phy_driver** %drv24, align 8, !dbg !12417
  %probe25 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %34, i32 0, i32 9, !dbg !12418
  %35 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %probe25, align 8, !dbg !12418
  %36 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12419
  %call26 = call i32 %35(%struct.phy_device* %36) #10, !dbg !12415
  store i32 %call26, i32* %err, align 4, !dbg !12420
  %37 = load i32, i32* %err, align 4, !dbg !12421
  %tobool27 = icmp ne i32 %37, 0, !dbg !12421
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !12423

if.then28:                                        ; preds = %if.then23
  br label %out, !dbg !12424

if.end29:                                         ; preds = %if.then23
  br label %if.end30, !dbg !12425

if.end30:                                         ; preds = %if.end29, %if.end20
  %38 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !12426
  %features = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %38, i32 0, i32 4, !dbg !12428
  %39 = load i64*, i64** %features, align 8, !dbg !12428
  %tobool31 = icmp ne i64* %39, null, !dbg !12426
  br i1 %tobool31, label %if.then32, label %if.else, !dbg !12429

if.then32:                                        ; preds = %if.end30
  %40 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12430
  %supported = getelementptr inbounds %struct.phy_device, %struct.phy_device* %40, i32 0, i32 15, !dbg !12432
  %arraydecay = getelementptr inbounds [2 x i64], [2 x i64]* %supported, i64 0, i64 0, !dbg !12430
  %41 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !12433
  %features33 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %41, i32 0, i32 4, !dbg !12434
  %42 = load i64*, i64** %features33, align 8, !dbg !12434
  call void @linkmode_copy(i64* %arraydecay, i64* %42) #10, !dbg !12435
  br label %if.end48, !dbg !12436

if.else:                                          ; preds = %if.end30
  %43 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !12437
  %get_features = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %43, i32 0, i32 10, !dbg !12439
  %44 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %get_features, align 8, !dbg !12439
  %tobool34 = icmp ne i32 (%struct.phy_device*)* %44, null, !dbg !12437
  br i1 %tobool34, label %if.then35, label %if.else38, !dbg !12440

if.then35:                                        ; preds = %if.else
  %45 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !12441
  %get_features36 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %45, i32 0, i32 10, !dbg !12443
  %46 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %get_features36, align 8, !dbg !12443
  %47 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12444
  %call37 = call i32 %46(%struct.phy_device* %47) #10, !dbg !12441
  store i32 %call37, i32* %err, align 4, !dbg !12445
  br label %if.end47, !dbg !12446

if.else38:                                        ; preds = %if.else
  %48 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12447
  %is_c45 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %48, i32 0, i32 4, !dbg !12449
  %bf.load39 = load i16, i16* %is_c45, align 4, !dbg !12449
  %bf.clear40 = and i16 %bf.load39, 1, !dbg !12449
  %bf.cast = zext i16 %bf.clear40 to i32, !dbg !12449
  %tobool41 = icmp ne i32 %bf.cast, 0, !dbg !12447
  br i1 %tobool41, label %if.then42, label %if.else44, !dbg !12450

if.then42:                                        ; preds = %if.else38
  %49 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12451
  %call43 = call i32 @genphy_c45_pma_read_abilities(%struct.phy_device* %49) #10, !dbg !12453
  store i32 %call43, i32* %err, align 4, !dbg !12454
  br label %if.end46, !dbg !12455

if.else44:                                        ; preds = %if.else38
  %50 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12456
  %call45 = call i32 @genphy_read_abilities(%struct.phy_device* %50) #10, !dbg !12458
  store i32 %call45, i32* %err, align 4, !dbg !12459
  br label %if.end46

if.end46:                                         ; preds = %if.else44, %if.then42
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then35
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then32
  %51 = load i32, i32* %err, align 4, !dbg !12460
  %tobool49 = icmp ne i32 %51, 0, !dbg !12460
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !12462

if.then50:                                        ; preds = %if.end48
  br label %out, !dbg !12463

if.end51:                                         ; preds = %if.end48
  %52 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12464
  %supported52 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %52, i32 0, i32 15, !dbg !12466
  %arraydecay53 = getelementptr inbounds [2 x i64], [2 x i64]* %supported52, i64 0, i64 0, !dbg !12464
  %call54 = call i32 @linkmode_test_bit(i32 6, i64* %arraydecay53) #10, !dbg !12467
  %tobool55 = icmp ne i32 %call54, 0, !dbg !12467
  br i1 %tobool55, label %if.end59, label %if.then56, !dbg !12468

if.then56:                                        ; preds = %if.end51
  %53 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12469
  %autoneg = getelementptr inbounds %struct.phy_device, %struct.phy_device* %53, i32 0, i32 4, !dbg !12470
  %bf.load57 = load i16, i16* %autoneg, align 4, !dbg !12471
  %bf.clear58 = and i16 %bf.load57, -1025, !dbg !12471
  store i16 %bf.clear58, i16* %autoneg, align 4, !dbg !12471
  br label %if.end59, !dbg !12469

if.end59:                                         ; preds = %if.then56, %if.end51
  %54 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12472
  %supported60 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %54, i32 0, i32 15, !dbg !12474
  %arraydecay61 = getelementptr inbounds [2 x i64], [2 x i64]* %supported60, i64 0, i64 0, !dbg !12472
  %call62 = call i32 @linkmode_test_bit(i32 4, i64* %arraydecay61) #10, !dbg !12475
  %tobool63 = icmp ne i32 %call62, 0, !dbg !12475
  br i1 %tobool63, label %if.then64, label %if.end68, !dbg !12476

if.then64:                                        ; preds = %if.end59
  %55 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12477
  %is_gigabit_capable = getelementptr inbounds %struct.phy_device, %struct.phy_device* %55, i32 0, i32 4, !dbg !12478
  %bf.load65 = load i16, i16* %is_gigabit_capable, align 4, !dbg !12479
  %bf.clear66 = and i16 %bf.load65, -9, !dbg !12479
  %bf.set67 = or i16 %bf.clear66, 8, !dbg !12479
  store i16 %bf.set67, i16* %is_gigabit_capable, align 4, !dbg !12479
  br label %if.end68, !dbg !12477

if.end68:                                         ; preds = %if.then64, %if.end59
  %56 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12480
  %supported69 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %56, i32 0, i32 15, !dbg !12482
  %arraydecay70 = getelementptr inbounds [2 x i64], [2 x i64]* %supported69, i64 0, i64 0, !dbg !12480
  %call71 = call i32 @linkmode_test_bit(i32 5, i64* %arraydecay70) #10, !dbg !12483
  %tobool72 = icmp ne i32 %call71, 0, !dbg !12483
  br i1 %tobool72, label %if.then73, label %if.end78, !dbg !12484

if.then73:                                        ; preds = %if.end68
  %57 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12485
  %is_gigabit_capable74 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %57, i32 0, i32 4, !dbg !12486
  %bf.load75 = load i16, i16* %is_gigabit_capable74, align 4, !dbg !12487
  %bf.clear76 = and i16 %bf.load75, -9, !dbg !12487
  %bf.set77 = or i16 %bf.clear76, 8, !dbg !12487
  store i16 %bf.set77, i16* %is_gigabit_capable74, align 4, !dbg !12487
  br label %if.end78, !dbg !12485

if.end78:                                         ; preds = %if.then73, %if.end68
  %58 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12488
  call void @of_set_phy_supported(%struct.phy_device* %58) #10, !dbg !12489
  %59 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12490
  call void @phy_advertise_supported(%struct.phy_device* %59) #10, !dbg !12491
  %60 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12492
  call void @of_set_phy_eee_broken(%struct.phy_device* %60) #10, !dbg !12493
  %61 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12494
  %supported79 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %61, i32 0, i32 15, !dbg !12496
  %arraydecay80 = getelementptr inbounds [2 x i64], [2 x i64]* %supported79, i64 0, i64 0, !dbg !12494
  %call81 = call zeroext i1 @test_bit(i64 13, i64* %arraydecay80) #10, !dbg !12497
  br i1 %call81, label %if.end91, label %land.lhs.true82, !dbg !12498

land.lhs.true82:                                  ; preds = %if.end78
  %62 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12499
  %supported83 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %62, i32 0, i32 15, !dbg !12500
  %arraydecay84 = getelementptr inbounds [2 x i64], [2 x i64]* %supported83, i64 0, i64 0, !dbg !12499
  %call85 = call zeroext i1 @test_bit(i64 14, i64* %arraydecay84) #10, !dbg !12501
  br i1 %call85, label %if.end91, label %if.then86, !dbg !12502

if.then86:                                        ; preds = %land.lhs.true82
  %63 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12503
  %supported87 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %63, i32 0, i32 15, !dbg !12505
  %arraydecay88 = getelementptr inbounds [2 x i64], [2 x i64]* %supported87, i64 0, i64 0, !dbg !12503
  call void @linkmode_set_bit(i32 13, i64* %arraydecay88) #10, !dbg !12506
  %64 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12507
  %supported89 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %64, i32 0, i32 15, !dbg !12508
  %arraydecay90 = getelementptr inbounds [2 x i64], [2 x i64]* %supported89, i64 0, i64 0, !dbg !12507
  call void @linkmode_set_bit(i32 14, i64* %arraydecay90) #10, !dbg !12509
  br label %if.end91, !dbg !12510

if.end91:                                         ; preds = %if.then86, %land.lhs.true82, %if.end78
  %65 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12511
  %state = getelementptr inbounds %struct.phy_device, %struct.phy_device* %65, i32 0, i32 5, !dbg !12512
  store i32 1, i32* %state, align 8, !dbg !12513
  br label %out, !dbg !12511

out:                                              ; preds = %if.end91, %if.then50, %if.then28
  call void @llvm.dbg.label(metadata !12514), !dbg !12515
  %66 = load i32, i32* %err, align 4, !dbg !12516
  %tobool92 = icmp ne i32 %66, 0, !dbg !12516
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !12518

if.then93:                                        ; preds = %out
  %67 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12519
  call void @phy_device_reset(%struct.phy_device* %67, i32 1) #10, !dbg !12520
  br label %if.end94, !dbg !12520

if.end94:                                         ; preds = %if.then93, %out
  %68 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12521
  %lock95 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %68, i32 0, i32 27, !dbg !12522
  call void @mutex_unlock(%struct.mutex* %lock95) #10, !dbg !12523
  %69 = load i32, i32* %err, align 4, !dbg !12524
  ret i32 %69, !dbg !12525
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_remove(%struct.device* %dev) #0 !dbg !12526 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.mdio_device*, align 8
  %tmp4 = alloca %struct.phy_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12527, metadata !DIExpression()), !dbg !12528
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !12529, metadata !DIExpression()), !dbg !12530
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12531, metadata !DIExpression()), !dbg !12533
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !12534, metadata !DIExpression()), !dbg !12536
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12536
  %1 = bitcast %struct.device* %0 to i8*, !dbg !12536
  store i8* %1, i8** %__mptr1, align 8, !dbg !12536
  br label %do.body, !dbg !12536

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12537

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr1, align 8, !dbg !12536
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !12536
  %3 = bitcast i8* %add.ptr to %struct.mdio_device*, !dbg !12536
  store %struct.mdio_device* %3, %struct.mdio_device** %tmp, align 8, !dbg !12537
  %4 = load %struct.mdio_device*, %struct.mdio_device** %tmp, align 8, !dbg !12536
  %5 = bitcast %struct.mdio_device* %4 to i8*, !dbg !12533
  store i8* %5, i8** %__mptr, align 8, !dbg !12533
  br label %do.body2, !dbg !12533

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !12539

do.end3:                                          ; preds = %do.body2
  %6 = load i8*, i8** %__mptr, align 8, !dbg !12533
  %add.ptr5 = getelementptr i8, i8* %6, i64 0, !dbg !12533
  %7 = bitcast i8* %add.ptr5 to %struct.phy_device*, !dbg !12533
  store %struct.phy_device* %7, %struct.phy_device** %tmp4, align 8, !dbg !12539
  %8 = load %struct.phy_device*, %struct.phy_device** %tmp4, align 8, !dbg !12533
  store %struct.phy_device* %8, %struct.phy_device** %phydev, align 8, !dbg !12530
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12541
  %state_queue = getelementptr inbounds %struct.phy_device, %struct.phy_device* %9, i32 0, i32 26, !dbg !12542
  %call = call zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work* %state_queue) #10, !dbg !12543
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12544
  %lock = getelementptr inbounds %struct.phy_device, %struct.phy_device* %10, i32 0, i32 27, !dbg !12545
  call void @mutex_lock(%struct.mutex* %lock) #10, !dbg !12546
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12547
  %state = getelementptr inbounds %struct.phy_device, %struct.phy_device* %11, i32 0, i32 5, !dbg !12548
  store i32 0, i32* %state, align 8, !dbg !12549
  %12 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12550
  %lock6 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %12, i32 0, i32 27, !dbg !12551
  call void @mutex_unlock(%struct.mutex* %lock6) #10, !dbg !12552
  %13 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12553
  %sfp_bus = getelementptr inbounds %struct.phy_device, %struct.phy_device* %13, i32 0, i32 29, !dbg !12554
  %14 = load %struct.sfp_bus*, %struct.sfp_bus** %sfp_bus, align 8, !dbg !12554
  call void @sfp_bus_del_upstream(%struct.sfp_bus* %14) #10, !dbg !12555
  %15 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12556
  %sfp_bus7 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %15, i32 0, i32 29, !dbg !12557
  store %struct.sfp_bus* null, %struct.sfp_bus** %sfp_bus7, align 8, !dbg !12558
  %16 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12559
  %drv = getelementptr inbounds %struct.phy_device, %struct.phy_device* %16, i32 0, i32 1, !dbg !12561
  %17 = load %struct.phy_driver*, %struct.phy_driver** %drv, align 8, !dbg !12561
  %tobool = icmp ne %struct.phy_driver* %17, null, !dbg !12559
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !12562

land.lhs.true:                                    ; preds = %do.end3
  %18 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12563
  %drv8 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %18, i32 0, i32 1, !dbg !12564
  %19 = load %struct.phy_driver*, %struct.phy_driver** %drv8, align 8, !dbg !12564
  %remove = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %19, i32 0, i32 20, !dbg !12565
  %remove9 = bitcast {}** %remove to void (%struct.phy_device*)**, !dbg !12565
  %20 = load void (%struct.phy_device*)*, void (%struct.phy_device*)** %remove9, align 8, !dbg !12565
  %tobool10 = icmp ne void (%struct.phy_device*)* %20, null, !dbg !12563
  br i1 %tobool10, label %if.then, label %if.end, !dbg !12566

if.then:                                          ; preds = %land.lhs.true
  %21 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12567
  %drv11 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %21, i32 0, i32 1, !dbg !12568
  %22 = load %struct.phy_driver*, %struct.phy_driver** %drv11, align 8, !dbg !12568
  %remove12 = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %22, i32 0, i32 20, !dbg !12569
  %remove13 = bitcast {}** %remove12 to void (%struct.phy_device*)**, !dbg !12569
  %23 = load void (%struct.phy_device*)*, void (%struct.phy_device*)** %remove13, align 8, !dbg !12569
  %24 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12570
  call void %23(%struct.phy_device* %24) #10, !dbg !12567
  br label %if.end, !dbg !12567

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end3
  %25 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12571
  call void @phy_device_reset(%struct.phy_device* %25, i32 1) #10, !dbg !12572
  %26 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12573
  %drv14 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %26, i32 0, i32 1, !dbg !12574
  store %struct.phy_driver* null, %struct.phy_driver** %drv14, align 8, !dbg !12575
  ret i32 0, !dbg !12576
}

; Function Attrs: noredzone
declare dso_local i32 @driver_register(%struct.device_driver*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @phy_drivers_register(%struct.phy_driver* %new_driver, i32 %n, %struct.module* %owner) #0 !dbg !12577 {
entry:
  %new_driver.addr = alloca %struct.phy_driver*, align 8
  %n.addr = alloca i32, align 4
  %owner.addr = alloca %struct.module*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.phy_driver* %new_driver, %struct.phy_driver** %new_driver.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_driver** %new_driver.addr, metadata !12580, metadata !DIExpression()), !dbg !12581
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !12582, metadata !DIExpression()), !dbg !12583
  store %struct.module* %owner, %struct.module** %owner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %owner.addr, metadata !12584, metadata !DIExpression()), !dbg !12585
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12586, metadata !DIExpression()), !dbg !12587
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12588, metadata !DIExpression()), !dbg !12589
  store i32 0, i32* %ret, align 4, !dbg !12589
  store i32 0, i32* %i, align 4, !dbg !12590
  br label %for.cond, !dbg !12592

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12593
  %1 = load i32, i32* %n.addr, align 4, !dbg !12595
  %cmp = icmp slt i32 %0, %1, !dbg !12596
  br i1 %cmp, label %for.body, label %for.end, !dbg !12597

for.body:                                         ; preds = %for.cond
  %2 = load %struct.phy_driver*, %struct.phy_driver** %new_driver.addr, align 8, !dbg !12598
  %3 = load i32, i32* %i, align 4, !dbg !12600
  %idx.ext = sext i32 %3 to i64, !dbg !12601
  %add.ptr = getelementptr %struct.phy_driver, %struct.phy_driver* %2, i64 %idx.ext, !dbg !12601
  %4 = load %struct.module*, %struct.module** %owner.addr, align 8, !dbg !12602
  %call = call i32 @phy_driver_register(%struct.phy_driver* %add.ptr, %struct.module* %4) #10, !dbg !12603
  store i32 %call, i32* %ret, align 4, !dbg !12604
  %5 = load i32, i32* %ret, align 4, !dbg !12605
  %tobool = icmp ne i32 %5, 0, !dbg !12605
  br i1 %tobool, label %if.then, label %if.end, !dbg !12607

if.then:                                          ; preds = %for.body
  br label %while.cond, !dbg !12608

while.cond:                                       ; preds = %while.body, %if.then
  %6 = load i32, i32* %i, align 4, !dbg !12610
  %dec = add i32 %6, -1, !dbg !12610
  store i32 %dec, i32* %i, align 4, !dbg !12610
  %cmp1 = icmp sgt i32 %6, 0, !dbg !12611
  br i1 %cmp1, label %while.body, label %while.end, !dbg !12608

while.body:                                       ; preds = %while.cond
  %7 = load %struct.phy_driver*, %struct.phy_driver** %new_driver.addr, align 8, !dbg !12612
  %8 = load i32, i32* %i, align 4, !dbg !12613
  %idx.ext2 = sext i32 %8 to i64, !dbg !12614
  %add.ptr3 = getelementptr %struct.phy_driver, %struct.phy_driver* %7, i64 %idx.ext2, !dbg !12614
  call void @phy_driver_unregister(%struct.phy_driver* %add.ptr3) #10, !dbg !12615
  br label %while.cond, !dbg !12608, !llvm.loop !12616

while.end:                                        ; preds = %while.cond
  br label %for.end, !dbg !12618

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !12619

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !12620
  %inc = add i32 %9, 1, !dbg !12620
  store i32 %inc, i32* %i, align 4, !dbg !12620
  br label %for.cond, !dbg !12621, !llvm.loop !12622

for.end:                                          ; preds = %while.end, %for.cond
  %10 = load i32, i32* %ret, align 4, !dbg !12624
  ret i32 %10, !dbg !12625
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_driver_unregister(%struct.phy_driver* %drv) #0 !dbg !12626 {
entry:
  %drv.addr = alloca %struct.phy_driver*, align 8
  store %struct.phy_driver* %drv, %struct.phy_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_driver** %drv.addr, metadata !12629, metadata !DIExpression()), !dbg !12630
  %0 = load %struct.phy_driver*, %struct.phy_driver** %drv.addr, align 8, !dbg !12631
  %mdiodrv = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %0, i32 0, i32 0, !dbg !12632
  %driver = getelementptr inbounds %struct.mdio_driver_common, %struct.mdio_driver_common* %mdiodrv, i32 0, i32 0, !dbg !12633
  call void @driver_unregister(%struct.device_driver* %driver) #10, !dbg !12634
  ret void, !dbg !12635
}

; Function Attrs: noredzone
declare dso_local void @driver_unregister(%struct.device_driver*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @phy_drivers_unregister(%struct.phy_driver* %drv, i32 %n) #0 !dbg !12636 {
entry:
  %drv.addr = alloca %struct.phy_driver*, align 8
  %n.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.phy_driver* %drv, %struct.phy_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_driver** %drv.addr, metadata !12639, metadata !DIExpression()), !dbg !12640
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !12641, metadata !DIExpression()), !dbg !12642
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12643, metadata !DIExpression()), !dbg !12644
  store i32 0, i32* %i, align 4, !dbg !12645
  br label %for.cond, !dbg !12647

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12648
  %1 = load i32, i32* %n.addr, align 4, !dbg !12650
  %cmp = icmp slt i32 %0, %1, !dbg !12651
  br i1 %cmp, label %for.body, label %for.end, !dbg !12652

for.body:                                         ; preds = %for.cond
  %2 = load %struct.phy_driver*, %struct.phy_driver** %drv.addr, align 8, !dbg !12653
  %3 = load i32, i32* %i, align 4, !dbg !12654
  %idx.ext = sext i32 %3 to i64, !dbg !12655
  %add.ptr = getelementptr %struct.phy_driver, %struct.phy_driver* %2, i64 %idx.ext, !dbg !12655
  call void @phy_driver_unregister(%struct.phy_driver* %add.ptr) #10, !dbg !12656
  br label %for.inc, !dbg !12656

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !12657
  %inc = add i32 %4, 1, !dbg !12657
  store i32 %inc, i32* %i, align 4, !dbg !12657
  br label %for.cond, !dbg !12658, !llvm.loop !12659

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12661
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @phy_exit() #6 section ".exit.text" !dbg !12662 {
entry:
  call void @phy_driver_unregister(%struct.phy_driver* @genphy_c45_driver) #10, !dbg !12663
  call void @phy_driver_unregister(%struct.phy_driver* bitcast ({ %struct.mdio_driver_common, i32, i8*, i32, i64*, i32, i8*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*, i32, i16)*, i32 (%struct.phy_device*, i32, i16, i16)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, i32)*, i32 (%struct.phy_device*, %struct.ethtool_modinfo*)*, i32 (%struct.phy_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.phy_tdr_config*)*, i32 (%struct.phy_device*, i8*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*, i8*)*, void (%struct.phy_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, i1)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)* }* @genphy_driver to %struct.phy_driver*)) #10, !dbg !12664
  call void @mdio_bus_exit() #10, !dbg !12665
  call void @ethtool_set_ethtool_phy_ops(%struct.ethtool_phy_ops* null) #10, !dbg !12666
  ret void, !dbg !12667
}

; Function Attrs: noredzone
declare dso_local void @mdio_bus_exit() #2

; Function Attrs: noredzone
declare dso_local void @ethtool_set_ethtool_phy_ops(%struct.ethtool_phy_ops*) #2

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_init() #6 section ".init.text" !dbg !12668 {
entry:
  %retval = alloca i32, align 4
  %rc = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !12671, metadata !DIExpression()), !dbg !12672
  %call = call i32 @mdio_bus_init() #13, !dbg !12673
  store i32 %call, i32* %rc, align 4, !dbg !12674
  %0 = load i32, i32* %rc, align 4, !dbg !12675
  %tobool = icmp ne i32 %0, 0, !dbg !12675
  br i1 %tobool, label %if.then, label %if.end, !dbg !12677

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %rc, align 4, !dbg !12678
  store i32 %1, i32* %retval, align 4, !dbg !12679
  br label %return, !dbg !12679

if.end:                                           ; preds = %entry
  call void @ethtool_set_ethtool_phy_ops(%struct.ethtool_phy_ops* @phy_ethtool_phy_ops) #10, !dbg !12680
  call void @features_init() #10, !dbg !12681
  %call1 = call i32 @phy_driver_register(%struct.phy_driver* @genphy_c45_driver, %struct.module* null) #10, !dbg !12682
  store i32 %call1, i32* %rc, align 4, !dbg !12683
  %2 = load i32, i32* %rc, align 4, !dbg !12684
  %tobool2 = icmp ne i32 %2, 0, !dbg !12684
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !12686

if.then3:                                         ; preds = %if.end
  br label %err_c45, !dbg !12687

if.end4:                                          ; preds = %if.end
  %call5 = call i32 @phy_driver_register(%struct.phy_driver* bitcast ({ %struct.mdio_driver_common, i32, i8*, i32, i64*, i32, i8*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*, %struct.ethtool_wolinfo*)*, void (%struct.phy_device*)*, i32 (%struct.phy_device*, i32, i16)*, i32 (%struct.phy_device*, i32, i16, i16)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, i32)*, i32 (%struct.phy_device*, %struct.ethtool_modinfo*)*, i32 (%struct.phy_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*, %struct.phy_tdr_config*)*, i32 (%struct.phy_device*, i8*)*, i32 (%struct.phy_device*)*, void (%struct.phy_device*, i8*)*, void (%struct.phy_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.phy_device*, i1)*, i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)* }* @genphy_driver to %struct.phy_driver*), %struct.module* null) #10, !dbg !12688
  store i32 %call5, i32* %rc, align 4, !dbg !12689
  %3 = load i32, i32* %rc, align 4, !dbg !12690
  %tobool6 = icmp ne i32 %3, 0, !dbg !12690
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !12692

if.then7:                                         ; preds = %if.end4
  call void @phy_driver_unregister(%struct.phy_driver* @genphy_c45_driver) #10, !dbg !12693
  br label %err_c45, !dbg !12693

err_c45:                                          ; preds = %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !12695), !dbg !12696
  call void @mdio_bus_exit() #10, !dbg !12697
  br label %if.end8, !dbg !12698

if.end8:                                          ; preds = %err_c45, %if.end4
  %4 = load i32, i32* %rc, align 4, !dbg !12699
  store i32 %4, i32* %retval, align 4, !dbg !12700
  br label %return, !dbg !12700

return:                                           ; preds = %if.end8, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !12701
  ret i32 %5, !dbg !12701
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #7

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #8

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #9 !dbg !12702 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !12706, metadata !DIExpression()), !dbg !12711
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !12713, metadata !DIExpression()), !dbg !12714
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12715, metadata !DIExpression()), !dbg !12716
  %0 = load i64, i64* %size.addr, align 8, !dbg !12717
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !12719
  br i1 %1, label %if.then, label %if.end447, !dbg !12720

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !12721
  %tobool = icmp ne i64 %2, 0, !dbg !12721
  br i1 %tobool, label %if.end, label %if.then1, !dbg !12724

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !12725
  br label %return, !dbg !12725

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !12726
  %cmp = icmp ult i64 %3, 4096, !dbg !12728
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12729

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12730
  br label %return, !dbg !12730

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub = sub i64 %4, 1, !dbg !12731
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !12731
  br i1 %5, label %cond.true, label %cond.false442, !dbg !12731

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub4 = sub i64 %6, 1, !dbg !12731
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !12731
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !12731

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub6 = sub i64 %8, 1, !dbg !12731
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !12731
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !12731

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !12731

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub9 = sub i64 %9, 1, !dbg !12731
  %and = and i64 %sub9, -9223372036854775808, !dbg !12731
  %tobool10 = icmp ne i64 %and, 0, !dbg !12731
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !12731

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !12731

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub13 = sub i64 %10, 1, !dbg !12731
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !12731
  %tobool15 = icmp ne i64 %and14, 0, !dbg !12731
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !12731

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !12731

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub18 = sub i64 %11, 1, !dbg !12731
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !12731
  %tobool20 = icmp ne i64 %and19, 0, !dbg !12731
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !12731

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !12731

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub23 = sub i64 %12, 1, !dbg !12731
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !12731
  %tobool25 = icmp ne i64 %and24, 0, !dbg !12731
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !12731

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !12731

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub28 = sub i64 %13, 1, !dbg !12731
  %and29 = and i64 %sub28, 576460752303423488, !dbg !12731
  %tobool30 = icmp ne i64 %and29, 0, !dbg !12731
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !12731

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !12731

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub33 = sub i64 %14, 1, !dbg !12731
  %and34 = and i64 %sub33, 288230376151711744, !dbg !12731
  %tobool35 = icmp ne i64 %and34, 0, !dbg !12731
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !12731

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !12731

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub38 = sub i64 %15, 1, !dbg !12731
  %and39 = and i64 %sub38, 144115188075855872, !dbg !12731
  %tobool40 = icmp ne i64 %and39, 0, !dbg !12731
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !12731

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !12731

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub43 = sub i64 %16, 1, !dbg !12731
  %and44 = and i64 %sub43, 72057594037927936, !dbg !12731
  %tobool45 = icmp ne i64 %and44, 0, !dbg !12731
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !12731

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !12731

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub48 = sub i64 %17, 1, !dbg !12731
  %and49 = and i64 %sub48, 36028797018963968, !dbg !12731
  %tobool50 = icmp ne i64 %and49, 0, !dbg !12731
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !12731

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !12731

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub53 = sub i64 %18, 1, !dbg !12731
  %and54 = and i64 %sub53, 18014398509481984, !dbg !12731
  %tobool55 = icmp ne i64 %and54, 0, !dbg !12731
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !12731

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !12731

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub58 = sub i64 %19, 1, !dbg !12731
  %and59 = and i64 %sub58, 9007199254740992, !dbg !12731
  %tobool60 = icmp ne i64 %and59, 0, !dbg !12731
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !12731

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !12731

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub63 = sub i64 %20, 1, !dbg !12731
  %and64 = and i64 %sub63, 4503599627370496, !dbg !12731
  %tobool65 = icmp ne i64 %and64, 0, !dbg !12731
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !12731

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !12731

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub68 = sub i64 %21, 1, !dbg !12731
  %and69 = and i64 %sub68, 2251799813685248, !dbg !12731
  %tobool70 = icmp ne i64 %and69, 0, !dbg !12731
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !12731

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !12731

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub73 = sub i64 %22, 1, !dbg !12731
  %and74 = and i64 %sub73, 1125899906842624, !dbg !12731
  %tobool75 = icmp ne i64 %and74, 0, !dbg !12731
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !12731

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !12731

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub78 = sub i64 %23, 1, !dbg !12731
  %and79 = and i64 %sub78, 562949953421312, !dbg !12731
  %tobool80 = icmp ne i64 %and79, 0, !dbg !12731
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !12731

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !12731

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub83 = sub i64 %24, 1, !dbg !12731
  %and84 = and i64 %sub83, 281474976710656, !dbg !12731
  %tobool85 = icmp ne i64 %and84, 0, !dbg !12731
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !12731

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !12731

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub88 = sub i64 %25, 1, !dbg !12731
  %and89 = and i64 %sub88, 140737488355328, !dbg !12731
  %tobool90 = icmp ne i64 %and89, 0, !dbg !12731
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !12731

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !12731

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub93 = sub i64 %26, 1, !dbg !12731
  %and94 = and i64 %sub93, 70368744177664, !dbg !12731
  %tobool95 = icmp ne i64 %and94, 0, !dbg !12731
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !12731

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !12731

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub98 = sub i64 %27, 1, !dbg !12731
  %and99 = and i64 %sub98, 35184372088832, !dbg !12731
  %tobool100 = icmp ne i64 %and99, 0, !dbg !12731
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !12731

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !12731

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub103 = sub i64 %28, 1, !dbg !12731
  %and104 = and i64 %sub103, 17592186044416, !dbg !12731
  %tobool105 = icmp ne i64 %and104, 0, !dbg !12731
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !12731

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !12731

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub108 = sub i64 %29, 1, !dbg !12731
  %and109 = and i64 %sub108, 8796093022208, !dbg !12731
  %tobool110 = icmp ne i64 %and109, 0, !dbg !12731
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !12731

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !12731

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub113 = sub i64 %30, 1, !dbg !12731
  %and114 = and i64 %sub113, 4398046511104, !dbg !12731
  %tobool115 = icmp ne i64 %and114, 0, !dbg !12731
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !12731

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !12731

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub118 = sub i64 %31, 1, !dbg !12731
  %and119 = and i64 %sub118, 2199023255552, !dbg !12731
  %tobool120 = icmp ne i64 %and119, 0, !dbg !12731
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !12731

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !12731

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub123 = sub i64 %32, 1, !dbg !12731
  %and124 = and i64 %sub123, 1099511627776, !dbg !12731
  %tobool125 = icmp ne i64 %and124, 0, !dbg !12731
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !12731

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !12731

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub128 = sub i64 %33, 1, !dbg !12731
  %and129 = and i64 %sub128, 549755813888, !dbg !12731
  %tobool130 = icmp ne i64 %and129, 0, !dbg !12731
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !12731

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !12731

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub133 = sub i64 %34, 1, !dbg !12731
  %and134 = and i64 %sub133, 274877906944, !dbg !12731
  %tobool135 = icmp ne i64 %and134, 0, !dbg !12731
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !12731

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !12731

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub138 = sub i64 %35, 1, !dbg !12731
  %and139 = and i64 %sub138, 137438953472, !dbg !12731
  %tobool140 = icmp ne i64 %and139, 0, !dbg !12731
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !12731

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !12731

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub143 = sub i64 %36, 1, !dbg !12731
  %and144 = and i64 %sub143, 68719476736, !dbg !12731
  %tobool145 = icmp ne i64 %and144, 0, !dbg !12731
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !12731

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !12731

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub148 = sub i64 %37, 1, !dbg !12731
  %and149 = and i64 %sub148, 34359738368, !dbg !12731
  %tobool150 = icmp ne i64 %and149, 0, !dbg !12731
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !12731

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !12731

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub153 = sub i64 %38, 1, !dbg !12731
  %and154 = and i64 %sub153, 17179869184, !dbg !12731
  %tobool155 = icmp ne i64 %and154, 0, !dbg !12731
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !12731

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !12731

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub158 = sub i64 %39, 1, !dbg !12731
  %and159 = and i64 %sub158, 8589934592, !dbg !12731
  %tobool160 = icmp ne i64 %and159, 0, !dbg !12731
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !12731

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !12731

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub163 = sub i64 %40, 1, !dbg !12731
  %and164 = and i64 %sub163, 4294967296, !dbg !12731
  %tobool165 = icmp ne i64 %and164, 0, !dbg !12731
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !12731

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !12731

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub168 = sub i64 %41, 1, !dbg !12731
  %and169 = and i64 %sub168, 2147483648, !dbg !12731
  %tobool170 = icmp ne i64 %and169, 0, !dbg !12731
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !12731

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !12731

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub173 = sub i64 %42, 1, !dbg !12731
  %and174 = and i64 %sub173, 1073741824, !dbg !12731
  %tobool175 = icmp ne i64 %and174, 0, !dbg !12731
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !12731

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !12731

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub178 = sub i64 %43, 1, !dbg !12731
  %and179 = and i64 %sub178, 536870912, !dbg !12731
  %tobool180 = icmp ne i64 %and179, 0, !dbg !12731
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !12731

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !12731

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub183 = sub i64 %44, 1, !dbg !12731
  %and184 = and i64 %sub183, 268435456, !dbg !12731
  %tobool185 = icmp ne i64 %and184, 0, !dbg !12731
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !12731

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !12731

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub188 = sub i64 %45, 1, !dbg !12731
  %and189 = and i64 %sub188, 134217728, !dbg !12731
  %tobool190 = icmp ne i64 %and189, 0, !dbg !12731
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !12731

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !12731

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub193 = sub i64 %46, 1, !dbg !12731
  %and194 = and i64 %sub193, 67108864, !dbg !12731
  %tobool195 = icmp ne i64 %and194, 0, !dbg !12731
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !12731

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !12731

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub198 = sub i64 %47, 1, !dbg !12731
  %and199 = and i64 %sub198, 33554432, !dbg !12731
  %tobool200 = icmp ne i64 %and199, 0, !dbg !12731
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !12731

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !12731

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub203 = sub i64 %48, 1, !dbg !12731
  %and204 = and i64 %sub203, 16777216, !dbg !12731
  %tobool205 = icmp ne i64 %and204, 0, !dbg !12731
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !12731

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !12731

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub208 = sub i64 %49, 1, !dbg !12731
  %and209 = and i64 %sub208, 8388608, !dbg !12731
  %tobool210 = icmp ne i64 %and209, 0, !dbg !12731
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !12731

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !12731

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub213 = sub i64 %50, 1, !dbg !12731
  %and214 = and i64 %sub213, 4194304, !dbg !12731
  %tobool215 = icmp ne i64 %and214, 0, !dbg !12731
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !12731

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !12731

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub218 = sub i64 %51, 1, !dbg !12731
  %and219 = and i64 %sub218, 2097152, !dbg !12731
  %tobool220 = icmp ne i64 %and219, 0, !dbg !12731
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !12731

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !12731

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub223 = sub i64 %52, 1, !dbg !12731
  %and224 = and i64 %sub223, 1048576, !dbg !12731
  %tobool225 = icmp ne i64 %and224, 0, !dbg !12731
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !12731

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !12731

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub228 = sub i64 %53, 1, !dbg !12731
  %and229 = and i64 %sub228, 524288, !dbg !12731
  %tobool230 = icmp ne i64 %and229, 0, !dbg !12731
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !12731

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !12731

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub233 = sub i64 %54, 1, !dbg !12731
  %and234 = and i64 %sub233, 262144, !dbg !12731
  %tobool235 = icmp ne i64 %and234, 0, !dbg !12731
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !12731

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !12731

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub238 = sub i64 %55, 1, !dbg !12731
  %and239 = and i64 %sub238, 131072, !dbg !12731
  %tobool240 = icmp ne i64 %and239, 0, !dbg !12731
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !12731

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !12731

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub243 = sub i64 %56, 1, !dbg !12731
  %and244 = and i64 %sub243, 65536, !dbg !12731
  %tobool245 = icmp ne i64 %and244, 0, !dbg !12731
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !12731

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !12731

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub248 = sub i64 %57, 1, !dbg !12731
  %and249 = and i64 %sub248, 32768, !dbg !12731
  %tobool250 = icmp ne i64 %and249, 0, !dbg !12731
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !12731

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !12731

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub253 = sub i64 %58, 1, !dbg !12731
  %and254 = and i64 %sub253, 16384, !dbg !12731
  %tobool255 = icmp ne i64 %and254, 0, !dbg !12731
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !12731

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !12731

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub258 = sub i64 %59, 1, !dbg !12731
  %and259 = and i64 %sub258, 8192, !dbg !12731
  %tobool260 = icmp ne i64 %and259, 0, !dbg !12731
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !12731

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !12731

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub263 = sub i64 %60, 1, !dbg !12731
  %and264 = and i64 %sub263, 4096, !dbg !12731
  %tobool265 = icmp ne i64 %and264, 0, !dbg !12731
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !12731

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !12731

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub268 = sub i64 %61, 1, !dbg !12731
  %and269 = and i64 %sub268, 2048, !dbg !12731
  %tobool270 = icmp ne i64 %and269, 0, !dbg !12731
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !12731

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !12731

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub273 = sub i64 %62, 1, !dbg !12731
  %and274 = and i64 %sub273, 1024, !dbg !12731
  %tobool275 = icmp ne i64 %and274, 0, !dbg !12731
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !12731

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !12731

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub278 = sub i64 %63, 1, !dbg !12731
  %and279 = and i64 %sub278, 512, !dbg !12731
  %tobool280 = icmp ne i64 %and279, 0, !dbg !12731
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !12731

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !12731

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub283 = sub i64 %64, 1, !dbg !12731
  %and284 = and i64 %sub283, 256, !dbg !12731
  %tobool285 = icmp ne i64 %and284, 0, !dbg !12731
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !12731

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !12731

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub288 = sub i64 %65, 1, !dbg !12731
  %and289 = and i64 %sub288, 128, !dbg !12731
  %tobool290 = icmp ne i64 %and289, 0, !dbg !12731
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !12731

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !12731

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub293 = sub i64 %66, 1, !dbg !12731
  %and294 = and i64 %sub293, 64, !dbg !12731
  %tobool295 = icmp ne i64 %and294, 0, !dbg !12731
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !12731

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !12731

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub298 = sub i64 %67, 1, !dbg !12731
  %and299 = and i64 %sub298, 32, !dbg !12731
  %tobool300 = icmp ne i64 %and299, 0, !dbg !12731
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !12731

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !12731

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub303 = sub i64 %68, 1, !dbg !12731
  %and304 = and i64 %sub303, 16, !dbg !12731
  %tobool305 = icmp ne i64 %and304, 0, !dbg !12731
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !12731

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !12731

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub308 = sub i64 %69, 1, !dbg !12731
  %and309 = and i64 %sub308, 8, !dbg !12731
  %tobool310 = icmp ne i64 %and309, 0, !dbg !12731
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !12731

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !12731

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub313 = sub i64 %70, 1, !dbg !12731
  %and314 = and i64 %sub313, 4, !dbg !12731
  %tobool315 = icmp ne i64 %and314, 0, !dbg !12731
  %71 = zext i1 %tobool315 to i64, !dbg !12731
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !12731
  br label %cond.end, !dbg !12731

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !12731
  br label %cond.end317, !dbg !12731

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !12731
  br label %cond.end319, !dbg !12731

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !12731
  br label %cond.end321, !dbg !12731

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !12731
  br label %cond.end323, !dbg !12731

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !12731
  br label %cond.end325, !dbg !12731

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !12731
  br label %cond.end327, !dbg !12731

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !12731
  br label %cond.end329, !dbg !12731

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !12731
  br label %cond.end331, !dbg !12731

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !12731
  br label %cond.end333, !dbg !12731

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !12731
  br label %cond.end335, !dbg !12731

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !12731
  br label %cond.end337, !dbg !12731

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !12731
  br label %cond.end339, !dbg !12731

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !12731
  br label %cond.end341, !dbg !12731

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !12731
  br label %cond.end343, !dbg !12731

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !12731
  br label %cond.end345, !dbg !12731

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !12731
  br label %cond.end347, !dbg !12731

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !12731
  br label %cond.end349, !dbg !12731

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !12731
  br label %cond.end351, !dbg !12731

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !12731
  br label %cond.end353, !dbg !12731

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !12731
  br label %cond.end355, !dbg !12731

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !12731
  br label %cond.end357, !dbg !12731

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !12731
  br label %cond.end359, !dbg !12731

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !12731
  br label %cond.end361, !dbg !12731

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !12731
  br label %cond.end363, !dbg !12731

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !12731
  br label %cond.end365, !dbg !12731

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !12731
  br label %cond.end367, !dbg !12731

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !12731
  br label %cond.end369, !dbg !12731

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !12731
  br label %cond.end371, !dbg !12731

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !12731
  br label %cond.end373, !dbg !12731

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !12731
  br label %cond.end375, !dbg !12731

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !12731
  br label %cond.end377, !dbg !12731

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !12731
  br label %cond.end379, !dbg !12731

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !12731
  br label %cond.end381, !dbg !12731

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !12731
  br label %cond.end383, !dbg !12731

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !12731
  br label %cond.end385, !dbg !12731

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !12731
  br label %cond.end387, !dbg !12731

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !12731
  br label %cond.end389, !dbg !12731

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !12731
  br label %cond.end391, !dbg !12731

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !12731
  br label %cond.end393, !dbg !12731

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !12731
  br label %cond.end395, !dbg !12731

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !12731
  br label %cond.end397, !dbg !12731

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !12731
  br label %cond.end399, !dbg !12731

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !12731
  br label %cond.end401, !dbg !12731

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !12731
  br label %cond.end403, !dbg !12731

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !12731
  br label %cond.end405, !dbg !12731

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !12731
  br label %cond.end407, !dbg !12731

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !12731
  br label %cond.end409, !dbg !12731

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !12731
  br label %cond.end411, !dbg !12731

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !12731
  br label %cond.end413, !dbg !12731

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !12731
  br label %cond.end415, !dbg !12731

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !12731
  br label %cond.end417, !dbg !12731

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !12731
  br label %cond.end419, !dbg !12731

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !12731
  br label %cond.end421, !dbg !12731

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !12731
  br label %cond.end423, !dbg !12731

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !12731
  br label %cond.end425, !dbg !12731

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !12731
  br label %cond.end427, !dbg !12731

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !12731
  br label %cond.end429, !dbg !12731

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !12731
  br label %cond.end431, !dbg !12731

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !12731
  br label %cond.end433, !dbg !12731

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !12731
  br label %cond.end435, !dbg !12731

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !12731
  br label %cond.end437, !dbg !12731

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !12731
  br label %cond.end440, !dbg !12731

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !12731

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !12731
  br label %cond.end444, !dbg !12731

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !12731
  %sub443 = sub i64 %72, 1, !dbg !12731
  %call = call i32 @__ilog2_u64(i64 %sub443) #11, !dbg !12731
  br label %cond.end444, !dbg !12731

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !12731
  %sub446 = sub i32 %cond445, 12, !dbg !12732
  %add = add i32 %sub446, 1, !dbg !12733
  store i32 %add, i32* %retval, align 4, !dbg !12734
  br label %return, !dbg !12734

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !12735
  %dec = add i64 %73, -1, !dbg !12735
  store i64 %dec, i64* %size.addr, align 8, !dbg !12735
  %74 = load i64, i64* %size.addr, align 8, !dbg !12736
  %shr = lshr i64 %74, 12, !dbg !12736
  store i64 %shr, i64* %size.addr, align 8, !dbg !12736
  %75 = load i64, i64* %size.addr, align 8, !dbg !12737
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !12714
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !12738
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !12739
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #14, !dbg !12738, !srcloc !12740
  store i32 %78, i32* %bitpos.i, align 4, !dbg !12738
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !12741
  %add.i = add i32 %79, 1, !dbg !12742
  store i32 %add.i, i32* %retval, align 4, !dbg !12743
  br label %return, !dbg !12743

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !12744
  ret i32 %80, !dbg !12744
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #9 !dbg !12745 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !12706, metadata !DIExpression()), !dbg !12749
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !12713, metadata !DIExpression()), !dbg !12751
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12752, metadata !DIExpression()), !dbg !12753
  %0 = load i64, i64* %n.addr, align 8, !dbg !12754
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !12751
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !12755
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !12756
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #14, !dbg !12755, !srcloc !12740
  store i32 %3, i32* %bitpos.i, align 4, !dbg !12755
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !12757
  %add.i = add i32 %4, 1, !dbg !12758
  %sub = sub i32 %add.i, 1, !dbg !12759
  ret i32 %sub, !dbg !12760
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !12761 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !12765, metadata !DIExpression()), !dbg !12766
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !12767, metadata !DIExpression()), !dbg !12768
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12769, metadata !DIExpression()), !dbg !12770
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12771, metadata !DIExpression()), !dbg !12772
  %0 = load i8*, i8** %object.addr, align 8, !dbg !12773
  ret i8* %0, !dbg !12774
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !12775 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !12778, metadata !DIExpression()), !dbg !12779
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !12780, metadata !DIExpression()), !dbg !12781
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !12782, metadata !DIExpression()), !dbg !12783
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12784
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12786
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12787
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #10, !dbg !12788
  br i1 %call, label %if.end, label %if.then, !dbg !12789

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !12790

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12791
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12792
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !12793
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !12794
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12795
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12796
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !12797
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !12798
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12799
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12800
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !12801
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !12802
  br label %do.body, !dbg !12803

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !12804

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !12806

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !12804

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12808
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12808
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !12808
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !12808
  br label %do.end7, !dbg !12808

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !12804

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !12810
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !12811 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !12814, metadata !DIExpression()), !dbg !12815
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !12816, metadata !DIExpression()), !dbg !12817
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !12818, metadata !DIExpression()), !dbg !12819
  ret i1 true, !dbg !12820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !12821 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !12822, metadata !DIExpression()), !dbg !12823
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !12824
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #10, !dbg !12826
  br i1 %call, label %if.end, label %if.then, !dbg !12827

if.then:                                          ; preds = %entry
  br label %return, !dbg !12828

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !12829
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !12830
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !12830
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !12831
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !12832
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12832
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #10, !dbg !12833
  br label %return, !dbg !12834

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !12834
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !12835 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !12838, metadata !DIExpression()), !dbg !12839
  ret i1 true, !dbg !12840
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !12841 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !12842, metadata !DIExpression()), !dbg !12843
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !12844, metadata !DIExpression()), !dbg !12845
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12846
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12847
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !12848
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !12849
  br label %do.body, !dbg !12850

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !12851

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !12853

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !12851

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12855
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12855
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !12855
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !12855
  br label %do.end5, !dbg !12855

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !12851

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !12857
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @phy_device_release(%struct.device* %dev) #0 !dbg !12858 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.mdio_device*, align 8
  %tmp4 = alloca %struct.phy_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12859, metadata !DIExpression()), !dbg !12860
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12861, metadata !DIExpression()), !dbg !12863
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !12864, metadata !DIExpression()), !dbg !12866
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12866
  %1 = bitcast %struct.device* %0 to i8*, !dbg !12866
  store i8* %1, i8** %__mptr1, align 8, !dbg !12866
  br label %do.body, !dbg !12866

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12867

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr1, align 8, !dbg !12866
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !12866
  %3 = bitcast i8* %add.ptr to %struct.mdio_device*, !dbg !12866
  store %struct.mdio_device* %3, %struct.mdio_device** %tmp, align 8, !dbg !12867
  %4 = load %struct.mdio_device*, %struct.mdio_device** %tmp, align 8, !dbg !12866
  %5 = bitcast %struct.mdio_device* %4 to i8*, !dbg !12863
  store i8* %5, i8** %__mptr, align 8, !dbg !12863
  br label %do.body2, !dbg !12863

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !12869

do.end3:                                          ; preds = %do.body2
  %6 = load i8*, i8** %__mptr, align 8, !dbg !12863
  %add.ptr5 = getelementptr i8, i8* %6, i64 0, !dbg !12863
  %7 = bitcast i8* %add.ptr5 to %struct.phy_device*, !dbg !12863
  store %struct.phy_device* %7, %struct.phy_device** %tmp4, align 8, !dbg !12869
  %8 = load %struct.phy_device*, %struct.phy_device** %tmp4, align 8, !dbg !12863
  %9 = bitcast %struct.phy_device* %8 to i8*, !dbg !12871
  call void @kfree(i8* %9) #10, !dbg !12872
  ret void, !dbg !12873
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @phy_id_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12874 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.mdio_device*, align 8
  %tmp4 = alloca %struct.phy_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12875, metadata !DIExpression()), !dbg !12876
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12877, metadata !DIExpression()), !dbg !12878
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12879, metadata !DIExpression()), !dbg !12880
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !12881, metadata !DIExpression()), !dbg !12882
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12883, metadata !DIExpression()), !dbg !12885
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !12886, metadata !DIExpression()), !dbg !12888
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12888
  %1 = bitcast %struct.device* %0 to i8*, !dbg !12888
  store i8* %1, i8** %__mptr1, align 8, !dbg !12888
  br label %do.body, !dbg !12888

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12889

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr1, align 8, !dbg !12888
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !12888
  %3 = bitcast i8* %add.ptr to %struct.mdio_device*, !dbg !12888
  store %struct.mdio_device* %3, %struct.mdio_device** %tmp, align 8, !dbg !12889
  %4 = load %struct.mdio_device*, %struct.mdio_device** %tmp, align 8, !dbg !12888
  %5 = bitcast %struct.mdio_device* %4 to i8*, !dbg !12885
  store i8* %5, i8** %__mptr, align 8, !dbg !12885
  br label %do.body2, !dbg !12885

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !12891

do.end3:                                          ; preds = %do.body2
  %6 = load i8*, i8** %__mptr, align 8, !dbg !12885
  %add.ptr5 = getelementptr i8, i8* %6, i64 0, !dbg !12885
  %7 = bitcast i8* %add.ptr5 to %struct.phy_device*, !dbg !12885
  store %struct.phy_device* %7, %struct.phy_device** %tmp4, align 8, !dbg !12891
  %8 = load %struct.phy_device*, %struct.phy_device** %tmp4, align 8, !dbg !12885
  store %struct.phy_device* %8, %struct.phy_device** %phydev, align 8, !dbg !12882
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !12893
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12894
  %phy_id = getelementptr inbounds %struct.phy_device, %struct.phy_device* %10, i32 0, i32 2, !dbg !12895
  %11 = load i32, i32* %phy_id, align 8, !dbg !12895
  %conv = zext i32 %11 to i64, !dbg !12896
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0), i64 %conv) #10, !dbg !12897
  %conv6 = sext i32 %call to i64, !dbg !12897
  ret i64 %conv6, !dbg !12898
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @phy_interface_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12899 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.mdio_device*, align 8
  %tmp4 = alloca %struct.phy_device*, align 8
  %mode = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12900, metadata !DIExpression()), !dbg !12901
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12902, metadata !DIExpression()), !dbg !12903
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12904, metadata !DIExpression()), !dbg !12905
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !12906, metadata !DIExpression()), !dbg !12907
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12908, metadata !DIExpression()), !dbg !12910
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !12911, metadata !DIExpression()), !dbg !12913
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12913
  %1 = bitcast %struct.device* %0 to i8*, !dbg !12913
  store i8* %1, i8** %__mptr1, align 8, !dbg !12913
  br label %do.body, !dbg !12913

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12914

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr1, align 8, !dbg !12913
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !12913
  %3 = bitcast i8* %add.ptr to %struct.mdio_device*, !dbg !12913
  store %struct.mdio_device* %3, %struct.mdio_device** %tmp, align 8, !dbg !12914
  %4 = load %struct.mdio_device*, %struct.mdio_device** %tmp, align 8, !dbg !12913
  %5 = bitcast %struct.mdio_device* %4 to i8*, !dbg !12910
  store i8* %5, i8** %__mptr, align 8, !dbg !12910
  br label %do.body2, !dbg !12910

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !12916

do.end3:                                          ; preds = %do.body2
  %6 = load i8*, i8** %__mptr, align 8, !dbg !12910
  %add.ptr5 = getelementptr i8, i8* %6, i64 0, !dbg !12910
  %7 = bitcast i8* %add.ptr5 to %struct.phy_device*, !dbg !12910
  store %struct.phy_device* %7, %struct.phy_device** %tmp4, align 8, !dbg !12916
  %8 = load %struct.phy_device*, %struct.phy_device** %tmp4, align 8, !dbg !12910
  store %struct.phy_device* %8, %struct.phy_device** %phydev, align 8, !dbg !12907
  call void @llvm.dbg.declare(metadata i8** %mode, metadata !12918, metadata !DIExpression()), !dbg !12919
  store i8* null, i8** %mode, align 8, !dbg !12919
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12920
  %call = call zeroext i1 @phy_is_internal(%struct.phy_device* %9) #10, !dbg !12922
  br i1 %call, label %if.then, label %if.else, !dbg !12923

if.then:                                          ; preds = %do.end3
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0), i8** %mode, align 8, !dbg !12924
  br label %if.end, !dbg !12925

if.else:                                          ; preds = %do.end3
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12926
  %interface = getelementptr inbounds %struct.phy_device, %struct.phy_device* %10, i32 0, i32 7, !dbg !12927
  %11 = load i32, i32* %interface, align 8, !dbg !12927
  %call6 = call i8* @phy_modes(i32 %11) #10, !dbg !12928
  store i8* %call6, i8** %mode, align 8, !dbg !12929
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !12930
  %13 = load i8*, i8** %mode, align 8, !dbg !12931
  %call7 = call i32 (i8*, i8*, ...) @sprintf(i8* %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0), i8* %13) #10, !dbg !12932
  %conv = sext i32 %call7 to i64, !dbg !12932
  ret i64 %conv, !dbg !12933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @phy_is_internal(%struct.phy_device* %phydev) #0 !dbg !12934 {
entry:
  %phydev.addr = alloca %struct.phy_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !12935, metadata !DIExpression()), !dbg !12936
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !12937
  %is_internal = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 4, !dbg !12938
  %bf.load = load i16, i16* %is_internal, align 4, !dbg !12938
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !12938
  %bf.clear = and i16 %bf.lshr, 1, !dbg !12938
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12938
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12937
  ret i1 %tobool, !dbg !12939
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @phy_modes(i32 %interface) #0 !dbg !12940 {
entry:
  %retval = alloca i8*, align 8
  %interface.addr = alloca i32, align 4
  store i32 %interface, i32* %interface.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %interface.addr, metadata !12943, metadata !DIExpression()), !dbg !12944
  %0 = load i32, i32* %interface.addr, align 4, !dbg !12945
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
    i32 4, label %sw.bb4
    i32 5, label %sw.bb5
    i32 6, label %sw.bb6
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb9
    i32 10, label %sw.bb10
    i32 11, label %sw.bb11
    i32 12, label %sw.bb12
    i32 13, label %sw.bb13
    i32 14, label %sw.bb14
    i32 15, label %sw.bb15
    i32 16, label %sw.bb16
    i32 17, label %sw.bb17
    i32 18, label %sw.bb18
    i32 19, label %sw.bb19
    i32 20, label %sw.bb20
    i32 21, label %sw.bb21
    i32 22, label %sw.bb22
    i32 23, label %sw.bb23
    i32 24, label %sw.bb24
    i32 25, label %sw.bb25
  ], !dbg !12946

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.35, i64 0, i64 0), i8** %retval, align 8, !dbg !12947
  br label %return, !dbg !12947

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0), i8** %retval, align 8, !dbg !12949
  br label %return, !dbg !12949

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0), i8** %retval, align 8, !dbg !12950
  br label %return, !dbg !12950

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0), i8** %retval, align 8, !dbg !12951
  br label %return, !dbg !12951

sw.bb4:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0), i8** %retval, align 8, !dbg !12952
  br label %return, !dbg !12952

sw.bb5:                                           ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0), i8** %retval, align 8, !dbg !12953
  br label %return, !dbg !12953

sw.bb6:                                           ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0), i8** %retval, align 8, !dbg !12954
  br label %return, !dbg !12954

sw.bb7:                                           ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i64 0, i64 0), i8** %retval, align 8, !dbg !12955
  br label %return, !dbg !12955

sw.bb8:                                           ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0), i8** %retval, align 8, !dbg !12956
  br label %return, !dbg !12956

sw.bb9:                                           ; preds = %entry
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i8** %retval, align 8, !dbg !12957
  br label %return, !dbg !12957

sw.bb10:                                          ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.44, i64 0, i64 0), i8** %retval, align 8, !dbg !12958
  br label %return, !dbg !12958

sw.bb11:                                          ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0), i8** %retval, align 8, !dbg !12959
  br label %return, !dbg !12959

sw.bb12:                                          ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i8** %retval, align 8, !dbg !12960
  br label %return, !dbg !12960

sw.bb13:                                          ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), i8** %retval, align 8, !dbg !12961
  br label %return, !dbg !12961

sw.bb14:                                          ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0), i8** %retval, align 8, !dbg !12962
  br label %return, !dbg !12962

sw.bb15:                                          ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i64 0, i64 0), i8** %retval, align 8, !dbg !12963
  br label %return, !dbg !12963

sw.bb16:                                          ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), i8** %retval, align 8, !dbg !12964
  br label %return, !dbg !12964

sw.bb17:                                          ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i64 0, i64 0), i8** %retval, align 8, !dbg !12965
  br label %return, !dbg !12965

sw.bb18:                                          ; preds = %entry
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0), i8** %retval, align 8, !dbg !12966
  br label %return, !dbg !12966

sw.bb19:                                          ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.53, i64 0, i64 0), i8** %retval, align 8, !dbg !12967
  br label %return, !dbg !12967

sw.bb20:                                          ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0), i8** %retval, align 8, !dbg !12968
  br label %return, !dbg !12968

sw.bb21:                                          ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0), i8** %retval, align 8, !dbg !12969
  br label %return, !dbg !12969

sw.bb22:                                          ; preds = %entry
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0), i8** %retval, align 8, !dbg !12970
  br label %return, !dbg !12970

sw.bb23:                                          ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.57, i64 0, i64 0), i8** %retval, align 8, !dbg !12971
  br label %return, !dbg !12971

sw.bb24:                                          ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i64 0, i64 0), i8** %retval, align 8, !dbg !12972
  br label %return, !dbg !12972

sw.bb25:                                          ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i64 0, i64 0), i8** %retval, align 8, !dbg !12973
  br label %return, !dbg !12973

sw.default:                                       ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.60, i64 0, i64 0), i8** %retval, align 8, !dbg !12974
  br label %return, !dbg !12974

return:                                           ; preds = %sw.default, %sw.bb25, %sw.bb24, %sw.bb23, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %retval, align 8, !dbg !12975
  ret i8* %1, !dbg !12975
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @phy_has_fixups_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12976 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.mdio_device*, align 8
  %tmp4 = alloca %struct.phy_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12977, metadata !DIExpression()), !dbg !12978
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12979, metadata !DIExpression()), !dbg !12980
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12981, metadata !DIExpression()), !dbg !12982
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !12983, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12985, metadata !DIExpression()), !dbg !12987
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !12988, metadata !DIExpression()), !dbg !12990
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12990
  %1 = bitcast %struct.device* %0 to i8*, !dbg !12990
  store i8* %1, i8** %__mptr1, align 8, !dbg !12990
  br label %do.body, !dbg !12990

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12991

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr1, align 8, !dbg !12990
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !12990
  %3 = bitcast i8* %add.ptr to %struct.mdio_device*, !dbg !12990
  store %struct.mdio_device* %3, %struct.mdio_device** %tmp, align 8, !dbg !12991
  %4 = load %struct.mdio_device*, %struct.mdio_device** %tmp, align 8, !dbg !12990
  %5 = bitcast %struct.mdio_device* %4 to i8*, !dbg !12987
  store i8* %5, i8** %__mptr, align 8, !dbg !12987
  br label %do.body2, !dbg !12987

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !12993

do.end3:                                          ; preds = %do.body2
  %6 = load i8*, i8** %__mptr, align 8, !dbg !12987
  %add.ptr5 = getelementptr i8, i8* %6, i64 0, !dbg !12987
  %7 = bitcast i8* %add.ptr5 to %struct.phy_device*, !dbg !12987
  store %struct.phy_device* %7, %struct.phy_device** %tmp4, align 8, !dbg !12993
  %8 = load %struct.phy_device*, %struct.phy_device** %tmp4, align 8, !dbg !12987
  store %struct.phy_device* %8, %struct.phy_device** %phydev, align 8, !dbg !12984
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !12995
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !12996
  %has_fixups = getelementptr inbounds %struct.phy_device, %struct.phy_device* %10, i32 0, i32 4, !dbg !12997
  %bf.load = load i16, i16* %has_fixups, align 4, !dbg !12997
  %bf.lshr = lshr i16 %bf.load, 4, !dbg !12997
  %bf.clear = and i16 %bf.lshr, 1, !dbg !12997
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12997
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.62, i64 0, i64 0), i32 %bf.cast) #10, !dbg !12998
  %conv = sext i32 %call to i64, !dbg !12998
  ret i64 %conv, !dbg !12999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mdio_bus_phy_suspend(%struct.device* %dev) #0 !dbg !13000 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.mdio_device*, align 8
  %tmp4 = alloca %struct.phy_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13001, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !13003, metadata !DIExpression()), !dbg !13004
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13005, metadata !DIExpression()), !dbg !13007
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !13008, metadata !DIExpression()), !dbg !13010
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13010
  %1 = bitcast %struct.device* %0 to i8*, !dbg !13010
  store i8* %1, i8** %__mptr1, align 8, !dbg !13010
  br label %do.body, !dbg !13010

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13011

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr1, align 8, !dbg !13010
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !13010
  %3 = bitcast i8* %add.ptr to %struct.mdio_device*, !dbg !13010
  store %struct.mdio_device* %3, %struct.mdio_device** %tmp, align 8, !dbg !13011
  %4 = load %struct.mdio_device*, %struct.mdio_device** %tmp, align 8, !dbg !13010
  %5 = bitcast %struct.mdio_device* %4 to i8*, !dbg !13007
  store i8* %5, i8** %__mptr, align 8, !dbg !13007
  br label %do.body2, !dbg !13007

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !13013

do.end3:                                          ; preds = %do.body2
  %6 = load i8*, i8** %__mptr, align 8, !dbg !13007
  %add.ptr5 = getelementptr i8, i8* %6, i64 0, !dbg !13007
  %7 = bitcast i8* %add.ptr5 to %struct.phy_device*, !dbg !13007
  store %struct.phy_device* %7, %struct.phy_device** %tmp4, align 8, !dbg !13013
  %8 = load %struct.phy_device*, %struct.phy_device** %tmp4, align 8, !dbg !13007
  store %struct.phy_device* %8, %struct.phy_device** %phydev, align 8, !dbg !13004
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13015
  %attached_dev = getelementptr inbounds %struct.phy_device, %struct.phy_device* %9, i32 0, i32 31, !dbg !13017
  %10 = load %struct.net_device*, %struct.net_device** %attached_dev, align 8, !dbg !13017
  %tobool = icmp ne %struct.net_device* %10, null, !dbg !13015
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13018

land.lhs.true:                                    ; preds = %do.end3
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13019
  %adjust_link = getelementptr inbounds %struct.phy_device, %struct.phy_device* %11, i32 0, i32 36, !dbg !13020
  %12 = load void (%struct.net_device*)*, void (%struct.net_device*)** %adjust_link, align 8, !dbg !13020
  %tobool6 = icmp ne void (%struct.net_device*)* %12, null, !dbg !13019
  br i1 %tobool6, label %if.then, label %if.end, !dbg !13021

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13022
  call void @phy_stop_machine(%struct.phy_device* %13) #10, !dbg !13023
  br label %if.end, !dbg !13023

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end3
  %14 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13024
  %call = call zeroext i1 @mdio_bus_phy_may_suspend(%struct.phy_device* %14) #10, !dbg !13026
  br i1 %call, label %if.end8, label %if.then7, !dbg !13027

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13028
  br label %return, !dbg !13028

if.end8:                                          ; preds = %if.end
  %15 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13029
  %suspended_by_mdio_bus = getelementptr inbounds %struct.phy_device, %struct.phy_device* %15, i32 0, i32 4, !dbg !13030
  %bf.load = load i16, i16* %suspended_by_mdio_bus, align 4, !dbg !13031
  %bf.clear = and i16 %bf.load, -65, !dbg !13031
  %bf.set = or i16 %bf.clear, 64, !dbg !13031
  store i16 %bf.set, i16* %suspended_by_mdio_bus, align 4, !dbg !13031
  %16 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13032
  %call9 = call i32 @phy_suspend(%struct.phy_device* %16) #10, !dbg !13033
  store i32 %call9, i32* %retval, align 4, !dbg !13034
  br label %return, !dbg !13034

return:                                           ; preds = %if.end8, %if.then7
  %17 = load i32, i32* %retval, align 4, !dbg !13035
  ret i32 %17, !dbg !13035
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mdio_bus_phy_resume(%struct.device* %dev) #0 !dbg !13036 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.mdio_device*, align 8
  %tmp4 = alloca %struct.phy_device*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13037, metadata !DIExpression()), !dbg !13038
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !13039, metadata !DIExpression()), !dbg !13040
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13041, metadata !DIExpression()), !dbg !13043
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !13044, metadata !DIExpression()), !dbg !13046
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13046
  %1 = bitcast %struct.device* %0 to i8*, !dbg !13046
  store i8* %1, i8** %__mptr1, align 8, !dbg !13046
  br label %do.body, !dbg !13046

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13047

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr1, align 8, !dbg !13046
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !13046
  %3 = bitcast i8* %add.ptr to %struct.mdio_device*, !dbg !13046
  store %struct.mdio_device* %3, %struct.mdio_device** %tmp, align 8, !dbg !13047
  %4 = load %struct.mdio_device*, %struct.mdio_device** %tmp, align 8, !dbg !13046
  %5 = bitcast %struct.mdio_device* %4 to i8*, !dbg !13043
  store i8* %5, i8** %__mptr, align 8, !dbg !13043
  br label %do.body2, !dbg !13043

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !13049

do.end3:                                          ; preds = %do.body2
  %6 = load i8*, i8** %__mptr, align 8, !dbg !13043
  %add.ptr5 = getelementptr i8, i8* %6, i64 0, !dbg !13043
  %7 = bitcast i8* %add.ptr5 to %struct.phy_device*, !dbg !13043
  store %struct.phy_device* %7, %struct.phy_device** %tmp4, align 8, !dbg !13049
  %8 = load %struct.phy_device*, %struct.phy_device** %tmp4, align 8, !dbg !13043
  store %struct.phy_device* %8, %struct.phy_device** %phydev, align 8, !dbg !13040
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13051, metadata !DIExpression()), !dbg !13052
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13053
  %suspended_by_mdio_bus = getelementptr inbounds %struct.phy_device, %struct.phy_device* %9, i32 0, i32 4, !dbg !13055
  %bf.load = load i16, i16* %suspended_by_mdio_bus, align 4, !dbg !13055
  %bf.lshr = lshr i16 %bf.load, 6, !dbg !13055
  %bf.clear = and i16 %bf.lshr, 1, !dbg !13055
  %bf.cast = zext i16 %bf.clear to i32, !dbg !13055
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !13053
  br i1 %tobool, label %if.end, label %if.then, !dbg !13056

if.then:                                          ; preds = %do.end3
  br label %no_resume, !dbg !13057

if.end:                                           ; preds = %do.end3
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13058
  %suspended_by_mdio_bus6 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %10, i32 0, i32 4, !dbg !13059
  %bf.load7 = load i16, i16* %suspended_by_mdio_bus6, align 4, !dbg !13060
  %bf.clear8 = and i16 %bf.load7, -65, !dbg !13060
  store i16 %bf.clear8, i16* %suspended_by_mdio_bus6, align 4, !dbg !13060
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13061
  %call = call i32 @phy_resume(%struct.phy_device* %11) #10, !dbg !13062
  store i32 %call, i32* %ret, align 4, !dbg !13063
  %12 = load i32, i32* %ret, align 4, !dbg !13064
  %cmp = icmp slt i32 %12, 0, !dbg !13066
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !13067

if.then9:                                         ; preds = %if.end
  %13 = load i32, i32* %ret, align 4, !dbg !13068
  store i32 %13, i32* %retval, align 4, !dbg !13069
  br label %return, !dbg !13069

if.end10:                                         ; preds = %if.end
  br label %no_resume, !dbg !13070

no_resume:                                        ; preds = %if.end10, %if.then
  call void @llvm.dbg.label(metadata !13071), !dbg !13072
  %14 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13073
  %attached_dev = getelementptr inbounds %struct.phy_device, %struct.phy_device* %14, i32 0, i32 31, !dbg !13075
  %15 = load %struct.net_device*, %struct.net_device** %attached_dev, align 8, !dbg !13075
  %tobool11 = icmp ne %struct.net_device* %15, null, !dbg !13073
  br i1 %tobool11, label %land.lhs.true, label %if.end14, !dbg !13076

land.lhs.true:                                    ; preds = %no_resume
  %16 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13077
  %adjust_link = getelementptr inbounds %struct.phy_device, %struct.phy_device* %16, i32 0, i32 36, !dbg !13078
  %17 = load void (%struct.net_device*)*, void (%struct.net_device*)** %adjust_link, align 8, !dbg !13078
  %tobool12 = icmp ne void (%struct.net_device*)* %17, null, !dbg !13077
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !13079

if.then13:                                        ; preds = %land.lhs.true
  %18 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13080
  call void @phy_start_machine(%struct.phy_device* %18) #10, !dbg !13081
  br label %if.end14, !dbg !13081

if.end14:                                         ; preds = %if.then13, %land.lhs.true, %no_resume
  store i32 0, i32* %retval, align 4, !dbg !13082
  br label %return, !dbg !13082

return:                                           ; preds = %if.end14, %if.then9
  %19 = load i32, i32* %retval, align 4, !dbg !13083
  ret i32 %19, !dbg !13083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mdio_bus_phy_restore(%struct.device* %dev) #0 !dbg !13084 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.mdio_device*, align 8
  %tmp4 = alloca %struct.phy_device*, align 8
  %netdev = alloca %struct.net_device*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13085, metadata !DIExpression()), !dbg !13086
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !13087, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13089, metadata !DIExpression()), !dbg !13091
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !13092, metadata !DIExpression()), !dbg !13094
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13094
  %1 = bitcast %struct.device* %0 to i8*, !dbg !13094
  store i8* %1, i8** %__mptr1, align 8, !dbg !13094
  br label %do.body, !dbg !13094

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13095

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr1, align 8, !dbg !13094
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !13094
  %3 = bitcast i8* %add.ptr to %struct.mdio_device*, !dbg !13094
  store %struct.mdio_device* %3, %struct.mdio_device** %tmp, align 8, !dbg !13095
  %4 = load %struct.mdio_device*, %struct.mdio_device** %tmp, align 8, !dbg !13094
  %5 = bitcast %struct.mdio_device* %4 to i8*, !dbg !13091
  store i8* %5, i8** %__mptr, align 8, !dbg !13091
  br label %do.body2, !dbg !13091

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !13097

do.end3:                                          ; preds = %do.body2
  %6 = load i8*, i8** %__mptr, align 8, !dbg !13091
  %add.ptr5 = getelementptr i8, i8* %6, i64 0, !dbg !13091
  %7 = bitcast i8* %add.ptr5 to %struct.phy_device*, !dbg !13091
  store %struct.phy_device* %7, %struct.phy_device** %tmp4, align 8, !dbg !13097
  %8 = load %struct.phy_device*, %struct.phy_device** %tmp4, align 8, !dbg !13091
  store %struct.phy_device* %8, %struct.phy_device** %phydev, align 8, !dbg !13088
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !13099, metadata !DIExpression()), !dbg !13100
  %9 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13101
  %attached_dev = getelementptr inbounds %struct.phy_device, %struct.phy_device* %9, i32 0, i32 31, !dbg !13102
  %10 = load %struct.net_device*, %struct.net_device** %attached_dev, align 8, !dbg !13102
  store %struct.net_device* %10, %struct.net_device** %netdev, align 8, !dbg !13100
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13103, metadata !DIExpression()), !dbg !13104
  %11 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13105
  %tobool = icmp ne %struct.net_device* %11, null, !dbg !13105
  br i1 %tobool, label %if.end, label %if.then, !dbg !13107

if.then:                                          ; preds = %do.end3
  store i32 0, i32* %retval, align 4, !dbg !13108
  br label %return, !dbg !13108

if.end:                                           ; preds = %do.end3
  %12 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13109
  %call = call i32 @phy_init_hw(%struct.phy_device* %12) #10, !dbg !13110
  store i32 %call, i32* %ret, align 4, !dbg !13111
  %13 = load i32, i32* %ret, align 4, !dbg !13112
  %cmp = icmp slt i32 %13, 0, !dbg !13114
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !13115

if.then6:                                         ; preds = %if.end
  %14 = load i32, i32* %ret, align 4, !dbg !13116
  store i32 %14, i32* %retval, align 4, !dbg !13117
  br label %return, !dbg !13117

if.end7:                                          ; preds = %if.end
  %15 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13118
  %attached_dev8 = getelementptr inbounds %struct.phy_device, %struct.phy_device* %15, i32 0, i32 31, !dbg !13120
  %16 = load %struct.net_device*, %struct.net_device** %attached_dev8, align 8, !dbg !13120
  %tobool9 = icmp ne %struct.net_device* %16, null, !dbg !13118
  br i1 %tobool9, label %land.lhs.true, label %if.end12, !dbg !13121

land.lhs.true:                                    ; preds = %if.end7
  %17 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13122
  %adjust_link = getelementptr inbounds %struct.phy_device, %struct.phy_device* %17, i32 0, i32 36, !dbg !13123
  %18 = load void (%struct.net_device*)*, void (%struct.net_device*)** %adjust_link, align 8, !dbg !13123
  %tobool10 = icmp ne void (%struct.net_device*)* %18, null, !dbg !13122
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !13124

if.then11:                                        ; preds = %land.lhs.true
  %19 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13125
  call void @phy_start_machine(%struct.phy_device* %19) #10, !dbg !13126
  br label %if.end12, !dbg !13126

if.end12:                                         ; preds = %if.then11, %land.lhs.true, %if.end7
  store i32 0, i32* %retval, align 4, !dbg !13127
  br label %return, !dbg !13127

return:                                           ; preds = %if.end12, %if.then6, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !13128
  ret i32 %20, !dbg !13128
}

; Function Attrs: noredzone
declare dso_local void @phy_stop_machine(%struct.phy_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mdio_bus_phy_may_suspend(%struct.phy_device* %phydev) #0 !dbg !13129 {
entry:
  %retval = alloca i1, align 1
  %phydev.addr = alloca %struct.phy_device*, align 8
  %drv = alloca %struct.device_driver*, align 8
  %phydrv = alloca %struct.phy_driver*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.mdio_driver_common*, align 8
  %tmp4 = alloca %struct.phy_driver*, align 8
  %netdev = alloca %struct.net_device*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !13130, metadata !DIExpression()), !dbg !13131
  call void @llvm.dbg.declare(metadata %struct.device_driver** %drv, metadata !13132, metadata !DIExpression()), !dbg !13133
  %0 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !13134
  %mdio = getelementptr inbounds %struct.phy_device, %struct.phy_device* %0, i32 0, i32 0, !dbg !13135
  %dev = getelementptr inbounds %struct.mdio_device, %struct.mdio_device* %mdio, i32 0, i32 0, !dbg !13136
  %driver = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 6, !dbg !13137
  %1 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !13137
  store %struct.device_driver* %1, %struct.device_driver** %drv, align 8, !dbg !13133
  call void @llvm.dbg.declare(metadata %struct.phy_driver** %phydrv, metadata !13138, metadata !DIExpression()), !dbg !13139
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13140, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !13143, metadata !DIExpression()), !dbg !13145
  %2 = load %struct.device_driver*, %struct.device_driver** %drv, align 8, !dbg !13145
  %3 = bitcast %struct.device_driver* %2 to i8*, !dbg !13145
  store i8* %3, i8** %__mptr1, align 8, !dbg !13145
  br label %do.body, !dbg !13145

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13146

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr1, align 8, !dbg !13145
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !13145
  %5 = bitcast i8* %add.ptr to %struct.mdio_driver_common*, !dbg !13145
  store %struct.mdio_driver_common* %5, %struct.mdio_driver_common** %tmp, align 8, !dbg !13146
  %6 = load %struct.mdio_driver_common*, %struct.mdio_driver_common** %tmp, align 8, !dbg !13145
  %7 = bitcast %struct.mdio_driver_common* %6 to i8*, !dbg !13142
  store i8* %7, i8** %__mptr, align 8, !dbg !13142
  br label %do.body2, !dbg !13142

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !13148

do.end3:                                          ; preds = %do.body2
  %8 = load i8*, i8** %__mptr, align 8, !dbg !13142
  %add.ptr5 = getelementptr i8, i8* %8, i64 0, !dbg !13142
  %9 = bitcast i8* %add.ptr5 to %struct.phy_driver*, !dbg !13142
  store %struct.phy_driver* %9, %struct.phy_driver** %tmp4, align 8, !dbg !13148
  %10 = load %struct.phy_driver*, %struct.phy_driver** %tmp4, align 8, !dbg !13142
  store %struct.phy_driver* %10, %struct.phy_driver** %phydrv, align 8, !dbg !13139
  call void @llvm.dbg.declare(metadata %struct.net_device** %netdev, metadata !13150, metadata !DIExpression()), !dbg !13151
  %11 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !13152
  %attached_dev = getelementptr inbounds %struct.phy_device, %struct.phy_device* %11, i32 0, i32 31, !dbg !13153
  %12 = load %struct.net_device*, %struct.net_device** %attached_dev, align 8, !dbg !13153
  store %struct.net_device* %12, %struct.net_device** %netdev, align 8, !dbg !13151
  %13 = load %struct.device_driver*, %struct.device_driver** %drv, align 8, !dbg !13154
  %tobool = icmp ne %struct.device_driver* %13, null, !dbg !13154
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13156

lor.lhs.false:                                    ; preds = %do.end3
  %14 = load %struct.phy_driver*, %struct.phy_driver** %phydrv, align 8, !dbg !13157
  %suspend = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %14, i32 0, i32 11, !dbg !13158
  %15 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %suspend, align 8, !dbg !13158
  %tobool6 = icmp ne i32 (%struct.phy_device*)* %15, null, !dbg !13157
  br i1 %tobool6, label %if.end, label %if.then, !dbg !13159

if.then:                                          ; preds = %lor.lhs.false, %do.end3
  store i1 false, i1* %retval, align 1, !dbg !13160
  br label %return, !dbg !13160

if.end:                                           ; preds = %lor.lhs.false
  %16 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13161
  %tobool7 = icmp ne %struct.net_device* %16, null, !dbg !13161
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !13163

if.then8:                                         ; preds = %if.end
  br label %out, !dbg !13164

if.end9:                                          ; preds = %if.end
  %17 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13165
  %wol_enabled = getelementptr inbounds %struct.net_device, %struct.net_device* %17, i32 0, i32 120, !dbg !13167
  %bf.load = load i8, i8* %wol_enabled, align 1, !dbg !13167
  %bf.clear = and i8 %bf.load, 1, !dbg !13167
  %bf.cast = zext i8 %bf.clear to i32, !dbg !13167
  %tobool10 = icmp ne i32 %bf.cast, 0, !dbg !13165
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !13168

if.then11:                                        ; preds = %if.end9
  store i1 false, i1* %retval, align 1, !dbg !13169
  br label %return, !dbg !13169

if.end12:                                         ; preds = %if.end9
  %18 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13170
  %dev13 = getelementptr inbounds %struct.net_device, %struct.net_device* %18, i32 0, i32 106, !dbg !13172
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev13, i32 0, i32 1, !dbg !13173
  %19 = load %struct.device*, %struct.device** %parent, align 8, !dbg !13173
  %tobool14 = icmp ne %struct.device* %19, null, !dbg !13170
  br i1 %tobool14, label %land.lhs.true, label %if.end18, !dbg !13174

land.lhs.true:                                    ; preds = %if.end12
  %20 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13175
  %dev15 = getelementptr inbounds %struct.net_device, %struct.net_device* %20, i32 0, i32 106, !dbg !13176
  %parent16 = getelementptr inbounds %struct.device, %struct.device* %dev15, i32 0, i32 1, !dbg !13177
  %21 = load %struct.device*, %struct.device** %parent16, align 8, !dbg !13177
  %call = call zeroext i1 @device_may_wakeup(%struct.device* %21) #10, !dbg !13178
  br i1 %call, label %if.then17, label %if.end18, !dbg !13179

if.then17:                                        ; preds = %land.lhs.true
  store i1 false, i1* %retval, align 1, !dbg !13180
  br label %return, !dbg !13180

if.end18:                                         ; preds = %land.lhs.true, %if.end12
  %22 = load %struct.net_device*, %struct.net_device** %netdev, align 8, !dbg !13181
  %dev19 = getelementptr inbounds %struct.net_device, %struct.net_device* %22, i32 0, i32 106, !dbg !13183
  %call20 = call zeroext i1 @device_may_wakeup(%struct.device* %dev19) #10, !dbg !13184
  br i1 %call20, label %if.then21, label %if.end22, !dbg !13185

if.then21:                                        ; preds = %if.end18
  store i1 false, i1* %retval, align 1, !dbg !13186
  br label %return, !dbg !13186

if.end22:                                         ; preds = %if.end18
  br label %out, !dbg !13187

out:                                              ; preds = %if.end22, %if.then8
  call void @llvm.dbg.label(metadata !13188), !dbg !13189
  %23 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !13190
  %suspended = getelementptr inbounds %struct.phy_device, %struct.phy_device* %23, i32 0, i32 4, !dbg !13191
  %bf.load23 = load i16, i16* %suspended, align 4, !dbg !13191
  %bf.lshr = lshr i16 %bf.load23, 5, !dbg !13191
  %bf.clear24 = and i16 %bf.lshr, 1, !dbg !13191
  %bf.cast25 = zext i16 %bf.clear24 to i32, !dbg !13191
  %tobool26 = icmp ne i32 %bf.cast25, 0, !dbg !13192
  %lnot = xor i1 %tobool26, true, !dbg !13192
  store i1 %lnot, i1* %retval, align 1, !dbg !13193
  br label %return, !dbg !13193

return:                                           ; preds = %out, %if.then21, %if.then17, %if.then11, %if.then
  %24 = load i1, i1* %retval, align 1, !dbg !13194
  ret i1 %24, !dbg !13194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_may_wakeup(%struct.device* %dev) #0 !dbg !13195 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13198, metadata !DIExpression()), !dbg !13199
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13200
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !13201
  %can_wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 1, !dbg !13202
  %bf.load = load i16, i16* %can_wakeup, align 4, !dbg !13202
  %bf.clear = and i16 %bf.load, 1, !dbg !13202
  %bf.cast = zext i16 %bf.clear to i32, !dbg !13202
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !13200
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13203

land.rhs:                                         ; preds = %entry
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13204
  %power1 = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !13205
  %wakeup = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power1, i32 0, i32 6, !dbg !13206
  %2 = load %struct.wakeup_source*, %struct.wakeup_source** %wakeup, align 8, !dbg !13206
  %tobool2 = icmp ne %struct.wakeup_source* %2, null, !dbg !13207
  %lnot = xor i1 %tobool2, true, !dbg !13207
  %lnot3 = xor i1 %lnot, true, !dbg !13208
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot3, %land.rhs ], !dbg !13209
  ret i1 %3, !dbg !13210
}

; Function Attrs: noredzone
declare dso_local void @phy_start_machine(%struct.phy_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_module(i8* %name, ...) #0 !dbg !13211 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13215, metadata !DIExpression()), !dbg !13216
  ret i32 -38, !dbg !13217
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_c45_probe_present(%struct.mii_bus* %bus, i32 %prtad, i32 %devad) #0 !dbg !13218 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.mii_bus*, align 8
  %prtad.addr = alloca i32, align 4
  %devad.addr = alloca i32, align 4
  %stat2 = alloca i32, align 4
  store %struct.mii_bus* %bus, %struct.mii_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mii_bus** %bus.addr, metadata !13219, metadata !DIExpression()), !dbg !13220
  store i32 %prtad, i32* %prtad.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prtad.addr, metadata !13221, metadata !DIExpression()), !dbg !13222
  store i32 %devad, i32* %devad.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devad.addr, metadata !13223, metadata !DIExpression()), !dbg !13224
  call void @llvm.dbg.declare(metadata i32* %stat2, metadata !13225, metadata !DIExpression()), !dbg !13226
  %0 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !13227
  %1 = load i32, i32* %prtad.addr, align 4, !dbg !13228
  %2 = load i32, i32* %devad.addr, align 4, !dbg !13229
  %call = call i32 @mdiobus_c45_read(%struct.mii_bus* %0, i32 %1, i32 %2, i16 zeroext 8) #10, !dbg !13230
  store i32 %call, i32* %stat2, align 4, !dbg !13231
  %3 = load i32, i32* %stat2, align 4, !dbg !13232
  %cmp = icmp slt i32 %3, 0, !dbg !13234
  br i1 %cmp, label %if.then, label %if.end, !dbg !13235

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %stat2, align 4, !dbg !13236
  store i32 %4, i32* %retval, align 4, !dbg !13237
  br label %return, !dbg !13237

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %stat2, align 4, !dbg !13238
  %and = and i32 %5, 49152, !dbg !13239
  %cmp1 = icmp eq i32 %and, 32768, !dbg !13240
  %conv = zext i1 %cmp1 to i32, !dbg !13240
  store i32 %conv, i32* %retval, align 4, !dbg !13241
  br label %return, !dbg !13241

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !13242
  ret i32 %6, !dbg !13242
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_phy_c45_devs_in_pkg(%struct.mii_bus* %bus, i32 %addr, i32 %dev_addr, i32* %devices_in_package) #0 !dbg !13243 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.mii_bus*, align 8
  %addr.addr = alloca i32, align 4
  %dev_addr.addr = alloca i32, align 4
  %devices_in_package.addr = alloca i32*, align 8
  %phy_reg = alloca i32, align 4
  store %struct.mii_bus* %bus, %struct.mii_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mii_bus** %bus.addr, metadata !13246, metadata !DIExpression()), !dbg !13247
  store i32 %addr, i32* %addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %addr.addr, metadata !13248, metadata !DIExpression()), !dbg !13249
  store i32 %dev_addr, i32* %dev_addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dev_addr.addr, metadata !13250, metadata !DIExpression()), !dbg !13251
  store i32* %devices_in_package, i32** %devices_in_package.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %devices_in_package.addr, metadata !13252, metadata !DIExpression()), !dbg !13253
  call void @llvm.dbg.declare(metadata i32* %phy_reg, metadata !13254, metadata !DIExpression()), !dbg !13255
  %0 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !13256
  %1 = load i32, i32* %addr.addr, align 4, !dbg !13257
  %2 = load i32, i32* %dev_addr.addr, align 4, !dbg !13258
  %call = call i32 @mdiobus_c45_read(%struct.mii_bus* %0, i32 %1, i32 %2, i16 zeroext 6) #10, !dbg !13259
  store i32 %call, i32* %phy_reg, align 4, !dbg !13260
  %3 = load i32, i32* %phy_reg, align 4, !dbg !13261
  %cmp = icmp slt i32 %3, 0, !dbg !13263
  br i1 %cmp, label %if.then, label %if.end, !dbg !13264

if.then:                                          ; preds = %entry
  store i32 -5, i32* %retval, align 4, !dbg !13265
  br label %return, !dbg !13265

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %phy_reg, align 4, !dbg !13266
  %shl = shl i32 %4, 16, !dbg !13267
  %5 = load i32*, i32** %devices_in_package.addr, align 8, !dbg !13268
  store i32 %shl, i32* %5, align 4, !dbg !13269
  %6 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !13270
  %7 = load i32, i32* %addr.addr, align 4, !dbg !13271
  %8 = load i32, i32* %dev_addr.addr, align 4, !dbg !13272
  %call1 = call i32 @mdiobus_c45_read(%struct.mii_bus* %6, i32 %7, i32 %8, i16 zeroext 5) #10, !dbg !13273
  store i32 %call1, i32* %phy_reg, align 4, !dbg !13274
  %9 = load i32, i32* %phy_reg, align 4, !dbg !13275
  %cmp2 = icmp slt i32 %9, 0, !dbg !13277
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !13278

if.then3:                                         ; preds = %if.end
  store i32 -5, i32* %retval, align 4, !dbg !13279
  br label %return, !dbg !13279

if.end4:                                          ; preds = %if.end
  %10 = load i32, i32* %phy_reg, align 4, !dbg !13280
  %11 = load i32*, i32** %devices_in_package.addr, align 8, !dbg !13281
  %12 = load i32, i32* %11, align 4, !dbg !13282
  %or = or i32 %12, %10, !dbg !13282
  store i32 %or, i32* %11, align 4, !dbg !13282
  store i32 0, i32* %retval, align 4, !dbg !13283
  br label %return, !dbg !13283

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !13284
  ret i32 %13, !dbg !13284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mdiobus_c45_read(%struct.mii_bus* %bus, i32 %prtad, i32 %devad, i16 zeroext %regnum) #0 !dbg !13285 {
entry:
  %bus.addr = alloca %struct.mii_bus*, align 8
  %prtad.addr = alloca i32, align 4
  %devad.addr = alloca i32, align 4
  %regnum.addr = alloca i16, align 2
  store %struct.mii_bus* %bus, %struct.mii_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mii_bus** %bus.addr, metadata !13286, metadata !DIExpression()), !dbg !13287
  store i32 %prtad, i32* %prtad.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prtad.addr, metadata !13288, metadata !DIExpression()), !dbg !13289
  store i32 %devad, i32* %devad.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devad.addr, metadata !13290, metadata !DIExpression()), !dbg !13291
  store i16 %regnum, i16* %regnum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %regnum.addr, metadata !13292, metadata !DIExpression()), !dbg !13293
  %0 = load %struct.mii_bus*, %struct.mii_bus** %bus.addr, align 8, !dbg !13294
  %1 = load i32, i32* %prtad.addr, align 4, !dbg !13295
  %2 = load i32, i32* %devad.addr, align 4, !dbg !13296
  %3 = load i16, i16* %regnum.addr, align 2, !dbg !13297
  %call = call i32 @mdiobus_c45_addr(i32 %2, i16 zeroext %3) #10, !dbg !13298
  %call1 = call i32 @mdiobus_read(%struct.mii_bus* %0, i32 %1, i32 %call) #10, !dbg !13299
  ret i32 %call1, !dbg !13300
}

; Function Attrs: noredzone
declare dso_local i32 @mdiobus_read(%struct.mii_bus*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mdiobus_c45_addr(i32 %devad, i16 zeroext %regnum) #0 !dbg !13301 {
entry:
  %devad.addr = alloca i32, align 4
  %regnum.addr = alloca i16, align 2
  store i32 %devad, i32* %devad.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devad.addr, metadata !13304, metadata !DIExpression()), !dbg !13305
  store i16 %regnum, i16* %regnum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %regnum.addr, metadata !13306, metadata !DIExpression()), !dbg !13307
  %0 = load i32, i32* %devad.addr, align 4, !dbg !13308
  %shl = shl i32 %0, 16, !dbg !13309
  %or = or i32 1073741824, %shl, !dbg !13310
  %1 = load i16, i16* %regnum.addr, align 2, !dbg !13311
  %conv = zext i16 %1 to i32, !dbg !13311
  %or1 = or i32 %or, %conv, !dbg !13312
  ret i32 %or1, !dbg !13313
}

; Function Attrs: noredzone
declare dso_local void @mdio_device_reset(%struct.mdio_device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @phy_needs_fixup(%struct.phy_device* %phydev, %struct.phy_fixup* %fixup) #0 !dbg !13314 {
entry:
  %retval = alloca i32, align 4
  %phydev.addr = alloca %struct.phy_device*, align 8
  %fixup.addr = alloca %struct.phy_fixup*, align 8
  store %struct.phy_device* %phydev, %struct.phy_device** %phydev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev.addr, metadata !13317, metadata !DIExpression()), !dbg !13318
  store %struct.phy_fixup* %fixup, %struct.phy_fixup** %fixup.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_fixup** %fixup.addr, metadata !13319, metadata !DIExpression()), !dbg !13320
  %0 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup.addr, align 8, !dbg !13321
  %bus_id = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %0, i32 0, i32 1, !dbg !13323
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %bus_id, i64 0, i64 0, !dbg !13321
  %1 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !13324
  %call = call i8* @phydev_name(%struct.phy_device* %1) #10, !dbg !13325
  %call1 = call i32 @strcmp(i8* %arraydecay, i8* %call) #10, !dbg !13326
  %cmp = icmp ne i32 %call1, 0, !dbg !13327
  br i1 %cmp, label %if.then, label %if.end7, !dbg !13328

if.then:                                          ; preds = %entry
  %2 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup.addr, align 8, !dbg !13329
  %bus_id2 = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %2, i32 0, i32 1, !dbg !13331
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %bus_id2, i64 0, i64 0, !dbg !13329
  %call4 = call i32 @strcmp(i8* %arraydecay3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #10, !dbg !13332
  %cmp5 = icmp ne i32 %call4, 0, !dbg !13333
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !13334

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !13335
  br label %return, !dbg !13335

if.end:                                           ; preds = %if.then
  br label %if.end7, !dbg !13336

if.end7:                                          ; preds = %if.end, %entry
  %3 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup.addr, align 8, !dbg !13337
  %phy_uid = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %3, i32 0, i32 2, !dbg !13339
  %4 = load i32, i32* %phy_uid, align 8, !dbg !13339
  %5 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup.addr, align 8, !dbg !13340
  %phy_uid_mask = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %5, i32 0, i32 3, !dbg !13341
  %6 = load i32, i32* %phy_uid_mask, align 4, !dbg !13341
  %and = and i32 %4, %6, !dbg !13342
  %7 = load %struct.phy_device*, %struct.phy_device** %phydev.addr, align 8, !dbg !13343
  %phy_id = getelementptr inbounds %struct.phy_device, %struct.phy_device* %7, i32 0, i32 2, !dbg !13344
  %8 = load i32, i32* %phy_id, align 8, !dbg !13344
  %9 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup.addr, align 8, !dbg !13345
  %phy_uid_mask8 = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %9, i32 0, i32 3, !dbg !13346
  %10 = load i32, i32* %phy_uid_mask8, align 4, !dbg !13346
  %and9 = and i32 %8, %10, !dbg !13347
  %cmp10 = icmp ne i32 %and, %and9, !dbg !13348
  br i1 %cmp10, label %if.then11, label %if.end16, !dbg !13349

if.then11:                                        ; preds = %if.end7
  %11 = load %struct.phy_fixup*, %struct.phy_fixup** %fixup.addr, align 8, !dbg !13350
  %phy_uid12 = getelementptr inbounds %struct.phy_fixup, %struct.phy_fixup* %11, i32 0, i32 2, !dbg !13352
  %12 = load i32, i32* %phy_uid12, align 8, !dbg !13352
  %cmp13 = icmp ne i32 %12, -1, !dbg !13353
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !13354

if.then14:                                        ; preds = %if.then11
  store i32 0, i32* %retval, align 4, !dbg !13355
  br label %return, !dbg !13355

if.end15:                                         ; preds = %if.then11
  br label %if.end16, !dbg !13356

if.end16:                                         ; preds = %if.end15, %if.end7
  store i32 1, i32* %retval, align 4, !dbg !13357
  br label %return, !dbg !13357

return:                                           ; preds = %if.end16, %if.then14, %if.then6
  %13 = load i32, i32* %retval, align 4, !dbg !13358
  ret i32 %13, !dbg !13358
}

; Function Attrs: noredzone
declare dso_local %struct.device* @bus_find_device(%struct.bus_type*, %struct.device*, i8*, i32 (%struct.device*, i8*)*) #2

; Function Attrs: noredzone
declare dso_local i32 @device_match_name(%struct.device*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !13359 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13362, metadata !DIExpression()), !dbg !13363
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13364
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !13366
  %1 = load i8*, i8** %init_name, align 8, !dbg !13366
  %tobool = icmp ne i8* %1, null, !dbg !13364
  br i1 %tobool, label %if.then, label %if.end, !dbg !13367

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13368
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !13369
  %3 = load i8*, i8** %init_name1, align 8, !dbg !13369
  store i8* %3, i8** %retval, align 8, !dbg !13370
  br label %return, !dbg !13370

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13371
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !13372
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #10, !dbg !13373
  store i8* %call, i8** %retval, align 8, !dbg !13374
  br label %return, !dbg !13374

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !13375
  ret i8* %5, !dbg !13375
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !13376 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !13381, metadata !DIExpression()), !dbg !13382
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !13383
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !13384
  %1 = load i8*, i8** %name, align 8, !dbg !13384
  ret i8* %1, !dbg !13385
}

; Function Attrs: noredzone
declare dso_local void @netif_carrier_on(%struct.net_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_link(%struct.kobject*, %struct.kobject*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_link_nowarn(%struct.kobject*, %struct.kobject*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_file_ns(%struct.kobject*, %struct.attribute*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @phy_standalone_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13386 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %phydev = alloca %struct.phy_device*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.mdio_device*, align 8
  %tmp4 = alloca %struct.phy_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13387, metadata !DIExpression()), !dbg !13388
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13389, metadata !DIExpression()), !dbg !13390
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13391, metadata !DIExpression()), !dbg !13392
  call void @llvm.dbg.declare(metadata %struct.phy_device** %phydev, metadata !13393, metadata !DIExpression()), !dbg !13394
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13395, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !13398, metadata !DIExpression()), !dbg !13400
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13400
  %1 = bitcast %struct.device* %0 to i8*, !dbg !13400
  store i8* %1, i8** %__mptr1, align 8, !dbg !13400
  br label %do.body, !dbg !13400

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13401

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr1, align 8, !dbg !13400
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !13400
  %3 = bitcast i8* %add.ptr to %struct.mdio_device*, !dbg !13400
  store %struct.mdio_device* %3, %struct.mdio_device** %tmp, align 8, !dbg !13401
  %4 = load %struct.mdio_device*, %struct.mdio_device** %tmp, align 8, !dbg !13400
  %5 = bitcast %struct.mdio_device* %4 to i8*, !dbg !13397
  store i8* %5, i8** %__mptr, align 8, !dbg !13397
  br label %do.body2, !dbg !13397

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !13403

do.end3:                                          ; preds = %do.body2
  %6 = load i8*, i8** %__mptr, align 8, !dbg !13397
  %add.ptr5 = getelementptr i8, i8* %6, i64 0, !dbg !13397
  %7 = bitcast i8* %add.ptr5 to %struct.phy_device*, !dbg !13397
  store %struct.phy_device* %7, %struct.phy_device** %tmp4, align 8, !dbg !13403
  %8 = load %struct.phy_device*, %struct.phy_device** %tmp4, align 8, !dbg !13397
  store %struct.phy_device* %8, %struct.phy_device** %phydev, align 8, !dbg !13394
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !13405
  %10 = load %struct.phy_device*, %struct.phy_device** %phydev, align 8, !dbg !13406
  %attached_dev = getelementptr inbounds %struct.phy_device, %struct.phy_device* %10, i32 0, i32 31, !dbg !13407
  %11 = load %struct.net_device*, %struct.net_device** %attached_dev, align 8, !dbg !13407
  %tobool = icmp ne %struct.net_device* %11, null, !dbg !13408
  %lnot = xor i1 %tobool, true, !dbg !13408
  %lnot.ext = zext i1 %lnot to i32, !dbg !13408
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.62, i64 0, i64 0), i32 %lnot.ext) #10, !dbg !13409
  %conv = sext i32 %call to i64, !dbg !13409
  ret i64 %conv, !dbg !13410
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !13411 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13415, metadata !DIExpression()), !dbg !13416
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !13417, metadata !DIExpression()), !dbg !13418
  ret i1 true, !dbg !13419
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !13420 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13424, metadata !DIExpression()), !dbg !13425
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13426, metadata !DIExpression()), !dbg !13427
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !13428, metadata !DIExpression()), !dbg !13429
  ret void, !dbg !13430
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_inc(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !13431 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !13434, metadata !DIExpression()), !dbg !13435
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !13436, metadata !DIExpression()), !dbg !13437
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13438
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !13439
  call void @__refcount_add(i32 1, %struct.refcount_struct* %0, i32* %1) #10, !dbg !13440
  ret void, !dbg !13441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_add(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !13442 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !13445, metadata !DIExpression()), !dbg !13449
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !13453, metadata !DIExpression()), !dbg !13454
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !13455, metadata !DIExpression()), !dbg !13457
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !13458, metadata !DIExpression()), !dbg !13460
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !13462, metadata !DIExpression()), !dbg !13463
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !13464, metadata !DIExpression()), !dbg !13465
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !13466, metadata !DIExpression()), !dbg !13467
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13468, metadata !DIExpression()), !dbg !13469
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !13470, metadata !DIExpression()), !dbg !13471
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !13472, metadata !DIExpression()), !dbg !13473
  call void @llvm.dbg.declare(metadata i32* %old, metadata !13474, metadata !DIExpression()), !dbg !13475
  %0 = load i32, i32* %i.addr, align 4, !dbg !13476
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13477
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !13478
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13479
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !13479
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13480
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !13481
  %conv.i.i = trunc i64 %5 to i32, !dbg !13481
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !13482
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13483
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !13483
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #12, !dbg !13483
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !13484
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13485
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !13457
  store i32 %10, i32* %__ret.i.i, align 4, !dbg !13457
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !13457
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !13457
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !13457
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #5, !dbg !13457, !srcloc !13486
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !13457
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !13457
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !13457
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !13457
  store i32 %15, i32* %old, align 4, !dbg !13475
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !13487
  %tobool = icmp ne i32* %16, null, !dbg !13487
  br i1 %tobool, label %if.then, label %if.end, !dbg !13489

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !13490
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !13491
  store i32 %17, i32* %18, align 4, !dbg !13492
  br label %if.end, !dbg !13493

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !13494
  %tobool1 = icmp ne i32 %19, 0, !dbg !13494
  %lnot = xor i1 %tobool1, true, !dbg !13494
  %lnot2 = xor i1 %lnot, true, !dbg !13494
  %lnot3 = xor i1 %lnot2, true, !dbg !13494
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !13494
  %conv = sext i32 %lnot.ext to i64, !dbg !13494
  %tobool4 = icmp ne i64 %conv, 0, !dbg !13494
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !13496

if.then5:                                         ; preds = %if.end
  %20 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13497
  call void @refcount_warn_saturate(%struct.refcount_struct* %20, i32 2) #10, !dbg !13498
  br label %if.end17, !dbg !13498

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !13499
  %cmp = icmp slt i32 %21, 0, !dbg !13499
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !13499

lor.rhs:                                          ; preds = %if.else
  %22 = load i32, i32* %old, align 4, !dbg !13499
  %23 = load i32, i32* %i.addr, align 4, !dbg !13499
  %add = add i32 %22, %23, !dbg !13499
  %cmp7 = icmp slt i32 %add, 0, !dbg !13499
  br label %lor.end, !dbg !13499

lor.end:                                          ; preds = %lor.rhs, %if.else
  %24 = phi i1 [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %24, true, !dbg !13499
  %lnot11 = xor i1 %lnot9, true, !dbg !13499
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !13499
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !13499
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !13499
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !13501

if.then15:                                        ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13502
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 1) #10, !dbg !13503
  br label %if.end16, !dbg !13503

if.end16:                                         ; preds = %if.then15, %lor.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  ret void, !dbg !13504
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @devres_alloc_node(void (%struct.device*, i8*)*, i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @sysfs_remove_file_ns(%struct.kobject*, %struct.attribute*, i8*) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local i32 @phy_modify_changed(%struct.phy_device*, i32, i16 zeroext, i16 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @linkmode_and(i64* %dst, i64* %a, i64* %b) #0 !dbg !13505 {
entry:
  %dst.addr = alloca i64*, align 8
  %a.addr = alloca i64*, align 8
  %b.addr = alloca i64*, align 8
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !13508, metadata !DIExpression()), !dbg !13509
  store i64* %a, i64** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %a.addr, metadata !13510, metadata !DIExpression()), !dbg !13511
  store i64* %b, i64** %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %b.addr, metadata !13512, metadata !DIExpression()), !dbg !13513
  %0 = load i64*, i64** %dst.addr, align 8, !dbg !13514
  %1 = load i64*, i64** %a.addr, align 8, !dbg !13515
  %2 = load i64*, i64** %b.addr, align 8, !dbg !13516
  %call = call i32 @bitmap_and(i64* %0, i64* %1, i64* %2, i32 92) #10, !dbg !13517
  ret void, !dbg !13518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @linkmode_adv_to_mii_adv_t(i64* %advertising) #0 !dbg !13519 {
entry:
  %advertising.addr = alloca i64*, align 8
  %result = alloca i32, align 4
  store i64* %advertising, i64** %advertising.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %advertising.addr, metadata !13522, metadata !DIExpression()), !dbg !13523
  call void @llvm.dbg.declare(metadata i32* %result, metadata !13524, metadata !DIExpression()), !dbg !13525
  store i32 0, i32* %result, align 4, !dbg !13525
  %0 = load i64*, i64** %advertising.addr, align 8, !dbg !13526
  %call = call i32 @linkmode_test_bit(i32 0, i64* %0) #10, !dbg !13528
  %tobool = icmp ne i32 %call, 0, !dbg !13528
  br i1 %tobool, label %if.then, label %if.end, !dbg !13529

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %result, align 4, !dbg !13530
  %or = or i32 %1, 32, !dbg !13530
  store i32 %or, i32* %result, align 4, !dbg !13530
  br label %if.end, !dbg !13531

if.end:                                           ; preds = %if.then, %entry
  %2 = load i64*, i64** %advertising.addr, align 8, !dbg !13532
  %call1 = call i32 @linkmode_test_bit(i32 1, i64* %2) #10, !dbg !13534
  %tobool2 = icmp ne i32 %call1, 0, !dbg !13534
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !13535

if.then3:                                         ; preds = %if.end
  %3 = load i32, i32* %result, align 4, !dbg !13536
  %or4 = or i32 %3, 64, !dbg !13536
  store i32 %or4, i32* %result, align 4, !dbg !13536
  br label %if.end5, !dbg !13537

if.end5:                                          ; preds = %if.then3, %if.end
  %4 = load i64*, i64** %advertising.addr, align 8, !dbg !13538
  %call6 = call i32 @linkmode_test_bit(i32 2, i64* %4) #10, !dbg !13540
  %tobool7 = icmp ne i32 %call6, 0, !dbg !13540
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !13541

if.then8:                                         ; preds = %if.end5
  %5 = load i32, i32* %result, align 4, !dbg !13542
  %or9 = or i32 %5, 128, !dbg !13542
  store i32 %or9, i32* %result, align 4, !dbg !13542
  br label %if.end10, !dbg !13543

if.end10:                                         ; preds = %if.then8, %if.end5
  %6 = load i64*, i64** %advertising.addr, align 8, !dbg !13544
  %call11 = call i32 @linkmode_test_bit(i32 3, i64* %6) #10, !dbg !13546
  %tobool12 = icmp ne i32 %call11, 0, !dbg !13546
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !13547

if.then13:                                        ; preds = %if.end10
  %7 = load i32, i32* %result, align 4, !dbg !13548
  %or14 = or i32 %7, 256, !dbg !13548
  store i32 %or14, i32* %result, align 4, !dbg !13548
  br label %if.end15, !dbg !13549

if.end15:                                         ; preds = %if.then13, %if.end10
  %8 = load i64*, i64** %advertising.addr, align 8, !dbg !13550
  %call16 = call i32 @linkmode_test_bit(i32 13, i64* %8) #10, !dbg !13552
  %tobool17 = icmp ne i32 %call16, 0, !dbg !13552
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !13553

if.then18:                                        ; preds = %if.end15
  %9 = load i32, i32* %result, align 4, !dbg !13554
  %or19 = or i32 %9, 1024, !dbg !13554
  store i32 %or19, i32* %result, align 4, !dbg !13554
  br label %if.end20, !dbg !13555

if.end20:                                         ; preds = %if.then18, %if.end15
  %10 = load i64*, i64** %advertising.addr, align 8, !dbg !13556
  %call21 = call i32 @linkmode_test_bit(i32 14, i64* %10) #10, !dbg !13558
  %tobool22 = icmp ne i32 %call21, 0, !dbg !13558
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !13559

if.then23:                                        ; preds = %if.end20
  %11 = load i32, i32* %result, align 4, !dbg !13560
  %or24 = or i32 %11, 2048, !dbg !13560
  store i32 %or24, i32* %result, align 4, !dbg !13560
  br label %if.end25, !dbg !13561

if.end25:                                         ; preds = %if.then23, %if.end20
  %12 = load i32, i32* %result, align 4, !dbg !13562
  ret i32 %12, !dbg !13563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @linkmode_adv_to_mii_ctrl1000_t(i64* %advertising) #0 !dbg !13564 {
entry:
  %advertising.addr = alloca i64*, align 8
  %result = alloca i32, align 4
  store i64* %advertising, i64** %advertising.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %advertising.addr, metadata !13565, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.declare(metadata i32* %result, metadata !13567, metadata !DIExpression()), !dbg !13568
  store i32 0, i32* %result, align 4, !dbg !13568
  %0 = load i64*, i64** %advertising.addr, align 8, !dbg !13569
  %call = call i32 @linkmode_test_bit(i32 4, i64* %0) #10, !dbg !13571
  %tobool = icmp ne i32 %call, 0, !dbg !13571
  br i1 %tobool, label %if.then, label %if.end, !dbg !13572

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %result, align 4, !dbg !13573
  %or = or i32 %1, 256, !dbg !13573
  store i32 %or, i32* %result, align 4, !dbg !13573
  br label %if.end, !dbg !13574

if.end:                                           ; preds = %if.then, %entry
  %2 = load i64*, i64** %advertising.addr, align 8, !dbg !13575
  %call1 = call i32 @linkmode_test_bit(i32 5, i64* %2) #10, !dbg !13577
  %tobool2 = icmp ne i32 %call1, 0, !dbg !13577
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !13578

if.then3:                                         ; preds = %if.end
  %3 = load i32, i32* %result, align 4, !dbg !13579
  %or4 = or i32 %3, 512, !dbg !13579
  store i32 %or4, i32* %result, align 4, !dbg !13579
  br label %if.end5, !dbg !13580

if.end5:                                          ; preds = %if.then3, %if.end
  %4 = load i32, i32* %result, align 4, !dbg !13581
  ret i32 %4, !dbg !13582
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bitmap_and(i64* %dst, i64* %src1, i64* %src2, i32 %nbits) #0 !dbg !13583 {
entry:
  %retval = alloca i32, align 4
  %dst.addr = alloca i64*, align 8
  %src1.addr = alloca i64*, align 8
  %src2.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !13587, metadata !DIExpression()), !dbg !13588
  store i64* %src1, i64** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src1.addr, metadata !13589, metadata !DIExpression()), !dbg !13590
  store i64* %src2, i64** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src2.addr, metadata !13591, metadata !DIExpression()), !dbg !13592
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !13593, metadata !DIExpression()), !dbg !13594
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !13595
  %1 = call i1 @llvm.is.constant.i32(i32 %0), !dbg !13595
  br i1 %1, label %land.lhs.true, label %if.end, !dbg !13595

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %nbits.addr, align 4, !dbg !13595
  %cmp = icmp ule i32 %2, 64, !dbg !13595
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !13595

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %nbits.addr, align 4, !dbg !13595
  %cmp2 = icmp ugt i32 %3, 0, !dbg !13595
  br i1 %cmp2, label %if.then, label %if.end, !dbg !13597

if.then:                                          ; preds = %land.lhs.true1
  %4 = load i64*, i64** %src1.addr, align 8, !dbg !13598
  %5 = load i64, i64* %4, align 8, !dbg !13599
  %6 = load i64*, i64** %src2.addr, align 8, !dbg !13600
  %7 = load i64, i64* %6, align 8, !dbg !13601
  %and = and i64 %5, %7, !dbg !13602
  %8 = load i32, i32* %nbits.addr, align 4, !dbg !13603
  %sub = sub i32 0, %8, !dbg !13603
  %and3 = and i32 %sub, 63, !dbg !13603
  %sh_prom = zext i32 %and3 to i64, !dbg !13603
  %shr = lshr i64 -1, %sh_prom, !dbg !13603
  %and4 = and i64 %and, %shr, !dbg !13604
  %9 = load i64*, i64** %dst.addr, align 8, !dbg !13605
  store i64 %and4, i64* %9, align 8, !dbg !13606
  %cmp5 = icmp ne i64 %and4, 0, !dbg !13607
  %conv = zext i1 %cmp5 to i32, !dbg !13607
  store i32 %conv, i32* %retval, align 4, !dbg !13608
  br label %return, !dbg !13608

if.end:                                           ; preds = %land.lhs.true1, %land.lhs.true, %entry
  %10 = load i64*, i64** %dst.addr, align 8, !dbg !13609
  %11 = load i64*, i64** %src1.addr, align 8, !dbg !13610
  %12 = load i64*, i64** %src2.addr, align 8, !dbg !13611
  %13 = load i32, i32* %nbits.addr, align 4, !dbg !13612
  %call = call i32 @__bitmap_and(i64* %10, i64* %11, i64* %12, i32 %13) #10, !dbg !13613
  store i32 %call, i32* %retval, align 4, !dbg !13614
  br label %return, !dbg !13614

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !13615
  ret i32 %14, !dbg !13615
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #7

; Function Attrs: noredzone
declare dso_local i32 @__bitmap_and(i64*, i64*, i64*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mii_adv_mod_linkmode_adv_t(i64* %advertising, i32 %adv) #0 !dbg !13616 {
entry:
  %advertising.addr = alloca i64*, align 8
  %adv.addr = alloca i32, align 4
  store i64* %advertising, i64** %advertising.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %advertising.addr, metadata !13617, metadata !DIExpression()), !dbg !13618
  store i32 %adv, i32* %adv.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %adv.addr, metadata !13619, metadata !DIExpression()), !dbg !13620
  %0 = load i64*, i64** %advertising.addr, align 8, !dbg !13621
  %1 = load i32, i32* %adv.addr, align 4, !dbg !13622
  %and = and i32 %1, 32, !dbg !13623
  call void @linkmode_mod_bit(i32 0, i64* %0, i32 %and) #10, !dbg !13624
  %2 = load i64*, i64** %advertising.addr, align 8, !dbg !13625
  %3 = load i32, i32* %adv.addr, align 4, !dbg !13626
  %and1 = and i32 %3, 64, !dbg !13627
  call void @linkmode_mod_bit(i32 1, i64* %2, i32 %and1) #10, !dbg !13628
  %4 = load i64*, i64** %advertising.addr, align 8, !dbg !13629
  %5 = load i32, i32* %adv.addr, align 4, !dbg !13630
  %and2 = and i32 %5, 128, !dbg !13631
  call void @linkmode_mod_bit(i32 2, i64* %4, i32 %and2) #10, !dbg !13632
  %6 = load i64*, i64** %advertising.addr, align 8, !dbg !13633
  %7 = load i32, i32* %adv.addr, align 4, !dbg !13634
  %and3 = and i32 %7, 256, !dbg !13635
  call void @linkmode_mod_bit(i32 3, i64* %6, i32 %and3) #10, !dbg !13636
  %8 = load i64*, i64** %advertising.addr, align 8, !dbg !13637
  %9 = load i32, i32* %adv.addr, align 4, !dbg !13638
  %and4 = and i32 %9, 1024, !dbg !13639
  call void @linkmode_mod_bit(i32 13, i64* %8, i32 %and4) #10, !dbg !13640
  %10 = load i64*, i64** %advertising.addr, align 8, !dbg !13641
  %11 = load i32, i32* %adv.addr, align 4, !dbg !13642
  %and5 = and i32 %11, 2048, !dbg !13643
  call void @linkmode_mod_bit(i32 14, i64* %10, i32 %and5) #10, !dbg !13644
  ret void, !dbg !13645
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_zero(i64* %dst, i32 %nbits) #0 !dbg !13646 {
entry:
  %dst.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !13649, metadata !DIExpression()), !dbg !13650
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !13651, metadata !DIExpression()), !dbg !13652
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13653, metadata !DIExpression()), !dbg !13654
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !13655
  %conv = zext i32 %0 to i64, !dbg !13655
  %add = add i64 %conv, 64, !dbg !13655
  %sub = sub i64 %add, 1, !dbg !13655
  %div = udiv i64 %sub, 64, !dbg !13655
  %mul = mul i64 %div, 8, !dbg !13656
  %conv1 = trunc i64 %mul to i32, !dbg !13655
  store i32 %conv1, i32* %len, align 4, !dbg !13654
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !13657
  %2 = bitcast i64* %1 to i8*, !dbg !13658
  %3 = load i32, i32* %len, align 4, !dbg !13659
  %conv2 = zext i32 %3 to i64, !dbg !13659
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 %conv2, i1 false), !dbg !13658
  ret void, !dbg !13660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_add_us(i64 %kt, i64 %usec) #0 !dbg !13661 {
entry:
  %kt.addr = alloca i64, align 8
  %usec.addr = alloca i64, align 8
  store i64 %kt, i64* %kt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %kt.addr, metadata !13666, metadata !DIExpression()), !dbg !13667
  store i64 %usec, i64* %usec.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %usec.addr, metadata !13668, metadata !DIExpression()), !dbg !13669
  %0 = load i64, i64* %kt.addr, align 8, !dbg !13670
  %1 = load i64, i64* %usec.addr, align 8, !dbg !13670
  %mul = mul i64 %1, 1000, !dbg !13670
  %add = add i64 %0, %mul, !dbg !13670
  ret i64 %add, !dbg !13671
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get() #2

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ktime_compare(i64 %cmp1, i64 %cmp2) #0 !dbg !13672 {
entry:
  %retval = alloca i32, align 4
  %cmp1.addr = alloca i64, align 8
  %cmp2.addr = alloca i64, align 8
  store i64 %cmp1, i64* %cmp1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp1.addr, metadata !13675, metadata !DIExpression()), !dbg !13676
  store i64 %cmp2, i64* %cmp2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp2.addr, metadata !13677, metadata !DIExpression()), !dbg !13678
  %0 = load i64, i64* %cmp1.addr, align 8, !dbg !13679
  %1 = load i64, i64* %cmp2.addr, align 8, !dbg !13681
  %cmp = icmp slt i64 %0, %1, !dbg !13682
  br i1 %cmp, label %if.then, label %if.end, !dbg !13683

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !13684
  br label %return, !dbg !13684

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %cmp1.addr, align 8, !dbg !13685
  %3 = load i64, i64* %cmp2.addr, align 8, !dbg !13687
  %cmp3 = icmp sgt i64 %2, %3, !dbg !13688
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !13689

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !13690
  br label %return, !dbg !13690

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13691
  br label %return, !dbg !13691

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !13692
  ret i32 %4, !dbg !13692
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__clear_bit(i64 %nr, i64* %addr) #0 !dbg !13693 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13697, metadata !DIExpression()), !dbg !13699
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13701, metadata !DIExpression()), !dbg !13702
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !13703, metadata !DIExpression()), !dbg !13705
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13707, metadata !DIExpression()), !dbg !13708
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13709, metadata !DIExpression()), !dbg !13710
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13711, metadata !DIExpression()), !dbg !13712
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13713
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13714
  %div = sdiv i64 %1, 64, !dbg !13714
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13715
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13713
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13716
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13717
  %conv.i = trunc i64 %4 to i32, !dbg !13717
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !13718
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13719
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13719
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #12, !dbg !13719
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13720
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !13721
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !13722
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !13723
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #5, !dbg !13724, !srcloc !13725
  ret void, !dbg !13726
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bitmap_copy(i64* %dst, i64* %src, i32 %nbits) #0 !dbg !13727 {
entry:
  %dst.addr = alloca i64*, align 8
  %src.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  %len = alloca i32, align 4
  store i64* %dst, i64** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dst.addr, metadata !13730, metadata !DIExpression()), !dbg !13731
  store i64* %src, i64** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src.addr, metadata !13732, metadata !DIExpression()), !dbg !13733
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !13734, metadata !DIExpression()), !dbg !13735
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13736, metadata !DIExpression()), !dbg !13737
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !13738
  %conv = zext i32 %0 to i64, !dbg !13738
  %add = add i64 %conv, 64, !dbg !13738
  %sub = sub i64 %add, 1, !dbg !13738
  %div = udiv i64 %sub, 64, !dbg !13738
  %mul = mul i64 %div, 8, !dbg !13739
  %conv1 = trunc i64 %mul to i32, !dbg !13738
  store i32 %conv1, i32* %len, align 4, !dbg !13737
  %1 = load i64*, i64** %dst.addr, align 8, !dbg !13740
  %2 = bitcast i64* %1 to i8*, !dbg !13741
  %3 = load i64*, i64** %src.addr, align 8, !dbg !13742
  %4 = bitcast i64* %3 to i8*, !dbg !13741
  %5 = load i32, i32* %len, align 4, !dbg !13743
  %conv2 = zext i32 %5 to i64, !dbg !13743
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %4, i64 %conv2, i1 false), !dbg !13741
  ret void, !dbg !13744
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #0 !dbg !13745 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13746, metadata !DIExpression()), !dbg !13748
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13750, metadata !DIExpression()), !dbg !13751
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !13703, metadata !DIExpression()), !dbg !13752
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13707, metadata !DIExpression()), !dbg !13754
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13755, metadata !DIExpression()), !dbg !13756
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13757, metadata !DIExpression()), !dbg !13758
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13759
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13760
  %div = sdiv i64 %1, 64, !dbg !13760
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13761
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13759
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13762
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13763
  %conv.i = trunc i64 %4 to i32, !dbg !13763
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !13764
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13765
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13765
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #12, !dbg !13765
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13766
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !13767
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !13768
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !13769
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #5, !dbg !13770, !srcloc !13771
  ret void, !dbg !13772
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bitmap_equal(i64* %src1, i64* %src2, i32 %nbits) #0 !dbg !13773 {
entry:
  %retval = alloca i32, align 4
  %src1.addr = alloca i64*, align 8
  %src2.addr = alloca i64*, align 8
  %nbits.addr = alloca i32, align 4
  store i64* %src1, i64** %src1.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src1.addr, metadata !13776, metadata !DIExpression()), !dbg !13777
  store i64* %src2, i64** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %src2.addr, metadata !13778, metadata !DIExpression()), !dbg !13779
  store i32 %nbits, i32* %nbits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr, metadata !13780, metadata !DIExpression()), !dbg !13781
  %0 = load i32, i32* %nbits.addr, align 4, !dbg !13782
  %1 = call i1 @llvm.is.constant.i32(i32 %0), !dbg !13782
  br i1 %1, label %land.lhs.true, label %if.end, !dbg !13782

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %nbits.addr, align 4, !dbg !13782
  %cmp = icmp ule i32 %2, 64, !dbg !13782
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !13782

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %nbits.addr, align 4, !dbg !13782
  %cmp2 = icmp ugt i32 %3, 0, !dbg !13782
  br i1 %cmp2, label %if.then, label %if.end, !dbg !13784

if.then:                                          ; preds = %land.lhs.true1
  %4 = load i64*, i64** %src1.addr, align 8, !dbg !13785
  %5 = load i64, i64* %4, align 8, !dbg !13786
  %6 = load i64*, i64** %src2.addr, align 8, !dbg !13787
  %7 = load i64, i64* %6, align 8, !dbg !13788
  %xor = xor i64 %5, %7, !dbg !13789
  %8 = load i32, i32* %nbits.addr, align 4, !dbg !13790
  %sub = sub i32 0, %8, !dbg !13790
  %and = and i32 %sub, 63, !dbg !13790
  %sh_prom = zext i32 %and to i64, !dbg !13790
  %shr = lshr i64 -1, %sh_prom, !dbg !13790
  %and3 = and i64 %xor, %shr, !dbg !13791
  %tobool = icmp ne i64 %and3, 0, !dbg !13792
  %lnot = xor i1 %tobool, true, !dbg !13792
  %lnot.ext = zext i1 %lnot to i32, !dbg !13792
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !13793
  br label %return, !dbg !13793

if.end:                                           ; preds = %land.lhs.true1, %land.lhs.true, %entry
  %9 = load i32, i32* %nbits.addr, align 4, !dbg !13794
  %and4 = and i32 %9, 7, !dbg !13796
  %10 = call i1 @llvm.is.constant.i32(i32 %and4), !dbg !13797
  br i1 %10, label %land.lhs.true5, label %if.end12, !dbg !13798

land.lhs.true5:                                   ; preds = %if.end
  %11 = load i32, i32* %nbits.addr, align 4, !dbg !13799
  %and6 = and i32 %11, 7, !dbg !13799
  %cmp7 = icmp eq i32 %and6, 0, !dbg !13799
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !13800

if.then8:                                         ; preds = %land.lhs.true5
  %12 = load i64*, i64** %src1.addr, align 8, !dbg !13801
  %13 = bitcast i64* %12 to i8*, !dbg !13801
  %14 = load i64*, i64** %src2.addr, align 8, !dbg !13802
  %15 = bitcast i64* %14 to i8*, !dbg !13802
  %16 = load i32, i32* %nbits.addr, align 4, !dbg !13803
  %div = udiv i32 %16, 8, !dbg !13804
  %conv = zext i32 %div to i64, !dbg !13803
  %call = call i32 @memcmp(i8* %13, i8* %15, i64 %conv) #10, !dbg !13805
  %tobool9 = icmp ne i32 %call, 0, !dbg !13806
  %lnot10 = xor i1 %tobool9, true, !dbg !13806
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !13806
  store i32 %lnot.ext11, i32* %retval, align 4, !dbg !13807
  br label %return, !dbg !13807

if.end12:                                         ; preds = %land.lhs.true5, %if.end
  %17 = load i64*, i64** %src1.addr, align 8, !dbg !13808
  %18 = load i64*, i64** %src2.addr, align 8, !dbg !13809
  %19 = load i32, i32* %nbits.addr, align 4, !dbg !13810
  %call13 = call i32 @__bitmap_equal(i64* %17, i64* %18, i32 %19) #10, !dbg !13811
  store i32 %call13, i32* %retval, align 4, !dbg !13812
  br label %return, !dbg !13812

return:                                           ; preds = %if.end12, %if.then8, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !13813
  ret i32 %20, !dbg !13813
}

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @__bitmap_equal(i64*, i64*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !13814 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !13817, metadata !DIExpression()), !dbg !13819
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !13821, metadata !DIExpression()), !dbg !13822
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !13823, metadata !DIExpression()), !dbg !13824
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13825, metadata !DIExpression()), !dbg !13827
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13829, metadata !DIExpression()), !dbg !13830
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !13831, metadata !DIExpression()), !dbg !13833
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13835, metadata !DIExpression()), !dbg !13836
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13837, metadata !DIExpression()), !dbg !13838
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13839, metadata !DIExpression()), !dbg !13840
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13841
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13842
  %div = sdiv i64 %1, 64, !dbg !13842
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13843
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13841
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13844
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13845
  %conv.i = trunc i64 %4 to i32, !dbg !13845
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #12, !dbg !13846
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13847
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13847
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !13847
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13848
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !13848
  br i1 %8, label %cond.true, label %cond.false, !dbg !13848

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !13848
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !13848
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !13849
  %and.i = and i64 %11, 63, !dbg !13850
  %shl.i = shl i64 1, %and.i, !dbg !13851
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !13852
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !13853
  %shr.i = ashr i64 %13, 6, !dbg !13854
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !13852
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !13852
  %and1.i = and i64 %shl.i, %14, !dbg !13855
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !13856
  %conv = zext i1 %cmp.i to i32, !dbg !13848
  br label %cond.end, !dbg !13848

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !13848
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !13848
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !13857
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !13858
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #5, !dbg !13859, !srcloc !13860
  store i8 %19, i8* %oldbit.i, align 1, !dbg !13859
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !13861
  %tobool.i = trunc i8 %20 to i1, !dbg !13861
  %conv2 = zext i1 %tobool.i to i32, !dbg !13848
  br label %cond.end, !dbg !13848

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !13848
  %tobool = icmp ne i32 %cond, 0, !dbg !13848
  ret i1 %tobool, !dbg !13862
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !13863 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13864, metadata !DIExpression()), !dbg !13865
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !13866, metadata !DIExpression()), !dbg !13867
  ret i1 true, !dbg !13868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_property_read_u32(%struct.device* %dev, i8* %propname, i32* %val) #0 !dbg !13869 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %propname.addr = alloca i8*, align 8
  %val.addr = alloca i32*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13873, metadata !DIExpression()), !dbg !13874
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !13875, metadata !DIExpression()), !dbg !13876
  store i32* %val, i32** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %val.addr, metadata !13877, metadata !DIExpression()), !dbg !13878
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13879
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !13880
  %2 = load i32*, i32** %val.addr, align 8, !dbg !13881
  %call = call i32 @device_property_read_u32_array(%struct.device* %0, i8* %1, i32* %2, i64 1) #10, !dbg !13882
  ret i32 %call, !dbg !13883
}

; Function Attrs: noredzone
declare dso_local i32 @device_property_read_u32_array(%struct.device*, i8*, i32*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @phy_drv_supports_irq(%struct.phy_driver* %phydrv) #0 !dbg !13884 {
entry:
  %phydrv.addr = alloca %struct.phy_driver*, align 8
  store %struct.phy_driver* %phydrv, %struct.phy_driver** %phydrv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.phy_driver** %phydrv.addr, metadata !13887, metadata !DIExpression()), !dbg !13888
  %0 = load %struct.phy_driver*, %struct.phy_driver** %phydrv.addr, align 8, !dbg !13889
  %config_intr = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %0, i32 0, i32 17, !dbg !13890
  %1 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %config_intr, align 8, !dbg !13890
  %tobool = icmp ne i32 (%struct.phy_device*)* %1, null, !dbg !13889
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13891

land.rhs:                                         ; preds = %entry
  %2 = load %struct.phy_driver*, %struct.phy_driver** %phydrv.addr, align 8, !dbg !13892
  %ack_interrupt = getelementptr inbounds %struct.phy_driver, %struct.phy_driver* %2, i32 0, i32 16, !dbg !13893
  %3 = load i32 (%struct.phy_device*)*, i32 (%struct.phy_device*)** %ack_interrupt, align 8, !dbg !13893
  %tobool1 = icmp ne i32 (%struct.phy_device*)* %3, null, !dbg !13891
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %tobool1, %land.rhs ], !dbg !13894
  ret i1 %4, !dbg !13895
}

; Function Attrs: noredzone
declare dso_local i32 @genphy_c45_pma_read_abilities(%struct.phy_device*) #2

; Function Attrs: noredzone
declare dso_local void @of_set_phy_supported(%struct.phy_device*) #2

; Function Attrs: noredzone
declare dso_local void @of_set_phy_eee_broken(%struct.phy_device*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @cancel_delayed_work_sync(%struct.delayed_work*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sfp_bus_del_upstream(%struct.sfp_bus* %bus) #0 !dbg !13896 {
entry:
  %bus.addr = alloca %struct.sfp_bus*, align 8
  store %struct.sfp_bus* %bus, %struct.sfp_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sfp_bus** %bus.addr, metadata !13897, metadata !DIExpression()), !dbg !13898
  ret void, !dbg !13899
}

; Function Attrs: cold noredzone
declare dso_local i32 @mdio_bus_init() #4 section ".init.text"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @features_init() #0 !dbg !13900 {
entry:
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([3 x i32], [3 x i32]* @phy_basic_ports_array, i64 0, i64 0), i32 3, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_basic_features, i64 0, i64 0)) #10, !dbg !13901
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([4 x i32], [4 x i32]* @phy_10_100_features_array, i64 0, i64 0), i32 4, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_basic_features, i64 0, i64 0)) #10, !dbg !13902
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([2 x i32], [2 x i32]* @phy_basic_t1_features_array, i64 0, i64 0), i32 2, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_basic_t1_features, i64 0, i64 0)) #10, !dbg !13903
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([3 x i32], [3 x i32]* @phy_basic_ports_array, i64 0, i64 0), i32 3, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_gbit_features, i64 0, i64 0)) #10, !dbg !13904
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([4 x i32], [4 x i32]* @phy_10_100_features_array, i64 0, i64 0), i32 4, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_gbit_features, i64 0, i64 0)) #10, !dbg !13905
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([2 x i32], [2 x i32]* @phy_gbit_features_array, i64 0, i64 0), i32 2, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_gbit_features, i64 0, i64 0)) #10, !dbg !13906
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([3 x i32], [3 x i32]* @phy_basic_ports_array, i64 0, i64 0), i32 3, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_gbit_fibre_features, i64 0, i64 0)) #10, !dbg !13907
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([4 x i32], [4 x i32]* @phy_10_100_features_array, i64 0, i64 0), i32 4, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_gbit_fibre_features, i64 0, i64 0)) #10, !dbg !13908
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([2 x i32], [2 x i32]* @phy_gbit_features_array, i64 0, i64 0), i32 2, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_gbit_fibre_features, i64 0, i64 0)) #10, !dbg !13909
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([1 x i32], [1 x i32]* @phy_fibre_port_array, i64 0, i64 0), i32 1, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_gbit_fibre_features, i64 0, i64 0)) #10, !dbg !13910
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([7 x i32], [7 x i32]* @phy_all_ports_features_array, i64 0, i64 0), i32 7, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_gbit_all_ports_features, i64 0, i64 0)) #10, !dbg !13911
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([4 x i32], [4 x i32]* @phy_10_100_features_array, i64 0, i64 0), i32 4, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_gbit_all_ports_features, i64 0, i64 0)) #10, !dbg !13912
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([2 x i32], [2 x i32]* @phy_gbit_features_array, i64 0, i64 0), i32 2, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_gbit_all_ports_features, i64 0, i64 0)) #10, !dbg !13913
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([7 x i32], [7 x i32]* @phy_all_ports_features_array, i64 0, i64 0), i32 7, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_10gbit_features, i64 0, i64 0)) #10, !dbg !13914
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([4 x i32], [4 x i32]* @phy_10_100_features_array, i64 0, i64 0), i32 4, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_10gbit_features, i64 0, i64 0)) #10, !dbg !13915
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([2 x i32], [2 x i32]* @phy_gbit_features_array, i64 0, i64 0), i32 2, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_10gbit_features, i64 0, i64 0)) #10, !dbg !13916
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([1 x i32], [1 x i32]* @phy_10gbit_features_array, i64 0, i64 0), i32 1, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_10gbit_features, i64 0, i64 0)) #10, !dbg !13917
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([7 x i32], [7 x i32]* @phy_all_ports_features_array, i64 0, i64 0), i32 7, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_10gbit_full_features, i64 0, i64 0)) #10, !dbg !13918
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([4 x i32], [4 x i32]* @phy_10gbit_full_features_array, i64 0, i64 0), i32 4, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_10gbit_full_features, i64 0, i64 0)) #10, !dbg !13919
  call void @linkmode_set_bit_array(i32* getelementptr inbounds ([1 x i32], [1 x i32]* @phy_10gbit_fec_features_array, i64 0, i64 0), i32 1, i64* getelementptr inbounds ([2 x i64], [2 x i64]* @phy_10gbit_fec_features, i64 0, i64 0)) #10, !dbg !13920
  ret void, !dbg !13921
}

; Function Attrs: noredzone
declare dso_local i32 @phy_ethtool_get_sset_count(%struct.phy_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @phy_ethtool_get_strings(%struct.phy_device*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @phy_ethtool_get_stats(%struct.phy_device*, %struct.ethtool_stats*, i64*) #2

; Function Attrs: noredzone
declare dso_local i32 @phy_start_cable_test(%struct.phy_device*, %struct.netlink_ext_ack*) #2

; Function Attrs: noredzone
declare dso_local i32 @phy_start_cable_test_tdr(%struct.phy_device*, %struct.netlink_ext_ack*, %struct.phy_tdr_config*) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone willreturn }
attributes #8 = { nounwind willreturn }
attributes #9 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noredzone }
attributes #11 = { noredzone nounwind readnone }
attributes #12 = { noredzone nounwind }
attributes #13 = { cold noredzone }
attributes #14 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!7689, !7690, !7691, !7692}
!llvm.ident = !{!7693}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description316", scope: !2, file: !3, line: 36, type: !7686, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !7540, globals: !7557, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/phy/phy_device.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !57, !64, !95, !129, !170, !177, !208, !221, !229, !235, !242, !246, !250, !257, !263, !6491, !4287, !4382, !5049, !5068, !6197, !6627, !6707, !6783, !6791, !7064, !7084, !7154, !7258, !7270, !7395, !7426, !7431, !7526, !7533}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !31, line: 115, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!32 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!33 = !{!34, !35, !36}
!34 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!35 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!36 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !31, line: 836, baseType: !7, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56}
!39 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!40 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!41 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!42 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!43 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!44 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!45 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!46 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!47 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!48 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!49 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!50 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!51 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!52 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!53 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!54 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!55 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!56 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !31, line: 860, baseType: !7, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62, !63}
!59 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !65, line: 369, baseType: !7, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94}
!67 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!71 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!72 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!73 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!74 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!75 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!76 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!77 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!78 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!79 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!80 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!81 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!82 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!83 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!84 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!85 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!86 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!87 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!88 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!89 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!90 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!91 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!92 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!93 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!94 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !96, line: 170, baseType: !7, size: 32, elements: !97)
!96 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128}
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!109 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!110 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!111 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!112 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!113 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !96, line: 204, baseType: !7, size: 32, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169}
!131 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!143 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!144 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!145 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!146 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!147 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!148 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!149 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!150 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!151 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!152 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!153 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!154 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!155 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!156 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!157 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!158 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!159 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!160 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!161 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!162 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!163 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!164 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!165 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!166 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!167 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!168 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!169 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !65, line: 578, baseType: !7, size: 32, elements: !171)
!171 = !{!172, !173, !174, !175, !176}
!172 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!173 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!174 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!175 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!176 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!177 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !96, line: 130, baseType: !7, size: 32, elements: !178)
!178 = !{!179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207}
!179 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!182 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!183 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!184 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!208 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !209, line: 585, baseType: !7, size: 32, elements: !210)
!209 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!210 = !{!211, !212, !213, !214, !215, !216, !217, !218, !219, !220}
!211 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!212 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!213 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!214 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!215 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!216 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!217 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!218 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!219 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!220 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !209, line: 602, baseType: !7, size: 32, elements: !222)
!222 = !{!223, !224, !225, !226, !227, !228}
!223 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!224 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!225 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!226 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!227 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!228 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !209, line: 615, baseType: !7, size: 32, elements: !230)
!230 = !{!231, !232, !233, !234}
!231 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!232 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!233 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!234 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!235 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !209, line: 626, baseType: !7, size: 32, elements: !236)
!236 = !{!237, !238, !239, !240, !241}
!237 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!238 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!239 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!240 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!241 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !209, line: 638, baseType: !7, size: 32, elements: !243)
!243 = !{!244, !245}
!244 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!245 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !209, line: 647, baseType: !7, size: 32, elements: !247)
!247 = !{!248, !249}
!248 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!249 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!250 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !251, line: 54, baseType: !7, size: 32, elements: !252)
!251 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!252 = !{!253, !254, !255, !256}
!253 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!254 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!255 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!256 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!257 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !31, line: 423, baseType: !7, size: 32, elements: !258)
!258 = !{!259, !260, !261, !262}
!259 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!260 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!261 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!262 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!263 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2085, baseType: !7, size: 32, elements: !7388)
!264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !31, line: 1858, size: 15808, elements: !265)
!265 = !{!266, !271, !294, !311, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !328, !336, !337, !338, !339, !340, !341, !342, !343, !344, !370, !380, !381, !382, !387, !388, !392, !395, !5517, !6033, !6037, !6077, !6078, !6079, !6080, !6081, !6082, !6083, !6084, !6085, !6086, !6087, !6088, !6089, !6090, !6091, !6092, !6093, !6094, !6095, !6096, !6097, !6098, !6099, !6100, !6101, !6102, !6103, !6108, !6109, !6110, !6392, !6393, !6394, !6395, !6398, !6401, !6404, !6407, !6410, !6411, !6424, !6425, !6426, !6427, !6428, !6429, !6436, !6437, !6471, !6472, !6473, !6474, !6475, !6476, !6477, !6478, !6479, !6482, !6483, !6484, !6485, !6486, !6487, !6488, !6489, !6490, !6495, !6496, !6497, !6502, !6539, !7001, !7003, !7004, !7008, !7009, !7010, !7011, !7017, !7019, !7366, !7367, !7369, !7370, !7371, !7372, !7373, !7377, !7380}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !264, file: !31, line: 1859, baseType: !267, size: 128)
!267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 128, elements: !269)
!268 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!269 = !{!270}
!270 = !DISubrange(count: 16)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !264, file: !31, line: 1860, baseType: !272, size: 64, offset: 128)
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !31, line: 938, size: 384, elements: !274)
!274 = !{!275, !283, !289, !291}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !273, file: !31, line: 939, baseType: !276, size: 128)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !277, line: 186, size: 128, elements: !278)
!277 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!278 = !{!279, !281}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !276, file: !277, line: 187, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !276, file: !277, line: 187, baseType: !282, size: 64, offset: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !273, file: !31, line: 940, baseType: !284, size: 128, offset: 128)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !277, line: 178, size: 128, elements: !285)
!285 = !{!286, !288}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !284, file: !277, line: 179, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !284, file: !277, line: 179, baseType: !287, size: 64, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !273, file: !31, line: 941, baseType: !290, size: 64, offset: 256)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !273, file: !31, line: 942, baseType: !292, size: 64, offset: 320)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !268)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !264, file: !31, line: 1861, baseType: !295, size: 64, offset: 192)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !31, line: 930, size: 128, elements: !297)
!297 = !{!298, !307}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !296, file: !31, line: 931, baseType: !299, size: 128, align: 64)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !277, line: 216, size: 128, align: 64, elements: !300)
!300 = !{!301, !303}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !299, file: !277, line: 217, baseType: !302, size: 64)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !299, file: !277, line: 218, baseType: !304, size: 64, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{null, !302}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !296, file: !31, line: 932, baseType: !308, offset: 128)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, elements: !309)
!309 = !{!310}
!310 = !DISubrange(count: -1)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !264, file: !31, line: 1866, baseType: !312, size: 64, offset: 256)
!312 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !264, file: !31, line: 1867, baseType: !312, size: 64, offset: 320)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !264, file: !31, line: 1868, baseType: !312, size: 64, offset: 384)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !264, file: !31, line: 1869, baseType: !32, size: 32, offset: 448)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !264, file: !31, line: 1877, baseType: !312, size: 64, offset: 512)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !264, file: !31, line: 1879, baseType: !284, size: 128, offset: 576)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !264, file: !31, line: 1880, baseType: !284, size: 128, offset: 704)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !264, file: !31, line: 1881, baseType: !284, size: 128, offset: 832)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !264, file: !31, line: 1882, baseType: !284, size: 128, offset: 960)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !264, file: !31, line: 1883, baseType: !284, size: 128, offset: 1088)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !264, file: !31, line: 1884, baseType: !284, size: 128, offset: 1216)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !264, file: !31, line: 1889, baseType: !324, size: 256, offset: 1344)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !264, file: !31, line: 1886, size: 256, elements: !325)
!325 = !{!326, !327}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !324, file: !31, line: 1887, baseType: !284, size: 128)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !324, file: !31, line: 1888, baseType: !284, size: 128, offset: 128)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !264, file: !31, line: 1891, baseType: !329, size: 64, offset: 1600)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !330, line: 12, baseType: !331)
!330 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !332, line: 23, baseType: !333)
!332 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !334, line: 31, baseType: !335)
!334 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!335 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !264, file: !31, line: 1892, baseType: !329, size: 64, offset: 1664)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !264, file: !31, line: 1893, baseType: !329, size: 64, offset: 1728)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !264, file: !31, line: 1894, baseType: !329, size: 64, offset: 1792)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !264, file: !31, line: 1895, baseType: !329, size: 64, offset: 1856)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !264, file: !31, line: 1896, baseType: !329, size: 64, offset: 1920)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !264, file: !31, line: 1897, baseType: !329, size: 64, offset: 1984)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !264, file: !31, line: 1899, baseType: !32, size: 32, offset: 2048)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !264, file: !31, line: 1900, baseType: !32, size: 32, offset: 2080)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !264, file: !31, line: 1902, baseType: !345, size: 1472, offset: 2112)
!345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !31, line: 169, size: 1472, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !345, file: !31, line: 170, baseType: !312, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !345, file: !31, line: 171, baseType: !312, size: 64, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !345, file: !31, line: 172, baseType: !312, size: 64, offset: 128)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !345, file: !31, line: 173, baseType: !312, size: 64, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !345, file: !31, line: 174, baseType: !312, size: 64, offset: 256)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !345, file: !31, line: 175, baseType: !312, size: 64, offset: 320)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !345, file: !31, line: 176, baseType: !312, size: 64, offset: 384)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !345, file: !31, line: 177, baseType: !312, size: 64, offset: 448)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !345, file: !31, line: 178, baseType: !312, size: 64, offset: 512)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !345, file: !31, line: 179, baseType: !312, size: 64, offset: 576)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !345, file: !31, line: 180, baseType: !312, size: 64, offset: 640)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !345, file: !31, line: 181, baseType: !312, size: 64, offset: 704)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !345, file: !31, line: 182, baseType: !312, size: 64, offset: 768)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !345, file: !31, line: 183, baseType: !312, size: 64, offset: 832)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !345, file: !31, line: 184, baseType: !312, size: 64, offset: 896)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !345, file: !31, line: 185, baseType: !312, size: 64, offset: 960)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !345, file: !31, line: 186, baseType: !312, size: 64, offset: 1024)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !345, file: !31, line: 187, baseType: !312, size: 64, offset: 1088)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !345, file: !31, line: 188, baseType: !312, size: 64, offset: 1152)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !345, file: !31, line: 189, baseType: !312, size: 64, offset: 1216)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !345, file: !31, line: 190, baseType: !312, size: 64, offset: 1280)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !345, file: !31, line: 191, baseType: !312, size: 64, offset: 1344)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !345, file: !31, line: 192, baseType: !312, size: 64, offset: 1408)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !264, file: !31, line: 1904, baseType: !371, size: 64, offset: 3584)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !372, line: 13, baseType: !373)
!372 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !277, line: 175, baseType: !374)
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 173, size: 64, elements: !375)
!375 = !{!376}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !374, file: !277, line: 174, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !332, line: 22, baseType: !378)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !334, line: 30, baseType: !379)
!379 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !264, file: !31, line: 1905, baseType: !371, size: 64, offset: 3648)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !264, file: !31, line: 1906, baseType: !371, size: 64, offset: 3712)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !264, file: !31, line: 1909, baseType: !383, size: 32, offset: 3776)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !277, line: 168, baseType: !384)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !277, line: 166, size: 32, elements: !385)
!385 = !{!386}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !384, file: !277, line: 167, baseType: !32, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !264, file: !31, line: 1910, baseType: !383, size: 32, offset: 3808)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !264, file: !31, line: 1913, baseType: !389, size: 64, offset: 3840)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !391)
!391 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !31, line: 1913, flags: DIFlagFwdDecl)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !264, file: !31, line: 1914, baseType: !393, size: 64, offset: 3904)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !31, line: 1914, flags: DIFlagFwdDecl)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !264, file: !31, line: 1916, baseType: !396, size: 64, offset: 3968)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !31, line: 1283, size: 4416, elements: !399)
!399 = !{!400, !404, !408, !409, !410, !573, !577, !582, !586, !587, !592, !593, !716, !721, !725, !731, !735, !767, !775, !779, !784, !788, !789, !795, !799, !803, !807, !808, !830, !834, !849, !860, !864, !873, !877, !878, !882, !903, !907, !911, !915, !919, !926, !930, !948, !952, !1002, !1006, !1011, !1015, !1019, !1023, !1033, !1034, !1043, !1049, !1050, !1054, !1058, !1062, !1066, !1067, !1071, !1072, !5477, !5497, !5501, !5507, !5513}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !398, file: !31, line: 1284, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !402, size: 64)
!402 = !DISubroutineType(types: !403)
!403 = !{!32, !290}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !398, file: !31, line: 1285, baseType: !405, size: 64, offset: 64)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DISubroutineType(types: !407)
!407 = !{null, !290}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !398, file: !31, line: 1286, baseType: !401, size: 64, offset: 128)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !398, file: !31, line: 1287, baseType: !401, size: 64, offset: 192)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !398, file: !31, line: 1288, baseType: !411, size: 64, offset: 256)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!412 = !DISubroutineType(types: !413)
!413 = !{!414, !415, !290}
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !31, line: 120, baseType: !30)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !417, line: 713, size: 1600, elements: !418)
!417 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!418 = !{!419, !441, !449, !456, !460, !472, !473, !474, !477, !478, !479, !485, !486, !487, !488, !489, !490, !491, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !531, !532, !533, !534, !536, !537, !542, !547, !552, !553, !554, !555, !556, !557, !558, !559, !560, !562, !563, !565, !566, !567}
!419 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 714, baseType: !420, size: 192)
!420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 714, size: 192, elements: !421)
!421 = !{!422, !432, !440}
!422 = !DIDerivedType(tag: DW_TAG_member, scope: !420, file: !417, line: 715, baseType: !423, size: 192)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !420, file: !417, line: 715, size: 192, elements: !424)
!424 = !{!425, !426, !427}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !423, file: !417, line: 717, baseType: !415, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !423, file: !417, line: 718, baseType: !415, size: 64, offset: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, scope: !423, file: !417, line: 720, baseType: !428, size: 64, offset: 128)
!428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !423, file: !417, line: 720, size: 64, elements: !429)
!429 = !{!430, !431}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !428, file: !417, line: 721, baseType: !290, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !428, file: !417, line: 726, baseType: !312, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !420, file: !417, line: 729, baseType: !433, size: 192, align: 64)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !434, line: 24, size: 192, align: 64, elements: !435)
!434 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!435 = !{!436, !437, !439}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !433, file: !434, line: 25, baseType: !312, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !433, file: !434, line: 26, baseType: !438, size: 64, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !433, file: !434, line: 27, baseType: !438, size: 64, offset: 128)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !420, file: !417, line: 730, baseType: !284, size: 128)
!441 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 733, baseType: !442, size: 64, offset: 192)
!442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 733, size: 64, elements: !443)
!443 = !{!444, !448}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !442, file: !417, line: 734, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !447, line: 124, flags: DIFlagFwdDecl)
!447 = !DIFile(filename: "./include/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!448 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !442, file: !417, line: 735, baseType: !32, size: 32)
!449 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 738, baseType: !450, size: 64, offset: 256)
!450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 738, size: 64, elements: !451)
!451 = !{!452, !455}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !450, file: !417, line: 739, baseType: !453, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !454, line: 29, baseType: !377)
!454 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!455 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !450, file: !417, line: 740, baseType: !331, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !416, file: !417, line: 748, baseType: !457, size: 384, align: 64, offset: 320)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 384, elements: !458)
!458 = !{!459}
!459 = !DISubrange(count: 48)
!460 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 750, baseType: !461, size: 128, offset: 704)
!461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 750, size: 128, elements: !462)
!462 = !{!463, !471}
!463 = !DIDerivedType(tag: DW_TAG_member, scope: !461, file: !417, line: 751, baseType: !464, size: 128)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !461, file: !417, line: 751, size: 128, elements: !465)
!465 = !{!466, !467}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !464, file: !417, line: 752, baseType: !312, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !464, file: !417, line: 753, baseType: !468, size: 64, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DISubroutineType(types: !470)
!470 = !{null, !415}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !461, file: !417, line: 755, baseType: !284, size: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !416, file: !417, line: 761, baseType: !7, size: 32, offset: 832)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !416, file: !417, line: 762, baseType: !7, size: 32, offset: 864)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !416, file: !417, line: 763, baseType: !475, size: 16, offset: 896)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !334, line: 24, baseType: !476)
!476 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !416, file: !417, line: 764, baseType: !475, size: 16, offset: 912)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !416, file: !417, line: 769, baseType: !475, size: 16, offset: 928)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !416, file: !417, line: 780, baseType: !480, offset: 944)
!480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, elements: !483)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !334, line: 21, baseType: !482)
!482 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!483 = !{!484}
!484 = !DISubrange(count: 0)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !416, file: !417, line: 782, baseType: !481, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !416, file: !417, line: 783, baseType: !481, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !416, file: !417, line: 784, baseType: !481, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !416, file: !417, line: 785, baseType: !481, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !416, file: !417, line: 786, baseType: !481, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !416, file: !417, line: 787, baseType: !481, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !416, file: !417, line: 795, baseType: !492, offset: 960)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, elements: !483)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !334, line: 27, baseType: !7)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !416, file: !417, line: 807, baseType: !480, offset: 960)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !416, file: !417, line: 809, baseType: !481, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !416, file: !417, line: 810, baseType: !481, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !416, file: !417, line: 811, baseType: !481, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !416, file: !417, line: 812, baseType: !481, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !416, file: !417, line: 813, baseType: !481, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !416, file: !417, line: 815, baseType: !481, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !416, file: !417, line: 816, baseType: !481, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !416, file: !417, line: 817, baseType: !481, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !416, file: !417, line: 818, baseType: !481, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !416, file: !417, line: 819, baseType: !481, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !416, file: !417, line: 821, baseType: !481, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !416, file: !417, line: 822, baseType: !481, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !416, file: !417, line: 823, baseType: !481, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !416, file: !417, line: 832, baseType: !480, offset: 976)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !416, file: !417, line: 834, baseType: !481, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !416, file: !417, line: 835, baseType: !481, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !416, file: !417, line: 836, baseType: !481, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !416, file: !417, line: 837, baseType: !481, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !416, file: !417, line: 838, baseType: !481, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !416, file: !417, line: 840, baseType: !481, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !416, file: !417, line: 843, baseType: !481, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !416, file: !417, line: 844, baseType: !481, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !416, file: !417, line: 845, baseType: !481, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !416, file: !417, line: 847, baseType: !481, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !416, file: !417, line: 848, baseType: !481, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!520 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 866, baseType: !521, size: 32, offset: 992)
!521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 866, size: 32, elements: !522)
!522 = !{!523, !526}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !521, file: !417, line: 867, baseType: !524, size: 32)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !525, line: 37, baseType: !493)
!525 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!526 = !DIDerivedType(tag: DW_TAG_member, scope: !521, file: !417, line: 868, baseType: !527, size: 32)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !521, file: !417, line: 868, size: 32, elements: !528)
!528 = !{!529, !530}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !527, file: !417, line: 869, baseType: !475, size: 16)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !527, file: !417, line: 870, baseType: !475, size: 16, offset: 16)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !416, file: !417, line: 873, baseType: !493, size: 32, offset: 1024)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !416, file: !417, line: 874, baseType: !32, size: 32, offset: 1056)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !416, file: !417, line: 875, baseType: !493, size: 32, offset: 1088)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !416, file: !417, line: 876, baseType: !535, size: 16, offset: 1120)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !525, line: 30, baseType: !475)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !416, file: !417, line: 877, baseType: !475, size: 16, offset: 1136)
!537 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 879, baseType: !538, size: 32, offset: 1152)
!538 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 879, size: 32, elements: !539)
!539 = !{!540, !541}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !538, file: !417, line: 880, baseType: !7, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !538, file: !417, line: 881, baseType: !7, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 888, baseType: !543, size: 32, offset: 1184)
!543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 888, size: 32, elements: !544)
!544 = !{!545, !546}
!545 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !543, file: !417, line: 889, baseType: !493, size: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !543, file: !417, line: 890, baseType: !493, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, scope: !416, file: !417, line: 893, baseType: !548, size: 16, offset: 1216)
!548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !416, file: !417, line: 893, size: 16, elements: !549)
!549 = !{!550, !551}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !548, file: !417, line: 894, baseType: !535, size: 16)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !548, file: !417, line: 895, baseType: !481, size: 8)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !416, file: !417, line: 898, baseType: !475, size: 16, offset: 1232)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !416, file: !417, line: 899, baseType: !475, size: 16, offset: 1248)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !416, file: !417, line: 900, baseType: !475, size: 16, offset: 1264)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !416, file: !417, line: 902, baseType: !535, size: 16, offset: 1280)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !416, file: !417, line: 903, baseType: !475, size: 16, offset: 1296)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !416, file: !417, line: 904, baseType: !475, size: 16, offset: 1312)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !416, file: !417, line: 905, baseType: !475, size: 16, offset: 1328)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !416, file: !417, line: 908, baseType: !492, offset: 1344)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !416, file: !417, line: 912, baseType: !561, size: 32, offset: 1344)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !417, line: 606, baseType: !7)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !416, file: !417, line: 913, baseType: !561, size: 32, offset: 1376)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !416, file: !417, line: 914, baseType: !564, size: 64, offset: 1408)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !416, file: !417, line: 915, baseType: !564, size: 64, offset: 1472)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !416, file: !417, line: 916, baseType: !7, size: 32, offset: 1536)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !416, file: !417, line: 917, baseType: !568, size: 32, offset: 1568)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !569, line: 113, baseType: !570)
!569 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !569, line: 111, size: 32, elements: !571)
!571 = !{!572}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !570, file: !569, line: 112, baseType: !383, size: 32)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !398, file: !31, line: 1290, baseType: !574, size: 64, offset: 320)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!329, !415, !290, !329}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !398, file: !31, line: 1293, baseType: !578, size: 64, offset: 384)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DISubroutineType(types: !580)
!580 = !{!581, !290, !415, !290}
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !332, line: 19, baseType: !475)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !398, file: !31, line: 1296, baseType: !583, size: 64, offset: 448)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DISubroutineType(types: !585)
!585 = !{null, !290, !32}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !398, file: !31, line: 1298, baseType: !405, size: 64, offset: 512)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !398, file: !31, line: 1299, baseType: !588, size: 64, offset: 576)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!32, !290, !591}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !398, file: !31, line: 1301, baseType: !401, size: 64, offset: 640)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !398, file: !31, line: 1302, baseType: !594, size: 64, offset: 704)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DISubroutineType(types: !596)
!596 = !{!32, !290, !597, !32}
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !599, line: 234, size: 320, elements: !600)
!599 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!600 = !{!601, !605}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !598, file: !599, line: 239, baseType: !602, size: 128)
!602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 236, size: 128, elements: !603)
!603 = !{!604}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !602, file: !599, line: 238, baseType: !267, size: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !598, file: !599, line: 255, baseType: !606, size: 192, offset: 128)
!606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !598, file: !599, line: 241, size: 192, elements: !607)
!607 = !{!608, !620, !621, !622, !623, !624, !626, !627, !628, !637, !638, !639, !640}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !606, file: !599, line: 242, baseType: !609, size: 128)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !610, line: 32, size: 128, elements: !611)
!610 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!611 = !{!612, !616}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !609, file: !610, line: 33, baseType: !613, size: 16)
!613 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !610, line: 26, baseType: !614)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !615, line: 10, baseType: !476)
!615 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!616 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !609, file: !610, line: 34, baseType: !617, size: 112, offset: 16)
!617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 112, elements: !618)
!618 = !{!619}
!619 = !DISubrange(count: 14)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !606, file: !599, line: 243, baseType: !609, size: 128)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !606, file: !599, line: 244, baseType: !609, size: 128)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !606, file: !599, line: 245, baseType: !609, size: 128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !606, file: !599, line: 246, baseType: !609, size: 128)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !606, file: !599, line: 247, baseType: !625, size: 16)
!625 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !606, file: !599, line: 248, baseType: !32, size: 32)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !606, file: !599, line: 249, baseType: !32, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !606, file: !599, line: 250, baseType: !629, size: 192)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !599, line: 196, size: 192, elements: !630)
!630 = !{!631, !632, !633, !634, !635, !636}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !629, file: !599, line: 197, baseType: !312, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !629, file: !599, line: 198, baseType: !312, size: 64, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !629, file: !599, line: 199, baseType: !476, size: 16, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !629, file: !599, line: 200, baseType: !482, size: 8, offset: 144)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !629, file: !599, line: 201, baseType: !482, size: 8, offset: 152)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !629, file: !599, line: 202, baseType: !482, size: 8, offset: 160)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !606, file: !599, line: 251, baseType: !267, size: 128)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !606, file: !599, line: 252, baseType: !267, size: 128)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !606, file: !599, line: 253, baseType: !591, size: 64)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !606, file: !599, line: 254, baseType: !641, size: 128)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !599, line: 207, size: 128, elements: !642)
!642 = !{!643, !644, !645}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !641, file: !599, line: 208, baseType: !7, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !641, file: !599, line: 209, baseType: !7, size: 32, offset: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !641, file: !599, line: 222, baseType: !646, size: 64, offset: 64)
!646 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !641, file: !599, line: 210, size: 64, elements: !647)
!647 = !{!648, !656, !663, !675, !681, !688, !699, !707}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !646, file: !599, line: 212, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !651, line: 56, baseType: !652)
!651 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 53, size: 32, elements: !653)
!653 = !{!654, !655}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !652, file: !651, line: 54, baseType: !476, size: 16)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !652, file: !651, line: 55, baseType: !476, size: 16, offset: 16)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !646, file: !599, line: 213, baseType: !657, size: 64)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !651, line: 80, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 77, size: 64, elements: !660)
!660 = !{!661, !662}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !659, file: !651, line: 78, baseType: !7, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !659, file: !651, line: 79, baseType: !7, size: 32, offset: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !646, file: !599, line: 214, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !651, line: 66, baseType: !666)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 58, size: 192, elements: !667)
!667 = !{!668, !669, !670, !671, !672, !673, !674}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !666, file: !651, line: 59, baseType: !7, size: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !666, file: !651, line: 60, baseType: !7, size: 32, offset: 32)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !666, file: !651, line: 61, baseType: !7, size: 32, offset: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !666, file: !651, line: 62, baseType: !7, size: 32, offset: 96)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !666, file: !651, line: 63, baseType: !7, size: 32, offset: 128)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !666, file: !651, line: 64, baseType: !476, size: 16, offset: 160)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !666, file: !651, line: 65, baseType: !476, size: 16, offset: 176)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !646, file: !599, line: 215, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !651, line: 70, baseType: !678)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 68, size: 32, elements: !679)
!679 = !{!680}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !678, file: !651, line: 69, baseType: !7, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !646, file: !599, line: 216, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !651, line: 75, baseType: !684)
!684 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 72, size: 160, elements: !685)
!685 = !{!686, !687}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !684, file: !651, line: 73, baseType: !7, size: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !684, file: !651, line: 74, baseType: !267, size: 128, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !646, file: !599, line: 217, baseType: !689, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !651, line: 89, baseType: !691)
!691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 82, size: 192, elements: !692)
!692 = !{!693, !694, !695, !696, !697, !698}
!693 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !691, file: !651, line: 83, baseType: !476, size: 16)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !691, file: !651, line: 84, baseType: !7, size: 32, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !691, file: !651, line: 85, baseType: !7, size: 32, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !691, file: !651, line: 86, baseType: !7, size: 32, offset: 96)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !691, file: !651, line: 87, baseType: !7, size: 32, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !691, file: !651, line: 88, baseType: !7, size: 32, offset: 160)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !646, file: !599, line: 220, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !651, line: 44, baseType: !702)
!702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 40, size: 96, elements: !703)
!703 = !{!704, !705, !706}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !702, file: !651, line: 41, baseType: !7, size: 32)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !702, file: !651, line: 42, baseType: !7, size: 32, offset: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !702, file: !651, line: 43, baseType: !476, size: 16, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !646, file: !599, line: 221, baseType: !708, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !651, line: 51, baseType: !710)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !651, line: 46, size: 128, elements: !711)
!711 = !{!712, !713, !714, !715}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !710, file: !651, line: 47, baseType: !7, size: 32)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !710, file: !651, line: 48, baseType: !7, size: 32, offset: 32)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !710, file: !651, line: 49, baseType: !476, size: 16, offset: 64)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !710, file: !651, line: 50, baseType: !7, size: 32, offset: 96)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !398, file: !31, line: 1304, baseType: !717, size: 64, offset: 768)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{!32, !290, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !398, file: !31, line: 1306, baseType: !722, size: 64, offset: 832)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DISubroutineType(types: !724)
!724 = !{!32, !290, !32}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !398, file: !31, line: 1308, baseType: !726, size: 64, offset: 896)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DISubroutineType(types: !728)
!728 = !{!32, !290, !729}
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !31, line: 206, flags: DIFlagFwdDecl)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !398, file: !31, line: 1310, baseType: !732, size: 64, offset: 960)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = !DISubroutineType(types: !734)
!734 = !{null, !290, !7}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !398, file: !31, line: 1313, baseType: !736, size: 64, offset: 1024)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{null, !290, !739}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !741, line: 214, size: 1536, elements: !742)
!741 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!742 = !{!743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !740, file: !741, line: 215, baseType: !333, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !740, file: !741, line: 216, baseType: !333, size: 64, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !740, file: !741, line: 217, baseType: !333, size: 64, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !740, file: !741, line: 218, baseType: !333, size: 64, offset: 192)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !740, file: !741, line: 219, baseType: !333, size: 64, offset: 256)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !740, file: !741, line: 220, baseType: !333, size: 64, offset: 320)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !740, file: !741, line: 221, baseType: !333, size: 64, offset: 384)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !740, file: !741, line: 222, baseType: !333, size: 64, offset: 448)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !740, file: !741, line: 223, baseType: !333, size: 64, offset: 512)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !740, file: !741, line: 224, baseType: !333, size: 64, offset: 576)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !740, file: !741, line: 227, baseType: !333, size: 64, offset: 640)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !740, file: !741, line: 228, baseType: !333, size: 64, offset: 704)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !740, file: !741, line: 229, baseType: !333, size: 64, offset: 768)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !740, file: !741, line: 230, baseType: !333, size: 64, offset: 832)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !740, file: !741, line: 231, baseType: !333, size: 64, offset: 896)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !740, file: !741, line: 232, baseType: !333, size: 64, offset: 960)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !740, file: !741, line: 235, baseType: !333, size: 64, offset: 1024)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !740, file: !741, line: 236, baseType: !333, size: 64, offset: 1088)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !740, file: !741, line: 237, baseType: !333, size: 64, offset: 1152)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !740, file: !741, line: 238, baseType: !333, size: 64, offset: 1216)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !740, file: !741, line: 239, baseType: !333, size: 64, offset: 1280)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !740, file: !741, line: 242, baseType: !333, size: 64, offset: 1344)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !740, file: !741, line: 243, baseType: !333, size: 64, offset: 1408)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !740, file: !741, line: 244, baseType: !333, size: 64, offset: 1472)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !398, file: !31, line: 1315, baseType: !768, size: 64, offset: 1088)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!771, !773, !32}
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !277, line: 30, baseType: !772)
!772 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !264)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !398, file: !31, line: 1316, baseType: !776, size: 64, offset: 1152)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{!32, !32, !773, !591}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !398, file: !31, line: 1319, baseType: !780, size: 64, offset: 1216)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{!783, !290}
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !398, file: !31, line: 1321, baseType: !785, size: 64, offset: 1280)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DISubroutineType(types: !787)
!787 = !{!32, !290, !535, !581}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !398, file: !31, line: 1323, baseType: !785, size: 64, offset: 1344)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !398, file: !31, line: 1331, baseType: !790, size: 64, offset: 1408)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!32, !290, !32, !793}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !332, line: 17, baseType: !481)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !398, file: !31, line: 1333, baseType: !796, size: 64, offset: 1472)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DISubroutineType(types: !798)
!798 = !{!32, !290, !32, !581, !794, !535}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !398, file: !31, line: 1336, baseType: !800, size: 64, offset: 1536)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{!32, !290, !32, !32, !32}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !398, file: !31, line: 1339, baseType: !804, size: 64, offset: 1600)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DISubroutineType(types: !806)
!806 = !{!32, !290, !32, !771}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !398, file: !31, line: 1341, baseType: !804, size: 64, offset: 1664)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !398, file: !31, line: 1343, baseType: !809, size: 64, offset: 1728)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!32, !290, !32, !812}
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !814, line: 20, size: 576, elements: !815)
!814 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!815 = !{!816, !817, !821, !822, !823, !824, !825, !826, !827, !828, !829}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !813, file: !814, line: 21, baseType: !493, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !813, file: !814, line: 22, baseType: !818, size: 256, offset: 32)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 256, elements: !819)
!819 = !{!820}
!820 = !DISubrange(count: 32)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !813, file: !814, line: 23, baseType: !493, size: 32, offset: 288)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !813, file: !814, line: 24, baseType: !493, size: 32, offset: 320)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !813, file: !814, line: 25, baseType: !493, size: 32, offset: 352)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !813, file: !814, line: 26, baseType: !493, size: 32, offset: 384)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !813, file: !814, line: 27, baseType: !493, size: 32, offset: 416)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !813, file: !814, line: 28, baseType: !493, size: 32, offset: 448)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !813, file: !814, line: 29, baseType: !493, size: 32, offset: 480)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !813, file: !814, line: 30, baseType: !493, size: 32, offset: 512)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !813, file: !814, line: 31, baseType: !535, size: 16, offset: 544)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !398, file: !31, line: 1346, baseType: !831, size: 64, offset: 1792)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{!32, !290, !32, !32}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !398, file: !31, line: 1348, baseType: !835, size: 64, offset: 1856)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!32, !290, !32, !838}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !814, line: 9, size: 512, elements: !840)
!840 = !{!841, !842, !843, !844, !845, !846, !847, !848}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !839, file: !814, line: 10, baseType: !333, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !839, file: !814, line: 11, baseType: !333, size: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !839, file: !814, line: 12, baseType: !333, size: 64, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !839, file: !814, line: 13, baseType: !333, size: 64, offset: 192)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !839, file: !814, line: 14, baseType: !333, size: 64, offset: 256)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !839, file: !814, line: 15, baseType: !333, size: 64, offset: 320)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !839, file: !814, line: 16, baseType: !333, size: 64, offset: 384)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !839, file: !814, line: 17, baseType: !333, size: 64, offset: 448)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !398, file: !31, line: 1352, baseType: !850, size: 64, offset: 1920)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!32, !290, !32, !853}
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !856, line: 213, size: 32, elements: !857)
!856 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!857 = !{!858, !859}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !855, file: !856, line: 214, baseType: !475, size: 16)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !855, file: !856, line: 215, baseType: !475, size: 16, offset: 16)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !398, file: !31, line: 1355, baseType: !861, size: 64, offset: 1984)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{!32, !290, !32, !415}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !398, file: !31, line: 1357, baseType: !865, size: 64, offset: 2048)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!32, !290, !32, !868, !868}
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !741, line: 956, size: 128, elements: !870)
!870 = !{!871, !872}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !869, file: !741, line: 957, baseType: !493, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !869, file: !741, line: 958, baseType: !333, size: 64, offset: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !398, file: !31, line: 1361, baseType: !874, size: 64, offset: 2112)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{!32, !290, !32, !331, !32}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !398, file: !31, line: 1364, baseType: !804, size: 64, offset: 2176)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !398, file: !31, line: 1367, baseType: !879, size: 64, offset: 2240)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{!32, !290, !37, !591}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !398, file: !31, line: 1400, baseType: !883, size: 64, offset: 2304)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DISubroutineType(types: !885)
!885 = !{!32, !290, !290, !886}
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !888, line: 75, size: 384, elements: !889)
!888 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!889 = !{!890, !891, !894, !898, !902}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !887, file: !888, line: 76, baseType: !292, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !887, file: !888, line: 77, baseType: !892, size: 64, offset: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !887, file: !888, line: 78, baseType: !895, size: 64, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !897)
!897 = !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !888, line: 78, flags: DIFlagFwdDecl)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !887, file: !888, line: 79, baseType: !899, size: 160, offset: 192)
!899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 160, elements: !900)
!900 = !{!901}
!901 = !DISubrange(count: 20)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !887, file: !888, line: 80, baseType: !794, size: 8, offset: 352)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !398, file: !31, line: 1403, baseType: !904, size: 64, offset: 2368)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!32, !290, !290}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !398, file: !31, line: 1405, baseType: !908, size: 64, offset: 2432)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!290, !290, !415, !771}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !398, file: !31, line: 1408, baseType: !912, size: 64, offset: 2496)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!329, !290, !329}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !398, file: !31, line: 1410, baseType: !916, size: 64, offset: 2560)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!32, !290, !329}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !398, file: !31, line: 1412, baseType: !920, size: 64, offset: 2624)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!32, !290, !923}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !925, line: 35, flags: DIFlagFwdDecl)
!925 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !398, file: !31, line: 1414, baseType: !927, size: 64, offset: 2688)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DISubroutineType(types: !929)
!929 = !{null, !290, !923}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !398, file: !31, line: 1417, baseType: !931, size: 64, offset: 2752)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{!32, !934, !853, !290, !946, !581, !581, !886}
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !936, line: 8, size: 96, elements: !937)
!936 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!937 = !{!938, !939, !940, !941, !943, !944, !945}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !935, file: !936, line: 9, baseType: !481, size: 8)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !935, file: !936, line: 10, baseType: !481, size: 8, offset: 8)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !935, file: !936, line: 11, baseType: !475, size: 16, offset: 16)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !935, file: !936, line: 12, baseType: !942, size: 32, offset: 32)
!942 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !334, line: 26, baseType: !32)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !935, file: !936, line: 13, baseType: !475, size: 16, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !935, file: !936, line: 14, baseType: !481, size: 8, offset: 80)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !935, file: !936, line: 15, baseType: !481, size: 8, offset: 88)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !482)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !398, file: !31, line: 1424, baseType: !949, size: 64, offset: 2816)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DISubroutineType(types: !951)
!951 = !{!32, !934, !853, !290, !946, !581}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !398, file: !31, line: 1429, baseType: !953, size: 64, offset: 2880)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{!32, !415, !956, !290, !290, !1001}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !888, line: 203, size: 1024, elements: !958)
!958 = !{!959, !960, !970, !974, !978, !979, !983, !984, !985, !986, !988, !989, !990, !991}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !957, file: !888, line: 204, baseType: !415, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !957, file: !888, line: 205, baseType: !961, size: 64, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !856, line: 44, size: 128, elements: !964)
!964 = !{!965, !966, !967, !968, !969}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !963, file: !856, line: 45, baseType: !493, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !963, file: !856, line: 46, baseType: !475, size: 16, offset: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !963, file: !856, line: 47, baseType: !475, size: 16, offset: 48)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !963, file: !856, line: 48, baseType: !493, size: 32, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !963, file: !856, line: 49, baseType: !493, size: 32, offset: 96)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !957, file: !888, line: 206, baseType: !971, size: 64, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!32, !415, !956}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !957, file: !888, line: 208, baseType: !975, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!32, !956}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !957, file: !888, line: 209, baseType: !591, size: 64, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !957, file: !888, line: 211, baseType: !980, size: 64, offset: 320)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !982, line: 76, flags: DIFlagFwdDecl)
!982 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!983 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !957, file: !888, line: 212, baseType: !886, size: 64, offset: 384)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !957, file: !888, line: 213, baseType: !581, size: 16, offset: 448)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !957, file: !888, line: 214, baseType: !581, size: 16, offset: 464)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !957, file: !888, line: 215, baseType: !987, size: 32, offset: 480)
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !332, line: 21, baseType: !493)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 512)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !957, file: !888, line: 216, baseType: !7, size: 32, offset: 544)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !957, file: !888, line: 217, baseType: !771, size: 8, offset: 576)
!991 = !DIDerivedType(tag: DW_TAG_member, scope: !957, file: !888, line: 218, baseType: !992, size: 384, offset: 640)
!992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !957, file: !888, line: 218, size: 384, elements: !993)
!993 = !{!994, !996}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !992, file: !888, line: 219, baseType: !995, size: 384)
!995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 384, elements: !458)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !992, file: !888, line: 224, baseType: !997, size: 384)
!997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !998, size: 384, elements: !999)
!998 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!999 = !{!1000}
!1000 = !DISubrange(count: 6)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !398, file: !31, line: 1434, baseType: !1003, size: 64, offset: 2944)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!32, !415, !853, !290, !946, !581, !987, !987, !886}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !398, file: !31, line: 1440, baseType: !1007, size: 64, offset: 3008)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{!32, !290, !1010, !581, !886}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !398, file: !31, line: 1444, baseType: !1012, size: 64, offset: 3072)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!32, !415, !987, !987, !290, !987, !32}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !398, file: !31, line: 1449, baseType: !1016, size: 64, offset: 3136)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!32, !290, !1010, !581}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !398, file: !31, line: 1452, baseType: !1020, size: 64, offset: 3200)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!32, !290, !771}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !398, file: !31, line: 1454, baseType: !1024, size: 64, offset: 3264)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!32, !290, !1027}
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !31, line: 820, size: 264, elements: !1029)
!1029 = !{!1030, !1032}
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1028, file: !31, line: 821, baseType: !1031, size: 256)
!1031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 256, elements: !819)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !1028, file: !31, line: 822, baseType: !482, size: 8, offset: 256)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !398, file: !31, line: 1456, baseType: !1024, size: 64, offset: 3328)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !398, file: !31, line: 1458, baseType: !1035, size: 64, offset: 3392)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!32, !290, !1038, !1039}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !277, line: 55, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1041, line: 72, baseType: !1042)
!1041 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1041, line: 16, baseType: !312)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !398, file: !31, line: 1460, baseType: !1044, size: 64, offset: 3456)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{null, !290, !1047}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !31, line: 67, flags: DIFlagFwdDecl)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !398, file: !31, line: 1462, baseType: !1044, size: 64, offset: 3520)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !398, file: !31, line: 1464, baseType: !1051, size: 64, offset: 3584)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!591, !290, !290}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !398, file: !31, line: 1466, baseType: !1055, size: 64, offset: 3648)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{null, !290, !591}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !398, file: !31, line: 1469, baseType: !1059, size: 64, offset: 3712)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!32, !290, !32, !987}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !398, file: !31, line: 1472, baseType: !1063, size: 64, offset: 3776)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!32, !773}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !398, file: !31, line: 1473, baseType: !1020, size: 64, offset: 3840)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !398, file: !31, line: 1475, baseType: !1068, size: 64, offset: 3904)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!32, !290, !415}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !398, file: !31, line: 1477, baseType: !583, size: 64, offset: 3968)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !398, file: !31, line: 1479, baseType: !1073, size: 64, offset: 4032)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!32, !290, !1076}
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !31, line: 894, size: 256, elements: !1078)
!1078 = !{!1079, !1080}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !1077, file: !31, line: 895, baseType: !57, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, scope: !1077, file: !31, line: 896, baseType: !1081, size: 192, offset: 64)
!1081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1077, file: !31, line: 896, size: 192, elements: !1082)
!1082 = !{!1083, !1092, !5470}
!1083 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 898, baseType: !1084, size: 192)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 898, size: 192, elements: !1085)
!1085 = !{!1086, !1087, !1091}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1084, file: !31, line: 899, baseType: !987, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !1084, file: !31, line: 900, baseType: !1088, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !1090, line: 11, flags: DIFlagFwdDecl)
!1090 = !DIFile(filename: "./include/net/flow_dissector.h", directory: "/home/lizy2001/genbc/linux")
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !1084, file: !31, line: 901, baseType: !886, size: 64, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !31, line: 904, baseType: !1093, size: 64)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 904, size: 64, elements: !1094)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !1093, file: !31, line: 905, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !65, line: 222, size: 2560, elements: !1098)
!1098 = !{!1099, !5449, !5450, !5468, !5469}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1097, file: !65, line: 223, baseType: !1100, size: 2048)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !65, line: 141, size: 2048, elements: !1101)
!1101 = !{!1102, !5423, !5424, !5425, !5426, !5427, !5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1100, file: !65, line: 145, baseType: !1103, size: 64, align: 512)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1105)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !65, line: 54, size: 2368, elements: !1106)
!1106 = !{!1107, !1306, !1311, !5095, !5099, !5103, !5104, !5108, !5114, !5115, !5116, !5117, !5118, !5122, !5126, !5130, !5131, !5132, !5136, !5137, !5149, !5153, !5157, !5169, !5358, !5362, !5366, !5371, !5375, !5379, !5383, !5389, !5393, !5400, !5404, !5406, !5407}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !1105, file: !65, line: 56, baseType: !1108, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DISubroutineType(types: !1110)
!1110 = !{!32, !1111}
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !96, line: 483, size: 960, align: 64, elements: !1113)
!1113 = !{!1114, !1130, !1141, !1152, !1176, !1182, !1190, !1207, !1220, !1226, !1235, !1240, !1248, !1260, !1280, !1287, !1291, !1295, !1300}
!1114 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 484, baseType: !1115, size: 512)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 484, size: 512, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1115, file: !96, line: 485, baseType: !493, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1115, file: !96, line: 486, baseType: !493, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1115, file: !96, line: 487, baseType: !493, size: 32, offset: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1115, file: !96, line: 488, baseType: !493, size: 32, offset: 96)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1115, file: !96, line: 489, baseType: !493, size: 32, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !1115, file: !96, line: 492, baseType: !493, size: 32, offset: 160)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1115, file: !96, line: 493, baseType: !493, size: 32, offset: 192)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !1115, file: !96, line: 496, baseType: !267, size: 128, offset: 224)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !1115, file: !96, line: 497, baseType: !493, size: 32, offset: 352)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !1115, file: !96, line: 498, baseType: !493, size: 32, offset: 384)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1115, file: !96, line: 499, baseType: !493, size: 32, offset: 416)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1115, file: !96, line: 500, baseType: !493, size: 32, offset: 448)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1115, file: !96, line: 501, baseType: !493, size: 32, offset: 480)
!1130 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 507, baseType: !1131, size: 256)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 507, size: 256, elements: !1132)
!1132 = !{!1133, !1134, !1135, !1140}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1131, file: !96, line: 508, baseType: !493, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1131, file: !96, line: 509, baseType: !333, size: 64, align: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, scope: !1131, file: !96, line: 510, baseType: !1136, size: 64, offset: 128)
!1136 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1131, file: !96, line: 510, size: 64, elements: !1137)
!1137 = !{!1138, !1139}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1136, file: !96, line: 511, baseType: !333, size: 64, align: 64)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !1136, file: !96, line: 512, baseType: !333, size: 64, align: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1131, file: !96, line: 514, baseType: !333, size: 64, offset: 192)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1112, file: !96, line: 532, baseType: !1142, size: 448)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 517, size: 448, elements: !1143)
!1143 = !{!1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !1142, file: !96, line: 518, baseType: !333, size: 64, align: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !1142, file: !96, line: 521, baseType: !333, size: 64, align: 64, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1142, file: !96, line: 522, baseType: !333, size: 64, align: 64, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1142, file: !96, line: 523, baseType: !333, size: 64, align: 64, offset: 192)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1142, file: !96, line: 524, baseType: !493, size: 32, offset: 256)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1142, file: !96, line: 529, baseType: !493, size: 32, offset: 288)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !1142, file: !96, line: 530, baseType: !333, size: 64, offset: 320)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1142, file: !96, line: 531, baseType: !333, size: 64, offset: 384)
!1152 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 534, baseType: !1153, size: 960)
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 534, size: 960, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !1153, file: !96, line: 535, baseType: !493, size: 32)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !1153, file: !96, line: 536, baseType: !493, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1153, file: !96, line: 537, baseType: !333, size: 64, align: 64, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !1153, file: !96, line: 538, baseType: !333, size: 64, align: 64, offset: 128)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !1153, file: !96, line: 539, baseType: !493, size: 32, offset: 192)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !1153, file: !96, line: 540, baseType: !493, size: 32, offset: 224)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !1153, file: !96, line: 541, baseType: !333, size: 64, align: 64, offset: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !1153, file: !96, line: 542, baseType: !493, size: 32, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !1153, file: !96, line: 543, baseType: !493, size: 32, offset: 352)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !1153, file: !96, line: 544, baseType: !267, size: 128, offset: 384)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !1153, file: !96, line: 545, baseType: !493, size: 32, offset: 512)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !1153, file: !96, line: 550, baseType: !493, size: 32, offset: 544)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !1153, file: !96, line: 551, baseType: !493, size: 32, offset: 576)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !1153, file: !96, line: 552, baseType: !493, size: 32, offset: 608)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !1153, file: !96, line: 553, baseType: !333, size: 64, align: 64, offset: 640)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !1153, file: !96, line: 554, baseType: !493, size: 32, offset: 704)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !1153, file: !96, line: 555, baseType: !493, size: 32, offset: 736)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !1153, file: !96, line: 556, baseType: !333, size: 64, align: 64, offset: 768)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !1153, file: !96, line: 557, baseType: !493, size: 32, offset: 832)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !1153, file: !96, line: 558, baseType: !493, size: 32, offset: 864)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !1153, file: !96, line: 559, baseType: !493, size: 32, offset: 896)
!1176 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 562, baseType: !1177, size: 128)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 562, size: 128, elements: !1178)
!1178 = !{!1179, !1180, !1181}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !1177, file: !96, line: 563, baseType: !333, size: 64, align: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1177, file: !96, line: 564, baseType: !493, size: 32, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !1177, file: !96, line: 565, baseType: !493, size: 32, offset: 96)
!1182 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 568, baseType: !1183, size: 160)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 568, size: 160, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1189}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1183, file: !96, line: 569, baseType: !493, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !1183, file: !96, line: 570, baseType: !493, size: 32, offset: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1183, file: !96, line: 571, baseType: !493, size: 32, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1183, file: !96, line: 572, baseType: !493, size: 32, offset: 96)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !1183, file: !96, line: 573, baseType: !493, size: 32, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !1112, file: !96, line: 600, baseType: !1191, size: 576)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 579, size: 576, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1191, file: !96, line: 580, baseType: !493, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !1191, file: !96, line: 581, baseType: !493, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !1191, file: !96, line: 582, baseType: !493, size: 32, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !1191, file: !96, line: 583, baseType: !493, size: 32, offset: 96)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !1191, file: !96, line: 587, baseType: !333, size: 64, align: 64, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !1191, file: !96, line: 588, baseType: !333, size: 64, align: 64, offset: 192)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !1191, file: !96, line: 589, baseType: !493, size: 32, offset: 256)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1191, file: !96, line: 590, baseType: !493, size: 32, offset: 288)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !1191, file: !96, line: 591, baseType: !493, size: 32, offset: 320)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !1191, file: !96, line: 592, baseType: !493, size: 32, offset: 352)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !1191, file: !96, line: 596, baseType: !333, size: 64, align: 64, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !1191, file: !96, line: 597, baseType: !333, size: 64, align: 64, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1191, file: !96, line: 598, baseType: !493, size: 32, offset: 512)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1191, file: !96, line: 599, baseType: !493, size: 32, offset: 544)
!1207 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 602, baseType: !1208, size: 96)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 602, size: 96, elements: !1209)
!1209 = !{!1210, !1218, !1219}
!1210 = !DIDerivedType(tag: DW_TAG_member, scope: !1208, file: !96, line: 603, baseType: !1211, size: 32)
!1211 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1208, file: !96, line: 603, size: 32, elements: !1212)
!1212 = !{!1213, !1214, !1215, !1216, !1217}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !1211, file: !96, line: 604, baseType: !493, size: 32)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1211, file: !96, line: 605, baseType: !493, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !1211, file: !96, line: 606, baseType: !493, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !1211, file: !96, line: 607, baseType: !493, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !1211, file: !96, line: 608, baseType: !493, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !1208, file: !96, line: 610, baseType: !493, size: 32, offset: 32)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !1208, file: !96, line: 611, baseType: !493, size: 32, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1112, file: !96, line: 618, baseType: !1221, size: 128)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 614, size: 128, elements: !1222)
!1222 = !{!1223, !1224, !1225}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !1221, file: !96, line: 615, baseType: !493, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !1221, file: !96, line: 616, baseType: !493, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1221, file: !96, line: 617, baseType: !333, size: 64, align: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !1112, file: !96, line: 627, baseType: !1227, size: 256)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 620, size: 256, elements: !1228)
!1228 = !{!1229, !1230, !1231, !1232, !1233, !1234}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1227, file: !96, line: 621, baseType: !493, size: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1227, file: !96, line: 622, baseType: !493, size: 32, offset: 32)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !1227, file: !96, line: 623, baseType: !493, size: 32, offset: 64)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !1227, file: !96, line: 624, baseType: !493, size: 32, offset: 96)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !1227, file: !96, line: 625, baseType: !333, size: 64, align: 64, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !1227, file: !96, line: 626, baseType: !493, size: 32, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !1112, file: !96, line: 632, baseType: !1236, size: 128)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 629, size: 128, elements: !1237)
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1236, file: !96, line: 630, baseType: !333, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1236, file: !96, line: 631, baseType: !493, size: 32, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, scope: !1112, file: !96, line: 634, baseType: !1241, size: 256)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 634, size: 256, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246, !1247}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1241, file: !96, line: 635, baseType: !333, size: 64, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !1241, file: !96, line: 636, baseType: !333, size: 64, align: 64, offset: 64)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !1241, file: !96, line: 637, baseType: !493, size: 32, offset: 128)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !1241, file: !96, line: 638, baseType: !493, size: 32, offset: 160)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !1241, file: !96, line: 639, baseType: !493, size: 32, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !1112, file: !96, line: 656, baseType: !1249, size: 384)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 642, size: 384, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1249, file: !96, line: 643, baseType: !493, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1249, file: !96, line: 644, baseType: !493, size: 32, offset: 32)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1249, file: !96, line: 645, baseType: !493, size: 32, offset: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !1249, file: !96, line: 646, baseType: !493, size: 32, offset: 96)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1249, file: !96, line: 647, baseType: !333, size: 64, align: 64, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !1249, file: !96, line: 652, baseType: !493, size: 32, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !1249, file: !96, line: 653, baseType: !493, size: 32, offset: 224)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !1249, file: !96, line: 654, baseType: !333, size: 64, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !1249, file: !96, line: 655, baseType: !333, size: 64, offset: 320)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !1112, file: !96, line: 673, baseType: !1261, size: 256)
!1261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 658, size: 256, elements: !1262)
!1262 = !{!1263, !1264, !1269, !1270, !1271}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1261, file: !96, line: 659, baseType: !493, size: 32)
!1264 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 660, baseType: !1265, size: 32, offset: 32)
!1265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 660, size: 32, elements: !1266)
!1266 = !{!1267, !1268}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !1265, file: !96, line: 661, baseType: !493, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !1265, file: !96, line: 662, baseType: !493, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !1261, file: !96, line: 664, baseType: !493, size: 32, offset: 64)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1261, file: !96, line: 665, baseType: !493, size: 32, offset: 96)
!1271 = !DIDerivedType(tag: DW_TAG_member, scope: !1261, file: !96, line: 666, baseType: !1272, size: 128, offset: 128)
!1272 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1261, file: !96, line: 666, size: 128, elements: !1273)
!1273 = !{!1274, !1275}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !1272, file: !96, line: 667, baseType: !493, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, scope: !1272, file: !96, line: 668, baseType: !1276, size: 128)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1272, file: !96, line: 668, size: 128, elements: !1277)
!1277 = !{!1278, !1279}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !1276, file: !96, line: 669, baseType: !333, size: 64, align: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !1276, file: !96, line: 670, baseType: !493, size: 32, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !1112, file: !96, line: 683, baseType: !1281, size: 128)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 675, size: 128, elements: !1282)
!1282 = !{!1283, !1284, !1285, !1286}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1281, file: !96, line: 676, baseType: !493, size: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !1281, file: !96, line: 678, baseType: !493, size: 32, offset: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1281, file: !96, line: 679, baseType: !493, size: 32, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !1281, file: !96, line: 682, baseType: !493, size: 32, offset: 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !1112, file: !96, line: 687, baseType: !1288, size: 32)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 685, size: 32, elements: !1289)
!1289 = !{!1290}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1288, file: !96, line: 686, baseType: !493, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !1112, file: !96, line: 691, baseType: !1292, size: 32)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 689, size: 32, elements: !1293)
!1293 = !{!1294}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1292, file: !96, line: 690, baseType: !493, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !1112, file: !96, line: 696, baseType: !1296, size: 64)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 693, size: 64, elements: !1297)
!1297 = !{!1298, !1299}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !1296, file: !96, line: 694, baseType: !493, size: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1296, file: !96, line: 695, baseType: !493, size: 32, offset: 32)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !1112, file: !96, line: 702, baseType: !1301, size: 96)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1112, file: !96, line: 698, size: 96, elements: !1302)
!1302 = !{!1303, !1304, !1305}
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !1301, file: !96, line: 699, baseType: !493, size: 32)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !1301, file: !96, line: 700, baseType: !493, size: 32, offset: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1301, file: !96, line: 701, baseType: !493, size: 32, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !1105, file: !65, line: 57, baseType: !1307, size: 64, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!1310, !1111}
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !1105, file: !65, line: 58, baseType: !1312, size: 64, offset: 128)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{null, !1310, !1315}
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !1317, line: 916, size: 1856, align: 32, elements: !1318)
!1317 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!1318 = !{!1319, !1329, !5045, !5046, !5047, !5048, !5057, !5058, !5059, !5060, !5061, !5062, !5078, !5079, !5088, !5089, !5090, !5091, !5092, !5093, !5094}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1316, file: !1317, line: 920, baseType: !1320, size: 128)
!1320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1316, file: !1317, line: 917, size: 128, elements: !1321)
!1321 = !{!1322, !1328}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1320, file: !1317, line: 918, baseType: !1323, size: 64)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1324, line: 58, size: 64, elements: !1325)
!1324 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1325 = !{!1326}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1323, file: !1324, line: 59, baseType: !1327, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1320, file: !1317, line: 919, baseType: !299, size: 128, align: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1316, file: !1317, line: 921, baseType: !1330, size: 128, offset: 128)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1331, line: 8, size: 128, elements: !1332)
!1331 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1332 = !{!1333, !1337}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1330, file: !1331, line: 9, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1336, line: 18, flags: DIFlagFwdDecl)
!1336 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1330, file: !1331, line: 10, baseType: !1338, size: 64, offset: 64)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1336, line: 89, size: 1536, elements: !1340)
!1340 = !{!1341, !1342, !1352, !1360, !1361, !1374, !5014, !5015, !5027, !5028, !5029, !5030, !5031, !5037, !5038, !5039}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1339, file: !1336, line: 91, baseType: !7, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1339, file: !1336, line: 92, baseType: !1343, size: 32, offset: 32)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1344, line: 277, baseType: !1345)
!1344 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1344, line: 277, size: 32, elements: !1346)
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1345, file: !1344, line: 277, baseType: !1348, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1344, line: 70, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1344, line: 65, size: 32, elements: !1350)
!1350 = !{!1351}
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1349, file: !1344, line: 66, baseType: !7, size: 32)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1339, file: !1336, line: 93, baseType: !1353, size: 128, offset: 64)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1354, line: 38, size: 128, elements: !1355)
!1354 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1355 = !{!1356, !1358}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1353, file: !1354, line: 39, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1353, file: !1354, line: 39, baseType: !1359, size: 64, offset: 64)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1339, file: !1336, line: 94, baseType: !1338, size: 64, offset: 192)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1339, file: !1336, line: 95, baseType: !1362, size: 128, offset: 256)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1336, line: 47, size: 128, elements: !1363)
!1363 = !{!1364, !1373}
!1364 = !DIDerivedType(tag: DW_TAG_member, scope: !1362, file: !1336, line: 48, baseType: !1365, size: 64)
!1365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1362, file: !1336, line: 48, size: 64, elements: !1366)
!1366 = !{!1367, !1372}
!1367 = !DIDerivedType(tag: DW_TAG_member, scope: !1365, file: !1336, line: 49, baseType: !1368, size: 64)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1365, file: !1336, line: 49, size: 64, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1368, file: !1336, line: 50, baseType: !987, size: 32, offset: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1365, file: !1336, line: 52, baseType: !331, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1362, file: !1336, line: 54, baseType: !946, size: 64, offset: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1339, file: !1336, line: 96, baseType: !1375, size: 64, offset: 384)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !1317, line: 610, size: 4224, elements: !1377)
!1377 = !{!1378, !1380, !1381, !1389, !1396, !1397, !1544, !4743, !4744, !4745, !4751, !4752, !4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4990, !4998, !4999, !5000, !5010, !5011, !5012, !5013}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1376, file: !1317, line: 611, baseType: !1379, size: 16)
!1379 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !277, line: 19, baseType: !476)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1376, file: !1317, line: 612, baseType: !476, size: 16, offset: 16)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1376, file: !1317, line: 613, baseType: !1382, size: 32, offset: 32)
!1382 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1383, line: 23, baseType: !1384)
!1383 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 21, size: 32, elements: !1385)
!1385 = !{!1386}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1384, file: !1383, line: 22, baseType: !1387, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !277, line: 32, baseType: !1388)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1041, line: 49, baseType: !7)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1376, file: !1317, line: 614, baseType: !1390, size: 32, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1383, line: 28, baseType: !1391)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1383, line: 26, size: 32, elements: !1392)
!1392 = !{!1393}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1391, file: !1383, line: 27, baseType: !1394, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !277, line: 33, baseType: !1395)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1041, line: 50, baseType: !7)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1376, file: !1317, line: 615, baseType: !7, size: 32, offset: 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1376, file: !1317, line: 622, baseType: !1398, size: 64, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1400)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !1317, line: 1864, size: 1536, align: 512, elements: !1401)
!1401 = !{!1402, !1406, !1419, !1423, !1429, !1433, !1437, !1441, !1445, !1449, !1453, !1454, !1460, !1464, !1488, !1517, !1524, !1530, !1535, !1539, !1540}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1400, file: !1317, line: 1865, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{!1338, !1375, !1338, !7}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1400, file: !1317, line: 1866, baseType: !1407, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!292, !1338, !1375, !1410}
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1412, line: 10, size: 128, elements: !1413)
!1412 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1413 = !{!1414, !1418}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1411, file: !1412, line: 11, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{null, !591}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1411, file: !1412, line: 12, baseType: !591, size: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1400, file: !1317, line: 1867, baseType: !1420, size: 64, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{!32, !1375, !32}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1400, file: !1317, line: 1868, baseType: !1424, size: 64, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!1427, !1375, !32}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !1317, line: 581, flags: DIFlagFwdDecl)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1400, file: !1317, line: 1870, baseType: !1430, size: 64, offset: 256)
!1430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1431, size: 64)
!1431 = !DISubroutineType(types: !1432)
!1432 = !{!32, !1338, !1038, !32}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1400, file: !1317, line: 1872, baseType: !1434, size: 64, offset: 320)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{!32, !1375, !1338, !1379, !771}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1400, file: !1317, line: 1873, baseType: !1438, size: 64, offset: 384)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!32, !1338, !1375, !1338}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1400, file: !1317, line: 1874, baseType: !1442, size: 64, offset: 448)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!1443 = !DISubroutineType(types: !1444)
!1444 = !{!32, !1375, !1338}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1400, file: !1317, line: 1875, baseType: !1446, size: 64, offset: 512)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!32, !1375, !1338, !292}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1400, file: !1317, line: 1876, baseType: !1450, size: 64, offset: 576)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DISubroutineType(types: !1452)
!1452 = !{!32, !1375, !1338, !1379}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1400, file: !1317, line: 1877, baseType: !1442, size: 64, offset: 640)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1400, file: !1317, line: 1878, baseType: !1455, size: 64, offset: 704)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!32, !1375, !1338, !1379, !1458}
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !277, line: 16, baseType: !1459)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !277, line: 13, baseType: !987)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1400, file: !1317, line: 1879, baseType: !1461, size: 64, offset: 768)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = !DISubroutineType(types: !1463)
!1463 = !{!32, !1375, !1338, !1375, !1338, !7}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1400, file: !1317, line: 1881, baseType: !1465, size: 64, offset: 832)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!32, !1338, !1468}
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !1317, line: 219, size: 640, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1475, !1478, !1485, !1486, !1487}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1469, file: !1317, line: 220, baseType: !7, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1469, file: !1317, line: 221, baseType: !1379, size: 16, offset: 32)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1469, file: !1317, line: 222, baseType: !1382, size: 32, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1469, file: !1317, line: 223, baseType: !1390, size: 32, offset: 96)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1469, file: !1317, line: 224, baseType: !1476, size: 64, offset: 128)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !277, line: 46, baseType: !1477)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1041, line: 88, baseType: !379)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1469, file: !1317, line: 225, baseType: !1479, size: 128, offset: 192)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1480, line: 13, size: 128, elements: !1481)
!1480 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1481 = !{!1482, !1484}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1479, file: !1480, line: 14, baseType: !1483, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1480, line: 8, baseType: !378)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1479, file: !1480, line: 15, baseType: !998, size: 64, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1469, file: !1317, line: 226, baseType: !1479, size: 128, offset: 320)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1469, file: !1317, line: 227, baseType: !1479, size: 128, offset: 448)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1469, file: !1317, line: 234, baseType: !1315, size: 64, offset: 576)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1400, file: !1317, line: 1882, baseType: !1489, size: 64, offset: 896)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = !DISubroutineType(types: !1491)
!1491 = !{!32, !1492, !1494, !987, !7}
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!1493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1496, line: 22, size: 1152, elements: !1497)
!1496 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1497 = !{!1498, !1499, !1500, !1501, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1495, file: !1496, line: 23, baseType: !987, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1495, file: !1496, line: 24, baseType: !1379, size: 16, offset: 32)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1495, file: !1496, line: 25, baseType: !7, size: 32, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1495, file: !1496, line: 26, baseType: !1502, size: 32, offset: 96)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !277, line: 104, baseType: !987)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1495, file: !1496, line: 27, baseType: !331, size: 64, offset: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1495, file: !1496, line: 28, baseType: !331, size: 64, offset: 192)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1495, file: !1496, line: 37, baseType: !331, size: 64, offset: 256)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1495, file: !1496, line: 38, baseType: !1458, size: 32, offset: 320)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1495, file: !1496, line: 39, baseType: !1458, size: 32, offset: 352)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1495, file: !1496, line: 40, baseType: !1382, size: 32, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1495, file: !1496, line: 41, baseType: !1390, size: 32, offset: 416)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1495, file: !1496, line: 42, baseType: !1476, size: 64, offset: 448)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1495, file: !1496, line: 43, baseType: !1479, size: 128, offset: 512)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1495, file: !1496, line: 44, baseType: !1479, size: 128, offset: 640)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1495, file: !1496, line: 45, baseType: !1479, size: 128, offset: 768)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1495, file: !1496, line: 46, baseType: !1479, size: 128, offset: 896)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1495, file: !1496, line: 47, baseType: !331, size: 64, offset: 1024)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1495, file: !1496, line: 48, baseType: !331, size: 64, offset: 1088)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1400, file: !1317, line: 1883, baseType: !1518, size: 64, offset: 960)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!1521, !1338, !1038, !1039}
!1521 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !277, line: 60, baseType: !1522)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1041, line: 73, baseType: !1523)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1041, line: 15, baseType: !998)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1400, file: !1317, line: 1884, baseType: !1525, size: 64, offset: 1024)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!32, !1375, !1528, !331, !331}
!1528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1529, size: 64)
!1529 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !1317, line: 50, flags: DIFlagFwdDecl)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1400, file: !1317, line: 1886, baseType: !1531, size: 64, offset: 1088)
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 64)
!1532 = !DISubroutineType(types: !1533)
!1533 = !{!32, !1375, !1534, !32}
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1400, file: !1317, line: 1887, baseType: !1536, size: 64, offset: 1152)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!32, !1375, !1338, !1315, !7, !1379}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1400, file: !1317, line: 1890, baseType: !1450, size: 64, offset: 1216)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1400, file: !1317, line: 1891, baseType: !1541, size: 64, offset: 1280)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1542 = !DISubroutineType(types: !1543)
!1543 = !{!32, !1375, !1427, !32}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1376, file: !1317, line: 623, baseType: !1545, size: 64, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !1317, line: 1416, size: 9472, elements: !1547)
!1547 = !{!1548, !1549, !1550, !1551, !1552, !1553, !1596, !4345, !4433, !4516, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4532, !4536, !4537, !4540, !4541, !4544, !4545, !4546, !4587, !4614, !4615, !4616, !4617, !4618, !4619, !4622, !4624, !4630, !4631, !4633, !4634, !4635, !4694, !4695, !4710, !4711, !4712, !4713, !4714, !4717, !4718, !4719, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1546, file: !1317, line: 1417, baseType: !284, size: 128)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1546, file: !1317, line: 1418, baseType: !1458, size: 32, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1546, file: !1317, line: 1419, baseType: !482, size: 8, offset: 160)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1546, file: !1317, line: 1420, baseType: !312, size: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1546, file: !1317, line: 1421, baseType: !1476, size: 64, offset: 256)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1546, file: !1317, line: 1422, baseType: !1554, size: 64, offset: 320)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !1317, line: 2228, size: 576, elements: !1556)
!1556 = !{!1557, !1558, !1559, !1565, !1569, !1573, !1577, !1578, !1579, !1583, !1587, !1588, !1589, !1593, !1594, !1595}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1555, file: !1317, line: 2229, baseType: !292, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1555, file: !1317, line: 2230, baseType: !32, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1555, file: !1317, line: 2238, baseType: !1560, size: 64, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DISubroutineType(types: !1562)
!1562 = !{!32, !1563}
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1317, line: 69, flags: DIFlagFwdDecl)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1555, file: !1317, line: 2239, baseType: !1566, size: 64, offset: 192)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1568)
!1568 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !1317, line: 70, flags: DIFlagFwdDecl)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1555, file: !1317, line: 2240, baseType: !1570, size: 64, offset: 256)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{!1338, !1554, !32, !292, !591}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1555, file: !1317, line: 2242, baseType: !1574, size: 64, offset: 320)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{null, !1545}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1555, file: !1317, line: 2243, baseType: !980, size: 64, offset: 384)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1555, file: !1317, line: 2244, baseType: !1554, size: 64, offset: 448)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1555, file: !1317, line: 2245, baseType: !1580, size: 64, offset: 512)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !277, line: 182, size: 64, elements: !1581)
!1581 = !{!1582}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1580, file: !277, line: 183, baseType: !280, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1555, file: !1317, line: 2247, baseType: !1584, offset: 576)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1585, line: 187, elements: !1586)
!1585 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1586 = !{}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1555, file: !1317, line: 2248, baseType: !1584, offset: 576)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1555, file: !1317, line: 2249, baseType: !1584, offset: 576)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1555, file: !1317, line: 2250, baseType: !1590, offset: 576)
!1590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1584, elements: !1591)
!1591 = !{!1592}
!1592 = !DISubrange(count: 3)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1555, file: !1317, line: 2252, baseType: !1584, offset: 576)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1555, file: !1317, line: 2253, baseType: !1584, offset: 576)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1555, file: !1317, line: 2254, baseType: !1584, offset: 576)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1546, file: !1317, line: 1423, baseType: !1597, size: 64, offset: 384)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1599)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !1317, line: 1935, size: 1472, elements: !1600)
!1600 = !{!1601, !1605, !1609, !1610, !1614, !1620, !1624, !1625, !1626, !1630, !1634, !1635, !1636, !1637, !1643, !1647, !1648, !1711, !1712, !1713, !1714, !4329, !4344}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1599, file: !1317, line: 1936, baseType: !1602, size: 64)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!1603 = !DISubroutineType(types: !1604)
!1604 = !{!1375, !1545}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1599, file: !1317, line: 1937, baseType: !1606, size: 64, offset: 64)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1607, size: 64)
!1607 = !DISubroutineType(types: !1608)
!1608 = !{null, !1375}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1599, file: !1317, line: 1938, baseType: !1606, size: 64, offset: 128)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1599, file: !1317, line: 1940, baseType: !1611, size: 64, offset: 192)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1612 = !DISubroutineType(types: !1613)
!1613 = !{null, !1375, !32}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1599, file: !1317, line: 1941, baseType: !1615, size: 64, offset: 256)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!32, !1375, !1618}
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1599, file: !1317, line: 1942, baseType: !1621, size: 64, offset: 320)
!1621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{!32, !1375}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1599, file: !1317, line: 1943, baseType: !1606, size: 64, offset: 384)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1599, file: !1317, line: 1944, baseType: !1574, size: 64, offset: 448)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1599, file: !1317, line: 1945, baseType: !1627, size: 64, offset: 512)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{!32, !1545, !32}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1599, file: !1317, line: 1946, baseType: !1631, size: 64, offset: 576)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{!32, !1545}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1599, file: !1317, line: 1947, baseType: !1631, size: 64, offset: 640)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1599, file: !1317, line: 1948, baseType: !1631, size: 64, offset: 704)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1599, file: !1317, line: 1949, baseType: !1631, size: 64, offset: 768)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1599, file: !1317, line: 1950, baseType: !1638, size: 64, offset: 832)
!1638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1639, size: 64)
!1639 = !DISubroutineType(types: !1640)
!1640 = !{!32, !1338, !1641}
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 64)
!1642 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !1317, line: 57, flags: DIFlagFwdDecl)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1599, file: !1317, line: 1951, baseType: !1644, size: 64, offset: 896)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!32, !1545, !1001, !1038}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1599, file: !1317, line: 1952, baseType: !1574, size: 64, offset: 960)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1599, file: !1317, line: 1954, baseType: !1649, size: 64, offset: 1024)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!32, !1652, !1338}
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1654, line: 16, size: 896, elements: !1655)
!1654 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1655 = !{!1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1684, !1706, !1707, !1710}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1653, file: !1654, line: 17, baseType: !1038, size: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1653, file: !1654, line: 18, baseType: !1039, size: 64, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1653, file: !1654, line: 19, baseType: !1039, size: 64, offset: 128)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1653, file: !1654, line: 20, baseType: !1039, size: 64, offset: 192)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1653, file: !1654, line: 21, baseType: !1039, size: 64, offset: 256)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1653, file: !1654, line: 22, baseType: !1476, size: 64, offset: 320)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1653, file: !1654, line: 23, baseType: !1476, size: 64, offset: 384)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1653, file: !1654, line: 24, baseType: !1664, size: 192, offset: 448)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1665, line: 53, size: 192, elements: !1666)
!1665 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1666 = !{!1667, !1668, !1683}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1664, file: !1665, line: 54, baseType: !371, size: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1664, file: !1665, line: 55, baseType: !1669, offset: 64)
!1669 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1670, line: 83, baseType: !1671)
!1670 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1670, line: 71, elements: !1672)
!1672 = !{!1673}
!1673 = !DIDerivedType(tag: DW_TAG_member, scope: !1671, file: !1670, line: 72, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1671, file: !1670, line: 72, elements: !1675)
!1675 = !{!1676}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1674, file: !1670, line: 73, baseType: !1677)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1670, line: 20, elements: !1678)
!1678 = !{!1679}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1677, file: !1670, line: 21, baseType: !1680)
!1680 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1681, line: 25, baseType: !1682)
!1681 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1681, line: 25, elements: !1586)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1664, file: !1665, line: 59, baseType: !284, size: 128, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1653, file: !1654, line: 25, baseType: !1685, size: 64, offset: 640)
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 64)
!1686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1687)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1654, line: 31, size: 256, elements: !1688)
!1688 = !{!1689, !1694, !1698, !1702}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1687, file: !1654, line: 32, baseType: !1690, size: 64)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64)
!1691 = !DISubroutineType(types: !1692)
!1692 = !{!591, !1652, !1693}
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1687, file: !1654, line: 33, baseType: !1695, size: 64, offset: 64)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{null, !1652, !591}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1687, file: !1654, line: 34, baseType: !1699, size: 64, offset: 128)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = !DISubroutineType(types: !1701)
!1701 = !{!591, !1652, !591, !1693}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1687, file: !1654, line: 35, baseType: !1703, size: 64, offset: 192)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64)
!1704 = !DISubroutineType(types: !1705)
!1705 = !{!32, !1652, !591}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1653, file: !1654, line: 26, baseType: !32, size: 32, offset: 704)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1653, file: !1654, line: 27, baseType: !1708, size: 64, offset: 768)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1316)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1653, file: !1654, line: 28, baseType: !591, size: 64, offset: 832)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1599, file: !1317, line: 1955, baseType: !1649, size: 64, offset: 1088)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1599, file: !1317, line: 1956, baseType: !1649, size: 64, offset: 1152)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1599, file: !1317, line: 1957, baseType: !1649, size: 64, offset: 1216)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1599, file: !1317, line: 1963, baseType: !1715, size: 64, offset: 1280)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{!32, !1545, !1718, !1741}
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1720, line: 68, size: 512, align: 128, elements: !1721)
!1720 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1721 = !{!1722, !1723, !4321, !4328}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1719, file: !1720, line: 69, baseType: !312, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, scope: !1719, file: !1720, line: 77, baseType: !1724, size: 320, offset: 64)
!1724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1719, file: !1720, line: 77, size: 320, elements: !1725)
!1725 = !{!1726, !2031, !2036, !2064, !2072, !2078, !4245, !4320}
!1726 = !DIDerivedType(tag: DW_TAG_member, scope: !1724, file: !1720, line: 78, baseType: !1727, size: 320)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1724, file: !1720, line: 78, size: 320, elements: !1728)
!1728 = !{!1729, !1730, !2029, !2030}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1727, file: !1720, line: 84, baseType: !284, size: 128)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1727, file: !1720, line: 86, baseType: !1731, size: 64, offset: 128)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !1317, line: 451, size: 1216, align: 64, elements: !1733)
!1733 = !{!1734, !1735, !1743, !1744, !1745, !1753, !1762, !1763, !1764, !1765, !2022, !2023, !2026, !2027, !2028}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1732, file: !1317, line: 452, baseType: !1375, size: 64)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1732, file: !1317, line: 453, baseType: !1736, size: 128, offset: 64)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1737, line: 292, size: 128, elements: !1738)
!1737 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1738 = !{!1739, !1740, !1742}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1736, file: !1737, line: 293, baseType: !1669)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1736, file: !1737, line: 295, baseType: !1741, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !277, line: 148, baseType: !7)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1736, file: !1737, line: 296, baseType: !591, size: 64, offset: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1732, file: !1317, line: 454, baseType: !1741, size: 32, offset: 192)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1732, file: !1317, line: 455, baseType: !383, size: 32, offset: 224)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1732, file: !1317, line: 460, baseType: !1746, size: 128, offset: 256)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !434, line: 125, size: 128, elements: !1747)
!1747 = !{!1748, !1752}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1746, file: !434, line: 126, baseType: !1749, size: 64)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !434, line: 31, size: 64, elements: !1750)
!1750 = !{!1751}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1749, file: !434, line: 32, baseType: !438, size: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1746, file: !434, line: 127, baseType: !438, size: 64, offset: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1732, file: !1317, line: 461, baseType: !1754, size: 256, offset: 384)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1755, line: 35, size: 256, elements: !1756)
!1755 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1756 = !{!1757, !1758, !1759, !1761}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1754, file: !1755, line: 36, baseType: !371, size: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1754, file: !1755, line: 42, baseType: !371, size: 64, offset: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1754, file: !1755, line: 46, baseType: !1760, offset: 128)
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1670, line: 29, baseType: !1677)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1754, file: !1755, line: 47, baseType: !284, size: 128, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1732, file: !1317, line: 462, baseType: !312, size: 64, offset: 640)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1732, file: !1317, line: 463, baseType: !312, size: 64, offset: 704)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1732, file: !1317, line: 464, baseType: !312, size: 64, offset: 768)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1732, file: !1317, line: 465, baseType: !1766, size: 64, offset: 832)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1768)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !1317, line: 367, size: 1408, elements: !1769)
!1769 = !{!1770, !1774, !1778, !1782, !1786, !1790, !1796, !1802, !1806, !1811, !1815, !1819, !1823, !1986, !1990, !1996, !1997, !1998, !2002, !2007, !2011, !2018}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1768, file: !1317, line: 368, baseType: !1771, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!32, !1718, !1618}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1768, file: !1317, line: 369, baseType: !1775, size: 64, offset: 64)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!32, !1315, !1718}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1768, file: !1317, line: 372, baseType: !1779, size: 64, offset: 128)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!32, !1731, !1618}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1768, file: !1317, line: 375, baseType: !1783, size: 64, offset: 192)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!32, !1718}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1768, file: !1317, line: 381, baseType: !1787, size: 64, offset: 256)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!32, !1315, !1731, !287, !7}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1768, file: !1317, line: 383, baseType: !1791, size: 64, offset: 320)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1792 = !DISubroutineType(types: !1793)
!1793 = !{null, !1794}
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64)
!1795 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1317, line: 290, flags: DIFlagFwdDecl)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1768, file: !1317, line: 385, baseType: !1797, size: 64, offset: 384)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = !DISubroutineType(types: !1799)
!1799 = !{!32, !1315, !1731, !1476, !7, !7, !1800, !1801}
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1768, file: !1317, line: 388, baseType: !1803, size: 64, offset: 448)
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 64)
!1804 = !DISubroutineType(types: !1805)
!1805 = !{!32, !1315, !1731, !1476, !7, !7, !1718, !591}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1768, file: !1317, line: 393, baseType: !1807, size: 64, offset: 512)
!1807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1808 = !DISubroutineType(types: !1809)
!1809 = !{!1810, !1731, !1810}
!1810 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !277, line: 125, baseType: !331)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1768, file: !1317, line: 394, baseType: !1812, size: 64, offset: 576)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{null, !1718, !7, !7}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1768, file: !1317, line: 395, baseType: !1816, size: 64, offset: 640)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!32, !1718, !1741}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1768, file: !1317, line: 396, baseType: !1820, size: 64, offset: 704)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{null, !1718}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1768, file: !1317, line: 397, baseType: !1824, size: 64, offset: 768)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!1521, !1827, !1847}
!1827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1828, size: 64)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !1317, line: 320, size: 384, elements: !1829)
!1829 = !{!1830, !1831, !1832, !1836, !1837, !1838, !1839, !1840}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1828, file: !1317, line: 321, baseType: !1315, size: 64)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1828, file: !1317, line: 326, baseType: !1476, size: 64, offset: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1828, file: !1317, line: 327, baseType: !1833, size: 64, offset: 128)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{null, !1827, !998, !998}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1828, file: !1317, line: 328, baseType: !591, size: 64, offset: 192)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1828, file: !1317, line: 329, baseType: !32, size: 32, offset: 256)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1828, file: !1317, line: 330, baseType: !581, size: 16, offset: 288)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1828, file: !1317, line: 331, baseType: !581, size: 16, offset: 304)
!1840 = !DIDerivedType(tag: DW_TAG_member, scope: !1828, file: !1317, line: 332, baseType: !1841, size: 64, offset: 320)
!1841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1828, file: !1317, line: 332, size: 64, elements: !1842)
!1842 = !{!1843, !1844}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1841, file: !1317, line: 333, baseType: !7, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1841, file: !1317, line: 334, baseType: !1845, size: 64)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1846 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1317, line: 334, flags: DIFlagFwdDecl)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !1849, line: 29, size: 320, elements: !1850)
!1849 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1850 = !{!1851, !1852, !1853, !1854, !1977}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1848, file: !1849, line: 35, baseType: !7, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !1848, file: !1849, line: 36, baseType: !1039, size: 64, offset: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1848, file: !1849, line: 37, baseType: !1039, size: 64, offset: 128)
!1854 = !DIDerivedType(tag: DW_TAG_member, scope: !1848, file: !1849, line: 38, baseType: !1855, size: 64, offset: 192)
!1855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1848, file: !1849, line: 38, size: 64, elements: !1856)
!1856 = !{!1857, !1865, !1872, !1881}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !1855, file: !1849, line: 39, baseType: !1858, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64)
!1859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1860)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !1861, line: 17, size: 128, elements: !1862)
!1861 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!1862 = !{!1863, !1864}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1860, file: !1861, line: 19, baseType: !591, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1860, file: !1861, line: 20, baseType: !1040, size: 64, offset: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !1855, file: !1849, line: 40, baseType: !1866, size: 64)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1868)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !1849, line: 15, size: 128, elements: !1869)
!1869 = !{!1870, !1871}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !1868, file: !1849, line: 16, baseType: !591, size: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !1868, file: !1849, line: 17, baseType: !1039, size: 64, offset: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !1855, file: !1849, line: 41, baseType: !1873, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1876, line: 31, size: 128, elements: !1877)
!1876 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1877 = !{!1878, !1879, !1880}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1875, file: !1876, line: 32, baseType: !1718, size: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1875, file: !1876, line: 33, baseType: !7, size: 32, offset: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1875, file: !1876, line: 34, baseType: !7, size: 32, offset: 96)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !1855, file: !1849, line: 42, baseType: !1882, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1884, line: 57, size: 1088, elements: !1885)
!1884 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1885 = !{!1886, !1887, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1923, !1924, !1951}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1883, file: !1884, line: 58, baseType: !1664, size: 192)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !1883, file: !1884, line: 59, baseType: !1888, size: 128, offset: 192)
!1888 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1889, line: 40, baseType: !1890)
!1889 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1889, line: 36, size: 128, elements: !1891)
!1891 = !{!1892, !1893}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1890, file: !1889, line: 37, baseType: !1669)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1890, file: !1889, line: 38, baseType: !284, size: 128)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !1883, file: !1884, line: 59, baseType: !1888, size: 128, offset: 320)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1883, file: !1884, line: 60, baseType: !7, size: 32, offset: 448)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1883, file: !1884, line: 61, baseType: !7, size: 32, offset: 480)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !1883, file: !1884, line: 62, baseType: !7, size: 32, offset: 512)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !1883, file: !1884, line: 63, baseType: !7, size: 32, offset: 544)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !1883, file: !1884, line: 67, baseType: !7, size: 32, offset: 576)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !1883, file: !1884, line: 68, baseType: !7, size: 32, offset: 608)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !1883, file: !1884, line: 69, baseType: !7, size: 32, offset: 640)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1883, file: !1884, line: 70, baseType: !7, size: 32, offset: 672)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !1883, file: !1884, line: 71, baseType: !7, size: 32, offset: 704)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !1883, file: !1884, line: 72, baseType: !7, size: 32, offset: 736)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !1883, file: !1884, line: 73, baseType: !1718, size: 64, offset: 768)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !1883, file: !1884, line: 74, baseType: !1907, size: 64, offset: 832)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !1317, line: 1314, size: 320, elements: !1909)
!1909 = !{!1910, !1918, !1919, !1920, !1921, !1922}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1908, file: !1317, line: 1315, baseType: !1911)
!1911 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1912, line: 20, baseType: !1913)
!1912 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1912, line: 11, elements: !1914)
!1914 = !{!1915}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1913, file: !1912, line: 12, baseType: !1916)
!1916 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1681, line: 33, baseType: !1917)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1681, line: 31, elements: !1586)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1908, file: !1317, line: 1316, baseType: !32, size: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1908, file: !1317, line: 1317, baseType: !32, size: 32, offset: 32)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1908, file: !1317, line: 1318, baseType: !1907, size: 64, offset: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1908, file: !1317, line: 1319, baseType: !1315, size: 64, offset: 128)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1908, file: !1317, line: 1320, baseType: !299, size: 128, align: 64, offset: 192)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !1883, file: !1884, line: 75, baseType: !1907, size: 64, offset: 896)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !1883, file: !1884, line: 76, baseType: !1925, size: 64, offset: 960)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !1884, line: 26, size: 320, elements: !1927)
!1927 = !{!1928, !1929, !1930, !1931, !1949, !1950}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1926, file: !1884, line: 27, baseType: !1718, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1926, file: !1884, line: 28, baseType: !7, size: 32, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1926, file: !1884, line: 28, baseType: !7, size: 32, offset: 96)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1926, file: !1884, line: 29, baseType: !1932, size: 64, offset: 128)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1934)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !1884, line: 93, size: 256, elements: !1935)
!1935 = !{!1936, !1940, !1944, !1948}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !1934, file: !1884, line: 101, baseType: !1937, size: 64)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{!32, !1882, !1925}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1934, file: !1884, line: 107, baseType: !1941, size: 64, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{null, !1882, !1925}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !1934, file: !1884, line: 117, baseType: !1945, size: 64, offset: 128)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{!771, !1882, !1925}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !1934, file: !1884, line: 122, baseType: !1945, size: 64, offset: 192)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1926, file: !1884, line: 30, baseType: !7, size: 32, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1926, file: !1884, line: 31, baseType: !312, size: 64, offset: 256)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1883, file: !1884, line: 77, baseType: !1952, size: 64, offset: 1024)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1954, line: 13, size: 896, elements: !1955)
!1954 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1955 = !{!1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1953, file: !1954, line: 14, baseType: !568, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1953, file: !1954, line: 15, baseType: !383, size: 32, offset: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1953, file: !1954, line: 16, baseType: !383, size: 32, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1953, file: !1954, line: 21, baseType: !371, size: 64, offset: 128)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1953, file: !1954, line: 27, baseType: !312, size: 64, offset: 192)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1953, file: !1954, line: 28, baseType: !312, size: 64, offset: 256)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1953, file: !1954, line: 29, baseType: !371, size: 64, offset: 320)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1953, file: !1954, line: 32, baseType: !276, size: 128, offset: 384)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1953, file: !1954, line: 33, baseType: !1382, size: 32, offset: 512)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1953, file: !1954, line: 37, baseType: !371, size: 64, offset: 576)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1953, file: !1954, line: 44, baseType: !1967, size: 256, offset: 640)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1968, line: 15, size: 256, elements: !1969)
!1968 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1969 = !{!1970, !1971, !1972, !1973, !1974, !1975, !1976}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1967, file: !1968, line: 16, baseType: !1760)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1967, file: !1968, line: 18, baseType: !32, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1967, file: !1968, line: 19, baseType: !32, size: 32, offset: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1967, file: !1968, line: 20, baseType: !32, size: 32, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1967, file: !1968, line: 21, baseType: !32, size: 32, offset: 96)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1967, file: !1968, line: 22, baseType: !312, size: 64, offset: 128)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1967, file: !1968, line: 23, baseType: !312, size: 64, offset: 192)
!1977 = !DIDerivedType(tag: DW_TAG_member, scope: !1848, file: !1849, line: 44, baseType: !1978, size: 64, offset: 256)
!1978 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1848, file: !1849, line: 44, size: 64, elements: !1979)
!1979 = !{!1980, !1981}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1978, file: !1849, line: 45, baseType: !312, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, scope: !1978, file: !1849, line: 46, baseType: !1982, size: 64)
!1982 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1978, file: !1849, line: 46, size: 64, elements: !1983)
!1983 = !{!1984, !1985}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1982, file: !1849, line: 47, baseType: !7, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1982, file: !1849, line: 48, baseType: !7, size: 32, offset: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1768, file: !1317, line: 402, baseType: !1987, size: 64, offset: 832)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = !DISubroutineType(types: !1989)
!1989 = !{!32, !1731, !1718, !1718, !5}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1768, file: !1317, line: 404, baseType: !1991, size: 64, offset: 896)
!1991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1992, size: 64)
!1992 = !DISubroutineType(types: !1993)
!1993 = !{!771, !1718, !1994}
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1995, line: 305, baseType: !7)
!1995 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1768, file: !1317, line: 405, baseType: !1820, size: 64, offset: 960)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1768, file: !1317, line: 406, baseType: !1783, size: 64, offset: 1024)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1768, file: !1317, line: 407, baseType: !1999, size: 64, offset: 1088)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = !DISubroutineType(types: !2001)
!2001 = !{!32, !1718, !312, !312}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1768, file: !1317, line: 409, baseType: !2003, size: 64, offset: 1152)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = !DISubroutineType(types: !2005)
!2005 = !{null, !1718, !2006, !2006}
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1768, file: !1317, line: 410, baseType: !2008, size: 64, offset: 1216)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = !DISubroutineType(types: !2010)
!2010 = !{!32, !1731, !1718}
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1768, file: !1317, line: 413, baseType: !2012, size: 64, offset: 1280)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64)
!2013 = !DISubroutineType(types: !2014)
!2014 = !{!32, !2015, !1315, !2017}
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !1317, line: 61, flags: DIFlagFwdDecl)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1768, file: !1317, line: 415, baseType: !2019, size: 64, offset: 1344)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{null, !1315}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1732, file: !1317, line: 466, baseType: !312, size: 64, offset: 896)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1732, file: !1317, line: 467, baseType: !2024, size: 32, offset: 960)
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2025, line: 8, baseType: !987)
!2025 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1732, file: !1317, line: 468, baseType: !1669, offset: 992)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1732, file: !1317, line: 469, baseType: !284, size: 128, offset: 1024)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1732, file: !1317, line: 470, baseType: !591, size: 64, offset: 1152)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1727, file: !1720, line: 87, baseType: !312, size: 64, offset: 192)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1727, file: !1720, line: 94, baseType: !312, size: 64, offset: 256)
!2031 = !DIDerivedType(tag: DW_TAG_member, scope: !1724, file: !1720, line: 96, baseType: !2032, size: 64)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1724, file: !1720, line: 96, size: 64, elements: !2033)
!2033 = !{!2034}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2032, file: !1720, line: 101, baseType: !2035, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !277, line: 143, baseType: !331)
!2036 = !DIDerivedType(tag: DW_TAG_member, scope: !1724, file: !1720, line: 103, baseType: !2037, size: 320)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1724, file: !1720, line: 103, size: 320, elements: !2038)
!2038 = !{!2039, !2049, !2052, !2053}
!2039 = !DIDerivedType(tag: DW_TAG_member, scope: !2037, file: !1720, line: 104, baseType: !2040, size: 128)
!2040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2037, file: !1720, line: 104, size: 128, elements: !2041)
!2041 = !{!2042, !2043}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2040, file: !1720, line: 105, baseType: !284, size: 128)
!2043 = !DIDerivedType(tag: DW_TAG_member, scope: !2040, file: !1720, line: 106, baseType: !2044, size: 128)
!2044 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2040, file: !1720, line: 106, size: 128, elements: !2045)
!2045 = !{!2046, !2047, !2048}
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2044, file: !1720, line: 107, baseType: !1718, size: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2044, file: !1720, line: 109, baseType: !32, size: 32, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2044, file: !1720, line: 110, baseType: !32, size: 32, offset: 96)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2037, file: !1720, line: 117, baseType: !2050, size: 64, offset: 128)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1720, line: 117, flags: DIFlagFwdDecl)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2037, file: !1720, line: 119, baseType: !591, size: 64, offset: 192)
!2053 = !DIDerivedType(tag: DW_TAG_member, scope: !2037, file: !1720, line: 120, baseType: !2054, size: 64, offset: 256)
!2054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2037, file: !1720, line: 120, size: 64, elements: !2055)
!2055 = !{!2056, !2057, !2058}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2054, file: !1720, line: 121, baseType: !591, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2054, file: !1720, line: 122, baseType: !312, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, scope: !2054, file: !1720, line: 123, baseType: !2059, size: 32)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2054, file: !1720, line: 123, size: 32, elements: !2060)
!2060 = !{!2061, !2062, !2063}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2059, file: !1720, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2059, file: !1720, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2059, file: !1720, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2064 = !DIDerivedType(tag: DW_TAG_member, scope: !1724, file: !1720, line: 130, baseType: !2065, size: 192)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1724, file: !1720, line: 130, size: 192, elements: !2066)
!2066 = !{!2067, !2068, !2069, !2070, !2071}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2065, file: !1720, line: 131, baseType: !312, size: 64)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2065, file: !1720, line: 134, baseType: !482, size: 8, offset: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2065, file: !1720, line: 135, baseType: !482, size: 8, offset: 72)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2065, file: !1720, line: 136, baseType: !383, size: 32, offset: 96)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2065, file: !1720, line: 137, baseType: !7, size: 32, offset: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, scope: !1724, file: !1720, line: 139, baseType: !2073, size: 256)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1724, file: !1720, line: 139, size: 256, elements: !2074)
!2074 = !{!2075, !2076, !2077}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2073, file: !1720, line: 140, baseType: !312, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2073, file: !1720, line: 141, baseType: !383, size: 32, offset: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2073, file: !1720, line: 143, baseType: !284, size: 128, offset: 128)
!2078 = !DIDerivedType(tag: DW_TAG_member, scope: !1724, file: !1720, line: 145, baseType: !2079, size: 256)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1724, file: !1720, line: 145, size: 256, elements: !2080)
!2080 = !{!2081, !2082, !2085, !2086, !4244}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2079, file: !1720, line: 146, baseType: !312, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2079, file: !1720, line: 147, baseType: !2083, size: 64, offset: 64)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2084, line: 509, baseType: !1718)
!2084 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2079, file: !1720, line: 148, baseType: !312, size: 64, offset: 128)
!2086 = !DIDerivedType(tag: DW_TAG_member, scope: !2079, file: !1720, line: 149, baseType: !2087, size: 64, offset: 192)
!2087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2079, file: !1720, line: 149, size: 64, elements: !2088)
!2088 = !{!2089, !4243}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2087, file: !1720, line: 150, baseType: !2090, size: 64)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1720, line: 388, size: 7296, elements: !2092)
!2092 = !{!2093, !4241}
!2093 = !DIDerivedType(tag: DW_TAG_member, scope: !2091, file: !1720, line: 389, baseType: !2094, size: 7296)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2091, file: !1720, line: 389, size: 7296, elements: !2095)
!2095 = !{!2096, !2214, !2215, !2216, !2220, !2221, !2222, !2223, !2224, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2265, !2273, !2276, !2315, !2316, !4225, !4226, !4229, !4230, !4231, !4234, !4235, !4236, !4239, !4240}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2094, file: !1720, line: 390, baseType: !2097, size: 64)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 64)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1720, line: 305, size: 1472, elements: !2099)
!2099 = !{!2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2114, !2115, !2120, !2121, !2124, !2208, !2209, !2210, !2211, !2212}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2098, file: !1720, line: 308, baseType: !312, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2098, file: !1720, line: 309, baseType: !312, size: 64, offset: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2098, file: !1720, line: 313, baseType: !2097, size: 64, offset: 128)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2098, file: !1720, line: 313, baseType: !2097, size: 64, offset: 192)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2098, file: !1720, line: 315, baseType: !433, size: 192, align: 64, offset: 256)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2098, file: !1720, line: 323, baseType: !312, size: 64, offset: 448)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2098, file: !1720, line: 327, baseType: !2090, size: 64, offset: 512)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2098, file: !1720, line: 333, baseType: !2108, size: 64, offset: 576)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2084, line: 284, baseType: !2109)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2084, line: 284, size: 64, elements: !2110)
!2110 = !{!2111}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2109, file: !2084, line: 284, baseType: !2112, size: 64)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2113, line: 19, baseType: !312)
!2113 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2098, file: !1720, line: 334, baseType: !312, size: 64, offset: 640)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2098, file: !1720, line: 343, baseType: !2116, size: 256, offset: 704)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2098, file: !1720, line: 340, size: 256, elements: !2117)
!2117 = !{!2118, !2119}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2116, file: !1720, line: 341, baseType: !433, size: 192, align: 64)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2116, file: !1720, line: 342, baseType: !312, size: 64, offset: 192)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2098, file: !1720, line: 351, baseType: !284, size: 128, offset: 960)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2098, file: !1720, line: 353, baseType: !2122, size: 64, offset: 1088)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1720, line: 353, flags: DIFlagFwdDecl)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2098, file: !1720, line: 356, baseType: !2125, size: 64, offset: 1152)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2126, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2127)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !2128)
!2128 = !{!2129, !2133, !2134, !2138, !2142, !2182, !2186, !2190, !2194, !2195, !2196, !2200, !2204}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2127, file: !14, line: 558, baseType: !2130, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{null, !2097}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2127, file: !14, line: 559, baseType: !2130, size: 64, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2127, file: !14, line: 560, baseType: !2135, size: 64, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2136 = !DISubroutineType(types: !2137)
!2137 = !{!32, !2097, !312}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2127, file: !14, line: 561, baseType: !2139, size: 64, offset: 192)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DISubroutineType(types: !2141)
!2141 = !{!32, !2097}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2127, file: !14, line: 562, baseType: !2143, size: 64, offset: 256)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DISubroutineType(types: !2145)
!2145 = !{!2146, !2147}
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1720, line: 682, baseType: !7)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !2149)
!2149 = !{!2150, !2151, !2152, !2153, !2154, !2155, !2162, !2169, !2175, !2176, !2177, !2179, !2181}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2148, file: !14, line: 509, baseType: !2097, size: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2148, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2148, file: !14, line: 511, baseType: !1741, size: 32, offset: 96)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2148, file: !14, line: 512, baseType: !312, size: 64, offset: 128)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2148, file: !14, line: 513, baseType: !312, size: 64, offset: 192)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2148, file: !14, line: 514, baseType: !2156, size: 64, offset: 256)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2084, line: 385, baseType: !2158)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2084, line: 385, size: 64, elements: !2159)
!2159 = !{!2160}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2158, file: !2084, line: 385, baseType: !2161, size: 64)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2113, line: 15, baseType: !312)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2148, file: !14, line: 516, baseType: !2163, size: 64, offset: 320)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2084, line: 359, baseType: !2165)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2084, line: 359, size: 64, elements: !2166)
!2166 = !{!2167}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2165, file: !2084, line: 359, baseType: !2168, size: 64)
!2168 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2113, line: 16, baseType: !312)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2148, file: !14, line: 519, baseType: !2170, size: 64, offset: 384)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2113, line: 21, baseType: !2171)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2113, line: 21, size: 64, elements: !2172)
!2172 = !{!2173}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2171, file: !2113, line: 21, baseType: !2174, size: 64)
!2174 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2113, line: 14, baseType: !312)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2148, file: !14, line: 521, baseType: !1718, size: 64, offset: 448)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2148, file: !14, line: 522, baseType: !1718, size: 64, offset: 512)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2148, file: !14, line: 528, baseType: !2178, size: 64, offset: 576)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2148, file: !14, line: 532, baseType: !2180, size: 64, offset: 640)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2148, file: !14, line: 536, baseType: !2083, size: 64, offset: 704)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2127, file: !14, line: 563, baseType: !2183, size: 64, offset: 320)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = !DISubroutineType(types: !2185)
!2185 = !{!2146, !2147, !13}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2127, file: !14, line: 565, baseType: !2187, size: 64, offset: 384)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!2188 = !DISubroutineType(types: !2189)
!2189 = !{null, !2147, !312, !312}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2127, file: !14, line: 567, baseType: !2191, size: 64, offset: 448)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = !DISubroutineType(types: !2193)
!2193 = !{!312, !2097}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2127, file: !14, line: 571, baseType: !2143, size: 64, offset: 512)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2127, file: !14, line: 574, baseType: !2143, size: 64, offset: 576)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2127, file: !14, line: 579, baseType: !2197, size: 64, offset: 640)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2198 = !DISubroutineType(types: !2199)
!2199 = !{!32, !2097, !312, !591, !32, !32}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2127, file: !14, line: 585, baseType: !2201, size: 64, offset: 704)
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 64)
!2202 = !DISubroutineType(types: !2203)
!2203 = !{!292, !2097}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2127, file: !14, line: 615, baseType: !2205, size: 64, offset: 768)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64)
!2206 = !DISubroutineType(types: !2207)
!2207 = !{!1718, !2097, !312}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2098, file: !1720, line: 359, baseType: !312, size: 64, offset: 1216)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2098, file: !1720, line: 361, baseType: !1315, size: 64, offset: 1280)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2098, file: !1720, line: 362, baseType: !591, size: 64, offset: 1344)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2098, file: !1720, line: 365, baseType: !371, size: 64, offset: 1408)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2098, file: !1720, line: 373, baseType: !2213, offset: 1472)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1720, line: 296, elements: !1586)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2094, file: !1720, line: 391, baseType: !1749, size: 64, offset: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2094, file: !1720, line: 392, baseType: !331, size: 64, offset: 128)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2094, file: !1720, line: 394, baseType: !2217, size: 64, offset: 192)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = !DISubroutineType(types: !2219)
!2219 = !{!312, !1315, !312, !312, !312, !312}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2094, file: !1720, line: 398, baseType: !312, size: 64, offset: 256)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2094, file: !1720, line: 399, baseType: !312, size: 64, offset: 320)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2094, file: !1720, line: 405, baseType: !312, size: 64, offset: 384)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2094, file: !1720, line: 406, baseType: !312, size: 64, offset: 448)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2094, file: !1720, line: 407, baseType: !2225, size: 64, offset: 512)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2084, line: 286, baseType: !2227)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2084, line: 286, size: 64, elements: !2228)
!2228 = !{!2229}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2227, file: !2084, line: 286, baseType: !2230, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2113, line: 18, baseType: !312)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2094, file: !1720, line: 416, baseType: !383, size: 32, offset: 576)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2094, file: !1720, line: 428, baseType: !383, size: 32, offset: 608)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2094, file: !1720, line: 437, baseType: !383, size: 32, offset: 640)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2094, file: !1720, line: 447, baseType: !383, size: 32, offset: 672)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2094, file: !1720, line: 450, baseType: !371, size: 64, offset: 704)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2094, file: !1720, line: 452, baseType: !32, size: 32, offset: 768)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2094, file: !1720, line: 454, baseType: !1669, offset: 800)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2094, file: !1720, line: 457, baseType: !1754, size: 256, offset: 832)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2094, file: !1720, line: 459, baseType: !284, size: 128, offset: 1088)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2094, file: !1720, line: 466, baseType: !312, size: 64, offset: 1216)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2094, file: !1720, line: 467, baseType: !312, size: 64, offset: 1280)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2094, file: !1720, line: 469, baseType: !312, size: 64, offset: 1344)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2094, file: !1720, line: 470, baseType: !312, size: 64, offset: 1408)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2094, file: !1720, line: 471, baseType: !373, size: 64, offset: 1472)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2094, file: !1720, line: 472, baseType: !312, size: 64, offset: 1536)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2094, file: !1720, line: 473, baseType: !312, size: 64, offset: 1600)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2094, file: !1720, line: 474, baseType: !312, size: 64, offset: 1664)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2094, file: !1720, line: 475, baseType: !312, size: 64, offset: 1728)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2094, file: !1720, line: 477, baseType: !1669, offset: 1792)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2094, file: !1720, line: 478, baseType: !312, size: 64, offset: 1792)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2094, file: !1720, line: 478, baseType: !312, size: 64, offset: 1856)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2094, file: !1720, line: 478, baseType: !312, size: 64, offset: 1920)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2094, file: !1720, line: 478, baseType: !312, size: 64, offset: 1984)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2094, file: !1720, line: 479, baseType: !312, size: 64, offset: 2048)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2094, file: !1720, line: 479, baseType: !312, size: 64, offset: 2112)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2094, file: !1720, line: 479, baseType: !312, size: 64, offset: 2176)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2094, file: !1720, line: 480, baseType: !312, size: 64, offset: 2240)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2094, file: !1720, line: 480, baseType: !312, size: 64, offset: 2304)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2094, file: !1720, line: 480, baseType: !312, size: 64, offset: 2368)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2094, file: !1720, line: 480, baseType: !312, size: 64, offset: 2432)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2094, file: !1720, line: 482, baseType: !2262, size: 2816, offset: 2496)
!2262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 2816, elements: !2263)
!2263 = !{!2264}
!2264 = !DISubrange(count: 44)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2094, file: !1720, line: 488, baseType: !2266, size: 256, offset: 5312)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2267, line: 60, size: 256, elements: !2268)
!2267 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2268 = !{!2269}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2266, file: !2267, line: 61, baseType: !2270, size: 256)
!2270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 256, elements: !2271)
!2271 = !{!2272}
!2272 = !DISubrange(count: 4)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2094, file: !1720, line: 490, baseType: !2274, size: 64, offset: 5568)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!2275 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1720, line: 490, flags: DIFlagFwdDecl)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2094, file: !1720, line: 493, baseType: !2277, size: 896, offset: 5632)
!2277 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2278, line: 53, baseType: !2279)
!2278 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2278, line: 13, size: 896, elements: !2280)
!2280 = !{!2281, !2282, !2283, !2284, !2287, !2288, !2289, !2290, !2310, !2311, !2312}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2279, file: !2278, line: 18, baseType: !331, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2279, file: !2278, line: 28, baseType: !373, size: 64, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2279, file: !2278, line: 31, baseType: !1754, size: 256, offset: 128)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2279, file: !2278, line: 32, baseType: !2285, size: 64, offset: 384)
!2285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2286, size: 64)
!2286 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2278, line: 32, flags: DIFlagFwdDecl)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2279, file: !2278, line: 37, baseType: !476, size: 16, offset: 448)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2279, file: !2278, line: 40, baseType: !1664, size: 192, offset: 512)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2279, file: !2278, line: 41, baseType: !591, size: 64, offset: 704)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2279, file: !2278, line: 42, baseType: !2291, size: 64, offset: 768)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2293)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2294, line: 13, size: 896, elements: !2295)
!2294 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2295 = !{!2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2293, file: !2294, line: 14, baseType: !591, size: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2293, file: !2294, line: 15, baseType: !312, size: 64, offset: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2293, file: !2294, line: 17, baseType: !312, size: 64, offset: 128)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2293, file: !2294, line: 17, baseType: !312, size: 64, offset: 192)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2293, file: !2294, line: 19, baseType: !998, size: 64, offset: 256)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2293, file: !2294, line: 21, baseType: !998, size: 64, offset: 320)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2293, file: !2294, line: 22, baseType: !998, size: 64, offset: 384)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2293, file: !2294, line: 23, baseType: !998, size: 64, offset: 448)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2293, file: !2294, line: 24, baseType: !998, size: 64, offset: 512)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2293, file: !2294, line: 25, baseType: !998, size: 64, offset: 576)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2293, file: !2294, line: 26, baseType: !998, size: 64, offset: 640)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2293, file: !2294, line: 27, baseType: !998, size: 64, offset: 704)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2293, file: !2294, line: 28, baseType: !998, size: 64, offset: 768)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2293, file: !2294, line: 29, baseType: !998, size: 64, offset: 832)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2279, file: !2278, line: 44, baseType: !383, size: 32, offset: 832)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2279, file: !2278, line: 50, baseType: !581, size: 16, offset: 864)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2279, file: !2278, line: 51, baseType: !2313, size: 16, offset: 880)
!2313 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !332, line: 18, baseType: !2314)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !334, line: 23, baseType: !625)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2094, file: !1720, line: 495, baseType: !312, size: 64, offset: 6528)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2094, file: !1720, line: 497, baseType: !2317, size: 64, offset: 6592)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1720, line: 381, size: 384, elements: !2319)
!2319 = !{!2320, !2321, !4224}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2318, file: !1720, line: 382, baseType: !383, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2318, file: !1720, line: 383, baseType: !2322, size: 128, offset: 64)
!2322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1720, line: 376, size: 128, elements: !2323)
!2323 = !{!2324, !4222}
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2322, file: !1720, line: 377, baseType: !2325, size: 64)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2327, line: 640, size: 48640, elements: !2328)
!2327 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2328 = !{!2329, !2335, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2350, !2368, !2379, !2460, !2461, !2462, !2473, !2474, !2476, !2477, !2478, !2479, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2557, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2590, !2592, !2593, !2594, !2606, !2607, !2608, !2609, !2610, !2611, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2635, !2640, !2948, !2949, !2950, !2951, !2952, !2955, !2958, !2961, !2964, !3685, !3781, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3829, !3830, !3831, !3832, !3833, !3838, !3839, !3840, !3843, !3844, !3847, !3850, !3853, !3856, !3888, !3891, !3892, !3971, !3972, !3975, !3976, !3979, !3980, !3981, !3985, !3986, !3987, !4000, !4001, !4002, !4012, !4017, !4018, !4024, !4025, !4026, !4027, !4028, !4029, !4030, !4031, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2326, file: !2327, line: 646, baseType: !2330, size: 128)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2331, line: 56, size: 128, elements: !2332)
!2331 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2332 = !{!2333, !2334}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2330, file: !2331, line: 57, baseType: !312, size: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2330, file: !2331, line: 58, baseType: !987, size: 32, offset: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2326, file: !2327, line: 649, baseType: !2336, size: 64, offset: 128)
!2336 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !998)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2326, file: !2327, line: 657, baseType: !591, size: 64, offset: 192)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2326, file: !2327, line: 658, baseType: !568, size: 32, offset: 256)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2326, file: !2327, line: 660, baseType: !7, size: 32, offset: 288)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2326, file: !2327, line: 661, baseType: !7, size: 32, offset: 320)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2326, file: !2327, line: 684, baseType: !32, size: 32, offset: 352)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2326, file: !2327, line: 686, baseType: !32, size: 32, offset: 384)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2326, file: !2327, line: 687, baseType: !32, size: 32, offset: 416)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2326, file: !2327, line: 688, baseType: !32, size: 32, offset: 448)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2326, file: !2327, line: 689, baseType: !7, size: 32, offset: 480)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2326, file: !2327, line: 691, baseType: !2347, size: 64, offset: 512)
!2347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2348, size: 64)
!2348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2349)
!2349 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2327, line: 691, flags: DIFlagFwdDecl)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2326, file: !2327, line: 692, baseType: !2351, size: 832, offset: 576)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2327, line: 451, size: 832, elements: !2352)
!2352 = !{!2353, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2351, file: !2327, line: 453, baseType: !2354, size: 128)
!2354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2327, line: 325, size: 128, elements: !2355)
!2355 = !{!2356, !2357}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2354, file: !2327, line: 326, baseType: !312, size: 64)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2354, file: !2327, line: 327, baseType: !987, size: 32, offset: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2351, file: !2327, line: 454, baseType: !433, size: 192, align: 64, offset: 128)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2351, file: !2327, line: 455, baseType: !284, size: 128, offset: 320)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2351, file: !2327, line: 456, baseType: !7, size: 32, offset: 448)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2351, file: !2327, line: 458, baseType: !331, size: 64, offset: 512)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2351, file: !2327, line: 459, baseType: !331, size: 64, offset: 576)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2351, file: !2327, line: 460, baseType: !331, size: 64, offset: 640)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2351, file: !2327, line: 461, baseType: !331, size: 64, offset: 704)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2351, file: !2327, line: 463, baseType: !331, size: 64, offset: 768)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2351, file: !2327, line: 465, baseType: !2367, offset: 832)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2327, line: 415, elements: !1586)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2326, file: !2327, line: 693, baseType: !2369, size: 384, offset: 1408)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2327, line: 489, size: 384, elements: !2370)
!2370 = !{!2371, !2372, !2373, !2374, !2375, !2376, !2377}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2369, file: !2327, line: 490, baseType: !284, size: 128)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2369, file: !2327, line: 491, baseType: !312, size: 64, offset: 128)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2369, file: !2327, line: 492, baseType: !312, size: 64, offset: 192)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2369, file: !2327, line: 493, baseType: !7, size: 32, offset: 256)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2369, file: !2327, line: 494, baseType: !476, size: 16, offset: 288)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2369, file: !2327, line: 495, baseType: !476, size: 16, offset: 304)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2369, file: !2327, line: 497, baseType: !2378, size: 64, offset: 320)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2326, file: !2327, line: 697, baseType: !2380, size: 1792, offset: 1792)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2327, line: 507, size: 1792, elements: !2381)
!2381 = !{!2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2457, !2458}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2380, file: !2327, line: 508, baseType: !433, size: 192, align: 64)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2380, file: !2327, line: 515, baseType: !331, size: 64, offset: 192)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2380, file: !2327, line: 516, baseType: !331, size: 64, offset: 256)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2380, file: !2327, line: 517, baseType: !331, size: 64, offset: 320)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2380, file: !2327, line: 518, baseType: !331, size: 64, offset: 384)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2380, file: !2327, line: 519, baseType: !331, size: 64, offset: 448)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2380, file: !2327, line: 526, baseType: !377, size: 64, offset: 512)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2380, file: !2327, line: 527, baseType: !331, size: 64, offset: 576)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2380, file: !2327, line: 528, baseType: !7, size: 32, offset: 640)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2380, file: !2327, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2380, file: !2327, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2380, file: !2327, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2380, file: !2327, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2380, file: !2327, line: 563, baseType: !2396, size: 512, offset: 704)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !2397)
!2397 = !{!2398, !2404, !2405, !2410, !2453, !2454, !2455, !2456}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2396, file: !20, line: 119, baseType: !2399, size: 256)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2400, line: 9, size: 256, elements: !2401)
!2400 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2401 = !{!2402, !2403}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2399, file: !2400, line: 10, baseType: !433, size: 192, align: 64)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2399, file: !2400, line: 11, baseType: !453, size: 64, offset: 192)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2396, file: !20, line: 120, baseType: !453, size: 64, offset: 256)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2396, file: !20, line: 121, baseType: !2406, size: 64, offset: 320)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{!19, !2409}
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2396, file: !20, line: 122, baseType: !2411, size: 64, offset: 384)
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 64)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !2413)
!2413 = !{!2414, !2434, !2435, !2438, !2443, !2444, !2448, !2452}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2412, file: !20, line: 160, baseType: !2415, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2416, size: 64)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !2417)
!2417 = !{!2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2416, file: !20, line: 215, baseType: !1760)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2416, file: !20, line: 216, baseType: !7, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2416, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2416, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2416, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2416, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2416, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2416, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2416, file: !20, line: 233, baseType: !453, size: 64, offset: 128)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2416, file: !20, line: 234, baseType: !2409, size: 64, offset: 192)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2416, file: !20, line: 235, baseType: !453, size: 64, offset: 256)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2416, file: !20, line: 236, baseType: !2409, size: 64, offset: 320)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2416, file: !20, line: 237, baseType: !2431, size: 4096, offset: 512)
!2431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2412, size: 4096, elements: !2432)
!2432 = !{!2433}
!2433 = !DISubrange(count: 8)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2412, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2412, file: !20, line: 162, baseType: !2436, size: 32, offset: 96)
!2436 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !277, line: 27, baseType: !2437)
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1041, line: 96, baseType: !32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2412, file: !20, line: 163, baseType: !2439, size: 32, offset: 128)
!2439 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1344, line: 276, baseType: !2440)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1344, line: 276, size: 32, elements: !2441)
!2441 = !{!2442}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2440, file: !1344, line: 276, baseType: !1348, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2412, file: !20, line: 164, baseType: !2409, size: 64, offset: 192)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2412, file: !20, line: 165, baseType: !2445, size: 128, offset: 256)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2400, line: 14, size: 128, elements: !2446)
!2446 = !{!2447}
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2445, file: !2400, line: 15, baseType: !1746, size: 128)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2412, file: !20, line: 166, baseType: !2449, size: 64, offset: 384)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2450 = !DISubroutineType(types: !2451)
!2451 = !{!453}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2412, file: !20, line: 167, baseType: !453, size: 64, offset: 448)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2396, file: !20, line: 123, baseType: !794, size: 8, offset: 448)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2396, file: !20, line: 124, baseType: !794, size: 8, offset: 456)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2396, file: !20, line: 125, baseType: !794, size: 8, offset: 464)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2396, file: !20, line: 126, baseType: !794, size: 8, offset: 472)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2380, file: !2327, line: 572, baseType: !2396, size: 512, offset: 1216)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2380, file: !2327, line: 580, baseType: !2459, size: 64, offset: 1728)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2326, file: !2327, line: 721, baseType: !7, size: 32, offset: 3584)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2326, file: !2327, line: 722, baseType: !32, size: 32, offset: 3616)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2326, file: !2327, line: 723, baseType: !2463, size: 64, offset: 3648)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2465)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2466, line: 17, baseType: !2467)
!2466 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2466, line: 17, size: 64, elements: !2468)
!2468 = !{!2469}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2467, file: !2466, line: 17, baseType: !2470, size: 64)
!2470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 64, elements: !2471)
!2471 = !{!2472}
!2472 = !DISubrange(count: 1)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2326, file: !2327, line: 724, baseType: !2465, size: 64, offset: 3712)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2326, file: !2327, line: 749, baseType: !2475, offset: 3776)
!2475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2327, line: 290, elements: !1586)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2326, file: !2327, line: 751, baseType: !284, size: 128, offset: 3776)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2326, file: !2327, line: 757, baseType: !2090, size: 64, offset: 3904)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2326, file: !2327, line: 758, baseType: !2090, size: 64, offset: 3968)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2326, file: !2327, line: 761, baseType: !2480, size: 320, offset: 4032)
!2480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2267, line: 34, size: 320, elements: !2481)
!2481 = !{!2482, !2483}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2480, file: !2267, line: 35, baseType: !331, size: 64)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2480, file: !2267, line: 36, baseType: !2484, size: 256, offset: 64)
!2484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2097, size: 256, elements: !2271)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2326, file: !2327, line: 766, baseType: !32, size: 32, offset: 4352)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2326, file: !2327, line: 767, baseType: !32, size: 32, offset: 4384)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2326, file: !2327, line: 768, baseType: !32, size: 32, offset: 4416)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2326, file: !2327, line: 770, baseType: !32, size: 32, offset: 4448)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2326, file: !2327, line: 772, baseType: !312, size: 64, offset: 4480)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2326, file: !2327, line: 775, baseType: !7, size: 32, offset: 4544)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2326, file: !2327, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2326, file: !2327, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2326, file: !2327, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2326, file: !2327, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2326, file: !2327, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2326, file: !2327, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2326, file: !2327, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2326, file: !2327, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2326, file: !2327, line: 831, baseType: !312, size: 64, offset: 4672)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2326, file: !2327, line: 833, baseType: !2501, size: 384, offset: 4736)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !2502)
!2502 = !{!2503, !2508}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2501, file: !25, line: 26, baseType: !2504, size: 64)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!2505 = !DISubroutineType(types: !2506)
!2506 = !{!998, !2507}
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, scope: !2501, file: !25, line: 27, baseType: !2509, size: 320, offset: 64)
!2509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2501, file: !25, line: 27, size: 320, elements: !2510)
!2510 = !{!2511, !2521, !2547}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2509, file: !25, line: 36, baseType: !2512, size: 320)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2509, file: !25, line: 29, size: 320, elements: !2513)
!2513 = !{!2514, !2516, !2517, !2518, !2519, !2520}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2512, file: !25, line: 30, baseType: !2515, size: 64)
!2515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2512, file: !25, line: 31, baseType: !987, size: 32, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2512, file: !25, line: 32, baseType: !987, size: 32, offset: 96)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2512, file: !25, line: 33, baseType: !987, size: 32, offset: 128)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2512, file: !25, line: 34, baseType: !331, size: 64, offset: 192)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2512, file: !25, line: 35, baseType: !2515, size: 64, offset: 256)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2509, file: !25, line: 46, baseType: !2522, size: 192)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2509, file: !25, line: 38, size: 192, elements: !2523)
!2523 = !{!2524, !2525, !2526, !2546}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2522, file: !25, line: 39, baseType: !2436, size: 32)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2522, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, scope: !2522, file: !25, line: 41, baseType: !2527, size: 64, offset: 64)
!2527 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2522, file: !25, line: 41, size: 64, elements: !2528)
!2528 = !{!2529, !2537}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2527, file: !25, line: 42, baseType: !2530, size: 64)
!2530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 64)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2532, line: 7, size: 128, elements: !2533)
!2532 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2533 = !{!2534, !2536}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2531, file: !2532, line: 8, baseType: !2535, size: 64)
!2535 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1041, line: 93, baseType: !379)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2531, file: !2532, line: 9, baseType: !379, size: 64, offset: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2527, file: !25, line: 43, baseType: !2538, size: 64)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2540, line: 7, size: 64, elements: !2541)
!2540 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2541 = !{!2542, !2545}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2539, file: !2540, line: 8, baseType: !2543, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2540, line: 5, baseType: !2544)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !332, line: 20, baseType: !942)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2539, file: !2540, line: 9, baseType: !2544, size: 32, offset: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2522, file: !25, line: 45, baseType: !331, size: 64, offset: 128)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2509, file: !25, line: 54, baseType: !2548, size: 256)
!2548 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2509, file: !25, line: 48, size: 256, elements: !2549)
!2549 = !{!2550, !2553, !2554, !2555, !2556}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2548, file: !25, line: 49, baseType: !2551, size: 64)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 64)
!2552 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2548, file: !25, line: 50, baseType: !32, size: 32, offset: 64)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2548, file: !25, line: 51, baseType: !32, size: 32, offset: 96)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2548, file: !25, line: 52, baseType: !312, size: 64, offset: 128)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2548, file: !25, line: 53, baseType: !312, size: 64, offset: 192)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2326, file: !2327, line: 835, baseType: !2558, size: 32, offset: 5120)
!2558 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !277, line: 22, baseType: !2559)
!2559 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1041, line: 28, baseType: !32)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2326, file: !2327, line: 836, baseType: !2558, size: 32, offset: 5152)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2326, file: !2327, line: 840, baseType: !312, size: 64, offset: 5184)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2326, file: !2327, line: 849, baseType: !2325, size: 64, offset: 5248)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2326, file: !2327, line: 852, baseType: !2325, size: 64, offset: 5312)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2326, file: !2327, line: 857, baseType: !284, size: 128, offset: 5376)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2326, file: !2327, line: 858, baseType: !284, size: 128, offset: 5504)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2326, file: !2327, line: 859, baseType: !2325, size: 64, offset: 5632)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2326, file: !2327, line: 867, baseType: !284, size: 128, offset: 5696)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2326, file: !2327, line: 868, baseType: !284, size: 128, offset: 5824)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2326, file: !2327, line: 871, baseType: !2570, size: 64, offset: 5952)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !2572, line: 59, size: 768, elements: !2573)
!2572 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!2573 = !{!2574, !2575, !2576, !2577, !2579, !2580, !2581, !2582}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2571, file: !2572, line: 61, baseType: !568, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2571, file: !2572, line: 62, baseType: !7, size: 32, offset: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2571, file: !2572, line: 63, baseType: !1669, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2571, file: !2572, line: 65, baseType: !2578, size: 256, offset: 64)
!2578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1580, size: 256, elements: !2271)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2571, file: !2572, line: 66, baseType: !1580, size: 64, offset: 320)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2571, file: !2572, line: 68, baseType: !1888, size: 128, offset: 384)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2571, file: !2572, line: 69, baseType: !299, size: 128, align: 64, offset: 512)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2571, file: !2572, line: 70, baseType: !2583, size: 128, offset: 640)
!2583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2584, size: 128, elements: !2471)
!2584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !2572, line: 54, size: 128, elements: !2585)
!2585 = !{!2586, !2587}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2584, file: !2572, line: 55, baseType: !32, size: 32)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2584, file: !2572, line: 56, baseType: !2588, size: 64, offset: 64)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 64)
!2589 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !2572, line: 56, flags: DIFlagFwdDecl)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2326, file: !2327, line: 872, baseType: !2591, size: 512, offset: 6016)
!2591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !276, size: 512, elements: !2271)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2326, file: !2327, line: 873, baseType: !284, size: 128, offset: 6528)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2326, file: !2327, line: 874, baseType: !284, size: 128, offset: 6656)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2326, file: !2327, line: 876, baseType: !2595, size: 64, offset: 6784)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 64)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2597, line: 26, size: 192, elements: !2598)
!2597 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2598 = !{!2599, !2600}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2596, file: !2597, line: 27, baseType: !7, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2596, file: !2597, line: 28, baseType: !2601, size: 128, offset: 64)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2602, line: 43, size: 128, elements: !2603)
!2602 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2603 = !{!2604, !2605}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2601, file: !2602, line: 44, baseType: !1760)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2601, file: !2602, line: 45, baseType: !284, size: 128)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2326, file: !2327, line: 879, baseType: !1001, size: 64, offset: 6848)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2326, file: !2327, line: 882, baseType: !1001, size: 64, offset: 6912)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2326, file: !2327, line: 884, baseType: !331, size: 64, offset: 6976)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2326, file: !2327, line: 885, baseType: !331, size: 64, offset: 7040)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2326, file: !2327, line: 890, baseType: !331, size: 64, offset: 7104)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2326, file: !2327, line: 891, baseType: !2612, size: 128, offset: 7168)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2327, line: 242, size: 128, elements: !2613)
!2613 = !{!2614, !2615, !2616}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2612, file: !2327, line: 244, baseType: !331, size: 64)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2612, file: !2327, line: 245, baseType: !331, size: 64, offset: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2612, file: !2327, line: 246, baseType: !1760, offset: 128)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2326, file: !2327, line: 900, baseType: !312, size: 64, offset: 7296)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2326, file: !2327, line: 901, baseType: !312, size: 64, offset: 7360)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2326, file: !2327, line: 904, baseType: !331, size: 64, offset: 7424)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2326, file: !2327, line: 907, baseType: !331, size: 64, offset: 7488)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2326, file: !2327, line: 910, baseType: !312, size: 64, offset: 7552)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2326, file: !2327, line: 911, baseType: !312, size: 64, offset: 7616)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2326, file: !2327, line: 914, baseType: !2624, size: 640, offset: 7680)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2625, line: 123, size: 640, elements: !2626)
!2625 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2626 = !{!2627, !2633, !2634}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2624, file: !2625, line: 124, baseType: !2628, size: 576)
!2628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2629, size: 576, elements: !1591)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2625, line: 108, size: 192, elements: !2630)
!2630 = !{!2631, !2632}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2629, file: !2625, line: 109, baseType: !331, size: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2629, file: !2625, line: 110, baseType: !2445, size: 128, offset: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2624, file: !2625, line: 125, baseType: !7, size: 32, offset: 576)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2624, file: !2625, line: 126, baseType: !7, size: 32, offset: 608)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2326, file: !2327, line: 917, baseType: !2636, size: 192, offset: 8320)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2625, line: 134, size: 192, elements: !2637)
!2637 = !{!2638, !2639}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2636, file: !2625, line: 135, baseType: !299, size: 128, align: 64)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2636, file: !2625, line: 136, baseType: !7, size: 32, offset: 128)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2326, file: !2327, line: 923, baseType: !2641, size: 64, offset: 8512)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2643)
!2643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2644, line: 111, size: 1280, elements: !2645)
!2644 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2645 = !{!2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2665, !2666, !2667, !2668, !2669, !2670, !2775, !2776, !2777, !2778, !2779, !2935, !2943}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2643, file: !2644, line: 112, baseType: !383, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2643, file: !2644, line: 120, baseType: !1382, size: 32, offset: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2643, file: !2644, line: 121, baseType: !1390, size: 32, offset: 64)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2643, file: !2644, line: 122, baseType: !1382, size: 32, offset: 96)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2643, file: !2644, line: 123, baseType: !1390, size: 32, offset: 128)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2643, file: !2644, line: 124, baseType: !1382, size: 32, offset: 160)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2643, file: !2644, line: 125, baseType: !1390, size: 32, offset: 192)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2643, file: !2644, line: 126, baseType: !1382, size: 32, offset: 224)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2643, file: !2644, line: 127, baseType: !1390, size: 32, offset: 256)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2643, file: !2644, line: 128, baseType: !7, size: 32, offset: 288)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2643, file: !2644, line: 129, baseType: !2657, size: 64, offset: 320)
!2657 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2658, line: 26, baseType: !2659)
!2658 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2658, line: 24, size: 64, elements: !2660)
!2660 = !{!2661}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2659, file: !2658, line: 25, baseType: !2662, size: 64)
!2662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 64, elements: !2663)
!2663 = !{!2664}
!2664 = !DISubrange(count: 2)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2643, file: !2644, line: 130, baseType: !2657, size: 64, offset: 384)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2643, file: !2644, line: 131, baseType: !2657, size: 64, offset: 448)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2643, file: !2644, line: 132, baseType: !2657, size: 64, offset: 512)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2643, file: !2644, line: 133, baseType: !2657, size: 64, offset: 576)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2643, file: !2644, line: 135, baseType: !482, size: 8, offset: 640)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2643, file: !2644, line: 137, baseType: !2671, size: 64, offset: 704)
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 64)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2673, line: 189, size: 1664, elements: !2674)
!2673 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2674 = !{!2675, !2676, !2679, !2684, !2685, !2688, !2689, !2694, !2695, !2696, !2697, !2699, !2700, !2701, !2702, !2703, !2739, !2760}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2672, file: !2673, line: 190, baseType: !568, size: 32)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2672, file: !2673, line: 191, baseType: !2677, size: 32, offset: 32)
!2677 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2673, line: 28, baseType: !2678)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !277, line: 98, baseType: !2544)
!2679 = !DIDerivedType(tag: DW_TAG_member, scope: !2672, file: !2673, line: 192, baseType: !2680, size: 192, offset: 64)
!2680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2672, file: !2673, line: 192, size: 192, elements: !2681)
!2681 = !{!2682, !2683}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2680, file: !2673, line: 193, baseType: !284, size: 128)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2680, file: !2673, line: 194, baseType: !433, size: 192, align: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2672, file: !2673, line: 199, baseType: !1754, size: 256, offset: 256)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2672, file: !2673, line: 200, baseType: !2686, size: 64, offset: 512)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2687 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2673, line: 200, flags: DIFlagFwdDecl)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2672, file: !2673, line: 201, baseType: !591, size: 64, offset: 576)
!2689 = !DIDerivedType(tag: DW_TAG_member, scope: !2672, file: !2673, line: 202, baseType: !2690, size: 64, offset: 640)
!2690 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2672, file: !2673, line: 202, size: 64, elements: !2691)
!2691 = !{!2692, !2693}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2690, file: !2673, line: 203, baseType: !1483, size: 64)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2690, file: !2673, line: 204, baseType: !1483, size: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2672, file: !2673, line: 206, baseType: !1483, size: 64, offset: 704)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2672, file: !2673, line: 207, baseType: !1382, size: 32, offset: 768)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2672, file: !2673, line: 208, baseType: !1390, size: 32, offset: 800)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2672, file: !2673, line: 209, baseType: !2698, size: 32, offset: 832)
!2698 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2673, line: 31, baseType: !1502)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2672, file: !2673, line: 210, baseType: !476, size: 16, offset: 864)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2672, file: !2673, line: 211, baseType: !476, size: 16, offset: 880)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2672, file: !2673, line: 215, baseType: !625, size: 16, offset: 896)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2672, file: !2673, line: 222, baseType: !312, size: 64, offset: 960)
!2703 = !DIDerivedType(tag: DW_TAG_member, scope: !2672, file: !2673, line: 239, baseType: !2704, size: 320, offset: 1024)
!2704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2672, file: !2673, line: 239, size: 320, elements: !2705)
!2705 = !{!2706, !2731}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2704, file: !2673, line: 240, baseType: !2707, size: 320)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2673, line: 108, size: 320, elements: !2708)
!2708 = !{!2709, !2710, !2720, !2723, !2730}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2707, file: !2673, line: 110, baseType: !312, size: 64)
!2710 = !DIDerivedType(tag: DW_TAG_member, scope: !2707, file: !2673, line: 111, baseType: !2711, size: 64, offset: 64)
!2711 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2707, file: !2673, line: 111, size: 64, elements: !2712)
!2712 = !{!2713, !2719}
!2713 = !DIDerivedType(tag: DW_TAG_member, scope: !2711, file: !2673, line: 112, baseType: !2714, size: 64)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2711, file: !2673, line: 112, size: 64, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2714, file: !2673, line: 114, baseType: !581, size: 16)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2714, file: !2673, line: 115, baseType: !2718, size: 48, offset: 16)
!2718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 48, elements: !999)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2711, file: !2673, line: 121, baseType: !312, size: 64)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2707, file: !2673, line: 123, baseType: !2721, size: 64, offset: 128)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2722 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2673, line: 96, flags: DIFlagFwdDecl)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2707, file: !2673, line: 124, baseType: !2724, size: 64, offset: 192)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 64)
!2725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2673, line: 102, size: 192, elements: !2726)
!2726 = !{!2727, !2728, !2729}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2725, file: !2673, line: 103, baseType: !299, size: 128, align: 64)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2725, file: !2673, line: 104, baseType: !568, size: 32, offset: 128)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2725, file: !2673, line: 105, baseType: !771, size: 8, offset: 160)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2707, file: !2673, line: 125, baseType: !292, size: 64, offset: 256)
!2731 = !DIDerivedType(tag: DW_TAG_member, scope: !2704, file: !2673, line: 241, baseType: !2732, size: 320)
!2732 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2704, file: !2673, line: 241, size: 320, elements: !2733)
!2733 = !{!2734, !2735, !2736, !2737, !2738}
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2732, file: !2673, line: 242, baseType: !312, size: 64)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2732, file: !2673, line: 243, baseType: !312, size: 64, offset: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2732, file: !2673, line: 244, baseType: !2721, size: 64, offset: 128)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2732, file: !2673, line: 245, baseType: !2724, size: 64, offset: 192)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2732, file: !2673, line: 246, baseType: !1038, size: 64, offset: 256)
!2739 = !DIDerivedType(tag: DW_TAG_member, scope: !2672, file: !2673, line: 254, baseType: !2740, size: 256, offset: 1344)
!2740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2672, file: !2673, line: 254, size: 256, elements: !2741)
!2741 = !{!2742, !2748}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2740, file: !2673, line: 255, baseType: !2743, size: 256)
!2743 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2673, line: 128, size: 256, elements: !2744)
!2744 = !{!2745, !2746}
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2743, file: !2673, line: 129, baseType: !591, size: 64)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2743, file: !2673, line: 130, baseType: !2747, size: 256)
!2747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, size: 256, elements: !2271)
!2748 = !DIDerivedType(tag: DW_TAG_member, scope: !2740, file: !2673, line: 256, baseType: !2749, size: 256)
!2749 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2740, file: !2673, line: 256, size: 256, elements: !2750)
!2750 = !{!2751, !2752}
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2749, file: !2673, line: 258, baseType: !284, size: 128)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2749, file: !2673, line: 259, baseType: !2753, size: 128, offset: 128)
!2753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2754, line: 22, size: 128, elements: !2755)
!2754 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2755 = !{!2756, !2759}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2753, file: !2754, line: 23, baseType: !2757, size: 64)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2758 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2754, line: 23, flags: DIFlagFwdDecl)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2753, file: !2754, line: 24, baseType: !312, size: 64, offset: 64)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2672, file: !2673, line: 274, baseType: !2761, size: 64, offset: 1600)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2673, line: 170, size: 192, elements: !2763)
!2763 = !{!2764, !2773, !2774}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2762, file: !2673, line: 171, baseType: !2765, size: 64)
!2765 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2673, line: 165, baseType: !2766)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2767 = !DISubroutineType(types: !2768)
!2768 = !{!32, !2671, !2769, !2771, !2671}
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2722)
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2743)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2762, file: !2673, line: 172, baseType: !2671, size: 64, offset: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2762, file: !2673, line: 173, baseType: !2721, size: 64, offset: 128)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2643, file: !2644, line: 138, baseType: !2671, size: 64, offset: 768)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2643, file: !2644, line: 139, baseType: !2671, size: 64, offset: 832)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2643, file: !2644, line: 140, baseType: !2671, size: 64, offset: 896)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2643, file: !2644, line: 145, baseType: !1952, size: 64, offset: 960)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2643, file: !2644, line: 146, baseType: !2780, size: 64, offset: 1024)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2782, line: 56, size: 4160, elements: !2783)
!2782 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2783 = !{!2784, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2823, !2824, !2825, !2826, !2827, !2839, !2920, !2921, !2933}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2781, file: !2782, line: 57, baseType: !2785, size: 576)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2782, line: 23, size: 576, elements: !2786)
!2786 = !{!2787, !2788}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2785, file: !2782, line: 24, baseType: !987, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, scope: !2785, file: !2782, line: 25, baseType: !2789, size: 512, offset: 64)
!2789 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2785, file: !2782, line: 25, size: 512, elements: !2790)
!2790 = !{!2791, !2800}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2789, file: !2782, line: 26, baseType: !2792, size: 480)
!2792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2793, size: 480, elements: !2798)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2782, line: 17, size: 96, elements: !2794)
!2794 = !{!2795, !2796, !2797}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2793, file: !2782, line: 18, baseType: !987, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2793, file: !2782, line: 19, baseType: !987, size: 32, offset: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2793, file: !2782, line: 20, baseType: !987, size: 32, offset: 64)
!2798 = !{!2799}
!2799 = !DISubrange(count: 5)
!2800 = !DIDerivedType(tag: DW_TAG_member, scope: !2789, file: !2782, line: 27, baseType: !2801, size: 128)
!2801 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2789, file: !2782, line: 27, size: 128, elements: !2802)
!2802 = !{!2803, !2805}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2801, file: !2782, line: 28, baseType: !2804, size: 64)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2801, file: !2782, line: 29, baseType: !2804, size: 64, offset: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2781, file: !2782, line: 58, baseType: !2785, size: 576, offset: 576)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2781, file: !2782, line: 59, baseType: !2785, size: 576, offset: 1152)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2781, file: !2782, line: 60, baseType: !383, size: 32, offset: 1728)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2781, file: !2782, line: 61, baseType: !2780, size: 64, offset: 1792)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2781, file: !2782, line: 62, baseType: !32, size: 32, offset: 1856)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2781, file: !2782, line: 63, baseType: !1382, size: 32, offset: 1888)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2781, file: !2782, line: 64, baseType: !1390, size: 32, offset: 1920)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2781, file: !2782, line: 65, baseType: !2814, size: 192, offset: 1984)
!2814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2815, line: 7, size: 192, elements: !2816)
!2815 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2816 = !{!2817, !2818, !2822}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2814, file: !2815, line: 8, baseType: !371, size: 64)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2814, file: !2815, line: 9, baseType: !2819, size: 64, offset: 64)
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2821)
!2821 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2815, line: 5, flags: DIFlagFwdDecl)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2814, file: !2815, line: 10, baseType: !7, size: 32, offset: 128)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2781, file: !2782, line: 66, baseType: !312, size: 64, offset: 2176)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2781, file: !2782, line: 74, baseType: !284, size: 128, offset: 2240)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2781, file: !2782, line: 75, baseType: !2671, size: 64, offset: 2368)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2781, file: !2782, line: 76, baseType: !1754, size: 256, offset: 2432)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2781, file: !2782, line: 83, baseType: !2828, size: 256, offset: 2688)
!2828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2829, line: 102, size: 256, elements: !2830)
!2829 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2830 = !{!2831, !2832, !2833}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2828, file: !2829, line: 103, baseType: !371, size: 64)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2828, file: !2829, line: 104, baseType: !284, size: 128, offset: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2828, file: !2829, line: 105, baseType: !2834, size: 64, offset: 192)
!2834 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2829, line: 21, baseType: !2835)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = !DISubroutineType(types: !2837)
!2837 = !{null, !2838}
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2828, size: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2781, file: !2782, line: 85, baseType: !2840, size: 768, offset: 2944)
!2840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2841, line: 156, size: 768, elements: !2842)
!2841 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2842 = !{!2843, !2848}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2840, file: !2841, line: 157, baseType: !2844, size: 64)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DISubroutineType(types: !2846)
!2846 = !{!32, !2847}
!2847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2840, file: !2841, line: 158, baseType: !2849, size: 704, offset: 64)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2841, line: 150, size: 704, elements: !2850)
!2850 = !{!2851, !2919}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2849, file: !2841, line: 152, baseType: !2852, size: 640)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2841, line: 131, size: 640, elements: !2853)
!2853 = !{!2854, !2887, !2888, !2889, !2909, !2910, !2912, !2918}
!2854 = !DIDerivedType(tag: DW_TAG_member, scope: !2852, file: !2841, line: 132, baseType: !2855, size: 192)
!2855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2852, file: !2841, line: 132, size: 192, elements: !2856)
!2856 = !{!2857, !2886}
!2857 = !DIDerivedType(tag: DW_TAG_member, scope: !2855, file: !2841, line: 133, baseType: !2858, size: 192)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2855, file: !2841, line: 133, size: 192, elements: !2859)
!2859 = !{!2860, !2883, !2884, !2885}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2858, file: !2841, line: 134, baseType: !2861, size: 64)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2841, line: 112, size: 512, elements: !2863)
!2863 = !{!2864, !2865, !2866, !2867, !2868, !2869, !2875, !2881, !2882}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2862, file: !2841, line: 113, baseType: !292, size: 64)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2862, file: !2841, line: 114, baseType: !591, size: 64, offset: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2862, file: !2841, line: 115, baseType: !32, size: 32, offset: 128)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2862, file: !2841, line: 116, baseType: !1379, size: 16, offset: 160)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2862, file: !2841, line: 117, baseType: !2861, size: 64, offset: 192)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2862, file: !2841, line: 118, baseType: !2870, size: 64, offset: 256)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2871, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2841, line: 47, baseType: !2872)
!2872 = !DISubroutineType(types: !2873)
!2873 = !{!32, !2861, !32, !591, !2874, !1693}
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2862, file: !2841, line: 119, baseType: !2876, size: 64, offset: 320)
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 64)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2841, line: 94, size: 192, elements: !2878)
!2878 = !{!2879, !2880}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2877, file: !2841, line: 95, baseType: !383, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2877, file: !2841, line: 96, baseType: !1888, size: 128, offset: 64)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2862, file: !2841, line: 120, baseType: !591, size: 64, offset: 384)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2862, file: !2841, line: 121, baseType: !591, size: 64, offset: 448)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2858, file: !2841, line: 135, baseType: !32, size: 32, offset: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2858, file: !2841, line: 136, baseType: !32, size: 32, offset: 96)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2858, file: !2841, line: 137, baseType: !32, size: 32, offset: 128)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2855, file: !2841, line: 139, baseType: !299, size: 128, align: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2852, file: !2841, line: 141, baseType: !2595, size: 64, offset: 192)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2852, file: !2841, line: 142, baseType: !2861, size: 64, offset: 256)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2852, file: !2841, line: 143, baseType: !2890, size: 64, offset: 320)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!2891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2841, line: 161, size: 960, elements: !2892)
!2892 = !{!2893, !2894, !2898, !2905}
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2891, file: !2841, line: 162, baseType: !2840, size: 768)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2891, file: !2841, line: 163, baseType: !2895, size: 64, offset: 768)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{!2847, !2890}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2891, file: !2841, line: 164, baseType: !2899, size: 64, offset: 832)
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 64)
!2900 = !DISubroutineType(types: !2901)
!2901 = !{null, !2902, !2861, !2903, !2904}
!2902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 64)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2891, file: !2841, line: 167, baseType: !2906, size: 64, offset: 896)
!2906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 64)
!2907 = !DISubroutineType(types: !2908)
!2908 = !{!32, !2902, !2861}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2852, file: !2841, line: 144, baseType: !2847, size: 64, offset: 384)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2852, file: !2841, line: 145, baseType: !2911, size: 64, offset: 448)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2852, file: !2841, line: 146, baseType: !2913, size: 64, offset: 512)
!2913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2914, size: 64)
!2914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2841, line: 124, size: 256, elements: !2915)
!2915 = !{!2916, !2917}
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2914, file: !2841, line: 125, baseType: !433, size: 192, align: 64)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2914, file: !2841, line: 126, baseType: !2902, size: 64, offset: 192)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2852, file: !2841, line: 147, baseType: !1580, size: 64, offset: 576)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2849, file: !2841, line: 153, baseType: !1749, size: 64, offset: 640)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2781, file: !2782, line: 86, baseType: !2902, size: 64, offset: 3712)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2781, file: !2782, line: 88, baseType: !2922, size: 64, offset: 3776)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 64)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2782, line: 92, size: 576, elements: !2924)
!2924 = !{!2925, !2926, !2927, !2928, !2929}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2923, file: !2782, line: 93, baseType: !276, size: 128)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2923, file: !2782, line: 94, baseType: !2780, size: 64, offset: 128)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2923, file: !2782, line: 95, baseType: !1382, size: 32, offset: 192)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2923, file: !2782, line: 96, baseType: !32, size: 32, offset: 224)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2923, file: !2782, line: 97, baseType: !2930, size: 320, offset: 256)
!2930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 320, elements: !2931)
!2931 = !{!2932}
!2932 = !DISubrange(count: 10)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2781, file: !2782, line: 89, baseType: !2934, size: 320, offset: 3840)
!2934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 320, elements: !2931)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2643, file: !2644, line: 147, baseType: !2936, size: 64, offset: 1088)
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2937, size: 64)
!2937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2644, line: 25, size: 64, elements: !2938)
!2938 = !{!2939, !2940, !2941}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2937, file: !2644, line: 26, baseType: !383, size: 32)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2937, file: !2644, line: 27, baseType: !32, size: 32, offset: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2937, file: !2644, line: 28, baseType: !2942, offset: 64)
!2942 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, elements: !483)
!2943 = !DIDerivedType(tag: DW_TAG_member, scope: !2643, file: !2644, line: 149, baseType: !2944, size: 128, offset: 1152)
!2944 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2643, file: !2644, line: 149, size: 128, elements: !2945)
!2945 = !{!2946, !2947}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2944, file: !2644, line: 150, baseType: !32, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2944, file: !2644, line: 151, baseType: !299, size: 128, align: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2326, file: !2327, line: 926, baseType: !2641, size: 64, offset: 8576)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2326, file: !2327, line: 929, baseType: !2641, size: 64, offset: 8640)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2326, file: !2327, line: 933, baseType: !2671, size: 64, offset: 8704)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2326, file: !2327, line: 943, baseType: !267, size: 128, offset: 8768)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2326, file: !2327, line: 945, baseType: !2953, size: 64, offset: 8896)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2327, line: 49, flags: DIFlagFwdDecl)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2326, file: !2327, line: 956, baseType: !2956, size: 64, offset: 8960)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2327, line: 45, flags: DIFlagFwdDecl)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2326, file: !2327, line: 959, baseType: !2959, size: 64, offset: 9024)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2327, line: 959, flags: DIFlagFwdDecl)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2326, file: !2327, line: 962, baseType: !2962, size: 64, offset: 9088)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 64)
!2963 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2327, line: 66, flags: DIFlagFwdDecl)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2326, file: !2327, line: 966, baseType: !2965, size: 64, offset: 9152)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2967, line: 31, size: 576, elements: !2968)
!2967 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2968 = !{!2969, !2970, !2973, !2976, !2979, !2980, !3668, !3671, !3672}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2966, file: !2967, line: 32, baseType: !383, size: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2966, file: !2967, line: 33, baseType: !2971, size: 64, offset: 64)
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 64)
!2972 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2967, line: 9, flags: DIFlagFwdDecl)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2966, file: !2967, line: 34, baseType: !2974, size: 64, offset: 128)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2967, line: 10, flags: DIFlagFwdDecl)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2966, file: !2967, line: 35, baseType: !2977, size: 64, offset: 192)
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2978, size: 64)
!2978 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2967, line: 8, flags: DIFlagFwdDecl)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2966, file: !2967, line: 36, baseType: !2588, size: 64, offset: 256)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2966, file: !2967, line: 37, baseType: !2981, size: 64, offset: 320)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 64)
!2982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2983, line: 56, size: 16896, elements: !2984)
!2983 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2984 = !{!2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3006, !3007, !3008, !3012, !3013, !3014, !3015, !3016, !3019, !3021, !3022, !3037, !3038, !3039, !3040, !3050, !3119, !3125, !3131, !3144, !3453, !3607, !3614, !3617, !3640, !3641, !3667}
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !2982, file: !2983, line: 60, baseType: !568, size: 32)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2982, file: !2983, line: 63, baseType: !568, size: 32, offset: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !2982, file: !2983, line: 66, baseType: !1669, offset: 64)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !2982, file: !2983, line: 68, baseType: !7, size: 32, offset: 64)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !2982, file: !2983, line: 70, baseType: !7, size: 32, offset: 96)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !2982, file: !2983, line: 71, baseType: !32, size: 32, offset: 128)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !2982, file: !2983, line: 73, baseType: !1669, offset: 160)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !2982, file: !2983, line: 74, baseType: !383, size: 32, offset: 160)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2982, file: !2983, line: 76, baseType: !284, size: 128, offset: 192)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !2982, file: !2983, line: 77, baseType: !284, size: 128, offset: 320)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !2982, file: !2983, line: 83, baseType: !1323, size: 64, offset: 448)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !2982, file: !2983, line: 86, baseType: !2724, size: 64, offset: 512)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2982, file: !2983, line: 88, baseType: !2780, size: 64, offset: 576)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2982, file: !2983, line: 89, baseType: !2922, size: 64, offset: 640)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !2982, file: !2983, line: 90, baseType: !3000, size: 192, offset: 704)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3001, line: 19, size: 192, elements: !3002)
!3001 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3002 = !{!3003, !3004, !3005}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3000, file: !3001, line: 20, baseType: !1736, size: 128)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3000, file: !3001, line: 21, baseType: !7, size: 32, offset: 128)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3000, file: !3001, line: 22, baseType: !7, size: 32, offset: 160)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2982, file: !2983, line: 92, baseType: !2814, size: 192, offset: 896)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !2982, file: !2983, line: 94, baseType: !284, size: 128, offset: 1088)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !2982, file: !2983, line: 95, baseType: !3009, size: 64, offset: 1216)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !3011, line: 17, flags: DIFlagFwdDecl)
!3011 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !2982, file: !2983, line: 96, baseType: !3009, size: 64, offset: 1280)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2982, file: !2983, line: 99, baseType: !2840, size: 768, offset: 1344)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !2982, file: !2983, line: 102, baseType: !445, size: 64, offset: 2112)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !2982, file: !2983, line: 103, baseType: !445, size: 64, offset: 2176)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !2982, file: !2983, line: 105, baseType: !3017, size: 64, offset: 2240)
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3018, size: 64)
!3018 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !2983, line: 48, flags: DIFlagFwdDecl)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !2982, file: !2983, line: 107, baseType: !3020, size: 64, offset: 2304)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !2982, file: !2983, line: 108, baseType: !3020, size: 64, offset: 2368)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !2982, file: !2983, line: 109, baseType: !3023, size: 64, offset: 2432)
!3023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !3024, line: 70, size: 64, elements: !3025)
!3024 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3025 = !{!3026}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3023, file: !3024, line: 71, baseType: !3027, size: 64)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3024, line: 54, size: 192, elements: !3029)
!3029 = !{!3030, !3035, !3036}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3028, file: !3024, line: 55, baseType: !3031, size: 64)
!3031 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3024, line: 51, baseType: !3032)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{!32, !3027, !312, !591}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3028, file: !3024, line: 56, baseType: !3027, size: 64, offset: 64)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3028, file: !3024, line: 57, baseType: !32, size: 32, offset: 128)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !2982, file: !2983, line: 114, baseType: !987, size: 32, offset: 2496)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !2982, file: !2983, line: 116, baseType: !290, size: 64, offset: 2560)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !2982, file: !2983, line: 119, baseType: !284, size: 128, offset: 2624)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !2982, file: !2983, line: 121, baseType: !3041, size: 256, offset: 2752)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !3042, line: 8, size: 256, elements: !3043)
!3042 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!3043 = !{!3044, !3045, !3046, !3047}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !3041, file: !3042, line: 10, baseType: !2902, size: 64)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !3041, file: !3042, line: 12, baseType: !32, size: 32, offset: 64)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !3041, file: !3042, line: 15, baseType: !1001, size: 64, offset: 128)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !3041, file: !3042, line: 16, baseType: !3048, size: 64, offset: 192)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !3042, line: 6, flags: DIFlagFwdDecl)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !2982, file: !2983, line: 122, baseType: !3051, size: 832, offset: 3008)
!3051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !3011, line: 7, size: 832, elements: !3052)
!3052 = !{!3053, !3060, !3071, !3079, !3087, !3088, !3096, !3104, !3105, !3106, !3107, !3108, !3114}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !3051, file: !3011, line: 8, baseType: !3054, size: 64)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 64)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !3056, line: 92, size: 1024, elements: !3057)
!3056 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!3057 = !{!3058}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3055, file: !3056, line: 93, baseType: !3059, size: 1024)
!3059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1024, elements: !269)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !3051, file: !3011, line: 9, baseType: !3061, size: 64, offset: 64)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !3056, line: 51, size: 2368, elements: !3063)
!3063 = !{!3064, !3068}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3062, file: !3056, line: 53, baseType: !3065, size: 2368)
!3065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 2368, elements: !3066)
!3066 = !{!3067}
!3067 = !DISubrange(count: 37)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3062, file: !3056, line: 54, baseType: !3069, offset: 2368)
!3069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !3070, line: 68, elements: !1586)
!3070 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !3051, file: !3011, line: 10, baseType: !3072, size: 64, offset: 128)
!3072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3073, size: 64)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !3056, line: 104, size: 7936, elements: !3074)
!3074 = !{!3075}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3073, file: !3056, line: 105, baseType: !3076, size: 7936)
!3076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 7936, elements: !3077)
!3077 = !{!3078}
!3078 = !DISubrange(count: 124)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !3051, file: !3011, line: 11, baseType: !3080, size: 64, offset: 192)
!3080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3081, size: 64)
!3081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !3056, line: 98, size: 576, elements: !3082)
!3082 = !{!3083}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3081, file: !3056, line: 99, baseType: !3084, size: 576)
!3084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 576, elements: !3085)
!3085 = !{!3086}
!3086 = !DISubrange(count: 9)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !3051, file: !3011, line: 12, baseType: !3080, size: 64, offset: 256)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !3051, file: !3011, line: 13, baseType: !3089, size: 64, offset: 320)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 64)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !3056, line: 59, size: 1792, elements: !3091)
!3091 = !{!3092}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3090, file: !3056, line: 60, baseType: !3093, size: 1792)
!3093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 1792, elements: !3094)
!3094 = !{!3095}
!3095 = !DISubrange(count: 28)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !3051, file: !3011, line: 14, baseType: !3097, size: 64, offset: 384)
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 64)
!3098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !3056, line: 64, size: 32768, elements: !3099)
!3099 = !{!3100}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3098, file: !3056, line: 65, baseType: !3101, size: 32768)
!3101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !371, size: 32768, elements: !3102)
!3102 = !{!3103}
!3103 = !DISubrange(count: 512)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !3051, file: !3011, line: 17, baseType: !3009, size: 64, offset: 448)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !3051, file: !3011, line: 18, baseType: !3080, size: 64, offset: 512)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !3051, file: !3011, line: 19, baseType: !3080, size: 64, offset: 576)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !3051, file: !3011, line: 20, baseType: !3061, size: 64, offset: 640)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !3051, file: !3011, line: 21, baseType: !3109, size: 64, offset: 704)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !3056, line: 71, size: 384, elements: !3111)
!3111 = !{!3112}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3110, file: !3056, line: 72, baseType: !3113, size: 384)
!3113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 384, elements: !999)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !3051, file: !3011, line: 22, baseType: !3115, size: 64, offset: 768)
!3115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 64)
!3116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !3056, line: 81, size: 32768, elements: !3117)
!3117 = !{!3118}
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !3116, file: !3056, line: 82, baseType: !3101, size: 32768)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2982, file: !2983, line: 123, baseType: !3120, size: 256, offset: 3840)
!3120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !3121, line: 11, size: 256, elements: !3122)
!3121 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!3122 = !{!3123, !3124}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !3120, file: !3121, line: 12, baseType: !1664, size: 192)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !3120, file: !3121, line: 13, baseType: !1580, size: 64, offset: 192)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !2982, file: !2983, line: 124, baseType: !3126, size: 128, offset: 4096)
!3126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !3127, line: 9, size: 128, elements: !3128)
!3127 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!3128 = !{!3129, !3130}
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !3126, file: !3127, line: 10, baseType: !32, size: 32)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !3126, file: !3127, line: 11, baseType: !2902, size: 64, offset: 64)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !2982, file: !2983, line: 125, baseType: !3132, size: 512, offset: 4224)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !3133, line: 11, size: 512, elements: !3134)
!3133 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!3134 = !{!3135, !3136, !3137, !3138, !3139}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !3132, file: !3133, line: 12, baseType: !1749, size: 64)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !3132, file: !3133, line: 13, baseType: !3020, size: 64, offset: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3132, file: !3133, line: 15, baseType: !7, size: 32, offset: 128)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !3132, file: !3133, line: 16, baseType: !987, size: 32, offset: 160)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !3132, file: !3133, line: 17, baseType: !3140, size: 320, offset: 192)
!3140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !3024, line: 65, size: 320, elements: !3141)
!3141 = !{!3142, !3143}
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !3140, file: !3024, line: 66, baseType: !1754, size: 256)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3140, file: !3024, line: 67, baseType: !3027, size: 64, offset: 256)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !2982, file: !2983, line: 126, baseType: !3145, size: 5440, offset: 4736)
!3145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !3146, line: 43, size: 5440, elements: !3147)
!3146 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!3147 = !{!3148, !3149, !3150, !3151, !3152, !3153, !3156, !3157, !3160, !3161, !3162, !3163, !3164, !3165, !3167, !3168, !3171, !3172, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393, !3394, !3395, !3397, !3398, !3399, !3400, !3401, !3409, !3410, !3411, !3415, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3435, !3436, !3438, !3439, !3442, !3443, !3444, !3445, !3446}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !3145, file: !3146, line: 45, baseType: !2902, size: 64)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3145, file: !3146, line: 46, baseType: !2902, size: 64, offset: 64)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !3145, file: !3146, line: 47, baseType: !2902, size: 64, offset: 128)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3145, file: !3146, line: 48, baseType: !2902, size: 64, offset: 192)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !3145, file: !3146, line: 49, baseType: !2902, size: 64, offset: 256)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3145, file: !3146, line: 51, baseType: !3154, size: 64, offset: 320)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64)
!3155 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !3146, line: 16, flags: DIFlagFwdDecl)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3145, file: !3146, line: 52, baseType: !3154, size: 64, offset: 384)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !3145, file: !3146, line: 53, baseType: !3158, size: 64, offset: 448)
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 64)
!3159 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !3146, line: 53, flags: DIFlagFwdDecl)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !3145, file: !3146, line: 54, baseType: !1664, size: 192, offset: 512)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !3145, file: !3146, line: 62, baseType: !771, size: 8, offset: 704)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3145, file: !3146, line: 66, baseType: !3020, size: 64, offset: 768)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !3145, file: !3146, line: 67, baseType: !771, size: 8, offset: 832)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !3145, file: !3146, line: 68, baseType: !445, size: 64, offset: 896)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3145, file: !3146, line: 70, baseType: !3166, size: 64, offset: 960)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3145, file: !3146, line: 71, baseType: !445, size: 64, offset: 1024)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3145, file: !3146, line: 73, baseType: !3169, size: 64, offset: 1088)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !3146, line: 73, flags: DIFlagFwdDecl)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3145, file: !3146, line: 74, baseType: !3166, size: 64, offset: 1152)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3145, file: !3146, line: 75, baseType: !3173, size: 64, offset: 1216)
!3173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3174, size: 64)
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !3175, line: 9, size: 1728, elements: !3176)
!3175 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!3176 = !{!3177, !3178, !3179, !3180, !3181, !3308, !3309, !3310, !3311, !3312}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !3174, file: !3175, line: 11, baseType: !998, size: 64)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !3174, file: !3175, line: 12, baseType: !998, size: 64, offset: 64)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3174, file: !3175, line: 13, baseType: !32, size: 32, offset: 128)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !3174, file: !3175, line: 14, baseType: !32, size: 32, offset: 160)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3174, file: !3175, line: 15, baseType: !3182, size: 64, offset: 192)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 64)
!3183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !3175, line: 98, size: 960, elements: !3184)
!3184 = !{!3185, !3186, !3258, !3262, !3263, !3264, !3265, !3306, !3307}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !3183, file: !3175, line: 99, baseType: !7, size: 32)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !3183, file: !3175, line: 101, baseType: !3187, size: 64, offset: 64)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = !DISubroutineType(types: !3189)
!3189 = !{null, !3190, !3256}
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !3175, line: 77, size: 1408, elements: !3192)
!3192 = !{!3193, !3199, !3232, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3191, file: !3175, line: 78, baseType: !3194, size: 64)
!3194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !3195, line: 17, size: 64, elements: !3196)
!3195 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!3196 = !{!3197}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3194, file: !3195, line: 18, baseType: !3198, size: 64)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 64)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3191, file: !3175, line: 82, baseType: !3200, size: 352, offset: 64)
!3200 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3191, file: !3175, line: 79, size: 352, elements: !3201)
!3201 = !{!3202, !3212}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3200, file: !3175, line: 80, baseType: !3203, size: 160)
!3203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !3175, line: 41, size: 160, elements: !3204)
!3204 = !{!3205, !3207, !3208, !3209, !3210, !3211}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3203, file: !3175, line: 42, baseType: !3206, size: 32)
!3206 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !525, line: 32, baseType: !493)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3203, file: !3175, line: 43, baseType: !3206, size: 32, offset: 32)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3203, file: !3175, line: 44, baseType: !987, size: 32, offset: 64)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !3203, file: !3175, line: 45, baseType: !987, size: 32, offset: 96)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3203, file: !3175, line: 46, baseType: !535, size: 16, offset: 128)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !3203, file: !3175, line: 47, baseType: !581, size: 16, offset: 144)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3200, file: !3175, line: 81, baseType: !3213, size: 352)
!3213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !3175, line: 50, size: 352, elements: !3214)
!3214 = !{!3215, !3228, !3229, !3230, !3231}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !3213, file: !3175, line: 51, baseType: !3216, size: 128)
!3216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !3217, line: 33, size: 128, elements: !3218)
!3217 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!3218 = !{!3219}
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !3216, file: !3217, line: 40, baseType: !3220, size: 128)
!3220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3216, file: !3217, line: 34, size: 128, elements: !3221)
!3221 = !{!3222, !3224, !3226}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !3220, file: !3217, line: 35, baseType: !3223, size: 128)
!3223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 128, elements: !269)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !3220, file: !3217, line: 37, baseType: !3225, size: 128)
!3225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !535, size: 128, elements: !2432)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !3220, file: !3217, line: 38, baseType: !3227, size: 128)
!3227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3206, size: 128, elements: !2271)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !3213, file: !3175, line: 52, baseType: !3216, size: 128, offset: 128)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3213, file: !3175, line: 53, baseType: !987, size: 32, offset: 256)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3213, file: !3175, line: 54, baseType: !3206, size: 32, offset: 288)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !3213, file: !3175, line: 55, baseType: !987, size: 32, offset: 320)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3191, file: !3175, line: 83, baseType: !3233, size: 320, offset: 448)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3234, line: 11, size: 320, elements: !3235)
!3234 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3235 = !{!3236, !3237, !3238, !3243}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3233, file: !3234, line: 16, baseType: !276, size: 128)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3233, file: !3234, line: 17, baseType: !312, size: 64, offset: 128)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3233, file: !3234, line: 18, baseType: !3239, size: 64, offset: 192)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 64)
!3240 = !DISubroutineType(types: !3241)
!3241 = !{null, !3242}
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3233, file: !3234, line: 19, baseType: !987, size: 32, offset: 256)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3191, file: !3175, line: 84, baseType: !1669, offset: 768)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3191, file: !3175, line: 85, baseType: !568, size: 32, offset: 768)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !3191, file: !3175, line: 86, baseType: !1749, size: 64, offset: 832)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !3191, file: !3175, line: 87, baseType: !415, size: 64, offset: 896)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !3191, file: !3175, line: 88, baseType: !415, size: 64, offset: 960)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3191, file: !3175, line: 89, baseType: !453, size: 64, offset: 1024)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3191, file: !3175, line: 90, baseType: !32, size: 32, offset: 1088)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !3191, file: !3175, line: 91, baseType: !32, size: 32, offset: 1120)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3191, file: !3175, line: 92, baseType: !481, size: 8, offset: 1152)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3191, file: !3175, line: 93, baseType: !581, size: 16, offset: 1168)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3191, file: !3175, line: 94, baseType: !3173, size: 64, offset: 1216)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3191, file: !3175, line: 95, baseType: !299, size: 128, align: 64, offset: 1280)
!3256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3257, size: 64)
!3257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !3183, file: !3175, line: 103, baseType: !3259, size: 64, offset: 128)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 64)
!3260 = !DISubroutineType(types: !3261)
!3261 = !{null, !3190}
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !3183, file: !3175, line: 104, baseType: !3239, size: 64, offset: 192)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !3183, file: !3175, line: 105, baseType: !2050, size: 64, offset: 256)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !3183, file: !3175, line: 106, baseType: !292, size: 64, offset: 320)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !3183, file: !3175, line: 107, baseType: !3266, size: 320, offset: 384)
!3266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !3195, line: 56, size: 320, elements: !3267)
!3267 = !{!3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3280, !3282}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !3266, file: !3195, line: 57, baseType: !581, size: 16)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3266, file: !3195, line: 58, baseType: !581, size: 16, offset: 16)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !3266, file: !3195, line: 59, baseType: !581, size: 16, offset: 32)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !3266, file: !3195, line: 60, baseType: !581, size: 16, offset: 48)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !3266, file: !3195, line: 61, baseType: !7, size: 32, offset: 64)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !3266, file: !3195, line: 62, baseType: !581, size: 16, offset: 96)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !3266, file: !3195, line: 63, baseType: !771, size: 8, offset: 112)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !3266, file: !3195, line: 64, baseType: !3276, size: 64, offset: 128)
!3276 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !3195, line: 38, baseType: !3277)
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3278, size: 64)
!3278 = !DISubroutineType(types: !3279)
!3279 = !{!987, !3256, !987, !987}
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !3266, file: !3195, line: 65, baseType: !3281, size: 64, offset: 192)
!3281 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !3195, line: 39, baseType: !3277)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !3266, file: !3195, line: 66, baseType: !3283, size: 64, offset: 256)
!3283 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !3195, line: 40, baseType: !3284)
!3284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3285, size: 64)
!3285 = !DISubroutineType(types: !3286)
!3286 = !{!32, !3287, !3256}
!3287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3288, size: 64)
!3288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !3195, line: 33, size: 128, elements: !3289)
!3289 = !{!3290, !3305}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !3288, file: !3195, line: 34, baseType: !3291, size: 64)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !3195, line: 81, size: 1024, elements: !3293)
!3293 = !{!3294, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !3292, file: !3195, line: 82, baseType: !3295, size: 64)
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 64)
!3296 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !3195, line: 26, flags: DIFlagFwdDecl)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !3292, file: !3195, line: 83, baseType: !7, size: 32, offset: 64)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !3292, file: !3195, line: 84, baseType: !7, size: 32, offset: 96)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3292, file: !3195, line: 85, baseType: !3266, size: 320, offset: 128)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !3292, file: !3195, line: 86, baseType: !771, size: 8, offset: 448)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !3292, file: !3195, line: 87, baseType: !2828, size: 256, offset: 512)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3292, file: !3195, line: 88, baseType: !1664, size: 192, offset: 768)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3292, file: !3195, line: 89, baseType: !1669, offset: 960)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !3292, file: !3195, line: 90, baseType: !383, size: 32, offset: 960)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3288, file: !3195, line: 35, baseType: !3256, size: 64, offset: 64)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3183, file: !3175, line: 108, baseType: !568, size: 32, offset: 704)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3183, file: !3175, line: 109, baseType: !2596, size: 192, offset: 768)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !3174, file: !3175, line: 16, baseType: !2981, size: 64, offset: 256)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !3174, file: !3175, line: 17, baseType: !771, size: 8, offset: 320)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !3174, file: !3175, line: 19, baseType: !3292, size: 1024, offset: 384)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3174, file: !3175, line: 22, baseType: !371, size: 64, offset: 1408)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !3174, file: !3175, line: 23, baseType: !2828, size: 256, offset: 1472)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !3145, file: !3146, line: 87, baseType: !32, size: 32, offset: 1280)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !3145, file: !3146, line: 88, baseType: !32, size: 32, offset: 1312)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !3145, file: !3146, line: 89, baseType: !32, size: 32, offset: 1344)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !3145, file: !3146, line: 90, baseType: !32, size: 32, offset: 1376)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !3145, file: !3146, line: 91, baseType: !32, size: 32, offset: 1408)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !3145, file: !3146, line: 92, baseType: !32, size: 32, offset: 1440)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !3145, file: !3146, line: 94, baseType: !3320, size: 128, offset: 1472)
!3320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !3146, line: 21, size: 128, elements: !3321)
!3321 = !{!3322, !3328, !3330}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3320, file: !3146, line: 22, baseType: !3323, size: 32)
!3323 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1344, line: 805, baseType: !3324)
!3324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1344, line: 798, size: 32, elements: !3325)
!3325 = !{!3326, !3327}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3324, file: !1344, line: 803, baseType: !1343, size: 32)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3324, file: !1344, line: 804, baseType: !1669, offset: 32)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3320, file: !3146, line: 23, baseType: !3329, size: 64, offset: 32)
!3329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 64, elements: !2663)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !3320, file: !3146, line: 24, baseType: !771, size: 8, offset: 96)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !3145, file: !3146, line: 96, baseType: !32, size: 32, offset: 1600)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !3145, file: !3146, line: 97, baseType: !32, size: 32, offset: 1632)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !3145, file: !3146, line: 99, baseType: !32, size: 32, offset: 1664)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !3145, file: !3146, line: 100, baseType: !32, size: 32, offset: 1696)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !3145, file: !3146, line: 101, baseType: !32, size: 32, offset: 1728)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !3145, file: !3146, line: 102, baseType: !32, size: 32, offset: 1760)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !3145, file: !3146, line: 103, baseType: !32, size: 32, offset: 1792)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !3145, file: !3146, line: 104, baseType: !32, size: 32, offset: 1824)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !3145, file: !3146, line: 106, baseType: !32, size: 32, offset: 1856)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !3145, file: !3146, line: 107, baseType: !32, size: 32, offset: 1888)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !3145, file: !3146, line: 111, baseType: !32, size: 32, offset: 1920)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !3145, file: !3146, line: 112, baseType: !32, size: 32, offset: 1952)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !3145, file: !3146, line: 114, baseType: !32, size: 32, offset: 1984)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !3145, file: !3146, line: 116, baseType: !32, size: 32, offset: 2016)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !3145, file: !3146, line: 117, baseType: !32, size: 32, offset: 2048)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !3145, file: !3146, line: 121, baseType: !32, size: 32, offset: 2080)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !3145, file: !3146, line: 122, baseType: !32, size: 32, offset: 2112)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !3145, file: !3146, line: 123, baseType: !32, size: 32, offset: 2144)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !3145, file: !3146, line: 124, baseType: !32, size: 32, offset: 2176)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !3145, file: !3146, line: 125, baseType: !32, size: 32, offset: 2208)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !3145, file: !3146, line: 126, baseType: !987, size: 32, offset: 2240)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !3145, file: !3146, line: 128, baseType: !32, size: 32, offset: 2272)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !3145, file: !3146, line: 129, baseType: !32, size: 32, offset: 2304)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !3145, file: !3146, line: 130, baseType: !32, size: 32, offset: 2336)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !3145, file: !3146, line: 132, baseType: !32, size: 32, offset: 2368)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !3145, file: !3146, line: 133, baseType: !32, size: 32, offset: 2400)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !3145, file: !3146, line: 134, baseType: !32, size: 32, offset: 2432)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !3145, file: !3146, line: 135, baseType: !32, size: 32, offset: 2464)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !3145, file: !3146, line: 136, baseType: !32, size: 32, offset: 2496)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !3145, file: !3146, line: 137, baseType: !32, size: 32, offset: 2528)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !3145, file: !3146, line: 138, baseType: !32, size: 32, offset: 2560)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !3145, file: !3146, line: 139, baseType: !32, size: 32, offset: 2592)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !3145, file: !3146, line: 140, baseType: !7, size: 32, offset: 2624)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !3145, file: !3146, line: 141, baseType: !32, size: 32, offset: 2656)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !3145, file: !3146, line: 142, baseType: !32, size: 32, offset: 2688)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !3145, file: !3146, line: 143, baseType: !32, size: 32, offset: 2720)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !3145, file: !3146, line: 144, baseType: !32, size: 32, offset: 2752)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !3145, file: !3146, line: 145, baseType: !32, size: 32, offset: 2784)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !3145, file: !3146, line: 146, baseType: !32, size: 32, offset: 2816)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !3145, file: !3146, line: 147, baseType: !32, size: 32, offset: 2848)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !3145, file: !3146, line: 148, baseType: !32, size: 32, offset: 2880)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !3145, file: !3146, line: 149, baseType: !32, size: 32, offset: 2912)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !3145, file: !3146, line: 150, baseType: !32, size: 32, offset: 2944)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !3145, file: !3146, line: 151, baseType: !32, size: 32, offset: 2976)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !3145, file: !3146, line: 152, baseType: !32, size: 32, offset: 3008)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !3145, file: !3146, line: 153, baseType: !32, size: 32, offset: 3040)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !3145, file: !3146, line: 154, baseType: !32, size: 32, offset: 3072)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !3145, file: !3146, line: 155, baseType: !32, size: 32, offset: 3104)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !3145, file: !3146, line: 156, baseType: !32, size: 32, offset: 3136)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !3145, file: !3146, line: 157, baseType: !32, size: 32, offset: 3168)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !3145, file: !3146, line: 158, baseType: !32, size: 32, offset: 3200)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !3145, file: !3146, line: 159, baseType: !32, size: 32, offset: 3232)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !3145, file: !3146, line: 160, baseType: !32, size: 32, offset: 3264)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !3145, file: !3146, line: 161, baseType: !32, size: 32, offset: 3296)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !3145, file: !3146, line: 162, baseType: !32, size: 32, offset: 3328)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !3145, file: !3146, line: 163, baseType: !32, size: 32, offset: 3360)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !3145, file: !3146, line: 164, baseType: !32, size: 32, offset: 3392)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !3145, file: !3146, line: 165, baseType: !32, size: 32, offset: 3424)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !3145, file: !3146, line: 166, baseType: !32, size: 32, offset: 3456)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !3145, file: !3146, line: 167, baseType: !32, size: 32, offset: 3488)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !3145, file: !3146, line: 168, baseType: !32, size: 32, offset: 3520)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !3145, file: !3146, line: 169, baseType: !32, size: 32, offset: 3552)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !3145, file: !3146, line: 170, baseType: !32, size: 32, offset: 3584)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !3145, file: !3146, line: 171, baseType: !32, size: 32, offset: 3616)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !3145, file: !3146, line: 172, baseType: !3396, size: 96, offset: 3648)
!3396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 96, elements: !1591)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !3145, file: !3146, line: 173, baseType: !3396, size: 96, offset: 3744)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !3145, file: !3146, line: 174, baseType: !32, size: 32, offset: 3840)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !3145, file: !3146, line: 175, baseType: !312, size: 64, offset: 3904)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !3145, file: !3146, line: 176, baseType: !312, size: 64, offset: 3968)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !3145, file: !3146, line: 177, baseType: !3402, size: 192, offset: 4032)
!3402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !3146, line: 34, size: 192, elements: !3403)
!3403 = !{!3404, !3405, !3408}
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !3402, file: !3146, line: 35, baseType: !383, size: 32)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !3402, file: !3146, line: 37, baseType: !3406, size: 64, offset: 64)
!3406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 64)
!3407 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !3146, line: 32, flags: DIFlagFwdDecl)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !3402, file: !3146, line: 38, baseType: !32, size: 32, offset: 128)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !3145, file: !3146, line: 178, baseType: !32, size: 32, offset: 4224)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !3145, file: !3146, line: 179, baseType: !32, size: 32, offset: 4256)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !3145, file: !3146, line: 180, baseType: !3412, size: 64, offset: 4288)
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 64)
!3413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3414)
!3414 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !3146, line: 180, flags: DIFlagFwdDecl)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !3145, file: !3146, line: 181, baseType: !3416, size: 64, offset: 4352)
!3416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3417, size: 64)
!3417 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !3146, line: 41, flags: DIFlagFwdDecl)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !3145, file: !3146, line: 182, baseType: !1669, offset: 4416)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !3145, file: !3146, line: 183, baseType: !7, size: 32, offset: 4416)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !3145, file: !3146, line: 184, baseType: !383, size: 32, offset: 4448)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !3145, file: !3146, line: 185, baseType: !312, size: 64, offset: 4480)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !3145, file: !3146, line: 186, baseType: !32, size: 32, offset: 4544)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !3145, file: !3146, line: 188, baseType: !32, size: 32, offset: 4576)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !3145, file: !3146, line: 189, baseType: !32, size: 32, offset: 4608)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !3145, file: !3146, line: 195, baseType: !32, size: 32, offset: 4640)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !3145, file: !3146, line: 196, baseType: !32, size: 32, offset: 4672)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !3145, file: !3146, line: 197, baseType: !32, size: 32, offset: 4704)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !3145, file: !3146, line: 198, baseType: !32, size: 32, offset: 4736)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !3145, file: !3146, line: 200, baseType: !3430, size: 96, offset: 4768)
!3430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !3146, line: 27, size: 96, elements: !3431)
!3431 = !{!3432, !3433}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3430, file: !3146, line: 28, baseType: !3323, size: 32)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3430, file: !3146, line: 29, baseType: !3434, size: 64, offset: 32)
!3434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, size: 64, elements: !2663)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3145, file: !3146, line: 202, baseType: !383, size: 32, offset: 4864)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !3145, file: !3146, line: 205, baseType: !3437, size: 64, offset: 4928)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !3145, file: !3146, line: 206, baseType: !32, size: 32, offset: 4992)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3145, file: !3146, line: 222, baseType: !3440, size: 64, offset: 5056)
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3441, size: 64)
!3441 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !3146, line: 222, flags: DIFlagFwdDecl)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !3145, file: !3146, line: 223, baseType: !7, size: 32, offset: 5120)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !3145, file: !3146, line: 225, baseType: !3440, size: 64, offset: 5184)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3145, file: !3146, line: 226, baseType: !7, size: 32, offset: 5248)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !3145, file: !3146, line: 228, baseType: !383, size: 32, offset: 5280)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !3145, file: !3146, line: 229, baseType: !3447, size: 128, offset: 5312)
!3447 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !3448, line: 22, baseType: !3449)
!3448 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!3449 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3448, line: 20, size: 128, elements: !3450)
!3450 = !{!3451}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3449, file: !3448, line: 21, baseType: !3452, size: 128)
!3452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 128, elements: !2663)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !2982, file: !2983, line: 128, baseType: !3454, size: 4608, offset: 10176)
!3454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !3455, line: 56, size: 4608, elements: !3456)
!3455 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!3456 = !{!3457, !3497, !3500, !3501, !3502, !3503, !3506, !3509, !3512, !3513, !3514, !3517, !3518, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3598, !3599, !3600, !3601}
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !3454, file: !3455, line: 57, baseType: !3458, size: 1600)
!3458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !3455, line: 15, size: 1600, elements: !3459)
!3459 = !{!3460, !3461, !3462, !3463, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490, !3491, !3492, !3493, !3494, !3495, !3496}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3458, file: !3455, line: 17, baseType: !2902, size: 64)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !3458, file: !3455, line: 18, baseType: !2902, size: 64, offset: 64)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !3458, file: !3455, line: 19, baseType: !2902, size: 64, offset: 128)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !3458, file: !3455, line: 20, baseType: !2902, size: 64, offset: 192)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !3458, file: !3455, line: 21, baseType: !2902, size: 64, offset: 256)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !3458, file: !3455, line: 23, baseType: !32, size: 32, offset: 320)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !3458, file: !3455, line: 24, baseType: !32, size: 32, offset: 352)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !3458, file: !3455, line: 25, baseType: !32, size: 32, offset: 384)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !3458, file: !3455, line: 26, baseType: !32, size: 32, offset: 416)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !3458, file: !3455, line: 27, baseType: !32, size: 32, offset: 448)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !3458, file: !3455, line: 28, baseType: !32, size: 32, offset: 480)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !3458, file: !3455, line: 29, baseType: !32, size: 32, offset: 512)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !3458, file: !3455, line: 30, baseType: !32, size: 32, offset: 544)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !3458, file: !3455, line: 31, baseType: !32, size: 32, offset: 576)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !3458, file: !3455, line: 32, baseType: !32, size: 32, offset: 608)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !3458, file: !3455, line: 33, baseType: !32, size: 32, offset: 640)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !3458, file: !3455, line: 34, baseType: !32, size: 32, offset: 672)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !3458, file: !3455, line: 35, baseType: !32, size: 32, offset: 704)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !3458, file: !3455, line: 36, baseType: !32, size: 32, offset: 736)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !3458, file: !3455, line: 37, baseType: !32, size: 32, offset: 768)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !3458, file: !3455, line: 38, baseType: !32, size: 32, offset: 800)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !3458, file: !3455, line: 39, baseType: !3482, size: 256, offset: 832)
!3482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 256, elements: !2271)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !3458, file: !3455, line: 40, baseType: !3437, size: 64, offset: 1088)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !3458, file: !3455, line: 41, baseType: !32, size: 32, offset: 1152)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !3458, file: !3455, line: 42, baseType: !32, size: 32, offset: 1184)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !3458, file: !3455, line: 43, baseType: !32, size: 32, offset: 1216)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !3458, file: !3455, line: 44, baseType: !32, size: 32, offset: 1248)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !3458, file: !3455, line: 45, baseType: !32, size: 32, offset: 1280)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !3458, file: !3455, line: 46, baseType: !32, size: 32, offset: 1312)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !3458, file: !3455, line: 47, baseType: !32, size: 32, offset: 1344)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !3458, file: !3455, line: 48, baseType: !32, size: 32, offset: 1376)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !3458, file: !3455, line: 49, baseType: !32, size: 32, offset: 1408)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !3458, file: !3455, line: 50, baseType: !32, size: 32, offset: 1440)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !3458, file: !3455, line: 51, baseType: !32, size: 32, offset: 1472)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !3458, file: !3455, line: 52, baseType: !32, size: 32, offset: 1504)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !3458, file: !3455, line: 53, baseType: !771, size: 8, offset: 1536)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !3454, file: !3455, line: 58, baseType: !3498, size: 64, offset: 1600)
!3498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3499, size: 64)
!3499 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !3455, line: 58, flags: DIFlagFwdDecl)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !3454, file: !3455, line: 59, baseType: !3498, size: 64, offset: 1664)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !3454, file: !3455, line: 60, baseType: !3169, size: 64, offset: 1728)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !3454, file: !3455, line: 61, baseType: !3173, size: 64, offset: 1792)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !3454, file: !3455, line: 71, baseType: !3504, size: 64, offset: 1856)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 64)
!3505 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !3455, line: 71, flags: DIFlagFwdDecl)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !3454, file: !3455, line: 72, baseType: !3507, size: 64, offset: 1920)
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3508, size: 64)
!3508 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !3455, line: 72, flags: DIFlagFwdDecl)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !3454, file: !3455, line: 73, baseType: !3510, size: 64, offset: 1984)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !3455, line: 73, flags: DIFlagFwdDecl)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !3454, file: !3455, line: 74, baseType: !3233, size: 320, offset: 2048)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !3454, file: !3455, line: 75, baseType: !3020, size: 64, offset: 2368)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !3454, file: !3455, line: 76, baseType: !3515, size: 64, offset: 2432)
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3516, size: 64)
!3516 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !3455, line: 76, flags: DIFlagFwdDecl)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !3454, file: !3455, line: 77, baseType: !284, size: 128, offset: 2496)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !3454, file: !3455, line: 78, baseType: !3519, size: 1088, offset: 2624)
!3519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !925, line: 15, size: 1088, elements: !3520)
!3520 = !{!3521, !3522, !3523, !3528, !3534, !3540, !3541, !3545, !3549, !3553, !3557, !3558, !3562, !3566, !3570, !3574, !3578, !3579}
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !3519, file: !925, line: 16, baseType: !476, size: 16)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !3519, file: !925, line: 17, baseType: !7, size: 32, offset: 32)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3519, file: !925, line: 19, baseType: !3524, size: 64, offset: 64)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = !DISubroutineType(types: !3526)
!3526 = !{!32, !3527}
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 64)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !3519, file: !925, line: 20, baseType: !3529, size: 64, offset: 128)
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3530, size: 64)
!3530 = !DISubroutineType(types: !3531)
!3531 = !{!3532, !3532, !493}
!3532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3533, size: 64)
!3533 = !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !417, line: 956, flags: DIFlagFwdDecl)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !3519, file: !925, line: 21, baseType: !3535, size: 64, offset: 192)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 64)
!3536 = !DISubroutineType(types: !3537)
!3537 = !{!7, !3538}
!3538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3539, size: 64)
!3539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3533)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !3519, file: !925, line: 22, baseType: !3535, size: 64, offset: 256)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !3519, file: !925, line: 23, baseType: !3542, size: 64, offset: 320)
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{!2515, !3532, !312}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3519, file: !925, line: 24, baseType: !3546, size: 64, offset: 384)
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3547, size: 64)
!3547 = !DISubroutineType(types: !3548)
!3548 = !{null, !3532}
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !3519, file: !925, line: 25, baseType: !3550, size: 64, offset: 448)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{null, !3532, !290, !32}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !3519, file: !925, line: 27, baseType: !3554, size: 64, offset: 512)
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3555, size: 64)
!3555 = !DISubroutineType(types: !3556)
!3556 = !{!3532, !3532}
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !3519, file: !925, line: 28, baseType: !468, size: 64, offset: 576)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !3519, file: !925, line: 29, baseType: !3559, size: 64, offset: 640)
!3559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3560, size: 64)
!3560 = !DISubroutineType(types: !3561)
!3561 = !{null, !3532, !445, !415, !987, !771}
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !3519, file: !925, line: 32, baseType: !3563, size: 64, offset: 704)
!3563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3564, size: 64)
!3564 = !DISubroutineType(types: !3565)
!3565 = !{null, !3532, !445, !415}
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !3519, file: !925, line: 34, baseType: !3567, size: 64, offset: 768)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = !DISubroutineType(types: !3569)
!3569 = !{!32, !2981, !445, !415}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !3519, file: !925, line: 35, baseType: !3571, size: 64, offset: 832)
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 64)
!3572 = !DISubroutineType(types: !3573)
!3573 = !{!923, !3538, !415, !3256}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !3519, file: !925, line: 38, baseType: !3575, size: 64, offset: 896)
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3576, size: 64)
!3576 = !DISubroutineType(types: !3577)
!3577 = !{null, !3538, !3256}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !3519, file: !925, line: 41, baseType: !2050, size: 64, offset: 960)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !3519, file: !925, line: 43, baseType: !3580, size: 64, offset: 1024)
!3580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3581, line: 97, size: 64, elements: !3582)
!3581 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3582 = !{!3583}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3580, file: !3581, line: 98, baseType: !377, size: 64)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !3454, file: !3455, line: 79, baseType: !1911, offset: 3712)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !3454, file: !3455, line: 80, baseType: !1669, offset: 3712)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !3454, file: !3455, line: 81, baseType: !7, size: 32, offset: 3712)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !3454, file: !3455, line: 82, baseType: !312, size: 64, offset: 3776)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !3454, file: !3455, line: 94, baseType: !3166, size: 64, offset: 3840)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !3454, file: !3455, line: 95, baseType: !445, size: 64, offset: 3904)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !3454, file: !3455, line: 96, baseType: !445, size: 64, offset: 3968)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !3454, file: !3455, line: 97, baseType: !445, size: 64, offset: 4032)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !3454, file: !3455, line: 98, baseType: !445, size: 64, offset: 4096)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !3454, file: !3455, line: 107, baseType: !383, size: 32, offset: 4160)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !3454, file: !3455, line: 108, baseType: !383, size: 32, offset: 4192)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !3454, file: !3455, line: 109, baseType: !3596, size: 64, offset: 4224)
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 64)
!3597 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !3455, line: 109, flags: DIFlagFwdDecl)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !3454, file: !3455, line: 110, baseType: !3440, size: 64, offset: 4288)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !3454, file: !3455, line: 111, baseType: !3440, size: 64, offset: 4352)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !3454, file: !3455, line: 112, baseType: !7, size: 32, offset: 4416)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !3454, file: !3455, line: 117, baseType: !3602, size: 128, offset: 4480)
!3602 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3454, file: !3455, line: 113, size: 128, elements: !3603)
!3603 = !{!3604, !3605, !3606}
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3602, file: !3455, line: 114, baseType: !1580, size: 64)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3602, file: !3455, line: 115, baseType: !1669, offset: 64)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3602, file: !3455, line: 116, baseType: !987, size: 32, offset: 64)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !2982, file: !2983, line: 162, baseType: !3608, size: 192, offset: 14784)
!3608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !417, line: 291, size: 192, elements: !3609)
!3609 = !{!3610, !3611, !3612, !3613}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3608, file: !417, line: 293, baseType: !415, size: 64)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3608, file: !417, line: 294, baseType: !415, size: 64, offset: 64)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !3608, file: !417, line: 296, baseType: !493, size: 32, offset: 128)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3608, file: !417, line: 297, baseType: !1669, offset: 160)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2982, file: !2983, line: 164, baseType: !3615, size: 64, offset: 14976)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !2983, line: 47, flags: DIFlagFwdDecl)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !2982, file: !2983, line: 167, baseType: !3618, size: 512, offset: 15040)
!3618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3619, line: 14, size: 512, elements: !3620)
!3619 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3620 = !{!3621, !3636, !3638}
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3618, file: !3619, line: 16, baseType: !3622, size: 128)
!3622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3623, size: 128, elements: !2663)
!3623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3624, size: 64)
!3624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !65, line: 1037, size: 128, elements: !3625)
!3625 = !{!3626, !3627}
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3624, file: !65, line: 1038, baseType: !299, size: 128, align: 64)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3624, file: !65, line: 1039, baseType: !3628, offset: 128)
!3628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3629, elements: !309)
!3629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !65, line: 1032, size: 192, elements: !3630)
!3630 = !{!3631, !3632}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3629, file: !65, line: 1033, baseType: !1088, size: 64)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3629, file: !65, line: 1034, baseType: !3633, size: 128, offset: 64)
!3633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3634, size: 128, elements: !2663)
!3634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3635, size: 64)
!3635 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !65, line: 1034, flags: DIFlagFwdDecl)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3618, file: !3619, line: 17, baseType: !3637, size: 128, offset: 128)
!3637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1088, size: 128, elements: !2663)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3618, file: !3619, line: 18, baseType: !3639, size: 256, offset: 256)
!3639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 256, elements: !2663)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !2982, file: !2983, line: 174, baseType: !373, size: 64, offset: 15552)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !2982, file: !2983, line: 183, baseType: !3642, size: 1216, offset: 15616)
!3642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3643, line: 15, size: 1216, elements: !3644)
!3643 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3644 = !{!3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3658, !3659, !3660, !3663, !3666}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3642, file: !3643, line: 17, baseType: !3009, size: 64)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3642, file: !3643, line: 18, baseType: !3009, size: 64, offset: 64)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3642, file: !3643, line: 19, baseType: !3009, size: 64, offset: 128)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3642, file: !3643, line: 20, baseType: !3009, size: 64, offset: 192)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3642, file: !3643, line: 21, baseType: !3009, size: 64, offset: 256)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3642, file: !3643, line: 22, baseType: !3009, size: 64, offset: 320)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3642, file: !3643, line: 23, baseType: !3009, size: 64, offset: 384)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3642, file: !3643, line: 24, baseType: !3009, size: 64, offset: 448)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3642, file: !3643, line: 25, baseType: !3009, size: 64, offset: 512)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3642, file: !3643, line: 26, baseType: !3009, size: 64, offset: 576)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3642, file: !3643, line: 30, baseType: !3656, size: 64, offset: 640)
!3656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3657, size: 64)
!3657 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3643, line: 11, flags: DIFlagFwdDecl)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3642, file: !3643, line: 31, baseType: !1669, offset: 704)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3642, file: !3643, line: 32, baseType: !3233, size: 320, offset: 704)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3642, file: !3643, line: 33, baseType: !3661, size: 64, offset: 1024)
!3661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3662, size: 64)
!3662 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3643, line: 12, flags: DIFlagFwdDecl)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3642, file: !3643, line: 34, baseType: !3664, size: 64, offset: 1088)
!3664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3665, size: 64)
!3665 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3643, line: 13, flags: DIFlagFwdDecl)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3642, file: !3643, line: 37, baseType: !1580, size: 64, offset: 1152)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !2982, file: !2983, line: 191, baseType: !445, size: 64, offset: 16832)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2966, file: !2967, line: 38, baseType: !3669, size: 64, offset: 384)
!3669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3670, size: 64)
!3670 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2967, line: 38, flags: DIFlagFwdDecl)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2966, file: !2967, line: 39, baseType: !3669, size: 64, offset: 448)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2966, file: !2967, line: 40, baseType: !3673, size: 64, offset: 512)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3674, size: 64)
!3674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3675, line: 856, size: 448, elements: !3676)
!3675 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3676 = !{!3677, !3678, !3679, !3680, !3681}
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3674, file: !3675, line: 857, baseType: !568, size: 32)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3674, file: !3675, line: 858, baseType: !2814, size: 192, offset: 64)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3674, file: !3675, line: 859, baseType: !2780, size: 64, offset: 256)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3674, file: !3675, line: 860, baseType: !2922, size: 64, offset: 320)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3674, file: !3675, line: 861, baseType: !3682, size: 64, offset: 384)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 64)
!3683 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3684, line: 16, flags: DIFlagFwdDecl)
!3684 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2326, file: !2327, line: 969, baseType: !3686, size: 64, offset: 9216)
!3686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3687, size: 64)
!3687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3688, line: 82, size: 7296, elements: !3689)
!3688 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3689 = !{!3690, !3691, !3692, !3693, !3694, !3695, !3696, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3725, !3734, !3735, !3737, !3738, !3739, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3767, !3768, !3775, !3776, !3777, !3778, !3779, !3780}
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3687, file: !3688, line: 83, baseType: !568, size: 32)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3687, file: !3688, line: 84, baseType: !383, size: 32, offset: 32)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3687, file: !3688, line: 85, baseType: !32, size: 32, offset: 64)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3687, file: !3688, line: 86, baseType: !284, size: 128, offset: 128)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3687, file: !3688, line: 88, baseType: !1888, size: 128, offset: 256)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3687, file: !3688, line: 91, baseType: !2325, size: 64, offset: 384)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3687, file: !3688, line: 94, baseType: !3697, size: 192, offset: 448)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3698, line: 30, size: 192, elements: !3699)
!3698 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3699 = !{!3700, !3701}
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3697, file: !3698, line: 31, baseType: !284, size: 128)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3697, file: !3698, line: 32, baseType: !3702, size: 64, offset: 128)
!3702 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3703, line: 25, baseType: !3704)
!3703 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3704 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3703, line: 23, size: 64, elements: !3705)
!3705 = !{!3706}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3704, file: !3703, line: 24, baseType: !2470, size: 64)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3687, file: !3688, line: 97, baseType: !1580, size: 64, offset: 640)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3687, file: !3688, line: 100, baseType: !32, size: 32, offset: 704)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3687, file: !3688, line: 106, baseType: !32, size: 32, offset: 736)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3687, file: !3688, line: 107, baseType: !2325, size: 64, offset: 768)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3687, file: !3688, line: 110, baseType: !32, size: 32, offset: 832)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3687, file: !3688, line: 111, baseType: !7, size: 32, offset: 864)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3687, file: !3688, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3687, file: !3688, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3687, file: !3688, line: 128, baseType: !32, size: 32, offset: 928)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3687, file: !3688, line: 129, baseType: !284, size: 128, offset: 960)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3687, file: !3688, line: 132, baseType: !2396, size: 512, offset: 1088)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3687, file: !3688, line: 133, baseType: !453, size: 64, offset: 1600)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3687, file: !3688, line: 140, baseType: !3720, size: 256, offset: 1664)
!3720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3721, size: 256, elements: !2663)
!3721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3688, line: 38, size: 128, elements: !3722)
!3722 = !{!3723, !3724}
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3721, file: !3688, line: 39, baseType: !331, size: 64)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3721, file: !3688, line: 40, baseType: !331, size: 64, offset: 64)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3687, file: !3688, line: 146, baseType: !3726, size: 192, offset: 1920)
!3726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3688, line: 66, size: 192, elements: !3727)
!3727 = !{!3728}
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3726, file: !3688, line: 67, baseType: !3729, size: 192)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3688, line: 47, size: 192, elements: !3730)
!3730 = !{!3731, !3732, !3733}
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3729, file: !3688, line: 48, baseType: !373, size: 64)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3729, file: !3688, line: 49, baseType: !373, size: 64, offset: 64)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3729, file: !3688, line: 50, baseType: !373, size: 64, offset: 128)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3687, file: !3688, line: 150, baseType: !2624, size: 640, offset: 2112)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3687, file: !3688, line: 153, baseType: !3736, size: 256, offset: 2752)
!3736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2570, size: 256, elements: !2271)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3687, file: !3688, line: 159, baseType: !2570, size: 64, offset: 3008)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3687, file: !3688, line: 162, baseType: !32, size: 32, offset: 3072)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3687, file: !3688, line: 164, baseType: !3740, size: 64, offset: 3136)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3688, line: 164, flags: DIFlagFwdDecl)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3687, file: !3688, line: 175, baseType: !3323, size: 32, offset: 3200)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3687, file: !3688, line: 176, baseType: !331, size: 64, offset: 3264)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3687, file: !3688, line: 176, baseType: !331, size: 64, offset: 3328)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3687, file: !3688, line: 176, baseType: !331, size: 64, offset: 3392)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3687, file: !3688, line: 176, baseType: !331, size: 64, offset: 3456)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3687, file: !3688, line: 177, baseType: !331, size: 64, offset: 3520)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3687, file: !3688, line: 178, baseType: !331, size: 64, offset: 3584)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3687, file: !3688, line: 179, baseType: !2612, size: 128, offset: 3648)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3687, file: !3688, line: 180, baseType: !312, size: 64, offset: 3776)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3687, file: !3688, line: 180, baseType: !312, size: 64, offset: 3840)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3687, file: !3688, line: 180, baseType: !312, size: 64, offset: 3904)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3687, file: !3688, line: 180, baseType: !312, size: 64, offset: 3968)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3687, file: !3688, line: 181, baseType: !312, size: 64, offset: 4032)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3687, file: !3688, line: 181, baseType: !312, size: 64, offset: 4096)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3687, file: !3688, line: 181, baseType: !312, size: 64, offset: 4160)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3687, file: !3688, line: 181, baseType: !312, size: 64, offset: 4224)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3687, file: !3688, line: 182, baseType: !312, size: 64, offset: 4288)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3687, file: !3688, line: 182, baseType: !312, size: 64, offset: 4352)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3687, file: !3688, line: 182, baseType: !312, size: 64, offset: 4416)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3687, file: !3688, line: 182, baseType: !312, size: 64, offset: 4480)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3687, file: !3688, line: 183, baseType: !312, size: 64, offset: 4544)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3687, file: !3688, line: 183, baseType: !312, size: 64, offset: 4608)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3687, file: !3688, line: 184, baseType: !3765, offset: 4672)
!3765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3766, line: 12, elements: !1586)
!3766 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3687, file: !3688, line: 192, baseType: !335, size: 64, offset: 4672)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3687, file: !3688, line: 203, baseType: !3769, size: 2048, offset: 4736)
!3769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3770, size: 2048, elements: !269)
!3770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3771, line: 43, size: 128, elements: !3772)
!3771 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3772 = !{!3773, !3774}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3770, file: !3771, line: 44, baseType: !1042, size: 64)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3770, file: !3771, line: 45, baseType: !1042, size: 64, offset: 64)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3687, file: !3688, line: 220, baseType: !771, size: 8, offset: 6784)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3687, file: !3688, line: 221, baseType: !625, size: 16, offset: 6800)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3687, file: !3688, line: 222, baseType: !625, size: 16, offset: 6816)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3687, file: !3688, line: 224, baseType: !2090, size: 64, offset: 6848)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3687, file: !3688, line: 227, baseType: !1664, size: 192, offset: 6912)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3687, file: !3688, line: 233, baseType: !1664, size: 192, offset: 7104)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2326, file: !2327, line: 970, baseType: !3782, size: 64, offset: 9280)
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3783, size: 64)
!3783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3688, line: 20, size: 16576, elements: !3784)
!3784 = !{!3785, !3786, !3787, !3788}
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3783, file: !3688, line: 21, baseType: !1669)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3783, file: !3688, line: 22, baseType: !568, size: 32)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3783, file: !3688, line: 23, baseType: !1888, size: 128, offset: 64)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3783, file: !3688, line: 24, baseType: !3789, size: 16384, offset: 192)
!3789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3790, size: 16384, elements: !3810)
!3790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3698, line: 49, size: 256, elements: !3791)
!3791 = !{!3792}
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3790, file: !3698, line: 50, baseType: !3793, size: 256)
!3793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3698, line: 35, size: 256, elements: !3794)
!3794 = !{!3795, !3802, !3803, !3809}
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3793, file: !3698, line: 37, baseType: !3796, size: 64)
!3796 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3797, line: 19, baseType: !3798)
!3797 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3799, size: 64)
!3799 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3797, line: 18, baseType: !3800)
!3800 = !DISubroutineType(types: !3801)
!3801 = !{null, !32}
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3793, file: !3698, line: 38, baseType: !312, size: 64, offset: 64)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3793, file: !3698, line: 44, baseType: !3804, size: 64, offset: 128)
!3804 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3797, line: 22, baseType: !3805)
!3805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3806, size: 64)
!3806 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3797, line: 21, baseType: !3807)
!3807 = !DISubroutineType(types: !3808)
!3808 = !{null}
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3793, file: !3698, line: 46, baseType: !3702, size: 64, offset: 192)
!3810 = !{!3811}
!3811 = !DISubrange(count: 64)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2326, file: !2327, line: 971, baseType: !3702, size: 64, offset: 9344)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2326, file: !2327, line: 972, baseType: !3702, size: 64, offset: 9408)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2326, file: !2327, line: 974, baseType: !3702, size: 64, offset: 9472)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2326, file: !2327, line: 975, baseType: !3697, size: 192, offset: 9536)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2326, file: !2327, line: 976, baseType: !312, size: 64, offset: 9728)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2326, file: !2327, line: 977, baseType: !1039, size: 64, offset: 9792)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2326, file: !2327, line: 978, baseType: !7, size: 32, offset: 9856)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2326, file: !2327, line: 980, baseType: !302, size: 64, offset: 9920)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2326, file: !2327, line: 989, baseType: !3821, size: 128, offset: 9984)
!3821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3822, line: 35, size: 128, elements: !3823)
!3822 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3823 = !{!3824, !3825, !3826}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3821, file: !3822, line: 36, baseType: !32, size: 32)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3821, file: !3822, line: 37, baseType: !383, size: 32, offset: 32)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3821, file: !3822, line: 38, baseType: !3827, size: 64, offset: 64)
!3827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3828, size: 64)
!3828 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3822, line: 23, flags: DIFlagFwdDecl)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2326, file: !2327, line: 992, baseType: !331, size: 64, offset: 10112)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2326, file: !2327, line: 993, baseType: !331, size: 64, offset: 10176)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2326, file: !2327, line: 996, baseType: !1669, offset: 10240)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2326, file: !2327, line: 999, baseType: !1760, offset: 10240)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2326, file: !2327, line: 1001, baseType: !3834, size: 64, offset: 10240)
!3834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2327, line: 636, size: 64, elements: !3835)
!3835 = !{!3836}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3834, file: !2327, line: 637, baseType: !3837, size: 64)
!3837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2326, file: !2327, line: 1005, baseType: !1746, size: 128, offset: 10304)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2326, file: !2327, line: 1007, baseType: !2325, size: 64, offset: 10432)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2326, file: !2327, line: 1009, baseType: !3841, size: 64, offset: 10496)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2327, line: 1009, flags: DIFlagFwdDecl)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2326, file: !2327, line: 1043, baseType: !591, size: 64, offset: 10560)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2326, file: !2327, line: 1046, baseType: !3845, size: 64, offset: 10624)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2327, line: 41, flags: DIFlagFwdDecl)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2326, file: !2327, line: 1050, baseType: !3848, size: 64, offset: 10688)
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3849, size: 64)
!3849 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !2327, line: 42, flags: DIFlagFwdDecl)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2326, file: !2327, line: 1054, baseType: !3851, size: 64, offset: 10752)
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2327, line: 55, flags: DIFlagFwdDecl)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2326, file: !2327, line: 1056, baseType: !3854, size: 64, offset: 10816)
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3855, size: 64)
!3855 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !2327, line: 40, flags: DIFlagFwdDecl)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2326, file: !2327, line: 1058, baseType: !3857, size: 64, offset: 10880)
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3858, size: 64)
!3858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !3859, line: 99, size: 704, elements: !3860)
!3859 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!3860 = !{!3861, !3862, !3863, !3864, !3865, !3866, !3867, !3886, !3887}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3858, file: !3859, line: 100, baseType: !371, size: 64)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !3858, file: !3859, line: 101, baseType: !383, size: 32, offset: 64)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !3858, file: !3859, line: 102, baseType: !383, size: 32, offset: 96)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3858, file: !3859, line: 105, baseType: !1669, offset: 128)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !3858, file: !3859, line: 107, baseType: !476, size: 16, offset: 128)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !3858, file: !3859, line: 109, baseType: !1736, size: 128, offset: 192)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !3858, file: !3859, line: 110, baseType: !3868, size: 64, offset: 320)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !3859, line: 73, size: 448, elements: !3870)
!3870 = !{!3871, !3874, !3875, !3880, !3885}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3869, file: !3859, line: 74, baseType: !3872, size: 64)
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !3859, line: 74, flags: DIFlagFwdDecl)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3869, file: !3859, line: 75, baseType: !3857, size: 64, offset: 64)
!3875 = !DIDerivedType(tag: DW_TAG_member, scope: !3869, file: !3859, line: 83, baseType: !3876, size: 128, offset: 128)
!3876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3869, file: !3859, line: 83, size: 128, elements: !3877)
!3877 = !{!3878, !3879}
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3876, file: !3859, line: 84, baseType: !284, size: 128)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3876, file: !3859, line: 85, baseType: !2050, size: 64)
!3880 = !DIDerivedType(tag: DW_TAG_member, scope: !3869, file: !3859, line: 87, baseType: !3881, size: 128, offset: 256)
!3881 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3869, file: !3859, line: 87, size: 128, elements: !3882)
!3882 = !{!3883, !3884}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3881, file: !3859, line: 88, baseType: !276, size: 128)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3881, file: !3859, line: 89, baseType: !299, size: 128, align: 64)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3869, file: !3859, line: 92, baseType: !7, size: 32, offset: 384)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !3858, file: !3859, line: 111, baseType: !1580, size: 64, offset: 384)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !3858, file: !3859, line: 113, baseType: !2828, size: 256, offset: 448)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2326, file: !2327, line: 1061, baseType: !3889, size: 64, offset: 10944)
!3889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3890, size: 64)
!3890 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2327, line: 43, flags: DIFlagFwdDecl)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2326, file: !2327, line: 1064, baseType: !312, size: 64, offset: 11008)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2326, file: !2327, line: 1065, baseType: !3893, size: 64, offset: 11072)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3698, line: 14, baseType: !3895)
!3895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3698, line: 12, size: 384, elements: !3896)
!3896 = !{!3897}
!3897 = !DIDerivedType(tag: DW_TAG_member, scope: !3895, file: !3698, line: 13, baseType: !3898, size: 384)
!3898 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3895, file: !3698, line: 13, size: 384, elements: !3899)
!3899 = !{!3900, !3901, !3902, !3903}
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3898, file: !3698, line: 13, baseType: !32, size: 32)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3898, file: !3698, line: 13, baseType: !32, size: 32, offset: 32)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3898, file: !3698, line: 13, baseType: !32, size: 32, offset: 64)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3898, file: !3698, line: 13, baseType: !3904, size: 256, offset: 128)
!3904 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3905, line: 32, size: 256, elements: !3906)
!3905 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3906 = !{!3907, !3912, !3925, !3931, !3940, !3960, !3965}
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3904, file: !3905, line: 37, baseType: !3908, size: 64)
!3908 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3904, file: !3905, line: 34, size: 64, elements: !3909)
!3909 = !{!3910, !3911}
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3908, file: !3905, line: 35, baseType: !2559, size: 32)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3908, file: !3905, line: 36, baseType: !1388, size: 32, offset: 32)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3904, file: !3905, line: 45, baseType: !3913, size: 192)
!3913 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3904, file: !3905, line: 40, size: 192, elements: !3914)
!3914 = !{!3915, !3917, !3918, !3924}
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3913, file: !3905, line: 41, baseType: !3916, size: 32)
!3916 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1041, line: 95, baseType: !32)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3913, file: !3905, line: 42, baseType: !32, size: 32, offset: 32)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3913, file: !3905, line: 43, baseType: !3919, size: 64, offset: 64)
!3919 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3905, line: 11, baseType: !3920)
!3920 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3905, line: 8, size: 64, elements: !3921)
!3921 = !{!3922, !3923}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3920, file: !3905, line: 9, baseType: !32, size: 32)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3920, file: !3905, line: 10, baseType: !591, size: 64)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3913, file: !3905, line: 44, baseType: !32, size: 32, offset: 128)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3904, file: !3905, line: 52, baseType: !3926, size: 128)
!3926 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3904, file: !3905, line: 48, size: 128, elements: !3927)
!3927 = !{!3928, !3929, !3930}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3926, file: !3905, line: 49, baseType: !2559, size: 32)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3926, file: !3905, line: 50, baseType: !1388, size: 32, offset: 32)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3926, file: !3905, line: 51, baseType: !3919, size: 64, offset: 64)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3904, file: !3905, line: 61, baseType: !3932, size: 256)
!3932 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3904, file: !3905, line: 55, size: 256, elements: !3933)
!3933 = !{!3934, !3935, !3936, !3937, !3939}
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3932, file: !3905, line: 56, baseType: !2559, size: 32)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3932, file: !3905, line: 57, baseType: !1388, size: 32, offset: 32)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3932, file: !3905, line: 58, baseType: !32, size: 32, offset: 64)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3932, file: !3905, line: 59, baseType: !3938, size: 64, offset: 128)
!3938 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1041, line: 94, baseType: !1523)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3932, file: !3905, line: 60, baseType: !3938, size: 64, offset: 192)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3904, file: !3905, line: 95, baseType: !3941, size: 256)
!3941 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3904, file: !3905, line: 64, size: 256, elements: !3942)
!3942 = !{!3943, !3944}
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3941, file: !3905, line: 65, baseType: !591, size: 64)
!3944 = !DIDerivedType(tag: DW_TAG_member, scope: !3941, file: !3905, line: 77, baseType: !3945, size: 192, offset: 64)
!3945 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3941, file: !3905, line: 77, size: 192, elements: !3946)
!3946 = !{!3947, !3948, !3955}
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3945, file: !3905, line: 82, baseType: !625, size: 16)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3945, file: !3905, line: 88, baseType: !3949, size: 192)
!3949 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3945, file: !3905, line: 84, size: 192, elements: !3950)
!3950 = !{!3951, !3953, !3954}
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3949, file: !3905, line: 85, baseType: !3952, size: 64)
!3952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 64, elements: !2432)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3949, file: !3905, line: 86, baseType: !591, size: 64, offset: 64)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3949, file: !3905, line: 87, baseType: !591, size: 64, offset: 128)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3945, file: !3905, line: 93, baseType: !3956, size: 96)
!3956 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3945, file: !3905, line: 90, size: 96, elements: !3957)
!3957 = !{!3958, !3959}
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3956, file: !3905, line: 91, baseType: !3952, size: 64)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3956, file: !3905, line: 92, baseType: !493, size: 32, offset: 64)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3904, file: !3905, line: 101, baseType: !3961, size: 128)
!3961 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3904, file: !3905, line: 98, size: 128, elements: !3962)
!3962 = !{!3963, !3964}
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3961, file: !3905, line: 99, baseType: !998, size: 64)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3961, file: !3905, line: 100, baseType: !32, size: 32, offset: 64)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3904, file: !3905, line: 108, baseType: !3966, size: 128)
!3966 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3904, file: !3905, line: 104, size: 128, elements: !3967)
!3967 = !{!3968, !3969, !3970}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3966, file: !3905, line: 105, baseType: !591, size: 64)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3966, file: !3905, line: 106, baseType: !32, size: 32, offset: 64)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3966, file: !3905, line: 107, baseType: !7, size: 32, offset: 96)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2326, file: !2327, line: 1067, baseType: !3765, offset: 11136)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2326, file: !2327, line: 1099, baseType: !3973, size: 64, offset: 11136)
!3973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3974, size: 64)
!3974 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2327, line: 56, flags: DIFlagFwdDecl)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2326, file: !2327, line: 1103, baseType: !284, size: 128, offset: 11200)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2326, file: !2327, line: 1104, baseType: !3977, size: 64, offset: 11328)
!3977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3978, size: 64)
!3978 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2327, line: 46, flags: DIFlagFwdDecl)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2326, file: !2327, line: 1105, baseType: !1664, size: 192, offset: 11392)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2326, file: !2327, line: 1106, baseType: !7, size: 32, offset: 11584)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2326, file: !2327, line: 1109, baseType: !3982, size: 128, offset: 11648)
!3982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3983, size: 128, elements: !2663)
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3984, size: 64)
!3984 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2327, line: 51, flags: DIFlagFwdDecl)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2326, file: !2327, line: 1110, baseType: !1664, size: 192, offset: 11776)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2326, file: !2327, line: 1111, baseType: !284, size: 128, offset: 11968)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2326, file: !2327, line: 1173, baseType: !3988, size: 64, offset: 12096)
!3988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3989, size: 64)
!3989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3990, line: 62, size: 256, align: 256, elements: !3991)
!3990 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3991 = !{!3992, !3993, !3994, !3999}
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3989, file: !3990, line: 75, baseType: !493, size: 32)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3989, file: !3990, line: 90, baseType: !493, size: 32, offset: 32)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3989, file: !3990, line: 124, baseType: !3995, size: 64, offset: 64)
!3995 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3989, file: !3990, line: 109, size: 64, elements: !3996)
!3996 = !{!3997, !3998}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3995, file: !3990, line: 110, baseType: !333, size: 64)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3995, file: !3990, line: 112, baseType: !333, size: 64)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3989, file: !3990, line: 144, baseType: !493, size: 32, offset: 128)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2326, file: !2327, line: 1174, baseType: !987, size: 32, offset: 12160)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2326, file: !2327, line: 1179, baseType: !312, size: 64, offset: 12224)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2326, file: !2327, line: 1182, baseType: !4003, size: 128, offset: 12288)
!4003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2267, line: 76, size: 128, elements: !4004)
!4004 = !{!4005, !4010, !4011}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4003, file: !2267, line: 85, baseType: !4006, size: 64)
!4006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !4007, line: 7, size: 64, elements: !4008)
!4007 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!4008 = !{!4009}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !4006, file: !4007, line: 12, baseType: !2467, size: 64)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !4003, file: !2267, line: 88, baseType: !771, size: 8, offset: 64)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !4003, file: !2267, line: 95, baseType: !771, size: 8, offset: 72)
!4012 = !DIDerivedType(tag: DW_TAG_member, scope: !2326, file: !2327, line: 1184, baseType: !4013, size: 128, offset: 12416)
!4013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2326, file: !2327, line: 1184, size: 128, elements: !4014)
!4014 = !{!4015, !4016}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !4013, file: !2327, line: 1185, baseType: !568, size: 32)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4013, file: !2327, line: 1186, baseType: !299, size: 128, align: 64)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2326, file: !2327, line: 1190, baseType: !1882, size: 64, offset: 12544)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2326, file: !2327, line: 1192, baseType: !4019, size: 128, offset: 12608)
!4019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2267, line: 64, size: 128, elements: !4020)
!4020 = !{!4021, !4022, !4023}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4019, file: !2267, line: 65, baseType: !1718, size: 64)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4019, file: !2267, line: 67, baseType: !493, size: 32, offset: 64)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4019, file: !2267, line: 68, baseType: !493, size: 32, offset: 96)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2326, file: !2327, line: 1206, baseType: !32, size: 32, offset: 12736)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2326, file: !2327, line: 1207, baseType: !32, size: 32, offset: 12768)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2326, file: !2327, line: 1209, baseType: !312, size: 64, offset: 12800)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2326, file: !2327, line: 1219, baseType: !331, size: 64, offset: 12864)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2326, file: !2327, line: 1220, baseType: !331, size: 64, offset: 12928)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2326, file: !2327, line: 1317, baseType: !32, size: 32, offset: 12992)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2326, file: !2327, line: 1319, baseType: !2325, size: 64, offset: 13056)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2326, file: !2327, line: 1322, baseType: !4032, size: 64, offset: 13120)
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4033, size: 64)
!4033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !4034, line: 56, size: 512, elements: !4035)
!4034 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!4035 = !{!4036, !4037, !4038, !4039, !4040, !4041, !4042, !4044}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4033, file: !4034, line: 57, baseType: !4032, size: 64)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4033, file: !4034, line: 58, baseType: !591, size: 64, offset: 64)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4033, file: !4034, line: 59, baseType: !312, size: 64, offset: 128)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4033, file: !4034, line: 60, baseType: !312, size: 64, offset: 192)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !4033, file: !4034, line: 61, baseType: !1800, size: 64, offset: 256)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !4033, file: !4034, line: 62, baseType: !7, size: 32, offset: 320)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !4033, file: !4034, line: 63, baseType: !4043, size: 64, offset: 384)
!4043 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !277, line: 153, baseType: !331)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !4033, file: !4034, line: 64, baseType: !3256, size: 64, offset: 448)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2326, file: !2327, line: 1326, baseType: !568, size: 32, offset: 13184)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2326, file: !2327, line: 1342, baseType: !591, size: 64, offset: 13248)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2326, file: !2327, line: 1343, baseType: !333, size: 64, offset: 13312)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2326, file: !2327, line: 1344, baseType: !331, size: 64, offset: 13376)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2326, file: !2327, line: 1345, baseType: !333, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2326, file: !2327, line: 1346, baseType: !333, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2326, file: !2327, line: 1347, baseType: !333, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2326, file: !2327, line: 1348, baseType: !299, size: 128, align: 64, offset: 13504)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2326, file: !2327, line: 1358, baseType: !4054, size: 34816, offset: 13824)
!4054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !4055, line: 485, size: 34816, elements: !4056)
!4055 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!4056 = !{!4057, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4086, !4087, !4088, !4089, !4090, !4091, !4094, !4095, !4096}
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !4054, file: !4055, line: 487, baseType: !4058, size: 192)
!4058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4059, size: 192, elements: !1591)
!4059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !4060, line: 16, size: 64, elements: !4061)
!4060 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!4061 = !{!4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !4059, file: !4060, line: 17, baseType: !581, size: 16)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !4059, file: !4060, line: 18, baseType: !581, size: 16, offset: 16)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !4059, file: !4060, line: 19, baseType: !581, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4059, file: !4060, line: 19, baseType: !581, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !4059, file: !4060, line: 19, baseType: !581, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !4059, file: !4060, line: 19, baseType: !581, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4059, file: !4060, line: 19, baseType: !581, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !4059, file: !4060, line: 20, baseType: !581, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !4059, file: !4060, line: 20, baseType: !581, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !4059, file: !4060, line: 20, baseType: !581, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4059, file: !4060, line: 20, baseType: !581, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4059, file: !4060, line: 20, baseType: !581, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !4059, file: !4060, line: 20, baseType: !581, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4054, file: !4055, line: 491, baseType: !312, size: 64, offset: 192)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !4054, file: !4055, line: 495, baseType: !476, size: 16, offset: 256)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !4054, file: !4055, line: 496, baseType: !476, size: 16, offset: 272)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !4054, file: !4055, line: 497, baseType: !476, size: 16, offset: 288)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !4054, file: !4055, line: 498, baseType: !476, size: 16, offset: 304)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !4054, file: !4055, line: 502, baseType: !312, size: 64, offset: 320)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !4054, file: !4055, line: 503, baseType: !312, size: 64, offset: 384)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !4054, file: !4055, line: 514, baseType: !4083, size: 256, offset: 448)
!4083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4084, size: 256, elements: !2271)
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4085, size: 64)
!4085 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !4055, line: 483, flags: DIFlagFwdDecl)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !4054, file: !4055, line: 516, baseType: !312, size: 64, offset: 704)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !4054, file: !4055, line: 518, baseType: !312, size: 64, offset: 768)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !4054, file: !4055, line: 520, baseType: !312, size: 64, offset: 832)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !4054, file: !4055, line: 521, baseType: !312, size: 64, offset: 896)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !4054, file: !4055, line: 522, baseType: !312, size: 64, offset: 960)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !4054, file: !4055, line: 528, baseType: !4092, size: 64, offset: 1024)
!4092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4093, size: 64)
!4093 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !4055, line: 10, flags: DIFlagFwdDecl)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !4054, file: !4055, line: 535, baseType: !312, size: 64, offset: 1088)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !4054, file: !4055, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !4054, file: !4055, line: 540, baseType: !4097, size: 33280, offset: 1536)
!4097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !4098, line: 317, size: 33280, elements: !4099)
!4098 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!4099 = !{!4100, !4101, !4102}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !4097, file: !4098, line: 330, baseType: !7, size: 32)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !4097, file: !4098, line: 337, baseType: !312, size: 64, offset: 64)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4097, file: !4098, line: 348, baseType: !4103, size: 32768, offset: 512)
!4103 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !4098, line: 304, size: 32768, elements: !4104)
!4104 = !{!4105, !4118, !4155, !4205, !4218}
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !4103, file: !4098, line: 305, baseType: !4106, size: 896)
!4106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !4098, line: 12, size: 896, elements: !4107)
!4107 = !{!4108, !4109, !4110, !4111, !4112, !4113, !4114, !4115, !4117}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4106, file: !4098, line: 13, baseType: !987, size: 32)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4106, file: !4098, line: 14, baseType: !987, size: 32, offset: 32)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4106, file: !4098, line: 15, baseType: !987, size: 32, offset: 64)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4106, file: !4098, line: 16, baseType: !987, size: 32, offset: 96)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4106, file: !4098, line: 17, baseType: !987, size: 32, offset: 128)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4106, file: !4098, line: 18, baseType: !987, size: 32, offset: 160)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4106, file: !4098, line: 19, baseType: !987, size: 32, offset: 192)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4106, file: !4098, line: 22, baseType: !4116, size: 640, offset: 224)
!4116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 640, elements: !900)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4106, file: !4098, line: 25, baseType: !987, size: 32, offset: 864)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !4103, file: !4098, line: 306, baseType: !4119, size: 4096, align: 128)
!4119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !4098, line: 34, size: 4096, align: 128, elements: !4120)
!4120 = !{!4121, !4122, !4123, !4124, !4125, !4140, !4141, !4142, !4144, !4146, !4150}
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4119, file: !4098, line: 35, baseType: !581, size: 16)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4119, file: !4098, line: 36, baseType: !581, size: 16, offset: 16)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4119, file: !4098, line: 37, baseType: !581, size: 16, offset: 32)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !4119, file: !4098, line: 38, baseType: !581, size: 16, offset: 48)
!4125 = !DIDerivedType(tag: DW_TAG_member, scope: !4119, file: !4098, line: 39, baseType: !4126, size: 128, offset: 64)
!4126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4119, file: !4098, line: 39, size: 128, elements: !4127)
!4127 = !{!4128, !4133}
!4128 = !DIDerivedType(tag: DW_TAG_member, scope: !4126, file: !4098, line: 40, baseType: !4129, size: 128)
!4129 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4126, file: !4098, line: 40, size: 128, elements: !4130)
!4130 = !{!4131, !4132}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !4129, file: !4098, line: 41, baseType: !331, size: 64)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !4129, file: !4098, line: 42, baseType: !331, size: 64, offset: 64)
!4133 = !DIDerivedType(tag: DW_TAG_member, scope: !4126, file: !4098, line: 44, baseType: !4134, size: 128)
!4134 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4126, file: !4098, line: 44, size: 128, elements: !4135)
!4135 = !{!4136, !4137, !4138, !4139}
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4134, file: !4098, line: 45, baseType: !987, size: 32)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4134, file: !4098, line: 46, baseType: !987, size: 32, offset: 32)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4134, file: !4098, line: 47, baseType: !987, size: 32, offset: 64)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4134, file: !4098, line: 48, baseType: !987, size: 32, offset: 96)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !4119, file: !4098, line: 51, baseType: !987, size: 32, offset: 192)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !4119, file: !4098, line: 52, baseType: !987, size: 32, offset: 224)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4119, file: !4098, line: 55, baseType: !4143, size: 1024, offset: 256)
!4143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 1024, elements: !819)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !4119, file: !4098, line: 58, baseType: !4145, size: 2048, offset: 1280)
!4145 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 2048, elements: !3810)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4119, file: !4098, line: 60, baseType: !4147, size: 384, offset: 3328)
!4147 = !DICompositeType(tag: DW_TAG_array_type, baseType: !987, size: 384, elements: !4148)
!4148 = !{!4149}
!4149 = !DISubrange(count: 12)
!4150 = !DIDerivedType(tag: DW_TAG_member, scope: !4119, file: !4098, line: 62, baseType: !4151, size: 384, offset: 3712)
!4151 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4119, file: !4098, line: 62, size: 384, elements: !4152)
!4152 = !{!4153, !4154}
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !4151, file: !4098, line: 63, baseType: !4147, size: 384)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !4151, file: !4098, line: 64, baseType: !4147, size: 384)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !4103, file: !4098, line: 307, baseType: !4156, size: 1088)
!4156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !4098, line: 79, size: 1088, elements: !4157)
!4157 = !{!4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4204}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !4156, file: !4098, line: 80, baseType: !987, size: 32)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !4156, file: !4098, line: 81, baseType: !987, size: 32, offset: 32)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !4156, file: !4098, line: 82, baseType: !987, size: 32, offset: 64)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !4156, file: !4098, line: 83, baseType: !987, size: 32, offset: 96)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !4156, file: !4098, line: 84, baseType: !987, size: 32, offset: 128)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !4156, file: !4098, line: 85, baseType: !987, size: 32, offset: 160)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !4156, file: !4098, line: 86, baseType: !987, size: 32, offset: 192)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !4156, file: !4098, line: 88, baseType: !4116, size: 640, offset: 224)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !4156, file: !4098, line: 89, baseType: !794, size: 8, offset: 864)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !4156, file: !4098, line: 90, baseType: !794, size: 8, offset: 872)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !4156, file: !4098, line: 91, baseType: !794, size: 8, offset: 880)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !4156, file: !4098, line: 92, baseType: !794, size: 8, offset: 888)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !4156, file: !4098, line: 93, baseType: !794, size: 8, offset: 896)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !4156, file: !4098, line: 94, baseType: !794, size: 8, offset: 904)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4156, file: !4098, line: 95, baseType: !4173, size: 64, offset: 960)
!4173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4174, size: 64)
!4174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !4175, line: 11, size: 128, elements: !4176)
!4175 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!4176 = !{!4177, !4178}
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !4174, file: !4175, line: 12, baseType: !998, size: 64)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4174, file: !4175, line: 13, baseType: !4179, size: 64, offset: 64)
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !4181, line: 56, size: 1344, elements: !4182)
!4181 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!4182 = !{!4183, !4184, !4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203}
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4180, file: !4181, line: 61, baseType: !312, size: 64)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4180, file: !4181, line: 62, baseType: !312, size: 64, offset: 64)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !4180, file: !4181, line: 63, baseType: !312, size: 64, offset: 128)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4180, file: !4181, line: 64, baseType: !312, size: 64, offset: 192)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !4180, file: !4181, line: 65, baseType: !312, size: 64, offset: 256)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !4180, file: !4181, line: 66, baseType: !312, size: 64, offset: 320)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !4180, file: !4181, line: 68, baseType: !312, size: 64, offset: 384)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !4180, file: !4181, line: 69, baseType: !312, size: 64, offset: 448)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !4180, file: !4181, line: 70, baseType: !312, size: 64, offset: 512)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !4180, file: !4181, line: 71, baseType: !312, size: 64, offset: 576)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !4180, file: !4181, line: 72, baseType: !312, size: 64, offset: 640)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !4180, file: !4181, line: 73, baseType: !312, size: 64, offset: 704)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !4180, file: !4181, line: 74, baseType: !312, size: 64, offset: 768)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !4180, file: !4181, line: 75, baseType: !312, size: 64, offset: 832)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !4180, file: !4181, line: 76, baseType: !312, size: 64, offset: 896)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !4180, file: !4181, line: 81, baseType: !312, size: 64, offset: 960)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4180, file: !4181, line: 83, baseType: !312, size: 64, offset: 1024)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !4180, file: !4181, line: 84, baseType: !312, size: 64, offset: 1088)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4180, file: !4181, line: 85, baseType: !312, size: 64, offset: 1152)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !4180, file: !4181, line: 86, baseType: !312, size: 64, offset: 1216)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !4180, file: !4181, line: 87, baseType: !312, size: 64, offset: 1280)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !4156, file: !4098, line: 96, baseType: !987, size: 32, offset: 1024)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !4103, file: !4098, line: 308, baseType: !4206, size: 4608, align: 512)
!4206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !4098, line: 289, size: 4608, align: 512, elements: !4207)
!4207 = !{!4208, !4209, !4216}
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !4206, file: !4098, line: 290, baseType: !4119, size: 4096, align: 128)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !4206, file: !4098, line: 291, baseType: !4210, size: 512, offset: 4096)
!4210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !4098, line: 268, size: 512, elements: !4211)
!4211 = !{!4212, !4213, !4214}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !4210, file: !4098, line: 269, baseType: !331, size: 64)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !4210, file: !4098, line: 270, baseType: !331, size: 64, offset: 64)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4210, file: !4098, line: 271, baseType: !4215, size: 384, offset: 128)
!4215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 384, elements: !999)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !4206, file: !4098, line: 292, baseType: !4217, offset: 4608)
!4217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, elements: !483)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !4103, file: !4098, line: 309, baseType: !4219, size: 32768)
!4219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 32768, elements: !4220)
!4220 = !{!4221}
!4221 = !DISubrange(count: 4096)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2322, file: !1720, line: 378, baseType: !4223, size: 64, offset: 64)
!4223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2318, file: !1720, line: 384, baseType: !2596, size: 192, offset: 192)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2094, file: !1720, line: 500, baseType: !1669, offset: 6656)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2094, file: !1720, line: 501, baseType: !4227, size: 64, offset: 6656)
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4228, size: 64)
!4228 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1720, line: 387, flags: DIFlagFwdDecl)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2094, file: !1720, line: 516, baseType: !2780, size: 64, offset: 6720)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2094, file: !1720, line: 519, baseType: !1315, size: 64, offset: 6784)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2094, file: !1720, line: 521, baseType: !4232, size: 64, offset: 6848)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4233 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1720, line: 521, flags: DIFlagFwdDecl)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2094, file: !1720, line: 545, baseType: !383, size: 32, offset: 6912)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2094, file: !1720, line: 548, baseType: !771, size: 8, offset: 6944)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2094, file: !1720, line: 550, baseType: !4237, offset: 6952)
!4237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !4238, line: 142, elements: !1586)
!4238 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2094, file: !1720, line: 554, baseType: !2828, size: 256, offset: 6976)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2094, file: !1720, line: 557, baseType: !987, size: 32, offset: 7232)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2091, file: !1720, line: 565, baseType: !4242, offset: 7296)
!4242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, elements: !309)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2087, file: !1720, line: 151, baseType: !383, size: 32)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2079, file: !1720, line: 156, baseType: !1669, offset: 256)
!4245 = !DIDerivedType(tag: DW_TAG_member, scope: !1724, file: !1720, line: 159, baseType: !4246, size: 128)
!4246 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1724, file: !1720, line: 159, size: 128, elements: !4247)
!4247 = !{!4248, !4319}
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !4246, file: !1720, line: 161, baseType: !4249, size: 64)
!4249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4250, size: 64)
!4250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !4251, line: 110, size: 1152, elements: !4252)
!4251 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!4252 = !{!4253, !4263, !4284, !4285, !4286, !4293, !4294, !4306, !4307, !4308}
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !4250, file: !4251, line: 111, baseType: !4254, size: 384)
!4254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !4251, line: 19, size: 384, elements: !4255)
!4255 = !{!4256, !4258, !4259, !4260, !4261, !4262}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !4254, file: !4251, line: 20, baseType: !4257, size: 64)
!4257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !312)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !4254, file: !4251, line: 21, baseType: !4257, size: 64, offset: 64)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !4254, file: !4251, line: 22, baseType: !4257, size: 64, offset: 128)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4254, file: !4251, line: 23, baseType: !312, size: 64, offset: 192)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !4254, file: !4251, line: 24, baseType: !312, size: 64, offset: 256)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4254, file: !4251, line: 25, baseType: !312, size: 64, offset: 320)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4250, file: !4251, line: 112, baseType: !4264, size: 64, offset: 384)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !4266, line: 105, size: 128, elements: !4267)
!4266 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!4267 = !{!4268, !4269}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !4265, file: !4266, line: 110, baseType: !312, size: 64)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4265, file: !4266, line: 118, baseType: !4270, size: 64, offset: 64)
!4270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4271, size: 64)
!4271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !4266, line: 95, size: 448, elements: !4272)
!4272 = !{!4273, !4274, !4279, !4280, !4281, !4282, !4283}
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4271, file: !4266, line: 96, baseType: !371, size: 64)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4271, file: !4266, line: 97, baseType: !4275, size: 64, offset: 64)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !4266, line: 60, baseType: !4277)
!4277 = !DISubroutineType(types: !4278)
!4278 = !{null, !4264}
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !4271, file: !4266, line: 98, baseType: !4275, size: 64, offset: 128)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !4271, file: !4266, line: 99, baseType: !771, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !4271, file: !4266, line: 100, baseType: !771, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4271, file: !4266, line: 101, baseType: !299, size: 128, align: 64, offset: 256)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4271, file: !4266, line: 102, baseType: !4264, size: 64, offset: 384)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !4250, file: !4251, line: 113, baseType: !4265, size: 128, offset: 448)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !4250, file: !4251, line: 114, baseType: !2596, size: 192, offset: 576)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4250, file: !4251, line: 115, baseType: !4287, size: 32, offset: 768)
!4287 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !4251, line: 59, baseType: !7, size: 32, elements: !4288)
!4288 = !{!4289, !4290, !4291, !4292}
!4289 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!4290 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!4291 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!4292 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4250, file: !4251, line: 116, baseType: !7, size: 32, offset: 800)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4250, file: !4251, line: 117, baseType: !4295, size: 64, offset: 832)
!4295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4296, size: 64)
!4296 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4297)
!4297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !4251, line: 67, size: 256, elements: !4298)
!4298 = !{!4299, !4300, !4304, !4305}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !4297, file: !4251, line: 73, baseType: !1820, size: 64)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !4297, file: !4251, line: 78, baseType: !4301, size: 64, offset: 64)
!4301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4302, size: 64)
!4302 = !DISubroutineType(types: !4303)
!4303 = !{null, !4249}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4297, file: !4251, line: 83, baseType: !4301, size: 64, offset: 128)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !4297, file: !4251, line: 89, baseType: !2143, size: 64, offset: 192)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4250, file: !4251, line: 118, baseType: !591, size: 64, offset: 896)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !4250, file: !4251, line: 119, baseType: !32, size: 32, offset: 960)
!4308 = !DIDerivedType(tag: DW_TAG_member, scope: !4250, file: !4251, line: 120, baseType: !4309, size: 128, offset: 1024)
!4309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4250, file: !4251, line: 120, size: 128, elements: !4310)
!4310 = !{!4311, !4317}
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !4309, file: !4251, line: 121, baseType: !4312, size: 128)
!4312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !4313, line: 6, size: 128, elements: !4314)
!4313 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!4314 = !{!4315, !4316}
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4312, file: !4313, line: 7, baseType: !331, size: 64)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4312, file: !4313, line: 8, baseType: !331, size: 64, offset: 64)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !4309, file: !4251, line: 122, baseType: !4318)
!4318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4312, elements: !483)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !4246, file: !1720, line: 162, baseType: !591, size: 64, offset: 64)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1724, file: !1720, line: 176, baseType: !299, size: 128, align: 64)
!4321 = !DIDerivedType(tag: DW_TAG_member, scope: !1719, file: !1720, line: 179, baseType: !4322, size: 32, offset: 384)
!4322 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1719, file: !1720, line: 179, size: 32, elements: !4323)
!4323 = !{!4324, !4325, !4326, !4327}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !4322, file: !1720, line: 184, baseType: !383, size: 32)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !4322, file: !1720, line: 192, baseType: !7, size: 32)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4322, file: !1720, line: 194, baseType: !7, size: 32)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !4322, file: !1720, line: 195, baseType: !32, size: 32)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1719, file: !1720, line: 199, baseType: !383, size: 32, offset: 416)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1599, file: !1317, line: 1964, baseType: !4330, size: 64, offset: 1344)
!4330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4331, size: 64)
!4331 = !DISubroutineType(types: !4332)
!4332 = !{!998, !1545, !4333}
!4333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4334, size: 64)
!4334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !4335, line: 12, size: 256, elements: !4336)
!4335 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!4336 = !{!4337, !4338, !4339, !4340, !4341}
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4334, file: !4335, line: 13, baseType: !1741, size: 32)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !4334, file: !4335, line: 16, baseType: !32, size: 32, offset: 32)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !4334, file: !4335, line: 23, baseType: !312, size: 64, offset: 64)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !4334, file: !4335, line: 30, baseType: !312, size: 64, offset: 128)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !4334, file: !4335, line: 33, baseType: !4342, size: 64, offset: 192)
!4342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4343, size: 64)
!4343 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1720, line: 27, flags: DIFlagFwdDecl)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1599, file: !1317, line: 1966, baseType: !4330, size: 64, offset: 1408)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1546, file: !1317, line: 1424, baseType: !4346, size: 64, offset: 448)
!4346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4347, size: 64)
!4347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4348)
!4348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !4349, line: 322, size: 704, elements: !4350)
!4349 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!4350 = !{!4351, !4402, !4406, !4410, !4411, !4412, !4413, !4414, !4419, !4424, !4428}
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !4348, file: !4349, line: 323, baseType: !4352, size: 64)
!4352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4353, size: 64)
!4353 = !DISubroutineType(types: !4354)
!4354 = !{!32, !4355}
!4355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4356, size: 64)
!4356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !4349, line: 294, size: 1600, elements: !4357)
!4357 = !{!4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4387, !4388, !4389}
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !4356, file: !4349, line: 295, baseType: !276, size: 128)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !4356, file: !4349, line: 296, baseType: !284, size: 128, offset: 128)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !4356, file: !4349, line: 297, baseType: !284, size: 128, offset: 256)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !4356, file: !4349, line: 298, baseType: !284, size: 128, offset: 384)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !4356, file: !4349, line: 299, baseType: !1664, size: 192, offset: 512)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !4356, file: !4349, line: 300, baseType: !1669, offset: 704)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4356, file: !4349, line: 301, baseType: !383, size: 32, offset: 704)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !4356, file: !4349, line: 302, baseType: !1545, size: 64, offset: 768)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !4356, file: !4349, line: 303, baseType: !4367, size: 64, offset: 832)
!4367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !4349, line: 68, size: 64, elements: !4368)
!4368 = !{!4369, !4381}
!4369 = !DIDerivedType(tag: DW_TAG_member, scope: !4367, file: !4349, line: 69, baseType: !4370, size: 32)
!4370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4367, file: !4349, line: 69, size: 32, elements: !4371)
!4371 = !{!4372, !4373, !4374}
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4370, file: !4349, line: 70, baseType: !1382, size: 32)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !4370, file: !4349, line: 71, baseType: !1390, size: 32)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !4370, file: !4349, line: 72, baseType: !4375, size: 32)
!4375 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !4376, line: 24, baseType: !4377)
!4376 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!4377 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4376, line: 22, size: 32, elements: !4378)
!4378 = !{!4379}
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4377, file: !4376, line: 23, baseType: !4380, size: 32)
!4380 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !4376, line: 20, baseType: !1388)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4367, file: !4349, line: 74, baseType: !4382, size: 32, offset: 32)
!4382 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !4349, line: 54, baseType: !7, size: 32, elements: !4383)
!4383 = !{!4384, !4385, !4386}
!4384 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!4385 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!4386 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !4356, file: !4349, line: 304, baseType: !1476, size: 64, offset: 896)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !4356, file: !4349, line: 305, baseType: !312, size: 64, offset: 960)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !4356, file: !4349, line: 306, baseType: !4390, size: 576, offset: 1024)
!4390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !4349, line: 205, size: 576, elements: !4391)
!4391 = !{!4392, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !4390, file: !4349, line: 206, baseType: !4393, size: 64)
!4393 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !4349, line: 66, baseType: !379)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !4390, file: !4349, line: 207, baseType: !4393, size: 64, offset: 64)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !4390, file: !4349, line: 208, baseType: !4393, size: 64, offset: 128)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !4390, file: !4349, line: 209, baseType: !4393, size: 64, offset: 192)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !4390, file: !4349, line: 210, baseType: !4393, size: 64, offset: 256)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !4390, file: !4349, line: 211, baseType: !4393, size: 64, offset: 320)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !4390, file: !4349, line: 212, baseType: !4393, size: 64, offset: 384)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !4390, file: !4349, line: 213, baseType: !1483, size: 64, offset: 448)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !4390, file: !4349, line: 214, baseType: !1483, size: 64, offset: 512)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !4348, file: !4349, line: 324, baseType: !4403, size: 64, offset: 64)
!4403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4404, size: 64)
!4404 = !DISubroutineType(types: !4405)
!4405 = !{!4355, !1545, !32}
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !4348, file: !4349, line: 325, baseType: !4407, size: 64, offset: 128)
!4407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4408, size: 64)
!4408 = !DISubroutineType(types: !4409)
!4409 = !{null, !4355}
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !4348, file: !4349, line: 326, baseType: !4352, size: 64, offset: 192)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !4348, file: !4349, line: 327, baseType: !4352, size: 64, offset: 256)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !4348, file: !4349, line: 328, baseType: !4352, size: 64, offset: 320)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !4348, file: !4349, line: 329, baseType: !1627, size: 64, offset: 384)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !4348, file: !4349, line: 332, baseType: !4415, size: 64, offset: 448)
!4415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4416, size: 64)
!4416 = !DISubroutineType(types: !4417)
!4417 = !{!4418, !1375}
!4418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4393, size: 64)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !4348, file: !4349, line: 333, baseType: !4420, size: 64, offset: 512)
!4420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4421, size: 64)
!4421 = !DISubroutineType(types: !4422)
!4422 = !{!32, !1375, !4423}
!4423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4375, size: 64)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !4348, file: !4349, line: 335, baseType: !4425, size: 64, offset: 576)
!4425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4426, size: 64)
!4426 = !DISubroutineType(types: !4427)
!4427 = !{!32, !1375, !4418}
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4348, file: !4349, line: 337, baseType: !4429, size: 64, offset: 640)
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4430, size: 64)
!4430 = !DISubroutineType(types: !4431)
!4431 = !{!32, !1545, !4432}
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4367, size: 64)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1546, file: !1317, line: 1425, baseType: !4434, size: 64, offset: 512)
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4435, size: 64)
!4435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4436)
!4436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !4349, line: 428, size: 704, elements: !4437)
!4437 = !{!4438, !4442, !4443, !4447, !4448, !4449, !4464, !4487, !4491, !4492, !4515}
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !4436, file: !4349, line: 429, baseType: !4439, size: 64)
!4439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4440, size: 64)
!4440 = !DISubroutineType(types: !4441)
!4441 = !{!32, !1545, !32, !32, !1492}
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !4436, file: !4349, line: 430, baseType: !1627, size: 64, offset: 64)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !4436, file: !4349, line: 431, baseType: !4444, size: 64, offset: 128)
!4444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4445, size: 64)
!4445 = !DISubroutineType(types: !4446)
!4446 = !{!32, !1545, !7}
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !4436, file: !4349, line: 432, baseType: !4444, size: 64, offset: 192)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !4436, file: !4349, line: 433, baseType: !1627, size: 64, offset: 256)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !4436, file: !4349, line: 434, baseType: !4450, size: 64, offset: 320)
!4450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4451, size: 64)
!4451 = !DISubroutineType(types: !4452)
!4452 = !{!32, !1545, !32, !4453}
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4454, size: 64)
!4454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !4349, line: 415, size: 256, elements: !4455)
!4455 = !{!4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !4454, file: !4349, line: 416, baseType: !32, size: 32)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4454, file: !4349, line: 417, baseType: !7, size: 32, offset: 32)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !4454, file: !4349, line: 418, baseType: !7, size: 32, offset: 64)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !4454, file: !4349, line: 420, baseType: !7, size: 32, offset: 96)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !4454, file: !4349, line: 421, baseType: !7, size: 32, offset: 128)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !4454, file: !4349, line: 422, baseType: !7, size: 32, offset: 160)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !4454, file: !4349, line: 423, baseType: !7, size: 32, offset: 192)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !4454, file: !4349, line: 424, baseType: !7, size: 32, offset: 224)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !4436, file: !4349, line: 435, baseType: !4465, size: 64, offset: 384)
!4465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4466, size: 64)
!4466 = !DISubroutineType(types: !4467)
!4467 = !{!32, !1545, !4367, !4468}
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 64)
!4469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !4349, line: 343, size: 960, elements: !4470)
!4470 = !{!4471, !4472, !4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486}
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !4469, file: !4349, line: 344, baseType: !32, size: 32)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !4469, file: !4349, line: 345, baseType: !331, size: 64, offset: 64)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !4469, file: !4349, line: 346, baseType: !331, size: 64, offset: 128)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !4469, file: !4349, line: 347, baseType: !331, size: 64, offset: 192)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !4469, file: !4349, line: 348, baseType: !331, size: 64, offset: 256)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !4469, file: !4349, line: 349, baseType: !331, size: 64, offset: 320)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !4469, file: !4349, line: 350, baseType: !331, size: 64, offset: 384)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !4469, file: !4349, line: 351, baseType: !377, size: 64, offset: 448)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !4469, file: !4349, line: 353, baseType: !377, size: 64, offset: 512)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !4469, file: !4349, line: 354, baseType: !32, size: 32, offset: 576)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !4469, file: !4349, line: 355, baseType: !32, size: 32, offset: 608)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !4469, file: !4349, line: 356, baseType: !331, size: 64, offset: 640)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !4469, file: !4349, line: 357, baseType: !331, size: 64, offset: 704)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !4469, file: !4349, line: 358, baseType: !331, size: 64, offset: 768)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !4469, file: !4349, line: 359, baseType: !377, size: 64, offset: 832)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !4469, file: !4349, line: 360, baseType: !32, size: 32, offset: 896)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !4436, file: !4349, line: 436, baseType: !4488, size: 64, offset: 448)
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 64)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{!32, !1545, !4432, !4468}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !4436, file: !4349, line: 438, baseType: !4465, size: 64, offset: 512)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !4436, file: !4349, line: 439, baseType: !4493, size: 64, offset: 576)
!4493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4494, size: 64)
!4494 = !DISubroutineType(types: !4495)
!4495 = !{!32, !1545, !4496}
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !4349, line: 409, size: 1408, elements: !4498)
!4498 = !{!4499, !4500}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !4497, file: !4349, line: 410, baseType: !7, size: 32)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !4497, file: !4349, line: 411, baseType: !4501, size: 1344, offset: 64)
!4501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4502, size: 1344, elements: !1591)
!4502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !4349, line: 395, size: 448, elements: !4503)
!4503 = !{!4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4514}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4502, file: !4349, line: 396, baseType: !7, size: 32)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !4502, file: !4349, line: 397, baseType: !7, size: 32, offset: 32)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !4502, file: !4349, line: 399, baseType: !7, size: 32, offset: 64)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !4502, file: !4349, line: 400, baseType: !7, size: 32, offset: 96)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !4502, file: !4349, line: 401, baseType: !7, size: 32, offset: 128)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !4502, file: !4349, line: 402, baseType: !7, size: 32, offset: 160)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !4502, file: !4349, line: 403, baseType: !7, size: 32, offset: 192)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !4502, file: !4349, line: 404, baseType: !335, size: 64, offset: 256)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !4502, file: !4349, line: 405, baseType: !4513, size: 64, offset: 320)
!4513 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !277, line: 126, baseType: !331)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !4502, file: !4349, line: 406, baseType: !4513, size: 64, offset: 384)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !4436, file: !4349, line: 440, baseType: !4444, size: 64, offset: 640)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1546, file: !1317, line: 1426, baseType: !4517, size: 64, offset: 576)
!4517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4518, size: 64)
!4518 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4519)
!4519 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !1317, line: 49, flags: DIFlagFwdDecl)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1546, file: !1317, line: 1427, baseType: !312, size: 64, offset: 640)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1546, file: !1317, line: 1428, baseType: !312, size: 64, offset: 704)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1546, file: !1317, line: 1429, baseType: !312, size: 64, offset: 768)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1546, file: !1317, line: 1430, baseType: !1338, size: 64, offset: 832)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1546, file: !1317, line: 1431, baseType: !1754, size: 256, offset: 896)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1546, file: !1317, line: 1432, baseType: !32, size: 32, offset: 1152)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1546, file: !1317, line: 1433, baseType: !383, size: 32, offset: 1184)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1546, file: !1317, line: 1437, baseType: !4528, size: 64, offset: 1216)
!4528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4529, size: 64)
!4529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4530, size: 64)
!4530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4531)
!4531 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !1317, line: 1437, flags: DIFlagFwdDecl)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1546, file: !1317, line: 1449, baseType: !4533, size: 64, offset: 1280)
!4533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1354, line: 34, size: 64, elements: !4534)
!4534 = !{!4535}
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4533, file: !1354, line: 35, baseType: !1357, size: 64)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1546, file: !1317, line: 1450, baseType: !284, size: 128, offset: 1344)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1546, file: !1317, line: 1451, baseType: !4538, size: 64, offset: 1472)
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4539, size: 64)
!4539 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1317, line: 699, flags: DIFlagFwdDecl)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1546, file: !1317, line: 1452, baseType: !3854, size: 64, offset: 1536)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1546, file: !1317, line: 1453, baseType: !4542, size: 64, offset: 1600)
!4542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4543, size: 64)
!4543 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !1317, line: 1453, flags: DIFlagFwdDecl)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1546, file: !1317, line: 1454, baseType: !276, size: 128, offset: 1664)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1546, file: !1317, line: 1455, baseType: !7, size: 32, offset: 1792)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1546, file: !1317, line: 1456, baseType: !4547, size: 2432, offset: 1856)
!4547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !4349, line: 518, size: 2432, elements: !4548)
!4548 = !{!4549, !4550, !4551, !4553, !4585}
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4547, file: !4349, line: 519, baseType: !7, size: 32)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !4547, file: !4349, line: 520, baseType: !1754, size: 256, offset: 64)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !4547, file: !4349, line: 521, baseType: !4552, size: 192, offset: 320)
!4552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1375, size: 192, elements: !1591)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4547, file: !4349, line: 522, baseType: !4554, size: 1728, offset: 512)
!4554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4555, size: 1728, elements: !1591)
!4555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !4349, line: 222, size: 576, elements: !4556)
!4556 = !{!4557, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584}
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !4555, file: !4349, line: 223, baseType: !4558, size: 64)
!4558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4559, size: 64)
!4559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !4349, line: 443, size: 256, elements: !4560)
!4560 = !{!4561, !4562, !4575, !4576}
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !4559, file: !4349, line: 444, baseType: !32, size: 32)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !4559, file: !4349, line: 445, baseType: !4563, size: 64, offset: 64)
!4563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4564, size: 64)
!4564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4565)
!4565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !4349, line: 310, size: 512, elements: !4566)
!4566 = !{!4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574}
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !4565, file: !4349, line: 311, baseType: !1627, size: 64)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !4565, file: !4349, line: 312, baseType: !1627, size: 64, offset: 64)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !4565, file: !4349, line: 313, baseType: !1627, size: 64, offset: 128)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !4565, file: !4349, line: 314, baseType: !1627, size: 64, offset: 192)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !4565, file: !4349, line: 315, baseType: !4352, size: 64, offset: 256)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !4565, file: !4349, line: 316, baseType: !4352, size: 64, offset: 320)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !4565, file: !4349, line: 317, baseType: !4352, size: 64, offset: 384)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !4565, file: !4349, line: 318, baseType: !4429, size: 64, offset: 448)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !4559, file: !4349, line: 446, baseType: !980, size: 64, offset: 128)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !4559, file: !4349, line: 447, baseType: !4558, size: 64, offset: 192)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !4555, file: !4349, line: 224, baseType: !32, size: 32, offset: 64)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !4555, file: !4349, line: 226, baseType: !284, size: 128, offset: 128)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !4555, file: !4349, line: 227, baseType: !312, size: 64, offset: 256)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !4555, file: !4349, line: 228, baseType: !7, size: 32, offset: 320)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !4555, file: !4349, line: 229, baseType: !7, size: 32, offset: 352)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !4555, file: !4349, line: 230, baseType: !4393, size: 64, offset: 384)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !4555, file: !4349, line: 231, baseType: !4393, size: 64, offset: 448)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !4555, file: !4349, line: 232, baseType: !591, size: 64, offset: 512)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4547, file: !4349, line: 523, baseType: !4586, size: 192, offset: 2240)
!4586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4563, size: 192, elements: !1591)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1546, file: !1317, line: 1458, baseType: !4588, size: 2112, offset: 4288)
!4588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !1317, line: 1410, size: 2112, elements: !4589)
!4589 = !{!4590, !4591, !4592}
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !4588, file: !1317, line: 1411, baseType: !32, size: 32)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !4588, file: !1317, line: 1412, baseType: !1888, size: 128, offset: 64)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !4588, file: !1317, line: 1413, baseType: !4593, size: 1920, offset: 192)
!4593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4594, size: 1920, elements: !1591)
!4594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !4595, line: 12, size: 640, elements: !4596)
!4595 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!4596 = !{!4597, !4605, !4607, !4612, !4613}
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !4594, file: !4595, line: 13, baseType: !4598, size: 320)
!4598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !4599, line: 17, size: 320, elements: !4600)
!4599 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!4600 = !{!4601, !4602, !4603, !4604}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !4598, file: !4599, line: 18, baseType: !32, size: 32)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !4598, file: !4599, line: 19, baseType: !32, size: 32, offset: 32)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !4598, file: !4599, line: 20, baseType: !1888, size: 128, offset: 64)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !4598, file: !4599, line: 22, baseType: !299, size: 128, align: 64, offset: 192)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !4594, file: !4595, line: 14, baseType: !4606, size: 64, offset: 320)
!4606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !4594, file: !4595, line: 15, baseType: !4608, size: 64, offset: 384)
!4608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !4609, line: 16, size: 64, elements: !4610)
!4609 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!4610 = !{!4611}
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4608, file: !4609, line: 17, baseType: !2325, size: 64)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4594, file: !4595, line: 16, baseType: !1888, size: 128, offset: 448)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4594, file: !4595, line: 17, baseType: !383, size: 32, offset: 576)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1546, file: !1317, line: 1465, baseType: !591, size: 64, offset: 6400)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1546, file: !1317, line: 1468, baseType: !987, size: 32, offset: 6464)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1546, file: !1317, line: 1470, baseType: !1483, size: 64, offset: 6528)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1546, file: !1317, line: 1471, baseType: !1483, size: 64, offset: 6592)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1546, file: !1317, line: 1473, baseType: !493, size: 32, offset: 6656)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1546, file: !1317, line: 1474, baseType: !4620, size: 64, offset: 6720)
!4620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4621, size: 64)
!4621 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !1317, line: 603, flags: DIFlagFwdDecl)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1546, file: !1317, line: 1477, baseType: !4623, size: 256, offset: 6784)
!4623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 256, elements: !819)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1546, file: !1317, line: 1478, baseType: !4625, size: 128, offset: 7040)
!4625 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !4626, line: 18, baseType: !4627)
!4626 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!4627 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4626, line: 16, size: 128, elements: !4628)
!4628 = !{!4629}
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4627, file: !4626, line: 17, baseType: !3223, size: 128)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1546, file: !1317, line: 1480, baseType: !7, size: 32, offset: 7168)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1546, file: !1317, line: 1481, baseType: !4632, size: 32, offset: 7200)
!4632 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !277, line: 150, baseType: !7)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1546, file: !1317, line: 1487, baseType: !1664, size: 192, offset: 7232)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1546, file: !1317, line: 1493, baseType: !292, size: 64, offset: 7424)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1546, file: !1317, line: 1495, baseType: !4636, size: 64, offset: 7488)
!4636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4637, size: 64)
!4637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4638)
!4638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1336, line: 135, size: 1024, align: 512, elements: !4639)
!4639 = !{!4640, !4644, !4645, !4652, !4658, !4662, !4666, !4670, !4671, !4675, !4679, !4684, !4688}
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !4638, file: !1336, line: 136, baseType: !4641, size: 64)
!4641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4642, size: 64)
!4642 = !DISubroutineType(types: !4643)
!4643 = !{!32, !1338, !7}
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !4638, file: !1336, line: 137, baseType: !4641, size: 64, offset: 64)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !4638, file: !1336, line: 138, baseType: !4646, size: 64, offset: 128)
!4646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4647, size: 64)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{!32, !4649, !4651}
!4649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4650, size: 64)
!4650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1339)
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !4638, file: !1336, line: 139, baseType: !4653, size: 64, offset: 192)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4654, size: 64)
!4654 = !DISubroutineType(types: !4655)
!4655 = !{!32, !4649, !7, !292, !4656}
!4656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4657, size: 64)
!4657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1362)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !4638, file: !1336, line: 141, baseType: !4659, size: 64, offset: 256)
!4659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4660, size: 64)
!4660 = !DISubroutineType(types: !4661)
!4661 = !{!32, !4649}
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !4638, file: !1336, line: 142, baseType: !4663, size: 64, offset: 320)
!4663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4664, size: 64)
!4664 = !DISubroutineType(types: !4665)
!4665 = !{!32, !1338}
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !4638, file: !1336, line: 143, baseType: !4667, size: 64, offset: 384)
!4667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4668, size: 64)
!4668 = !DISubroutineType(types: !4669)
!4669 = !{null, !1338}
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !4638, file: !1336, line: 144, baseType: !4667, size: 64, offset: 448)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !4638, file: !1336, line: 145, baseType: !4672, size: 64, offset: 512)
!4672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4673, size: 64)
!4673 = !DISubroutineType(types: !4674)
!4674 = !{null, !1338, !1375}
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !4638, file: !1336, line: 146, baseType: !4676, size: 64, offset: 576)
!4676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4677, size: 64)
!4677 = !DISubroutineType(types: !4678)
!4678 = !{!1038, !1338, !1038, !32}
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !4638, file: !1336, line: 147, baseType: !4680, size: 64, offset: 640)
!4680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4681, size: 64)
!4681 = !DISubroutineType(types: !4682)
!4682 = !{!1334, !4683}
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !4638, file: !1336, line: 148, baseType: !4685, size: 64, offset: 704)
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4686, size: 64)
!4686 = !DISubroutineType(types: !4687)
!4687 = !{!32, !1492, !771}
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !4638, file: !1336, line: 149, baseType: !4689, size: 64, offset: 768)
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4690, size: 64)
!4690 = !DISubroutineType(types: !4691)
!4691 = !{!1338, !1338, !4692}
!4692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4693, size: 64)
!4693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1546, file: !1317, line: 1500, baseType: !32, size: 32, offset: 7552)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1546, file: !1317, line: 1502, baseType: !4696, size: 448, offset: 7616)
!4696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !4335, line: 60, size: 448, elements: !4697)
!4697 = !{!4698, !4703, !4704, !4705, !4706, !4707, !4708}
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !4696, file: !4335, line: 61, baseType: !4699, size: 64)
!4699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4700, size: 64)
!4700 = !DISubroutineType(types: !4701)
!4701 = !{!312, !4702, !4333}
!4702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4696, size: 64)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !4696, file: !4335, line: 63, baseType: !4699, size: 64, offset: 64)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !4696, file: !4335, line: 66, baseType: !998, size: 64, offset: 128)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !4696, file: !4335, line: 67, baseType: !32, size: 32, offset: 192)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4696, file: !4335, line: 68, baseType: !7, size: 32, offset: 224)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4696, file: !4335, line: 71, baseType: !284, size: 128, offset: 256)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !4696, file: !4335, line: 77, baseType: !4709, size: 64, offset: 384)
!4709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1546, file: !1317, line: 1505, baseType: !371, size: 64, offset: 8064)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1546, file: !1317, line: 1508, baseType: !371, size: 64, offset: 8128)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1546, file: !1317, line: 1511, baseType: !32, size: 32, offset: 8192)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1546, file: !1317, line: 1514, baseType: !2024, size: 32, offset: 8224)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1546, file: !1317, line: 1517, baseType: !4715, size: 64, offset: 8256)
!4715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4716, size: 64)
!4716 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2829, line: 18, flags: DIFlagFwdDecl)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1546, file: !1317, line: 1518, baseType: !1580, size: 64, offset: 8320)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1546, file: !1317, line: 1525, baseType: !2780, size: 64, offset: 8384)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1546, file: !1317, line: 1532, baseType: !4720, size: 64, offset: 8448)
!4720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4721, line: 52, size: 64, elements: !4722)
!4721 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4722 = !{!4723}
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4720, file: !4721, line: 53, baseType: !4724, size: 64)
!4724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4725, size: 64)
!4725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4721, line: 40, size: 256, elements: !4726)
!4726 = !{!4727, !4728, !4733}
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4725, file: !4721, line: 42, baseType: !1669)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4725, file: !4721, line: 44, baseType: !4729, size: 192)
!4729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4721, line: 28, size: 192, elements: !4730)
!4730 = !{!4731, !4732}
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4729, file: !4721, line: 29, baseType: !284, size: 128)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4729, file: !4721, line: 31, baseType: !998, size: 64, offset: 128)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4725, file: !4721, line: 49, baseType: !998, size: 64, offset: 192)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1546, file: !1317, line: 1533, baseType: !4720, size: 64, offset: 8512)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1546, file: !1317, line: 1534, baseType: !299, size: 128, align: 64, offset: 8576)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1546, file: !1317, line: 1535, baseType: !2828, size: 256, offset: 8704)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1546, file: !1317, line: 1537, baseType: !1664, size: 192, offset: 8960)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1546, file: !1317, line: 1542, baseType: !32, size: 32, offset: 9152)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1546, file: !1317, line: 1545, baseType: !1669, offset: 9184)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1546, file: !1317, line: 1546, baseType: !284, size: 128, offset: 9216)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1546, file: !1317, line: 1548, baseType: !1669, offset: 9344)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1546, file: !1317, line: 1549, baseType: !284, size: 128, offset: 9344)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1376, file: !1317, line: 624, baseType: !1731, size: 64, offset: 256)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1376, file: !1317, line: 631, baseType: !312, size: 64, offset: 320)
!4745 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 639, baseType: !4746, size: 32, offset: 384)
!4746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 639, size: 32, elements: !4747)
!4747 = !{!4748, !4750}
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4746, file: !1317, line: 640, baseType: !4749, size: 32)
!4749 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4746, file: !1317, line: 641, baseType: !7, size: 32)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1376, file: !1317, line: 643, baseType: !1458, size: 32, offset: 416)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1376, file: !1317, line: 644, baseType: !1476, size: 64, offset: 448)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1376, file: !1317, line: 645, baseType: !1479, size: 128, offset: 512)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1376, file: !1317, line: 646, baseType: !1479, size: 128, offset: 640)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1376, file: !1317, line: 647, baseType: !1479, size: 128, offset: 768)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1376, file: !1317, line: 648, baseType: !1669, offset: 896)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1376, file: !1317, line: 649, baseType: !476, size: 16, offset: 896)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1376, file: !1317, line: 650, baseType: !794, size: 8, offset: 912)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1376, file: !1317, line: 651, baseType: !794, size: 8, offset: 920)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1376, file: !1317, line: 652, baseType: !4513, size: 64, offset: 960)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1376, file: !1317, line: 659, baseType: !312, size: 64, offset: 1024)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1376, file: !1317, line: 660, baseType: !1754, size: 256, offset: 1088)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1376, file: !1317, line: 662, baseType: !312, size: 64, offset: 1344)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1376, file: !1317, line: 663, baseType: !312, size: 64, offset: 1408)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1376, file: !1317, line: 665, baseType: !276, size: 128, offset: 1472)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1376, file: !1317, line: 666, baseType: !284, size: 128, offset: 1600)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1376, file: !1317, line: 675, baseType: !284, size: 128, offset: 1728)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1376, file: !1317, line: 676, baseType: !284, size: 128, offset: 1856)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1376, file: !1317, line: 677, baseType: !284, size: 128, offset: 1984)
!4770 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 678, baseType: !4771, size: 128, offset: 2112)
!4771 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 678, size: 128, elements: !4772)
!4772 = !{!4773, !4774}
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4771, file: !1317, line: 679, baseType: !1580, size: 64)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4771, file: !1317, line: 680, baseType: !299, size: 128, align: 64)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1376, file: !1317, line: 682, baseType: !373, size: 64, offset: 2240)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1376, file: !1317, line: 683, baseType: !373, size: 64, offset: 2304)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1376, file: !1317, line: 684, baseType: !383, size: 32, offset: 2368)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1376, file: !1317, line: 685, baseType: !383, size: 32, offset: 2400)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1376, file: !1317, line: 686, baseType: !383, size: 32, offset: 2432)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1376, file: !1317, line: 688, baseType: !383, size: 32, offset: 2464)
!4781 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 690, baseType: !4782, size: 64, offset: 2496)
!4782 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 690, size: 64, elements: !4783)
!4783 = !{!4784, !4989}
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4782, file: !1317, line: 691, baseType: !4785, size: 64)
!4785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4786, size: 64)
!4786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4787)
!4787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !1317, line: 1822, size: 2048, elements: !4788)
!4788 = !{!4789, !4790, !4794, !4798, !4802, !4803, !4804, !4808, !4821, !4822, !4829, !4833, !4834, !4838, !4839, !4843, !4848, !4849, !4853, !4857, !4949, !4953, !4954, !4958, !4959, !4963, !4967, !4972, !4976, !4980, !4984, !4988}
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4787, file: !1317, line: 1823, baseType: !980, size: 64)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4787, file: !1317, line: 1824, baseType: !4791, size: 64, offset: 64)
!4791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4792, size: 64)
!4792 = !DISubroutineType(types: !4793)
!4793 = !{!1476, !1315, !1476, !32}
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4787, file: !1317, line: 1825, baseType: !4795, size: 64, offset: 128)
!4795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4796, size: 64)
!4796 = !DISubroutineType(types: !4797)
!4797 = !{!1521, !1315, !1038, !1039, !1693}
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4787, file: !1317, line: 1826, baseType: !4799, size: 64, offset: 192)
!4799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4800, size: 64)
!4800 = !DISubroutineType(types: !4801)
!4801 = !{!1521, !1315, !292, !1039, !1693}
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4787, file: !1317, line: 1827, baseType: !1824, size: 64, offset: 256)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4787, file: !1317, line: 1828, baseType: !1824, size: 64, offset: 320)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4787, file: !1317, line: 1829, baseType: !4805, size: 64, offset: 384)
!4805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4806, size: 64)
!4806 = !DISubroutineType(types: !4807)
!4807 = !{!32, !1827, !771}
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4787, file: !1317, line: 1830, baseType: !4809, size: 64, offset: 448)
!4809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4810, size: 64)
!4810 = !DISubroutineType(types: !4811)
!4811 = !{!32, !1315, !4812}
!4812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4813, size: 64)
!4813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !1317, line: 1776, size: 128, elements: !4814)
!4814 = !{!4815, !4820}
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4813, file: !1317, line: 1777, baseType: !4816, size: 64)
!4816 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !1317, line: 1773, baseType: !4817)
!4817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4818, size: 64)
!4818 = !DISubroutineType(types: !4819)
!4819 = !{!32, !4812, !292, !32, !1476, !331, !7}
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4813, file: !1317, line: 1778, baseType: !1476, size: 64, offset: 64)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4787, file: !1317, line: 1831, baseType: !4809, size: 64, offset: 512)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4787, file: !1317, line: 1832, baseType: !4823, size: 64, offset: 576)
!4823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4824, size: 64)
!4824 = !DISubroutineType(types: !4825)
!4825 = !{!4826, !1315, !4827}
!4826 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !525, line: 52, baseType: !7)
!4827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4828, size: 64)
!4828 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1317, line: 56, flags: DIFlagFwdDecl)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4787, file: !1317, line: 1833, baseType: !4830, size: 64, offset: 640)
!4830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4831, size: 64)
!4831 = !DISubroutineType(types: !4832)
!4832 = !{!998, !1315, !7, !312}
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4787, file: !1317, line: 1834, baseType: !4830, size: 64, offset: 704)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4787, file: !1317, line: 1835, baseType: !4835, size: 64, offset: 768)
!4835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 64)
!4836 = !DISubroutineType(types: !4837)
!4837 = !{!32, !1315, !2097}
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4787, file: !1317, line: 1836, baseType: !312, size: 64, offset: 832)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4787, file: !1317, line: 1837, baseType: !4840, size: 64, offset: 896)
!4840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4841, size: 64)
!4841 = !DISubroutineType(types: !4842)
!4842 = !{!32, !1375, !1315}
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4787, file: !1317, line: 1838, baseType: !4844, size: 64, offset: 960)
!4844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4845, size: 64)
!4845 = !DISubroutineType(types: !4846)
!4846 = !{!32, !1315, !4847}
!4847 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !1317, line: 1007, baseType: !591)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4787, file: !1317, line: 1839, baseType: !4840, size: 64, offset: 1024)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4787, file: !1317, line: 1840, baseType: !4850, size: 64, offset: 1088)
!4850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4851, size: 64)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{!32, !1315, !1476, !1476, !32}
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4787, file: !1317, line: 1841, baseType: !4854, size: 64, offset: 1152)
!4854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4855, size: 64)
!4855 = !DISubroutineType(types: !4856)
!4856 = !{!32, !32, !1315, !32}
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4787, file: !1317, line: 1842, baseType: !4858, size: 64, offset: 1216)
!4858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4859, size: 64)
!4859 = !DISubroutineType(types: !4860)
!4860 = !{!32, !1315, !32, !4861}
!4861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4862, size: 64)
!4862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !1317, line: 1062, size: 1664, elements: !4863)
!4863 = !{!4864, !4865, !4866, !4867, !4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4894, !4925}
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4862, file: !1317, line: 1063, baseType: !4861, size: 64)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4862, file: !1317, line: 1064, baseType: !284, size: 128, offset: 64)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4862, file: !1317, line: 1065, baseType: !276, size: 128, offset: 192)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4862, file: !1317, line: 1066, baseType: !284, size: 128, offset: 320)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4862, file: !1317, line: 1069, baseType: !284, size: 128, offset: 448)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4862, file: !1317, line: 1072, baseType: !4847, size: 64, offset: 576)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4862, file: !1317, line: 1073, baseType: !7, size: 32, offset: 640)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4862, file: !1317, line: 1074, baseType: !482, size: 8, offset: 672)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4862, file: !1317, line: 1075, baseType: !7, size: 32, offset: 704)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4862, file: !1317, line: 1076, baseType: !32, size: 32, offset: 736)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4862, file: !1317, line: 1077, baseType: !1888, size: 128, offset: 768)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4862, file: !1317, line: 1078, baseType: !1315, size: 64, offset: 896)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4862, file: !1317, line: 1079, baseType: !1476, size: 64, offset: 960)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4862, file: !1317, line: 1080, baseType: !1476, size: 64, offset: 1024)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4862, file: !1317, line: 1082, baseType: !1907, size: 64, offset: 1088)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4862, file: !1317, line: 1084, baseType: !312, size: 64, offset: 1152)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4862, file: !1317, line: 1085, baseType: !312, size: 64, offset: 1216)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4862, file: !1317, line: 1087, baseType: !4882, size: 64, offset: 1280)
!4882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4883, size: 64)
!4883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4884)
!4884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !1317, line: 1011, size: 128, elements: !4885)
!4885 = !{!4886, !4890}
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4884, file: !1317, line: 1012, baseType: !4887, size: 64)
!4887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4888, size: 64)
!4888 = !DISubroutineType(types: !4889)
!4889 = !{null, !4861, !4861}
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4884, file: !1317, line: 1013, baseType: !4891, size: 64, offset: 64)
!4891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4892, size: 64)
!4892 = !DISubroutineType(types: !4893)
!4893 = !{null, !4861}
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4862, file: !1317, line: 1088, baseType: !4895, size: 64, offset: 1344)
!4895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4896, size: 64)
!4896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4897)
!4897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !1317, line: 1016, size: 512, elements: !4898)
!4898 = !{!4899, !4903, !4907, !4908, !4912, !4916, !4920, !4924}
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4897, file: !1317, line: 1017, baseType: !4900, size: 64)
!4900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4901, size: 64)
!4901 = !DISubroutineType(types: !4902)
!4902 = !{!4847, !4847}
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4897, file: !1317, line: 1018, baseType: !4904, size: 64, offset: 64)
!4904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4905, size: 64)
!4905 = !DISubroutineType(types: !4906)
!4906 = !{null, !4847}
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4897, file: !1317, line: 1019, baseType: !4891, size: 64, offset: 128)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4897, file: !1317, line: 1020, baseType: !4909, size: 64, offset: 192)
!4909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4910, size: 64)
!4910 = !DISubroutineType(types: !4911)
!4911 = !{!32, !4861, !32}
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4897, file: !1317, line: 1021, baseType: !4913, size: 64, offset: 256)
!4913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4914, size: 64)
!4914 = !DISubroutineType(types: !4915)
!4915 = !{!771, !4861}
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4897, file: !1317, line: 1022, baseType: !4917, size: 64, offset: 320)
!4917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4918, size: 64)
!4918 = !DISubroutineType(types: !4919)
!4919 = !{!32, !4861, !32, !287}
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4897, file: !1317, line: 1023, baseType: !4921, size: 64, offset: 384)
!4921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4922, size: 64)
!4922 = !DISubroutineType(types: !4923)
!4923 = !{null, !4861, !1801}
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4897, file: !1317, line: 1024, baseType: !4913, size: 64, offset: 448)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4862, file: !1317, line: 1097, baseType: !4926, size: 256, offset: 1408)
!4926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4862, file: !1317, line: 1089, size: 256, elements: !4927)
!4927 = !{!4928, !4937, !4943}
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4926, file: !1317, line: 1090, baseType: !4929, size: 256)
!4929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4930, line: 10, size: 256, elements: !4931)
!4930 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4931 = !{!4932, !4933, !4936}
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4929, file: !4930, line: 11, baseType: !987, size: 32)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4929, file: !4930, line: 12, baseType: !4934, size: 64, offset: 64)
!4934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4935, size: 64)
!4935 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4930, line: 5, flags: DIFlagFwdDecl)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4929, file: !4930, line: 13, baseType: !284, size: 128, offset: 128)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4926, file: !1317, line: 1091, baseType: !4938, size: 64)
!4938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4930, line: 17, size: 64, elements: !4939)
!4939 = !{!4940}
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4938, file: !4930, line: 18, baseType: !4941, size: 64)
!4941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4942, size: 64)
!4942 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4930, line: 16, flags: DIFlagFwdDecl)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4926, file: !1317, line: 1096, baseType: !4944, size: 192)
!4944 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4926, file: !1317, line: 1092, size: 192, elements: !4945)
!4945 = !{!4946, !4947, !4948}
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4944, file: !1317, line: 1093, baseType: !284, size: 128)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4944, file: !1317, line: 1094, baseType: !32, size: 32, offset: 128)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4944, file: !1317, line: 1095, baseType: !7, size: 32, offset: 160)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4787, file: !1317, line: 1843, baseType: !4950, size: 64, offset: 1280)
!4950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4951, size: 64)
!4951 = !DISubroutineType(types: !4952)
!4952 = !{!1521, !1315, !1718, !32, !1039, !1693, !32}
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4787, file: !1317, line: 1844, baseType: !2217, size: 64, offset: 1344)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4787, file: !1317, line: 1845, baseType: !4955, size: 64, offset: 1408)
!4955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4956, size: 64)
!4956 = !DISubroutineType(types: !4957)
!4957 = !{!32, !32}
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4787, file: !1317, line: 1846, baseType: !4858, size: 64, offset: 1472)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4787, file: !1317, line: 1847, baseType: !4960, size: 64, offset: 1536)
!4960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4961, size: 64)
!4961 = !DISubroutineType(types: !4962)
!4962 = !{!1521, !1882, !1315, !1693, !1039, !7}
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4787, file: !1317, line: 1848, baseType: !4964, size: 64, offset: 1600)
!4964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4965, size: 64)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{!1521, !1315, !1693, !1882, !1039, !7}
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4787, file: !1317, line: 1849, baseType: !4968, size: 64, offset: 1664)
!4968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4969, size: 64)
!4969 = !DISubroutineType(types: !4970)
!4970 = !{!32, !1315, !998, !4971, !1801}
!4971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4861, size: 64)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4787, file: !1317, line: 1850, baseType: !4973, size: 64, offset: 1728)
!4973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4974, size: 64)
!4974 = !DISubroutineType(types: !4975)
!4975 = !{!998, !1315, !32, !1476, !1476}
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4787, file: !1317, line: 1852, baseType: !4977, size: 64, offset: 1792)
!4977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4978, size: 64)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{null, !1652, !1315}
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4787, file: !1317, line: 1856, baseType: !4981, size: 64, offset: 1856)
!4981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4982, size: 64)
!4982 = !DISubroutineType(types: !4983)
!4983 = !{!1521, !1315, !1476, !1315, !1476, !1039, !7}
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4787, file: !1317, line: 1858, baseType: !4985, size: 64, offset: 1920)
!4985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4986, size: 64)
!4986 = !DISubroutineType(types: !4987)
!4987 = !{!1476, !1315, !1476, !1315, !1476, !1476, !7}
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4787, file: !1317, line: 1861, baseType: !4850, size: 64, offset: 1984)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4782, file: !1317, line: 692, baseType: !1606, size: 64)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1376, file: !1317, line: 694, baseType: !4991, size: 64, offset: 2560)
!4991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4992, size: 64)
!4992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !1317, line: 1100, size: 384, elements: !4993)
!4993 = !{!4994, !4995, !4996, !4997}
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4992, file: !1317, line: 1101, baseType: !1669)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4992, file: !1317, line: 1102, baseType: !284, size: 128)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4992, file: !1317, line: 1103, baseType: !284, size: 128, offset: 128)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4992, file: !1317, line: 1104, baseType: !284, size: 128, offset: 256)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1376, file: !1317, line: 695, baseType: !1732, size: 1216, align: 64, offset: 2624)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1376, file: !1317, line: 696, baseType: !284, size: 128, offset: 3840)
!5000 = !DIDerivedType(tag: DW_TAG_member, scope: !1376, file: !1317, line: 697, baseType: !5001, size: 64, offset: 3968)
!5001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1376, file: !1317, line: 697, size: 64, elements: !5002)
!5002 = !{!5003, !5004, !5005, !5008, !5009}
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !5001, file: !1317, line: 698, baseType: !1882, size: 64)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !5001, file: !1317, line: 699, baseType: !4538, size: 64)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !5001, file: !1317, line: 700, baseType: !5006, size: 64)
!5006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5007, size: 64)
!5007 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !1317, line: 700, flags: DIFlagFwdDecl)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !5001, file: !1317, line: 701, baseType: !1038, size: 64)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !5001, file: !1317, line: 702, baseType: !7, size: 32)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1376, file: !1317, line: 705, baseType: !493, size: 32, offset: 4032)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1376, file: !1317, line: 708, baseType: !493, size: 32, offset: 4064)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1376, file: !1317, line: 709, baseType: !4620, size: 64, offset: 4096)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1376, file: !1317, line: 720, baseType: !591, size: 64, offset: 4160)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1339, file: !1336, line: 98, baseType: !1031, size: 256, offset: 448)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1339, file: !1336, line: 101, baseType: !5016, size: 32, offset: 704)
!5016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !5017, line: 25, size: 32, elements: !5018)
!5017 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!5018 = !{!5019}
!5019 = !DIDerivedType(tag: DW_TAG_member, scope: !5016, file: !5017, line: 26, baseType: !5020, size: 32)
!5020 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5016, file: !5017, line: 26, size: 32, elements: !5021)
!5021 = !{!5022}
!5022 = !DIDerivedType(tag: DW_TAG_member, scope: !5020, file: !5017, line: 30, baseType: !5023, size: 32)
!5023 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5020, file: !5017, line: 30, size: 32, elements: !5024)
!5024 = !{!5025, !5026}
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5023, file: !5017, line: 31, baseType: !1669)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5023, file: !5017, line: 32, baseType: !32, size: 32)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1339, file: !1336, line: 102, baseType: !4636, size: 64, offset: 768)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1339, file: !1336, line: 103, baseType: !1545, size: 64, offset: 832)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1339, file: !1336, line: 104, baseType: !312, size: 64, offset: 896)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1339, file: !1336, line: 105, baseType: !591, size: 64, offset: 960)
!5031 = !DIDerivedType(tag: DW_TAG_member, scope: !1339, file: !1336, line: 107, baseType: !5032, size: 128, offset: 1024)
!5032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 107, size: 128, elements: !5033)
!5033 = !{!5034, !5035}
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !5032, file: !1336, line: 108, baseType: !284, size: 128)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !5032, file: !1336, line: 109, baseType: !5036, size: 64)
!5036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1339, file: !1336, line: 111, baseType: !284, size: 128, offset: 1152)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1339, file: !1336, line: 112, baseType: !284, size: 128, offset: 1280)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1339, file: !1336, line: 120, baseType: !5040, size: 128, offset: 1408)
!5040 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1339, file: !1336, line: 116, size: 128, elements: !5041)
!5041 = !{!5042, !5043, !5044}
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !5040, file: !1336, line: 117, baseType: !276, size: 128)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !5040, file: !1336, line: 118, baseType: !1353, size: 128)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !5040, file: !1336, line: 119, baseType: !299, size: 128, align: 64)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1316, file: !1317, line: 922, baseType: !1375, size: 64, offset: 256)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1316, file: !1317, line: 923, baseType: !4785, size: 64, offset: 320)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1316, file: !1317, line: 929, baseType: !1669, offset: 384)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1316, file: !1317, line: 930, baseType: !5049, size: 32, offset: 384)
!5049 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !1317, line: 296, baseType: !7, size: 32, elements: !5050)
!5050 = !{!5051, !5052, !5053, !5054, !5055, !5056}
!5051 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!5052 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!5053 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!5054 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!5055 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!5056 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1316, file: !1317, line: 931, baseType: !371, size: 64, offset: 448)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1316, file: !1317, line: 932, baseType: !7, size: 32, offset: 512)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1316, file: !1317, line: 933, baseType: !4632, size: 32, offset: 544)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1316, file: !1317, line: 934, baseType: !1664, size: 192, offset: 576)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1316, file: !1317, line: 935, baseType: !1476, size: 64, offset: 768)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1316, file: !1317, line: 936, baseType: !5063, size: 192, offset: 832)
!5063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !1317, line: 885, size: 192, elements: !5064)
!5064 = !{!5065, !5066, !5067, !5075, !5076, !5077}
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5063, file: !1317, line: 886, baseType: !1911)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !5063, file: !1317, line: 887, baseType: !2570, size: 64)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !5063, file: !1317, line: 888, baseType: !5068, size: 32, offset: 64)
!5068 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !2572, line: 9, baseType: !7, size: 32, elements: !5069)
!5069 = !{!5070, !5071, !5072, !5073, !5074}
!5070 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!5071 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!5072 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!5073 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!5074 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !5063, file: !1317, line: 889, baseType: !1382, size: 32, offset: 96)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !5063, file: !1317, line: 889, baseType: !1382, size: 32, offset: 128)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !5063, file: !1317, line: 890, baseType: !32, size: 32, offset: 160)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1316, file: !1317, line: 937, baseType: !2641, size: 64, offset: 1024)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1316, file: !1317, line: 938, baseType: !5080, size: 256, offset: 1088)
!5080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !1317, line: 896, size: 256, elements: !5081)
!5081 = !{!5082, !5083, !5084, !5085, !5086, !5087}
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5080, file: !1317, line: 897, baseType: !312, size: 64)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5080, file: !1317, line: 898, baseType: !7, size: 32, offset: 64)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !5080, file: !1317, line: 899, baseType: !7, size: 32, offset: 96)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !5080, file: !1317, line: 902, baseType: !7, size: 32, offset: 128)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !5080, file: !1317, line: 903, baseType: !7, size: 32, offset: 160)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !5080, file: !1317, line: 904, baseType: !1476, size: 64, offset: 192)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1316, file: !1317, line: 940, baseType: !331, size: 64, offset: 1344)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1316, file: !1317, line: 945, baseType: !591, size: 64, offset: 1408)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1316, file: !1317, line: 949, baseType: !284, size: 128, offset: 1472)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1316, file: !1317, line: 950, baseType: !284, size: 128, offset: 1600)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1316, file: !1317, line: 952, baseType: !1731, size: 64, offset: 1728)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1316, file: !1317, line: 953, baseType: !2024, size: 32, offset: 1792)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1316, file: !1317, line: 954, baseType: !2024, size: 32, offset: 1824)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !1105, file: !65, line: 59, baseType: !5096, size: 64, offset: 192)
!5096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5097, size: 64)
!5097 = !DISubroutineType(types: !5098)
!5098 = !{null, !1310}
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !1105, file: !65, line: 60, baseType: !5100, size: 64, offset: 256)
!5100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5101, size: 64)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{!32, !1310, !591, !591}
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !1105, file: !65, line: 61, baseType: !5096, size: 64, offset: 320)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !1105, file: !65, line: 62, baseType: !5105, size: 64, offset: 384)
!5105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5106, size: 64)
!5106 = !DISubroutineType(types: !5107)
!5107 = !{!591, !1310, !591}
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !1105, file: !65, line: 63, baseType: !5109, size: 64, offset: 448)
!5109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5110, size: 64)
!5110 = !DISubroutineType(types: !5111)
!5111 = !{!32, !1310, !5112, !1111}
!5112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5113, size: 64)
!5113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1112)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !1105, file: !65, line: 65, baseType: !5109, size: 64, offset: 512)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !1105, file: !65, line: 68, baseType: !5109, size: 64, offset: 576)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !1105, file: !65, line: 70, baseType: !5109, size: 64, offset: 640)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !1105, file: !65, line: 74, baseType: !5105, size: 64, offset: 704)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !1105, file: !65, line: 75, baseType: !5119, size: 64, offset: 768)
!5119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5120, size: 64)
!5120 = !DISubroutineType(types: !5121)
!5121 = !{!32, !1310, !591, !591, !331}
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !1105, file: !65, line: 76, baseType: !5123, size: 64, offset: 832)
!5123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5124, size: 64)
!5124 = !DISubroutineType(types: !5125)
!5125 = !{!32, !1310, !591}
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !1105, file: !65, line: 77, baseType: !5127, size: 64, offset: 896)
!5127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5128, size: 64)
!5128 = !DISubroutineType(types: !5129)
!5129 = !{!32, !1310, !591, !331}
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !1105, file: !65, line: 78, baseType: !5123, size: 64, offset: 960)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !1105, file: !65, line: 79, baseType: !5123, size: 64, offset: 1024)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !1105, file: !65, line: 82, baseType: !5133, size: 64, offset: 1088)
!5133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5134, size: 64)
!5134 = !DISubroutineType(types: !5135)
!5135 = !{!591, !1310, !1315, !32}
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !1105, file: !65, line: 84, baseType: !1415, size: 64, offset: 1152)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !1105, file: !65, line: 85, baseType: !5138, size: 64, offset: 1216)
!5138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5139, size: 64)
!5139 = !DISubroutineType(types: !5140)
!5140 = !{!32, !1310, !5141}
!5141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5142, size: 64)
!5142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !96, line: 65, size: 64, elements: !5143)
!5143 = !{!5144, !5145, !5146, !5147, !5148}
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !5142, file: !96, line: 66, baseType: !481, size: 8)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !5142, file: !96, line: 67, baseType: !481, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !5142, file: !96, line: 68, baseType: !481, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !5142, file: !96, line: 69, baseType: !2314, size: 16, offset: 16)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !5142, file: !96, line: 70, baseType: !942, size: 32, offset: 32)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !1105, file: !65, line: 86, baseType: !5150, size: 64, offset: 1280)
!5150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5151, size: 64)
!5151 = !DISubroutineType(types: !5152)
!5152 = !{!987, !591}
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !1105, file: !65, line: 87, baseType: !5154, size: 64, offset: 1344)
!5154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5155, size: 64)
!5155 = !DISubroutineType(types: !5156)
!5156 = !{null, !1310, !591, !1652}
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !1105, file: !65, line: 89, baseType: !5158, size: 64, offset: 1408)
!5158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5159, size: 64)
!5159 = !DISubroutineType(types: !5160)
!5160 = !{!32, !5161, !5163, !5166, !5166}
!5161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5162, size: 64)
!5162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!5163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5164, size: 64)
!5164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5165)
!5165 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !65, line: 32, flags: DIFlagFwdDecl)
!5166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5167, size: 64)
!5167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5168)
!5168 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !65, line: 33, flags: DIFlagFwdDecl)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !1105, file: !65, line: 95, baseType: !5170, size: 64, offset: 1472)
!5170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5171, size: 64)
!5171 = !DISubroutineType(types: !5172)
!5172 = !{!32, !1310, !5173}
!5173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5174, size: 64)
!5174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !65, line: 757, size: 4928, elements: !5175)
!5175 = !{!5176, !5177, !5178, !5179, !5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5197, !5198, !5199, !5242, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5256, !5257, !5276, !5277, !5278, !5287, !5289, !5290, !5291, !5292, !5293, !5295, !5296, !5311, !5313, !5319, !5325, !5333, !5334, !5335, !5336, !5337, !5338, !5346, !5353}
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5174, file: !65, line: 758, baseType: !373, size: 64)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !5174, file: !65, line: 759, baseType: !987, size: 32, offset: 64)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !5174, file: !65, line: 760, baseType: !987, size: 32, offset: 96)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !5174, file: !65, line: 761, baseType: !987, size: 32, offset: 128)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !5174, file: !65, line: 762, baseType: !987, size: 32, offset: 160)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !5174, file: !65, line: 763, baseType: !987, size: 32, offset: 192)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5174, file: !65, line: 764, baseType: !987, size: 32, offset: 224)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !5174, file: !65, line: 765, baseType: !987, size: 32, offset: 256)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !5174, file: !65, line: 766, baseType: !987, size: 32, offset: 288)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !5174, file: !65, line: 767, baseType: !987, size: 32, offset: 320)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !5174, file: !65, line: 768, baseType: !987, size: 32, offset: 352)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !5174, file: !65, line: 769, baseType: !987, size: 32, offset: 384)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !5174, file: !65, line: 770, baseType: !987, size: 32, offset: 416)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !5174, file: !65, line: 771, baseType: !5190, size: 64, offset: 448)
!5190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5191, size: 64)
!5191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5192)
!5192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !65, line: 751, size: 96, elements: !5193)
!5193 = !{!5194, !5195, !5196}
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5192, file: !65, line: 752, baseType: !987, size: 32)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !5192, file: !65, line: 753, baseType: !64, size: 32, offset: 32)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !5192, file: !65, line: 754, baseType: !987, size: 32, offset: 64)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !5174, file: !65, line: 772, baseType: !1664, size: 192, offset: 512)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !5174, file: !65, line: 773, baseType: !1088, size: 64, offset: 704)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !5174, file: !65, line: 774, baseType: !5200, size: 64, offset: 768)
!5200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5201, size: 64)
!5201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !65, line: 586, size: 2944, elements: !5202)
!5202 = !{!5203, !5204, !5205, !5206, !5207, !5219, !5220, !5222, !5223, !5224, !5225}
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !5201, file: !65, line: 588, baseType: !276, size: 128)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5201, file: !65, line: 590, baseType: !1664, size: 192, offset: 128)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5201, file: !65, line: 591, baseType: !568, size: 32, offset: 320)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5201, file: !65, line: 592, baseType: !331, size: 64, offset: 384)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5201, file: !65, line: 597, baseType: !5208, size: 256, offset: 448)
!5208 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5201, file: !65, line: 593, size: 256, elements: !5209)
!5209 = !{!5210, !5217, !5218}
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !5208, file: !65, line: 594, baseType: !5211, size: 112)
!5211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !65, line: 509, size: 112, elements: !5212)
!5212 = !{!5213, !5214, !5215}
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !5211, file: !65, line: 510, baseType: !794, size: 8)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !5211, file: !65, line: 511, baseType: !794, size: 8, offset: 8)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !5211, file: !65, line: 512, baseType: !5216, size: 96, offset: 16)
!5216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 96, elements: !4148)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5208, file: !65, line: 595, baseType: !591, size: 64, offset: 128)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !5208, file: !65, line: 596, baseType: !771, size: 8, offset: 192)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !5201, file: !65, line: 602, baseType: !1088, size: 64, offset: 704)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !5201, file: !65, line: 604, baseType: !5221, size: 192, offset: 768)
!5221 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1580, size: 192, elements: !1591)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !5201, file: !65, line: 606, baseType: !3396, size: 96, offset: 960)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !5201, file: !65, line: 608, baseType: !591, size: 64, offset: 1088)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !5201, file: !65, line: 609, baseType: !331, size: 64, offset: 1152)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5201, file: !65, line: 610, baseType: !5226, size: 1728, offset: 1216)
!5226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !65, line: 569, size: 1728, elements: !5227)
!5227 = !{!5228, !5229, !5230, !5234, !5235, !5241}
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5226, file: !65, line: 570, baseType: !312, size: 64)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !5226, file: !65, line: 571, baseType: !312, size: 64, offset: 64)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5226, file: !65, line: 572, baseType: !5231, size: 1024, offset: 128)
!5231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 1024, elements: !5232)
!5232 = !{!5233}
!5233 = !DISubrange(count: 128)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !5226, file: !65, line: 573, baseType: !284, size: 128, offset: 1152)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !5226, file: !65, line: 574, baseType: !5236, size: 384, offset: 1280)
!5236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !5237, line: 40, size: 384, elements: !5238)
!5237 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!5238 = !{!5239}
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5236, file: !5237, line: 41, baseType: !5240, size: 384)
!5240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !433, size: 384, elements: !2663)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5226, file: !65, line: 575, baseType: !771, size: 8, offset: 1664)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !5174, file: !65, line: 775, baseType: !95, size: 32, offset: 832)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !5174, file: !65, line: 776, baseType: !129, size: 32, offset: 864)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !5174, file: !65, line: 777, baseType: !771, size: 8, offset: 896)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !5174, file: !65, line: 778, baseType: !771, size: 8, offset: 904)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !5174, file: !65, line: 779, baseType: !771, size: 8, offset: 912)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !5174, file: !65, line: 780, baseType: !771, size: 8, offset: 920)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !5174, file: !65, line: 781, baseType: !771, size: 8, offset: 928)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !5174, file: !65, line: 782, baseType: !771, size: 8, offset: 936)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !5174, file: !65, line: 783, baseType: !170, size: 32, offset: 960)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !5174, file: !65, line: 784, baseType: !276, size: 128, offset: 1024)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !5174, file: !65, line: 786, baseType: !5166, size: 64, offset: 1152)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !5174, file: !65, line: 788, baseType: !292, size: 64, offset: 1216)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5174, file: !65, line: 789, baseType: !5255, size: 64, offset: 1280)
!5255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !5174, file: !65, line: 790, baseType: !591, size: 64, offset: 1344)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !5174, file: !65, line: 791, baseType: !5258, size: 64, offset: 1408)
!5258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5259, size: 64)
!5259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !65, line: 734, size: 384, elements: !5260)
!5260 = !{!5261, !5262, !5263, !5264, !5272, !5273, !5274, !5275}
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !5259, file: !65, line: 735, baseType: !591, size: 64)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !5259, file: !65, line: 736, baseType: !591, size: 64, offset: 64)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !5259, file: !65, line: 737, baseType: !591, size: 64, offset: 128)
!5264 = !DIDerivedType(tag: DW_TAG_member, scope: !5259, file: !65, line: 738, baseType: !5265, size: 128, offset: 192)
!5265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5259, file: !65, line: 738, size: 128, elements: !5266)
!5266 = !{!5267}
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !5265, file: !65, line: 742, baseType: !5268, size: 128)
!5268 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5265, file: !65, line: 739, size: 128, elements: !5269)
!5269 = !{!5270, !5271}
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !5268, file: !65, line: 740, baseType: !1310, size: 64)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5268, file: !65, line: 741, baseType: !987, size: 32, offset: 64)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !5259, file: !65, line: 744, baseType: !771, size: 8, offset: 320)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !5259, file: !65, line: 745, baseType: !794, size: 8, offset: 328)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !5259, file: !65, line: 746, baseType: !581, size: 16, offset: 336)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !5259, file: !65, line: 747, baseType: !987, size: 32, offset: 352)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !5174, file: !65, line: 792, baseType: !987, size: 32, offset: 1472)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !5174, file: !65, line: 793, baseType: !5226, size: 1728, offset: 1536)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5174, file: !65, line: 794, baseType: !5279, size: 64, offset: 3264)
!5279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5280, size: 64)
!5280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5281)
!5281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !65, line: 432, size: 64, elements: !5282)
!5282 = !{!5283}
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !5281, file: !65, line: 433, baseType: !5284, size: 64)
!5284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5285, size: 64)
!5285 = !DISubroutineType(types: !5286)
!5286 = !{!32, !1088, !5112, !1111}
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !5174, file: !65, line: 795, baseType: !5288, size: 64, offset: 3328)
!5288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !5174, file: !65, line: 796, baseType: !1664, size: 192, offset: 3392)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5174, file: !65, line: 797, baseType: !1088, size: 64, offset: 3584)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5174, file: !65, line: 798, baseType: !1952, size: 64, offset: 3648)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !5174, file: !65, line: 799, baseType: !331, size: 64, offset: 3712)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !5174, file: !65, line: 800, baseType: !5294, size: 128, offset: 3776)
!5294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1310, size: 128, elements: !2663)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5174, file: !65, line: 801, baseType: !267, size: 128, offset: 3904)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !5174, file: !65, line: 805, baseType: !5297, size: 64, offset: 4032)
!5297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5298, size: 64)
!5298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !65, line: 478, size: 576, elements: !5299)
!5299 = !{!5300, !5301, !5302, !5305, !5306, !5307, !5308, !5309, !5310}
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !5298, file: !65, line: 479, baseType: !1088, size: 64)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !5298, file: !65, line: 480, baseType: !290, size: 64, offset: 64)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !5298, file: !65, line: 481, baseType: !5303, size: 64, offset: 128)
!5303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5304, size: 64)
!5304 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !65, line: 209, flags: DIFlagFwdDecl)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !5298, file: !65, line: 482, baseType: !591, size: 64, offset: 192)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !5298, file: !65, line: 483, baseType: !284, size: 128, offset: 256)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !5298, file: !65, line: 484, baseType: !771, size: 8, offset: 384)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !5298, file: !65, line: 485, baseType: !771, size: 8, offset: 392)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !5298, file: !65, line: 486, baseType: !591, size: 64, offset: 448)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !5298, file: !65, line: 487, baseType: !987, size: 32, offset: 512)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !5174, file: !65, line: 806, baseType: !5312, size: 64, offset: 4096)
!5312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5165, size: 64)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !5174, file: !65, line: 807, baseType: !5314, size: 64, offset: 4160)
!5314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5315, size: 64)
!5315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !96, line: 4963, size: 64, elements: !5316)
!5316 = !{!5317, !5318}
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5315, file: !96, line: 4964, baseType: !493, size: 32)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5315, file: !96, line: 4965, baseType: !493, size: 32, offset: 32)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !5174, file: !65, line: 808, baseType: !5320, size: 64, offset: 4224)
!5320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5321, size: 64)
!5321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !65, line: 724, size: 32, elements: !5322)
!5322 = !{!5323, !5324}
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !5321, file: !65, line: 725, baseType: !581, size: 16)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !5321, file: !65, line: 726, baseType: !771, size: 8, offset: 16)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !5174, file: !65, line: 815, baseType: !5326, size: 64, offset: 4288)
!5326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5327, size: 64)
!5327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !96, line: 4971, size: 128, elements: !5328)
!5328 = !{!5329, !5330, !5331, !5332}
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !5327, file: !96, line: 4972, baseType: !493, size: 32)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !5327, file: !96, line: 4973, baseType: !493, size: 32, offset: 32)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !5327, file: !96, line: 4974, baseType: !493, size: 32, offset: 64)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !5327, file: !96, line: 4975, baseType: !493, size: 32, offset: 96)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !5174, file: !65, line: 823, baseType: !1801, size: 64, offset: 4352)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !5174, file: !65, line: 824, baseType: !987, size: 32, offset: 4416)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !5174, file: !65, line: 825, baseType: !987, size: 32, offset: 4448)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !5174, file: !65, line: 830, baseType: !987, size: 32, offset: 4480)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !5174, file: !65, line: 831, baseType: !987, size: 32, offset: 4512)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !5174, file: !65, line: 832, baseType: !5339, size: 64, offset: 4544)
!5339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5340, size: 64)
!5340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !5341, line: 17, size: 96, elements: !5342)
!5341 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!5342 = !{!5343, !5344, !5345}
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !5340, file: !5341, line: 18, baseType: !32, size: 32)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !5340, file: !5341, line: 18, baseType: !32, size: 32, offset: 32)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !5340, file: !5341, line: 18, baseType: !32, size: 32, offset: 64)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !5174, file: !65, line: 833, baseType: !5347, size: 64, offset: 4608)
!5347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5348, size: 64)
!5348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !65, line: 503, size: 128, align: 128, elements: !5349)
!5349 = !{!5350, !5351, !5352}
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !5348, file: !65, line: 504, baseType: !331, size: 64)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !5348, file: !65, line: 505, baseType: !331, size: 64, offset: 64)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5348, file: !65, line: 506, baseType: !3069, offset: 128)
!5353 = !DIDerivedType(tag: DW_TAG_member, scope: !5174, file: !65, line: 834, baseType: !5354, size: 256, offset: 4672)
!5354 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5174, file: !65, line: 834, size: 256, elements: !5355)
!5355 = !{!5356, !5357}
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5354, file: !65, line: 835, baseType: !2828, size: 256)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5354, file: !65, line: 836, baseType: !299, size: 128, align: 64)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !1105, file: !65, line: 96, baseType: !5359, size: 64, offset: 1536)
!5359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5360, size: 64)
!5360 = !DISubroutineType(types: !5361)
!5361 = !{null, !1310, !5173}
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !1105, file: !65, line: 97, baseType: !5363, size: 64, offset: 1600)
!5363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5364, size: 64)
!5364 = !DISubroutineType(types: !5365)
!5365 = !{null, !1310, !987, !1088, !1088}
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !1105, file: !65, line: 101, baseType: !5367, size: 64, offset: 1664)
!5367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5368, size: 64)
!5368 = !DISubroutineType(types: !5369)
!5369 = !{!32, !5161, !5370, !987}
!5370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !1105, file: !65, line: 103, baseType: !5372, size: 64, offset: 1728)
!5372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5373, size: 64)
!5373 = !DISubroutineType(types: !5374)
!5374 = !{!32, !5161, !331, !2515}
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !1105, file: !65, line: 105, baseType: !5376, size: 64, offset: 1792)
!5376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5377, size: 64)
!5377 = !DISubroutineType(types: !5378)
!5378 = !{!32, !1310, !2097}
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !1105, file: !65, line: 106, baseType: !5380, size: 64, offset: 1856)
!5380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5381, size: 64)
!5381 = !DISubroutineType(types: !5382)
!5382 = !{!4826, !1310, !1315, !4827}
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !1105, file: !65, line: 110, baseType: !5384, size: 64, offset: 1920)
!5384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5385, size: 64)
!5385 = !DISubroutineType(types: !5386)
!5386 = !{!32, !5387, !591, !987}
!5387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5388, size: 64)
!5388 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !65, line: 38, flags: DIFlagFwdDecl)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !1105, file: !65, line: 112, baseType: !5390, size: 64, offset: 1984)
!5390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5391, size: 64)
!5391 = !DISubroutineType(types: !5392)
!5392 = !{null, !5387, !591, !987}
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !1105, file: !65, line: 114, baseType: !5394, size: 64, offset: 2048)
!5394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5395, size: 64)
!5395 = !DISubroutineType(types: !5396)
!5396 = !{!5397, !591}
!5397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5398, size: 64)
!5398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5399, size: 64)
!5399 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !65, line: 37, flags: DIFlagFwdDecl)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !1105, file: !65, line: 125, baseType: !5401, size: 64, offset: 2112)
!5401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5402, size: 64)
!5402 = !DISubroutineType(types: !5403)
!5403 = !{!771, !5161, !5161}
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !1105, file: !65, line: 129, baseType: !5405, size: 64, offset: 2176)
!5405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !292)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !1105, file: !65, line: 130, baseType: !1001, size: 64, offset: 2240)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !1105, file: !65, line: 133, baseType: !5408, size: 64, offset: 2304)
!5408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5409, size: 64)
!5409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5410)
!5410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !65, line: 46, size: 256, elements: !5411)
!5411 = !{!5412, !5413, !5420, !5422}
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !5410, file: !65, line: 47, baseType: !1685, size: 64)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !5410, file: !65, line: 48, baseType: !5414, size: 64, offset: 64)
!5414 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !65, line: 43, baseType: !5415)
!5415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5416, size: 64)
!5416 = !DISubroutineType(types: !5417)
!5417 = !{!32, !591, !5418}
!5418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5419, size: 64)
!5419 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !65, line: 36, flags: DIFlagFwdDecl)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !5410, file: !65, line: 49, baseType: !5421, size: 64, offset: 128)
!5421 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !65, line: 45, baseType: !1415)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !5410, file: !65, line: 50, baseType: !987, size: 32, offset: 192)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !1100, file: !65, line: 146, baseType: !1310, size: 64, offset: 64)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !1100, file: !65, line: 150, baseType: !177, size: 32, offset: 128)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !1100, file: !65, line: 151, baseType: !987, size: 32, offset: 160)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !1100, file: !65, line: 152, baseType: !987, size: 32, offset: 192)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !1100, file: !65, line: 153, baseType: !987, size: 32, offset: 224)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !1100, file: !65, line: 154, baseType: !987, size: 32, offset: 256)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !1100, file: !65, line: 155, baseType: !32, size: 32, offset: 288)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1100, file: !65, line: 156, baseType: !987, size: 32, offset: 320)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !1100, file: !65, line: 157, baseType: !32, size: 32, offset: 352)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !1100, file: !65, line: 158, baseType: !987, size: 32, offset: 384)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !1100, file: !65, line: 159, baseType: !987, size: 32, offset: 416)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !1100, file: !65, line: 160, baseType: !5312, size: 64, offset: 448)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !1100, file: !65, line: 161, baseType: !5436, size: 128, offset: 512)
!5436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !65, line: 136, size: 128, elements: !5437)
!5437 = !{!5438, !5439}
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5436, file: !65, line: 137, baseType: !987, size: 32)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5436, file: !65, line: 138, baseType: !1952, size: 64, offset: 64)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1100, file: !65, line: 162, baseType: !267, size: 128, offset: 640)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !1100, file: !65, line: 163, baseType: !987, size: 32, offset: 768)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !1100, file: !65, line: 164, baseType: !771, size: 8, offset: 800)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1100, file: !65, line: 165, baseType: !771, size: 8, offset: 808)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1100, file: !65, line: 171, baseType: !373, size: 64, align: 512, offset: 1024)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !1100, file: !65, line: 172, baseType: !373, size: 64, offset: 1088)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1100, file: !65, line: 173, baseType: !2828, size: 256, offset: 1152)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !1100, file: !65, line: 174, baseType: !1664, size: 192, offset: 1408)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !1100, file: !65, line: 175, baseType: !331, size: 64, offset: 1600)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !1097, file: !65, line: 224, baseType: !290, size: 64, offset: 2048)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !1097, file: !65, line: 225, baseType: !5451, size: 64, offset: 2112)
!5451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5452, size: 64)
!5452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5453)
!5453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !65, line: 212, size: 256, elements: !5454)
!5454 = !{!5455, !5459, !5460, !5464}
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !5453, file: !65, line: 213, baseType: !5456, size: 64)
!5456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5457, size: 64)
!5457 = !DISubroutineType(types: !5458)
!5458 = !{!32, !1096, !591, !591}
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !5453, file: !65, line: 215, baseType: !5456, size: 64, offset: 64)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !5453, file: !65, line: 217, baseType: !5461, size: 64, offset: 128)
!5461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5462, size: 64)
!5462 = !DISubroutineType(types: !5463)
!5463 = !{!32, !1096, !591, !591, !331}
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !5453, file: !65, line: 219, baseType: !5465, size: 64, offset: 192)
!5465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5466, size: 64)
!5466 = !DISubroutineType(types: !5467)
!5467 = !{!32, !1096, !591}
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !1097, file: !65, line: 226, baseType: !591, size: 64, offset: 2176)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !1097, file: !65, line: 227, baseType: !284, size: 128, offset: 2240)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !1081, file: !31, line: 911, baseType: !5471, size: 128)
!5471 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1081, file: !31, line: 908, size: 128, elements: !5472)
!5472 = !{!5473, !5476}
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !5471, file: !31, line: 909, baseType: !5474, size: 64)
!5474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5475, size: 64)
!5475 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !31, line: 909, flags: DIFlagFwdDecl)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !5471, file: !31, line: 910, baseType: !581, size: 16, offset: 64)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !398, file: !31, line: 1481, baseType: !5478, size: 64, offset: 4096)
!5478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5479, size: 64)
!5479 = !DISubroutineType(types: !5480)
!5480 = !{!32, !290, !32, !5481, !987}
!5481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5482, size: 64)
!5482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5483, size: 64)
!5483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !5484, line: 94, size: 256, elements: !5485)
!5484 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!5485 = !{!5486, !5487, !5488, !5489, !5490, !5491, !5496}
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5483, file: !5484, line: 95, baseType: !591, size: 64)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5483, file: !5484, line: 96, baseType: !581, size: 16, offset: 64)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !5483, file: !5484, line: 97, baseType: !581, size: 16, offset: 80)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !5483, file: !5484, line: 98, baseType: !987, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !5483, file: !5484, line: 99, baseType: !987, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !5483, file: !5484, line: 103, baseType: !5492, size: 64, offset: 128)
!5492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !5484, line: 50, size: 64, elements: !5493)
!5493 = !{!5494, !5495}
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5492, file: !5484, line: 51, baseType: !987, size: 32)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5492, file: !5484, line: 52, baseType: !987, size: 32, offset: 32)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !5483, file: !5484, line: 104, baseType: !290, size: 64, offset: 192)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !398, file: !31, line: 1484, baseType: !5498, size: 64, offset: 4160)
!5498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5499, size: 64)
!5499 = !DISubroutineType(types: !5500)
!5500 = !{!32, !290, !987, !987}
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !398, file: !31, line: 1486, baseType: !5502, size: 64, offset: 4224)
!5502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5503, size: 64)
!5503 = !DISubroutineType(types: !5504)
!5504 = !{!5505, !290}
!5505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5506, size: 64)
!5506 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !31, line: 1486, flags: DIFlagFwdDecl)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !398, file: !31, line: 1487, baseType: !5508, size: 64, offset: 4288)
!5508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5509, size: 64)
!5509 = !DISubroutineType(types: !5510)
!5510 = !{!32, !290, !5511, !32}
!5511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5512, size: 64)
!5512 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !31, line: 56, flags: DIFlagFwdDecl)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !398, file: !31, line: 1489, baseType: !5514, size: 64, offset: 4352)
!5514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5515, size: 64)
!5515 = !DISubroutineType(types: !5516)
!5516 = !{!290, !290}
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !264, file: !31, line: 1917, baseType: !5518, size: 64, offset: 4032)
!5518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5519, size: 64)
!5519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5520)
!5520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !251, line: 421, size: 3904, elements: !5521)
!5521 = !{!5522, !5523, !5543, !5544, !5555, !5567, !5571, !5575, !5579, !5580, !5581, !5598, !5599, !5611, !5612, !5642, !5643, !5659, !5663, !5672, !5683, !5687, !5700, !5704, !5708, !5718, !5719, !5720, !5721, !5725, !5726, !5828, !5832, !5842, !5846, !5847, !5848, !5852, !5860, !5864, !5868, !5884, !5888, !5900, !5904, !5905, !5920, !5932, !5933, !5949, !5950, !5964, !5968, !5972, !5973, !6012, !6018, !6029, !6030, !6031, !6032}
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !5520, file: !251, line: 422, baseType: !987, size: 32)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !5520, file: !251, line: 423, baseType: !5524, size: 64, offset: 64)
!5524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5525, size: 64)
!5525 = !DISubroutineType(types: !5526)
!5526 = !{null, !290, !5527}
!5527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5528, size: 64)
!5528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !209, line: 177, size: 1568, elements: !5529)
!5529 = !{!5530, !5531, !5532, !5533, !5534, !5535, !5536, !5538, !5539, !5540, !5541, !5542}
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5528, file: !209, line: 178, baseType: !493, size: 32)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5528, file: !209, line: 179, baseType: !4623, size: 256, offset: 32)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5528, file: !209, line: 180, baseType: !4623, size: 256, offset: 288)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !5528, file: !209, line: 181, baseType: !4623, size: 256, offset: 544)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !5528, file: !209, line: 182, baseType: !4623, size: 256, offset: 800)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !5528, file: !209, line: 183, baseType: !4623, size: 256, offset: 1056)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5528, file: !209, line: 184, baseType: !5537, size: 96, offset: 1312)
!5537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 96, elements: !4148)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !5528, file: !209, line: 185, baseType: !493, size: 32, offset: 1408)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !5528, file: !209, line: 186, baseType: !493, size: 32, offset: 1440)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !5528, file: !209, line: 187, baseType: !493, size: 32, offset: 1472)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !5528, file: !209, line: 188, baseType: !493, size: 32, offset: 1504)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !5528, file: !209, line: 189, baseType: !493, size: 32, offset: 1536)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !5520, file: !251, line: 424, baseType: !401, size: 64, offset: 128)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !5520, file: !251, line: 425, baseType: !5545, size: 64, offset: 192)
!5545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5546, size: 64)
!5546 = !DISubroutineType(types: !5547)
!5547 = !{null, !290, !5548, !591}
!5548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5549, size: 64)
!5549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !209, line: 310, size: 96, elements: !5550)
!5550 = !{!5551, !5552, !5553, !5554}
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5549, file: !209, line: 311, baseType: !493, size: 32)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5549, file: !209, line: 312, baseType: !493, size: 32, offset: 32)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5549, file: !209, line: 313, baseType: !493, size: 32, offset: 64)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5549, file: !209, line: 314, baseType: !480, offset: 96)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !5520, file: !251, line: 426, baseType: !5556, size: 64, offset: 256)
!5556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5557, size: 64)
!5557 = !DISubroutineType(types: !5558)
!5558 = !{null, !290, !5559}
!5559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5560, size: 64)
!5560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !209, line: 203, size: 160, elements: !5561)
!5561 = !{!5562, !5563, !5564, !5565}
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5560, file: !209, line: 204, baseType: !493, size: 32)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5560, file: !209, line: 205, baseType: !493, size: 32, offset: 32)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !5560, file: !209, line: 206, baseType: !493, size: 32, offset: 64)
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !5560, file: !209, line: 207, baseType: !5566, size: 48, offset: 96)
!5566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 48, elements: !999)
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !5520, file: !251, line: 427, baseType: !5568, size: 64, offset: 320)
!5568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5569, size: 64)
!5569 = !DISubroutineType(types: !5570)
!5570 = !{!32, !290, !5559}
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !5520, file: !251, line: 428, baseType: !5572, size: 64, offset: 384)
!5572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5573, size: 64)
!5573 = !DISubroutineType(types: !5574)
!5574 = !{!987, !290}
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !5520, file: !251, line: 429, baseType: !5576, size: 64, offset: 448)
!5576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5577, size: 64)
!5577 = !DISubroutineType(types: !5578)
!5578 = !{null, !290, !987}
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !5520, file: !251, line: 430, baseType: !401, size: 64, offset: 512)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !5520, file: !251, line: 431, baseType: !5572, size: 64, offset: 576)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !5520, file: !251, line: 432, baseType: !5582, size: 64, offset: 640)
!5582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5583, size: 64)
!5583 = !DISubroutineType(types: !5584)
!5584 = !{!32, !290, !5585}
!5585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5586, size: 64)
!5586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !251, line: 93, size: 64, elements: !5587)
!5587 = !{!5588, !5589}
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !5586, file: !251, line: 94, baseType: !208, size: 32)
!5589 = !DIDerivedType(tag: DW_TAG_member, scope: !5586, file: !251, line: 95, baseType: !5590, size: 32, offset: 32)
!5590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5586, file: !251, line: 95, size: 32, elements: !5591)
!5591 = !{!5592, !5593, !5594, !5595, !5596, !5597}
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5590, file: !251, line: 96, baseType: !221, size: 32)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !5590, file: !251, line: 97, baseType: !229, size: 32)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !5590, file: !251, line: 98, baseType: !235, size: 32)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !5590, file: !251, line: 99, baseType: !242, size: 32)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !5590, file: !251, line: 100, baseType: !246, size: 32)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !5590, file: !251, line: 101, baseType: !794, size: 8)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !5520, file: !251, line: 434, baseType: !401, size: 64, offset: 704)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !5520, file: !251, line: 435, baseType: !5600, size: 64, offset: 768)
!5600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5601, size: 64)
!5601 = !DISubroutineType(types: !5602)
!5602 = !{!32, !290, !5603, !793}
!5603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5604, size: 64)
!5604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !209, line: 335, size: 128, elements: !5605)
!5605 = !{!5606, !5607, !5608, !5609, !5610}
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5604, file: !209, line: 336, baseType: !493, size: 32)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5604, file: !209, line: 337, baseType: !493, size: 32, offset: 32)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5604, file: !209, line: 338, baseType: !493, size: 32, offset: 64)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5604, file: !209, line: 339, baseType: !493, size: 32, offset: 96)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5604, file: !209, line: 340, baseType: !480, offset: 128)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !5520, file: !251, line: 437, baseType: !5600, size: 64, offset: 832)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !5520, file: !251, line: 439, baseType: !5613, size: 64, offset: 896)
!5613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5614, size: 64)
!5614 = !DISubroutineType(types: !5615)
!5615 = !{!32, !290, !5616}
!5616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5617, size: 64)
!5617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !209, line: 462, size: 736, elements: !5618)
!5618 = !{!5619, !5620, !5621, !5622, !5623, !5624, !5625, !5626, !5627, !5628, !5629, !5630, !5631, !5632, !5633, !5634, !5635, !5636, !5637, !5638, !5639, !5640, !5641}
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5617, file: !209, line: 463, baseType: !493, size: 32)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !5617, file: !209, line: 464, baseType: !493, size: 32, offset: 32)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !5617, file: !209, line: 465, baseType: !493, size: 32, offset: 64)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !5617, file: !209, line: 466, baseType: !493, size: 32, offset: 96)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !5617, file: !209, line: 467, baseType: !493, size: 32, offset: 128)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !5617, file: !209, line: 468, baseType: !493, size: 32, offset: 160)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !5617, file: !209, line: 469, baseType: !493, size: 32, offset: 192)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !5617, file: !209, line: 470, baseType: !493, size: 32, offset: 224)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !5617, file: !209, line: 471, baseType: !493, size: 32, offset: 256)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !5617, file: !209, line: 472, baseType: !493, size: 32, offset: 288)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !5617, file: !209, line: 473, baseType: !493, size: 32, offset: 320)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !5617, file: !209, line: 474, baseType: !493, size: 32, offset: 352)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !5617, file: !209, line: 475, baseType: !493, size: 32, offset: 384)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !5617, file: !209, line: 476, baseType: !493, size: 32, offset: 416)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !5617, file: !209, line: 477, baseType: !493, size: 32, offset: 448)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !5617, file: !209, line: 478, baseType: !493, size: 32, offset: 480)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !5617, file: !209, line: 479, baseType: !493, size: 32, offset: 512)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !5617, file: !209, line: 480, baseType: !493, size: 32, offset: 544)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !5617, file: !209, line: 481, baseType: !493, size: 32, offset: 576)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !5617, file: !209, line: 482, baseType: !493, size: 32, offset: 608)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !5617, file: !209, line: 483, baseType: !493, size: 32, offset: 640)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !5617, file: !209, line: 484, baseType: !493, size: 32, offset: 672)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !5617, file: !209, line: 485, baseType: !493, size: 32, offset: 704)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !5520, file: !251, line: 440, baseType: !5613, size: 64, offset: 960)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !5520, file: !251, line: 441, baseType: !5644, size: 64, offset: 1024)
!5644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5645, size: 64)
!5645 = !DISubroutineType(types: !5646)
!5646 = !{null, !290, !5647}
!5647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5648, size: 64)
!5648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !209, line: 513, size: 288, elements: !5649)
!5649 = !{!5650, !5651, !5652, !5653, !5654, !5655, !5656, !5657, !5658}
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5648, file: !209, line: 514, baseType: !493, size: 32)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !5648, file: !209, line: 515, baseType: !493, size: 32, offset: 32)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !5648, file: !209, line: 516, baseType: !493, size: 32, offset: 64)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !5648, file: !209, line: 517, baseType: !493, size: 32, offset: 96)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !5648, file: !209, line: 518, baseType: !493, size: 32, offset: 128)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !5648, file: !209, line: 519, baseType: !493, size: 32, offset: 160)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !5648, file: !209, line: 520, baseType: !493, size: 32, offset: 192)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !5648, file: !209, line: 521, baseType: !493, size: 32, offset: 224)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !5648, file: !209, line: 522, baseType: !493, size: 32, offset: 256)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !5520, file: !251, line: 443, baseType: !5660, size: 64, offset: 1088)
!5660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5661, size: 64)
!5661 = !DISubroutineType(types: !5662)
!5662 = !{!32, !290, !5647}
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !5520, file: !251, line: 445, baseType: !5664, size: 64, offset: 1152)
!5664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5665, size: 64)
!5665 = !DISubroutineType(types: !5666)
!5666 = !{null, !290, !5667}
!5667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5668, size: 64)
!5668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !251, line: 260, size: 128, elements: !5669)
!5669 = !{!5670, !5671}
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !5668, file: !251, line: 261, baseType: !331, size: 64)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !5668, file: !251, line: 262, baseType: !331, size: 64, offset: 64)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !5520, file: !251, line: 447, baseType: !5673, size: 64, offset: 1216)
!5673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5674, size: 64)
!5674 = !DISubroutineType(types: !5675)
!5675 = !{null, !290, !5676}
!5676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5677, size: 64)
!5677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !209, line: 575, size: 128, elements: !5678)
!5678 = !{!5679, !5680, !5681, !5682}
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5677, file: !209, line: 576, baseType: !493, size: 32)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5677, file: !209, line: 577, baseType: !493, size: 32, offset: 32)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !5677, file: !209, line: 578, baseType: !493, size: 32, offset: 64)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !5677, file: !209, line: 579, baseType: !493, size: 32, offset: 96)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !5520, file: !251, line: 449, baseType: !5684, size: 64, offset: 1280)
!5684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5685, size: 64)
!5685 = !DISubroutineType(types: !5686)
!5686 = !{!32, !290, !5676}
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !5520, file: !251, line: 451, baseType: !5688, size: 64, offset: 1344)
!5688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5689, size: 64)
!5689 = !DISubroutineType(types: !5690)
!5690 = !{null, !290, !5691, !5370}
!5691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5692, size: 64)
!5692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !209, line: 770, size: 128, elements: !5693)
!5693 = !{!5694, !5695, !5696, !5697, !5698}
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5692, file: !209, line: 771, baseType: !493, size: 32)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5692, file: !209, line: 772, baseType: !493, size: 32, offset: 32)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5692, file: !209, line: 773, baseType: !493, size: 32, offset: 64)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5692, file: !209, line: 774, baseType: !493, size: 32, offset: 96)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5692, file: !209, line: 775, baseType: !5699, offset: 128)
!5699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, elements: !483)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !5520, file: !251, line: 452, baseType: !5701, size: 64, offset: 1408)
!5701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5702, size: 64)
!5702 = !DISubroutineType(types: !5703)
!5703 = !{null, !290, !987, !793}
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !5520, file: !251, line: 453, baseType: !5705, size: 64, offset: 1472)
!5705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5706, size: 64)
!5706 = !DISubroutineType(types: !5707)
!5707 = !{!32, !290, !250}
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !5520, file: !251, line: 454, baseType: !5709, size: 64, offset: 1536)
!5709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5710, size: 64)
!5710 = !DISubroutineType(types: !5711)
!5711 = !{null, !290, !5712, !5370}
!5712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5713, size: 64)
!5713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !209, line: 789, size: 64, elements: !5714)
!5714 = !{!5715, !5716, !5717}
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5713, file: !209, line: 790, baseType: !493, size: 32)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !5713, file: !209, line: 791, baseType: !493, size: 32, offset: 32)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5713, file: !209, line: 792, baseType: !5699, offset: 64)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !5520, file: !251, line: 456, baseType: !401, size: 64, offset: 1600)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5520, file: !251, line: 457, baseType: !405, size: 64, offset: 1664)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !5520, file: !251, line: 458, baseType: !5572, size: 64, offset: 1728)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !5520, file: !251, line: 459, baseType: !5722, size: 64, offset: 1792)
!5722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5723, size: 64)
!5723 = !DISubroutineType(types: !5724)
!5724 = !{!32, !290, !987}
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !5520, file: !251, line: 460, baseType: !722, size: 64, offset: 1856)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !5520, file: !251, line: 461, baseType: !5727, size: 64, offset: 1920)
!5727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5728, size: 64)
!5728 = !DISubroutineType(types: !5729)
!5729 = !{!32, !290, !5730, !2515}
!5730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5731, size: 64)
!5731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !209, line: 1088, size: 1536, elements: !5732)
!5732 = !{!5733, !5734, !5735, !5736, !5822, !5827}
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5731, file: !209, line: 1089, baseType: !493, size: 32)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !5731, file: !209, line: 1090, baseType: !493, size: 32, offset: 32)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5731, file: !209, line: 1091, baseType: !333, size: 64, offset: 64)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !5731, file: !209, line: 1092, baseType: !5737, size: 1344, offset: 128)
!5737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !209, line: 992, size: 1344, elements: !5738)
!5738 = !{!5739, !5740, !5808, !5818, !5819, !5820, !5821}
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !5737, file: !209, line: 993, baseType: !493, size: 32)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !5737, file: !209, line: 994, baseType: !5741, size: 416, offset: 32)
!5741 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !209, line: 939, size: 416, elements: !5742)
!5742 = !{!5743, !5751, !5752, !5753, !5760, !5761, !5770, !5778, !5779, !5780, !5787, !5788, !5796, !5804}
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !5741, file: !209, line: 940, baseType: !5744, size: 128)
!5744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !209, line: 845, size: 128, elements: !5745)
!5745 = !{!5746, !5747, !5748, !5749, !5750}
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5744, file: !209, line: 846, baseType: !3206, size: 32)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5744, file: !209, line: 847, baseType: !3206, size: 32, offset: 32)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !5744, file: !209, line: 848, baseType: !535, size: 16, offset: 64)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !5744, file: !209, line: 849, baseType: !535, size: 16, offset: 80)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5744, file: !209, line: 850, baseType: !481, size: 8, offset: 96)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !5741, file: !209, line: 941, baseType: !5744, size: 128)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !5741, file: !209, line: 942, baseType: !5744, size: 128)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !5741, file: !209, line: 943, baseType: !5754, size: 128)
!5754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !209, line: 862, size: 128, elements: !5755)
!5755 = !{!5756, !5757, !5758, !5759}
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5754, file: !209, line: 863, baseType: !3206, size: 32)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5754, file: !209, line: 864, baseType: !3206, size: 32, offset: 32)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !5754, file: !209, line: 865, baseType: !3206, size: 32, offset: 64)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5754, file: !209, line: 866, baseType: !481, size: 8, offset: 96)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !5741, file: !209, line: 944, baseType: !5754, size: 128)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !5741, file: !209, line: 945, baseType: !5762, size: 128)
!5762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !209, line: 880, size: 128, elements: !5763)
!5763 = !{!5764, !5765, !5766, !5767, !5768, !5769}
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !5762, file: !209, line: 881, baseType: !3206, size: 32)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !5762, file: !209, line: 882, baseType: !3206, size: 32, offset: 32)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !5762, file: !209, line: 883, baseType: !3206, size: 32, offset: 64)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !5762, file: !209, line: 884, baseType: !481, size: 8, offset: 96)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !5762, file: !209, line: 885, baseType: !481, size: 8, offset: 104)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !5762, file: !209, line: 886, baseType: !481, size: 8, offset: 112)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !5741, file: !209, line: 946, baseType: !5771, size: 320)
!5771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !209, line: 899, size: 320, elements: !5772)
!5772 = !{!5773, !5774, !5775, !5776, !5777}
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5771, file: !209, line: 900, baseType: !3227, size: 128)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5771, file: !209, line: 901, baseType: !3227, size: 128, offset: 128)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !5771, file: !209, line: 902, baseType: !535, size: 16, offset: 256)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !5771, file: !209, line: 903, baseType: !535, size: 16, offset: 272)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5771, file: !209, line: 904, baseType: !481, size: 8, offset: 288)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !5741, file: !209, line: 947, baseType: !5771, size: 320)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !5741, file: !209, line: 948, baseType: !5771, size: 320)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !5741, file: !209, line: 949, baseType: !5781, size: 320)
!5781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !209, line: 916, size: 320, elements: !5782)
!5782 = !{!5783, !5784, !5785, !5786}
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5781, file: !209, line: 917, baseType: !3227, size: 128)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5781, file: !209, line: 918, baseType: !3227, size: 128, offset: 128)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !5781, file: !209, line: 919, baseType: !3206, size: 32, offset: 256)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5781, file: !209, line: 920, baseType: !481, size: 8, offset: 288)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !5741, file: !209, line: 950, baseType: !5781, size: 320)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !5741, file: !209, line: 951, baseType: !5789, size: 320)
!5789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !209, line: 931, size: 320, elements: !5790)
!5790 = !{!5791, !5792, !5793, !5794, !5795}
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !5789, file: !209, line: 932, baseType: !3227, size: 128)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !5789, file: !209, line: 933, baseType: !3227, size: 128, offset: 128)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !5789, file: !209, line: 934, baseType: !3206, size: 32, offset: 256)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !5789, file: !209, line: 935, baseType: !481, size: 8, offset: 288)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !5789, file: !209, line: 936, baseType: !481, size: 8, offset: 296)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !5741, file: !209, line: 952, baseType: !5797, size: 112)
!5797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !5798, line: 164, size: 112, elements: !5799)
!5798 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!5799 = !{!5800, !5802, !5803}
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !5797, file: !5798, line: 165, baseType: !5801, size: 48)
!5801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !482, size: 48, elements: !999)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !5797, file: !5798, line: 166, baseType: !5801, size: 48, offset: 48)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !5797, file: !5798, line: 167, baseType: !535, size: 16, offset: 96)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !5741, file: !209, line: 953, baseType: !5805, size: 416)
!5805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 416, elements: !5806)
!5806 = !{!5807}
!5807 = !DISubrange(count: 52)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !5737, file: !209, line: 995, baseType: !5809, size: 160, offset: 448)
!5809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !209, line: 967, size: 160, elements: !5810)
!5810 = !{!5811, !5813, !5814, !5815, !5816}
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5809, file: !209, line: 968, baseType: !5812, size: 16)
!5812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 16, elements: !2663)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !5809, file: !209, line: 969, baseType: !5801, size: 48, offset: 16)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !5809, file: !209, line: 970, baseType: !535, size: 16, offset: 64)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !5809, file: !209, line: 971, baseType: !535, size: 16, offset: 80)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5809, file: !209, line: 972, baseType: !5817, size: 64, offset: 96)
!5817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3206, size: 64, elements: !2663)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !5737, file: !209, line: 996, baseType: !5741, size: 416, offset: 608)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !5737, file: !209, line: 997, baseType: !5809, size: 160, offset: 1024)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !5737, file: !209, line: 998, baseType: !333, size: 64, offset: 1216)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !5737, file: !209, line: 999, baseType: !493, size: 32, offset: 1280)
!5822 = !DIDerivedType(tag: DW_TAG_member, scope: !5731, file: !209, line: 1093, baseType: !5823, size: 32, offset: 1472)
!5823 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5731, file: !209, line: 1093, size: 32, elements: !5824)
!5824 = !{!5825, !5826}
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !5823, file: !209, line: 1094, baseType: !493, size: 32)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !5823, file: !209, line: 1095, baseType: !493, size: 32)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !5731, file: !209, line: 1097, baseType: !492, offset: 1504)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !5520, file: !251, line: 463, baseType: !5829, size: 64, offset: 1984)
!5829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5830, size: 64)
!5830 = !DISubroutineType(types: !5831)
!5831 = !{!32, !290, !5730}
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !5520, file: !251, line: 464, baseType: !5833, size: 64, offset: 2048)
!5833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5834, size: 64)
!5834 = !DISubroutineType(types: !5835)
!5835 = !{!32, !290, !5836}
!5836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5837, size: 64)
!5837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !209, line: 1217, size: 1088, elements: !5838)
!5838 = !{!5839, !5840, !5841}
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5837, file: !209, line: 1218, baseType: !493, size: 32)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !5837, file: !209, line: 1219, baseType: !493, size: 32, offset: 32)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5837, file: !209, line: 1220, baseType: !5231, size: 1024, offset: 64)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5520, file: !251, line: 465, baseType: !5843, size: 64, offset: 2112)
!5843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5844, size: 64)
!5844 = !DISubroutineType(types: !5845)
!5845 = !{!32, !290, !2515}
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !5520, file: !251, line: 466, baseType: !5572, size: 64, offset: 2176)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !5520, file: !251, line: 467, baseType: !5572, size: 64, offset: 2240)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !5520, file: !251, line: 468, baseType: !5849, size: 64, offset: 2304)
!5849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5850, size: 64)
!5850 = !DISubroutineType(types: !5851)
!5851 = !{!32, !290, !2515, !793, !793}
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !5520, file: !251, line: 470, baseType: !5853, size: 64, offset: 2368)
!5853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5854, size: 64)
!5854 = !DISubroutineType(types: !5855)
!5855 = !{!32, !290, !5856, !5858, !5859}
!5856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5857, size: 64)
!5857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !987)
!5858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5859, size: 64)
!5859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !794)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !5520, file: !251, line: 472, baseType: !5861, size: 64, offset: 2432)
!5861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5862, size: 64)
!5862 = !DISubroutineType(types: !5863)
!5863 = !{!32, !290, !2515, !793, !793, !987}
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !5520, file: !251, line: 474, baseType: !5865, size: 64, offset: 2496)
!5865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5866, size: 64)
!5866 = !DISubroutineType(types: !5867)
!5867 = !{!32, !290, !5856, !5858, !5859, !2515, !771}
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !5520, file: !251, line: 477, baseType: !5869, size: 64, offset: 2560)
!5869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5870, size: 64)
!5870 = !DISubroutineType(types: !5871)
!5871 = !{null, !290, !5872}
!5872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5873, size: 64)
!5873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !209, line: 541, size: 288, elements: !5874)
!5874 = !{!5875, !5876, !5877, !5878, !5879, !5880, !5881, !5882, !5883}
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5873, file: !209, line: 542, baseType: !493, size: 32)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !5873, file: !209, line: 543, baseType: !493, size: 32, offset: 32)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !5873, file: !209, line: 544, baseType: !493, size: 32, offset: 64)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !5873, file: !209, line: 545, baseType: !493, size: 32, offset: 96)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !5873, file: !209, line: 546, baseType: !493, size: 32, offset: 128)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !5873, file: !209, line: 547, baseType: !493, size: 32, offset: 160)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !5873, file: !209, line: 548, baseType: !493, size: 32, offset: 192)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !5873, file: !209, line: 549, baseType: !493, size: 32, offset: 224)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !5873, file: !209, line: 550, baseType: !493, size: 32, offset: 256)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !5520, file: !251, line: 478, baseType: !5885, size: 64, offset: 2624)
!5885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5886, size: 64)
!5886 = !DISubroutineType(types: !5887)
!5887 = !{!32, !290, !5872}
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !5520, file: !251, line: 479, baseType: !5889, size: 64, offset: 2688)
!5889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5890, size: 64)
!5890 = !DISubroutineType(types: !5891)
!5891 = !{!32, !290, !5892}
!5892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5893, size: 64)
!5893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !209, line: 1237, size: 128, elements: !5894)
!5894 = !{!5895, !5896, !5897, !5898, !5899}
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5893, file: !209, line: 1238, baseType: !493, size: 32)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5893, file: !209, line: 1239, baseType: !493, size: 32, offset: 32)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5893, file: !209, line: 1240, baseType: !493, size: 32, offset: 64)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5893, file: !209, line: 1241, baseType: !493, size: 32, offset: 96)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5893, file: !209, line: 1242, baseType: !480, offset: 128)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !5520, file: !251, line: 480, baseType: !5901, size: 64, offset: 2752)
!5901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5902, size: 64)
!5902 = !DISubroutineType(types: !5903)
!5903 = !{!32, !290, !5892, !591}
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !5520, file: !251, line: 482, baseType: !5889, size: 64, offset: 2816)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !5520, file: !251, line: 483, baseType: !5906, size: 64, offset: 2880)
!5906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5907, size: 64)
!5907 = !DISubroutineType(types: !5908)
!5908 = !{!32, !290, !5909}
!5909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5910, size: 64)
!5910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !209, line: 1317, size: 352, elements: !5911)
!5911 = !{!5912, !5913, !5914, !5915, !5916, !5918, !5919}
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5910, file: !209, line: 1318, baseType: !493, size: 32)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !5910, file: !209, line: 1319, baseType: !493, size: 32, offset: 32)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !5910, file: !209, line: 1320, baseType: !942, size: 32, offset: 64)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !5910, file: !209, line: 1321, baseType: !493, size: 32, offset: 96)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !5910, file: !209, line: 1322, baseType: !5917, size: 96, offset: 128)
!5917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 96, elements: !1591)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !5910, file: !209, line: 1323, baseType: !493, size: 32, offset: 224)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !5910, file: !209, line: 1324, baseType: !5917, size: 96, offset: 256)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !5520, file: !251, line: 484, baseType: !5921, size: 64, offset: 2944)
!5921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5922, size: 64)
!5922 = !DISubroutineType(types: !5923)
!5923 = !{!32, !290, !5924}
!5924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5925, size: 64)
!5925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !209, line: 382, size: 352, elements: !5926)
!5926 = !{!5927, !5928, !5929, !5930}
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5925, file: !209, line: 383, baseType: !493, size: 32)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5925, file: !209, line: 384, baseType: !493, size: 32, offset: 32)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !5925, file: !209, line: 385, baseType: !493, size: 32, offset: 64)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5925, file: !209, line: 386, baseType: !5931, size: 256, offset: 96)
!5931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 256, elements: !2432)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !5520, file: !251, line: 486, baseType: !5600, size: 64, offset: 3008)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !5520, file: !251, line: 488, baseType: !5934, size: 64, offset: 3072)
!5934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5935, size: 64)
!5935 = !DISubroutineType(types: !5936)
!5936 = !{!32, !290, !5937}
!5937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5938, size: 64)
!5938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !209, line: 360, size: 320, elements: !5939)
!5939 = !{!5940, !5941, !5942, !5943, !5944, !5945, !5946, !5947, !5948}
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5938, file: !209, line: 361, baseType: !493, size: 32)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5938, file: !209, line: 362, baseType: !493, size: 32, offset: 32)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !5938, file: !209, line: 363, baseType: !493, size: 32, offset: 64)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !5938, file: !209, line: 364, baseType: !493, size: 32, offset: 96)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !5938, file: !209, line: 365, baseType: !493, size: 32, offset: 128)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !5938, file: !209, line: 366, baseType: !493, size: 32, offset: 160)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !5938, file: !209, line: 367, baseType: !493, size: 32, offset: 192)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !5938, file: !209, line: 368, baseType: !493, size: 32, offset: 224)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5938, file: !209, line: 369, baseType: !2662, size: 64, offset: 256)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !5520, file: !251, line: 489, baseType: !5934, size: 64, offset: 3136)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !5520, file: !251, line: 490, baseType: !5951, size: 64, offset: 3200)
!5951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5952, size: 64)
!5952 = !DISubroutineType(types: !5953)
!5953 = !{!32, !290, !5954, !591}
!5954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5955, size: 64)
!5955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5956)
!5956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !209, line: 244, size: 128, elements: !5957)
!5957 = !{!5958, !5959, !5960, !5961, !5962}
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5956, file: !209, line: 245, baseType: !493, size: 32)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5956, file: !209, line: 246, baseType: !493, size: 32, offset: 32)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !5956, file: !209, line: 247, baseType: !493, size: 32, offset: 64)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5956, file: !209, line: 248, baseType: !493, size: 32, offset: 96)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5956, file: !209, line: 249, baseType: !5963, offset: 128)
!5963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !591, elements: !483)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !5520, file: !251, line: 492, baseType: !5965, size: 64, offset: 3264)
!5965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5966, size: 64)
!5966 = !DISubroutineType(types: !5967)
!5967 = !{!32, !290, !5954, !3256}
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !5520, file: !251, line: 494, baseType: !5969, size: 64, offset: 3328)
!5969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5970, size: 64)
!5970 = !DISubroutineType(types: !5971)
!5971 = !{!32, !290, !987, !5616}
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !5520, file: !251, line: 496, baseType: !5969, size: 64, offset: 3392)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !5520, file: !251, line: 498, baseType: !5974, size: 64, offset: 3456)
!5974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5975, size: 64)
!5975 = !DISubroutineType(types: !5976)
!5976 = !{!32, !290, !5977}
!5977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5978, size: 64)
!5978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !251, line: 124, size: 768, elements: !5979)
!5979 = !{!5980, !6005}
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5978, file: !251, line: 125, baseType: !5981, size: 384)
!5981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !209, line: 1996, size: 384, elements: !5982)
!5982 = !{!5983, !5984, !5985, !5986, !5987, !5988, !5989, !5990, !5991, !5992, !5995, !5996, !5997, !5998, !6000, !6004}
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !5981, file: !209, line: 1997, baseType: !493, size: 32)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !5981, file: !209, line: 1998, baseType: !493, size: 32, offset: 32)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !5981, file: !209, line: 1999, baseType: !481, size: 8, offset: 64)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5981, file: !209, line: 2000, baseType: !481, size: 8, offset: 72)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !5981, file: !209, line: 2001, baseType: !481, size: 8, offset: 80)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !5981, file: !209, line: 2002, baseType: !481, size: 8, offset: 88)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !5981, file: !209, line: 2003, baseType: !481, size: 8, offset: 96)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !5981, file: !209, line: 2004, baseType: !481, size: 8, offset: 104)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !5981, file: !209, line: 2005, baseType: !481, size: 8, offset: 112)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !5981, file: !209, line: 2006, baseType: !5993, size: 8, offset: 120)
!5993 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !334, line: 20, baseType: !5994)
!5994 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !5981, file: !209, line: 2007, baseType: !481, size: 8, offset: 128)
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !5981, file: !209, line: 2008, baseType: !481, size: 8, offset: 136)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !5981, file: !209, line: 2009, baseType: !481, size: 8, offset: 144)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !5981, file: !209, line: 2010, baseType: !5999, size: 8, offset: 152)
!5999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 8, elements: !2471)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5981, file: !209, line: 2011, baseType: !6001, size: 224, offset: 160)
!6001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 224, elements: !6002)
!6002 = !{!6003}
!6003 = !DISubrange(count: 7)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !5981, file: !209, line: 2012, baseType: !492, offset: 384)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !5978, file: !251, line: 130, baseType: !6006, size: 384, offset: 384)
!6006 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5978, file: !251, line: 126, size: 384, elements: !6007)
!6007 = !{!6008, !6010, !6011}
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !6006, file: !251, line: 127, baseType: !6009, size: 128)
!6009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 128, elements: !2663)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !6006, file: !251, line: 128, baseType: !6009, size: 128, offset: 128)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !6006, file: !251, line: 129, baseType: !6009, size: 128, offset: 256)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !5520, file: !251, line: 500, baseType: !6013, size: 64, offset: 3520)
!6013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6014, size: 64)
!6014 = !DISubroutineType(types: !6015)
!6015 = !{!32, !290, !6016}
!6016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6017, size: 64)
!6017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5978)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !5520, file: !251, line: 502, baseType: !6019, size: 64, offset: 3584)
!6019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6020, size: 64)
!6020 = !DISubroutineType(types: !6021)
!6021 = !{!32, !290, !6022}
!6022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6023, size: 64)
!6023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !209, line: 1389, size: 128, elements: !6024)
!6024 = !{!6025, !6026, !6027, !6028}
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !6023, file: !209, line: 1390, baseType: !493, size: 32)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !6023, file: !209, line: 1392, baseType: !493, size: 32, offset: 32)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !6023, file: !209, line: 1393, baseType: !493, size: 32, offset: 64)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6023, file: !209, line: 1394, baseType: !493, size: 32, offset: 96)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !5520, file: !251, line: 504, baseType: !6019, size: 64, offset: 3648)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !5520, file: !251, line: 506, baseType: !5709, size: 64, offset: 3712)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !5520, file: !251, line: 508, baseType: !5951, size: 64, offset: 3776)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !5520, file: !251, line: 510, baseType: !5965, size: 64, offset: 3840)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !264, file: !31, line: 1922, baseType: !6034, size: 64, offset: 4096)
!6034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6035, size: 64)
!6035 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6036)
!6036 = !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !31, line: 1922, flags: DIFlagFwdDecl)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !264, file: !31, line: 1933, baseType: !6038, size: 64, offset: 4160)
!6038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6039, size: 64)
!6039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6040)
!6040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !31, line: 270, size: 384, elements: !6041)
!6041 = !{!6042, !6046, !6052, !6065, !6069, !6073}
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !6040, file: !31, line: 271, baseType: !6043, size: 64)
!6043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6044, size: 64)
!6044 = !DISubroutineType(types: !6045)
!6045 = !{!32, !415, !290, !476, !3256, !3256, !7}
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !6040, file: !31, line: 274, baseType: !6047, size: 64, offset: 64)
!6047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6048, size: 64)
!6048 = !DISubroutineType(types: !6049)
!6049 = !{!32, !6050, !564}
!6050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6051, size: 64)
!6051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !416)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !6040, file: !31, line: 275, baseType: !6053, size: 64, offset: 128)
!6053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6054, size: 64)
!6054 = !DISubroutineType(types: !6055)
!6055 = !{!32, !6056, !6058, !535}
!6056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6057, size: 64)
!6057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!6058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6059, size: 64)
!6059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !31, line: 244, size: 832, elements: !6060)
!6060 = !{!6061, !6062, !6063}
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !6059, file: !31, line: 245, baseType: !7, size: 32)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !6059, file: !31, line: 246, baseType: !3323, size: 32, offset: 32)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !6059, file: !31, line: 254, baseType: !6064, size: 768, offset: 64)
!6064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 768, elements: !4148)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !6040, file: !31, line: 276, baseType: !6066, size: 64, offset: 192)
!6066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6067, size: 64)
!6067 = !DISubroutineType(types: !6068)
!6068 = !{null, !6058, !773, !946}
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !6040, file: !31, line: 279, baseType: !6070, size: 64, offset: 256)
!6070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6071, size: 64)
!6071 = !DISubroutineType(types: !6072)
!6072 = !{!771, !292, !7}
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !6040, file: !31, line: 280, baseType: !6074, size: 64, offset: 320)
!6074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6075, size: 64)
!6075 = !DISubroutineType(types: !6076)
!6076 = !{!535, !6050}
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !264, file: !31, line: 1935, baseType: !7, size: 32, offset: 4224)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !264, file: !31, line: 1936, baseType: !7, size: 32, offset: 4256)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !264, file: !31, line: 1938, baseType: !476, size: 16, offset: 4288)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !264, file: !31, line: 1939, baseType: !476, size: 16, offset: 4304)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !264, file: !31, line: 1941, baseType: !482, size: 8, offset: 4320)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !264, file: !31, line: 1942, baseType: !482, size: 8, offset: 4328)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !264, file: !31, line: 1944, baseType: !482, size: 8, offset: 4336)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !264, file: !31, line: 1945, baseType: !482, size: 8, offset: 4344)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !264, file: !31, line: 1952, baseType: !7, size: 32, offset: 4352)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !264, file: !31, line: 1953, baseType: !7, size: 32, offset: 4384)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !264, file: !31, line: 1954, baseType: !7, size: 32, offset: 4416)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !264, file: !31, line: 1955, baseType: !476, size: 16, offset: 4448)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !264, file: !31, line: 1956, baseType: !476, size: 16, offset: 4464)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !264, file: !31, line: 1957, baseType: !482, size: 8, offset: 4480)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !264, file: !31, line: 1958, baseType: !482, size: 8, offset: 4488)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !264, file: !31, line: 1960, baseType: !476, size: 16, offset: 4496)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !264, file: !31, line: 1961, baseType: !476, size: 16, offset: 4512)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !264, file: !31, line: 1964, baseType: !1031, size: 256, offset: 4528)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !264, file: !31, line: 1965, baseType: !482, size: 8, offset: 4784)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !264, file: !31, line: 1966, baseType: !482, size: 8, offset: 4792)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !264, file: !31, line: 1967, baseType: !482, size: 8, offset: 4800)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !264, file: !31, line: 1968, baseType: !482, size: 8, offset: 4808)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !264, file: !31, line: 1970, baseType: !476, size: 16, offset: 4816)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !264, file: !31, line: 1971, baseType: !476, size: 16, offset: 4832)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !264, file: !31, line: 1972, baseType: !476, size: 16, offset: 4848)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !264, file: !31, line: 1973, baseType: !1669, offset: 4864)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !264, file: !31, line: 1975, baseType: !6104, size: 192, offset: 4864)
!6104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !31, line: 224, size: 192, elements: !6105)
!6105 = !{!6106, !6107}
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6104, file: !31, line: 225, baseType: !284, size: 128)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6104, file: !31, line: 226, baseType: !32, size: 32, offset: 128)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !264, file: !31, line: 1976, baseType: !6104, size: 192, offset: 5056)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !264, file: !31, line: 1977, baseType: !6104, size: 192, offset: 5248)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !264, file: !31, line: 1980, baseType: !6111, size: 64, offset: 5440)
!6111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6112, size: 64)
!6112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !6113, line: 192, size: 704, elements: !6114)
!6113 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!6114 = !{!6115, !6116, !6117, !6359}
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6112, file: !6113, line: 193, baseType: !284, size: 128)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !6112, file: !6113, line: 194, baseType: !1669, offset: 128)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6112, file: !6113, line: 195, baseType: !6118, size: 512, offset: 128)
!6118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !6113, line: 64, size: 512, elements: !6119)
!6119 = !{!6120, !6121, !6122, !6124, !6125, !6227, !6349, !6354, !6355, !6356, !6357, !6358}
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6118, file: !6113, line: 65, baseType: !292, size: 64)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6118, file: !6113, line: 66, baseType: !284, size: 128, offset: 64)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6118, file: !6113, line: 67, baseType: !6123, size: 64, offset: 192)
!6123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6118, size: 64)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !6118, file: !6113, line: 68, baseType: !6111, size: 64, offset: 256)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !6118, file: !6113, line: 69, baseType: !6126, size: 64, offset: 320)
!6126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6127, size: 64)
!6127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !6113, line: 138, size: 448, elements: !6128)
!6128 = !{!6129, !6133, !6152, !6154, !6187, !6219, !6223}
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6127, file: !6113, line: 139, baseType: !6130, size: 64)
!6130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6131, size: 64)
!6131 = !DISubroutineType(types: !6132)
!6132 = !{null, !6123}
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !6127, file: !6113, line: 140, baseType: !6134, size: 64, offset: 64)
!6134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6135, size: 64)
!6135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6136)
!6136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !6137, line: 230, size: 128, elements: !6138)
!6137 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!6138 = !{!6139, !6148}
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6136, file: !6137, line: 231, baseType: !6140, size: 64)
!6140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6141, size: 64)
!6141 = !DISubroutineType(types: !6142)
!6142 = !{!1521, !6123, !6143, !1038}
!6143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6144, size: 64)
!6144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !6137, line: 30, size: 128, elements: !6145)
!6145 = !{!6146, !6147}
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6144, file: !6137, line: 31, baseType: !292, size: 64)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6144, file: !6137, line: 32, baseType: !1379, size: 16, offset: 64)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6136, file: !6137, line: 232, baseType: !6149, size: 64, offset: 64)
!6149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6150, size: 64)
!6150 = !DISubroutineType(types: !6151)
!6151 = !{!1521, !6123, !6143, !292, !1039}
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !6127, file: !6113, line: 141, baseType: !6153, size: 64, offset: 128)
!6153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6143, size: 64)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !6127, file: !6113, line: 142, baseType: !6155, size: 64, offset: 192)
!6155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6156, size: 64)
!6156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6157, size: 64)
!6157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6158)
!6158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !6137, line: 84, size: 320, elements: !6159)
!6159 = !{!6160, !6161, !6165, !6184, !6185}
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6158, file: !6137, line: 85, baseType: !292, size: 64)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !6158, file: !6137, line: 86, baseType: !6162, size: 64, offset: 64)
!6162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6163, size: 64)
!6163 = !DISubroutineType(types: !6164)
!6164 = !{!1379, !6123, !6143, !32}
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !6158, file: !6137, line: 88, baseType: !6166, size: 64, offset: 128)
!6166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6167, size: 64)
!6167 = !DISubroutineType(types: !6168)
!6168 = !{!1379, !6123, !6169, !32}
!6169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6170, size: 64)
!6170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !6137, line: 168, size: 448, elements: !6171)
!6171 = !{!6172, !6173, !6174, !6175, !6179, !6180}
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6170, file: !6137, line: 169, baseType: !6144, size: 128)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6170, file: !6137, line: 170, baseType: !1039, size: 64, offset: 128)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !6170, file: !6137, line: 171, baseType: !591, size: 64, offset: 192)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6170, file: !6137, line: 172, baseType: !6176, size: 64, offset: 256)
!6176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6177, size: 64)
!6177 = !DISubroutineType(types: !6178)
!6178 = !{!1521, !1315, !6123, !6169, !1038, !1476, !1039}
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6170, file: !6137, line: 174, baseType: !6176, size: 64, offset: 320)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6170, file: !6137, line: 176, baseType: !6181, size: 64, offset: 384)
!6181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6182, size: 64)
!6182 = !DISubroutineType(types: !6183)
!6183 = !{!32, !1315, !6123, !6169, !2097}
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !6158, file: !6137, line: 90, baseType: !6153, size: 64, offset: 192)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !6158, file: !6137, line: 91, baseType: !6186, size: 64, offset: 256)
!6186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6169, size: 64)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !6127, file: !6113, line: 143, baseType: !6188, size: 64, offset: 256)
!6188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6189, size: 64)
!6189 = !DISubroutineType(types: !6190)
!6190 = !{!6191, !6123}
!6191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6192, size: 64)
!6192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6193)
!6193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !6194, line: 39, size: 384, elements: !6195)
!6194 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!6195 = !{!6196, !6202, !6206, !6210, !6214, !6218}
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6193, file: !6194, line: 40, baseType: !6197, size: 32)
!6197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !6194, line: 26, baseType: !7, size: 32, elements: !6198)
!6198 = !{!6199, !6200, !6201}
!6199 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!6200 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!6201 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !6193, file: !6194, line: 41, baseType: !6203, size: 64, offset: 64)
!6203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6204, size: 64)
!6204 = !DISubroutineType(types: !6205)
!6205 = !{!771}
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !6193, file: !6194, line: 42, baseType: !6207, size: 64, offset: 128)
!6207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6208, size: 64)
!6208 = !DISubroutineType(types: !6209)
!6209 = !{!591}
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !6193, file: !6194, line: 43, baseType: !6211, size: 64, offset: 192)
!6211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6212, size: 64)
!6212 = !DISubroutineType(types: !6213)
!6213 = !{!3256, !445}
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !6193, file: !6194, line: 44, baseType: !6215, size: 64, offset: 256)
!6215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6216, size: 64)
!6216 = !DISubroutineType(types: !6217)
!6217 = !{!3256}
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !6193, file: !6194, line: 45, baseType: !1415, size: 64, offset: 320)
!6219 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6127, file: !6113, line: 144, baseType: !6220, size: 64, offset: 320)
!6220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6221, size: 64)
!6221 = !DISubroutineType(types: !6222)
!6222 = !{!3256, !6123}
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6127, file: !6113, line: 145, baseType: !6224, size: 64, offset: 384)
!6224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6225, size: 64)
!6225 = !DISubroutineType(types: !6226)
!6226 = !{null, !6123, !2903, !2904}
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !6118, file: !6113, line: 70, baseType: !6228, size: 64, offset: 384)
!6228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6229, size: 64)
!6229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !6230, line: 123, size: 1024, elements: !6231)
!6230 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!6231 = !{!6232, !6233, !6234, !6235, !6236, !6237, !6238, !6239, !6342, !6343, !6344, !6345, !6346}
!6232 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6229, file: !6230, line: 124, baseType: !383, size: 32)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6229, file: !6230, line: 125, baseType: !383, size: 32, offset: 32)
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6229, file: !6230, line: 135, baseType: !6228, size: 64, offset: 64)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6229, file: !6230, line: 136, baseType: !292, size: 64, offset: 128)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !6229, file: !6230, line: 138, baseType: !433, size: 192, align: 64, offset: 192)
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !6229, file: !6230, line: 140, baseType: !3256, size: 64, offset: 384)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !6229, file: !6230, line: 141, baseType: !7, size: 32, offset: 448)
!6239 = !DIDerivedType(tag: DW_TAG_member, scope: !6229, file: !6230, line: 142, baseType: !6240, size: 256, offset: 512)
!6240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6229, file: !6230, line: 142, size: 256, elements: !6241)
!6241 = !{!6242, !6282, !6286}
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !6240, file: !6230, line: 143, baseType: !6243, size: 192)
!6243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !6230, line: 91, size: 192, elements: !6244)
!6244 = !{!6245, !6246, !6247}
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !6243, file: !6230, line: 92, baseType: !312, size: 64)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6243, file: !6230, line: 94, baseType: !1749, size: 64, offset: 64)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !6243, file: !6230, line: 100, baseType: !6248, size: 64, offset: 128)
!6248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6249, size: 64)
!6249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !6230, line: 180, size: 704, elements: !6250)
!6250 = !{!6251, !6252, !6253, !6254, !6255, !6256, !6280, !6281}
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6249, file: !6230, line: 182, baseType: !6228, size: 64)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6249, file: !6230, line: 183, baseType: !7, size: 32, offset: 64)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !6249, file: !6230, line: 186, baseType: !3000, size: 192, offset: 128)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !6249, file: !6230, line: 187, baseType: !987, size: 32, offset: 320)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !6249, file: !6230, line: 188, baseType: !987, size: 32, offset: 352)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !6249, file: !6230, line: 189, baseType: !6257, size: 64, offset: 384)
!6257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6258, size: 64)
!6258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !6230, line: 168, size: 320, elements: !6259)
!6259 = !{!6260, !6264, !6268, !6272, !6276}
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !6258, file: !6230, line: 169, baseType: !6261, size: 64)
!6261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6262, size: 64)
!6262 = !DISubroutineType(types: !6263)
!6263 = !{!32, !1652, !6248}
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !6258, file: !6230, line: 171, baseType: !6265, size: 64, offset: 64)
!6265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6266, size: 64)
!6266 = !DISubroutineType(types: !6267)
!6267 = !{!32, !6228, !292, !1379}
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !6258, file: !6230, line: 173, baseType: !6269, size: 64, offset: 128)
!6269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6270, size: 64)
!6270 = !DISubroutineType(types: !6271)
!6271 = !{!32, !6228}
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !6258, file: !6230, line: 174, baseType: !6273, size: 64, offset: 192)
!6273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6274, size: 64)
!6274 = !DISubroutineType(types: !6275)
!6275 = !{!32, !6228, !6228, !292}
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !6258, file: !6230, line: 176, baseType: !6277, size: 64, offset: 256)
!6277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6278, size: 64)
!6278 = !DISubroutineType(types: !6279)
!6279 = !{!32, !1652, !6228, !6248}
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !6249, file: !6230, line: 192, baseType: !284, size: 128, offset: 448)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !6249, file: !6230, line: 194, baseType: !1888, size: 128, offset: 576)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !6240, file: !6230, line: 144, baseType: !6283, size: 64)
!6283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !6230, line: 103, size: 64, elements: !6284)
!6284 = !{!6285}
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !6283, file: !6230, line: 104, baseType: !6228, size: 64)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6240, file: !6230, line: 145, baseType: !6287, size: 256)
!6287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !6230, line: 107, size: 256, elements: !6288)
!6288 = !{!6289, !6337, !6340, !6341}
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6287, file: !6230, line: 108, baseType: !6290, size: 64)
!6290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6291, size: 64)
!6291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6292)
!6292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !6230, line: 217, size: 768, elements: !6293)
!6293 = !{!6294, !6314, !6318, !6319, !6320, !6321, !6322, !6326, !6327, !6328, !6329, !6333}
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6292, file: !6230, line: 222, baseType: !6295, size: 64)
!6295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6296, size: 64)
!6296 = !DISubroutineType(types: !6297)
!6297 = !{!32, !6298}
!6298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6299, size: 64)
!6299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !6230, line: 197, size: 1088, elements: !6300)
!6300 = !{!6301, !6302, !6303, !6304, !6305, !6306, !6307, !6308, !6309, !6310, !6311, !6312, !6313}
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !6299, file: !6230, line: 199, baseType: !6228, size: 64)
!6302 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6299, file: !6230, line: 200, baseType: !1315, size: 64, offset: 64)
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !6299, file: !6230, line: 201, baseType: !1652, size: 64, offset: 128)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6299, file: !6230, line: 202, baseType: !591, size: 64, offset: 192)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6299, file: !6230, line: 205, baseType: !1664, size: 192, offset: 256)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !6299, file: !6230, line: 206, baseType: !1664, size: 192, offset: 448)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6299, file: !6230, line: 207, baseType: !32, size: 32, offset: 640)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6299, file: !6230, line: 208, baseType: !284, size: 128, offset: 704)
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !6299, file: !6230, line: 209, baseType: !1038, size: 64, offset: 832)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6299, file: !6230, line: 211, baseType: !1039, size: 64, offset: 896)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !6299, file: !6230, line: 212, baseType: !771, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !6299, file: !6230, line: 213, baseType: !771, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !6299, file: !6230, line: 214, baseType: !2125, size: 64, offset: 1024)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6292, file: !6230, line: 223, baseType: !6315, size: 64, offset: 64)
!6315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6316, size: 64)
!6316 = !DISubroutineType(types: !6317)
!6317 = !{null, !6298}
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !6292, file: !6230, line: 236, baseType: !1703, size: 64, offset: 128)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !6292, file: !6230, line: 238, baseType: !1690, size: 64, offset: 192)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !6292, file: !6230, line: 239, baseType: !1699, size: 64, offset: 256)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !6292, file: !6230, line: 240, baseType: !1695, size: 64, offset: 320)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !6292, file: !6230, line: 242, baseType: !6323, size: 64, offset: 384)
!6323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6324, size: 64)
!6324 = !DISubroutineType(types: !6325)
!6325 = !{!1521, !6298, !1038, !1039, !1476}
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !6292, file: !6230, line: 252, baseType: !1039, size: 64, offset: 448)
!6327 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !6292, file: !6230, line: 259, baseType: !771, size: 8, offset: 512)
!6328 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !6292, file: !6230, line: 260, baseType: !6323, size: 64, offset: 576)
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !6292, file: !6230, line: 263, baseType: !6330, size: 64, offset: 640)
!6330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6331, size: 64)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{!4826, !6298, !4827}
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6292, file: !6230, line: 266, baseType: !6334, size: 64, offset: 704)
!6334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6335, size: 64)
!6335 = !DISubroutineType(types: !6336)
!6336 = !{!32, !6298, !2097}
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !6287, file: !6230, line: 109, baseType: !6338, size: 64, offset: 64)
!6338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6339, size: 64)
!6339 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !6230, line: 31, flags: DIFlagFwdDecl)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6287, file: !6230, line: 110, baseType: !1476, size: 64, offset: 128)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !6287, file: !6230, line: 111, baseType: !6228, size: 64, offset: 192)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !6229, file: !6230, line: 148, baseType: !591, size: 64, offset: 768)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6229, file: !6230, line: 154, baseType: !331, size: 64, offset: 832)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6229, file: !6230, line: 156, baseType: !476, size: 16, offset: 896)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6229, file: !6230, line: 157, baseType: !1379, size: 16, offset: 912)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !6229, file: !6230, line: 158, baseType: !6347, size: 64, offset: 960)
!6347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6348, size: 64)
!6348 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !6230, line: 32, flags: DIFlagFwdDecl)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !6118, file: !6113, line: 71, baseType: !6350, size: 32, offset: 448)
!6350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !6351, line: 19, size: 32, elements: !6352)
!6351 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!6352 = !{!6353}
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6350, file: !6351, line: 20, baseType: !568, size: 32)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !6118, file: !6113, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !6118, file: !6113, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !6118, file: !6113, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !6118, file: !6113, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !6118, file: !6113, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !6112, file: !6113, line: 196, baseType: !6360, size: 64, offset: 640)
!6360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6361, size: 64)
!6361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6362)
!6362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !6113, line: 156, size: 192, elements: !6363)
!6363 = !{!6364, !6369, !6374}
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !6362, file: !6113, line: 157, baseType: !6365, size: 64)
!6365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6366)
!6366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6367, size: 64)
!6367 = !DISubroutineType(types: !6368)
!6368 = !{!32, !6111, !6123}
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6362, file: !6113, line: 158, baseType: !6370, size: 64, offset: 64)
!6370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6371)
!6371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6372, size: 64)
!6372 = !DISubroutineType(types: !6373)
!6373 = !{!292, !6111, !6123}
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6362, file: !6113, line: 159, baseType: !6375, size: 64, offset: 128)
!6375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6376)
!6376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6377, size: 64)
!6377 = !DISubroutineType(types: !6378)
!6378 = !{!32, !6111, !6123, !6379}
!6379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6380, size: 64)
!6380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !6113, line: 148, size: 20736, elements: !6381)
!6381 = !{!6382, !6384, !6386, !6387, !6391}
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !6380, file: !6113, line: 149, baseType: !6383, size: 192)
!6383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 192, elements: !1591)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !6380, file: !6113, line: 150, baseType: !6385, size: 4096, offset: 192)
!6385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 4096, elements: !3810)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !6380, file: !6113, line: 151, baseType: !32, size: 32, offset: 4288)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6380, file: !6113, line: 152, baseType: !6388, size: 16384, offset: 4320)
!6388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 16384, elements: !6389)
!6389 = !{!6390}
!6390 = !DISubrange(count: 2048)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !6380, file: !6113, line: 153, baseType: !32, size: 32, offset: 20704)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !264, file: !31, line: 1985, baseType: !7, size: 32, offset: 5504)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !264, file: !31, line: 1986, baseType: !7, size: 32, offset: 5536)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !264, file: !31, line: 1987, baseType: !771, size: 8, offset: 5568)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !264, file: !31, line: 1996, baseType: !6396, size: 64, offset: 5632)
!6396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6397, size: 64)
!6397 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !31, line: 1996, flags: DIFlagFwdDecl)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !264, file: !31, line: 2007, baseType: !6399, size: 64, offset: 5696)
!6399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6400, size: 64)
!6400 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !31, line: 2007, flags: DIFlagFwdDecl)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !264, file: !31, line: 2011, baseType: !6402, size: 64, offset: 5760)
!6402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6403, size: 64)
!6403 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !31, line: 2011, flags: DIFlagFwdDecl)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !264, file: !31, line: 2015, baseType: !6405, size: 64, offset: 5824)
!6405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6406, size: 64)
!6406 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !31, line: 62, flags: DIFlagFwdDecl)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !264, file: !31, line: 2016, baseType: !6408, size: 64, offset: 5888)
!6408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6409, size: 64)
!6409 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !31, line: 64, flags: DIFlagFwdDecl)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !264, file: !31, line: 2025, baseType: !564, size: 64, offset: 5952)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !264, file: !31, line: 2027, baseType: !6412, size: 64, offset: 6016)
!6412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6413, size: 64)
!6413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !31, line: 736, size: 1536, elements: !6414)
!6414 = !{!6415, !6416, !6417}
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6413, file: !31, line: 741, baseType: !6118, size: 512)
!6416 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6413, file: !31, line: 742, baseType: !290, size: 64, offset: 512)
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !6413, file: !31, line: 743, baseType: !6418, size: 512, align: 512, offset: 1024)
!6418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !5484, line: 57, size: 512, align: 512, elements: !6419)
!6419 = !{!6420, !6421, !6422, !6423}
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6418, file: !5484, line: 58, baseType: !290, size: 64)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !6418, file: !5484, line: 59, baseType: !987, size: 32, offset: 64)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !6418, file: !5484, line: 60, baseType: !987, size: 32, offset: 96)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !6418, file: !5484, line: 61, baseType: !5492, size: 64, offset: 128)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !264, file: !31, line: 2028, baseType: !7, size: 32, offset: 6080)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !264, file: !31, line: 2029, baseType: !7, size: 32, offset: 6112)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !264, file: !31, line: 2031, baseType: !1088, size: 64, offset: 6144)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !264, file: !31, line: 2032, baseType: !312, size: 64, offset: 6208)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !264, file: !31, line: 2033, baseType: !32, size: 32, offset: 6272)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !264, file: !31, line: 2034, baseType: !6430, size: 64, offset: 6336)
!6430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6431, size: 64)
!6431 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !31, line: 430, baseType: !6432)
!6432 = !DISubroutineType(types: !6433)
!6433 = !{!6434, !6435}
!6434 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !31, line: 429, baseType: !257)
!6435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !264, file: !31, line: 2035, baseType: !591, size: 64, offset: 6400)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !264, file: !31, line: 2040, baseType: !6438, size: 64, offset: 6464)
!6438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6439, size: 64)
!6439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !31, line: 584, size: 1600, elements: !6440)
!6440 = !{!6441, !6442, !6445, !6446, !6447, !6448, !6449, !6450, !6451, !6452, !6453, !6454}
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6439, file: !31, line: 588, baseType: !290, size: 64)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !6439, file: !31, line: 589, baseType: !6443, size: 64, offset: 64)
!6443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6444, size: 64)
!6444 = !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !31, line: 589, flags: DIFlagFwdDecl)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !6439, file: !31, line: 590, baseType: !6443, size: 64, offset: 128)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6439, file: !31, line: 592, baseType: !6118, size: 512, offset: 192)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !6439, file: !31, line: 597, baseType: !312, size: 64, offset: 704)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !6439, file: !31, line: 602, baseType: !312, size: 64, offset: 768)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !6439, file: !31, line: 605, baseType: !290, size: 64, offset: 832)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !6439, file: !31, line: 612, baseType: !1669, offset: 896)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !6439, file: !31, line: 613, baseType: !32, size: 32, offset: 896)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !6439, file: !31, line: 617, baseType: !312, size: 64, offset: 960)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6439, file: !31, line: 619, baseType: !312, size: 64, offset: 1024)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !6439, file: !31, line: 622, baseType: !6455, size: 512, offset: 1088)
!6455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !6456, line: 43, size: 512, elements: !6457)
!6456 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!6457 = !{!6458, !6459, !6460, !6461, !6462, !6463, !6464, !6465, !6466, !6467, !6468, !6469, !6470}
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !6455, file: !6456, line: 45, baseType: !7, size: 32)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !6455, file: !6456, line: 46, baseType: !7, size: 32, offset: 32)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !6455, file: !6456, line: 47, baseType: !7, size: 32, offset: 64)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !6455, file: !6456, line: 51, baseType: !7, size: 32, offset: 96)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !6455, file: !6456, line: 52, baseType: !7, size: 32, offset: 128)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !6455, file: !6456, line: 54, baseType: !7, size: 32, offset: 160)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !6455, file: !6456, line: 55, baseType: !7, size: 32, offset: 192)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !6455, file: !6456, line: 56, baseType: !7, size: 32, offset: 224)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !6455, file: !6456, line: 58, baseType: !7, size: 32, offset: 256)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !6455, file: !6456, line: 59, baseType: !312, size: 64, offset: 320)
!6468 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !6455, file: !6456, line: 62, baseType: !7, size: 32, offset: 384)
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !6455, file: !6456, line: 63, baseType: !7, size: 32, offset: 416)
!6470 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !6455, file: !6456, line: 64, baseType: !7, size: 32, offset: 448)
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !264, file: !31, line: 2045, baseType: !1031, size: 256, offset: 6528)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !264, file: !31, line: 2049, baseType: !276, size: 128, offset: 6784)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !264, file: !31, line: 2054, baseType: !6438, size: 64, offset: 6912)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !264, file: !31, line: 2055, baseType: !7, size: 32, offset: 6976)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !264, file: !31, line: 2056, baseType: !7, size: 32, offset: 7008)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !264, file: !31, line: 2057, baseType: !6443, size: 64, offset: 7040)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !264, file: !31, line: 2058, baseType: !7, size: 32, offset: 7104)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !264, file: !31, line: 2059, baseType: !1669, offset: 7136)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !264, file: !31, line: 2061, baseType: !6480, size: 64, offset: 7168)
!6480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6481, size: 64)
!6481 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !31, line: 879, flags: DIFlagFwdDecl)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !264, file: !31, line: 2075, baseType: !3233, size: 320, offset: 7232)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !264, file: !31, line: 2076, baseType: !32, size: 32, offset: 7552)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !264, file: !31, line: 2078, baseType: !987, size: 32, offset: 7584)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !264, file: !31, line: 2080, baseType: !284, size: 128, offset: 7616)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !264, file: !31, line: 2081, baseType: !1001, size: 64, offset: 7744)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !264, file: !31, line: 2083, baseType: !284, size: 128, offset: 7808)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !264, file: !31, line: 2091, baseType: !263, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !264, file: !31, line: 2093, baseType: !771, size: 8, offset: 7944)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !264, file: !31, line: 2098, baseType: !6491, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!6491 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !264, file: !31, line: 2095, baseType: !7, size: 32, elements: !6492)
!6492 = !{!6493, !6494}
!6493 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!6494 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !264, file: !31, line: 2100, baseType: !771, size: 8, offset: 7968)
!6496 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !264, file: !31, line: 2101, baseType: !405, size: 64, offset: 8000)
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !264, file: !31, line: 2107, baseType: !6498, size: 64, offset: 8064)
!6498 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !2983, line: 318, baseType: !6499)
!6499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2983, line: 314, size: 64, elements: !6500)
!6500 = !{!6501}
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !6499, file: !2983, line: 316, baseType: !2981, size: 64)
!6502 = !DIDerivedType(tag: DW_TAG_member, scope: !264, file: !31, line: 2110, baseType: !6503, size: 64, offset: 8128)
!6503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !264, file: !31, line: 2110, size: 64, elements: !6504)
!6504 = !{!6505, !6506, !6527, !6536}
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !6503, file: !31, line: 2111, baseType: !591, size: 64)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !6503, file: !31, line: 2112, baseType: !6507, size: 64)
!6507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6508, size: 64)
!6508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !31, line: 2542, size: 128, align: 128, elements: !6509)
!6509 = !{!6510, !6525, !6526}
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !6508, file: !31, line: 2543, baseType: !6511, size: 64)
!6511 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !3070, line: 79, baseType: !6512)
!6512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3070, line: 77, size: 64, elements: !6513)
!6513 = !{!6514}
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !6512, file: !3070, line: 78, baseType: !6515, size: 64)
!6515 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !6516, line: 26, baseType: !6517)
!6516 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!6517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6516, line: 24, size: 64, elements: !6518)
!6518 = !{!6519}
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !6517, file: !6516, line: 25, baseType: !6520, size: 64)
!6520 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !6521, line: 12, baseType: !6522)
!6521 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!6522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6521, line: 10, size: 64, elements: !6523)
!6523 = !{!6524}
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !6522, file: !6521, line: 11, baseType: !371, size: 64)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !6508, file: !31, line: 2544, baseType: !6511, size: 64, offset: 64)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6508, file: !31, line: 2545, baseType: !3069, offset: 128)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !6503, file: !31, line: 2113, baseType: !6528, size: 64)
!6528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6529, size: 64)
!6529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !31, line: 2534, size: 256, align: 256, elements: !6530)
!6530 = !{!6531, !6532, !6533, !6534, !6535}
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !6529, file: !31, line: 2535, baseType: !331, size: 64)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !6529, file: !31, line: 2536, baseType: !331, size: 64, offset: 64)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !6529, file: !31, line: 2537, baseType: !331, size: 64, offset: 128)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !6529, file: !31, line: 2538, baseType: !331, size: 64, offset: 192)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6529, file: !31, line: 2539, baseType: !3069, offset: 256)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !6503, file: !31, line: 2114, baseType: !6537, size: 64)
!6537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6538, size: 64)
!6538 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !31, line: 2114, flags: DIFlagFwdDecl)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !264, file: !31, line: 2124, baseType: !6540, size: 5568, offset: 8192)
!6540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !6541, line: 461, size: 5568, elements: !6542)
!6541 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!6542 = !{!6543, !6544, !6546, !6549, !6550, !6602, !6694, !6695, !6696, !6697, !6698, !6713, !6820, !6833, !6837, !6838, !6842, !6843, !6844, !6845, !6849, !6855, !6856, !6859, !6863, !6953, !6954, !6955, !6956, !6957, !6989, !6990, !6991, !6994, !6997, !6998, !6999, !7000}
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6540, file: !6541, line: 462, baseType: !6118, size: 512)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !6540, file: !6541, line: 463, baseType: !6545, size: 64, offset: 512)
!6545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6540, size: 64)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6540, file: !6541, line: 465, baseType: !6547, size: 64, offset: 576)
!6547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6548, size: 64)
!6548 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !6541, line: 36, flags: DIFlagFwdDecl)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !6540, file: !6541, line: 467, baseType: !292, size: 64, offset: 640)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6540, file: !6541, line: 468, baseType: !6551, size: 64, offset: 704)
!6551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6552, size: 64)
!6552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6553)
!6553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !6541, line: 87, size: 384, elements: !6554)
!6554 = !{!6555, !6556, !6557, !6561, !6566, !6570}
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6553, file: !6541, line: 88, baseType: !292, size: 64)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6553, file: !6541, line: 89, baseType: !6155, size: 64, offset: 64)
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6553, file: !6541, line: 90, baseType: !6558, size: 64, offset: 128)
!6558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6559, size: 64)
!6559 = !DISubroutineType(types: !6560)
!6560 = !{!32, !6545, !6379}
!6561 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6553, file: !6541, line: 91, baseType: !6562, size: 64, offset: 192)
!6562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6563, size: 64)
!6563 = !DISubroutineType(types: !6564)
!6564 = !{!1038, !6545, !6565, !2903, !2904}
!6565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6553, file: !6541, line: 93, baseType: !6567, size: 64, offset: 256)
!6567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6568, size: 64)
!6568 = !DISubroutineType(types: !6569)
!6569 = !{null, !6545}
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6553, file: !6541, line: 95, baseType: !6571, size: 64, offset: 320)
!6571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6572, size: 64)
!6572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6573)
!6573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !6574, line: 278, size: 1472, elements: !6575)
!6574 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!6575 = !{!6576, !6580, !6581, !6582, !6583, !6584, !6585, !6586, !6587, !6588, !6589, !6590, !6591, !6592, !6593, !6594, !6595, !6596, !6597, !6598, !6599, !6600, !6601}
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !6573, file: !6574, line: 279, baseType: !6577, size: 64)
!6577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6578, size: 64)
!6578 = !DISubroutineType(types: !6579)
!6579 = !{!32, !6545}
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !6573, file: !6574, line: 280, baseType: !6567, size: 64, offset: 64)
!6581 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6573, file: !6574, line: 281, baseType: !6577, size: 64, offset: 128)
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6573, file: !6574, line: 282, baseType: !6577, size: 64, offset: 192)
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !6573, file: !6574, line: 283, baseType: !6577, size: 64, offset: 256)
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !6573, file: !6574, line: 284, baseType: !6577, size: 64, offset: 320)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !6573, file: !6574, line: 285, baseType: !6577, size: 64, offset: 384)
!6586 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !6573, file: !6574, line: 286, baseType: !6577, size: 64, offset: 448)
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !6573, file: !6574, line: 287, baseType: !6577, size: 64, offset: 512)
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !6573, file: !6574, line: 288, baseType: !6577, size: 64, offset: 576)
!6589 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !6573, file: !6574, line: 289, baseType: !6577, size: 64, offset: 640)
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !6573, file: !6574, line: 290, baseType: !6577, size: 64, offset: 704)
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !6573, file: !6574, line: 291, baseType: !6577, size: 64, offset: 768)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !6573, file: !6574, line: 292, baseType: !6577, size: 64, offset: 832)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !6573, file: !6574, line: 293, baseType: !6577, size: 64, offset: 896)
!6594 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !6573, file: !6574, line: 294, baseType: !6577, size: 64, offset: 960)
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !6573, file: !6574, line: 295, baseType: !6577, size: 64, offset: 1024)
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !6573, file: !6574, line: 296, baseType: !6577, size: 64, offset: 1088)
!6597 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !6573, file: !6574, line: 297, baseType: !6577, size: 64, offset: 1152)
!6598 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !6573, file: !6574, line: 298, baseType: !6577, size: 64, offset: 1216)
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !6573, file: !6574, line: 299, baseType: !6577, size: 64, offset: 1280)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !6573, file: !6574, line: 300, baseType: !6577, size: 64, offset: 1344)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !6573, file: !6574, line: 301, baseType: !6577, size: 64, offset: 1408)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6540, file: !6541, line: 470, baseType: !6603, size: 64, offset: 768)
!6603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6604, size: 64)
!6604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !6605, line: 82, size: 1408, elements: !6606)
!6605 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!6606 = !{!6607, !6608, !6609, !6610, !6611, !6612, !6613, !6673, !6674, !6675, !6676, !6677, !6678, !6679, !6680, !6681, !6682, !6683, !6684, !6685, !6689, !6692, !6693}
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6604, file: !6605, line: 83, baseType: !292, size: 64)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !6604, file: !6605, line: 84, baseType: !292, size: 64, offset: 64)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !6604, file: !6605, line: 85, baseType: !6545, size: 64, offset: 128)
!6610 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !6604, file: !6605, line: 86, baseType: !6155, size: 64, offset: 192)
!6611 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6604, file: !6605, line: 87, baseType: !6155, size: 64, offset: 256)
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !6604, file: !6605, line: 88, baseType: !6155, size: 64, offset: 320)
!6613 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !6604, file: !6605, line: 90, baseType: !6614, size: 64, offset: 384)
!6614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6615, size: 64)
!6615 = !DISubroutineType(types: !6616)
!6616 = !{!32, !6545, !6617}
!6617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6618, size: 64)
!6618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !6619, line: 95, size: 1152, elements: !6620)
!6619 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!6620 = !{!6621, !6622, !6623, !6624, !6625, !6626, !6632, !6642, !6653, !6654, !6655, !6656, !6657, !6665, !6666, !6667, !6668, !6669, !6670}
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6618, file: !6619, line: 96, baseType: !292, size: 64)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !6618, file: !6619, line: 97, baseType: !6603, size: 64, offset: 64)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6618, file: !6619, line: 99, baseType: !980, size: 64, offset: 128)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !6618, file: !6619, line: 100, baseType: !292, size: 64, offset: 192)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !6618, file: !6619, line: 102, baseType: !771, size: 8, offset: 256)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !6618, file: !6619, line: 103, baseType: !6627, size: 32, offset: 288)
!6627 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !6619, line: 44, baseType: !7, size: 32, elements: !6628)
!6628 = !{!6629, !6630, !6631}
!6629 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!6630 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!6631 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !6618, file: !6619, line: 105, baseType: !6633, size: 64, offset: 320)
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6634, size: 64)
!6634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6635)
!6635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !6636, line: 262, size: 1600, elements: !6637)
!6636 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!6637 = !{!6638, !6639, !6640, !6641}
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6635, file: !6636, line: 263, baseType: !4623, size: 256)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6635, file: !6636, line: 264, baseType: !4623, size: 256, offset: 256)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !6635, file: !6636, line: 265, baseType: !5231, size: 1024, offset: 512)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6635, file: !6636, line: 266, baseType: !3256, size: 64, offset: 1536)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !6618, file: !6619, line: 106, baseType: !6643, size: 64, offset: 384)
!6643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6644, size: 64)
!6644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6645)
!6645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !6636, line: 210, size: 256, elements: !6646)
!6646 = !{!6647, !6649, !6651, !6652}
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6645, file: !6636, line: 211, baseType: !6648, size: 72)
!6648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 72, elements: !3085)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6645, file: !6636, line: 212, baseType: !6650, size: 64, offset: 128)
!6650 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !6636, line: 14, baseType: !312)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !6645, file: !6636, line: 213, baseType: !493, size: 32, offset: 192)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !6645, file: !6636, line: 214, baseType: !493, size: 32, offset: 224)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6618, file: !6619, line: 108, baseType: !6577, size: 64, offset: 448)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6618, file: !6619, line: 109, baseType: !6567, size: 64, offset: 512)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6618, file: !6619, line: 110, baseType: !6577, size: 64, offset: 576)
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6618, file: !6619, line: 111, baseType: !6567, size: 64, offset: 640)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6618, file: !6619, line: 112, baseType: !6658, size: 64, offset: 704)
!6658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6659, size: 64)
!6659 = !DISubroutineType(types: !6660)
!6660 = !{!32, !6545, !6661}
!6661 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !6574, line: 52, baseType: !6662)
!6662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !6574, line: 50, size: 32, elements: !6663)
!6663 = !{!6664}
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !6662, file: !6574, line: 51, baseType: !32, size: 32)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6618, file: !6619, line: 113, baseType: !6577, size: 64, offset: 768)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6618, file: !6619, line: 114, baseType: !6155, size: 64, offset: 832)
!6667 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6618, file: !6619, line: 115, baseType: !6155, size: 64, offset: 896)
!6668 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6618, file: !6619, line: 117, baseType: !6571, size: 64, offset: 960)
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !6618, file: !6619, line: 118, baseType: !6567, size: 64, offset: 1024)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6618, file: !6619, line: 120, baseType: !6671, size: 64, offset: 1088)
!6671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6672, size: 64)
!6672 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !6619, line: 120, flags: DIFlagFwdDecl)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !6604, file: !6605, line: 91, baseType: !6558, size: 64, offset: 448)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !6604, file: !6605, line: 92, baseType: !6577, size: 64, offset: 512)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !6604, file: !6605, line: 93, baseType: !6567, size: 64, offset: 576)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !6604, file: !6605, line: 94, baseType: !6577, size: 64, offset: 640)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6604, file: !6605, line: 95, baseType: !6567, size: 64, offset: 704)
!6678 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !6604, file: !6605, line: 97, baseType: !6577, size: 64, offset: 768)
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6604, file: !6605, line: 98, baseType: !6577, size: 64, offset: 832)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !6604, file: !6605, line: 100, baseType: !6658, size: 64, offset: 896)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !6604, file: !6605, line: 101, baseType: !6577, size: 64, offset: 960)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !6604, file: !6605, line: 103, baseType: !6577, size: 64, offset: 1024)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !6604, file: !6605, line: 105, baseType: !6577, size: 64, offset: 1088)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6604, file: !6605, line: 107, baseType: !6571, size: 64, offset: 1152)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !6604, file: !6605, line: 109, baseType: !6686, size: 64, offset: 1216)
!6686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6687, size: 64)
!6687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6688)
!6688 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !6605, line: 109, flags: DIFlagFwdDecl)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6604, file: !6605, line: 111, baseType: !6690, size: 64, offset: 1280)
!6690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6691, size: 64)
!6691 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !6605, line: 111, flags: DIFlagFwdDecl)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !6604, file: !6605, line: 112, baseType: !1584, offset: 1344)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !6604, file: !6605, line: 114, baseType: !771, size: 8, offset: 1344)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !6540, file: !6541, line: 471, baseType: !6617, size: 64, offset: 832)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !6540, file: !6541, line: 473, baseType: !591, size: 64, offset: 896)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !6540, file: !6541, line: 475, baseType: !591, size: 64, offset: 960)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6540, file: !6541, line: 480, baseType: !1664, size: 192, offset: 1024)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !6540, file: !6541, line: 484, baseType: !6699, size: 576, offset: 1216)
!6699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !6541, line: 361, size: 576, elements: !6700)
!6700 = !{!6701, !6702, !6703, !6704, !6705, !6706}
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !6699, file: !6541, line: 362, baseType: !284, size: 128)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !6699, file: !6541, line: 363, baseType: !284, size: 128, offset: 128)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !6699, file: !6541, line: 364, baseType: !284, size: 128, offset: 256)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !6699, file: !6541, line: 365, baseType: !284, size: 128, offset: 384)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !6699, file: !6541, line: 366, baseType: !771, size: 8, offset: 512)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !6699, file: !6541, line: 367, baseType: !6707, size: 32, offset: 544)
!6707 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !6541, line: 343, baseType: !7, size: 32, elements: !6708)
!6708 = !{!6709, !6710, !6711, !6712}
!6709 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!6710 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!6711 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!6712 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !6540, file: !6541, line: 485, baseType: !6714, size: 2304, offset: 1792)
!6714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !6574, line: 565, size: 2304, elements: !6715)
!6715 = !{!6716, !6717, !6718, !6719, !6720, !6721, !6722, !6723, !6724, !6725, !6726, !6727, !6728, !6729, !6730, !6731, !6758, !6759, !6760, !6761, !6762, !6763, !6764, !6765, !6766, !6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774, !6775, !6776, !6777, !6778, !6779, !6780, !6781, !6782, !6790, !6797, !6798, !6799, !6800, !6801, !6802, !6803, !6813, !6817}
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !6714, file: !6574, line: 566, baseType: !6661, size: 32)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !6714, file: !6574, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !6714, file: !6574, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !6714, file: !6574, line: 569, baseType: !771, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !6714, file: !6574, line: 570, baseType: !771, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !6714, file: !6574, line: 571, baseType: !771, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !6714, file: !6574, line: 572, baseType: !771, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !6714, file: !6574, line: 573, baseType: !771, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !6714, file: !6574, line: 574, baseType: !771, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !6714, file: !6574, line: 575, baseType: !771, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !6714, file: !6574, line: 576, baseType: !771, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !6714, file: !6574, line: 577, baseType: !987, size: 32, offset: 64)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6714, file: !6574, line: 578, baseType: !1669, offset: 96)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6714, file: !6574, line: 580, baseType: !284, size: 128, offset: 128)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !6714, file: !6574, line: 581, baseType: !2596, size: 192, offset: 256)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !6714, file: !6574, line: 582, baseType: !6732, size: 64, offset: 448)
!6732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6733, size: 64)
!6733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !6734, line: 43, size: 1472, elements: !6735)
!6734 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!6735 = !{!6736, !6737, !6738, !6739, !6740, !6743, !6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755, !6756, !6757}
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6733, file: !6734, line: 44, baseType: !292, size: 64)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6733, file: !6734, line: 45, baseType: !32, size: 32, offset: 64)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6733, file: !6734, line: 46, baseType: !284, size: 128, offset: 128)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6733, file: !6734, line: 47, baseType: !1669, offset: 256)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6733, file: !6734, line: 48, baseType: !6741, size: 64, offset: 256)
!6741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6742, size: 64)
!6742 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !6574, line: 533, flags: DIFlagFwdDecl)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !6733, file: !6734, line: 49, baseType: !3233, size: 320, offset: 320)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6733, file: !6734, line: 50, baseType: !312, size: 64, offset: 640)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !6733, file: !6734, line: 51, baseType: !453, size: 64, offset: 704)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !6733, file: !6734, line: 52, baseType: !453, size: 64, offset: 768)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !6733, file: !6734, line: 53, baseType: !453, size: 64, offset: 832)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !6733, file: !6734, line: 54, baseType: !453, size: 64, offset: 896)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !6733, file: !6734, line: 55, baseType: !453, size: 64, offset: 960)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !6733, file: !6734, line: 56, baseType: !312, size: 64, offset: 1024)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !6733, file: !6734, line: 57, baseType: !312, size: 64, offset: 1088)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !6733, file: !6734, line: 58, baseType: !312, size: 64, offset: 1152)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !6733, file: !6734, line: 59, baseType: !312, size: 64, offset: 1216)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !6733, file: !6734, line: 60, baseType: !312, size: 64, offset: 1280)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6733, file: !6734, line: 61, baseType: !6545, size: 64, offset: 1344)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6733, file: !6734, line: 62, baseType: !771, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !6733, file: !6734, line: 63, baseType: !771, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !6714, file: !6574, line: 583, baseType: !771, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !6714, file: !6574, line: 584, baseType: !771, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !6714, file: !6574, line: 585, baseType: !771, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !6714, file: !6574, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !6714, file: !6574, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !6714, file: !6574, line: 592, baseType: !2396, size: 512, offset: 576)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !6714, file: !6574, line: 593, baseType: !331, size: 64, offset: 1088)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !6714, file: !6574, line: 594, baseType: !2828, size: 256, offset: 1152)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !6714, file: !6574, line: 595, baseType: !1888, size: 128, offset: 1408)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !6714, file: !6574, line: 596, baseType: !6741, size: 64, offset: 1536)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !6714, file: !6574, line: 597, baseType: !383, size: 32, offset: 1600)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !6714, file: !6574, line: 598, baseType: !383, size: 32, offset: 1632)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !6714, file: !6574, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !6714, file: !6574, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !6714, file: !6574, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !6714, file: !6574, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!6774 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !6714, file: !6574, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !6714, file: !6574, line: 604, baseType: !771, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!6776 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !6714, file: !6574, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !6714, file: !6574, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !6714, file: !6574, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !6714, file: !6574, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!6780 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !6714, file: !6574, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !6714, file: !6574, line: 610, baseType: !7, size: 32, offset: 1696)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !6714, file: !6574, line: 611, baseType: !6783, size: 32, offset: 1728)
!6783 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !6574, line: 524, baseType: !7, size: 32, elements: !6784)
!6784 = !{!6785, !6786, !6787, !6788, !6789}
!6785 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!6786 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!6787 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!6788 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!6789 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!6790 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !6714, file: !6574, line: 612, baseType: !6791, size: 32, offset: 1760)
!6791 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !6574, line: 502, baseType: !7, size: 32, elements: !6792)
!6792 = !{!6793, !6794, !6795, !6796}
!6793 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!6794 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!6795 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!6796 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !6714, file: !6574, line: 613, baseType: !32, size: 32, offset: 1792)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !6714, file: !6574, line: 614, baseType: !32, size: 32, offset: 1824)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !6714, file: !6574, line: 615, baseType: !331, size: 64, offset: 1856)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !6714, file: !6574, line: 616, baseType: !331, size: 64, offset: 1920)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !6714, file: !6574, line: 617, baseType: !331, size: 64, offset: 1984)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !6714, file: !6574, line: 618, baseType: !331, size: 64, offset: 2048)
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !6714, file: !6574, line: 620, baseType: !6804, size: 64, offset: 2112)
!6804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6805, size: 64)
!6805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !6574, line: 536, size: 256, elements: !6806)
!6806 = !{!6807, !6808, !6809, !6810}
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6805, file: !6574, line: 537, baseType: !1669)
!6808 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6805, file: !6574, line: 538, baseType: !7, size: 32)
!6809 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !6805, file: !6574, line: 540, baseType: !284, size: 128, offset: 64)
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !6805, file: !6574, line: 543, baseType: !6811, size: 64, offset: 192)
!6811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6812, size: 64)
!6812 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !6574, line: 534, flags: DIFlagFwdDecl)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !6714, file: !6574, line: 621, baseType: !6814, size: 64, offset: 2176)
!6814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6815, size: 64)
!6815 = !DISubroutineType(types: !6816)
!6816 = !{null, !6545, !2544}
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !6714, file: !6574, line: 622, baseType: !6818, size: 64, offset: 2240)
!6818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6819, size: 64)
!6819 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !6574, line: 622, flags: DIFlagFwdDecl)
!6820 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !6540, file: !6541, line: 486, baseType: !6821, size: 64, offset: 4096)
!6821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6822, size: 64)
!6822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !6574, line: 642, size: 1792, elements: !6823)
!6823 = !{!6824, !6825, !6826, !6830, !6831, !6832}
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6822, file: !6574, line: 643, baseType: !6573, size: 1472)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6822, file: !6574, line: 644, baseType: !6577, size: 64, offset: 1472)
!6826 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !6822, file: !6574, line: 645, baseType: !6827, size: 64, offset: 1536)
!6827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6828, size: 64)
!6828 = !DISubroutineType(types: !6829)
!6829 = !{null, !6545, !771}
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !6822, file: !6574, line: 646, baseType: !6577, size: 64, offset: 1600)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !6822, file: !6574, line: 647, baseType: !6567, size: 64, offset: 1664)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !6822, file: !6574, line: 648, baseType: !6567, size: 64, offset: 1728)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !6540, file: !6541, line: 493, baseType: !6834, size: 64, offset: 4160)
!6834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6835, size: 64)
!6835 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !6836, line: 13, flags: DIFlagFwdDecl)
!6836 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !6540, file: !6541, line: 499, baseType: !284, size: 128, offset: 4224)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !6540, file: !6541, line: 502, baseType: !6839, size: 64, offset: 4352)
!6839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6840, size: 64)
!6840 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6841)
!6841 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !6541, line: 502, flags: DIFlagFwdDecl)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !6540, file: !6541, line: 504, baseType: !5370, size: 64, offset: 4416)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !6540, file: !6541, line: 505, baseType: !331, size: 64, offset: 4480)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !6540, file: !6541, line: 510, baseType: !331, size: 64, offset: 4544)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !6540, file: !6541, line: 511, baseType: !6846, size: 64, offset: 4608)
!6846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6847, size: 64)
!6847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6848)
!6848 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !6541, line: 511, flags: DIFlagFwdDecl)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !6540, file: !6541, line: 513, baseType: !6850, size: 64, offset: 4672)
!6850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6851, size: 64)
!6851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !6541, line: 288, size: 128, elements: !6852)
!6852 = !{!6853, !6854}
!6853 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !6851, file: !6541, line: 293, baseType: !7, size: 32)
!6854 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !6851, file: !6541, line: 294, baseType: !312, size: 64, offset: 64)
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !6540, file: !6541, line: 515, baseType: !284, size: 128, offset: 4736)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !6540, file: !6541, line: 526, baseType: !6857, offset: 4864)
!6857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !6858, line: 5, elements: !1586)
!6858 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !6540, file: !6541, line: 528, baseType: !6860, size: 64, offset: 4864)
!6860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6861, size: 64)
!6861 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !6862, line: 14, flags: DIFlagFwdDecl)
!6862 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6540, file: !6541, line: 529, baseType: !6864, size: 64, offset: 4928)
!6864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6865, size: 64)
!6865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !6866, line: 17, size: 192, elements: !6867)
!6866 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!6867 = !{!6868, !6869, !6952}
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !6865, file: !6866, line: 18, baseType: !6864, size: 64)
!6869 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6865, file: !6866, line: 19, baseType: !6870, size: 64, offset: 64)
!6870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6871, size: 64)
!6871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6872)
!6872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !6866, line: 110, size: 1152, elements: !6873)
!6873 = !{!6874, !6878, !6882, !6888, !6894, !6898, !6902, !6907, !6911, !6912, !6916, !6920, !6924, !6935, !6936, !6937, !6938, !6948}
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6872, file: !6866, line: 111, baseType: !6875, size: 64)
!6875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6876, size: 64)
!6876 = !DISubroutineType(types: !6877)
!6877 = !{!6864, !6864}
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !6872, file: !6866, line: 112, baseType: !6879, size: 64, offset: 64)
!6879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6880, size: 64)
!6880 = !DISubroutineType(types: !6881)
!6881 = !{null, !6864}
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !6872, file: !6866, line: 113, baseType: !6883, size: 64, offset: 128)
!6883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6884, size: 64)
!6884 = !DISubroutineType(types: !6885)
!6885 = !{!771, !6886}
!6886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6887, size: 64)
!6887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6865)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !6872, file: !6866, line: 114, baseType: !6889, size: 64, offset: 192)
!6889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6890, size: 64)
!6890 = !DISubroutineType(types: !6891)
!6891 = !{!3256, !6886, !6892}
!6892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6893, size: 64)
!6893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6540)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !6872, file: !6866, line: 116, baseType: !6895, size: 64, offset: 256)
!6895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6896, size: 64)
!6896 = !DISubroutineType(types: !6897)
!6897 = !{!771, !6886, !292}
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !6872, file: !6866, line: 118, baseType: !6899, size: 64, offset: 320)
!6899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6900, size: 64)
!6900 = !DISubroutineType(types: !6901)
!6901 = !{!32, !6886, !292, !7, !591, !1039}
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !6872, file: !6866, line: 123, baseType: !6903, size: 64, offset: 384)
!6903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6904, size: 64)
!6904 = !DISubroutineType(types: !6905)
!6905 = !{!32, !6886, !292, !6906, !1039}
!6906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !6872, file: !6866, line: 126, baseType: !6908, size: 64, offset: 448)
!6908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6909, size: 64)
!6909 = !DISubroutineType(types: !6910)
!6910 = !{!292, !6886}
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !6872, file: !6866, line: 127, baseType: !6908, size: 64, offset: 512)
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !6872, file: !6866, line: 128, baseType: !6913, size: 64, offset: 576)
!6913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6914, size: 64)
!6914 = !DISubroutineType(types: !6915)
!6915 = !{!6864, !6886}
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !6872, file: !6866, line: 130, baseType: !6917, size: 64, offset: 640)
!6917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6918, size: 64)
!6918 = !DISubroutineType(types: !6919)
!6919 = !{!6864, !6886, !6864}
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !6872, file: !6866, line: 133, baseType: !6921, size: 64, offset: 704)
!6921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6922, size: 64)
!6922 = !DISubroutineType(types: !6923)
!6923 = !{!6864, !6886, !292}
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !6872, file: !6866, line: 135, baseType: !6925, size: 64, offset: 768)
!6925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6926, size: 64)
!6926 = !DISubroutineType(types: !6927)
!6927 = !{!32, !6886, !292, !292, !7, !7, !6928}
!6928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6929, size: 64)
!6929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !6866, line: 43, size: 640, elements: !6930)
!6930 = !{!6931, !6932, !6933}
!6931 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !6929, file: !6866, line: 44, baseType: !6864, size: 64)
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !6929, file: !6866, line: 45, baseType: !7, size: 32, offset: 64)
!6933 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !6929, file: !6866, line: 46, baseType: !6934, size: 512, offset: 128)
!6934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 512, elements: !2432)
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !6872, file: !6866, line: 140, baseType: !6917, size: 64, offset: 832)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !6872, file: !6866, line: 143, baseType: !6913, size: 64, offset: 896)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !6872, file: !6866, line: 145, baseType: !6875, size: 64, offset: 960)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !6872, file: !6866, line: 146, baseType: !6939, size: 64, offset: 1024)
!6939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6940, size: 64)
!6940 = !DISubroutineType(types: !6941)
!6941 = !{!32, !6886, !6942}
!6942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6943, size: 64)
!6943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !6866, line: 29, size: 128, elements: !6944)
!6944 = !{!6945, !6946, !6947}
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !6943, file: !6866, line: 30, baseType: !7, size: 32)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6943, file: !6866, line: 31, baseType: !7, size: 32, offset: 32)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !6943, file: !6866, line: 32, baseType: !6886, size: 64, offset: 64)
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !6872, file: !6866, line: 148, baseType: !6949, size: 64, offset: 1088)
!6949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6950, size: 64)
!6950 = !DISubroutineType(types: !6951)
!6951 = !{!32, !6886, !6545}
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6865, file: !6866, line: 20, baseType: !6545, size: 64, offset: 128)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !6540, file: !6541, line: 534, baseType: !1458, size: 32, offset: 4992)
!6954 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6540, file: !6541, line: 535, baseType: !987, size: 32, offset: 5024)
!6955 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !6540, file: !6541, line: 537, baseType: !1669, offset: 5056)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !6540, file: !6541, line: 538, baseType: !284, size: 128, offset: 5056)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6540, file: !6541, line: 540, baseType: !6958, size: 64, offset: 5184)
!6958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6959, size: 64)
!6959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !6960, line: 54, size: 960, elements: !6961)
!6960 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!6961 = !{!6962, !6963, !6964, !6965, !6966, !6967, !6968, !6972, !6976, !6977, !6978, !6979, !6983, !6987, !6988}
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6959, file: !6960, line: 55, baseType: !292, size: 64)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6959, file: !6960, line: 56, baseType: !980, size: 64, offset: 64)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !6959, file: !6960, line: 58, baseType: !6155, size: 64, offset: 128)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !6959, file: !6960, line: 59, baseType: !6155, size: 64, offset: 192)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !6959, file: !6960, line: 60, baseType: !6123, size: 64, offset: 256)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !6959, file: !6960, line: 62, baseType: !6558, size: 64, offset: 320)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !6959, file: !6960, line: 63, baseType: !6969, size: 64, offset: 384)
!6969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6970, size: 64)
!6970 = !DISubroutineType(types: !6971)
!6971 = !{!1038, !6545, !6565}
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !6959, file: !6960, line: 65, baseType: !6973, size: 64, offset: 448)
!6973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6974, size: 64)
!6974 = !DISubroutineType(types: !6975)
!6975 = !{null, !6958}
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !6959, file: !6960, line: 66, baseType: !6567, size: 64, offset: 512)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !6959, file: !6960, line: 68, baseType: !6577, size: 64, offset: 576)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !6959, file: !6960, line: 70, baseType: !6191, size: 64, offset: 640)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !6959, file: !6960, line: 71, baseType: !6980, size: 64, offset: 704)
!6980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6981, size: 64)
!6981 = !DISubroutineType(types: !6982)
!6982 = !{!3256, !6545}
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !6959, file: !6960, line: 73, baseType: !6984, size: 64, offset: 768)
!6984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6985, size: 64)
!6985 = !DISubroutineType(types: !6986)
!6986 = !{null, !6545, !2903, !2904}
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !6959, file: !6960, line: 75, baseType: !6571, size: 64, offset: 832)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6959, file: !6960, line: 77, baseType: !6690, size: 64, offset: 896)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !6540, file: !6541, line: 541, baseType: !6155, size: 64, offset: 5248)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6540, file: !6541, line: 543, baseType: !6567, size: 64, offset: 5312)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !6540, file: !6541, line: 544, baseType: !6992, size: 64, offset: 5376)
!6992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6993, size: 64)
!6993 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !6541, line: 45, flags: DIFlagFwdDecl)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !6540, file: !6541, line: 545, baseType: !6995, size: 64, offset: 5440)
!6995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6996, size: 64)
!6996 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !6541, line: 47, flags: DIFlagFwdDecl)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !6540, file: !6541, line: 547, baseType: !771, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !6540, file: !6541, line: 548, baseType: !771, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !6540, file: !6541, line: 549, baseType: !771, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !6540, file: !6541, line: 550, baseType: !771, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !264, file: !31, line: 2125, baseType: !7002, size: 256, offset: 13760)
!7002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6156, size: 256, elements: !2271)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !264, file: !31, line: 2126, baseType: !6156, size: 64, offset: 14016)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !264, file: !31, line: 2128, baseType: !7005, size: 64, offset: 14080)
!7005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7006, size: 64)
!7006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7007)
!7007 = !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !31, line: 2128, flags: DIFlagFwdDecl)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !264, file: !31, line: 2132, baseType: !7, size: 32, offset: 14144)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !264, file: !31, line: 2134, baseType: !581, size: 16, offset: 14176)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !264, file: !31, line: 2139, baseType: !2313, size: 16, offset: 14192)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !264, file: !31, line: 2140, baseType: !7012, size: 512, offset: 14208)
!7012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7013, size: 512, elements: !269)
!7013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !31, line: 793, size: 32, elements: !7014)
!7014 = !{!7015, !7016}
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7013, file: !31, line: 794, baseType: !581, size: 16)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !7013, file: !31, line: 795, baseType: !581, size: 16, offset: 16)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !264, file: !31, line: 2141, baseType: !7018, size: 128, offset: 14720)
!7018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 128, elements: !269)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !264, file: !31, line: 2149, baseType: !7020, size: 64, offset: 14848)
!7020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7021, size: 64)
!7021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !7022, line: 539, size: 10112, elements: !7023)
!7022 = !DIFile(filename: "./include/linux/phy.h", directory: "/home/lizy2001/genbc/linux")
!7023 = !{!7024, !7116, !7236, !7237, !7243, !7244, !7245, !7246, !7247, !7248, !7249, !7250, !7251, !7252, !7253, !7254, !7255, !7256, !7257, !7267, !7268, !7299, !7300, !7301, !7302, !7303, !7304, !7305, !7306, !7307, !7308, !7309, !7310, !7311, !7312, !7313, !7314, !7315, !7316, !7317, !7324, !7325, !7326, !7329, !7332, !7333, !7359, !7360, !7361, !7365}
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "mdio", scope: !7021, file: !7022, line: 540, baseType: !7025, size: 6336)
!7025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mdio_device", file: !7026, line: 34, size: 6336, elements: !7027)
!7026 = !DIFile(filename: "./include/linux/mdio.h", directory: "/home/lizy2001/genbc/linux")
!7027 = !{!7028, !7029, !7101, !7102, !7103, !7107, !7108, !7109, !7110, !7111, !7114, !7115}
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7025, file: !7026, line: 35, baseType: !6540, size: 5568)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !7025, file: !7026, line: 37, baseType: !7030, size: 64, offset: 5568)
!7030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7031, size: 64)
!7031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_bus", file: !7022, line: 301, size: 20544, elements: !7032)
!7032 = !{!7033, !7034, !7035, !7039, !7040, !7044, !7048, !7052, !7061, !7062, !7063, !7070, !7071, !7074, !7075, !7076, !7078, !7079, !7080, !7083, !7090, !7091}
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7031, file: !7022, line: 302, baseType: !980, size: 64)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7031, file: !7022, line: 303, baseType: !292, size: 64, offset: 64)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7031, file: !7022, line: 304, baseType: !7036, size: 488, offset: 128)
!7036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 488, elements: !7037)
!7037 = !{!7038}
!7038 = !DISubrange(count: 61)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !7031, file: !7022, line: 305, baseType: !591, size: 64, offset: 640)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !7031, file: !7022, line: 307, baseType: !7041, size: 64, offset: 704)
!7041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7042, size: 64)
!7042 = !DISubroutineType(types: !7043)
!7043 = !{!32, !7030, !32, !32}
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !7031, file: !7022, line: 309, baseType: !7045, size: 64, offset: 768)
!7045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7046, size: 64)
!7046 = !DISubroutineType(types: !7047)
!7047 = !{!32, !7030, !32, !32, !581}
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !7031, file: !7022, line: 311, baseType: !7049, size: 64, offset: 832)
!7049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7050, size: 64)
!7050 = !DISubroutineType(types: !7051)
!7051 = !{!32, !7030}
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !7031, file: !7022, line: 314, baseType: !7053, size: 8192, offset: 896)
!7053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7054, size: 8192, elements: !819)
!7054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mdio_bus_stats", file: !7022, line: 250, size: 256, elements: !7055)
!7055 = !{!7056, !7057, !7058, !7059, !7060}
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "transfers", scope: !7054, file: !7022, line: 251, baseType: !6511, size: 64)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !7054, file: !7022, line: 252, baseType: !6511, size: 64, offset: 64)
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "writes", scope: !7054, file: !7022, line: 253, baseType: !6511, size: 64, offset: 128)
!7059 = !DIDerivedType(tag: DW_TAG_member, name: "reads", scope: !7054, file: !7022, line: 254, baseType: !6511, size: 64, offset: 192)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !7054, file: !7022, line: 256, baseType: !3069, offset: 256)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_lock", scope: !7031, file: !7022, line: 320, baseType: !1664, size: 192, offset: 9088)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !7031, file: !7022, line: 323, baseType: !6545, size: 64, offset: 9280)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7031, file: !7022, line: 330, baseType: !7064, size: 32, offset: 9344)
!7064 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !7031, file: !7022, line: 325, baseType: !7, size: 32, elements: !7065)
!7065 = !{!7066, !7067, !7068, !7069}
!7066 = !DIEnumerator(name: "MDIOBUS_ALLOCATED", value: 1, isUnsigned: true)
!7067 = !DIEnumerator(name: "MDIOBUS_REGISTERED", value: 2, isUnsigned: true)
!7068 = !DIEnumerator(name: "MDIOBUS_UNREGISTERED", value: 3, isUnsigned: true)
!7069 = !DIEnumerator(name: "MDIOBUS_RELEASED", value: 4, isUnsigned: true)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7031, file: !7022, line: 333, baseType: !6540, size: 5568, offset: 9408)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_map", scope: !7031, file: !7022, line: 336, baseType: !7072, size: 2048, offset: 14976)
!7072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7073, size: 2048, elements: !819)
!7073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7025, size: 64)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "phy_mask", scope: !7031, file: !7022, line: 339, baseType: !987, size: 32, offset: 17024)
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "phy_ignore_ta_mask", scope: !7031, file: !7022, line: 342, baseType: !987, size: 32, offset: 17056)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7031, file: !7022, line: 348, baseType: !7077, size: 1024, offset: 17088)
!7077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 1024, elements: !819)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "reset_delay_us", scope: !7031, file: !7022, line: 351, baseType: !32, size: 32, offset: 18112)
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "reset_post_delay_us", scope: !7031, file: !7022, line: 353, baseType: !32, size: 32, offset: 18144)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "reset_gpiod", scope: !7031, file: !7022, line: 355, baseType: !7081, size: 64, offset: 18176)
!7081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7082, size: 64)
!7082 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !7026, line: 19, flags: DIFlagFwdDecl)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "probe_capabilities", scope: !7031, file: !7022, line: 363, baseType: !7084, size: 32, offset: 18240)
!7084 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !7031, file: !7022, line: 358, baseType: !7, size: 32, elements: !7085)
!7085 = !{!7086, !7087, !7088, !7089}
!7086 = !DIEnumerator(name: "MDIOBUS_NO_CAP", value: 0, isUnsigned: true)
!7087 = !DIEnumerator(name: "MDIOBUS_C22", value: 1, isUnsigned: true)
!7088 = !DIEnumerator(name: "MDIOBUS_C45", value: 2, isUnsigned: true)
!7089 = !DIEnumerator(name: "MDIOBUS_C22_C45", value: 3, isUnsigned: true)
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "shared_lock", scope: !7031, file: !7022, line: 366, baseType: !1664, size: 192, offset: 18304)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !7031, file: !7022, line: 369, baseType: !7092, size: 2048, offset: 18496)
!7092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7093, size: 2048, elements: !819)
!7093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7094, size: 64)
!7094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_package_shared", file: !7022, line: 271, size: 256, elements: !7095)
!7095 = !{!7096, !7097, !7098, !7099, !7100}
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !7094, file: !7022, line: 272, baseType: !32, size: 32)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !7094, file: !7022, line: 273, baseType: !568, size: 32, offset: 32)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7094, file: !7022, line: 274, baseType: !312, size: 64, offset: 64)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !7094, file: !7022, line: 275, baseType: !1039, size: 64, offset: 128)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !7094, file: !7022, line: 283, baseType: !591, size: 64, offset: 192)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "modalias", scope: !7025, file: !7026, line: 38, baseType: !4623, size: 256, offset: 5632)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "bus_match", scope: !7025, file: !7026, line: 40, baseType: !6614, size: 64, offset: 5888)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "device_free", scope: !7025, file: !7026, line: 41, baseType: !7104, size: 64, offset: 5952)
!7104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7105, size: 64)
!7105 = !DISubroutineType(types: !7106)
!7106 = !{null, !7073}
!7107 = !DIDerivedType(tag: DW_TAG_member, name: "device_remove", scope: !7025, file: !7026, line: 42, baseType: !7104, size: 64, offset: 6016)
!7108 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !7025, file: !7026, line: 45, baseType: !32, size: 32, offset: 6080)
!7109 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7025, file: !7026, line: 46, baseType: !32, size: 32, offset: 6112)
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "reset_gpio", scope: !7025, file: !7026, line: 47, baseType: !7081, size: 64, offset: 6144)
!7111 = !DIDerivedType(tag: DW_TAG_member, name: "reset_ctrl", scope: !7025, file: !7026, line: 48, baseType: !7112, size: 64, offset: 6208)
!7112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7113, size: 64)
!7113 = !DICompositeType(tag: DW_TAG_structure_type, name: "reset_control", file: !7026, line: 21, flags: DIFlagFwdDecl)
!7114 = !DIDerivedType(tag: DW_TAG_member, name: "reset_assert_delay", scope: !7025, file: !7026, line: 49, baseType: !7, size: 32, offset: 6272)
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "reset_deassert_delay", scope: !7025, file: !7026, line: 50, baseType: !7, size: 32, offset: 6304)
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !7021, file: !7022, line: 544, baseType: !7117, size: 64, offset: 6336)
!7117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7118, size: 64)
!7118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_driver", file: !7022, line: 694, size: 3840, elements: !7119)
!7119 = !{!7120, !7125, !7126, !7127, !7128, !7131, !7132, !7133, !7137, !7138, !7139, !7140, !7141, !7142, !7143, !7144, !7145, !7146, !7147, !7148, !7159, !7163, !7164, !7168, !7172, !7173, !7177, !7181, !7182, !7186, !7190, !7194, !7195, !7208, !7212, !7213, !7217, !7221, !7226, !7230, !7234, !7235}
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "mdiodrv", scope: !7118, file: !7022, line: 695, baseType: !7121, size: 1216)
!7121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mdio_driver_common", file: !7026, line: 55, size: 1216, elements: !7122)
!7122 = !{!7123, !7124}
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7121, file: !7026, line: 56, baseType: !6618, size: 1152)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7121, file: !7026, line: 57, baseType: !32, size: 32, offset: 1152)
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !7118, file: !7022, line: 696, baseType: !987, size: 32, offset: 1216)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7118, file: !7022, line: 697, baseType: !1038, size: 64, offset: 1280)
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id_mask", scope: !7118, file: !7022, line: 698, baseType: !987, size: 32, offset: 1344)
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !7118, file: !7022, line: 699, baseType: !7129, size: 64, offset: 1408)
!7129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7130)
!7130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4257, size: 64)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7118, file: !7022, line: 700, baseType: !987, size: 32, offset: 1472)
!7132 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !7118, file: !7022, line: 701, baseType: !3256, size: 64, offset: 1536)
!7133 = !DIDerivedType(tag: DW_TAG_member, name: "soft_reset", scope: !7118, file: !7022, line: 706, baseType: !7134, size: 64, offset: 1600)
!7134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7135, size: 64)
!7135 = !DISubroutineType(types: !7136)
!7136 = !{!32, !7020}
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "config_init", scope: !7118, file: !7022, line: 712, baseType: !7134, size: 64, offset: 1664)
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !7118, file: !7022, line: 718, baseType: !7134, size: 64, offset: 1728)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "get_features", scope: !7118, file: !7022, line: 724, baseType: !7134, size: 64, offset: 1792)
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !7118, file: !7022, line: 728, baseType: !7134, size: 64, offset: 1856)
!7141 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !7118, file: !7022, line: 730, baseType: !7134, size: 64, offset: 1920)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "config_aneg", scope: !7118, file: !7022, line: 738, baseType: !7134, size: 64, offset: 1984)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "aneg_done", scope: !7118, file: !7022, line: 741, baseType: !7134, size: 64, offset: 2048)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "read_status", scope: !7118, file: !7022, line: 744, baseType: !7134, size: 64, offset: 2112)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "ack_interrupt", scope: !7118, file: !7022, line: 747, baseType: !7134, size: 64, offset: 2176)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "config_intr", scope: !7118, file: !7022, line: 750, baseType: !7134, size: 64, offset: 2240)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "did_interrupt", scope: !7118, file: !7022, line: 757, baseType: !7134, size: 64, offset: 2304)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "handle_interrupt", scope: !7118, file: !7022, line: 760, baseType: !7149, size: 64, offset: 2368)
!7149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7150, size: 64)
!7150 = !DISubroutineType(types: !7151)
!7151 = !{!7152, !7020}
!7152 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !7153, line: 17, baseType: !7154)
!7153 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!7154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !7153, line: 11, baseType: !7, size: 32, elements: !7155)
!7155 = !{!7156, !7157, !7158}
!7156 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!7157 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!7158 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !7118, file: !7022, line: 763, baseType: !7160, size: 64, offset: 2432)
!7160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7161, size: 64)
!7161 = !DISubroutineType(types: !7162)
!7162 = !{null, !7020}
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "match_phy_device", scope: !7118, file: !7022, line: 770, baseType: !7134, size: 64, offset: 2496)
!7164 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !7118, file: !7022, line: 778, baseType: !7165, size: 64, offset: 2560)
!7165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7166, size: 64)
!7166 = !DISubroutineType(types: !7167)
!7167 = !{!32, !7020, !5559}
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !7118, file: !7022, line: 784, baseType: !7169, size: 64, offset: 2624)
!7169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7170, size: 64)
!7170 = !DISubroutineType(types: !7171)
!7171 = !{null, !7020, !5559}
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "link_change_notify", scope: !7118, file: !7022, line: 794, baseType: !7160, size: 64, offset: 2688)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "read_mmd", scope: !7118, file: !7022, line: 806, baseType: !7174, size: 64, offset: 2752)
!7174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7175, size: 64)
!7175 = !DISubroutineType(types: !7176)
!7176 = !{!32, !7020, !32, !581}
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "write_mmd", scope: !7118, file: !7022, line: 818, baseType: !7178, size: 64, offset: 2816)
!7178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7179, size: 64)
!7179 = !DISubroutineType(types: !7180)
!7180 = !{!32, !7020, !32, !581, !581}
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "read_page", scope: !7118, file: !7022, line: 822, baseType: !7134, size: 64, offset: 2880)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "write_page", scope: !7118, file: !7022, line: 824, baseType: !7183, size: 64, offset: 2944)
!7183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7184, size: 64)
!7184 = !DISubroutineType(types: !7185)
!7185 = !{!32, !7020, !32}
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "module_info", scope: !7118, file: !7022, line: 830, baseType: !7187, size: 64, offset: 3008)
!7187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7188, size: 64)
!7188 = !DISubroutineType(types: !7189)
!7189 = !{!32, !7020, !5924}
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "module_eeprom", scope: !7118, file: !7022, line: 837, baseType: !7191, size: 64, offset: 3072)
!7191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7192, size: 64)
!7192 = !DISubroutineType(types: !7193)
!7193 = !{!32, !7020, !5603, !793}
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "cable_test_start", scope: !7118, file: !7022, line: 841, baseType: !7134, size: 64, offset: 3136)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "cable_test_tdr_start", scope: !7118, file: !7022, line: 844, baseType: !7196, size: 64, offset: 3200)
!7196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7197, size: 64)
!7197 = !DISubroutineType(types: !7198)
!7198 = !{!32, !7020, !7199}
!7199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7200, size: 64)
!7200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7201)
!7201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_tdr_config", file: !7022, line: 663, size: 128, elements: !7202)
!7202 = !{!7203, !7204, !7205, !7206}
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !7201, file: !7022, line: 664, baseType: !987, size: 32)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !7201, file: !7022, line: 665, baseType: !987, size: 32, offset: 32)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !7201, file: !7022, line: 666, baseType: !987, size: 32, offset: 64)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "pair", scope: !7201, file: !7022, line: 667, baseType: !7207, size: 8, offset: 96)
!7207 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !332, line: 16, baseType: !5993)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "cable_test_get_status", scope: !7118, file: !7022, line: 851, baseType: !7209, size: 64, offset: 3264)
!7209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7210, size: 64)
!7210 = !DISubroutineType(types: !7211)
!7211 = !{!32, !7020, !2006}
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !7118, file: !7022, line: 855, baseType: !7134, size: 64, offset: 3328)
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !7118, file: !7022, line: 857, baseType: !7214, size: 64, offset: 3392)
!7214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7215, size: 64)
!7215 = !DISubroutineType(types: !7216)
!7216 = !{null, !7020, !793}
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "get_stats", scope: !7118, file: !7022, line: 859, baseType: !7218, size: 64, offset: 3456)
!7218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7219, size: 64)
!7219 = !DISubroutineType(types: !7220)
!7220 = !{null, !7020, !5712, !5370}
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !7118, file: !7022, line: 864, baseType: !7222, size: 64, offset: 3520)
!7222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7223, size: 64)
!7223 = !DISubroutineType(types: !7224)
!7224 = !{!32, !7020, !7225, !591}
!7225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5956, size: 64)
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !7118, file: !7022, line: 867, baseType: !7227, size: 64, offset: 3584)
!7227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7228, size: 64)
!7228 = !DISubroutineType(types: !7229)
!7229 = !{!32, !7020, !7225, !3256}
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "set_loopback", scope: !7118, file: !7022, line: 871, baseType: !7231, size: 64, offset: 3648)
!7231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7232, size: 64)
!7232 = !DISubroutineType(types: !7233)
!7233 = !{!32, !7020, !771}
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "get_sqi", scope: !7118, file: !7022, line: 873, baseType: !7134, size: 64, offset: 3712)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "get_sqi_max", scope: !7118, file: !7022, line: 875, baseType: !7134, size: 64, offset: 3776)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "phy_id", scope: !7021, file: !7022, line: 546, baseType: !987, size: 32, offset: 6400)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "c45_ids", scope: !7021, file: !7022, line: 548, baseType: !7238, size: 1088, offset: 6432)
!7238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_c45_device_ids", file: !7022, line: 461, size: 1088, elements: !7239)
!7239 = !{!7240, !7241, !7242}
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "devices_in_package", scope: !7238, file: !7022, line: 462, baseType: !987, size: 32)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "mmds_present", scope: !7238, file: !7022, line: 463, baseType: !987, size: 32, offset: 32)
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "device_ids", scope: !7238, file: !7022, line: 464, baseType: !4143, size: 1024, offset: 64)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "is_c45", scope: !7021, file: !7022, line: 549, baseType: !7, size: 1, offset: 7520, flags: DIFlagBitField, extraData: i64 7520)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "is_internal", scope: !7021, file: !7022, line: 550, baseType: !7, size: 1, offset: 7521, flags: DIFlagBitField, extraData: i64 7520)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "is_pseudo_fixed_link", scope: !7021, file: !7022, line: 551, baseType: !7, size: 1, offset: 7522, flags: DIFlagBitField, extraData: i64 7520)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "is_gigabit_capable", scope: !7021, file: !7022, line: 552, baseType: !7, size: 1, offset: 7523, flags: DIFlagBitField, extraData: i64 7520)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "has_fixups", scope: !7021, file: !7022, line: 553, baseType: !7, size: 1, offset: 7524, flags: DIFlagBitField, extraData: i64 7520)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "suspended", scope: !7021, file: !7022, line: 554, baseType: !7, size: 1, offset: 7525, flags: DIFlagBitField, extraData: i64 7520)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_by_mdio_bus", scope: !7021, file: !7022, line: 555, baseType: !7, size: 1, offset: 7526, flags: DIFlagBitField, extraData: i64 7520)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_links", scope: !7021, file: !7022, line: 556, baseType: !7, size: 1, offset: 7527, flags: DIFlagBitField, extraData: i64 7520)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_enabled", scope: !7021, file: !7022, line: 557, baseType: !7, size: 1, offset: 7528, flags: DIFlagBitField, extraData: i64 7520)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "downshifted_rate", scope: !7021, file: !7022, line: 558, baseType: !7, size: 1, offset: 7529, flags: DIFlagBitField, extraData: i64 7520)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !7021, file: !7022, line: 560, baseType: !7, size: 1, offset: 7530, flags: DIFlagBitField, extraData: i64 7520)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7021, file: !7022, line: 562, baseType: !7, size: 1, offset: 7531, flags: DIFlagBitField, extraData: i64 7520)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg_complete", scope: !7021, file: !7022, line: 563, baseType: !7, size: 1, offset: 7532, flags: DIFlagBitField, extraData: i64 7520)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts", scope: !7021, file: !7022, line: 566, baseType: !7, size: 1, offset: 7533, flags: DIFlagBitField, extraData: i64 7520)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7021, file: !7022, line: 568, baseType: !7258, size: 32, offset: 7552)
!7258 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "phy_state", file: !7022, line: 443, baseType: !7, size: 32, elements: !7259)
!7259 = !{!7260, !7261, !7262, !7263, !7264, !7265, !7266}
!7260 = !DIEnumerator(name: "PHY_DOWN", value: 0, isUnsigned: true)
!7261 = !DIEnumerator(name: "PHY_READY", value: 1, isUnsigned: true)
!7262 = !DIEnumerator(name: "PHY_HALTED", value: 2, isUnsigned: true)
!7263 = !DIEnumerator(name: "PHY_UP", value: 3, isUnsigned: true)
!7264 = !DIEnumerator(name: "PHY_RUNNING", value: 4, isUnsigned: true)
!7265 = !DIEnumerator(name: "PHY_NOLINK", value: 5, isUnsigned: true)
!7266 = !DIEnumerator(name: "PHY_CABLETEST", value: 6, isUnsigned: true)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !7021, file: !7022, line: 570, baseType: !987, size: 32, offset: 7584)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !7021, file: !7022, line: 572, baseType: !7269, size: 32, offset: 7616)
!7269 = !DIDerivedType(tag: DW_TAG_typedef, name: "phy_interface_t", file: !7022, line: 148, baseType: !7270)
!7270 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7022, line: 118, baseType: !7, size: 32, elements: !7271)
!7271 = !{!7272, !7273, !7274, !7275, !7276, !7277, !7278, !7279, !7280, !7281, !7282, !7283, !7284, !7285, !7286, !7287, !7288, !7289, !7290, !7291, !7292, !7293, !7294, !7295, !7296, !7297, !7298}
!7272 = !DIEnumerator(name: "PHY_INTERFACE_MODE_NA", value: 0, isUnsigned: true)
!7273 = !DIEnumerator(name: "PHY_INTERFACE_MODE_INTERNAL", value: 1, isUnsigned: true)
!7274 = !DIEnumerator(name: "PHY_INTERFACE_MODE_MII", value: 2, isUnsigned: true)
!7275 = !DIEnumerator(name: "PHY_INTERFACE_MODE_GMII", value: 3, isUnsigned: true)
!7276 = !DIEnumerator(name: "PHY_INTERFACE_MODE_SGMII", value: 4, isUnsigned: true)
!7277 = !DIEnumerator(name: "PHY_INTERFACE_MODE_TBI", value: 5, isUnsigned: true)
!7278 = !DIEnumerator(name: "PHY_INTERFACE_MODE_REVMII", value: 6, isUnsigned: true)
!7279 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RMII", value: 7, isUnsigned: true)
!7280 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII", value: 8, isUnsigned: true)
!7281 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII_ID", value: 9, isUnsigned: true)
!7282 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII_RXID", value: 10, isUnsigned: true)
!7283 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RGMII_TXID", value: 11, isUnsigned: true)
!7284 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RTBI", value: 12, isUnsigned: true)
!7285 = !DIEnumerator(name: "PHY_INTERFACE_MODE_SMII", value: 13, isUnsigned: true)
!7286 = !DIEnumerator(name: "PHY_INTERFACE_MODE_XGMII", value: 14, isUnsigned: true)
!7287 = !DIEnumerator(name: "PHY_INTERFACE_MODE_XLGMII", value: 15, isUnsigned: true)
!7288 = !DIEnumerator(name: "PHY_INTERFACE_MODE_MOCA", value: 16, isUnsigned: true)
!7289 = !DIEnumerator(name: "PHY_INTERFACE_MODE_QSGMII", value: 17, isUnsigned: true)
!7290 = !DIEnumerator(name: "PHY_INTERFACE_MODE_TRGMII", value: 18, isUnsigned: true)
!7291 = !DIEnumerator(name: "PHY_INTERFACE_MODE_1000BASEX", value: 19, isUnsigned: true)
!7292 = !DIEnumerator(name: "PHY_INTERFACE_MODE_2500BASEX", value: 20, isUnsigned: true)
!7293 = !DIEnumerator(name: "PHY_INTERFACE_MODE_RXAUI", value: 21, isUnsigned: true)
!7294 = !DIEnumerator(name: "PHY_INTERFACE_MODE_XAUI", value: 22, isUnsigned: true)
!7295 = !DIEnumerator(name: "PHY_INTERFACE_MODE_10GBASER", value: 23, isUnsigned: true)
!7296 = !DIEnumerator(name: "PHY_INTERFACE_MODE_USXGMII", value: 24, isUnsigned: true)
!7297 = !DIEnumerator(name: "PHY_INTERFACE_MODE_10GKR", value: 25, isUnsigned: true)
!7298 = !DIEnumerator(name: "PHY_INTERFACE_MODE_MAX", value: 26, isUnsigned: true)
!7299 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !7021, file: !7022, line: 578, baseType: !32, size: 32, offset: 7648)
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !7021, file: !7022, line: 579, baseType: !32, size: 32, offset: 7680)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "pause", scope: !7021, file: !7022, line: 580, baseType: !32, size: 32, offset: 7712)
!7302 = !DIDerivedType(tag: DW_TAG_member, name: "asym_pause", scope: !7021, file: !7022, line: 581, baseType: !32, size: 32, offset: 7744)
!7303 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_get", scope: !7021, file: !7022, line: 582, baseType: !794, size: 8, offset: 7776)
!7304 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_set", scope: !7021, file: !7022, line: 583, baseType: !794, size: 8, offset: 7784)
!7305 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !7021, file: !7022, line: 584, baseType: !794, size: 8, offset: 7792)
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !7021, file: !7022, line: 588, baseType: !6009, size: 128, offset: 7808)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !7021, file: !7022, line: 589, baseType: !6009, size: 128, offset: 7936)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !7021, file: !7022, line: 590, baseType: !6009, size: 128, offset: 8064)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "adv_old", scope: !7021, file: !7022, line: 592, baseType: !6009, size: 128, offset: 8192)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "eee_broken_modes", scope: !7021, file: !7022, line: 595, baseType: !987, size: 32, offset: 8320)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7021, file: !7022, line: 609, baseType: !32, size: 32, offset: 8352)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !7021, file: !7022, line: 613, baseType: !591, size: 64, offset: 8384)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !7021, file: !7022, line: 617, baseType: !7093, size: 64, offset: 8448)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7021, file: !7022, line: 620, baseType: !415, size: 64, offset: 8512)
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "ehdr", scope: !7021, file: !7022, line: 621, baseType: !591, size: 64, offset: 8576)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "nest", scope: !7021, file: !7022, line: 622, baseType: !854, size: 64, offset: 8640)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "state_queue", scope: !7021, file: !7022, line: 625, baseType: !7318, size: 704, offset: 8704)
!7318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !2829, line: 115, size: 704, elements: !7319)
!7319 = !{!7320, !7321, !7322, !7323}
!7320 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !7318, file: !2829, line: 116, baseType: !2828, size: 256)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !7318, file: !2829, line: 117, baseType: !3233, size: 320, offset: 256)
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7318, file: !2829, line: 120, baseType: !4715, size: 64, offset: 576)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !7318, file: !2829, line: 121, baseType: !32, size: 32, offset: 640)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7021, file: !7022, line: 627, baseType: !1664, size: 192, offset: 9408)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus_attached", scope: !7021, file: !7022, line: 630, baseType: !771, size: 8, offset: 9600)
!7326 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !7021, file: !7022, line: 631, baseType: !7327, size: 64, offset: 9664)
!7327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7328, size: 64)
!7328 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !31, line: 60, flags: DIFlagFwdDecl)
!7329 = !DIDerivedType(tag: DW_TAG_member, name: "phylink", scope: !7021, file: !7022, line: 632, baseType: !7330, size: 64, offset: 9728)
!7330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7331, size: 64)
!7331 = !DICompositeType(tag: DW_TAG_structure_type, name: "phylink", file: !7022, line: 237, flags: DIFlagFwdDecl)
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "attached_dev", scope: !7021, file: !7022, line: 633, baseType: !290, size: 64, offset: 9792)
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "mii_ts", scope: !7021, file: !7022, line: 634, baseType: !7334, size: 64, offset: 9856)
!7334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7335, size: 64)
!7335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mii_timestamper", file: !7336, line: 46, size: 384, elements: !7337)
!7336 = !DIFile(filename: "./include/linux/mii_timestamper.h", directory: "/home/lizy2001/genbc/linux")
!7337 = !{!7338, !7342, !7346, !7350, !7354, !7358}
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "rxtstamp", scope: !7335, file: !7336, line: 47, baseType: !7339, size: 64)
!7339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7340, size: 64)
!7340 = !DISubroutineType(types: !7341)
!7341 = !{!771, !7334, !415, !32}
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "txtstamp", scope: !7335, file: !7336, line: 50, baseType: !7343, size: 64, offset: 64)
!7343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7344, size: 64)
!7344 = !DISubroutineType(types: !7345)
!7345 = !{null, !7334, !415, !32}
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp", scope: !7335, file: !7336, line: 53, baseType: !7347, size: 64, offset: 128)
!7347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7348, size: 64)
!7348 = !DISubroutineType(types: !7349)
!7349 = !{!32, !7334, !597}
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !7335, file: !7336, line: 56, baseType: !7351, size: 64, offset: 192)
!7351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7352, size: 64)
!7352 = !DISubroutineType(types: !7353)
!7353 = !{null, !7334, !7020}
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "ts_info", scope: !7335, file: !7336, line: 59, baseType: !7355, size: 64, offset: 256)
!7355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7356, size: 64)
!7356 = !DISubroutineType(types: !7357)
!7357 = !{!32, !7334, !5909}
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !7335, file: !7336, line: 62, baseType: !6545, size: 64, offset: 320)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "mdix", scope: !7021, file: !7022, line: 636, baseType: !794, size: 8, offset: 9920)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "mdix_ctrl", scope: !7021, file: !7022, line: 637, baseType: !794, size: 8, offset: 9928)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "phy_link_change", scope: !7021, file: !7022, line: 639, baseType: !7362, size: 64, offset: 9984)
!7362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7363, size: 64)
!7363 = !DISubroutineType(types: !7364)
!7364 = !{null, !7020, !771}
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "adjust_link", scope: !7021, file: !7022, line: 640, baseType: !405, size: 64, offset: 10048)
!7366 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !264, file: !31, line: 2150, baseType: !7327, size: 64, offset: 14912)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !264, file: !31, line: 2151, baseType: !7368, size: 64, offset: 14976)
!7368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !264, file: !31, line: 2152, baseType: !7368, size: 64, offset: 15040)
!7370 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !264, file: !31, line: 2153, baseType: !771, size: 8, offset: 15104)
!7371 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !264, file: !31, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!7372 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !264, file: !31, line: 2156, baseType: !284, size: 128, offset: 15168)
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !264, file: !31, line: 2162, baseType: !7374, size: 64, offset: 15296)
!7374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7375, size: 64)
!7375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7376)
!7376 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !31, line: 68, flags: DIFlagFwdDecl)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !264, file: !31, line: 2163, baseType: !7378, size: 64, offset: 15360)
!7378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7379, size: 64)
!7379 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !31, line: 69, flags: DIFlagFwdDecl)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !264, file: !31, line: 2166, baseType: !7381, size: 384, offset: 15424)
!7381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7382, size: 384, elements: !1591)
!7382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !31, line: 889, size: 128, elements: !7383)
!7383 = !{!7384, !7385}
!7384 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7382, file: !31, line: 890, baseType: !1088, size: 64)
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !7382, file: !31, line: 891, baseType: !7386, size: 64, offset: 64)
!7386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7387, size: 64)
!7387 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !31, line: 880, flags: DIFlagFwdDecl)
!7388 = !{!7389, !7390, !7391, !7392, !7393, !7394}
!7389 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!7390 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!7391 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!7392 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!7393 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!7394 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!7395 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2829, line: 30, baseType: !998, size: 64, elements: !7396)
!7396 = !{!7397, !7398, !7399, !7400, !7401, !7402, !7403, !7404, !7405, !7406, !7407, !7408, !7409, !7410, !7411, !7412, !7413, !7414, !7415, !7416, !7417, !7418, !7419, !7420, !7421, !7422, !7423, !7424, !7425}
!7397 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!7398 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!7399 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!7400 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!7401 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!7402 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!7403 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!7404 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!7405 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!7406 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!7407 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!7408 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!7409 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!7410 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!7411 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!7412 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!7413 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!7414 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!7415 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!7416 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!7417 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!7418 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!7419 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!7420 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!7421 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!7422 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!7423 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!7424 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!7425 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!7426 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7427, line: 10, baseType: !7, size: 32, elements: !7428)
!7427 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!7428 = !{!7429, !7430}
!7429 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!7430 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!7431 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_mode_bit_indices", file: !209, line: 1521, baseType: !7, size: 32, elements: !7432)
!7432 = !{!7433, !7434, !7435, !7436, !7437, !7438, !7439, !7440, !7441, !7442, !7443, !7444, !7445, !7446, !7447, !7448, !7449, !7450, !7451, !7452, !7453, !7454, !7455, !7456, !7457, !7458, !7459, !7460, !7461, !7462, !7463, !7464, !7465, !7466, !7467, !7468, !7469, !7470, !7471, !7472, !7473, !7474, !7475, !7476, !7477, !7478, !7479, !7480, !7481, !7482, !7483, !7484, !7485, !7486, !7487, !7488, !7489, !7490, !7491, !7492, !7493, !7494, !7495, !7496, !7497, !7498, !7499, !7500, !7501, !7502, !7503, !7504, !7505, !7506, !7507, !7508, !7509, !7510, !7511, !7512, !7513, !7514, !7515, !7516, !7517, !7518, !7519, !7520, !7521, !7522, !7523, !7524, !7525}
!7433 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Half_BIT", value: 0, isUnsigned: true)
!7434 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10baseT_Full_BIT", value: 1, isUnsigned: true)
!7435 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Half_BIT", value: 2, isUnsigned: true)
!7436 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT_Full_BIT", value: 3, isUnsigned: true)
!7437 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Half_BIT", value: 4, isUnsigned: true)
!7438 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT_Full_BIT", value: 5, isUnsigned: true)
!7439 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Autoneg_BIT", value: 6, isUnsigned: true)
!7440 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_TP_BIT", value: 7, isUnsigned: true)
!7441 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_AUI_BIT", value: 8, isUnsigned: true)
!7442 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_MII_BIT", value: 9, isUnsigned: true)
!7443 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FIBRE_BIT", value: 10, isUnsigned: true)
!7444 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_BNC_BIT", value: 11, isUnsigned: true)
!7445 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseT_Full_BIT", value: 12, isUnsigned: true)
!7446 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Pause_BIT", value: 13, isUnsigned: true)
!7447 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Asym_Pause_BIT", value: 14, isUnsigned: true)
!7448 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseX_Full_BIT", value: 15, isUnsigned: true)
!7449 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_Backplane_BIT", value: 16, isUnsigned: true)
!7450 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseKX_Full_BIT", value: 17, isUnsigned: true)
!7451 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKX4_Full_BIT", value: 18, isUnsigned: true)
!7452 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseKR_Full_BIT", value: 19, isUnsigned: true)
!7453 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseR_FEC_BIT", value: 20, isUnsigned: true)
!7454 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseMLD2_Full_BIT", value: 21, isUnsigned: true)
!7455 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_20000baseKR2_Full_BIT", value: 22, isUnsigned: true)
!7456 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseKR4_Full_BIT", value: 23, isUnsigned: true)
!7457 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseCR4_Full_BIT", value: 24, isUnsigned: true)
!7458 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseSR4_Full_BIT", value: 25, isUnsigned: true)
!7459 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_40000baseLR4_Full_BIT", value: 26, isUnsigned: true)
!7460 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseKR4_Full_BIT", value: 27, isUnsigned: true)
!7461 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseCR4_Full_BIT", value: 28, isUnsigned: true)
!7462 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseSR4_Full_BIT", value: 29, isUnsigned: true)
!7463 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_56000baseLR4_Full_BIT", value: 30, isUnsigned: true)
!7464 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseCR_Full_BIT", value: 31, isUnsigned: true)
!7465 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseKR_Full_BIT", value: 32, isUnsigned: true)
!7466 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_25000baseSR_Full_BIT", value: 33, isUnsigned: true)
!7467 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR2_Full_BIT", value: 34, isUnsigned: true)
!7468 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR2_Full_BIT", value: 35, isUnsigned: true)
!7469 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR4_Full_BIT", value: 36, isUnsigned: true)
!7470 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR4_Full_BIT", value: 37, isUnsigned: true)
!7471 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR4_Full_BIT", value: 38, isUnsigned: true)
!7472 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR4_ER4_Full_BIT", value: 39, isUnsigned: true)
!7473 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR2_Full_BIT", value: 40, isUnsigned: true)
!7474 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseX_Full_BIT", value: 41, isUnsigned: true)
!7475 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseCR_Full_BIT", value: 42, isUnsigned: true)
!7476 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseSR_Full_BIT", value: 43, isUnsigned: true)
!7477 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLR_Full_BIT", value: 44, isUnsigned: true)
!7478 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseLRM_Full_BIT", value: 45, isUnsigned: true)
!7479 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_10000baseER_Full_BIT", value: 46, isUnsigned: true)
!7480 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_2500baseT_Full_BIT", value: 47, isUnsigned: true)
!7481 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_5000baseT_Full_BIT", value: 48, isUnsigned: true)
!7482 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_NONE_BIT", value: 49, isUnsigned: true)
!7483 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_RS_BIT", value: 50, isUnsigned: true)
!7484 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_BASER_BIT", value: 51, isUnsigned: true)
!7485 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseKR_Full_BIT", value: 52, isUnsigned: true)
!7486 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseSR_Full_BIT", value: 53, isUnsigned: true)
!7487 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseCR_Full_BIT", value: 54, isUnsigned: true)
!7488 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseLR_ER_FR_Full_BIT", value: 55, isUnsigned: true)
!7489 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_50000baseDR_Full_BIT", value: 56, isUnsigned: true)
!7490 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR2_Full_BIT", value: 57, isUnsigned: true)
!7491 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR2_Full_BIT", value: 58, isUnsigned: true)
!7492 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR2_Full_BIT", value: 59, isUnsigned: true)
!7493 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR2_ER2_FR2_Full_BIT", value: 60, isUnsigned: true)
!7494 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR2_Full_BIT", value: 61, isUnsigned: true)
!7495 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR4_Full_BIT", value: 62, isUnsigned: true)
!7496 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR4_Full_BIT", value: 63, isUnsigned: true)
!7497 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR4_ER4_FR4_Full_BIT", value: 64, isUnsigned: true)
!7498 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR4_Full_BIT", value: 65, isUnsigned: true)
!7499 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR4_Full_BIT", value: 66, isUnsigned: true)
!7500 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseT1_Full_BIT", value: 67, isUnsigned: true)
!7501 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_1000baseT1_Full_BIT", value: 68, isUnsigned: true)
!7502 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR8_Full_BIT", value: 69, isUnsigned: true)
!7503 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR8_Full_BIT", value: 70, isUnsigned: true)
!7504 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR8_ER8_FR8_Full_BIT", value: 71, isUnsigned: true)
!7505 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR8_Full_BIT", value: 72, isUnsigned: true)
!7506 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR8_Full_BIT", value: 73, isUnsigned: true)
!7507 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_FEC_LLRS_BIT", value: 74, isUnsigned: true)
!7508 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseKR_Full_BIT", value: 75, isUnsigned: true)
!7509 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseSR_Full_BIT", value: 76, isUnsigned: true)
!7510 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseLR_ER_FR_Full_BIT", value: 77, isUnsigned: true)
!7511 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseCR_Full_BIT", value: 78, isUnsigned: true)
!7512 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100000baseDR_Full_BIT", value: 79, isUnsigned: true)
!7513 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseKR2_Full_BIT", value: 80, isUnsigned: true)
!7514 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseSR2_Full_BIT", value: 81, isUnsigned: true)
!7515 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseLR2_ER2_FR2_Full_BIT", value: 82, isUnsigned: true)
!7516 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseDR2_Full_BIT", value: 83, isUnsigned: true)
!7517 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_200000baseCR2_Full_BIT", value: 84, isUnsigned: true)
!7518 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseKR4_Full_BIT", value: 85, isUnsigned: true)
!7519 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseSR4_Full_BIT", value: 86, isUnsigned: true)
!7520 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseLR4_ER4_FR4_Full_BIT", value: 87, isUnsigned: true)
!7521 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseDR4_Full_BIT", value: 88, isUnsigned: true)
!7522 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_400000baseCR4_Full_BIT", value: 89, isUnsigned: true)
!7523 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Half_BIT", value: 90, isUnsigned: true)
!7524 = !DIEnumerator(name: "ETHTOOL_LINK_MODE_100baseFX_Full_BIT", value: 91, isUnsigned: true)
!7525 = !DIEnumerator(name: "__ETHTOOL_LINK_MODE_MASK_NBITS", value: 92, isUnsigned: true)
!7526 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !7527, line: 305, baseType: !7, size: 32, elements: !7528)
!7527 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!7528 = !{!7529, !7530, !7531, !7532}
!7529 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!7530 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!7531 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!7532 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!7533 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !569, line: 119, baseType: !7, size: 32, elements: !7534)
!7534 = !{!7535, !7536, !7537, !7538, !7539}
!7535 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!7536 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!7537 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!7538 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!7539 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!7540 = !{!1741, !591, !7541, !312, !32, !7073, !7020, !7550, !7117, !7551, !998, !7553, !7555, !7556, !7, !3437, !980}
!7541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7542, size: 64)
!7542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_fixup", file: !7022, line: 888, size: 768, elements: !7543)
!7543 = !{!7544, !7545, !7547, !7548, !7549}
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7542, file: !7022, line: 889, baseType: !284, size: 128)
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "bus_id", scope: !7542, file: !7022, line: 890, baseType: !7546, size: 512, offset: 128)
!7546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 512, elements: !3810)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "phy_uid", scope: !7542, file: !7022, line: 891, baseType: !987, size: 32, offset: 640)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "phy_uid_mask", scope: !7542, file: !7022, line: 892, baseType: !987, size: 32, offset: 672)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "run", scope: !7542, file: !7022, line: 893, baseType: !7134, size: 64, offset: 704)
!7550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7121, size: 64)
!7551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7552, size: 64)
!7552 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !287)
!7553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7554, size: 64)
!7554 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !32)
!7555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7020, size: 64)
!7556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 64)
!7557 = !{!0, !7558, !7563, !7568, !7573, !7577, !7580, !7583, !7586, !7589, !7591, !7593, !7599, !7601, !7606, !7608, !7610, !7612, !7614, !7616, !7618, !7620, !7622, !7624, !7626, !7628, !7631, !7633, !7636, !7650, !7652, !7654, !7656, !7658, !7660, !7682, !7684}
!7558 = !DIGlobalVariableExpression(var: !7559, expr: !DIExpression())
!7559 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author317", scope: !2, file: !3, line: 37, type: !7560, isLocal: true, isDefinition: true, align: 8)
!7560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 216, elements: !7561)
!7561 = !{!7562}
!7562 = !DISubrange(count: 27)
!7563 = !DIGlobalVariableExpression(var: !7564, expr: !DIExpression())
!7564 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file318", scope: !2, file: !3, line: 38, type: !7565, isLocal: true, isDefinition: true, align: 8)
!7565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 280, elements: !7566)
!7566 = !{!7567}
!7567 = !DISubrange(count: 35)
!7568 = !DIGlobalVariableExpression(var: !7569, expr: !DIExpression())
!7569 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license319", scope: !2, file: !3, line: 38, type: !7570, isLocal: true, isDefinition: true, align: 8)
!7570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 152, elements: !7571)
!7571 = !{!7572}
!7572 = !DISubrange(count: 19)
!7573 = !DIGlobalVariableExpression(var: !7574, expr: !DIExpression())
!7574 = distinct !DIGlobalVariable(name: "phy_basic_ports_array", scope: !2, file: !3, line: 61, type: !7575, isLocal: false, isDefinition: true)
!7575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7576, size: 96, elements: !1591)
!7576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!7577 = !DIGlobalVariableExpression(var: !7578, expr: !DIExpression())
!7578 = distinct !DIGlobalVariable(name: "phy_fibre_port_array", scope: !2, file: !3, line: 68, type: !7579, isLocal: false, isDefinition: true)
!7579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7576, size: 32, elements: !2471)
!7580 = !DIGlobalVariableExpression(var: !7581, expr: !DIExpression())
!7581 = distinct !DIGlobalVariable(name: "phy_all_ports_features_array", scope: !2, file: !3, line: 73, type: !7582, isLocal: false, isDefinition: true)
!7582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7576, size: 224, elements: !6002)
!7583 = !DIGlobalVariableExpression(var: !7584, expr: !DIExpression())
!7584 = distinct !DIGlobalVariable(name: "phy_10_100_features_array", scope: !2, file: !3, line: 84, type: !7585, isLocal: false, isDefinition: true)
!7585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7576, size: 128, elements: !2271)
!7586 = !DIGlobalVariableExpression(var: !7587, expr: !DIExpression())
!7587 = distinct !DIGlobalVariable(name: "phy_basic_t1_features_array", scope: !2, file: !3, line: 92, type: !7588, isLocal: false, isDefinition: true)
!7588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7576, size: 64, elements: !2663)
!7589 = !DIGlobalVariableExpression(var: !7590, expr: !DIExpression())
!7590 = distinct !DIGlobalVariable(name: "phy_gbit_features_array", scope: !2, file: !3, line: 98, type: !7588, isLocal: false, isDefinition: true)
!7591 = !DIGlobalVariableExpression(var: !7592, expr: !DIExpression())
!7592 = distinct !DIGlobalVariable(name: "phy_10gbit_features_array", scope: !2, file: !3, line: 104, type: !7579, isLocal: false, isDefinition: true)
!7593 = !DIGlobalVariableExpression(var: !7594, expr: !DIExpression())
!7594 = distinct !DIGlobalVariable(name: "__key", scope: !7595, file: !3, line: 624, type: !1584, isLocal: true, isDefinition: true)
!7595 = distinct !DISubprogram(name: "phy_device_create", scope: !3, file: !3, line: 580, type: !7596, scopeLine: 583, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!7596 = !DISubroutineType(types: !7597)
!7597 = !{!7020, !7030, !32, !987, !771, !7598}
!7598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7238, size: 64)
!7599 = !DIGlobalVariableExpression(var: !7600, expr: !DIExpression())
!7600 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_phy_init361", scope: !2, file: !3, line: 3073, type: !591, isLocal: true, isDefinition: true)
!7601 = !DIGlobalVariableExpression(var: !7602, expr: !DIExpression())
!7602 = distinct !DIGlobalVariable(name: "__exitcall_phy_exit", scope: !2, file: !3, line: 3074, type: !7603, isLocal: true, isDefinition: true)
!7603 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !7604, line: 117, baseType: !7605)
!7604 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!7605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3807, size: 64)
!7606 = !DIGlobalVariableExpression(var: !7607, expr: !DIExpression())
!7607 = distinct !DIGlobalVariable(name: "phy_basic_features", scope: !2, file: !3, line: 40, type: !6009, isLocal: false, isDefinition: true)
!7608 = !DIGlobalVariableExpression(var: !7609, expr: !DIExpression())
!7609 = distinct !DIGlobalVariable(name: "phy_basic_t1_features", scope: !2, file: !3, line: 43, type: !6009, isLocal: false, isDefinition: true)
!7610 = !DIGlobalVariableExpression(var: !7611, expr: !DIExpression())
!7611 = distinct !DIGlobalVariable(name: "phy_gbit_features", scope: !2, file: !3, line: 46, type: !6009, isLocal: false, isDefinition: true)
!7612 = !DIGlobalVariableExpression(var: !7613, expr: !DIExpression())
!7613 = distinct !DIGlobalVariable(name: "phy_gbit_fibre_features", scope: !2, file: !3, line: 49, type: !6009, isLocal: false, isDefinition: true)
!7614 = !DIGlobalVariableExpression(var: !7615, expr: !DIExpression())
!7615 = distinct !DIGlobalVariable(name: "phy_gbit_all_ports_features", scope: !2, file: !3, line: 52, type: !6009, isLocal: false, isDefinition: true)
!7616 = !DIGlobalVariableExpression(var: !7617, expr: !DIExpression())
!7617 = distinct !DIGlobalVariable(name: "phy_10gbit_features", scope: !2, file: !3, line: 55, type: !6009, isLocal: false, isDefinition: true)
!7618 = !DIGlobalVariableExpression(var: !7619, expr: !DIExpression())
!7619 = distinct !DIGlobalVariable(name: "phy_10gbit_fec_features", scope: !2, file: !3, line: 58, type: !6009, isLocal: false, isDefinition: true)
!7620 = !DIGlobalVariableExpression(var: !7621, expr: !DIExpression())
!7621 = distinct !DIGlobalVariable(name: "phy_10gbit_full_features", scope: !2, file: !3, line: 113, type: !6009, isLocal: false, isDefinition: true)
!7622 = !DIGlobalVariableExpression(var: !7623, expr: !DIExpression())
!7623 = distinct !DIGlobalVariable(name: "phy_fixup_lock", scope: !2, file: !3, line: 231, type: !1664, isLocal: true, isDefinition: true)
!7624 = !DIGlobalVariableExpression(var: !7625, expr: !DIExpression())
!7625 = distinct !DIGlobalVariable(name: "phy_fixup_list", scope: !2, file: !3, line: 230, type: !284, isLocal: true, isDefinition: true)
!7626 = !DIGlobalVariableExpression(var: !7627, expr: !DIExpression())
!7627 = distinct !DIGlobalVariable(name: "mdio_bus_phy_type", scope: !2, file: !3, line: 553, type: !6552, isLocal: true, isDefinition: true)
!7628 = !DIGlobalVariableExpression(var: !7629, expr: !DIExpression())
!7629 = distinct !DIGlobalVariable(name: "phy_dev_groups", scope: !2, file: !3, line: 551, type: !7630, isLocal: true, isDefinition: true)
!7630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6156, size: 128, elements: !2663)
!7631 = !DIGlobalVariableExpression(var: !7632, expr: !DIExpression())
!7632 = distinct !DIGlobalVariable(name: "phy_dev_group", scope: !2, file: !3, line: 551, type: !6157, isLocal: true, isDefinition: true)
!7633 = !DIGlobalVariableExpression(var: !7634, expr: !DIExpression())
!7634 = distinct !DIGlobalVariable(name: "phy_dev_attrs", scope: !2, file: !3, line: 545, type: !7635, isLocal: true, isDefinition: true)
!7635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6143, size: 256, elements: !2271)
!7636 = !DIGlobalVariableExpression(var: !7637, expr: !DIExpression())
!7637 = distinct !DIGlobalVariable(name: "dev_attr_phy_id", scope: !2, file: !3, line: 518, type: !7638, isLocal: true, isDefinition: true)
!7638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !6541, line: 99, size: 256, elements: !7639)
!7639 = !{!7640, !7641, !7646}
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7638, file: !6541, line: 100, baseType: !6144, size: 128)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !7638, file: !6541, line: 101, baseType: !7642, size: 64, offset: 128)
!7642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7643, size: 64)
!7643 = !DISubroutineType(types: !7644)
!7644 = !{!1521, !6545, !7645, !1038}
!7645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7638, size: 64)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !7638, file: !6541, line: 103, baseType: !7647, size: 64, offset: 192)
!7647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7648, size: 64)
!7648 = !DISubroutineType(types: !7649)
!7649 = !{!1521, !6545, !7645, !292, !1039}
!7650 = !DIGlobalVariableExpression(var: !7651, expr: !DIExpression())
!7651 = distinct !DIGlobalVariable(name: "dev_attr_phy_interface", scope: !2, file: !3, line: 533, type: !7638, isLocal: true, isDefinition: true)
!7652 = !DIGlobalVariableExpression(var: !7653, expr: !DIExpression())
!7653 = distinct !DIGlobalVariable(name: "dev_attr_phy_has_fixups", scope: !2, file: !3, line: 543, type: !7638, isLocal: true, isDefinition: true)
!7654 = !DIGlobalVariableExpression(var: !7655, expr: !DIExpression())
!7655 = distinct !DIGlobalVariable(name: "mdio_bus_phy_pm_ops", scope: !2, file: !3, line: 333, type: !6572, isLocal: true, isDefinition: true)
!7656 = !DIGlobalVariableExpression(var: !7657, expr: !DIExpression())
!7657 = distinct !DIGlobalVariable(name: "dev_attr_phy_standalone", scope: !2, file: !3, line: 1242, type: !7638, isLocal: true, isDefinition: true)
!7658 = !DIGlobalVariableExpression(var: !7659, expr: !DIExpression())
!7659 = distinct !DIGlobalVariable(name: "genphy_driver", scope: !2, file: !3, line: 3022, type: !7118, isLocal: true, isDefinition: true)
!7660 = !DIGlobalVariableExpression(var: !7661, expr: !DIExpression())
!7661 = distinct !DIGlobalVariable(name: "phy_ethtool_phy_ops", scope: !2, file: !3, line: 3032, type: !7662, isLocal: true, isDefinition: true)
!7662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7663)
!7663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_phy_ops", file: !251, line: 550, size: 320, elements: !7664)
!7664 = !{!7665, !7666, !7670, !7674, !7678}
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !7663, file: !251, line: 551, baseType: !7134, size: 64)
!7666 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !7663, file: !251, line: 552, baseType: !7667, size: 64, offset: 64)
!7667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7668, size: 64)
!7668 = !DISubroutineType(types: !7669)
!7669 = !{!32, !7020, !793}
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "get_stats", scope: !7663, file: !251, line: 553, baseType: !7671, size: 64, offset: 128)
!7671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7672, size: 64)
!7672 = !DISubroutineType(types: !7673)
!7673 = !{!32, !7020, !5712, !5370}
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "start_cable_test", scope: !7663, file: !251, line: 555, baseType: !7675, size: 64, offset: 192)
!7675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7676, size: 64)
!7676 = !DISubroutineType(types: !7677)
!7677 = !{!32, !7020, !886}
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "start_cable_test_tdr", scope: !7663, file: !251, line: 557, baseType: !7679, size: 64, offset: 256)
!7679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7680, size: 64)
!7680 = !DISubroutineType(types: !7681)
!7681 = !{!32, !7020, !886, !7199}
!7682 = !DIGlobalVariableExpression(var: !7683, expr: !DIExpression())
!7683 = distinct !DIGlobalVariable(name: "phy_10gbit_full_features_array", scope: !2, file: !3, line: 116, type: !7585, isLocal: true, isDefinition: true)
!7684 = !DIGlobalVariableExpression(var: !7685, expr: !DIExpression())
!7685 = distinct !DIGlobalVariable(name: "phy_10gbit_fec_features_array", scope: !2, file: !3, line: 109, type: !7579, isLocal: true, isDefinition: true)
!7686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !293, size: 248, elements: !7687)
!7687 = !{!7688}
!7688 = !DISubrange(count: 31)
!7689 = !{i32 7, !"Dwarf Version", i32 4}
!7690 = !{i32 2, !"Debug Info Version", i32 3}
!7691 = !{i32 1, !"wchar_size", i32 2}
!7692 = !{i32 1, !"Code Model", i32 2}
!7693 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!7694 = distinct !DISubprogram(name: "phy_device_free", scope: !3, file: !3, line: 201, type: !7161, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!7695 = !DILocalVariable(name: "phydev", arg: 1, scope: !7694, file: !3, line: 201, type: !7020)
!7696 = !DILocation(line: 201, column: 41, scope: !7694)
!7697 = !DILocation(line: 203, column: 14, scope: !7694)
!7698 = !DILocation(line: 203, column: 22, scope: !7694)
!7699 = !DILocation(line: 203, column: 27, scope: !7694)
!7700 = !DILocation(line: 203, column: 2, scope: !7694)
!7701 = !DILocation(line: 204, column: 1, scope: !7694)
!7702 = distinct !DISubprogram(name: "phy_register_fixup", scope: !3, file: !3, line: 358, type: !7703, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!7703 = !DISubroutineType(types: !7704)
!7704 = !{!32, !292, !987, !987, !7134}
!7705 = !DILocalVariable(name: "bus_id", arg: 1, scope: !7702, file: !3, line: 358, type: !292)
!7706 = !DILocation(line: 358, column: 36, scope: !7702)
!7707 = !DILocalVariable(name: "phy_uid", arg: 2, scope: !7702, file: !3, line: 358, type: !987)
!7708 = !DILocation(line: 358, column: 48, scope: !7702)
!7709 = !DILocalVariable(name: "phy_uid_mask", arg: 3, scope: !7702, file: !3, line: 358, type: !987)
!7710 = !DILocation(line: 358, column: 61, scope: !7702)
!7711 = !DILocalVariable(name: "run", arg: 4, scope: !7702, file: !3, line: 359, type: !7134)
!7712 = !DILocation(line: 359, column: 16, scope: !7702)
!7713 = !DILocalVariable(name: "fixup", scope: !7702, file: !3, line: 361, type: !7541)
!7714 = !DILocation(line: 361, column: 20, scope: !7702)
!7715 = !DILocation(line: 361, column: 28, scope: !7702)
!7716 = !DILocation(line: 363, column: 7, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7702, file: !3, line: 363, column: 6)
!7718 = !DILocation(line: 363, column: 6, scope: !7702)
!7719 = !DILocation(line: 364, column: 3, scope: !7717)
!7720 = !DILocation(line: 366, column: 10, scope: !7702)
!7721 = !DILocation(line: 366, column: 17, scope: !7702)
!7722 = !DILocation(line: 366, column: 25, scope: !7702)
!7723 = !DILocation(line: 366, column: 2, scope: !7702)
!7724 = !DILocation(line: 367, column: 19, scope: !7702)
!7725 = !DILocation(line: 367, column: 2, scope: !7702)
!7726 = !DILocation(line: 367, column: 9, scope: !7702)
!7727 = !DILocation(line: 367, column: 17, scope: !7702)
!7728 = !DILocation(line: 368, column: 24, scope: !7702)
!7729 = !DILocation(line: 368, column: 2, scope: !7702)
!7730 = !DILocation(line: 368, column: 9, scope: !7702)
!7731 = !DILocation(line: 368, column: 22, scope: !7702)
!7732 = !DILocation(line: 369, column: 15, scope: !7702)
!7733 = !DILocation(line: 369, column: 2, scope: !7702)
!7734 = !DILocation(line: 369, column: 9, scope: !7702)
!7735 = !DILocation(line: 369, column: 13, scope: !7702)
!7736 = !DILocation(line: 371, column: 2, scope: !7702)
!7737 = !DILocation(line: 372, column: 17, scope: !7702)
!7738 = !DILocation(line: 372, column: 24, scope: !7702)
!7739 = !DILocation(line: 372, column: 2, scope: !7702)
!7740 = !DILocation(line: 373, column: 2, scope: !7702)
!7741 = !DILocation(line: 375, column: 2, scope: !7702)
!7742 = !DILocation(line: 376, column: 1, scope: !7702)
!7743 = distinct !DISubprogram(name: "kzalloc", scope: !7527, file: !7527, line: 662, type: !7744, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!7744 = !DISubroutineType(types: !7745)
!7745 = !{!591, !1039, !1741}
!7746 = !DILocalVariable(name: "s", arg: 1, scope: !7747, file: !7527, line: 445, type: !2050)
!7747 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !7527, file: !7527, line: 445, type: !7748, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!7748 = !DISubroutineType(types: !7749)
!7749 = !{!591, !2050, !1741, !1039}
!7750 = !DILocation(line: 445, column: 72, scope: !7747, inlinedAt: !7751)
!7751 = distinct !DILocation(line: 552, column: 10, scope: !7752, inlinedAt: !7755)
!7752 = distinct !DILexicalBlock(scope: !7753, file: !7527, line: 540, column: 34)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !7527, line: 540, column: 6)
!7754 = distinct !DISubprogram(name: "kmalloc", scope: !7527, file: !7527, line: 538, type: !7744, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!7755 = distinct !DILocation(line: 664, column: 9, scope: !7743)
!7756 = !DILocalVariable(name: "flags", arg: 2, scope: !7747, file: !7527, line: 446, type: !1741)
!7757 = !DILocation(line: 446, column: 9, scope: !7747, inlinedAt: !7751)
!7758 = !DILocalVariable(name: "size", arg: 3, scope: !7747, file: !7527, line: 446, type: !1039)
!7759 = !DILocation(line: 446, column: 23, scope: !7747, inlinedAt: !7751)
!7760 = !DILocalVariable(name: "ret", scope: !7747, file: !7527, line: 448, type: !591)
!7761 = !DILocation(line: 448, column: 8, scope: !7747, inlinedAt: !7751)
!7762 = !DILocalVariable(name: "flags", arg: 1, scope: !7763, file: !7527, line: 318, type: !1741)
!7763 = distinct !DISubprogram(name: "kmalloc_type", scope: !7527, file: !7527, line: 318, type: !7764, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!7764 = !DISubroutineType(types: !7765)
!7765 = !{!7526, !1741}
!7766 = !DILocation(line: 318, column: 67, scope: !7763, inlinedAt: !7767)
!7767 = distinct !DILocation(line: 553, column: 20, scope: !7752, inlinedAt: !7755)
!7768 = !DILocalVariable(name: "size", arg: 1, scope: !7769, file: !7527, line: 346, type: !1039)
!7769 = distinct !DISubprogram(name: "kmalloc_index", scope: !7527, file: !7527, line: 346, type: !7770, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!7770 = !DISubroutineType(types: !7771)
!7771 = !{!7, !1039}
!7772 = !DILocation(line: 346, column: 58, scope: !7769, inlinedAt: !7773)
!7773 = distinct !DILocation(line: 547, column: 11, scope: !7752, inlinedAt: !7755)
!7774 = !DILocalVariable(name: "size", arg: 1, scope: !7775, file: !7527, line: 472, type: !1039)
!7775 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !7527, file: !7527, line: 472, type: !7776, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!7776 = !DISubroutineType(types: !7777)
!7777 = !{!591, !1039, !1741, !7}
!7778 = !DILocation(line: 472, column: 28, scope: !7775, inlinedAt: !7779)
!7779 = distinct !DILocation(line: 481, column: 9, scope: !7780, inlinedAt: !7781)
!7780 = distinct !DISubprogram(name: "kmalloc_large", scope: !7527, file: !7527, line: 478, type: !7744, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!7781 = distinct !DILocation(line: 545, column: 11, scope: !7782, inlinedAt: !7755)
!7782 = distinct !DILexicalBlock(scope: !7752, file: !7527, line: 544, column: 7)
!7783 = !DILocalVariable(name: "flags", arg: 2, scope: !7775, file: !7527, line: 472, type: !1741)
!7784 = !DILocation(line: 472, column: 40, scope: !7775, inlinedAt: !7779)
!7785 = !DILocalVariable(name: "order", arg: 3, scope: !7775, file: !7527, line: 472, type: !7)
!7786 = !DILocation(line: 472, column: 60, scope: !7775, inlinedAt: !7779)
!7787 = !DILocalVariable(name: "size", arg: 1, scope: !7780, file: !7527, line: 478, type: !1039)
!7788 = !DILocation(line: 478, column: 51, scope: !7780, inlinedAt: !7781)
!7789 = !DILocalVariable(name: "flags", arg: 2, scope: !7780, file: !7527, line: 478, type: !1741)
!7790 = !DILocation(line: 478, column: 63, scope: !7780, inlinedAt: !7781)
!7791 = !DILocalVariable(name: "order", scope: !7780, file: !7527, line: 480, type: !7)
!7792 = !DILocation(line: 480, column: 15, scope: !7780, inlinedAt: !7781)
!7793 = !DILocalVariable(name: "size", arg: 1, scope: !7754, file: !7527, line: 538, type: !1039)
!7794 = !DILocation(line: 538, column: 45, scope: !7754, inlinedAt: !7755)
!7795 = !DILocalVariable(name: "flags", arg: 2, scope: !7754, file: !7527, line: 538, type: !1741)
!7796 = !DILocation(line: 538, column: 57, scope: !7754, inlinedAt: !7755)
!7797 = !DILocalVariable(name: "index", scope: !7752, file: !7527, line: 542, type: !7)
!7798 = !DILocation(line: 542, column: 16, scope: !7752, inlinedAt: !7755)
!7799 = !DILocalVariable(name: "size", arg: 1, scope: !7743, file: !7527, line: 662, type: !1039)
!7800 = !DILocation(line: 662, column: 36, scope: !7743)
!7801 = !DILocalVariable(name: "flags", arg: 2, scope: !7743, file: !7527, line: 662, type: !1741)
!7802 = !DILocation(line: 662, column: 48, scope: !7743)
!7803 = !DILocation(line: 664, column: 17, scope: !7743)
!7804 = !DILocation(line: 664, column: 23, scope: !7743)
!7805 = !DILocation(line: 664, column: 29, scope: !7743)
!7806 = !DILocation(line: 540, column: 27, scope: !7753, inlinedAt: !7755)
!7807 = !DILocation(line: 540, column: 6, scope: !7753, inlinedAt: !7755)
!7808 = !DILocation(line: 540, column: 6, scope: !7754, inlinedAt: !7755)
!7809 = !DILocation(line: 544, column: 7, scope: !7782, inlinedAt: !7755)
!7810 = !DILocation(line: 544, column: 12, scope: !7782, inlinedAt: !7755)
!7811 = !DILocation(line: 544, column: 7, scope: !7752, inlinedAt: !7755)
!7812 = !DILocation(line: 545, column: 25, scope: !7782, inlinedAt: !7755)
!7813 = !DILocation(line: 545, column: 31, scope: !7782, inlinedAt: !7755)
!7814 = !DILocation(line: 480, column: 33, scope: !7780, inlinedAt: !7781)
!7815 = !DILocation(line: 480, column: 23, scope: !7780, inlinedAt: !7781)
!7816 = !DILocation(line: 481, column: 29, scope: !7780, inlinedAt: !7781)
!7817 = !DILocation(line: 481, column: 35, scope: !7780, inlinedAt: !7781)
!7818 = !DILocation(line: 481, column: 42, scope: !7780, inlinedAt: !7781)
!7819 = !DILocation(line: 474, column: 23, scope: !7775, inlinedAt: !7779)
!7820 = !DILocation(line: 474, column: 29, scope: !7775, inlinedAt: !7779)
!7821 = !DILocation(line: 474, column: 36, scope: !7775, inlinedAt: !7779)
!7822 = !DILocation(line: 474, column: 9, scope: !7775, inlinedAt: !7779)
!7823 = !DILocation(line: 545, column: 4, scope: !7782, inlinedAt: !7755)
!7824 = !DILocation(line: 547, column: 25, scope: !7752, inlinedAt: !7755)
!7825 = !DILocation(line: 348, column: 7, scope: !7826, inlinedAt: !7773)
!7826 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 348, column: 6)
!7827 = !DILocation(line: 348, column: 6, scope: !7769, inlinedAt: !7773)
!7828 = !DILocation(line: 349, column: 3, scope: !7826, inlinedAt: !7773)
!7829 = !DILocation(line: 351, column: 6, scope: !7830, inlinedAt: !7773)
!7830 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 351, column: 6)
!7831 = !DILocation(line: 351, column: 11, scope: !7830, inlinedAt: !7773)
!7832 = !DILocation(line: 351, column: 6, scope: !7769, inlinedAt: !7773)
!7833 = !DILocation(line: 352, column: 3, scope: !7830, inlinedAt: !7773)
!7834 = !DILocation(line: 354, column: 32, scope: !7835, inlinedAt: !7773)
!7835 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 354, column: 6)
!7836 = !DILocation(line: 354, column: 37, scope: !7835, inlinedAt: !7773)
!7837 = !DILocation(line: 354, column: 42, scope: !7835, inlinedAt: !7773)
!7838 = !DILocation(line: 354, column: 45, scope: !7835, inlinedAt: !7773)
!7839 = !DILocation(line: 354, column: 50, scope: !7835, inlinedAt: !7773)
!7840 = !DILocation(line: 354, column: 6, scope: !7769, inlinedAt: !7773)
!7841 = !DILocation(line: 355, column: 3, scope: !7835, inlinedAt: !7773)
!7842 = !DILocation(line: 356, column: 32, scope: !7843, inlinedAt: !7773)
!7843 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 356, column: 6)
!7844 = !DILocation(line: 356, column: 37, scope: !7843, inlinedAt: !7773)
!7845 = !DILocation(line: 356, column: 43, scope: !7843, inlinedAt: !7773)
!7846 = !DILocation(line: 356, column: 46, scope: !7843, inlinedAt: !7773)
!7847 = !DILocation(line: 356, column: 51, scope: !7843, inlinedAt: !7773)
!7848 = !DILocation(line: 356, column: 6, scope: !7769, inlinedAt: !7773)
!7849 = !DILocation(line: 357, column: 3, scope: !7843, inlinedAt: !7773)
!7850 = !DILocation(line: 358, column: 6, scope: !7851, inlinedAt: !7773)
!7851 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 358, column: 6)
!7852 = !DILocation(line: 358, column: 11, scope: !7851, inlinedAt: !7773)
!7853 = !DILocation(line: 358, column: 6, scope: !7769, inlinedAt: !7773)
!7854 = !DILocation(line: 358, column: 26, scope: !7851, inlinedAt: !7773)
!7855 = !DILocation(line: 359, column: 6, scope: !7856, inlinedAt: !7773)
!7856 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 359, column: 6)
!7857 = !DILocation(line: 359, column: 11, scope: !7856, inlinedAt: !7773)
!7858 = !DILocation(line: 359, column: 6, scope: !7769, inlinedAt: !7773)
!7859 = !DILocation(line: 359, column: 26, scope: !7856, inlinedAt: !7773)
!7860 = !DILocation(line: 360, column: 6, scope: !7861, inlinedAt: !7773)
!7861 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 360, column: 6)
!7862 = !DILocation(line: 360, column: 11, scope: !7861, inlinedAt: !7773)
!7863 = !DILocation(line: 360, column: 6, scope: !7769, inlinedAt: !7773)
!7864 = !DILocation(line: 360, column: 26, scope: !7861, inlinedAt: !7773)
!7865 = !DILocation(line: 361, column: 6, scope: !7866, inlinedAt: !7773)
!7866 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 361, column: 6)
!7867 = !DILocation(line: 361, column: 11, scope: !7866, inlinedAt: !7773)
!7868 = !DILocation(line: 361, column: 6, scope: !7769, inlinedAt: !7773)
!7869 = !DILocation(line: 361, column: 26, scope: !7866, inlinedAt: !7773)
!7870 = !DILocation(line: 362, column: 6, scope: !7871, inlinedAt: !7773)
!7871 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 362, column: 6)
!7872 = !DILocation(line: 362, column: 11, scope: !7871, inlinedAt: !7773)
!7873 = !DILocation(line: 362, column: 6, scope: !7769, inlinedAt: !7773)
!7874 = !DILocation(line: 362, column: 26, scope: !7871, inlinedAt: !7773)
!7875 = !DILocation(line: 363, column: 6, scope: !7876, inlinedAt: !7773)
!7876 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 363, column: 6)
!7877 = !DILocation(line: 363, column: 11, scope: !7876, inlinedAt: !7773)
!7878 = !DILocation(line: 363, column: 6, scope: !7769, inlinedAt: !7773)
!7879 = !DILocation(line: 363, column: 26, scope: !7876, inlinedAt: !7773)
!7880 = !DILocation(line: 364, column: 6, scope: !7881, inlinedAt: !7773)
!7881 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 364, column: 6)
!7882 = !DILocation(line: 364, column: 11, scope: !7881, inlinedAt: !7773)
!7883 = !DILocation(line: 364, column: 6, scope: !7769, inlinedAt: !7773)
!7884 = !DILocation(line: 364, column: 26, scope: !7881, inlinedAt: !7773)
!7885 = !DILocation(line: 365, column: 6, scope: !7886, inlinedAt: !7773)
!7886 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 365, column: 6)
!7887 = !DILocation(line: 365, column: 11, scope: !7886, inlinedAt: !7773)
!7888 = !DILocation(line: 365, column: 6, scope: !7769, inlinedAt: !7773)
!7889 = !DILocation(line: 365, column: 26, scope: !7886, inlinedAt: !7773)
!7890 = !DILocation(line: 366, column: 6, scope: !7891, inlinedAt: !7773)
!7891 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 366, column: 6)
!7892 = !DILocation(line: 366, column: 11, scope: !7891, inlinedAt: !7773)
!7893 = !DILocation(line: 366, column: 6, scope: !7769, inlinedAt: !7773)
!7894 = !DILocation(line: 366, column: 26, scope: !7891, inlinedAt: !7773)
!7895 = !DILocation(line: 367, column: 6, scope: !7896, inlinedAt: !7773)
!7896 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 367, column: 6)
!7897 = !DILocation(line: 367, column: 11, scope: !7896, inlinedAt: !7773)
!7898 = !DILocation(line: 367, column: 6, scope: !7769, inlinedAt: !7773)
!7899 = !DILocation(line: 367, column: 26, scope: !7896, inlinedAt: !7773)
!7900 = !DILocation(line: 368, column: 6, scope: !7901, inlinedAt: !7773)
!7901 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 368, column: 6)
!7902 = !DILocation(line: 368, column: 11, scope: !7901, inlinedAt: !7773)
!7903 = !DILocation(line: 368, column: 6, scope: !7769, inlinedAt: !7773)
!7904 = !DILocation(line: 368, column: 26, scope: !7901, inlinedAt: !7773)
!7905 = !DILocation(line: 369, column: 6, scope: !7906, inlinedAt: !7773)
!7906 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 369, column: 6)
!7907 = !DILocation(line: 369, column: 11, scope: !7906, inlinedAt: !7773)
!7908 = !DILocation(line: 369, column: 6, scope: !7769, inlinedAt: !7773)
!7909 = !DILocation(line: 369, column: 26, scope: !7906, inlinedAt: !7773)
!7910 = !DILocation(line: 370, column: 6, scope: !7911, inlinedAt: !7773)
!7911 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 370, column: 6)
!7912 = !DILocation(line: 370, column: 11, scope: !7911, inlinedAt: !7773)
!7913 = !DILocation(line: 370, column: 6, scope: !7769, inlinedAt: !7773)
!7914 = !DILocation(line: 370, column: 26, scope: !7911, inlinedAt: !7773)
!7915 = !DILocation(line: 371, column: 6, scope: !7916, inlinedAt: !7773)
!7916 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 371, column: 6)
!7917 = !DILocation(line: 371, column: 11, scope: !7916, inlinedAt: !7773)
!7918 = !DILocation(line: 371, column: 6, scope: !7769, inlinedAt: !7773)
!7919 = !DILocation(line: 371, column: 26, scope: !7916, inlinedAt: !7773)
!7920 = !DILocation(line: 372, column: 6, scope: !7921, inlinedAt: !7773)
!7921 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 372, column: 6)
!7922 = !DILocation(line: 372, column: 11, scope: !7921, inlinedAt: !7773)
!7923 = !DILocation(line: 372, column: 6, scope: !7769, inlinedAt: !7773)
!7924 = !DILocation(line: 372, column: 26, scope: !7921, inlinedAt: !7773)
!7925 = !DILocation(line: 373, column: 6, scope: !7926, inlinedAt: !7773)
!7926 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 373, column: 6)
!7927 = !DILocation(line: 373, column: 11, scope: !7926, inlinedAt: !7773)
!7928 = !DILocation(line: 373, column: 6, scope: !7769, inlinedAt: !7773)
!7929 = !DILocation(line: 373, column: 26, scope: !7926, inlinedAt: !7773)
!7930 = !DILocation(line: 374, column: 6, scope: !7931, inlinedAt: !7773)
!7931 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 374, column: 6)
!7932 = !DILocation(line: 374, column: 11, scope: !7931, inlinedAt: !7773)
!7933 = !DILocation(line: 374, column: 6, scope: !7769, inlinedAt: !7773)
!7934 = !DILocation(line: 374, column: 26, scope: !7931, inlinedAt: !7773)
!7935 = !DILocation(line: 375, column: 6, scope: !7936, inlinedAt: !7773)
!7936 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 375, column: 6)
!7937 = !DILocation(line: 375, column: 11, scope: !7936, inlinedAt: !7773)
!7938 = !DILocation(line: 375, column: 6, scope: !7769, inlinedAt: !7773)
!7939 = !DILocation(line: 375, column: 27, scope: !7936, inlinedAt: !7773)
!7940 = !DILocation(line: 376, column: 6, scope: !7941, inlinedAt: !7773)
!7941 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 376, column: 6)
!7942 = !DILocation(line: 376, column: 11, scope: !7941, inlinedAt: !7773)
!7943 = !DILocation(line: 376, column: 6, scope: !7769, inlinedAt: !7773)
!7944 = !DILocation(line: 376, column: 32, scope: !7941, inlinedAt: !7773)
!7945 = !DILocation(line: 377, column: 6, scope: !7946, inlinedAt: !7773)
!7946 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 377, column: 6)
!7947 = !DILocation(line: 377, column: 11, scope: !7946, inlinedAt: !7773)
!7948 = !DILocation(line: 377, column: 6, scope: !7769, inlinedAt: !7773)
!7949 = !DILocation(line: 377, column: 32, scope: !7946, inlinedAt: !7773)
!7950 = !DILocation(line: 378, column: 6, scope: !7951, inlinedAt: !7773)
!7951 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 378, column: 6)
!7952 = !DILocation(line: 378, column: 11, scope: !7951, inlinedAt: !7773)
!7953 = !DILocation(line: 378, column: 6, scope: !7769, inlinedAt: !7773)
!7954 = !DILocation(line: 378, column: 32, scope: !7951, inlinedAt: !7773)
!7955 = !DILocation(line: 379, column: 6, scope: !7956, inlinedAt: !7773)
!7956 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 379, column: 6)
!7957 = !DILocation(line: 379, column: 11, scope: !7956, inlinedAt: !7773)
!7958 = !DILocation(line: 379, column: 6, scope: !7769, inlinedAt: !7773)
!7959 = !DILocation(line: 379, column: 33, scope: !7956, inlinedAt: !7773)
!7960 = !DILocation(line: 380, column: 6, scope: !7961, inlinedAt: !7773)
!7961 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 380, column: 6)
!7962 = !DILocation(line: 380, column: 11, scope: !7961, inlinedAt: !7773)
!7963 = !DILocation(line: 380, column: 6, scope: !7769, inlinedAt: !7773)
!7964 = !DILocation(line: 380, column: 33, scope: !7961, inlinedAt: !7773)
!7965 = !DILocation(line: 381, column: 6, scope: !7966, inlinedAt: !7773)
!7966 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 381, column: 6)
!7967 = !DILocation(line: 381, column: 11, scope: !7966, inlinedAt: !7773)
!7968 = !DILocation(line: 381, column: 6, scope: !7769, inlinedAt: !7773)
!7969 = !DILocation(line: 381, column: 33, scope: !7966, inlinedAt: !7773)
!7970 = !DILocation(line: 382, column: 2, scope: !7971, inlinedAt: !7773)
!7971 = distinct !DILexicalBlock(scope: !7972, file: !7527, line: 382, column: 2)
!7972 = distinct !DILexicalBlock(scope: !7769, file: !7527, line: 382, column: 2)
!7973 = !{i32 -2142309465, i32 -2142309436, i32 -2142309390, i32 -2142309332, i32 -2142309278, i32 -2142309224, i32 -2142309169, i32 -2142309138}
!7974 = !DILocation(line: 382, column: 2, scope: !7975, inlinedAt: !7773)
!7975 = distinct !DILexicalBlock(scope: !7976, file: !7527, line: 382, column: 2)
!7976 = distinct !DILexicalBlock(scope: !7972, file: !7527, line: 382, column: 2)
!7977 = !{i32 -2142308695, i32 -2142308688, i32 -2142308634, i32 -2142308603, i32 -2142308573}
!7978 = !DILocation(line: 382, column: 2, scope: !7976, inlinedAt: !7773)
!7979 = !DILocation(line: 386, column: 1, scope: !7769, inlinedAt: !7773)
!7980 = !DILocation(line: 547, column: 9, scope: !7752, inlinedAt: !7755)
!7981 = !DILocation(line: 549, column: 8, scope: !7982, inlinedAt: !7755)
!7982 = distinct !DILexicalBlock(scope: !7752, file: !7527, line: 549, column: 7)
!7983 = !DILocation(line: 549, column: 7, scope: !7752, inlinedAt: !7755)
!7984 = !DILocation(line: 550, column: 4, scope: !7982, inlinedAt: !7755)
!7985 = !DILocation(line: 553, column: 33, scope: !7752, inlinedAt: !7755)
!7986 = !DILocation(line: 325, column: 6, scope: !7987, inlinedAt: !7767)
!7987 = distinct !DILexicalBlock(scope: !7763, file: !7527, line: 325, column: 6)
!7988 = !DILocation(line: 325, column: 6, scope: !7763, inlinedAt: !7767)
!7989 = !DILocation(line: 326, column: 3, scope: !7987, inlinedAt: !7767)
!7990 = !DILocation(line: 332, column: 9, scope: !7763, inlinedAt: !7767)
!7991 = !DILocation(line: 332, column: 15, scope: !7763, inlinedAt: !7767)
!7992 = !DILocation(line: 332, column: 2, scope: !7763, inlinedAt: !7767)
!7993 = !DILocation(line: 336, column: 1, scope: !7763, inlinedAt: !7767)
!7994 = !DILocation(line: 553, column: 5, scope: !7752, inlinedAt: !7755)
!7995 = !DILocation(line: 553, column: 41, scope: !7752, inlinedAt: !7755)
!7996 = !DILocation(line: 554, column: 5, scope: !7752, inlinedAt: !7755)
!7997 = !DILocation(line: 554, column: 12, scope: !7752, inlinedAt: !7755)
!7998 = !DILocation(line: 448, column: 31, scope: !7747, inlinedAt: !7751)
!7999 = !DILocation(line: 448, column: 34, scope: !7747, inlinedAt: !7751)
!8000 = !DILocation(line: 448, column: 14, scope: !7747, inlinedAt: !7751)
!8001 = !DILocation(line: 450, column: 22, scope: !7747, inlinedAt: !7751)
!8002 = !DILocation(line: 450, column: 25, scope: !7747, inlinedAt: !7751)
!8003 = !DILocation(line: 450, column: 30, scope: !7747, inlinedAt: !7751)
!8004 = !DILocation(line: 450, column: 36, scope: !7747, inlinedAt: !7751)
!8005 = !DILocation(line: 450, column: 8, scope: !7747, inlinedAt: !7751)
!8006 = !DILocation(line: 450, column: 6, scope: !7747, inlinedAt: !7751)
!8007 = !DILocation(line: 451, column: 9, scope: !7747, inlinedAt: !7751)
!8008 = !DILocation(line: 552, column: 3, scope: !7752, inlinedAt: !7755)
!8009 = !DILocation(line: 557, column: 19, scope: !7754, inlinedAt: !7755)
!8010 = !DILocation(line: 557, column: 25, scope: !7754, inlinedAt: !7755)
!8011 = !DILocation(line: 557, column: 9, scope: !7754, inlinedAt: !7755)
!8012 = !DILocation(line: 557, column: 2, scope: !7754, inlinedAt: !7755)
!8013 = !DILocation(line: 558, column: 1, scope: !7754, inlinedAt: !7755)
!8014 = !DILocation(line: 664, column: 2, scope: !7743)
!8015 = distinct !DISubprogram(name: "list_add_tail", scope: !8016, file: !8016, line: 98, type: !8017, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8016 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!8017 = !DISubroutineType(types: !8018)
!8018 = !{null, !287, !287}
!8019 = !DILocalVariable(name: "new", arg: 1, scope: !8015, file: !8016, line: 98, type: !287)
!8020 = !DILocation(line: 98, column: 52, scope: !8015)
!8021 = !DILocalVariable(name: "head", arg: 2, scope: !8015, file: !8016, line: 98, type: !287)
!8022 = !DILocation(line: 98, column: 75, scope: !8015)
!8023 = !DILocation(line: 100, column: 13, scope: !8015)
!8024 = !DILocation(line: 100, column: 18, scope: !8015)
!8025 = !DILocation(line: 100, column: 24, scope: !8015)
!8026 = !DILocation(line: 100, column: 30, scope: !8015)
!8027 = !DILocation(line: 100, column: 2, scope: !8015)
!8028 = !DILocation(line: 101, column: 1, scope: !8015)
!8029 = distinct !DISubprogram(name: "phy_register_fixup_for_uid", scope: !3, file: !3, line: 380, type: !8030, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8030 = !DISubroutineType(types: !8031)
!8031 = !{!32, !987, !987, !7134}
!8032 = !DILocalVariable(name: "phy_uid", arg: 1, scope: !8029, file: !3, line: 380, type: !987)
!8033 = !DILocation(line: 380, column: 36, scope: !8029)
!8034 = !DILocalVariable(name: "phy_uid_mask", arg: 2, scope: !8029, file: !3, line: 380, type: !987)
!8035 = !DILocation(line: 380, column: 49, scope: !8029)
!8036 = !DILocalVariable(name: "run", arg: 3, scope: !8029, file: !3, line: 381, type: !7134)
!8037 = !DILocation(line: 381, column: 17, scope: !8029)
!8038 = !DILocation(line: 383, column: 40, scope: !8029)
!8039 = !DILocation(line: 383, column: 49, scope: !8029)
!8040 = !DILocation(line: 383, column: 63, scope: !8029)
!8041 = !DILocation(line: 383, column: 9, scope: !8029)
!8042 = !DILocation(line: 383, column: 2, scope: !8029)
!8043 = distinct !DISubprogram(name: "phy_register_fixup_for_id", scope: !3, file: !3, line: 388, type: !8044, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8044 = !DISubroutineType(types: !8045)
!8045 = !{!32, !292, !7134}
!8046 = !DILocalVariable(name: "bus_id", arg: 1, scope: !8043, file: !3, line: 388, type: !292)
!8047 = !DILocation(line: 388, column: 43, scope: !8043)
!8048 = !DILocalVariable(name: "run", arg: 2, scope: !8043, file: !3, line: 389, type: !7134)
!8049 = !DILocation(line: 389, column: 16, scope: !8043)
!8050 = !DILocation(line: 391, column: 28, scope: !8043)
!8051 = !DILocation(line: 391, column: 61, scope: !8043)
!8052 = !DILocation(line: 391, column: 9, scope: !8043)
!8053 = !DILocation(line: 391, column: 2, scope: !8043)
!8054 = distinct !DISubprogram(name: "phy_unregister_fixup", scope: !3, file: !3, line: 401, type: !8055, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8055 = !DISubroutineType(types: !8056)
!8056 = !{!32, !292, !987, !987}
!8057 = !DILocalVariable(name: "bus_id", arg: 1, scope: !8054, file: !3, line: 401, type: !292)
!8058 = !DILocation(line: 401, column: 38, scope: !8054)
!8059 = !DILocalVariable(name: "phy_uid", arg: 2, scope: !8054, file: !3, line: 401, type: !987)
!8060 = !DILocation(line: 401, column: 50, scope: !8054)
!8061 = !DILocalVariable(name: "phy_uid_mask", arg: 3, scope: !8054, file: !3, line: 401, type: !987)
!8062 = !DILocation(line: 401, column: 63, scope: !8054)
!8063 = !DILocalVariable(name: "pos", scope: !8054, file: !3, line: 403, type: !287)
!8064 = !DILocation(line: 403, column: 20, scope: !8054)
!8065 = !DILocalVariable(name: "n", scope: !8054, file: !3, line: 403, type: !287)
!8066 = !DILocation(line: 403, column: 26, scope: !8054)
!8067 = !DILocalVariable(name: "fixup", scope: !8054, file: !3, line: 404, type: !7541)
!8068 = !DILocation(line: 404, column: 20, scope: !8054)
!8069 = !DILocalVariable(name: "ret", scope: !8054, file: !3, line: 405, type: !32)
!8070 = !DILocation(line: 405, column: 6, scope: !8054)
!8071 = !DILocation(line: 407, column: 6, scope: !8054)
!8072 = !DILocation(line: 409, column: 2, scope: !8054)
!8073 = !DILocation(line: 410, column: 2, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8054, file: !3, line: 410, column: 2)
!8075 = !DILocation(line: 410, column: 2, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 410, column: 2)
!8077 = !DILocalVariable(name: "__mptr", scope: !8078, file: !3, line: 411, type: !591)
!8078 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 411, column: 11)
!8079 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 410, column: 46)
!8080 = !DILocation(line: 411, column: 11, scope: !8078)
!8081 = !DILocation(line: 411, column: 11, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 411, column: 11)
!8083 = !DILocation(line: 411, column: 9, scope: !8079)
!8084 = !DILocation(line: 413, column: 16, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 413, column: 7)
!8086 = !DILocation(line: 413, column: 23, scope: !8085)
!8087 = !DILocation(line: 413, column: 31, scope: !8085)
!8088 = !DILocation(line: 413, column: 9, scope: !8085)
!8089 = !DILocation(line: 413, column: 40, scope: !8085)
!8090 = !DILocation(line: 414, column: 9, scope: !8085)
!8091 = !DILocation(line: 414, column: 16, scope: !8085)
!8092 = !DILocation(line: 414, column: 26, scope: !8085)
!8093 = !DILocation(line: 414, column: 24, scope: !8085)
!8094 = !DILocation(line: 415, column: 9, scope: !8085)
!8095 = !DILocation(line: 415, column: 19, scope: !8085)
!8096 = !DILocation(line: 415, column: 17, scope: !8085)
!8097 = !DILocation(line: 414, column: 40, scope: !8085)
!8098 = !DILocation(line: 413, column: 7, scope: !8079)
!8099 = !DILocation(line: 416, column: 14, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 415, column: 35)
!8101 = !DILocation(line: 416, column: 21, scope: !8100)
!8102 = !DILocation(line: 416, column: 4, scope: !8100)
!8103 = !DILocation(line: 417, column: 10, scope: !8100)
!8104 = !DILocation(line: 417, column: 4, scope: !8100)
!8105 = !DILocation(line: 418, column: 8, scope: !8100)
!8106 = !DILocation(line: 419, column: 4, scope: !8100)
!8107 = !DILocation(line: 421, column: 2, scope: !8079)
!8108 = distinct !{!8108, !8073, !8109}
!8109 = !DILocation(line: 421, column: 2, scope: !8074)
!8110 = !DILocation(line: 422, column: 2, scope: !8054)
!8111 = !DILocation(line: 424, column: 9, scope: !8054)
!8112 = !DILocation(line: 424, column: 2, scope: !8054)
!8113 = distinct !DISubprogram(name: "list_del", scope: !8016, file: !8016, line: 144, type: !8114, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8114 = !DISubroutineType(types: !8115)
!8115 = !{null, !287}
!8116 = !DILocalVariable(name: "entry", arg: 1, scope: !8113, file: !8016, line: 144, type: !287)
!8117 = !DILocation(line: 144, column: 47, scope: !8113)
!8118 = !DILocation(line: 146, column: 19, scope: !8113)
!8119 = !DILocation(line: 146, column: 2, scope: !8113)
!8120 = !DILocation(line: 147, column: 2, scope: !8113)
!8121 = !DILocation(line: 147, column: 9, scope: !8113)
!8122 = !DILocation(line: 147, column: 14, scope: !8113)
!8123 = !DILocation(line: 148, column: 2, scope: !8113)
!8124 = !DILocation(line: 148, column: 9, scope: !8113)
!8125 = !DILocation(line: 148, column: 14, scope: !8113)
!8126 = !DILocation(line: 149, column: 1, scope: !8113)
!8127 = distinct !DISubprogram(name: "phy_unregister_fixup_for_uid", scope: !3, file: !3, line: 429, type: !8128, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8128 = !DISubroutineType(types: !8129)
!8129 = !{!32, !987, !987}
!8130 = !DILocalVariable(name: "phy_uid", arg: 1, scope: !8127, file: !3, line: 429, type: !987)
!8131 = !DILocation(line: 429, column: 38, scope: !8127)
!8132 = !DILocalVariable(name: "phy_uid_mask", arg: 2, scope: !8127, file: !3, line: 429, type: !987)
!8133 = !DILocation(line: 429, column: 51, scope: !8127)
!8134 = !DILocation(line: 431, column: 42, scope: !8127)
!8135 = !DILocation(line: 431, column: 51, scope: !8127)
!8136 = !DILocation(line: 431, column: 9, scope: !8127)
!8137 = !DILocation(line: 431, column: 2, scope: !8127)
!8138 = distinct !DISubprogram(name: "phy_unregister_fixup_for_id", scope: !3, file: !3, line: 436, type: !8139, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8139 = !DISubroutineType(types: !8140)
!8140 = !{!32, !292}
!8141 = !DILocalVariable(name: "bus_id", arg: 1, scope: !8138, file: !3, line: 436, type: !292)
!8142 = !DILocation(line: 436, column: 45, scope: !8138)
!8143 = !DILocation(line: 438, column: 30, scope: !8138)
!8144 = !DILocation(line: 438, column: 9, scope: !8138)
!8145 = !DILocation(line: 438, column: 2, scope: !8138)
!8146 = !DILocalVariable(name: "bus", arg: 1, scope: !7595, file: !3, line: 580, type: !7030)
!8147 = !DILocation(line: 580, column: 54, scope: !7595)
!8148 = !DILocalVariable(name: "addr", arg: 2, scope: !7595, file: !3, line: 580, type: !32)
!8149 = !DILocation(line: 580, column: 63, scope: !7595)
!8150 = !DILocalVariable(name: "phy_id", arg: 3, scope: !7595, file: !3, line: 580, type: !987)
!8151 = !DILocation(line: 580, column: 73, scope: !7595)
!8152 = !DILocalVariable(name: "is_c45", arg: 4, scope: !7595, file: !3, line: 581, type: !771)
!8153 = !DILocation(line: 581, column: 15, scope: !7595)
!8154 = !DILocalVariable(name: "c45_ids", arg: 5, scope: !7595, file: !3, line: 582, type: !7598)
!8155 = !DILocation(line: 582, column: 37, scope: !7595)
!8156 = !DILocalVariable(name: "dev", scope: !7595, file: !3, line: 584, type: !7020)
!8157 = !DILocation(line: 584, column: 21, scope: !7595)
!8158 = !DILocalVariable(name: "mdiodev", scope: !7595, file: !3, line: 585, type: !7073)
!8159 = !DILocation(line: 585, column: 22, scope: !7595)
!8160 = !DILocalVariable(name: "ret", scope: !7595, file: !3, line: 586, type: !32)
!8161 = !DILocation(line: 586, column: 6, scope: !7595)
!8162 = !DILocation(line: 589, column: 8, scope: !7595)
!8163 = !DILocation(line: 589, column: 6, scope: !7595)
!8164 = !DILocation(line: 590, column: 7, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !7595, file: !3, line: 590, column: 6)
!8166 = !DILocation(line: 590, column: 6, scope: !7595)
!8167 = !DILocation(line: 591, column: 10, scope: !8165)
!8168 = !DILocation(line: 591, column: 3, scope: !8165)
!8169 = !DILocation(line: 593, column: 13, scope: !7595)
!8170 = !DILocation(line: 593, column: 18, scope: !7595)
!8171 = !DILocation(line: 593, column: 10, scope: !7595)
!8172 = !DILocation(line: 594, column: 25, scope: !7595)
!8173 = !DILocation(line: 594, column: 30, scope: !7595)
!8174 = !DILocation(line: 594, column: 2, scope: !7595)
!8175 = !DILocation(line: 594, column: 11, scope: !7595)
!8176 = !DILocation(line: 594, column: 15, scope: !7595)
!8177 = !DILocation(line: 594, column: 22, scope: !7595)
!8178 = !DILocation(line: 595, column: 2, scope: !7595)
!8179 = !DILocation(line: 595, column: 11, scope: !7595)
!8180 = !DILocation(line: 595, column: 15, scope: !7595)
!8181 = !DILocation(line: 595, column: 19, scope: !7595)
!8182 = !DILocation(line: 596, column: 2, scope: !7595)
!8183 = !DILocation(line: 596, column: 11, scope: !7595)
!8184 = !DILocation(line: 596, column: 15, scope: !7595)
!8185 = !DILocation(line: 596, column: 20, scope: !7595)
!8186 = !DILocation(line: 597, column: 17, scope: !7595)
!8187 = !DILocation(line: 597, column: 2, scope: !7595)
!8188 = !DILocation(line: 597, column: 11, scope: !7595)
!8189 = !DILocation(line: 597, column: 15, scope: !7595)
!8190 = !DILocation(line: 598, column: 2, scope: !7595)
!8191 = !DILocation(line: 598, column: 11, scope: !7595)
!8192 = !DILocation(line: 598, column: 21, scope: !7595)
!8193 = !DILocation(line: 599, column: 18, scope: !7595)
!8194 = !DILocation(line: 599, column: 2, scope: !7595)
!8195 = !DILocation(line: 599, column: 11, scope: !7595)
!8196 = !DILocation(line: 599, column: 16, scope: !7595)
!8197 = !DILocation(line: 600, column: 2, scope: !7595)
!8198 = !DILocation(line: 600, column: 11, scope: !7595)
!8199 = !DILocation(line: 600, column: 17, scope: !7595)
!8200 = !DILocation(line: 601, column: 2, scope: !7595)
!8201 = !DILocation(line: 601, column: 11, scope: !7595)
!8202 = !DILocation(line: 601, column: 23, scope: !7595)
!8203 = !DILocation(line: 602, column: 2, scope: !7595)
!8204 = !DILocation(line: 602, column: 11, scope: !7595)
!8205 = !DILocation(line: 602, column: 25, scope: !7595)
!8206 = !DILocation(line: 604, column: 2, scope: !7595)
!8207 = !DILocation(line: 604, column: 7, scope: !7595)
!8208 = !DILocation(line: 604, column: 13, scope: !7595)
!8209 = !DILocation(line: 605, column: 2, scope: !7595)
!8210 = !DILocation(line: 605, column: 7, scope: !7595)
!8211 = !DILocation(line: 605, column: 14, scope: !7595)
!8212 = !DILocation(line: 606, column: 2, scope: !7595)
!8213 = !DILocation(line: 606, column: 7, scope: !7595)
!8214 = !DILocation(line: 606, column: 13, scope: !7595)
!8215 = !DILocation(line: 607, column: 2, scope: !7595)
!8216 = !DILocation(line: 607, column: 7, scope: !7595)
!8217 = !DILocation(line: 607, column: 18, scope: !7595)
!8218 = !DILocation(line: 608, column: 2, scope: !7595)
!8219 = !DILocation(line: 608, column: 7, scope: !7595)
!8220 = !DILocation(line: 608, column: 12, scope: !7595)
!8221 = !DILocation(line: 609, column: 2, scope: !7595)
!8222 = !DILocation(line: 609, column: 7, scope: !7595)
!8223 = !DILocation(line: 609, column: 17, scope: !7595)
!8224 = !DILocation(line: 611, column: 2, scope: !7595)
!8225 = !DILocation(line: 611, column: 7, scope: !7595)
!8226 = !DILocation(line: 611, column: 15, scope: !7595)
!8227 = !DILocation(line: 613, column: 16, scope: !7595)
!8228 = !DILocation(line: 613, column: 2, scope: !7595)
!8229 = !DILocation(line: 613, column: 7, scope: !7595)
!8230 = !DILocation(line: 613, column: 14, scope: !7595)
!8231 = !DILocation(line: 614, column: 16, scope: !7595)
!8232 = !DILocation(line: 614, column: 2, scope: !7595)
!8233 = !DILocation(line: 614, column: 7, scope: !7595)
!8234 = !DILocation(line: 614, column: 14, scope: !7595)
!8235 = !DILocation(line: 615, column: 6, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !7595, file: !3, line: 615, column: 6)
!8237 = !DILocation(line: 615, column: 6, scope: !7595)
!8238 = !DILocation(line: 616, column: 3, scope: !8236)
!8239 = !DILocation(line: 616, column: 8, scope: !8236)
!8240 = !DILocation(line: 616, column: 19, scope: !8236)
!8241 = !DILocation(line: 616, column: 18, scope: !8236)
!8242 = !DILocation(line: 617, column: 13, scope: !7595)
!8243 = !DILocation(line: 617, column: 18, scope: !7595)
!8244 = !DILocation(line: 617, column: 22, scope: !7595)
!8245 = !DILocation(line: 617, column: 2, scope: !7595)
!8246 = !DILocation(line: 617, column: 7, scope: !7595)
!8247 = !DILocation(line: 617, column: 11, scope: !7595)
!8248 = !DILocation(line: 619, column: 16, scope: !7595)
!8249 = !DILocation(line: 619, column: 25, scope: !7595)
!8250 = !DILocation(line: 619, column: 42, scope: !7595)
!8251 = !DILocation(line: 619, column: 47, scope: !7595)
!8252 = !DILocation(line: 619, column: 51, scope: !7595)
!8253 = !DILocation(line: 619, column: 2, scope: !7595)
!8254 = !DILocation(line: 620, column: 21, scope: !7595)
!8255 = !DILocation(line: 620, column: 30, scope: !7595)
!8256 = !DILocation(line: 620, column: 2, scope: !7595)
!8257 = !DILocation(line: 622, column: 2, scope: !7595)
!8258 = !DILocation(line: 622, column: 7, scope: !7595)
!8259 = !DILocation(line: 622, column: 13, scope: !7595)
!8260 = !DILocation(line: 624, column: 2, scope: !7595)
!8261 = !DILocation(line: 624, column: 2, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !7595, file: !3, line: 624, column: 2)
!8263 = !DILocation(line: 625, column: 2, scope: !7595)
!8264 = !DILocation(line: 625, column: 2, scope: !8265)
!8265 = distinct !DILexicalBlock(scope: !7595, file: !3, line: 625, column: 2)
!8266 = !DILocation(line: 625, column: 2, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8265, file: !3, line: 625, column: 2)
!8268 = !DILocation(line: 637, column: 6, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !7595, file: !3, line: 637, column: 6)
!8270 = !DILocation(line: 637, column: 13, scope: !8269)
!8271 = !DILocation(line: 637, column: 16, scope: !8269)
!8272 = !DILocation(line: 637, column: 6, scope: !7595)
!8273 = !DILocalVariable(name: "num_ids", scope: !8274, file: !3, line: 638, type: !7576)
!8274 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 637, column: 25)
!8275 = !DILocation(line: 638, column: 13, scope: !8274)
!8276 = !DILocalVariable(name: "i", scope: !8274, file: !3, line: 639, type: !32)
!8277 = !DILocation(line: 639, column: 7, scope: !8274)
!8278 = !DILocation(line: 641, column: 10, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 641, column: 3)
!8280 = !DILocation(line: 641, column: 8, scope: !8279)
!8281 = !DILocation(line: 641, column: 15, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8279, file: !3, line: 641, column: 3)
!8283 = !DILocation(line: 641, column: 17, scope: !8282)
!8284 = !DILocation(line: 641, column: 3, scope: !8279)
!8285 = !DILocation(line: 642, column: 8, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 642, column: 8)
!8287 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 641, column: 33)
!8288 = !DILocation(line: 642, column: 17, scope: !8286)
!8289 = !DILocation(line: 642, column: 28, scope: !8286)
!8290 = !DILocation(line: 642, column: 31, scope: !8286)
!8291 = !DILocation(line: 642, column: 8, scope: !8287)
!8292 = !DILocation(line: 643, column: 5, scope: !8286)
!8293 = !DILocation(line: 645, column: 36, scope: !8287)
!8294 = !DILocation(line: 646, column: 7, scope: !8287)
!8295 = !DILocation(line: 646, column: 16, scope: !8287)
!8296 = !DILocation(line: 646, column: 27, scope: !8287)
!8297 = !DILocation(line: 645, column: 10, scope: !8287)
!8298 = !DILocation(line: 645, column: 8, scope: !8287)
!8299 = !DILocation(line: 647, column: 8, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 647, column: 8)
!8301 = !DILocation(line: 647, column: 8, scope: !8287)
!8302 = !DILocation(line: 648, column: 5, scope: !8300)
!8303 = !DILocation(line: 649, column: 3, scope: !8287)
!8304 = !DILocation(line: 641, column: 29, scope: !8282)
!8305 = !DILocation(line: 641, column: 3, scope: !8282)
!8306 = distinct !{!8306, !8284, !8307}
!8307 = !DILocation(line: 649, column: 3, scope: !8279)
!8308 = !DILocation(line: 650, column: 2, scope: !8274)
!8309 = !DILocation(line: 651, column: 35, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 650, column: 9)
!8311 = !DILocation(line: 651, column: 40, scope: !8310)
!8312 = !DILocation(line: 651, column: 9, scope: !8310)
!8313 = !DILocation(line: 651, column: 7, scope: !8310)
!8314 = !DILocation(line: 654, column: 6, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !7595, file: !3, line: 654, column: 6)
!8316 = !DILocation(line: 654, column: 6, scope: !7595)
!8317 = !DILocation(line: 655, column: 15, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8315, file: !3, line: 654, column: 11)
!8319 = !DILocation(line: 655, column: 24, scope: !8318)
!8320 = !DILocation(line: 655, column: 3, scope: !8318)
!8321 = !DILocation(line: 656, column: 17, scope: !8318)
!8322 = !DILocation(line: 656, column: 9, scope: !8318)
!8323 = !DILocation(line: 656, column: 7, scope: !8318)
!8324 = !DILocation(line: 657, column: 2, scope: !8318)
!8325 = !DILocation(line: 659, column: 9, scope: !7595)
!8326 = !DILocation(line: 659, column: 2, scope: !7595)
!8327 = !DILocation(line: 660, column: 1, scope: !7595)
!8328 = distinct !DISubprogram(name: "ERR_PTR", scope: !8329, file: !8329, line: 24, type: !8330, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8329 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!8330 = !DISubroutineType(types: !8331)
!8331 = !{!591, !998}
!8332 = !DILocalVariable(name: "error", arg: 1, scope: !8328, file: !8329, line: 24, type: !998)
!8333 = !DILocation(line: 24, column: 48, scope: !8328)
!8334 = !DILocation(line: 26, column: 18, scope: !8328)
!8335 = !DILocation(line: 26, column: 9, scope: !8328)
!8336 = !DILocation(line: 26, column: 2, scope: !8328)
!8337 = distinct !DISubprogram(name: "phy_bus_match", scope: !3, file: !3, line: 481, type: !6615, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8338 = !DILocalVariable(name: "dev", arg: 1, scope: !8337, file: !3, line: 481, type: !6545)
!8339 = !DILocation(line: 481, column: 41, scope: !8337)
!8340 = !DILocalVariable(name: "drv", arg: 2, scope: !8337, file: !3, line: 481, type: !6617)
!8341 = !DILocation(line: 481, column: 68, scope: !8337)
!8342 = !DILocalVariable(name: "phydev", scope: !8337, file: !3, line: 483, type: !7020)
!8343 = !DILocation(line: 483, column: 21, scope: !8337)
!8344 = !DILocalVariable(name: "__mptr", scope: !8345, file: !3, line: 483, type: !591)
!8345 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 483, column: 30)
!8346 = !DILocation(line: 483, column: 30, scope: !8345)
!8347 = !DILocalVariable(name: "__mptr", scope: !8348, file: !3, line: 483, type: !591)
!8348 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 483, column: 30)
!8349 = !DILocation(line: 483, column: 30, scope: !8348)
!8350 = !DILocation(line: 483, column: 30, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8348, file: !3, line: 483, column: 30)
!8352 = !DILocation(line: 483, column: 30, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 483, column: 30)
!8354 = !DILocalVariable(name: "phydrv", scope: !8337, file: !3, line: 484, type: !7117)
!8355 = !DILocation(line: 484, column: 21, scope: !8337)
!8356 = !DILocalVariable(name: "__mptr", scope: !8357, file: !3, line: 484, type: !591)
!8357 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 484, column: 30)
!8358 = !DILocation(line: 484, column: 30, scope: !8357)
!8359 = !DILocalVariable(name: "__mptr", scope: !8360, file: !3, line: 484, type: !591)
!8360 = distinct !DILexicalBlock(scope: !8357, file: !3, line: 484, column: 30)
!8361 = !DILocation(line: 484, column: 30, scope: !8360)
!8362 = !DILocation(line: 484, column: 30, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8360, file: !3, line: 484, column: 30)
!8364 = !DILocation(line: 484, column: 30, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8357, file: !3, line: 484, column: 30)
!8366 = !DILocalVariable(name: "num_ids", scope: !8337, file: !3, line: 485, type: !7576)
!8367 = !DILocation(line: 485, column: 12, scope: !8337)
!8368 = !DILocalVariable(name: "i", scope: !8337, file: !3, line: 486, type: !32)
!8369 = !DILocation(line: 486, column: 6, scope: !8337)
!8370 = !DILocation(line: 488, column: 8, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 488, column: 6)
!8372 = !DILocation(line: 488, column: 16, scope: !8371)
!8373 = !DILocation(line: 488, column: 24, scope: !8371)
!8374 = !DILocation(line: 488, column: 30, scope: !8371)
!8375 = !DILocation(line: 488, column: 6, scope: !8337)
!8376 = !DILocation(line: 489, column: 3, scope: !8371)
!8377 = !DILocation(line: 491, column: 6, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 491, column: 6)
!8379 = !DILocation(line: 491, column: 14, scope: !8378)
!8380 = !DILocation(line: 491, column: 6, scope: !8337)
!8381 = !DILocation(line: 492, column: 10, scope: !8378)
!8382 = !DILocation(line: 492, column: 18, scope: !8378)
!8383 = !DILocation(line: 492, column: 35, scope: !8378)
!8384 = !DILocation(line: 492, column: 3, scope: !8378)
!8385 = !DILocation(line: 494, column: 6, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 494, column: 6)
!8387 = !DILocation(line: 494, column: 14, scope: !8386)
!8388 = !DILocation(line: 494, column: 6, scope: !8337)
!8389 = !DILocation(line: 495, column: 10, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 495, column: 3)
!8391 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 494, column: 22)
!8392 = !DILocation(line: 495, column: 8, scope: !8390)
!8393 = !DILocation(line: 495, column: 15, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 495, column: 3)
!8395 = !DILocation(line: 495, column: 17, scope: !8394)
!8396 = !DILocation(line: 495, column: 3, scope: !8390)
!8397 = !DILocation(line: 496, column: 8, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 496, column: 8)
!8399 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 495, column: 33)
!8400 = !DILocation(line: 496, column: 16, scope: !8398)
!8401 = !DILocation(line: 496, column: 24, scope: !8398)
!8402 = !DILocation(line: 496, column: 35, scope: !8398)
!8403 = !DILocation(line: 496, column: 38, scope: !8398)
!8404 = !DILocation(line: 496, column: 8, scope: !8399)
!8405 = !DILocation(line: 497, column: 5, scope: !8398)
!8406 = !DILocation(line: 499, column: 9, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 499, column: 8)
!8408 = !DILocation(line: 499, column: 17, scope: !8407)
!8409 = !DILocation(line: 499, column: 26, scope: !8407)
!8410 = !DILocation(line: 499, column: 34, scope: !8407)
!8411 = !DILocation(line: 499, column: 24, scope: !8407)
!8412 = !DILocation(line: 500, column: 9, scope: !8407)
!8413 = !DILocation(line: 500, column: 17, scope: !8407)
!8414 = !DILocation(line: 500, column: 25, scope: !8407)
!8415 = !DILocation(line: 500, column: 36, scope: !8407)
!8416 = !DILocation(line: 501, column: 9, scope: !8407)
!8417 = !DILocation(line: 501, column: 17, scope: !8407)
!8418 = !DILocation(line: 500, column: 39, scope: !8407)
!8419 = !DILocation(line: 499, column: 47, scope: !8407)
!8420 = !DILocation(line: 499, column: 8, scope: !8399)
!8421 = !DILocation(line: 502, column: 5, scope: !8407)
!8422 = !DILocation(line: 503, column: 3, scope: !8399)
!8423 = !DILocation(line: 495, column: 29, scope: !8394)
!8424 = !DILocation(line: 495, column: 3, scope: !8394)
!8425 = distinct !{!8425, !8396, !8426}
!8426 = !DILocation(line: 503, column: 3, scope: !8390)
!8427 = !DILocation(line: 504, column: 3, scope: !8391)
!8428 = !DILocation(line: 506, column: 11, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 505, column: 9)
!8430 = !DILocation(line: 506, column: 19, scope: !8429)
!8431 = !DILocation(line: 506, column: 28, scope: !8429)
!8432 = !DILocation(line: 506, column: 36, scope: !8429)
!8433 = !DILocation(line: 506, column: 26, scope: !8429)
!8434 = !DILocation(line: 507, column: 5, scope: !8429)
!8435 = !DILocation(line: 507, column: 13, scope: !8429)
!8436 = !DILocation(line: 507, column: 22, scope: !8429)
!8437 = !DILocation(line: 507, column: 30, scope: !8429)
!8438 = !DILocation(line: 507, column: 20, scope: !8429)
!8439 = !DILocation(line: 506, column: 49, scope: !8429)
!8440 = !DILocation(line: 506, column: 3, scope: !8429)
!8441 = !DILocation(line: 509, column: 1, scope: !8337)
!8442 = distinct !DISubprogram(name: "phy_mdio_device_free", scope: !3, file: !3, line: 207, type: !7105, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8443 = !DILocalVariable(name: "mdiodev", arg: 1, scope: !8442, file: !3, line: 207, type: !7073)
!8444 = !DILocation(line: 207, column: 54, scope: !8442)
!8445 = !DILocalVariable(name: "phydev", scope: !8442, file: !3, line: 209, type: !7020)
!8446 = !DILocation(line: 209, column: 21, scope: !8442)
!8447 = !DILocalVariable(name: "__mptr", scope: !8448, file: !3, line: 211, type: !591)
!8448 = distinct !DILexicalBlock(scope: !8442, file: !3, line: 211, column: 11)
!8449 = !DILocation(line: 211, column: 11, scope: !8448)
!8450 = !DILocation(line: 211, column: 11, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8448, file: !3, line: 211, column: 11)
!8452 = !DILocation(line: 211, column: 9, scope: !8442)
!8453 = !DILocation(line: 212, column: 18, scope: !8442)
!8454 = !DILocation(line: 212, column: 2, scope: !8442)
!8455 = !DILocation(line: 213, column: 1, scope: !8442)
!8456 = distinct !DISubprogram(name: "phy_mdio_device_remove", scope: !3, file: !3, line: 220, type: !7105, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8457 = !DILocalVariable(name: "mdiodev", arg: 1, scope: !8456, file: !3, line: 220, type: !7073)
!8458 = !DILocation(line: 220, column: 56, scope: !8456)
!8459 = !DILocalVariable(name: "phydev", scope: !8456, file: !3, line: 222, type: !7020)
!8460 = !DILocation(line: 222, column: 21, scope: !8456)
!8461 = !DILocalVariable(name: "__mptr", scope: !8462, file: !3, line: 224, type: !591)
!8462 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 224, column: 11)
!8463 = !DILocation(line: 224, column: 11, scope: !8462)
!8464 = !DILocation(line: 224, column: 11, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 224, column: 11)
!8466 = !DILocation(line: 224, column: 9, scope: !8456)
!8467 = !DILocation(line: 225, column: 20, scope: !8456)
!8468 = !DILocation(line: 225, column: 2, scope: !8456)
!8469 = !DILocation(line: 226, column: 1, scope: !8456)
!8470 = distinct !DISubprogram(name: "__init_work", scope: !2829, file: !2829, line: 215, type: !8471, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8471 = !DISubroutineType(types: !8472)
!8472 = !{null, !2838, !32}
!8473 = !DILocalVariable(name: "work", arg: 1, scope: !8470, file: !2829, line: 215, type: !2838)
!8474 = !DILocation(line: 215, column: 52, scope: !8470)
!8475 = !DILocalVariable(name: "onstack", arg: 2, scope: !8470, file: !2829, line: 215, type: !32)
!8476 = !DILocation(line: 215, column: 62, scope: !8470)
!8477 = !DILocation(line: 215, column: 73, scope: !8470)
!8478 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !8016, file: !8016, line: 33, type: !8114, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8479 = !DILocalVariable(name: "list", arg: 1, scope: !8478, file: !8016, line: 33, type: !287)
!8480 = !DILocation(line: 33, column: 53, scope: !8478)
!8481 = !DILocation(line: 35, column: 2, scope: !8478)
!8482 = !DILocation(line: 35, column: 2, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8478, file: !8016, line: 35, column: 2)
!8484 = !DILocation(line: 35, column: 2, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8483, file: !8016, line: 35, column: 2)
!8486 = !DILocation(line: 35, column: 2, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8483, file: !8016, line: 35, column: 2)
!8488 = !DILocation(line: 36, column: 15, scope: !8478)
!8489 = !DILocation(line: 36, column: 2, scope: !8478)
!8490 = !DILocation(line: 36, column: 8, scope: !8478)
!8491 = !DILocation(line: 36, column: 13, scope: !8478)
!8492 = !DILocation(line: 37, column: 1, scope: !8478)
!8493 = distinct !DISubprogram(name: "phy_request_driver_module", scope: !3, file: !3, line: 560, type: !8494, scopeLine: 561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8494 = !DISubroutineType(types: !8495)
!8495 = !{!32, !7020, !987}
!8496 = !DILocalVariable(name: "dev", arg: 1, scope: !8493, file: !3, line: 560, type: !7020)
!8497 = !DILocation(line: 560, column: 57, scope: !8493)
!8498 = !DILocalVariable(name: "phy_id", arg: 2, scope: !8493, file: !3, line: 560, type: !987)
!8499 = !DILocation(line: 560, column: 66, scope: !8493)
!8500 = !DILocalVariable(name: "ret", scope: !8493, file: !3, line: 562, type: !32)
!8501 = !DILocation(line: 562, column: 6, scope: !8493)
!8502 = !DILocation(line: 565, column: 9, scope: !8493)
!8503 = !DILocation(line: 564, column: 8, scope: !8493)
!8504 = !DILocation(line: 564, column: 6, scope: !8493)
!8505 = !DILocation(line: 577, column: 2, scope: !8493)
!8506 = distinct !DISubprogram(name: "get_phy_device", scope: !3, file: !3, line: 867, type: !8507, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8507 = !DISubroutineType(types: !8508)
!8508 = !{!7020, !7030, !32, !771}
!8509 = !DILocalVariable(name: "bus", arg: 1, scope: !8506, file: !3, line: 867, type: !7030)
!8510 = !DILocation(line: 867, column: 51, scope: !8506)
!8511 = !DILocalVariable(name: "addr", arg: 2, scope: !8506, file: !3, line: 867, type: !32)
!8512 = !DILocation(line: 867, column: 60, scope: !8506)
!8513 = !DILocalVariable(name: "is_c45", arg: 3, scope: !8506, file: !3, line: 867, type: !771)
!8514 = !DILocation(line: 867, column: 71, scope: !8506)
!8515 = !DILocalVariable(name: "c45_ids", scope: !8506, file: !3, line: 869, type: !7238)
!8516 = !DILocation(line: 869, column: 28, scope: !8506)
!8517 = !DILocalVariable(name: "phy_id", scope: !8506, file: !3, line: 870, type: !987)
!8518 = !DILocation(line: 870, column: 6, scope: !8506)
!8519 = !DILocalVariable(name: "r", scope: !8506, file: !3, line: 871, type: !32)
!8520 = !DILocation(line: 871, column: 6, scope: !8506)
!8521 = !DILocation(line: 873, column: 10, scope: !8506)
!8522 = !DILocation(line: 873, column: 29, scope: !8506)
!8523 = !DILocation(line: 874, column: 10, scope: !8506)
!8524 = !DILocation(line: 874, column: 23, scope: !8506)
!8525 = !DILocation(line: 875, column: 17, scope: !8506)
!8526 = !DILocation(line: 875, column: 2, scope: !8506)
!8527 = !DILocation(line: 877, column: 6, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 877, column: 6)
!8529 = !DILocation(line: 877, column: 6, scope: !8506)
!8530 = !DILocation(line: 878, column: 23, scope: !8528)
!8531 = !DILocation(line: 878, column: 28, scope: !8528)
!8532 = !DILocation(line: 878, column: 7, scope: !8528)
!8533 = !DILocation(line: 878, column: 5, scope: !8528)
!8534 = !DILocation(line: 878, column: 3, scope: !8528)
!8535 = !DILocation(line: 880, column: 22, scope: !8528)
!8536 = !DILocation(line: 880, column: 27, scope: !8528)
!8537 = !DILocation(line: 880, column: 7, scope: !8528)
!8538 = !DILocation(line: 880, column: 5, scope: !8528)
!8539 = !DILocation(line: 882, column: 6, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 882, column: 6)
!8541 = !DILocation(line: 882, column: 6, scope: !8506)
!8542 = !DILocation(line: 883, column: 18, scope: !8540)
!8543 = !DILocation(line: 883, column: 10, scope: !8540)
!8544 = !DILocation(line: 883, column: 3, scope: !8540)
!8545 = !DILocation(line: 885, column: 27, scope: !8506)
!8546 = !DILocation(line: 885, column: 32, scope: !8506)
!8547 = !DILocation(line: 885, column: 38, scope: !8506)
!8548 = !DILocation(line: 885, column: 46, scope: !8506)
!8549 = !DILocation(line: 885, column: 9, scope: !8506)
!8550 = !DILocation(line: 885, column: 2, scope: !8506)
!8551 = !DILocation(line: 886, column: 1, scope: !8506)
!8552 = distinct !DISubprogram(name: "get_phy_c45_ids", scope: !3, file: !3, line: 727, type: !8553, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8553 = !DISubroutineType(types: !8554)
!8554 = !{!32, !7030, !32, !7598}
!8555 = !DILocalVariable(name: "bus", arg: 1, scope: !8552, file: !3, line: 727, type: !7030)
!8556 = !DILocation(line: 727, column: 44, scope: !8552)
!8557 = !DILocalVariable(name: "addr", arg: 2, scope: !8552, file: !3, line: 727, type: !32)
!8558 = !DILocation(line: 727, column: 53, scope: !8552)
!8559 = !DILocalVariable(name: "c45_ids", arg: 3, scope: !8552, file: !3, line: 728, type: !7598)
!8560 = !DILocation(line: 728, column: 34, scope: !8552)
!8561 = !DILocalVariable(name: "num_ids", scope: !8552, file: !3, line: 730, type: !7576)
!8562 = !DILocation(line: 730, column: 12, scope: !8552)
!8563 = !DILocalVariable(name: "devs_in_pkg", scope: !8552, file: !3, line: 731, type: !987)
!8564 = !DILocation(line: 731, column: 6, scope: !8552)
!8565 = !DILocalVariable(name: "i", scope: !8552, file: !3, line: 732, type: !32)
!8566 = !DILocation(line: 732, column: 6, scope: !8552)
!8567 = !DILocalVariable(name: "ret", scope: !8552, file: !3, line: 732, type: !32)
!8568 = !DILocation(line: 732, column: 9, scope: !8552)
!8569 = !DILocalVariable(name: "phy_reg", scope: !8552, file: !3, line: 732, type: !32)
!8570 = !DILocation(line: 732, column: 14, scope: !8552)
!8571 = !DILocation(line: 737, column: 9, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 737, column: 2)
!8573 = !DILocation(line: 737, column: 7, scope: !8572)
!8574 = !DILocation(line: 737, column: 14, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8572, file: !3, line: 737, column: 2)
!8576 = !DILocation(line: 737, column: 16, scope: !8575)
!8577 = !DILocation(line: 737, column: 31, scope: !8575)
!8578 = !DILocation(line: 737, column: 35, scope: !8575)
!8579 = !DILocation(line: 737, column: 47, scope: !8575)
!8580 = !DILocation(line: 737, column: 52, scope: !8575)
!8581 = !DILocation(line: 738, column: 8, scope: !8575)
!8582 = !DILocation(line: 738, column: 20, scope: !8575)
!8583 = !DILocation(line: 738, column: 34, scope: !8575)
!8584 = !DILocation(line: 0, scope: !8575)
!8585 = !DILocation(line: 737, column: 2, scope: !8572)
!8586 = !DILocation(line: 739, column: 7, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8588, file: !3, line: 739, column: 7)
!8588 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 738, column: 55)
!8589 = !DILocation(line: 739, column: 9, scope: !8587)
!8590 = !DILocation(line: 739, column: 27, scope: !8587)
!8591 = !DILocation(line: 739, column: 30, scope: !8587)
!8592 = !DILocation(line: 739, column: 32, scope: !8587)
!8593 = !DILocation(line: 739, column: 7, scope: !8588)
!8594 = !DILocation(line: 746, column: 32, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8587, file: !3, line: 739, column: 51)
!8596 = !DILocation(line: 746, column: 37, scope: !8595)
!8597 = !DILocation(line: 746, column: 43, scope: !8595)
!8598 = !DILocation(line: 746, column: 10, scope: !8595)
!8599 = !DILocation(line: 746, column: 8, scope: !8595)
!8600 = !DILocation(line: 747, column: 8, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 747, column: 8)
!8602 = !DILocation(line: 747, column: 12, scope: !8601)
!8603 = !DILocation(line: 747, column: 8, scope: !8595)
!8604 = !DILocation(line: 748, column: 5, scope: !8601)
!8605 = !DILocation(line: 750, column: 9, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8595, file: !3, line: 750, column: 8)
!8607 = !DILocation(line: 750, column: 8, scope: !8595)
!8608 = !DILocation(line: 751, column: 5, scope: !8606)
!8609 = !DILocation(line: 752, column: 3, scope: !8595)
!8610 = !DILocation(line: 753, column: 37, scope: !8588)
!8611 = !DILocation(line: 753, column: 42, scope: !8588)
!8612 = !DILocation(line: 753, column: 48, scope: !8588)
!8613 = !DILocation(line: 753, column: 13, scope: !8588)
!8614 = !DILocation(line: 753, column: 11, scope: !8588)
!8615 = !DILocation(line: 754, column: 7, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8588, file: !3, line: 754, column: 7)
!8617 = !DILocation(line: 754, column: 15, scope: !8616)
!8618 = !DILocation(line: 754, column: 7, scope: !8588)
!8619 = !DILocation(line: 755, column: 4, scope: !8616)
!8620 = !DILocation(line: 756, column: 2, scope: !8588)
!8621 = !DILocation(line: 738, column: 51, scope: !8575)
!8622 = !DILocation(line: 737, column: 2, scope: !8575)
!8623 = distinct !{!8623, !8585, !8624}
!8624 = !DILocation(line: 756, column: 2, scope: !8572)
!8625 = !DILocation(line: 758, column: 7, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 758, column: 6)
!8627 = !DILocation(line: 758, column: 19, scope: !8626)
!8628 = !DILocation(line: 758, column: 33, scope: !8626)
!8629 = !DILocation(line: 758, column: 6, scope: !8552)
!8630 = !DILocation(line: 763, column: 37, scope: !8631)
!8631 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 758, column: 48)
!8632 = !DILocation(line: 763, column: 42, scope: !8631)
!8633 = !DILocation(line: 763, column: 13, scope: !8631)
!8634 = !DILocation(line: 763, column: 11, scope: !8631)
!8635 = !DILocation(line: 764, column: 7, scope: !8636)
!8636 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 764, column: 7)
!8637 = !DILocation(line: 764, column: 15, scope: !8636)
!8638 = !DILocation(line: 764, column: 7, scope: !8631)
!8639 = !DILocation(line: 765, column: 4, scope: !8636)
!8640 = !DILocation(line: 768, column: 8, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 768, column: 7)
!8642 = !DILocation(line: 768, column: 20, scope: !8641)
!8643 = !DILocation(line: 768, column: 34, scope: !8641)
!8644 = !DILocation(line: 768, column: 7, scope: !8631)
!8645 = !DILocation(line: 769, column: 4, scope: !8641)
!8646 = !DILocation(line: 770, column: 2, scope: !8631)
!8647 = !DILocation(line: 773, column: 9, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 773, column: 2)
!8649 = !DILocation(line: 773, column: 7, scope: !8648)
!8650 = !DILocation(line: 773, column: 14, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8648, file: !3, line: 773, column: 2)
!8652 = !DILocation(line: 773, column: 16, scope: !8651)
!8653 = !DILocation(line: 773, column: 2, scope: !8648)
!8654 = !DILocation(line: 774, column: 9, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 774, column: 7)
!8656 = distinct !DILexicalBlock(scope: !8651, file: !3, line: 773, column: 32)
!8657 = !DILocation(line: 774, column: 29, scope: !8655)
!8658 = !DILocation(line: 774, column: 26, scope: !8655)
!8659 = !DILocation(line: 774, column: 21, scope: !8655)
!8660 = !DILocation(line: 774, column: 7, scope: !8656)
!8661 = !DILocation(line: 775, column: 4, scope: !8655)
!8662 = !DILocation(line: 777, column: 7, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 777, column: 7)
!8664 = !DILocation(line: 777, column: 9, scope: !8663)
!8665 = !DILocation(line: 777, column: 27, scope: !8663)
!8666 = !DILocation(line: 777, column: 30, scope: !8663)
!8667 = !DILocation(line: 777, column: 32, scope: !8663)
!8668 = !DILocation(line: 777, column: 7, scope: !8656)
!8669 = !DILocation(line: 782, column: 32, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8663, file: !3, line: 777, column: 51)
!8671 = !DILocation(line: 782, column: 37, scope: !8670)
!8672 = !DILocation(line: 782, column: 43, scope: !8670)
!8673 = !DILocation(line: 782, column: 10, scope: !8670)
!8674 = !DILocation(line: 782, column: 8, scope: !8670)
!8675 = !DILocation(line: 783, column: 8, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 783, column: 8)
!8677 = !DILocation(line: 783, column: 12, scope: !8676)
!8678 = !DILocation(line: 783, column: 8, scope: !8670)
!8679 = !DILocation(line: 784, column: 12, scope: !8676)
!8680 = !DILocation(line: 784, column: 5, scope: !8676)
!8681 = !DILocation(line: 786, column: 9, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8670, file: !3, line: 786, column: 8)
!8683 = !DILocation(line: 786, column: 8, scope: !8670)
!8684 = !DILocation(line: 787, column: 5, scope: !8682)
!8685 = !DILocation(line: 788, column: 3, scope: !8670)
!8686 = !DILocation(line: 790, column: 30, scope: !8656)
!8687 = !DILocation(line: 790, column: 35, scope: !8656)
!8688 = !DILocation(line: 790, column: 41, scope: !8656)
!8689 = !DILocation(line: 790, column: 13, scope: !8656)
!8690 = !DILocation(line: 790, column: 11, scope: !8656)
!8691 = !DILocation(line: 791, column: 7, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 791, column: 7)
!8693 = !DILocation(line: 791, column: 15, scope: !8692)
!8694 = !DILocation(line: 791, column: 7, scope: !8656)
!8695 = !DILocation(line: 792, column: 4, scope: !8692)
!8696 = !DILocation(line: 793, column: 28, scope: !8656)
!8697 = !DILocation(line: 793, column: 36, scope: !8656)
!8698 = !DILocation(line: 793, column: 3, scope: !8656)
!8699 = !DILocation(line: 793, column: 12, scope: !8656)
!8700 = !DILocation(line: 793, column: 23, scope: !8656)
!8701 = !DILocation(line: 793, column: 26, scope: !8656)
!8702 = !DILocation(line: 795, column: 30, scope: !8656)
!8703 = !DILocation(line: 795, column: 35, scope: !8656)
!8704 = !DILocation(line: 795, column: 41, scope: !8656)
!8705 = !DILocation(line: 795, column: 13, scope: !8656)
!8706 = !DILocation(line: 795, column: 11, scope: !8656)
!8707 = !DILocation(line: 796, column: 7, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8656, file: !3, line: 796, column: 7)
!8709 = !DILocation(line: 796, column: 15, scope: !8708)
!8710 = !DILocation(line: 796, column: 7, scope: !8656)
!8711 = !DILocation(line: 797, column: 4, scope: !8708)
!8712 = !DILocation(line: 798, column: 29, scope: !8656)
!8713 = !DILocation(line: 798, column: 3, scope: !8656)
!8714 = !DILocation(line: 798, column: 12, scope: !8656)
!8715 = !DILocation(line: 798, column: 23, scope: !8656)
!8716 = !DILocation(line: 798, column: 26, scope: !8656)
!8717 = !DILocation(line: 799, column: 2, scope: !8656)
!8718 = !DILocation(line: 773, column: 28, scope: !8651)
!8719 = !DILocation(line: 773, column: 2, scope: !8651)
!8720 = distinct !{!8720, !8653, !8721}
!8721 = !DILocation(line: 799, column: 2, scope: !8648)
!8722 = !DILocation(line: 801, column: 32, scope: !8552)
!8723 = !DILocation(line: 801, column: 2, scope: !8552)
!8724 = !DILocation(line: 801, column: 11, scope: !8552)
!8725 = !DILocation(line: 801, column: 30, scope: !8552)
!8726 = !DILocation(line: 803, column: 26, scope: !8552)
!8727 = !DILocation(line: 803, column: 38, scope: !8552)
!8728 = !DILocation(line: 803, column: 2, scope: !8552)
!8729 = !DILocation(line: 803, column: 11, scope: !8552)
!8730 = !DILocation(line: 803, column: 24, scope: !8552)
!8731 = !DILocation(line: 805, column: 2, scope: !8552)
!8732 = !DILocation(line: 806, column: 1, scope: !8552)
!8733 = distinct !DISubprogram(name: "get_phy_c22_id", scope: !3, file: !3, line: 819, type: !8734, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8734 = !DISubroutineType(types: !8735)
!8735 = !{!32, !7030, !32, !2515}
!8736 = !DILocalVariable(name: "bus", arg: 1, scope: !8733, file: !3, line: 819, type: !7030)
!8737 = !DILocation(line: 819, column: 43, scope: !8733)
!8738 = !DILocalVariable(name: "addr", arg: 2, scope: !8733, file: !3, line: 819, type: !32)
!8739 = !DILocation(line: 819, column: 52, scope: !8733)
!8740 = !DILocalVariable(name: "phy_id", arg: 3, scope: !8733, file: !3, line: 819, type: !2515)
!8741 = !DILocation(line: 819, column: 63, scope: !8733)
!8742 = !DILocalVariable(name: "phy_reg", scope: !8733, file: !3, line: 821, type: !32)
!8743 = !DILocation(line: 821, column: 6, scope: !8733)
!8744 = !DILocation(line: 824, column: 25, scope: !8733)
!8745 = !DILocation(line: 824, column: 30, scope: !8733)
!8746 = !DILocation(line: 824, column: 12, scope: !8733)
!8747 = !DILocation(line: 824, column: 10, scope: !8733)
!8748 = !DILocation(line: 825, column: 6, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 825, column: 6)
!8750 = !DILocation(line: 825, column: 14, scope: !8749)
!8751 = !DILocation(line: 825, column: 6, scope: !8733)
!8752 = !DILocation(line: 827, column: 11, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8749, file: !3, line: 825, column: 19)
!8754 = !DILocation(line: 827, column: 19, scope: !8753)
!8755 = !DILocation(line: 827, column: 27, scope: !8753)
!8756 = !DILocation(line: 827, column: 30, scope: !8753)
!8757 = !DILocation(line: 827, column: 38, scope: !8753)
!8758 = !DILocation(line: 827, column: 10, scope: !8753)
!8759 = !DILocation(line: 827, column: 3, scope: !8753)
!8760 = !DILocation(line: 830, column: 12, scope: !8733)
!8761 = !DILocation(line: 830, column: 20, scope: !8733)
!8762 = !DILocation(line: 830, column: 3, scope: !8733)
!8763 = !DILocation(line: 830, column: 10, scope: !8733)
!8764 = !DILocation(line: 833, column: 25, scope: !8733)
!8765 = !DILocation(line: 833, column: 30, scope: !8733)
!8766 = !DILocation(line: 833, column: 12, scope: !8733)
!8767 = !DILocation(line: 833, column: 10, scope: !8733)
!8768 = !DILocation(line: 834, column: 6, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 834, column: 6)
!8770 = !DILocation(line: 834, column: 14, scope: !8769)
!8771 = !DILocation(line: 834, column: 6, scope: !8733)
!8772 = !DILocation(line: 836, column: 11, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 834, column: 19)
!8774 = !DILocation(line: 836, column: 19, scope: !8773)
!8775 = !DILocation(line: 836, column: 27, scope: !8773)
!8776 = !DILocation(line: 836, column: 30, scope: !8773)
!8777 = !DILocation(line: 836, column: 38, scope: !8773)
!8778 = !DILocation(line: 836, column: 10, scope: !8773)
!8779 = !DILocation(line: 836, column: 3, scope: !8773)
!8780 = !DILocation(line: 839, column: 13, scope: !8733)
!8781 = !DILocation(line: 839, column: 3, scope: !8733)
!8782 = !DILocation(line: 839, column: 10, scope: !8733)
!8783 = !DILocation(line: 842, column: 8, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 842, column: 6)
!8785 = !DILocation(line: 842, column: 7, scope: !8784)
!8786 = !DILocation(line: 842, column: 15, scope: !8784)
!8787 = !DILocation(line: 842, column: 29, scope: !8784)
!8788 = !DILocation(line: 842, column: 6, scope: !8733)
!8789 = !DILocation(line: 843, column: 3, scope: !8784)
!8790 = !DILocation(line: 845, column: 2, scope: !8733)
!8791 = !DILocation(line: 846, column: 1, scope: !8733)
!8792 = distinct !DISubprogram(name: "phy_device_register", scope: !3, file: !3, line: 893, type: !7135, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8793 = !DILocalVariable(name: "phydev", arg: 1, scope: !8792, file: !3, line: 893, type: !7020)
!8794 = !DILocation(line: 893, column: 44, scope: !8792)
!8795 = !DILocalVariable(name: "err", scope: !8792, file: !3, line: 895, type: !32)
!8796 = !DILocation(line: 895, column: 6, scope: !8792)
!8797 = !DILocation(line: 897, column: 33, scope: !8792)
!8798 = !DILocation(line: 897, column: 41, scope: !8792)
!8799 = !DILocation(line: 897, column: 8, scope: !8792)
!8800 = !DILocation(line: 897, column: 6, scope: !8792)
!8801 = !DILocation(line: 898, column: 6, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8792, file: !3, line: 898, column: 6)
!8803 = !DILocation(line: 898, column: 6, scope: !8792)
!8804 = !DILocation(line: 899, column: 10, scope: !8802)
!8805 = !DILocation(line: 899, column: 3, scope: !8802)
!8806 = !DILocation(line: 902, column: 19, scope: !8792)
!8807 = !DILocation(line: 902, column: 2, scope: !8792)
!8808 = !DILocation(line: 905, column: 24, scope: !8792)
!8809 = !DILocation(line: 905, column: 8, scope: !8792)
!8810 = !DILocation(line: 905, column: 6, scope: !8792)
!8811 = !DILocation(line: 906, column: 6, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8792, file: !3, line: 906, column: 6)
!8813 = !DILocation(line: 906, column: 6, scope: !8792)
!8814 = !DILocation(line: 907, column: 3, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 906, column: 11)
!8816 = !DILocation(line: 908, column: 3, scope: !8815)
!8817 = !DILocation(line: 911, column: 20, scope: !8792)
!8818 = !DILocation(line: 911, column: 28, scope: !8792)
!8819 = !DILocation(line: 911, column: 33, scope: !8792)
!8820 = !DILocation(line: 911, column: 8, scope: !8792)
!8821 = !DILocation(line: 911, column: 6, scope: !8792)
!8822 = !DILocation(line: 912, column: 6, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8792, file: !3, line: 912, column: 6)
!8824 = !DILocation(line: 912, column: 6, scope: !8792)
!8825 = !DILocation(line: 913, column: 3, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8823, file: !3, line: 912, column: 11)
!8827 = !DILocation(line: 914, column: 3, scope: !8826)
!8828 = !DILocation(line: 917, column: 2, scope: !8792)
!8829 = !DILabel(scope: !8792, name: "out", file: !3, line: 919)
!8830 = !DILocation(line: 919, column: 2, scope: !8792)
!8831 = !DILocation(line: 921, column: 19, scope: !8792)
!8832 = !DILocation(line: 921, column: 2, scope: !8792)
!8833 = !DILocation(line: 923, column: 29, scope: !8792)
!8834 = !DILocation(line: 923, column: 37, scope: !8792)
!8835 = !DILocation(line: 923, column: 2, scope: !8792)
!8836 = !DILocation(line: 924, column: 9, scope: !8792)
!8837 = !DILocation(line: 924, column: 2, scope: !8792)
!8838 = !DILocation(line: 925, column: 1, scope: !8792)
!8839 = distinct !DISubprogram(name: "phy_device_reset", scope: !7022, file: !7022, line: 1429, type: !8840, scopeLine: 1430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8840 = !DISubroutineType(types: !8841)
!8841 = !{null, !7020, !32}
!8842 = !DILocalVariable(name: "phydev", arg: 1, scope: !8839, file: !7022, line: 1429, type: !7020)
!8843 = !DILocation(line: 1429, column: 56, scope: !8839)
!8844 = !DILocalVariable(name: "value", arg: 2, scope: !8839, file: !7022, line: 1429, type: !32)
!8845 = !DILocation(line: 1429, column: 68, scope: !8839)
!8846 = !DILocation(line: 1431, column: 21, scope: !8839)
!8847 = !DILocation(line: 1431, column: 29, scope: !8839)
!8848 = !DILocation(line: 1431, column: 35, scope: !8839)
!8849 = !DILocation(line: 1431, column: 2, scope: !8839)
!8850 = !DILocation(line: 1432, column: 1, scope: !8839)
!8851 = distinct !DISubprogram(name: "phy_scan_fixups", scope: !3, file: !3, line: 460, type: !7135, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8852 = !DILocalVariable(name: "phydev", arg: 1, scope: !8851, file: !3, line: 460, type: !7020)
!8853 = !DILocation(line: 460, column: 47, scope: !8851)
!8854 = !DILocalVariable(name: "fixup", scope: !8851, file: !3, line: 462, type: !7541)
!8855 = !DILocation(line: 462, column: 20, scope: !8851)
!8856 = !DILocation(line: 464, column: 2, scope: !8851)
!8857 = !DILocalVariable(name: "__mptr", scope: !8858, file: !3, line: 465, type: !591)
!8858 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 465, column: 2)
!8859 = distinct !DILexicalBlock(scope: !8851, file: !3, line: 465, column: 2)
!8860 = !DILocation(line: 465, column: 2, scope: !8858)
!8861 = !DILocation(line: 465, column: 2, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8858, file: !3, line: 465, column: 2)
!8863 = !DILocation(line: 465, column: 2, scope: !8859)
!8864 = !DILocation(line: 465, column: 2, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 465, column: 2)
!8866 = !DILocation(line: 466, column: 23, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 466, column: 7)
!8868 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 465, column: 52)
!8869 = !DILocation(line: 466, column: 31, scope: !8867)
!8870 = !DILocation(line: 466, column: 7, scope: !8867)
!8871 = !DILocation(line: 466, column: 7, scope: !8868)
!8872 = !DILocalVariable(name: "err", scope: !8873, file: !3, line: 467, type: !32)
!8873 = distinct !DILexicalBlock(scope: !8867, file: !3, line: 466, column: 39)
!8874 = !DILocation(line: 467, column: 8, scope: !8873)
!8875 = !DILocation(line: 467, column: 14, scope: !8873)
!8876 = !DILocation(line: 467, column: 21, scope: !8873)
!8877 = !DILocation(line: 467, column: 25, scope: !8873)
!8878 = !DILocation(line: 469, column: 8, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8873, file: !3, line: 469, column: 8)
!8880 = !DILocation(line: 469, column: 12, scope: !8879)
!8881 = !DILocation(line: 469, column: 8, scope: !8873)
!8882 = !DILocation(line: 470, column: 5, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 469, column: 17)
!8884 = !DILocation(line: 471, column: 12, scope: !8883)
!8885 = !DILocation(line: 471, column: 5, scope: !8883)
!8886 = !DILocation(line: 473, column: 4, scope: !8873)
!8887 = !DILocation(line: 473, column: 12, scope: !8873)
!8888 = !DILocation(line: 473, column: 23, scope: !8873)
!8889 = !DILocation(line: 474, column: 3, scope: !8873)
!8890 = !DILocation(line: 475, column: 2, scope: !8868)
!8891 = !DILocalVariable(name: "__mptr", scope: !8892, file: !3, line: 465, type: !591)
!8892 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 465, column: 2)
!8893 = !DILocation(line: 465, column: 2, scope: !8892)
!8894 = !DILocation(line: 465, column: 2, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8892, file: !3, line: 465, column: 2)
!8896 = distinct !{!8896, !8863, !8897}
!8897 = !DILocation(line: 475, column: 2, scope: !8859)
!8898 = !DILocation(line: 476, column: 2, scope: !8851)
!8899 = !DILocation(line: 478, column: 2, scope: !8851)
!8900 = !DILocation(line: 479, column: 1, scope: !8851)
!8901 = distinct !DISubprogram(name: "phy_device_remove", scope: !3, file: !3, line: 936, type: !7161, scopeLine: 937, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8902 = !DILocalVariable(name: "phydev", arg: 1, scope: !8901, file: !3, line: 936, type: !7020)
!8903 = !DILocation(line: 936, column: 43, scope: !8901)
!8904 = !DILocation(line: 938, column: 6, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8901, file: !3, line: 938, column: 6)
!8906 = !DILocation(line: 938, column: 14, scope: !8905)
!8907 = !DILocation(line: 938, column: 6, scope: !8901)
!8908 = !DILocation(line: 939, column: 30, scope: !8905)
!8909 = !DILocation(line: 939, column: 38, scope: !8905)
!8910 = !DILocation(line: 939, column: 3, scope: !8905)
!8911 = !DILocation(line: 941, column: 14, scope: !8901)
!8912 = !DILocation(line: 941, column: 22, scope: !8901)
!8913 = !DILocation(line: 941, column: 27, scope: !8901)
!8914 = !DILocation(line: 941, column: 2, scope: !8901)
!8915 = !DILocation(line: 944, column: 19, scope: !8901)
!8916 = !DILocation(line: 944, column: 2, scope: !8901)
!8917 = !DILocation(line: 946, column: 29, scope: !8901)
!8918 = !DILocation(line: 946, column: 37, scope: !8901)
!8919 = !DILocation(line: 946, column: 2, scope: !8901)
!8920 = !DILocation(line: 947, column: 1, scope: !8901)
!8921 = distinct !DISubprogram(name: "unregister_mii_timestamper", scope: !7336, file: !7336, line: 115, type: !8922, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8922 = !DISubroutineType(types: !8923)
!8923 = !{null, !7334}
!8924 = !DILocalVariable(name: "mii_ts", arg: 1, scope: !8921, file: !7336, line: 115, type: !7334)
!8925 = !DILocation(line: 115, column: 71, scope: !8921)
!8926 = !DILocation(line: 117, column: 1, scope: !8921)
!8927 = distinct !DISubprogram(name: "phy_find_first", scope: !3, file: !3, line: 954, type: !8928, scopeLine: 955, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8928 = !DISubroutineType(types: !8929)
!8929 = !{!7020, !7030}
!8930 = !DILocalVariable(name: "bus", arg: 1, scope: !8927, file: !3, line: 954, type: !7030)
!8931 = !DILocation(line: 954, column: 51, scope: !8927)
!8932 = !DILocalVariable(name: "phydev", scope: !8927, file: !3, line: 956, type: !7020)
!8933 = !DILocation(line: 956, column: 21, scope: !8927)
!8934 = !DILocalVariable(name: "addr", scope: !8927, file: !3, line: 957, type: !32)
!8935 = !DILocation(line: 957, column: 6, scope: !8927)
!8936 = !DILocation(line: 959, column: 12, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8927, file: !3, line: 959, column: 2)
!8938 = !DILocation(line: 959, column: 7, scope: !8937)
!8939 = !DILocation(line: 959, column: 17, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 959, column: 2)
!8941 = !DILocation(line: 959, column: 22, scope: !8940)
!8942 = !DILocation(line: 959, column: 2, scope: !8937)
!8943 = !DILocation(line: 960, column: 28, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8940, file: !3, line: 959, column: 46)
!8945 = !DILocation(line: 960, column: 33, scope: !8944)
!8946 = !DILocation(line: 960, column: 12, scope: !8944)
!8947 = !DILocation(line: 960, column: 10, scope: !8944)
!8948 = !DILocation(line: 961, column: 7, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8944, file: !3, line: 961, column: 7)
!8950 = !DILocation(line: 961, column: 7, scope: !8944)
!8951 = !DILocation(line: 962, column: 11, scope: !8949)
!8952 = !DILocation(line: 962, column: 4, scope: !8949)
!8953 = !DILocation(line: 963, column: 2, scope: !8944)
!8954 = !DILocation(line: 959, column: 42, scope: !8940)
!8955 = !DILocation(line: 959, column: 2, scope: !8940)
!8956 = distinct !{!8956, !8942, !8957}
!8957 = !DILocation(line: 963, column: 2, scope: !8937)
!8958 = !DILocation(line: 964, column: 2, scope: !8927)
!8959 = !DILocation(line: 965, column: 1, scope: !8927)
!8960 = distinct !DISubprogram(name: "phy_connect_direct", scope: !3, file: !3, line: 1006, type: !8961, scopeLine: 1009, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!8961 = !DISubroutineType(types: !8962)
!8962 = !{!32, !290, !7020, !405, !7269}
!8963 = !DILocalVariable(name: "dev", arg: 1, scope: !8960, file: !3, line: 1006, type: !290)
!8964 = !DILocation(line: 1006, column: 43, scope: !8960)
!8965 = !DILocalVariable(name: "phydev", arg: 2, scope: !8960, file: !3, line: 1006, type: !7020)
!8966 = !DILocation(line: 1006, column: 67, scope: !8960)
!8967 = !DILocalVariable(name: "handler", arg: 3, scope: !8960, file: !3, line: 1007, type: !405)
!8968 = !DILocation(line: 1007, column: 17, scope: !8960)
!8969 = !DILocalVariable(name: "interface", arg: 4, scope: !8960, file: !3, line: 1008, type: !7269)
!8970 = !DILocation(line: 1008, column: 26, scope: !8960)
!8971 = !DILocalVariable(name: "rc", scope: !8960, file: !3, line: 1010, type: !32)
!8972 = !DILocation(line: 1010, column: 6, scope: !8960)
!8973 = !DILocation(line: 1012, column: 7, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8960, file: !3, line: 1012, column: 6)
!8975 = !DILocation(line: 1012, column: 6, scope: !8960)
!8976 = !DILocation(line: 1013, column: 3, scope: !8974)
!8977 = !DILocation(line: 1015, column: 25, scope: !8960)
!8978 = !DILocation(line: 1015, column: 30, scope: !8960)
!8979 = !DILocation(line: 1015, column: 38, scope: !8960)
!8980 = !DILocation(line: 1015, column: 46, scope: !8960)
!8981 = !DILocation(line: 1015, column: 57, scope: !8960)
!8982 = !DILocation(line: 1015, column: 7, scope: !8960)
!8983 = !DILocation(line: 1015, column: 5, scope: !8960)
!8984 = !DILocation(line: 1016, column: 6, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8960, file: !3, line: 1016, column: 6)
!8986 = !DILocation(line: 1016, column: 6, scope: !8960)
!8987 = !DILocation(line: 1017, column: 10, scope: !8985)
!8988 = !DILocation(line: 1017, column: 3, scope: !8985)
!8989 = !DILocation(line: 1019, column: 19, scope: !8960)
!8990 = !DILocation(line: 1019, column: 27, scope: !8960)
!8991 = !DILocation(line: 1019, column: 2, scope: !8960)
!8992 = !DILocation(line: 1020, column: 29, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8960, file: !3, line: 1020, column: 6)
!8994 = !DILocation(line: 1020, column: 6, scope: !8993)
!8995 = !DILocation(line: 1020, column: 6, scope: !8960)
!8996 = !DILocation(line: 1021, column: 25, scope: !8993)
!8997 = !DILocation(line: 1021, column: 3, scope: !8993)
!8998 = !DILocation(line: 1023, column: 2, scope: !8960)
!8999 = !DILocation(line: 1024, column: 1, scope: !8960)
!9000 = distinct !DISubprogram(name: "phy_attach_direct", scope: !3, file: !3, line: 1318, type: !9001, scopeLine: 1320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9001 = !DISubroutineType(types: !9002)
!9002 = !{!32, !290, !7020, !987, !7269}
!9003 = !DILocalVariable(name: "dev", arg: 1, scope: !9000, file: !3, line: 1318, type: !290)
!9004 = !DILocation(line: 1318, column: 42, scope: !9000)
!9005 = !DILocalVariable(name: "phydev", arg: 2, scope: !9000, file: !3, line: 1318, type: !7020)
!9006 = !DILocation(line: 1318, column: 66, scope: !9000)
!9007 = !DILocalVariable(name: "flags", arg: 3, scope: !9000, file: !3, line: 1319, type: !987)
!9008 = !DILocation(line: 1319, column: 13, scope: !9000)
!9009 = !DILocalVariable(name: "interface", arg: 4, scope: !9000, file: !3, line: 1319, type: !7269)
!9010 = !DILocation(line: 1319, column: 36, scope: !9000)
!9011 = !DILocalVariable(name: "bus", scope: !9000, file: !3, line: 1321, type: !7030)
!9012 = !DILocation(line: 1321, column: 18, scope: !9000)
!9013 = !DILocation(line: 1321, column: 24, scope: !9000)
!9014 = !DILocation(line: 1321, column: 32, scope: !9000)
!9015 = !DILocation(line: 1321, column: 37, scope: !9000)
!9016 = !DILocalVariable(name: "d", scope: !9000, file: !3, line: 1322, type: !6545)
!9017 = !DILocation(line: 1322, column: 17, scope: !9000)
!9018 = !DILocation(line: 1322, column: 22, scope: !9000)
!9019 = !DILocation(line: 1322, column: 30, scope: !9000)
!9020 = !DILocation(line: 1322, column: 35, scope: !9000)
!9021 = !DILocalVariable(name: "ndev_owner", scope: !9000, file: !3, line: 1323, type: !980)
!9022 = !DILocation(line: 1323, column: 17, scope: !9000)
!9023 = !DILocalVariable(name: "using_genphy", scope: !9000, file: !3, line: 1324, type: !771)
!9024 = !DILocation(line: 1324, column: 7, scope: !9000)
!9025 = !DILocalVariable(name: "err", scope: !9000, file: !3, line: 1325, type: !32)
!9026 = !DILocation(line: 1325, column: 6, scope: !9000)
!9027 = !DILocation(line: 1332, column: 6, scope: !9028)
!9028 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1332, column: 6)
!9029 = !DILocation(line: 1332, column: 6, scope: !9000)
!9030 = !DILocation(line: 1333, column: 16, scope: !9028)
!9031 = !DILocation(line: 1333, column: 21, scope: !9028)
!9032 = !DILocation(line: 1333, column: 25, scope: !9028)
!9033 = !DILocation(line: 1333, column: 33, scope: !9028)
!9034 = !DILocation(line: 1333, column: 41, scope: !9028)
!9035 = !DILocation(line: 1333, column: 14, scope: !9028)
!9036 = !DILocation(line: 1333, column: 3, scope: !9028)
!9037 = !DILocation(line: 1334, column: 6, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1334, column: 6)
!9039 = !DILocation(line: 1334, column: 20, scope: !9038)
!9040 = !DILocation(line: 1334, column: 25, scope: !9038)
!9041 = !DILocation(line: 1334, column: 17, scope: !9038)
!9042 = !DILocation(line: 1334, column: 31, scope: !9038)
!9043 = !DILocation(line: 1334, column: 50, scope: !9038)
!9044 = !DILocation(line: 1334, column: 55, scope: !9038)
!9045 = !DILocation(line: 1334, column: 35, scope: !9038)
!9046 = !DILocation(line: 1334, column: 6, scope: !9000)
!9047 = !DILocation(line: 1335, column: 3, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9038, file: !3, line: 1334, column: 63)
!9049 = !DILocation(line: 1336, column: 3, scope: !9048)
!9050 = !DILocation(line: 1339, column: 13, scope: !9000)
!9051 = !DILocation(line: 1339, column: 2, scope: !9000)
!9052 = !DILocation(line: 1344, column: 7, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1344, column: 6)
!9054 = !DILocation(line: 1344, column: 10, scope: !9053)
!9055 = !DILocation(line: 1344, column: 6, scope: !9000)
!9056 = !DILocation(line: 1345, column: 7, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9058, file: !3, line: 1345, column: 7)
!9058 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 1344, column: 18)
!9059 = !DILocation(line: 1345, column: 15, scope: !9057)
!9060 = !DILocation(line: 1345, column: 7, scope: !9058)
!9061 = !DILocation(line: 1346, column: 4, scope: !9057)
!9062 = !DILocation(line: 1346, column: 7, scope: !9057)
!9063 = !DILocation(line: 1346, column: 14, scope: !9057)
!9064 = !DILocation(line: 1348, column: 4, scope: !9057)
!9065 = !DILocation(line: 1348, column: 7, scope: !9057)
!9066 = !DILocation(line: 1348, column: 14, scope: !9057)
!9067 = !DILocation(line: 1350, column: 16, scope: !9058)
!9068 = !DILocation(line: 1351, column: 2, scope: !9058)
!9069 = !DILocation(line: 1353, column: 22, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1353, column: 6)
!9071 = !DILocation(line: 1353, column: 25, scope: !9070)
!9072 = !DILocation(line: 1353, column: 33, scope: !9070)
!9073 = !DILocation(line: 1353, column: 7, scope: !9070)
!9074 = !DILocation(line: 1353, column: 6, scope: !9000)
!9075 = !DILocation(line: 1354, column: 3, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 1353, column: 41)
!9077 = !DILocation(line: 1355, column: 7, scope: !9076)
!9078 = !DILocation(line: 1356, column: 3, scope: !9076)
!9079 = !DILocation(line: 1359, column: 6, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1359, column: 6)
!9081 = !DILocation(line: 1359, column: 6, scope: !9000)
!9082 = !DILocation(line: 1360, column: 9, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 1359, column: 20)
!9084 = !DILocation(line: 1360, column: 12, scope: !9083)
!9085 = !DILocation(line: 1360, column: 20, scope: !9083)
!9086 = !DILocation(line: 1360, column: 26, scope: !9083)
!9087 = !DILocation(line: 1360, column: 7, scope: !9083)
!9088 = !DILocation(line: 1361, column: 7, scope: !9089)
!9089 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 1361, column: 7)
!9090 = !DILocation(line: 1361, column: 11, scope: !9089)
!9091 = !DILocation(line: 1361, column: 7, scope: !9083)
!9092 = !DILocation(line: 1362, column: 29, scope: !9089)
!9093 = !DILocation(line: 1362, column: 10, scope: !9089)
!9094 = !DILocation(line: 1362, column: 8, scope: !9089)
!9095 = !DILocation(line: 1362, column: 4, scope: !9089)
!9096 = !DILocation(line: 1364, column: 7, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 1364, column: 7)
!9098 = !DILocation(line: 1364, column: 7, scope: !9083)
!9099 = !DILocation(line: 1365, column: 4, scope: !9097)
!9100 = !DILocation(line: 1366, column: 2, scope: !9083)
!9101 = !DILocation(line: 1368, column: 6, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1368, column: 6)
!9103 = !DILocation(line: 1368, column: 14, scope: !9102)
!9104 = !DILocation(line: 1368, column: 6, scope: !9000)
!9105 = !DILocation(line: 1369, column: 3, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9102, file: !3, line: 1368, column: 28)
!9107 = !DILocation(line: 1370, column: 7, scope: !9106)
!9108 = !DILocation(line: 1371, column: 3, scope: !9106)
!9109 = !DILocation(line: 1374, column: 2, scope: !9000)
!9110 = !DILocation(line: 1374, column: 10, scope: !9000)
!9111 = !DILocation(line: 1374, column: 26, scope: !9000)
!9112 = !DILocation(line: 1375, column: 6, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1375, column: 6)
!9114 = !DILocation(line: 1375, column: 6, scope: !9000)
!9115 = !DILocation(line: 1376, column: 26, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9113, file: !3, line: 1375, column: 11)
!9117 = !DILocation(line: 1376, column: 3, scope: !9116)
!9118 = !DILocation(line: 1376, column: 11, scope: !9116)
!9119 = !DILocation(line: 1376, column: 24, scope: !9116)
!9120 = !DILocation(line: 1377, column: 17, scope: !9116)
!9121 = !DILocation(line: 1377, column: 3, scope: !9116)
!9122 = !DILocation(line: 1377, column: 8, scope: !9116)
!9123 = !DILocation(line: 1377, column: 15, scope: !9116)
!9124 = !DILocation(line: 1379, column: 7, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9116, file: !3, line: 1379, column: 7)
!9126 = !DILocation(line: 1379, column: 15, scope: !9125)
!9127 = !DILocation(line: 1379, column: 7, scope: !9116)
!9128 = !DILocation(line: 1380, column: 19, scope: !9125)
!9129 = !DILocation(line: 1380, column: 27, scope: !9125)
!9130 = !DILocation(line: 1380, column: 4, scope: !9125)
!9131 = !DILocation(line: 1380, column: 9, scope: !9125)
!9132 = !DILocation(line: 1380, column: 17, scope: !9125)
!9133 = !DILocation(line: 1381, column: 2, scope: !9116)
!9134 = !DILocation(line: 1391, column: 2, scope: !9000)
!9135 = !DILocation(line: 1391, column: 10, scope: !9000)
!9136 = !DILocation(line: 1391, column: 22, scope: !9000)
!9137 = !DILocation(line: 1393, column: 25, scope: !9000)
!9138 = !DILocation(line: 1393, column: 2, scope: !9000)
!9139 = !DILocation(line: 1395, column: 7, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1395, column: 6)
!9141 = !DILocation(line: 1395, column: 15, scope: !9140)
!9142 = !DILocation(line: 1395, column: 6, scope: !9000)
!9143 = !DILocation(line: 1396, column: 28, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9140, file: !3, line: 1395, column: 29)
!9145 = !DILocation(line: 1396, column: 36, scope: !9144)
!9146 = !DILocation(line: 1396, column: 41, scope: !9144)
!9147 = !DILocation(line: 1396, column: 45, scope: !9144)
!9148 = !DILocation(line: 1396, column: 9, scope: !9144)
!9149 = !DILocation(line: 1396, column: 7, scope: !9144)
!9150 = !DILocation(line: 1398, column: 7, scope: !9151)
!9151 = distinct !DILexicalBlock(scope: !9144, file: !3, line: 1398, column: 7)
!9152 = !DILocation(line: 1398, column: 7, scope: !9144)
!9153 = !DILocation(line: 1399, column: 4, scope: !9151)
!9154 = !DILocation(line: 1400, column: 2, scope: !9144)
!9155 = !DILocation(line: 1402, column: 23, scope: !9000)
!9156 = !DILocation(line: 1402, column: 2, scope: !9000)
!9157 = !DILocation(line: 1402, column: 10, scope: !9000)
!9158 = !DILocation(line: 1402, column: 20, scope: !9000)
!9159 = !DILocation(line: 1404, column: 22, scope: !9000)
!9160 = !DILocation(line: 1404, column: 2, scope: !9000)
!9161 = !DILocation(line: 1404, column: 10, scope: !9000)
!9162 = !DILocation(line: 1404, column: 20, scope: !9000)
!9163 = !DILocation(line: 1406, column: 2, scope: !9000)
!9164 = !DILocation(line: 1406, column: 10, scope: !9000)
!9165 = !DILocation(line: 1406, column: 16, scope: !9000)
!9166 = !DILocation(line: 1411, column: 6, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1411, column: 6)
!9168 = !DILocation(line: 1411, column: 6, scope: !9000)
!9169 = !DILocation(line: 1412, column: 21, scope: !9167)
!9170 = !DILocation(line: 1412, column: 29, scope: !9167)
!9171 = !DILocation(line: 1412, column: 3, scope: !9167)
!9172 = !DILocation(line: 1418, column: 20, scope: !9000)
!9173 = !DILocation(line: 1418, column: 8, scope: !9000)
!9174 = !DILocation(line: 1418, column: 6, scope: !9000)
!9175 = !DILocation(line: 1419, column: 6, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1419, column: 6)
!9177 = !DILocation(line: 1419, column: 6, scope: !9000)
!9178 = !DILocation(line: 1420, column: 3, scope: !9176)
!9179 = !DILocation(line: 1422, column: 31, scope: !9000)
!9180 = !DILocation(line: 1422, column: 8, scope: !9000)
!9181 = !DILocation(line: 1422, column: 6, scope: !9000)
!9182 = !DILocation(line: 1423, column: 6, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1423, column: 6)
!9184 = !DILocation(line: 1423, column: 6, scope: !9000)
!9185 = !DILocation(line: 1424, column: 10, scope: !9183)
!9186 = !DILocation(line: 1424, column: 3, scope: !9183)
!9187 = !DILocation(line: 1426, column: 13, scope: !9000)
!9188 = !DILocation(line: 1426, column: 2, scope: !9000)
!9189 = !DILocation(line: 1427, column: 28, scope: !9000)
!9190 = !DILocation(line: 1427, column: 2, scope: !9000)
!9191 = !DILocation(line: 1429, column: 9, scope: !9000)
!9192 = !DILocation(line: 1429, column: 2, scope: !9000)
!9193 = !DILabel(scope: !9000, name: "error", file: !3, line: 1431)
!9194 = !DILocation(line: 1431, column: 1, scope: !9000)
!9195 = !DILocation(line: 1433, column: 13, scope: !9000)
!9196 = !DILocation(line: 1433, column: 2, scope: !9000)
!9197 = !DILocation(line: 1434, column: 9, scope: !9000)
!9198 = !DILocation(line: 1434, column: 2, scope: !9000)
!9199 = !DILabel(scope: !9000, name: "error_module_put", file: !3, line: 1436)
!9200 = !DILocation(line: 1436, column: 1, scope: !9000)
!9201 = !DILocation(line: 1437, column: 13, scope: !9000)
!9202 = !DILocation(line: 1437, column: 16, scope: !9000)
!9203 = !DILocation(line: 1437, column: 24, scope: !9000)
!9204 = !DILocation(line: 1437, column: 2, scope: !9000)
!9205 = !DILabel(scope: !9000, name: "error_put_device", file: !3, line: 1438)
!9206 = !DILocation(line: 1438, column: 1, scope: !9000)
!9207 = !DILocation(line: 1439, column: 13, scope: !9000)
!9208 = !DILocation(line: 1439, column: 2, scope: !9000)
!9209 = !DILocation(line: 1440, column: 6, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1440, column: 6)
!9211 = !DILocation(line: 1440, column: 20, scope: !9210)
!9212 = !DILocation(line: 1440, column: 25, scope: !9210)
!9213 = !DILocation(line: 1440, column: 17, scope: !9210)
!9214 = !DILocation(line: 1440, column: 6, scope: !9000)
!9215 = !DILocation(line: 1441, column: 14, scope: !9210)
!9216 = !DILocation(line: 1441, column: 19, scope: !9210)
!9217 = !DILocation(line: 1441, column: 3, scope: !9210)
!9218 = !DILocation(line: 1442, column: 9, scope: !9000)
!9219 = !DILocation(line: 1442, column: 2, scope: !9000)
!9220 = !DILocation(line: 1443, column: 1, scope: !9000)
!9221 = distinct !DISubprogram(name: "phy_prepare_link", scope: !3, file: !3, line: 993, type: !9222, scopeLine: 995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9222 = !DISubroutineType(types: !9223)
!9223 = !{null, !7020, !405}
!9224 = !DILocalVariable(name: "phydev", arg: 1, scope: !9221, file: !3, line: 993, type: !7020)
!9225 = !DILocation(line: 993, column: 49, scope: !9221)
!9226 = !DILocalVariable(name: "handler", arg: 2, scope: !9221, file: !3, line: 994, type: !405)
!9227 = !DILocation(line: 994, column: 16, scope: !9221)
!9228 = !DILocation(line: 996, column: 24, scope: !9221)
!9229 = !DILocation(line: 996, column: 2, scope: !9221)
!9230 = !DILocation(line: 996, column: 10, scope: !9221)
!9231 = !DILocation(line: 996, column: 22, scope: !9221)
!9232 = !DILocation(line: 997, column: 1, scope: !9221)
!9233 = distinct !DISubprogram(name: "phy_interrupt_is_valid", scope: !7022, file: !7022, line: 1204, type: !9234, scopeLine: 1205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9234 = !DISubroutineType(types: !9235)
!9235 = !{!771, !7020}
!9236 = !DILocalVariable(name: "phydev", arg: 1, scope: !9233, file: !7022, line: 1204, type: !7020)
!9237 = !DILocation(line: 1204, column: 62, scope: !9233)
!9238 = !DILocation(line: 1206, column: 9, scope: !9233)
!9239 = !DILocation(line: 1206, column: 17, scope: !9233)
!9240 = !DILocation(line: 1206, column: 21, scope: !9233)
!9241 = !DILocation(line: 1206, column: 33, scope: !9233)
!9242 = !DILocation(line: 1206, column: 36, scope: !9233)
!9243 = !DILocation(line: 1206, column: 44, scope: !9233)
!9244 = !DILocation(line: 1206, column: 48, scope: !9233)
!9245 = !DILocation(line: 0, scope: !9233)
!9246 = !DILocation(line: 1206, column: 2, scope: !9233)
!9247 = distinct !DISubprogram(name: "phy_connect", scope: !3, file: !3, line: 1042, type: !9248, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9248 = !DISubroutineType(types: !9249)
!9249 = !{!7020, !290, !292, !405, !7269}
!9250 = !DILocalVariable(name: "dev", arg: 1, scope: !9247, file: !3, line: 1042, type: !290)
!9251 = !DILocation(line: 1042, column: 51, scope: !9247)
!9252 = !DILocalVariable(name: "bus_id", arg: 2, scope: !9247, file: !3, line: 1042, type: !292)
!9253 = !DILocation(line: 1042, column: 68, scope: !9247)
!9254 = !DILocalVariable(name: "handler", arg: 3, scope: !9247, file: !3, line: 1043, type: !405)
!9255 = !DILocation(line: 1043, column: 18, scope: !9247)
!9256 = !DILocalVariable(name: "interface", arg: 4, scope: !9247, file: !3, line: 1044, type: !7269)
!9257 = !DILocation(line: 1044, column: 27, scope: !9247)
!9258 = !DILocalVariable(name: "phydev", scope: !9247, file: !3, line: 1046, type: !7020)
!9259 = !DILocation(line: 1046, column: 21, scope: !9247)
!9260 = !DILocalVariable(name: "d", scope: !9247, file: !3, line: 1047, type: !6545)
!9261 = !DILocation(line: 1047, column: 17, scope: !9247)
!9262 = !DILocalVariable(name: "rc", scope: !9247, file: !3, line: 1048, type: !32)
!9263 = !DILocation(line: 1048, column: 6, scope: !9247)
!9264 = !DILocation(line: 1053, column: 52, scope: !9247)
!9265 = !DILocation(line: 1053, column: 6, scope: !9247)
!9266 = !DILocation(line: 1053, column: 4, scope: !9247)
!9267 = !DILocation(line: 1054, column: 7, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 1054, column: 6)
!9269 = !DILocation(line: 1054, column: 6, scope: !9247)
!9270 = !DILocation(line: 1055, column: 3, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 1054, column: 10)
!9272 = !DILocation(line: 1056, column: 10, scope: !9271)
!9273 = !DILocation(line: 1056, column: 3, scope: !9271)
!9274 = !DILocalVariable(name: "__mptr", scope: !9275, file: !3, line: 1058, type: !591)
!9275 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 1058, column: 11)
!9276 = !DILocation(line: 1058, column: 11, scope: !9275)
!9277 = !DILocalVariable(name: "__mptr", scope: !9278, file: !3, line: 1058, type: !591)
!9278 = distinct !DILexicalBlock(scope: !9275, file: !3, line: 1058, column: 11)
!9279 = !DILocation(line: 1058, column: 11, scope: !9278)
!9280 = !DILocation(line: 1058, column: 11, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 1058, column: 11)
!9282 = !DILocation(line: 1058, column: 11, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9275, file: !3, line: 1058, column: 11)
!9284 = !DILocation(line: 1058, column: 9, scope: !9247)
!9285 = !DILocation(line: 1060, column: 26, scope: !9247)
!9286 = !DILocation(line: 1060, column: 31, scope: !9247)
!9287 = !DILocation(line: 1060, column: 39, scope: !9247)
!9288 = !DILocation(line: 1060, column: 48, scope: !9247)
!9289 = !DILocation(line: 1060, column: 7, scope: !9247)
!9290 = !DILocation(line: 1060, column: 5, scope: !9247)
!9291 = !DILocation(line: 1061, column: 13, scope: !9247)
!9292 = !DILocation(line: 1061, column: 2, scope: !9247)
!9293 = !DILocation(line: 1062, column: 6, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 1062, column: 6)
!9295 = !DILocation(line: 1062, column: 6, scope: !9247)
!9296 = !DILocation(line: 1063, column: 18, scope: !9294)
!9297 = !DILocation(line: 1063, column: 10, scope: !9294)
!9298 = !DILocation(line: 1063, column: 3, scope: !9294)
!9299 = !DILocation(line: 1065, column: 9, scope: !9247)
!9300 = !DILocation(line: 1065, column: 2, scope: !9247)
!9301 = !DILocation(line: 1066, column: 1, scope: !9247)
!9302 = distinct !DISubprogram(name: "bus_find_device_by_name", scope: !6605, file: !6605, line: 172, type: !9303, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9303 = !DISubroutineType(types: !9304)
!9304 = !{!6545, !6603, !6545, !292}
!9305 = !DILocalVariable(name: "bus", arg: 1, scope: !9302, file: !6605, line: 172, type: !6603)
!9306 = !DILocation(line: 172, column: 71, scope: !9302)
!9307 = !DILocalVariable(name: "start", arg: 2, scope: !9302, file: !6605, line: 173, type: !6545)
!9308 = !DILocation(line: 173, column: 27, scope: !9302)
!9309 = !DILocalVariable(name: "name", arg: 3, scope: !9302, file: !6605, line: 174, type: !292)
!9310 = !DILocation(line: 174, column: 24, scope: !9302)
!9311 = !DILocation(line: 176, column: 25, scope: !9302)
!9312 = !DILocation(line: 176, column: 30, scope: !9302)
!9313 = !DILocation(line: 176, column: 37, scope: !9302)
!9314 = !DILocation(line: 176, column: 9, scope: !9302)
!9315 = !DILocation(line: 176, column: 2, scope: !9302)
!9316 = distinct !DISubprogram(name: "phy_disconnect", scope: !3, file: !3, line: 1074, type: !7161, scopeLine: 1075, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9317 = !DILocalVariable(name: "phydev", arg: 1, scope: !9316, file: !3, line: 1074, type: !7020)
!9318 = !DILocation(line: 1074, column: 40, scope: !9316)
!9319 = !DILocation(line: 1076, column: 21, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 1076, column: 6)
!9321 = !DILocation(line: 1076, column: 6, scope: !9320)
!9322 = !DILocation(line: 1076, column: 6, scope: !9316)
!9323 = !DILocation(line: 1077, column: 12, scope: !9320)
!9324 = !DILocation(line: 1077, column: 3, scope: !9320)
!9325 = !DILocation(line: 1079, column: 29, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 1079, column: 6)
!9327 = !DILocation(line: 1079, column: 6, scope: !9326)
!9328 = !DILocation(line: 1079, column: 6, scope: !9316)
!9329 = !DILocation(line: 1080, column: 22, scope: !9326)
!9330 = !DILocation(line: 1080, column: 3, scope: !9326)
!9331 = !DILocation(line: 1082, column: 2, scope: !9316)
!9332 = !DILocation(line: 1082, column: 10, scope: !9316)
!9333 = !DILocation(line: 1082, column: 22, scope: !9316)
!9334 = !DILocation(line: 1084, column: 13, scope: !9316)
!9335 = !DILocation(line: 1084, column: 2, scope: !9316)
!9336 = !DILocation(line: 1085, column: 1, scope: !9316)
!9337 = distinct !DISubprogram(name: "phy_is_started", scope: !7022, file: !7022, line: 921, type: !9234, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9338 = !DILocalVariable(name: "phydev", arg: 1, scope: !9337, file: !7022, line: 921, type: !7020)
!9339 = !DILocation(line: 921, column: 54, scope: !9337)
!9340 = !DILocation(line: 923, column: 9, scope: !9337)
!9341 = !DILocation(line: 923, column: 17, scope: !9337)
!9342 = !DILocation(line: 923, column: 23, scope: !9337)
!9343 = !DILocation(line: 923, column: 2, scope: !9337)
!9344 = distinct !DISubprogram(name: "phy_detach", scope: !3, file: !3, line: 1660, type: !7161, scopeLine: 1661, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9345 = !DILocalVariable(name: "phydev", arg: 1, scope: !9344, file: !3, line: 1660, type: !7020)
!9346 = !DILocation(line: 1660, column: 36, scope: !9344)
!9347 = !DILocalVariable(name: "dev", scope: !9344, file: !3, line: 1662, type: !290)
!9348 = !DILocation(line: 1662, column: 21, scope: !9344)
!9349 = !DILocation(line: 1662, column: 27, scope: !9344)
!9350 = !DILocation(line: 1662, column: 35, scope: !9344)
!9351 = !DILocalVariable(name: "ndev_owner", scope: !9344, file: !3, line: 1663, type: !980)
!9352 = !DILocation(line: 1663, column: 17, scope: !9344)
!9353 = !DILocalVariable(name: "bus", scope: !9344, file: !3, line: 1664, type: !7030)
!9354 = !DILocation(line: 1664, column: 18, scope: !9344)
!9355 = !DILocation(line: 1666, column: 6, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 1666, column: 6)
!9357 = !DILocation(line: 1666, column: 14, scope: !9356)
!9358 = !DILocation(line: 1666, column: 6, scope: !9344)
!9359 = !DILocation(line: 1667, column: 7, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 1667, column: 7)
!9361 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 1666, column: 27)
!9362 = !DILocation(line: 1667, column: 7, scope: !9361)
!9363 = !DILocation(line: 1668, column: 23, scope: !9360)
!9364 = !DILocation(line: 1668, column: 28, scope: !9360)
!9365 = !DILocation(line: 1668, column: 32, scope: !9360)
!9366 = !DILocation(line: 1668, column: 4, scope: !9360)
!9367 = !DILocation(line: 1669, column: 22, scope: !9361)
!9368 = !DILocation(line: 1669, column: 30, scope: !9361)
!9369 = !DILocation(line: 1669, column: 35, scope: !9361)
!9370 = !DILocation(line: 1669, column: 39, scope: !9361)
!9371 = !DILocation(line: 1669, column: 3, scope: !9361)
!9372 = !DILocation(line: 1670, column: 2, scope: !9361)
!9373 = !DILocation(line: 1672, column: 7, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 1672, column: 6)
!9375 = !DILocation(line: 1672, column: 15, scope: !9374)
!9376 = !DILocation(line: 1672, column: 6, scope: !9344)
!9377 = !DILocation(line: 1673, column: 22, scope: !9374)
!9378 = !DILocation(line: 1673, column: 30, scope: !9374)
!9379 = !DILocation(line: 1673, column: 35, scope: !9374)
!9380 = !DILocation(line: 1673, column: 39, scope: !9374)
!9381 = !DILocation(line: 1673, column: 3, scope: !9374)
!9382 = !DILocation(line: 1676, column: 14, scope: !9344)
!9383 = !DILocation(line: 1676, column: 2, scope: !9344)
!9384 = !DILocation(line: 1677, column: 6, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 1677, column: 6)
!9386 = !DILocation(line: 1677, column: 6, scope: !9344)
!9387 = !DILocation(line: 1678, column: 3, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9385, file: !3, line: 1677, column: 11)
!9389 = !DILocation(line: 1678, column: 11, scope: !9388)
!9390 = !DILocation(line: 1678, column: 25, scope: !9388)
!9391 = !DILocation(line: 1678, column: 32, scope: !9388)
!9392 = !DILocation(line: 1679, column: 3, scope: !9388)
!9393 = !DILocation(line: 1679, column: 11, scope: !9388)
!9394 = !DILocation(line: 1679, column: 24, scope: !9388)
!9395 = !DILocation(line: 1680, column: 2, scope: !9388)
!9396 = !DILocation(line: 1681, column: 2, scope: !9344)
!9397 = !DILocation(line: 1681, column: 10, scope: !9344)
!9398 = !DILocation(line: 1681, column: 18, scope: !9344)
!9399 = !DILocation(line: 1683, column: 30, scope: !9344)
!9400 = !DILocation(line: 1683, column: 2, scope: !9344)
!9401 = !DILocation(line: 1685, column: 6, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 1685, column: 6)
!9403 = !DILocation(line: 1685, column: 14, scope: !9402)
!9404 = !DILocation(line: 1685, column: 19, scope: !9402)
!9405 = !DILocation(line: 1685, column: 23, scope: !9402)
!9406 = !DILocation(line: 1685, column: 6, scope: !9344)
!9407 = !DILocation(line: 1686, column: 14, scope: !9402)
!9408 = !DILocation(line: 1686, column: 22, scope: !9402)
!9409 = !DILocation(line: 1686, column: 27, scope: !9402)
!9410 = !DILocation(line: 1686, column: 31, scope: !9402)
!9411 = !DILocation(line: 1686, column: 39, scope: !9402)
!9412 = !DILocation(line: 1686, column: 3, scope: !9402)
!9413 = !DILocation(line: 1693, column: 27, scope: !9414)
!9414 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 1693, column: 6)
!9415 = !DILocation(line: 1693, column: 6, scope: !9414)
!9416 = !DILocation(line: 1693, column: 35, scope: !9414)
!9417 = !DILocation(line: 1694, column: 31, scope: !9414)
!9418 = !DILocation(line: 1694, column: 6, scope: !9414)
!9419 = !DILocation(line: 1693, column: 6, scope: !9344)
!9420 = !DILocation(line: 1695, column: 26, scope: !9414)
!9421 = !DILocation(line: 1695, column: 34, scope: !9414)
!9422 = !DILocation(line: 1695, column: 39, scope: !9414)
!9423 = !DILocation(line: 1695, column: 3, scope: !9414)
!9424 = !DILocation(line: 1701, column: 8, scope: !9344)
!9425 = !DILocation(line: 1701, column: 16, scope: !9344)
!9426 = !DILocation(line: 1701, column: 21, scope: !9344)
!9427 = !DILocation(line: 1701, column: 6, scope: !9344)
!9428 = !DILocation(line: 1703, column: 14, scope: !9344)
!9429 = !DILocation(line: 1703, column: 22, scope: !9344)
!9430 = !DILocation(line: 1703, column: 27, scope: !9344)
!9431 = !DILocation(line: 1703, column: 2, scope: !9344)
!9432 = !DILocation(line: 1704, column: 6, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 1704, column: 6)
!9434 = !DILocation(line: 1704, column: 6, scope: !9344)
!9435 = !DILocation(line: 1705, column: 16, scope: !9433)
!9436 = !DILocation(line: 1705, column: 21, scope: !9433)
!9437 = !DILocation(line: 1705, column: 25, scope: !9433)
!9438 = !DILocation(line: 1705, column: 33, scope: !9433)
!9439 = !DILocation(line: 1705, column: 41, scope: !9433)
!9440 = !DILocation(line: 1705, column: 14, scope: !9433)
!9441 = !DILocation(line: 1705, column: 3, scope: !9433)
!9442 = !DILocation(line: 1706, column: 6, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9344, file: !3, line: 1706, column: 6)
!9444 = !DILocation(line: 1706, column: 20, scope: !9443)
!9445 = !DILocation(line: 1706, column: 25, scope: !9443)
!9446 = !DILocation(line: 1706, column: 17, scope: !9443)
!9447 = !DILocation(line: 1706, column: 6, scope: !9344)
!9448 = !DILocation(line: 1707, column: 14, scope: !9443)
!9449 = !DILocation(line: 1707, column: 19, scope: !9443)
!9450 = !DILocation(line: 1707, column: 3, scope: !9443)
!9451 = !DILocation(line: 1710, column: 19, scope: !9344)
!9452 = !DILocation(line: 1710, column: 2, scope: !9344)
!9453 = !DILocation(line: 1711, column: 1, scope: !9344)
!9454 = distinct !DISubprogram(name: "phy_init_hw", scope: !3, file: !3, line: 1122, type: !7135, scopeLine: 1123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9455 = !DILocalVariable(name: "phydev", arg: 1, scope: !9454, file: !3, line: 1122, type: !7020)
!9456 = !DILocation(line: 1122, column: 36, scope: !9454)
!9457 = !DILocalVariable(name: "ret", scope: !9454, file: !3, line: 1124, type: !32)
!9458 = !DILocation(line: 1124, column: 6, scope: !9454)
!9459 = !DILocation(line: 1127, column: 19, scope: !9454)
!9460 = !DILocation(line: 1127, column: 2, scope: !9454)
!9461 = !DILocation(line: 1129, column: 7, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 1129, column: 6)
!9463 = !DILocation(line: 1129, column: 15, scope: !9462)
!9464 = !DILocation(line: 1129, column: 6, scope: !9454)
!9465 = !DILocation(line: 1130, column: 3, scope: !9462)
!9466 = !DILocation(line: 1132, column: 6, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 1132, column: 6)
!9468 = !DILocation(line: 1132, column: 14, scope: !9467)
!9469 = !DILocation(line: 1132, column: 19, scope: !9467)
!9470 = !DILocation(line: 1132, column: 6, scope: !9454)
!9471 = !DILocation(line: 1133, column: 9, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 1132, column: 31)
!9473 = !DILocation(line: 1133, column: 17, scope: !9472)
!9474 = !DILocation(line: 1133, column: 22, scope: !9472)
!9475 = !DILocation(line: 1133, column: 33, scope: !9472)
!9476 = !DILocation(line: 1133, column: 7, scope: !9472)
!9477 = !DILocation(line: 1135, column: 8, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 1135, column: 7)
!9479 = !DILocation(line: 1135, column: 7, scope: !9472)
!9480 = !DILocation(line: 1136, column: 4, scope: !9478)
!9481 = !DILocation(line: 1136, column: 12, scope: !9478)
!9482 = !DILocation(line: 1136, column: 22, scope: !9478)
!9483 = !DILocation(line: 1137, column: 2, scope: !9472)
!9484 = !DILocation(line: 1139, column: 6, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 1139, column: 6)
!9486 = !DILocation(line: 1139, column: 10, scope: !9485)
!9487 = !DILocation(line: 1139, column: 6, scope: !9454)
!9488 = !DILocation(line: 1140, column: 10, scope: !9485)
!9489 = !DILocation(line: 1140, column: 3, scope: !9485)
!9490 = !DILocation(line: 1142, column: 24, scope: !9454)
!9491 = !DILocation(line: 1142, column: 8, scope: !9454)
!9492 = !DILocation(line: 1142, column: 6, scope: !9454)
!9493 = !DILocation(line: 1143, column: 6, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 1143, column: 6)
!9495 = !DILocation(line: 1143, column: 10, scope: !9494)
!9496 = !DILocation(line: 1143, column: 6, scope: !9454)
!9497 = !DILocation(line: 1144, column: 10, scope: !9494)
!9498 = !DILocation(line: 1144, column: 3, scope: !9494)
!9499 = !DILocation(line: 1146, column: 6, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9454, file: !3, line: 1146, column: 6)
!9501 = !DILocation(line: 1146, column: 14, scope: !9500)
!9502 = !DILocation(line: 1146, column: 19, scope: !9500)
!9503 = !DILocation(line: 1146, column: 6, scope: !9454)
!9504 = !DILocation(line: 1147, column: 9, scope: !9500)
!9505 = !DILocation(line: 1147, column: 17, scope: !9500)
!9506 = !DILocation(line: 1147, column: 22, scope: !9500)
!9507 = !DILocation(line: 1147, column: 34, scope: !9500)
!9508 = !DILocation(line: 1147, column: 7, scope: !9500)
!9509 = !DILocation(line: 1147, column: 3, scope: !9500)
!9510 = !DILocation(line: 1149, column: 9, scope: !9454)
!9511 = !DILocation(line: 1149, column: 2, scope: !9454)
!9512 = !DILocation(line: 1150, column: 1, scope: !9454)
!9513 = distinct !DISubprogram(name: "phy_attached_info", scope: !3, file: !3, line: 1153, type: !7161, scopeLine: 1154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9514 = !DILocalVariable(name: "phydev", arg: 1, scope: !9513, file: !3, line: 1153, type: !7020)
!9515 = !DILocation(line: 1153, column: 43, scope: !9513)
!9516 = !DILocation(line: 1155, column: 21, scope: !9513)
!9517 = !DILocation(line: 1155, column: 2, scope: !9513)
!9518 = !DILocation(line: 1156, column: 1, scope: !9513)
!9519 = distinct !DISubprogram(name: "phy_attached_print", scope: !3, file: !3, line: 1182, type: !9520, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9520 = !DISubroutineType(types: !9521)
!9521 = !{null, !7020, !292, null}
!9522 = !DILocalVariable(name: "phydev", arg: 1, scope: !9519, file: !3, line: 1182, type: !7020)
!9523 = !DILocation(line: 1182, column: 44, scope: !9519)
!9524 = !DILocalVariable(name: "fmt", arg: 2, scope: !9519, file: !3, line: 1182, type: !292)
!9525 = !DILocation(line: 1182, column: 64, scope: !9519)
!9526 = !DILocalVariable(name: "drv_name", scope: !9519, file: !3, line: 1184, type: !292)
!9527 = !DILocation(line: 1184, column: 14, scope: !9519)
!9528 = !DILocation(line: 1184, column: 25, scope: !9519)
!9529 = !DILocation(line: 1184, column: 33, scope: !9519)
!9530 = !DILocation(line: 1184, column: 39, scope: !9519)
!9531 = !DILocation(line: 1184, column: 47, scope: !9519)
!9532 = !DILocation(line: 1184, column: 52, scope: !9519)
!9533 = !DILocalVariable(name: "irq_str", scope: !9519, file: !3, line: 1185, type: !1038)
!9534 = !DILocation(line: 1185, column: 8, scope: !9519)
!9535 = !DILocation(line: 1185, column: 40, scope: !9519)
!9536 = !DILocation(line: 1185, column: 18, scope: !9519)
!9537 = !DILocation(line: 1187, column: 7, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 1187, column: 6)
!9539 = !DILocation(line: 1187, column: 6, scope: !9519)
!9540 = !DILocation(line: 1188, column: 3, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 1187, column: 12)
!9542 = !DILocation(line: 1191, column: 2, scope: !9541)
!9543 = !DILocalVariable(name: "ap", scope: !9544, file: !3, line: 1192, type: !9545)
!9544 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 1191, column: 9)
!9545 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !9546, line: 99, baseType: !9547)
!9546 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h", directory: "")
!9547 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !9546, line: 40, baseType: !9548)
!9548 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 1192, baseType: !9549)
!9549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9550, size: 192, elements: !2471)
!9550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 1192, size: 192, elements: !9551)
!9551 = !{!9552, !9553, !9554, !9555}
!9552 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !9550, file: !3, line: 1192, baseType: !7, size: 32)
!9553 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !9550, file: !3, line: 1192, baseType: !7, size: 32, offset: 32)
!9554 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !9550, file: !3, line: 1192, baseType: !591, size: 64, offset: 64)
!9555 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !9550, file: !3, line: 1192, baseType: !591, size: 64, offset: 128)
!9556 = !DILocation(line: 1192, column: 11, scope: !9544)
!9557 = !DILocation(line: 1194, column: 3, scope: !9544)
!9558 = !DILocation(line: 1198, column: 3, scope: !9544)
!9559 = !DILocation(line: 1199, column: 11, scope: !9544)
!9560 = !DILocation(line: 1199, column: 16, scope: !9544)
!9561 = !DILocation(line: 1199, column: 3, scope: !9544)
!9562 = !DILocation(line: 1200, column: 3, scope: !9544)
!9563 = !DILocation(line: 1202, column: 8, scope: !9519)
!9564 = !DILocation(line: 1202, column: 2, scope: !9519)
!9565 = !DILocation(line: 1203, column: 1, scope: !9519)
!9566 = distinct !DISubprogram(name: "phy_attached_info_irq", scope: !3, file: !3, line: 1160, type: !9567, scopeLine: 1161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9567 = !DISubroutineType(types: !9568)
!9568 = !{!1038, !7020}
!9569 = !DILocalVariable(name: "phydev", arg: 1, scope: !9566, file: !3, line: 1160, type: !7020)
!9570 = !DILocation(line: 1160, column: 48, scope: !9566)
!9571 = !DILocalVariable(name: "irq_str", scope: !9566, file: !3, line: 1162, type: !1038)
!9572 = !DILocation(line: 1162, column: 8, scope: !9566)
!9573 = !DILocalVariable(name: "irq_num", scope: !9566, file: !3, line: 1163, type: !3952)
!9574 = !DILocation(line: 1163, column: 7, scope: !9566)
!9575 = !DILocation(line: 1165, column: 9, scope: !9566)
!9576 = !DILocation(line: 1165, column: 17, scope: !9566)
!9577 = !DILocation(line: 1165, column: 2, scope: !9566)
!9578 = !DILocation(line: 1167, column: 11, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9566, file: !3, line: 1165, column: 22)
!9580 = !DILocation(line: 1168, column: 3, scope: !9579)
!9581 = !DILocation(line: 1170, column: 11, scope: !9579)
!9582 = !DILocation(line: 1171, column: 3, scope: !9579)
!9583 = !DILocation(line: 1173, column: 12, scope: !9579)
!9584 = !DILocation(line: 1173, column: 44, scope: !9579)
!9585 = !DILocation(line: 1173, column: 52, scope: !9579)
!9586 = !DILocation(line: 1173, column: 3, scope: !9579)
!9587 = !DILocation(line: 1174, column: 13, scope: !9579)
!9588 = !DILocation(line: 1174, column: 11, scope: !9579)
!9589 = !DILocation(line: 1175, column: 3, scope: !9579)
!9590 = !DILocation(line: 1178, column: 37, scope: !9566)
!9591 = !DILocation(line: 1178, column: 9, scope: !9566)
!9592 = !DILocation(line: 1178, column: 2, scope: !9566)
!9593 = distinct !DISubprogram(name: "phydev_name", scope: !7022, file: !7022, line: 1446, type: !9594, scopeLine: 1447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9594 = !DISubroutineType(types: !9595)
!9595 = !{!292, !9596}
!9596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9597, size: 64)
!9597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7021)
!9598 = !DILocalVariable(name: "phydev", arg: 1, scope: !9593, file: !7022, line: 1446, type: !9596)
!9599 = !DILocation(line: 1446, column: 64, scope: !9593)
!9600 = !DILocation(line: 1448, column: 19, scope: !9593)
!9601 = !DILocation(line: 1448, column: 27, scope: !9593)
!9602 = !DILocation(line: 1448, column: 32, scope: !9593)
!9603 = !DILocation(line: 1448, column: 9, scope: !9593)
!9604 = !DILocation(line: 1448, column: 2, scope: !9593)
!9605 = distinct !DISubprogram(name: "phy_sfp_attach", scope: !3, file: !3, line: 1251, type: !9606, scopeLine: 1252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9606 = !DISubroutineType(types: !9607)
!9607 = !{null, !591, !7327}
!9608 = !DILocalVariable(name: "upstream", arg: 1, scope: !9605, file: !3, line: 1251, type: !591)
!9609 = !DILocation(line: 1251, column: 27, scope: !9605)
!9610 = !DILocalVariable(name: "bus", arg: 2, scope: !9605, file: !3, line: 1251, type: !7327)
!9611 = !DILocation(line: 1251, column: 53, scope: !9605)
!9612 = !DILocalVariable(name: "phydev", scope: !9605, file: !3, line: 1253, type: !7020)
!9613 = !DILocation(line: 1253, column: 21, scope: !9605)
!9614 = !DILocation(line: 1253, column: 30, scope: !9605)
!9615 = !DILocation(line: 1255, column: 6, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 1255, column: 6)
!9617 = !DILocation(line: 1255, column: 14, scope: !9616)
!9618 = !DILocation(line: 1255, column: 6, scope: !9605)
!9619 = !DILocation(line: 1256, column: 35, scope: !9616)
!9620 = !DILocation(line: 1256, column: 3, scope: !9616)
!9621 = !DILocation(line: 1256, column: 11, scope: !9616)
!9622 = !DILocation(line: 1256, column: 25, scope: !9616)
!9623 = !DILocation(line: 1256, column: 33, scope: !9616)
!9624 = !DILocation(line: 1257, column: 2, scope: !9605)
!9625 = !DILocation(line: 1257, column: 10, scope: !9605)
!9626 = !DILocation(line: 1257, column: 27, scope: !9605)
!9627 = !DILocation(line: 1258, column: 1, scope: !9605)
!9628 = distinct !DISubprogram(name: "phy_sfp_detach", scope: !3, file: !3, line: 1268, type: !9606, scopeLine: 1269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9629 = !DILocalVariable(name: "upstream", arg: 1, scope: !9628, file: !3, line: 1268, type: !591)
!9630 = !DILocation(line: 1268, column: 27, scope: !9628)
!9631 = !DILocalVariable(name: "bus", arg: 2, scope: !9628, file: !3, line: 1268, type: !7327)
!9632 = !DILocation(line: 1268, column: 53, scope: !9628)
!9633 = !DILocalVariable(name: "phydev", scope: !9628, file: !3, line: 1270, type: !7020)
!9634 = !DILocation(line: 1270, column: 21, scope: !9628)
!9635 = !DILocation(line: 1270, column: 30, scope: !9628)
!9636 = !DILocation(line: 1272, column: 6, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9628, file: !3, line: 1272, column: 6)
!9638 = !DILocation(line: 1272, column: 14, scope: !9637)
!9639 = !DILocation(line: 1272, column: 6, scope: !9628)
!9640 = !DILocation(line: 1273, column: 3, scope: !9637)
!9641 = !DILocation(line: 1273, column: 11, scope: !9637)
!9642 = !DILocation(line: 1273, column: 25, scope: !9637)
!9643 = !DILocation(line: 1273, column: 33, scope: !9637)
!9644 = !DILocation(line: 1274, column: 2, scope: !9628)
!9645 = !DILocation(line: 1274, column: 10, scope: !9628)
!9646 = !DILocation(line: 1274, column: 27, scope: !9628)
!9647 = !DILocation(line: 1275, column: 1, scope: !9628)
!9648 = distinct !DISubprogram(name: "phy_sfp_probe", scope: !3, file: !3, line: 1283, type: !9649, scopeLine: 1285, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9649 = !DISubroutineType(types: !9650)
!9650 = !{!32, !7020, !9651}
!9651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9652, size: 64)
!9652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9653)
!9653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_upstream_ops", file: !9654, line: 520, size: 640, elements: !9655)
!9654 = !DIFile(filename: "./include/linux/sfp.h", directory: "/home/lizy2001/genbc/linux")
!9655 = !{!9656, !9658, !9659, !9784, !9785, !9789, !9790, !9791, !9792, !9796}
!9656 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !9653, file: !9654, line: 521, baseType: !9657, size: 64)
!9657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9606, size: 64)
!9658 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !9653, file: !9654, line: 522, baseType: !9657, size: 64, offset: 64)
!9659 = !DIDerivedType(tag: DW_TAG_member, name: "module_insert", scope: !9653, file: !9654, line: 523, baseType: !9660, size: 64, offset: 128)
!9660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9661, size: 64)
!9661 = !DISubroutineType(types: !9662)
!9662 = !{!32, !591, !9663}
!9663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9664, size: 64)
!9664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9665)
!9665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_eeprom_id", file: !9654, line: 229, size: 768, elements: !9666)
!9666 = !{!9667, !9772}
!9667 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9665, file: !9654, line: 230, baseType: !9668, size: 512)
!9668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_eeprom_base", file: !9654, line: 6, size: 512, elements: !9669)
!9669 = !{!9670, !9671, !9672, !9673, !9674, !9675, !9676, !9677, !9678, !9679, !9680, !9681, !9682, !9683, !9684, !9685, !9686, !9687, !9688, !9689, !9690, !9691, !9692, !9693, !9694, !9695, !9696, !9697, !9698, !9699, !9700, !9701, !9702, !9703, !9704, !9705, !9706, !9707, !9708, !9709, !9710, !9711, !9712, !9713, !9714, !9715, !9716, !9717, !9718, !9719, !9720, !9721, !9722, !9723, !9724, !9725, !9726, !9727, !9728, !9729, !9730, !9731, !9732, !9733, !9734, !9735, !9736, !9737, !9738, !9739, !9740, !9742, !9743, !9744, !9746, !9747, !9749, !9770, !9771}
!9670 = !DIDerivedType(tag: DW_TAG_member, name: "phys_id", scope: !9668, file: !9654, line: 7, baseType: !794, size: 8)
!9671 = !DIDerivedType(tag: DW_TAG_member, name: "phys_ext_id", scope: !9668, file: !9654, line: 8, baseType: !794, size: 8, offset: 8)
!9672 = !DIDerivedType(tag: DW_TAG_member, name: "connector", scope: !9668, file: !9654, line: 9, baseType: !794, size: 8, offset: 16)
!9673 = !DIDerivedType(tag: DW_TAG_member, name: "if_1x_copper_passive", scope: !9668, file: !9654, line: 83, baseType: !794, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 24)
!9674 = !DIDerivedType(tag: DW_TAG_member, name: "if_1x_copper_active", scope: !9668, file: !9654, line: 84, baseType: !794, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 24)
!9675 = !DIDerivedType(tag: DW_TAG_member, name: "if_1x_lx", scope: !9668, file: !9654, line: 85, baseType: !794, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 24)
!9676 = !DIDerivedType(tag: DW_TAG_member, name: "if_1x_sx", scope: !9668, file: !9654, line: 86, baseType: !794, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 24)
!9677 = !DIDerivedType(tag: DW_TAG_member, name: "e10g_base_sr", scope: !9668, file: !9654, line: 87, baseType: !794, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 24)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "e10g_base_lr", scope: !9668, file: !9654, line: 88, baseType: !794, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 24)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "e10g_base_lrm", scope: !9668, file: !9654, line: 89, baseType: !794, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 24)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "e10g_base_er", scope: !9668, file: !9654, line: 90, baseType: !794, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 24)
!9681 = !DIDerivedType(tag: DW_TAG_member, name: "sonet_oc3_short_reach", scope: !9668, file: !9654, line: 92, baseType: !794, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 24)
!9682 = !DIDerivedType(tag: DW_TAG_member, name: "sonet_oc3_smf_intermediate_reach", scope: !9668, file: !9654, line: 93, baseType: !794, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 24)
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "sonet_oc3_smf_long_reach", scope: !9668, file: !9654, line: 94, baseType: !794, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 24)
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "unallocated_5_3", scope: !9668, file: !9654, line: 95, baseType: !794, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 24)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "sonet_oc12_short_reach", scope: !9668, file: !9654, line: 96, baseType: !794, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 24)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "sonet_oc12_smf_intermediate_reach", scope: !9668, file: !9654, line: 97, baseType: !794, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 24)
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "sonet_oc12_smf_long_reach", scope: !9668, file: !9654, line: 98, baseType: !794, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 24)
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "unallocated_5_7", scope: !9668, file: !9654, line: 99, baseType: !794, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 24)
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "sonet_oc48_short_reach", scope: !9668, file: !9654, line: 101, baseType: !794, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 24)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "sonet_oc48_intermediate_reach", scope: !9668, file: !9654, line: 102, baseType: !794, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 24)
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "sonet_oc48_long_reach", scope: !9668, file: !9654, line: 103, baseType: !794, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 24)
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "sonet_reach_bit2", scope: !9668, file: !9654, line: 104, baseType: !794, size: 1, offset: 43, flags: DIFlagBitField, extraData: i64 24)
!9693 = !DIDerivedType(tag: DW_TAG_member, name: "sonet_reach_bit1", scope: !9668, file: !9654, line: 105, baseType: !794, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 24)
!9694 = !DIDerivedType(tag: DW_TAG_member, name: "sonet_oc192_short_reach", scope: !9668, file: !9654, line: 106, baseType: !794, size: 1, offset: 45, flags: DIFlagBitField, extraData: i64 24)
!9695 = !DIDerivedType(tag: DW_TAG_member, name: "escon_smf_1310_laser", scope: !9668, file: !9654, line: 107, baseType: !794, size: 1, offset: 46, flags: DIFlagBitField, extraData: i64 24)
!9696 = !DIDerivedType(tag: DW_TAG_member, name: "escon_mmf_1310_led", scope: !9668, file: !9654, line: 108, baseType: !794, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 24)
!9697 = !DIDerivedType(tag: DW_TAG_member, name: "e1000_base_sx", scope: !9668, file: !9654, line: 110, baseType: !794, size: 1, offset: 48, flags: DIFlagBitField, extraData: i64 24)
!9698 = !DIDerivedType(tag: DW_TAG_member, name: "e1000_base_lx", scope: !9668, file: !9654, line: 111, baseType: !794, size: 1, offset: 49, flags: DIFlagBitField, extraData: i64 24)
!9699 = !DIDerivedType(tag: DW_TAG_member, name: "e1000_base_cx", scope: !9668, file: !9654, line: 112, baseType: !794, size: 1, offset: 50, flags: DIFlagBitField, extraData: i64 24)
!9700 = !DIDerivedType(tag: DW_TAG_member, name: "e1000_base_t", scope: !9668, file: !9654, line: 113, baseType: !794, size: 1, offset: 51, flags: DIFlagBitField, extraData: i64 24)
!9701 = !DIDerivedType(tag: DW_TAG_member, name: "e100_base_lx", scope: !9668, file: !9654, line: 114, baseType: !794, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 24)
!9702 = !DIDerivedType(tag: DW_TAG_member, name: "e100_base_fx", scope: !9668, file: !9654, line: 115, baseType: !794, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 24)
!9703 = !DIDerivedType(tag: DW_TAG_member, name: "e_base_bx10", scope: !9668, file: !9654, line: 116, baseType: !794, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 24)
!9704 = !DIDerivedType(tag: DW_TAG_member, name: "e_base_px", scope: !9668, file: !9654, line: 117, baseType: !794, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 24)
!9705 = !DIDerivedType(tag: DW_TAG_member, name: "fc_tech_electrical_inter_enclosure", scope: !9668, file: !9654, line: 119, baseType: !794, size: 1, offset: 56, flags: DIFlagBitField, extraData: i64 24)
!9706 = !DIDerivedType(tag: DW_TAG_member, name: "fc_tech_lc", scope: !9668, file: !9654, line: 120, baseType: !794, size: 1, offset: 57, flags: DIFlagBitField, extraData: i64 24)
!9707 = !DIDerivedType(tag: DW_TAG_member, name: "fc_tech_sa", scope: !9668, file: !9654, line: 121, baseType: !794, size: 1, offset: 58, flags: DIFlagBitField, extraData: i64 24)
!9708 = !DIDerivedType(tag: DW_TAG_member, name: "fc_ll_m", scope: !9668, file: !9654, line: 122, baseType: !794, size: 1, offset: 59, flags: DIFlagBitField, extraData: i64 24)
!9709 = !DIDerivedType(tag: DW_TAG_member, name: "fc_ll_l", scope: !9668, file: !9654, line: 123, baseType: !794, size: 1, offset: 60, flags: DIFlagBitField, extraData: i64 24)
!9710 = !DIDerivedType(tag: DW_TAG_member, name: "fc_ll_i", scope: !9668, file: !9654, line: 124, baseType: !794, size: 1, offset: 61, flags: DIFlagBitField, extraData: i64 24)
!9711 = !DIDerivedType(tag: DW_TAG_member, name: "fc_ll_s", scope: !9668, file: !9654, line: 125, baseType: !794, size: 1, offset: 62, flags: DIFlagBitField, extraData: i64 24)
!9712 = !DIDerivedType(tag: DW_TAG_member, name: "fc_ll_v", scope: !9668, file: !9654, line: 126, baseType: !794, size: 1, offset: 63, flags: DIFlagBitField, extraData: i64 24)
!9713 = !DIDerivedType(tag: DW_TAG_member, name: "unallocated_8_0", scope: !9668, file: !9654, line: 128, baseType: !794, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 24)
!9714 = !DIDerivedType(tag: DW_TAG_member, name: "unallocated_8_1", scope: !9668, file: !9654, line: 129, baseType: !794, size: 1, offset: 65, flags: DIFlagBitField, extraData: i64 24)
!9715 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_ct_passive", scope: !9668, file: !9654, line: 130, baseType: !794, size: 1, offset: 66, flags: DIFlagBitField, extraData: i64 24)
!9716 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_ct_active", scope: !9668, file: !9654, line: 131, baseType: !794, size: 1, offset: 67, flags: DIFlagBitField, extraData: i64 24)
!9717 = !DIDerivedType(tag: DW_TAG_member, name: "fc_tech_ll", scope: !9668, file: !9654, line: 132, baseType: !794, size: 1, offset: 68, flags: DIFlagBitField, extraData: i64 24)
!9718 = !DIDerivedType(tag: DW_TAG_member, name: "fc_tech_sl", scope: !9668, file: !9654, line: 133, baseType: !794, size: 1, offset: 69, flags: DIFlagBitField, extraData: i64 24)
!9719 = !DIDerivedType(tag: DW_TAG_member, name: "fc_tech_sn", scope: !9668, file: !9654, line: 134, baseType: !794, size: 1, offset: 70, flags: DIFlagBitField, extraData: i64 24)
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "fc_tech_electrical_intra_enclosure", scope: !9668, file: !9654, line: 135, baseType: !794, size: 1, offset: 71, flags: DIFlagBitField, extraData: i64 24)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "fc_media_sm", scope: !9668, file: !9654, line: 137, baseType: !794, size: 1, offset: 72, flags: DIFlagBitField, extraData: i64 24)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "unallocated_9_1", scope: !9668, file: !9654, line: 138, baseType: !794, size: 1, offset: 73, flags: DIFlagBitField, extraData: i64 24)
!9723 = !DIDerivedType(tag: DW_TAG_member, name: "fc_media_m5", scope: !9668, file: !9654, line: 139, baseType: !794, size: 1, offset: 74, flags: DIFlagBitField, extraData: i64 24)
!9724 = !DIDerivedType(tag: DW_TAG_member, name: "fc_media_m6", scope: !9668, file: !9654, line: 140, baseType: !794, size: 1, offset: 75, flags: DIFlagBitField, extraData: i64 24)
!9725 = !DIDerivedType(tag: DW_TAG_member, name: "fc_media_tv", scope: !9668, file: !9654, line: 141, baseType: !794, size: 1, offset: 76, flags: DIFlagBitField, extraData: i64 24)
!9726 = !DIDerivedType(tag: DW_TAG_member, name: "fc_media_mi", scope: !9668, file: !9654, line: 142, baseType: !794, size: 1, offset: 77, flags: DIFlagBitField, extraData: i64 24)
!9727 = !DIDerivedType(tag: DW_TAG_member, name: "fc_media_tp", scope: !9668, file: !9654, line: 143, baseType: !794, size: 1, offset: 78, flags: DIFlagBitField, extraData: i64 24)
!9728 = !DIDerivedType(tag: DW_TAG_member, name: "fc_media_tw", scope: !9668, file: !9654, line: 144, baseType: !794, size: 1, offset: 79, flags: DIFlagBitField, extraData: i64 24)
!9729 = !DIDerivedType(tag: DW_TAG_member, name: "fc_speed_100", scope: !9668, file: !9654, line: 146, baseType: !794, size: 1, offset: 80, flags: DIFlagBitField, extraData: i64 24)
!9730 = !DIDerivedType(tag: DW_TAG_member, name: "unallocated_10_1", scope: !9668, file: !9654, line: 147, baseType: !794, size: 1, offset: 81, flags: DIFlagBitField, extraData: i64 24)
!9731 = !DIDerivedType(tag: DW_TAG_member, name: "fc_speed_200", scope: !9668, file: !9654, line: 148, baseType: !794, size: 1, offset: 82, flags: DIFlagBitField, extraData: i64 24)
!9732 = !DIDerivedType(tag: DW_TAG_member, name: "fc_speed_3200", scope: !9668, file: !9654, line: 149, baseType: !794, size: 1, offset: 83, flags: DIFlagBitField, extraData: i64 24)
!9733 = !DIDerivedType(tag: DW_TAG_member, name: "fc_speed_400", scope: !9668, file: !9654, line: 150, baseType: !794, size: 1, offset: 84, flags: DIFlagBitField, extraData: i64 24)
!9734 = !DIDerivedType(tag: DW_TAG_member, name: "fc_speed_1600", scope: !9668, file: !9654, line: 151, baseType: !794, size: 1, offset: 85, flags: DIFlagBitField, extraData: i64 24)
!9735 = !DIDerivedType(tag: DW_TAG_member, name: "fc_speed_800", scope: !9668, file: !9654, line: 152, baseType: !794, size: 1, offset: 86, flags: DIFlagBitField, extraData: i64 24)
!9736 = !DIDerivedType(tag: DW_TAG_member, name: "fc_speed_1200", scope: !9668, file: !9654, line: 153, baseType: !794, size: 1, offset: 87, flags: DIFlagBitField, extraData: i64 24)
!9737 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !9668, file: !9654, line: 157, baseType: !794, size: 8, offset: 88)
!9738 = !DIDerivedType(tag: DW_TAG_member, name: "br_nominal", scope: !9668, file: !9654, line: 158, baseType: !794, size: 8, offset: 96)
!9739 = !DIDerivedType(tag: DW_TAG_member, name: "rate_id", scope: !9668, file: !9654, line: 159, baseType: !794, size: 8, offset: 104)
!9740 = !DIDerivedType(tag: DW_TAG_member, name: "link_len", scope: !9668, file: !9654, line: 160, baseType: !9741, size: 48, offset: 112)
!9741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 48, elements: !999)
!9742 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_name", scope: !9668, file: !9654, line: 161, baseType: !267, size: 128, offset: 160)
!9743 = !DIDerivedType(tag: DW_TAG_member, name: "extended_cc", scope: !9668, file: !9654, line: 162, baseType: !794, size: 8, offset: 288)
!9744 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_oui", scope: !9668, file: !9654, line: 163, baseType: !9745, size: 24, offset: 296)
!9745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 24, elements: !1591)
!9746 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_pn", scope: !9668, file: !9654, line: 164, baseType: !267, size: 128, offset: 320)
!9747 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_rev", scope: !9668, file: !9654, line: 165, baseType: !9748, size: 32, offset: 448)
!9748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, size: 32, elements: !2271)
!9749 = !DIDerivedType(tag: DW_TAG_member, scope: !9668, file: !9654, line: 166, baseType: !9750, size: 16, offset: 480)
!9750 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9668, file: !9654, line: 166, size: 16, elements: !9751)
!9751 = !{!9752, !9753, !9754, !9761}
!9752 = !DIDerivedType(tag: DW_TAG_member, name: "optical_wavelength", scope: !9750, file: !9654, line: 167, baseType: !535, size: 16)
!9753 = !DIDerivedType(tag: DW_TAG_member, name: "cable_compliance", scope: !9750, file: !9654, line: 168, baseType: !535, size: 16)
!9754 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !9750, file: !9654, line: 183, baseType: !9755, size: 16)
!9755 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9750, file: !9654, line: 169, size: 16, elements: !9756)
!9756 = !{!9757, !9758, !9759, !9760}
!9757 = !DIDerivedType(tag: DW_TAG_member, name: "sff8431_app_e", scope: !9755, file: !9654, line: 176, baseType: !794, size: 1, flags: DIFlagBitField, extraData: i64 0)
!9758 = !DIDerivedType(tag: DW_TAG_member, name: "fc_pi_4_app_h", scope: !9755, file: !9654, line: 177, baseType: !794, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!9759 = !DIDerivedType(tag: DW_TAG_member, name: "reserved60_2", scope: !9755, file: !9654, line: 178, baseType: !794, size: 6, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!9760 = !DIDerivedType(tag: DW_TAG_member, name: "reserved61", scope: !9755, file: !9654, line: 179, baseType: !794, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!9761 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !9750, file: !9654, line: 202, baseType: !9762, size: 16)
!9762 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9750, file: !9654, line: 184, size: 16, elements: !9763)
!9763 = !{!9764, !9765, !9766, !9767, !9768, !9769}
!9764 = !DIDerivedType(tag: DW_TAG_member, name: "sff8431_app_e", scope: !9762, file: !9654, line: 193, baseType: !794, size: 1, flags: DIFlagBitField, extraData: i64 0)
!9765 = !DIDerivedType(tag: DW_TAG_member, name: "fc_pi_4_app_h", scope: !9762, file: !9654, line: 194, baseType: !794, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!9766 = !DIDerivedType(tag: DW_TAG_member, name: "sff8431_lim", scope: !9762, file: !9654, line: 195, baseType: !794, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!9767 = !DIDerivedType(tag: DW_TAG_member, name: "fc_pi_4_lim", scope: !9762, file: !9654, line: 196, baseType: !794, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!9768 = !DIDerivedType(tag: DW_TAG_member, name: "reserved60_4", scope: !9762, file: !9654, line: 197, baseType: !794, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!9769 = !DIDerivedType(tag: DW_TAG_member, name: "reserved61", scope: !9762, file: !9654, line: 198, baseType: !794, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!9770 = !DIDerivedType(tag: DW_TAG_member, name: "reserved62", scope: !9668, file: !9654, line: 204, baseType: !794, size: 8, offset: 496)
!9771 = !DIDerivedType(tag: DW_TAG_member, name: "cc_base", scope: !9668, file: !9654, line: 205, baseType: !794, size: 8, offset: 504)
!9772 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !9665, file: !9654, line: 231, baseType: !9773, size: 256, offset: 512)
!9773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_eeprom_ext", file: !9654, line: 208, size: 256, elements: !9774)
!9774 = !{!9775, !9776, !9777, !9778, !9779, !9780, !9781, !9782, !9783}
!9775 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !9773, file: !9654, line: 209, baseType: !535, size: 16)
!9776 = !DIDerivedType(tag: DW_TAG_member, name: "br_max", scope: !9773, file: !9654, line: 210, baseType: !794, size: 8, offset: 16)
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "br_min", scope: !9773, file: !9654, line: 211, baseType: !794, size: 8, offset: 24)
!9778 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_sn", scope: !9773, file: !9654, line: 212, baseType: !267, size: 128, offset: 32)
!9779 = !DIDerivedType(tag: DW_TAG_member, name: "datecode", scope: !9773, file: !9654, line: 213, baseType: !3952, size: 64, offset: 160)
!9780 = !DIDerivedType(tag: DW_TAG_member, name: "diagmon", scope: !9773, file: !9654, line: 214, baseType: !794, size: 8, offset: 224)
!9781 = !DIDerivedType(tag: DW_TAG_member, name: "enhopts", scope: !9773, file: !9654, line: 215, baseType: !794, size: 8, offset: 232)
!9782 = !DIDerivedType(tag: DW_TAG_member, name: "sff8472_compliance", scope: !9773, file: !9654, line: 216, baseType: !794, size: 8, offset: 240)
!9783 = !DIDerivedType(tag: DW_TAG_member, name: "cc_ext", scope: !9773, file: !9654, line: 217, baseType: !794, size: 8, offset: 248)
!9784 = !DIDerivedType(tag: DW_TAG_member, name: "module_remove", scope: !9653, file: !9654, line: 524, baseType: !1415, size: 64, offset: 192)
!9785 = !DIDerivedType(tag: DW_TAG_member, name: "module_start", scope: !9653, file: !9654, line: 525, baseType: !9786, size: 64, offset: 256)
!9786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9787, size: 64)
!9787 = !DISubroutineType(types: !9788)
!9788 = !{!32, !591}
!9789 = !DIDerivedType(tag: DW_TAG_member, name: "module_stop", scope: !9653, file: !9654, line: 526, baseType: !1415, size: 64, offset: 320)
!9790 = !DIDerivedType(tag: DW_TAG_member, name: "link_down", scope: !9653, file: !9654, line: 527, baseType: !1415, size: 64, offset: 384)
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "link_up", scope: !9653, file: !9654, line: 528, baseType: !1415, size: 64, offset: 448)
!9792 = !DIDerivedType(tag: DW_TAG_member, name: "connect_phy", scope: !9653, file: !9654, line: 529, baseType: !9793, size: 64, offset: 512)
!9793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9794, size: 64)
!9794 = !DISubroutineType(types: !9795)
!9795 = !{!32, !591, !7020}
!9796 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect_phy", scope: !9653, file: !9654, line: 530, baseType: !1415, size: 64, offset: 576)
!9797 = !DILocalVariable(name: "phydev", arg: 1, scope: !9648, file: !3, line: 1283, type: !7020)
!9798 = !DILocation(line: 1283, column: 38, scope: !9648)
!9799 = !DILocalVariable(name: "ops", arg: 2, scope: !9648, file: !3, line: 1284, type: !9651)
!9800 = !DILocation(line: 1284, column: 36, scope: !9648)
!9801 = !DILocalVariable(name: "bus", scope: !9648, file: !3, line: 1286, type: !7327)
!9802 = !DILocation(line: 1286, column: 18, scope: !9648)
!9803 = !DILocalVariable(name: "ret", scope: !9648, file: !3, line: 1287, type: !32)
!9804 = !DILocation(line: 1287, column: 6, scope: !9648)
!9805 = !DILocation(line: 1289, column: 6, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9648, file: !3, line: 1289, column: 6)
!9807 = !DILocation(line: 1289, column: 14, scope: !9806)
!9808 = !DILocation(line: 1289, column: 19, scope: !9806)
!9809 = !DILocation(line: 1289, column: 23, scope: !9806)
!9810 = !DILocation(line: 1289, column: 6, scope: !9648)
!9811 = !DILocation(line: 1290, column: 29, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 1289, column: 31)
!9813 = !DILocation(line: 1290, column: 37, scope: !9812)
!9814 = !DILocation(line: 1290, column: 42, scope: !9812)
!9815 = !DILocation(line: 1290, column: 46, scope: !9812)
!9816 = !DILocation(line: 1290, column: 9, scope: !9812)
!9817 = !DILocation(line: 1290, column: 7, scope: !9812)
!9818 = !DILocation(line: 1291, column: 14, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9812, file: !3, line: 1291, column: 7)
!9820 = !DILocation(line: 1291, column: 7, scope: !9819)
!9821 = !DILocation(line: 1291, column: 7, scope: !9812)
!9822 = !DILocation(line: 1292, column: 19, scope: !9819)
!9823 = !DILocation(line: 1292, column: 11, scope: !9819)
!9824 = !DILocation(line: 1292, column: 4, scope: !9819)
!9825 = !DILocation(line: 1294, column: 21, scope: !9812)
!9826 = !DILocation(line: 1294, column: 3, scope: !9812)
!9827 = !DILocation(line: 1294, column: 11, scope: !9812)
!9828 = !DILocation(line: 1294, column: 19, scope: !9812)
!9829 = !DILocation(line: 1296, column: 30, scope: !9812)
!9830 = !DILocation(line: 1296, column: 35, scope: !9812)
!9831 = !DILocation(line: 1296, column: 43, scope: !9812)
!9832 = !DILocation(line: 1296, column: 9, scope: !9812)
!9833 = !DILocation(line: 1296, column: 7, scope: !9812)
!9834 = !DILocation(line: 1297, column: 15, scope: !9812)
!9835 = !DILocation(line: 1297, column: 3, scope: !9812)
!9836 = !DILocation(line: 1298, column: 2, scope: !9812)
!9837 = !DILocation(line: 1299, column: 9, scope: !9648)
!9838 = !DILocation(line: 1299, column: 2, scope: !9648)
!9839 = !DILocation(line: 1300, column: 1, scope: !9648)
!9840 = distinct !DISubprogram(name: "sfp_bus_find_fwnode", scope: !9654, file: !9654, line: 602, type: !9841, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9841 = !DISubroutineType(types: !9842)
!9842 = !{!7327, !6864}
!9843 = !DILocalVariable(name: "fwnode", arg: 1, scope: !9840, file: !9654, line: 602, type: !6864)
!9844 = !DILocation(line: 602, column: 73, scope: !9840)
!9845 = !DILocation(line: 604, column: 2, scope: !9840)
!9846 = distinct !DISubprogram(name: "IS_ERR", scope: !8329, file: !8329, line: 34, type: !9847, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9847 = !DISubroutineType(types: !9848)
!9848 = !{!771, !3256}
!9849 = !DILocalVariable(name: "ptr", arg: 1, scope: !9846, file: !8329, line: 34, type: !3256)
!9850 = !DILocation(line: 34, column: 60, scope: !9846)
!9851 = !DILocation(line: 36, column: 9, scope: !9846)
!9852 = !DILocation(line: 36, column: 2, scope: !9846)
!9853 = distinct !DISubprogram(name: "PTR_ERR", scope: !8329, file: !8329, line: 29, type: !9854, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9854 = !DISubroutineType(types: !9855)
!9855 = !{!998, !3256}
!9856 = !DILocalVariable(name: "ptr", arg: 1, scope: !9853, file: !8329, line: 29, type: !3256)
!9857 = !DILocation(line: 29, column: 61, scope: !9853)
!9858 = !DILocation(line: 31, column: 16, scope: !9853)
!9859 = !DILocation(line: 31, column: 9, scope: !9853)
!9860 = !DILocation(line: 31, column: 2, scope: !9853)
!9861 = distinct !DISubprogram(name: "sfp_bus_add_upstream", scope: !9654, file: !9654, line: 607, type: !9862, scopeLine: 609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9862 = !DISubroutineType(types: !9863)
!9863 = !{!32, !7327, !591, !9651}
!9864 = !DILocalVariable(name: "bus", arg: 1, scope: !9861, file: !9654, line: 607, type: !7327)
!9865 = !DILocation(line: 607, column: 56, scope: !9861)
!9866 = !DILocalVariable(name: "upstream", arg: 2, scope: !9861, file: !9654, line: 607, type: !591)
!9867 = !DILocation(line: 607, column: 67, scope: !9861)
!9868 = !DILocalVariable(name: "ops", arg: 3, scope: !9861, file: !9654, line: 608, type: !9651)
!9869 = !DILocation(line: 608, column: 43, scope: !9861)
!9870 = !DILocation(line: 610, column: 2, scope: !9861)
!9871 = distinct !DISubprogram(name: "sfp_bus_put", scope: !9654, file: !9654, line: 598, type: !9872, scopeLine: 599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9872 = !DISubroutineType(types: !9873)
!9873 = !{null, !7327}
!9874 = !DILocalVariable(name: "bus", arg: 1, scope: !9871, file: !9654, line: 598, type: !7327)
!9875 = !DILocation(line: 598, column: 48, scope: !9871)
!9876 = !DILocation(line: 600, column: 1, scope: !9871)
!9877 = distinct !DISubprogram(name: "try_module_get", scope: !9878, file: !9878, line: 751, type: !9879, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9878 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!9879 = !DISubroutineType(types: !9880)
!9880 = !{!771, !980}
!9881 = !DILocalVariable(name: "module", arg: 1, scope: !9877, file: !9878, line: 751, type: !980)
!9882 = !DILocation(line: 751, column: 50, scope: !9877)
!9883 = !DILocation(line: 753, column: 2, scope: !9877)
!9884 = distinct !DISubprogram(name: "phy_link_change", scope: !3, file: !3, line: 968, type: !7363, scopeLine: 969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9885 = !DILocalVariable(name: "phydev", arg: 1, scope: !9884, file: !3, line: 968, type: !7020)
!9886 = !DILocation(line: 968, column: 48, scope: !9884)
!9887 = !DILocalVariable(name: "up", arg: 2, scope: !9884, file: !3, line: 968, type: !771)
!9888 = !DILocation(line: 968, column: 61, scope: !9884)
!9889 = !DILocalVariable(name: "netdev", scope: !9884, file: !3, line: 970, type: !290)
!9890 = !DILocation(line: 970, column: 21, scope: !9884)
!9891 = !DILocation(line: 970, column: 30, scope: !9884)
!9892 = !DILocation(line: 970, column: 38, scope: !9884)
!9893 = !DILocation(line: 972, column: 6, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9884, file: !3, line: 972, column: 6)
!9895 = !DILocation(line: 972, column: 6, scope: !9884)
!9896 = !DILocation(line: 973, column: 20, scope: !9894)
!9897 = !DILocation(line: 973, column: 3, scope: !9894)
!9898 = !DILocation(line: 975, column: 21, scope: !9894)
!9899 = !DILocation(line: 975, column: 3, scope: !9894)
!9900 = !DILocation(line: 976, column: 2, scope: !9884)
!9901 = !DILocation(line: 976, column: 10, scope: !9884)
!9902 = !DILocation(line: 976, column: 22, scope: !9884)
!9903 = !DILocation(line: 977, column: 6, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9884, file: !3, line: 977, column: 6)
!9905 = !DILocation(line: 977, column: 14, scope: !9904)
!9906 = !DILocation(line: 977, column: 21, scope: !9904)
!9907 = !DILocation(line: 977, column: 24, scope: !9904)
!9908 = !DILocation(line: 977, column: 32, scope: !9904)
!9909 = !DILocation(line: 977, column: 40, scope: !9904)
!9910 = !DILocation(line: 977, column: 6, scope: !9884)
!9911 = !DILocation(line: 978, column: 3, scope: !9904)
!9912 = !DILocation(line: 978, column: 11, scope: !9904)
!9913 = !DILocation(line: 978, column: 19, scope: !9904)
!9914 = !DILocation(line: 978, column: 30, scope: !9904)
!9915 = !DILocation(line: 978, column: 38, scope: !9904)
!9916 = !DILocation(line: 978, column: 46, scope: !9904)
!9917 = !DILocation(line: 979, column: 1, scope: !9884)
!9918 = distinct !DISubprogram(name: "phy_sysfs_create_links", scope: !3, file: !3, line: 1206, type: !7161, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9919 = !DILocalVariable(name: "phydev", arg: 1, scope: !9918, file: !3, line: 1206, type: !7020)
!9920 = !DILocation(line: 1206, column: 55, scope: !9918)
!9921 = !DILocalVariable(name: "dev", scope: !9918, file: !3, line: 1208, type: !290)
!9922 = !DILocation(line: 1208, column: 21, scope: !9918)
!9923 = !DILocation(line: 1208, column: 27, scope: !9918)
!9924 = !DILocation(line: 1208, column: 35, scope: !9918)
!9925 = !DILocalVariable(name: "err", scope: !9918, file: !3, line: 1209, type: !32)
!9926 = !DILocation(line: 1209, column: 6, scope: !9918)
!9927 = !DILocation(line: 1211, column: 7, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 1211, column: 6)
!9929 = !DILocation(line: 1211, column: 6, scope: !9918)
!9930 = !DILocation(line: 1212, column: 3, scope: !9928)
!9931 = !DILocation(line: 1214, column: 27, scope: !9918)
!9932 = !DILocation(line: 1214, column: 35, scope: !9918)
!9933 = !DILocation(line: 1214, column: 40, scope: !9918)
!9934 = !DILocation(line: 1214, column: 44, scope: !9918)
!9935 = !DILocation(line: 1214, column: 51, scope: !9918)
!9936 = !DILocation(line: 1214, column: 56, scope: !9918)
!9937 = !DILocation(line: 1214, column: 60, scope: !9918)
!9938 = !DILocation(line: 1214, column: 8, scope: !9918)
!9939 = !DILocation(line: 1214, column: 6, scope: !9918)
!9940 = !DILocation(line: 1216, column: 6, scope: !9941)
!9941 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 1216, column: 6)
!9942 = !DILocation(line: 1216, column: 6, scope: !9918)
!9943 = !DILocation(line: 1217, column: 3, scope: !9941)
!9944 = !DILocation(line: 1219, column: 34, scope: !9918)
!9945 = !DILocation(line: 1219, column: 39, scope: !9918)
!9946 = !DILocation(line: 1219, column: 43, scope: !9918)
!9947 = !DILocation(line: 1220, column: 13, scope: !9918)
!9948 = !DILocation(line: 1220, column: 21, scope: !9918)
!9949 = !DILocation(line: 1220, column: 26, scope: !9918)
!9950 = !DILocation(line: 1220, column: 30, scope: !9918)
!9951 = !DILocation(line: 1219, column: 8, scope: !9918)
!9952 = !DILocation(line: 1219, column: 6, scope: !9918)
!9953 = !DILocation(line: 1222, column: 6, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 1222, column: 6)
!9955 = !DILocation(line: 1222, column: 6, scope: !9918)
!9956 = !DILocation(line: 1223, column: 3, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 1222, column: 11)
!9958 = !DILocation(line: 1229, column: 2, scope: !9957)
!9959 = !DILocation(line: 1231, column: 2, scope: !9918)
!9960 = !DILocation(line: 1231, column: 10, scope: !9918)
!9961 = !DILocation(line: 1231, column: 22, scope: !9918)
!9962 = !DILocation(line: 1232, column: 1, scope: !9918)
!9963 = distinct !DISubprogram(name: "sysfs_create_file", scope: !6137, file: !6137, line: 596, type: !9964, scopeLine: 598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9964 = !DISubroutineType(types: !9965)
!9965 = !{!32, !6123, !9966}
!9966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9967, size: 64)
!9967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6144)
!9968 = !DILocalVariable(name: "kobj", arg: 1, scope: !9963, file: !6137, line: 596, type: !6123)
!9969 = !DILocation(line: 596, column: 66, scope: !9963)
!9970 = !DILocalVariable(name: "attr", arg: 2, scope: !9963, file: !6137, line: 597, type: !9966)
!9971 = !DILocation(line: 597, column: 32, scope: !9963)
!9972 = !DILocation(line: 599, column: 30, scope: !9963)
!9973 = !DILocation(line: 599, column: 36, scope: !9963)
!9974 = !DILocation(line: 599, column: 9, scope: !9963)
!9975 = !DILocation(line: 599, column: 2, scope: !9963)
!9976 = distinct !DISubprogram(name: "phy_resume", scope: !3, file: !3, line: 1758, type: !7135, scopeLine: 1759, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9977 = !DILocalVariable(name: "phydev", arg: 1, scope: !9976, file: !3, line: 1758, type: !7020)
!9978 = !DILocation(line: 1758, column: 35, scope: !9976)
!9979 = !DILocalVariable(name: "ret", scope: !9976, file: !3, line: 1760, type: !32)
!9980 = !DILocation(line: 1760, column: 6, scope: !9976)
!9981 = !DILocation(line: 1762, column: 14, scope: !9976)
!9982 = !DILocation(line: 1762, column: 22, scope: !9976)
!9983 = !DILocation(line: 1762, column: 2, scope: !9976)
!9984 = !DILocation(line: 1763, column: 21, scope: !9976)
!9985 = !DILocation(line: 1763, column: 8, scope: !9976)
!9986 = !DILocation(line: 1763, column: 6, scope: !9976)
!9987 = !DILocation(line: 1764, column: 16, scope: !9976)
!9988 = !DILocation(line: 1764, column: 24, scope: !9976)
!9989 = !DILocation(line: 1764, column: 2, scope: !9976)
!9990 = !DILocation(line: 1766, column: 9, scope: !9976)
!9991 = !DILocation(line: 1766, column: 2, scope: !9976)
!9992 = distinct !DISubprogram(name: "phy_led_triggers_register", scope: !9993, file: !9993, line: 33, type: !7135, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9993 = !DIFile(filename: "./include/linux/phy_led_triggers.h", directory: "/home/lizy2001/genbc/linux")
!9994 = !DILocalVariable(name: "phy", arg: 1, scope: !9992, file: !9993, line: 33, type: !7020)
!9995 = !DILocation(line: 33, column: 64, scope: !9992)
!9996 = !DILocation(line: 35, column: 2, scope: !9992)
!9997 = distinct !DISubprogram(name: "module_put", scope: !9878, file: !9878, line: 756, type: !9998, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!9998 = !DISubroutineType(types: !9999)
!9999 = !{null, !980}
!10000 = !DILocalVariable(name: "module", arg: 1, scope: !9997, file: !9878, line: 756, type: !980)
!10001 = !DILocation(line: 756, column: 46, scope: !9997)
!10002 = !DILocation(line: 758, column: 1, scope: !9997)
!10003 = distinct !DISubprogram(name: "phy_attach", scope: !3, file: !3, line: 1455, type: !10004, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10004 = !DISubroutineType(types: !10005)
!10005 = !{!7020, !290, !292, !7269}
!10006 = !DILocalVariable(name: "dev", arg: 1, scope: !10003, file: !3, line: 1455, type: !290)
!10007 = !DILocation(line: 1455, column: 50, scope: !10003)
!10008 = !DILocalVariable(name: "bus_id", arg: 2, scope: !10003, file: !3, line: 1455, type: !292)
!10009 = !DILocation(line: 1455, column: 67, scope: !10003)
!10010 = !DILocalVariable(name: "interface", arg: 3, scope: !10003, file: !3, line: 1456, type: !7269)
!10011 = !DILocation(line: 1456, column: 26, scope: !10003)
!10012 = !DILocalVariable(name: "bus", scope: !10003, file: !3, line: 1458, type: !6603)
!10013 = !DILocation(line: 1458, column: 19, scope: !10003)
!10014 = !DILocalVariable(name: "phydev", scope: !10003, file: !3, line: 1459, type: !7020)
!10015 = !DILocation(line: 1459, column: 21, scope: !10003)
!10016 = !DILocalVariable(name: "d", scope: !10003, file: !3, line: 1460, type: !6545)
!10017 = !DILocation(line: 1460, column: 17, scope: !10003)
!10018 = !DILocalVariable(name: "rc", scope: !10003, file: !3, line: 1461, type: !32)
!10019 = !DILocation(line: 1461, column: 6, scope: !10003)
!10020 = !DILocation(line: 1463, column: 7, scope: !10021)
!10021 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 1463, column: 6)
!10022 = !DILocation(line: 1463, column: 6, scope: !10003)
!10023 = !DILocation(line: 1464, column: 10, scope: !10021)
!10024 = !DILocation(line: 1464, column: 3, scope: !10021)
!10025 = !DILocation(line: 1469, column: 30, scope: !10003)
!10026 = !DILocation(line: 1469, column: 41, scope: !10003)
!10027 = !DILocation(line: 1469, column: 6, scope: !10003)
!10028 = !DILocation(line: 1469, column: 4, scope: !10003)
!10029 = !DILocation(line: 1470, column: 7, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 1470, column: 6)
!10031 = !DILocation(line: 1470, column: 6, scope: !10003)
!10032 = !DILocation(line: 1471, column: 3, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10030, file: !3, line: 1470, column: 10)
!10034 = !DILocation(line: 1472, column: 10, scope: !10033)
!10035 = !DILocation(line: 1472, column: 3, scope: !10033)
!10036 = !DILocalVariable(name: "__mptr", scope: !10037, file: !3, line: 1474, type: !591)
!10037 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 1474, column: 11)
!10038 = !DILocation(line: 1474, column: 11, scope: !10037)
!10039 = !DILocalVariable(name: "__mptr", scope: !10040, file: !3, line: 1474, type: !591)
!10040 = distinct !DILexicalBlock(scope: !10037, file: !3, line: 1474, column: 11)
!10041 = !DILocation(line: 1474, column: 11, scope: !10040)
!10042 = !DILocation(line: 1474, column: 11, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 1474, column: 11)
!10044 = !DILocation(line: 1474, column: 11, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10037, file: !3, line: 1474, column: 11)
!10046 = !DILocation(line: 1474, column: 9, scope: !10003)
!10047 = !DILocation(line: 1476, column: 25, scope: !10003)
!10048 = !DILocation(line: 1476, column: 30, scope: !10003)
!10049 = !DILocation(line: 1476, column: 38, scope: !10003)
!10050 = !DILocation(line: 1476, column: 46, scope: !10003)
!10051 = !DILocation(line: 1476, column: 57, scope: !10003)
!10052 = !DILocation(line: 1476, column: 7, scope: !10003)
!10053 = !DILocation(line: 1476, column: 5, scope: !10003)
!10054 = !DILocation(line: 1477, column: 13, scope: !10003)
!10055 = !DILocation(line: 1477, column: 2, scope: !10003)
!10056 = !DILocation(line: 1478, column: 6, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 1478, column: 6)
!10058 = !DILocation(line: 1478, column: 6, scope: !10003)
!10059 = !DILocation(line: 1479, column: 18, scope: !10057)
!10060 = !DILocation(line: 1479, column: 10, scope: !10057)
!10061 = !DILocation(line: 1479, column: 3, scope: !10057)
!10062 = !DILocation(line: 1481, column: 9, scope: !10003)
!10063 = !DILocation(line: 1481, column: 2, scope: !10003)
!10064 = !DILocation(line: 1482, column: 1, scope: !10003)
!10065 = distinct !DISubprogram(name: "phy_driver_is_genphy", scope: !3, file: !3, line: 1501, type: !9234, scopeLine: 1502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10066 = !DILocalVariable(name: "phydev", arg: 1, scope: !10065, file: !3, line: 1501, type: !7020)
!10067 = !DILocation(line: 1501, column: 46, scope: !10065)
!10068 = !DILocation(line: 1503, column: 35, scope: !10065)
!10069 = !DILocation(line: 1503, column: 9, scope: !10065)
!10070 = !DILocation(line: 1503, column: 2, scope: !10065)
!10071 = distinct !DISubprogram(name: "phy_driver_is_genphy_kind", scope: !3, file: !3, line: 1485, type: !10072, scopeLine: 1487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10072 = !DISubroutineType(types: !10073)
!10073 = !{!771, !7020, !6617}
!10074 = !DILocalVariable(name: "phydev", arg: 1, scope: !10071, file: !3, line: 1485, type: !7020)
!10075 = !DILocation(line: 1485, column: 58, scope: !10071)
!10076 = !DILocalVariable(name: "driver", arg: 2, scope: !10071, file: !3, line: 1486, type: !6617)
!10077 = !DILocation(line: 1486, column: 33, scope: !10071)
!10078 = !DILocalVariable(name: "d", scope: !10071, file: !3, line: 1488, type: !6545)
!10079 = !DILocation(line: 1488, column: 17, scope: !10071)
!10080 = !DILocation(line: 1488, column: 22, scope: !10071)
!10081 = !DILocation(line: 1488, column: 30, scope: !10071)
!10082 = !DILocation(line: 1488, column: 35, scope: !10071)
!10083 = !DILocalVariable(name: "ret", scope: !10071, file: !3, line: 1489, type: !771)
!10084 = !DILocation(line: 1489, column: 7, scope: !10071)
!10085 = !DILocation(line: 1491, column: 7, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10071, file: !3, line: 1491, column: 6)
!10087 = !DILocation(line: 1491, column: 15, scope: !10086)
!10088 = !DILocation(line: 1491, column: 6, scope: !10071)
!10089 = !DILocation(line: 1492, column: 10, scope: !10086)
!10090 = !DILocation(line: 1492, column: 3, scope: !10086)
!10091 = !DILocation(line: 1494, column: 13, scope: !10071)
!10092 = !DILocation(line: 1494, column: 2, scope: !10071)
!10093 = !DILocation(line: 1495, column: 8, scope: !10071)
!10094 = !DILocation(line: 1495, column: 11, scope: !10071)
!10095 = !DILocation(line: 1495, column: 21, scope: !10071)
!10096 = !DILocation(line: 1495, column: 18, scope: !10071)
!10097 = !DILocation(line: 1495, column: 6, scope: !10071)
!10098 = !DILocation(line: 1496, column: 13, scope: !10071)
!10099 = !DILocation(line: 1496, column: 2, scope: !10071)
!10100 = !DILocation(line: 1498, column: 9, scope: !10071)
!10101 = !DILocation(line: 1498, column: 2, scope: !10071)
!10102 = !DILocation(line: 1499, column: 1, scope: !10071)
!10103 = distinct !DISubprogram(name: "phy_driver_is_genphy_10g", scope: !3, file: !3, line: 1508, type: !9234, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10104 = !DILocalVariable(name: "phydev", arg: 1, scope: !10103, file: !3, line: 1508, type: !7020)
!10105 = !DILocation(line: 1508, column: 50, scope: !10103)
!10106 = !DILocation(line: 1510, column: 35, scope: !10103)
!10107 = !DILocation(line: 1510, column: 9, scope: !10103)
!10108 = !DILocation(line: 1510, column: 2, scope: !10103)
!10109 = distinct !DISubprogram(name: "phy_package_join", scope: !3, file: !3, line: 1541, type: !10110, scopeLine: 1542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10110 = !DISubroutineType(types: !10111)
!10111 = !{!32, !7020, !32, !1039}
!10112 = !DILocalVariable(name: "phydev", arg: 1, scope: !10109, file: !3, line: 1541, type: !7020)
!10113 = !DILocation(line: 1541, column: 41, scope: !10109)
!10114 = !DILocalVariable(name: "addr", arg: 2, scope: !10109, file: !3, line: 1541, type: !32)
!10115 = !DILocation(line: 1541, column: 53, scope: !10109)
!10116 = !DILocalVariable(name: "priv_size", arg: 3, scope: !10109, file: !3, line: 1541, type: !1039)
!10117 = !DILocation(line: 1541, column: 66, scope: !10109)
!10118 = !DILocalVariable(name: "bus", scope: !10109, file: !3, line: 1543, type: !7030)
!10119 = !DILocation(line: 1543, column: 18, scope: !10109)
!10120 = !DILocation(line: 1543, column: 24, scope: !10109)
!10121 = !DILocation(line: 1543, column: 32, scope: !10109)
!10122 = !DILocation(line: 1543, column: 37, scope: !10109)
!10123 = !DILocalVariable(name: "shared", scope: !10109, file: !3, line: 1544, type: !7093)
!10124 = !DILocation(line: 1544, column: 29, scope: !10109)
!10125 = !DILocalVariable(name: "ret", scope: !10109, file: !3, line: 1545, type: !32)
!10126 = !DILocation(line: 1545, column: 6, scope: !10109)
!10127 = !DILocation(line: 1547, column: 6, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10109, file: !3, line: 1547, column: 6)
!10129 = !DILocation(line: 1547, column: 11, scope: !10128)
!10130 = !DILocation(line: 1547, column: 15, scope: !10128)
!10131 = !DILocation(line: 1547, column: 18, scope: !10128)
!10132 = !DILocation(line: 1547, column: 23, scope: !10128)
!10133 = !DILocation(line: 1547, column: 6, scope: !10109)
!10134 = !DILocation(line: 1548, column: 3, scope: !10128)
!10135 = !DILocation(line: 1550, column: 14, scope: !10109)
!10136 = !DILocation(line: 1550, column: 19, scope: !10109)
!10137 = !DILocation(line: 1550, column: 2, scope: !10109)
!10138 = !DILocation(line: 1551, column: 11, scope: !10109)
!10139 = !DILocation(line: 1551, column: 16, scope: !10109)
!10140 = !DILocation(line: 1551, column: 23, scope: !10109)
!10141 = !DILocation(line: 1551, column: 9, scope: !10109)
!10142 = !DILocation(line: 1552, column: 7, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10109, file: !3, line: 1552, column: 6)
!10144 = !DILocation(line: 1552, column: 6, scope: !10109)
!10145 = !DILocation(line: 1553, column: 7, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10143, file: !3, line: 1552, column: 15)
!10147 = !DILocation(line: 1554, column: 12, scope: !10146)
!10148 = !DILocation(line: 1554, column: 10, scope: !10146)
!10149 = !DILocation(line: 1555, column: 8, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10146, file: !3, line: 1555, column: 7)
!10151 = !DILocation(line: 1555, column: 7, scope: !10146)
!10152 = !DILocation(line: 1556, column: 4, scope: !10150)
!10153 = !DILocation(line: 1557, column: 7, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10146, file: !3, line: 1557, column: 7)
!10155 = !DILocation(line: 1557, column: 7, scope: !10146)
!10156 = !DILocation(line: 1558, column: 27, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10154, file: !3, line: 1557, column: 18)
!10158 = !DILocation(line: 1558, column: 19, scope: !10157)
!10159 = !DILocation(line: 1558, column: 4, scope: !10157)
!10160 = !DILocation(line: 1558, column: 12, scope: !10157)
!10161 = !DILocation(line: 1558, column: 17, scope: !10157)
!10162 = !DILocation(line: 1559, column: 9, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 1559, column: 8)
!10164 = !DILocation(line: 1559, column: 17, scope: !10163)
!10165 = !DILocation(line: 1559, column: 8, scope: !10157)
!10166 = !DILocation(line: 1560, column: 5, scope: !10163)
!10167 = !DILocation(line: 1561, column: 24, scope: !10157)
!10168 = !DILocation(line: 1561, column: 4, scope: !10157)
!10169 = !DILocation(line: 1561, column: 12, scope: !10157)
!10170 = !DILocation(line: 1561, column: 22, scope: !10157)
!10171 = !DILocation(line: 1562, column: 3, scope: !10157)
!10172 = !DILocation(line: 1563, column: 18, scope: !10146)
!10173 = !DILocation(line: 1563, column: 3, scope: !10146)
!10174 = !DILocation(line: 1563, column: 11, scope: !10146)
!10175 = !DILocation(line: 1563, column: 16, scope: !10146)
!10176 = !DILocation(line: 1564, column: 17, scope: !10146)
!10177 = !DILocation(line: 1564, column: 25, scope: !10146)
!10178 = !DILocation(line: 1564, column: 3, scope: !10146)
!10179 = !DILocation(line: 1565, column: 23, scope: !10146)
!10180 = !DILocation(line: 1565, column: 3, scope: !10146)
!10181 = !DILocation(line: 1565, column: 8, scope: !10146)
!10182 = !DILocation(line: 1565, column: 15, scope: !10146)
!10183 = !DILocation(line: 1565, column: 21, scope: !10146)
!10184 = !DILocation(line: 1566, column: 2, scope: !10146)
!10185 = !DILocation(line: 1567, column: 7, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10143, file: !3, line: 1566, column: 9)
!10187 = !DILocation(line: 1568, column: 7, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10186, file: !3, line: 1568, column: 7)
!10189 = !DILocation(line: 1568, column: 17, scope: !10188)
!10190 = !DILocation(line: 1568, column: 20, scope: !10188)
!10191 = !DILocation(line: 1568, column: 33, scope: !10188)
!10192 = !DILocation(line: 1568, column: 41, scope: !10188)
!10193 = !DILocation(line: 1568, column: 30, scope: !10188)
!10194 = !DILocation(line: 1568, column: 7, scope: !10186)
!10195 = !DILocation(line: 1569, column: 4, scope: !10188)
!10196 = !DILocation(line: 1570, column: 17, scope: !10186)
!10197 = !DILocation(line: 1570, column: 25, scope: !10186)
!10198 = !DILocation(line: 1570, column: 3, scope: !10186)
!10199 = !DILocation(line: 1572, column: 16, scope: !10109)
!10200 = !DILocation(line: 1572, column: 21, scope: !10109)
!10201 = !DILocation(line: 1572, column: 2, scope: !10109)
!10202 = !DILocation(line: 1574, column: 19, scope: !10109)
!10203 = !DILocation(line: 1574, column: 2, scope: !10109)
!10204 = !DILocation(line: 1574, column: 10, scope: !10109)
!10205 = !DILocation(line: 1574, column: 17, scope: !10109)
!10206 = !DILocation(line: 1576, column: 2, scope: !10109)
!10207 = !DILabel(scope: !10109, name: "err_free", file: !3, line: 1578)
!10208 = !DILocation(line: 1578, column: 1, scope: !10109)
!10209 = !DILocation(line: 1579, column: 8, scope: !10109)
!10210 = !DILocation(line: 1579, column: 2, scope: !10109)
!10211 = !DILabel(scope: !10109, name: "err_unlock", file: !3, line: 1580)
!10212 = !DILocation(line: 1580, column: 1, scope: !10109)
!10213 = !DILocation(line: 1581, column: 16, scope: !10109)
!10214 = !DILocation(line: 1581, column: 21, scope: !10109)
!10215 = !DILocation(line: 1581, column: 2, scope: !10109)
!10216 = !DILocation(line: 1582, column: 9, scope: !10109)
!10217 = !DILocation(line: 1582, column: 2, scope: !10109)
!10218 = !DILocation(line: 1583, column: 1, scope: !10109)
!10219 = distinct !DISubprogram(name: "refcount_set", scope: !569, file: !569, line: 134, type: !10220, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10220 = !DISubroutineType(types: !10221)
!10221 = !{null, !10222, !32}
!10222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!10223 = !DILocalVariable(name: "v", arg: 1, scope: !10224, file: !10225, line: 39, type: !10228)
!10224 = distinct !DISubprogram(name: "arch_atomic_set", scope: !10225, file: !10225, line: 39, type: !10226, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10225 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!10226 = !DISubroutineType(types: !10227)
!10227 = !{null, !10228, !32}
!10228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!10229 = !DILocation(line: 39, column: 55, scope: !10224, inlinedAt: !10230)
!10230 = distinct !DILocation(line: 46, column: 2, scope: !10231, inlinedAt: !10233)
!10231 = distinct !DISubprogram(name: "atomic_set", scope: !10232, file: !10232, line: 43, type: !10226, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10232 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!10233 = distinct !DILocation(line: 136, column: 2, scope: !10219)
!10234 = !DILocalVariable(name: "i", arg: 2, scope: !10224, file: !10225, line: 39, type: !32)
!10235 = !DILocation(line: 39, column: 62, scope: !10224, inlinedAt: !10230)
!10236 = !DILocalVariable(name: "v", arg: 1, scope: !10237, file: !10238, line: 84, type: !10241)
!10237 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !10238, file: !10238, line: 84, type: !10239, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10238 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!10239 = !DISubroutineType(types: !10240)
!10240 = !{null, !10241, !1039}
!10241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10242, size: 64)
!10242 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10243)
!10243 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!10244 = !DILocation(line: 84, column: 74, scope: !10237, inlinedAt: !10245)
!10245 = distinct !DILocation(line: 45, column: 2, scope: !10231, inlinedAt: !10233)
!10246 = !DILocalVariable(name: "size", arg: 2, scope: !10237, file: !10238, line: 84, type: !1039)
!10247 = !DILocation(line: 84, column: 84, scope: !10237, inlinedAt: !10245)
!10248 = !DILocalVariable(name: "v", arg: 1, scope: !10231, file: !10232, line: 43, type: !10228)
!10249 = !DILocation(line: 43, column: 22, scope: !10231, inlinedAt: !10233)
!10250 = !DILocalVariable(name: "i", arg: 2, scope: !10231, file: !10232, line: 43, type: !32)
!10251 = !DILocation(line: 43, column: 29, scope: !10231, inlinedAt: !10233)
!10252 = !DILocalVariable(name: "r", arg: 1, scope: !10219, file: !569, line: 134, type: !10222)
!10253 = !DILocation(line: 134, column: 45, scope: !10219)
!10254 = !DILocalVariable(name: "n", arg: 2, scope: !10219, file: !569, line: 134, type: !32)
!10255 = !DILocation(line: 134, column: 52, scope: !10219)
!10256 = !DILocation(line: 136, column: 14, scope: !10219)
!10257 = !DILocation(line: 136, column: 17, scope: !10219)
!10258 = !DILocation(line: 136, column: 23, scope: !10219)
!10259 = !DILocation(line: 45, column: 26, scope: !10231, inlinedAt: !10233)
!10260 = !DILocation(line: 86, column: 20, scope: !10237, inlinedAt: !10245)
!10261 = !DILocation(line: 86, column: 23, scope: !10237, inlinedAt: !10245)
!10262 = !DILocation(line: 86, column: 2, scope: !10237, inlinedAt: !10245)
!10263 = !DILocation(line: 87, column: 2, scope: !10237, inlinedAt: !10245)
!10264 = !DILocation(line: 46, column: 18, scope: !10231, inlinedAt: !10233)
!10265 = !DILocation(line: 46, column: 21, scope: !10231, inlinedAt: !10233)
!10266 = !DILocation(line: 41, column: 2, scope: !10267, inlinedAt: !10230)
!10267 = distinct !DILexicalBlock(scope: !10224, file: !10225, line: 41, column: 2)
!10268 = !DILocation(line: 137, column: 1, scope: !10219)
!10269 = distinct !DISubprogram(name: "refcount_inc", scope: !569, file: !569, line: 265, type: !10270, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10270 = !DISubroutineType(types: !10271)
!10271 = !{null, !10222}
!10272 = !DILocalVariable(name: "r", arg: 1, scope: !10269, file: !569, line: 265, type: !10222)
!10273 = !DILocation(line: 265, column: 45, scope: !10269)
!10274 = !DILocation(line: 267, column: 17, scope: !10269)
!10275 = !DILocation(line: 267, column: 2, scope: !10269)
!10276 = !DILocation(line: 268, column: 1, scope: !10269)
!10277 = distinct !DISubprogram(name: "phy_package_leave", scope: !3, file: !3, line: 1594, type: !7161, scopeLine: 1595, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10278 = !DILocalVariable(name: "phydev", arg: 1, scope: !10277, file: !3, line: 1594, type: !7020)
!10279 = !DILocation(line: 1594, column: 43, scope: !10277)
!10280 = !DILocalVariable(name: "shared", scope: !10277, file: !3, line: 1596, type: !7093)
!10281 = !DILocation(line: 1596, column: 29, scope: !10277)
!10282 = !DILocation(line: 1596, column: 38, scope: !10277)
!10283 = !DILocation(line: 1596, column: 46, scope: !10277)
!10284 = !DILocalVariable(name: "bus", scope: !10277, file: !3, line: 1597, type: !7030)
!10285 = !DILocation(line: 1597, column: 18, scope: !10277)
!10286 = !DILocation(line: 1597, column: 24, scope: !10277)
!10287 = !DILocation(line: 1597, column: 32, scope: !10277)
!10288 = !DILocation(line: 1597, column: 37, scope: !10277)
!10289 = !DILocation(line: 1599, column: 7, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 1599, column: 6)
!10291 = !DILocation(line: 1599, column: 6, scope: !10277)
!10292 = !DILocation(line: 1600, column: 3, scope: !10290)
!10293 = !DILocation(line: 1602, column: 35, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 1602, column: 6)
!10295 = !DILocation(line: 1602, column: 43, scope: !10294)
!10296 = !DILocation(line: 1602, column: 52, scope: !10294)
!10297 = !DILocation(line: 1602, column: 57, scope: !10294)
!10298 = !DILocation(line: 1602, column: 6, scope: !10294)
!10299 = !DILocation(line: 1602, column: 6, scope: !10277)
!10300 = !DILocation(line: 1603, column: 3, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 1602, column: 71)
!10302 = !DILocation(line: 1603, column: 8, scope: !10301)
!10303 = !DILocation(line: 1603, column: 15, scope: !10301)
!10304 = !DILocation(line: 1603, column: 23, scope: !10301)
!10305 = !DILocation(line: 1603, column: 29, scope: !10301)
!10306 = !DILocation(line: 1604, column: 17, scope: !10301)
!10307 = !DILocation(line: 1604, column: 22, scope: !10301)
!10308 = !DILocation(line: 1604, column: 3, scope: !10301)
!10309 = !DILocation(line: 1605, column: 9, scope: !10301)
!10310 = !DILocation(line: 1605, column: 17, scope: !10301)
!10311 = !DILocation(line: 1605, column: 3, scope: !10301)
!10312 = !DILocation(line: 1606, column: 9, scope: !10301)
!10313 = !DILocation(line: 1606, column: 3, scope: !10301)
!10314 = !DILocation(line: 1607, column: 2, scope: !10301)
!10315 = !DILocation(line: 1609, column: 2, scope: !10277)
!10316 = !DILocation(line: 1609, column: 10, scope: !10277)
!10317 = !DILocation(line: 1609, column: 17, scope: !10277)
!10318 = !DILocation(line: 1610, column: 1, scope: !10277)
!10319 = distinct !DISubprogram(name: "devm_phy_package_join", scope: !3, file: !3, line: 1629, type: !10320, scopeLine: 1631, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10320 = !DISubroutineType(types: !10321)
!10321 = !{!32, !6545, !7020, !32, !1039}
!10322 = !DILocalVariable(name: "dev", arg: 1, scope: !10319, file: !3, line: 1629, type: !6545)
!10323 = !DILocation(line: 1629, column: 42, scope: !10319)
!10324 = !DILocalVariable(name: "phydev", arg: 2, scope: !10319, file: !3, line: 1629, type: !7020)
!10325 = !DILocation(line: 1629, column: 66, scope: !10319)
!10326 = !DILocalVariable(name: "addr", arg: 3, scope: !10319, file: !3, line: 1630, type: !32)
!10327 = !DILocation(line: 1630, column: 10, scope: !10319)
!10328 = !DILocalVariable(name: "priv_size", arg: 4, scope: !10319, file: !3, line: 1630, type: !1039)
!10329 = !DILocation(line: 1630, column: 23, scope: !10319)
!10330 = !DILocalVariable(name: "ptr", scope: !10319, file: !3, line: 1632, type: !7555)
!10331 = !DILocation(line: 1632, column: 22, scope: !10319)
!10332 = !DILocalVariable(name: "ret", scope: !10319, file: !3, line: 1633, type: !32)
!10333 = !DILocation(line: 1633, column: 6, scope: !10319)
!10334 = !DILocation(line: 1635, column: 8, scope: !10319)
!10335 = !DILocation(line: 1635, column: 6, scope: !10319)
!10336 = !DILocation(line: 1637, column: 7, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10319, file: !3, line: 1637, column: 6)
!10338 = !DILocation(line: 1637, column: 6, scope: !10319)
!10339 = !DILocation(line: 1638, column: 3, scope: !10337)
!10340 = !DILocation(line: 1640, column: 25, scope: !10319)
!10341 = !DILocation(line: 1640, column: 33, scope: !10319)
!10342 = !DILocation(line: 1640, column: 39, scope: !10319)
!10343 = !DILocation(line: 1640, column: 8, scope: !10319)
!10344 = !DILocation(line: 1640, column: 6, scope: !10319)
!10345 = !DILocation(line: 1642, column: 7, scope: !10346)
!10346 = distinct !DILexicalBlock(scope: !10319, file: !3, line: 1642, column: 6)
!10347 = !DILocation(line: 1642, column: 6, scope: !10319)
!10348 = !DILocation(line: 1643, column: 10, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10346, file: !3, line: 1642, column: 12)
!10350 = !DILocation(line: 1643, column: 4, scope: !10349)
!10351 = !DILocation(line: 1643, column: 8, scope: !10349)
!10352 = !DILocation(line: 1644, column: 14, scope: !10349)
!10353 = !DILocation(line: 1644, column: 19, scope: !10349)
!10354 = !DILocation(line: 1644, column: 3, scope: !10349)
!10355 = !DILocation(line: 1645, column: 2, scope: !10349)
!10356 = !DILocation(line: 1646, column: 15, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10346, file: !3, line: 1645, column: 9)
!10358 = !DILocation(line: 1646, column: 3, scope: !10357)
!10359 = !DILocation(line: 1649, column: 9, scope: !10319)
!10360 = !DILocation(line: 1649, column: 2, scope: !10319)
!10361 = !DILocation(line: 1650, column: 1, scope: !10319)
!10362 = distinct !DISubprogram(name: "devres_alloc", scope: !6541, file: !6541, line: 178, type: !10363, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10363 = !DISubroutineType(types: !10364)
!10364 = !{!591, !10365, !1039, !1741}
!10365 = !DIDerivedType(tag: DW_TAG_typedef, name: "dr_release_t", file: !6541, line: 165, baseType: !10366)
!10366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10367, size: 64)
!10367 = !DISubroutineType(types: !10368)
!10368 = !{null, !6545, !591}
!10369 = !DILocalVariable(name: "release", arg: 1, scope: !10362, file: !6541, line: 178, type: !10365)
!10370 = !DILocation(line: 178, column: 47, scope: !10362)
!10371 = !DILocalVariable(name: "size", arg: 2, scope: !10362, file: !6541, line: 178, type: !1039)
!10372 = !DILocation(line: 178, column: 63, scope: !10362)
!10373 = !DILocalVariable(name: "gfp", arg: 3, scope: !10362, file: !6541, line: 178, type: !1741)
!10374 = !DILocation(line: 178, column: 75, scope: !10362)
!10375 = !DILocation(line: 180, column: 27, scope: !10362)
!10376 = !DILocation(line: 180, column: 36, scope: !10362)
!10377 = !DILocation(line: 180, column: 42, scope: !10362)
!10378 = !DILocation(line: 180, column: 9, scope: !10362)
!10379 = !DILocation(line: 180, column: 2, scope: !10362)
!10380 = distinct !DISubprogram(name: "devm_phy_package_leave", scope: !3, file: !3, line: 1613, type: !10367, scopeLine: 1614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10381 = !DILocalVariable(name: "dev", arg: 1, scope: !10380, file: !3, line: 1613, type: !6545)
!10382 = !DILocation(line: 1613, column: 51, scope: !10380)
!10383 = !DILocalVariable(name: "res", arg: 2, scope: !10380, file: !3, line: 1613, type: !591)
!10384 = !DILocation(line: 1613, column: 62, scope: !10380)
!10385 = !DILocation(line: 1615, column: 43, scope: !10380)
!10386 = !DILocation(line: 1615, column: 21, scope: !10380)
!10387 = !DILocation(line: 1615, column: 20, scope: !10380)
!10388 = !DILocation(line: 1615, column: 2, scope: !10380)
!10389 = !DILocation(line: 1616, column: 1, scope: !10380)
!10390 = distinct !DISubprogram(name: "sysfs_remove_file", scope: !6137, file: !6137, line: 602, type: !10391, scopeLine: 604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10391 = !DISubroutineType(types: !10392)
!10392 = !{null, !6123, !9966}
!10393 = !DILocalVariable(name: "kobj", arg: 1, scope: !10390, file: !6137, line: 602, type: !6123)
!10394 = !DILocation(line: 602, column: 54, scope: !10390)
!10395 = !DILocalVariable(name: "attr", arg: 2, scope: !10390, file: !6137, line: 603, type: !9966)
!10396 = !DILocation(line: 603, column: 34, scope: !10390)
!10397 = !DILocation(line: 605, column: 23, scope: !10390)
!10398 = !DILocation(line: 605, column: 29, scope: !10390)
!10399 = !DILocation(line: 605, column: 2, scope: !10390)
!10400 = !DILocation(line: 606, column: 1, scope: !10390)
!10401 = distinct !DISubprogram(name: "phy_suspend", scope: !3, file: !3, line: 1714, type: !7135, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10402 = !DILocalVariable(name: "phydev", arg: 1, scope: !10401, file: !3, line: 1714, type: !7020)
!10403 = !DILocation(line: 1714, column: 36, scope: !10401)
!10404 = !DILocalVariable(name: "wol", scope: !10401, file: !3, line: 1716, type: !5560)
!10405 = !DILocation(line: 1716, column: 25, scope: !10401)
!10406 = !DILocalVariable(name: "netdev", scope: !10401, file: !3, line: 1717, type: !290)
!10407 = !DILocation(line: 1717, column: 21, scope: !10401)
!10408 = !DILocation(line: 1717, column: 30, scope: !10401)
!10409 = !DILocation(line: 1717, column: 38, scope: !10401)
!10410 = !DILocalVariable(name: "phydrv", scope: !10401, file: !3, line: 1718, type: !7117)
!10411 = !DILocation(line: 1718, column: 21, scope: !10401)
!10412 = !DILocation(line: 1718, column: 30, scope: !10401)
!10413 = !DILocation(line: 1718, column: 38, scope: !10401)
!10414 = !DILocalVariable(name: "ret", scope: !10401, file: !3, line: 1719, type: !32)
!10415 = !DILocation(line: 1719, column: 6, scope: !10401)
!10416 = !DILocation(line: 1721, column: 6, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 1721, column: 6)
!10418 = !DILocation(line: 1721, column: 14, scope: !10417)
!10419 = !DILocation(line: 1721, column: 6, scope: !10401)
!10420 = !DILocation(line: 1722, column: 3, scope: !10417)
!10421 = !DILocation(line: 1725, column: 22, scope: !10401)
!10422 = !DILocation(line: 1725, column: 2, scope: !10401)
!10423 = !DILocation(line: 1726, column: 10, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 1726, column: 6)
!10425 = !DILocation(line: 1726, column: 6, scope: !10424)
!10426 = !DILocation(line: 1726, column: 18, scope: !10424)
!10427 = !DILocation(line: 1726, column: 22, scope: !10424)
!10428 = !DILocation(line: 1726, column: 29, scope: !10424)
!10429 = !DILocation(line: 1726, column: 32, scope: !10424)
!10430 = !DILocation(line: 1726, column: 40, scope: !10424)
!10431 = !DILocation(line: 1726, column: 6, scope: !10401)
!10432 = !DILocation(line: 1727, column: 3, scope: !10424)
!10433 = !DILocation(line: 1729, column: 7, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 1729, column: 6)
!10435 = !DILocation(line: 1729, column: 14, scope: !10434)
!10436 = !DILocation(line: 1729, column: 18, scope: !10434)
!10437 = !DILocation(line: 1729, column: 26, scope: !10434)
!10438 = !DILocation(line: 1729, column: 6, scope: !10401)
!10439 = !DILocation(line: 1730, column: 3, scope: !10434)
!10440 = !DILocation(line: 1732, column: 8, scope: !10401)
!10441 = !DILocation(line: 1732, column: 16, scope: !10401)
!10442 = !DILocation(line: 1732, column: 24, scope: !10401)
!10443 = !DILocation(line: 1732, column: 6, scope: !10401)
!10444 = !DILocation(line: 1733, column: 7, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10401, file: !3, line: 1733, column: 6)
!10446 = !DILocation(line: 1733, column: 6, scope: !10401)
!10447 = !DILocation(line: 1734, column: 3, scope: !10445)
!10448 = !DILocation(line: 1734, column: 11, scope: !10445)
!10449 = !DILocation(line: 1734, column: 21, scope: !10445)
!10450 = !DILocation(line: 1736, column: 9, scope: !10401)
!10451 = !DILocation(line: 1736, column: 2, scope: !10401)
!10452 = !DILocation(line: 1737, column: 1, scope: !10401)
!10453 = distinct !DISubprogram(name: "phy_led_triggers_unregister", scope: !9993, file: !9993, line: 37, type: !7161, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10454 = !DILocalVariable(name: "phy", arg: 1, scope: !10453, file: !9993, line: 37, type: !7020)
!10455 = !DILocation(line: 37, column: 67, scope: !10453)
!10456 = !DILocation(line: 37, column: 74, scope: !10453)
!10457 = distinct !DISubprogram(name: "__phy_resume", scope: !3, file: !3, line: 1740, type: !7135, scopeLine: 1741, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10458 = !DILocalVariable(name: "phydev", arg: 1, scope: !10457, file: !3, line: 1740, type: !7020)
!10459 = !DILocation(line: 1740, column: 37, scope: !10457)
!10460 = !DILocalVariable(name: "phydrv", scope: !10457, file: !3, line: 1742, type: !7117)
!10461 = !DILocation(line: 1742, column: 21, scope: !10457)
!10462 = !DILocation(line: 1742, column: 30, scope: !10457)
!10463 = !DILocation(line: 1742, column: 38, scope: !10457)
!10464 = !DILocalVariable(name: "ret", scope: !10457, file: !3, line: 1743, type: !32)
!10465 = !DILocation(line: 1743, column: 6, scope: !10457)
!10466 = !DILocalVariable(name: "__ret_warn_on", scope: !10467, file: !3, line: 1745, type: !32)
!10467 = distinct !DILexicalBlock(scope: !10457, file: !3, line: 1745, column: 2)
!10468 = !DILocation(line: 1745, column: 2, scope: !10467)
!10469 = !DILocation(line: 1745, column: 2, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 1745, column: 2)
!10471 = !DILocation(line: 1745, column: 2, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10470, file: !3, line: 1745, column: 2)
!10473 = !DILocation(line: 1745, column: 2, scope: !10474)
!10474 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 1745, column: 2)
!10475 = !DILocation(line: 1745, column: 2, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 1745, column: 2)
!10477 = !{i32 -2139745262, i32 -2139745233, i32 -2139745187, i32 -2139745129, i32 -2139745075, i32 -2139745021, i32 -2139744966, i32 -2139744935}
!10478 = !DILocation(line: 1745, column: 2, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 1745, column: 2)
!10480 = !{i32 -2139744524, i32 -2139744517, i32 -2139744465, i32 -2139744434, i32 -2139744404}
!10481 = !DILocation(line: 1745, column: 2, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 1745, column: 2)
!10483 = !DILocation(line: 1747, column: 7, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10457, file: !3, line: 1747, column: 6)
!10485 = !DILocation(line: 1747, column: 14, scope: !10484)
!10486 = !DILocation(line: 1747, column: 18, scope: !10484)
!10487 = !DILocation(line: 1747, column: 26, scope: !10484)
!10488 = !DILocation(line: 1747, column: 6, scope: !10457)
!10489 = !DILocation(line: 1748, column: 3, scope: !10484)
!10490 = !DILocation(line: 1750, column: 8, scope: !10457)
!10491 = !DILocation(line: 1750, column: 16, scope: !10457)
!10492 = !DILocation(line: 1750, column: 23, scope: !10457)
!10493 = !DILocation(line: 1750, column: 6, scope: !10457)
!10494 = !DILocation(line: 1751, column: 7, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10457, file: !3, line: 1751, column: 6)
!10496 = !DILocation(line: 1751, column: 6, scope: !10457)
!10497 = !DILocation(line: 1752, column: 3, scope: !10495)
!10498 = !DILocation(line: 1752, column: 11, scope: !10495)
!10499 = !DILocation(line: 1752, column: 21, scope: !10495)
!10500 = !DILocation(line: 1754, column: 9, scope: !10457)
!10501 = !DILocation(line: 1754, column: 2, scope: !10457)
!10502 = !DILocation(line: 1755, column: 1, scope: !10457)
!10503 = distinct !DISubprogram(name: "phy_loopback", scope: !3, file: !3, line: 1770, type: !7232, scopeLine: 1771, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10504 = !DILocalVariable(name: "phydev", arg: 1, scope: !10503, file: !3, line: 1770, type: !7020)
!10505 = !DILocation(line: 1770, column: 37, scope: !10503)
!10506 = !DILocalVariable(name: "enable", arg: 2, scope: !10503, file: !3, line: 1770, type: !771)
!10507 = !DILocation(line: 1770, column: 50, scope: !10503)
!10508 = !DILocalVariable(name: "phydrv", scope: !10503, file: !3, line: 1772, type: !7117)
!10509 = !DILocation(line: 1772, column: 21, scope: !10503)
!10510 = !DILocalVariable(name: "__mptr", scope: !10511, file: !3, line: 1772, type: !591)
!10511 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 1772, column: 30)
!10512 = !DILocation(line: 1772, column: 30, scope: !10511)
!10513 = !DILocalVariable(name: "__mptr", scope: !10514, file: !3, line: 1772, type: !591)
!10514 = distinct !DILexicalBlock(scope: !10511, file: !3, line: 1772, column: 30)
!10515 = !DILocation(line: 1772, column: 30, scope: !10514)
!10516 = !DILocation(line: 1772, column: 30, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10514, file: !3, line: 1772, column: 30)
!10518 = !DILocation(line: 1772, column: 30, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10511, file: !3, line: 1772, column: 30)
!10520 = !DILocalVariable(name: "ret", scope: !10503, file: !3, line: 1773, type: !32)
!10521 = !DILocation(line: 1773, column: 6, scope: !10503)
!10522 = !DILocation(line: 1775, column: 14, scope: !10503)
!10523 = !DILocation(line: 1775, column: 22, scope: !10503)
!10524 = !DILocation(line: 1775, column: 2, scope: !10503)
!10525 = !DILocation(line: 1777, column: 6, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 1777, column: 6)
!10527 = !DILocation(line: 1777, column: 13, scope: !10526)
!10528 = !DILocation(line: 1777, column: 16, scope: !10526)
!10529 = !DILocation(line: 1777, column: 24, scope: !10526)
!10530 = !DILocation(line: 1777, column: 6, scope: !10503)
!10531 = !DILocation(line: 1778, column: 7, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10526, file: !3, line: 1777, column: 42)
!10533 = !DILocation(line: 1779, column: 3, scope: !10532)
!10534 = !DILocation(line: 1782, column: 7, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 1782, column: 6)
!10536 = !DILocation(line: 1782, column: 14, scope: !10535)
!10537 = !DILocation(line: 1782, column: 18, scope: !10535)
!10538 = !DILocation(line: 1782, column: 26, scope: !10535)
!10539 = !DILocation(line: 1782, column: 6, scope: !10503)
!10540 = !DILocation(line: 1783, column: 7, scope: !10541)
!10541 = distinct !DILexicalBlock(scope: !10535, file: !3, line: 1782, column: 44)
!10542 = !DILocation(line: 1784, column: 3, scope: !10541)
!10543 = !DILocation(line: 1787, column: 6, scope: !10544)
!10544 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 1787, column: 6)
!10545 = !DILocation(line: 1787, column: 14, scope: !10544)
!10546 = !DILocation(line: 1787, column: 18, scope: !10544)
!10547 = !DILocation(line: 1787, column: 21, scope: !10544)
!10548 = !DILocation(line: 1787, column: 29, scope: !10544)
!10549 = !DILocation(line: 1787, column: 6, scope: !10503)
!10550 = !DILocation(line: 1788, column: 9, scope: !10544)
!10551 = !DILocation(line: 1788, column: 17, scope: !10544)
!10552 = !DILocation(line: 1788, column: 30, scope: !10544)
!10553 = !DILocation(line: 1788, column: 38, scope: !10544)
!10554 = !DILocation(line: 1788, column: 7, scope: !10544)
!10555 = !DILocation(line: 1788, column: 3, scope: !10544)
!10556 = !DILocation(line: 1790, column: 7, scope: !10544)
!10557 = !DILocation(line: 1792, column: 6, scope: !10558)
!10558 = distinct !DILexicalBlock(scope: !10503, file: !3, line: 1792, column: 6)
!10559 = !DILocation(line: 1792, column: 6, scope: !10503)
!10560 = !DILocation(line: 1793, column: 3, scope: !10558)
!10561 = !DILocation(line: 1795, column: 29, scope: !10503)
!10562 = !DILocation(line: 1795, column: 2, scope: !10503)
!10563 = !DILocation(line: 1795, column: 10, scope: !10503)
!10564 = !DILocation(line: 1795, column: 27, scope: !10503)
!10565 = !DILabel(scope: !10503, name: "out", file: !3, line: 1797)
!10566 = !DILocation(line: 1797, column: 1, scope: !10503)
!10567 = !DILocation(line: 1798, column: 16, scope: !10503)
!10568 = !DILocation(line: 1798, column: 24, scope: !10503)
!10569 = !DILocation(line: 1798, column: 2, scope: !10503)
!10570 = !DILocation(line: 1799, column: 9, scope: !10503)
!10571 = !DILocation(line: 1799, column: 2, scope: !10503)
!10572 = distinct !DISubprogram(name: "phy_reset_after_clk_enable", scope: !3, file: !3, line: 1812, type: !7135, scopeLine: 1813, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10573 = !DILocalVariable(name: "phydev", arg: 1, scope: !10572, file: !3, line: 1812, type: !7020)
!10574 = !DILocation(line: 1812, column: 51, scope: !10572)
!10575 = !DILocation(line: 1814, column: 7, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 1814, column: 6)
!10577 = !DILocation(line: 1814, column: 14, scope: !10576)
!10578 = !DILocation(line: 1814, column: 18, scope: !10576)
!10579 = !DILocation(line: 1814, column: 26, scope: !10576)
!10580 = !DILocation(line: 1814, column: 6, scope: !10572)
!10581 = !DILocation(line: 1815, column: 3, scope: !10576)
!10582 = !DILocation(line: 1817, column: 6, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 1817, column: 6)
!10584 = !DILocation(line: 1817, column: 14, scope: !10583)
!10585 = !DILocation(line: 1817, column: 19, scope: !10583)
!10586 = !DILocation(line: 1817, column: 25, scope: !10583)
!10587 = !DILocation(line: 1817, column: 6, scope: !10572)
!10588 = !DILocation(line: 1818, column: 20, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10583, file: !3, line: 1817, column: 49)
!10590 = !DILocation(line: 1818, column: 3, scope: !10589)
!10591 = !DILocation(line: 1819, column: 20, scope: !10589)
!10592 = !DILocation(line: 1819, column: 3, scope: !10589)
!10593 = !DILocation(line: 1820, column: 3, scope: !10589)
!10594 = !DILocation(line: 1823, column: 2, scope: !10572)
!10595 = !DILocation(line: 1824, column: 1, scope: !10572)
!10596 = distinct !DISubprogram(name: "genphy_config_eee_advert", scope: !3, file: !3, line: 1925, type: !7135, scopeLine: 1926, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10597 = !DILocalVariable(name: "phydev", arg: 1, scope: !10596, file: !3, line: 1925, type: !7020)
!10598 = !DILocation(line: 1925, column: 49, scope: !10596)
!10599 = !DILocalVariable(name: "err", scope: !10596, file: !3, line: 1927, type: !32)
!10600 = !DILocation(line: 1927, column: 6, scope: !10596)
!10601 = !DILocation(line: 1930, column: 7, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10596, file: !3, line: 1930, column: 6)
!10603 = !DILocation(line: 1930, column: 15, scope: !10602)
!10604 = !DILocation(line: 1930, column: 6, scope: !10596)
!10605 = !DILocation(line: 1931, column: 3, scope: !10602)
!10606 = !DILocation(line: 1933, column: 31, scope: !10596)
!10607 = !DILocation(line: 1934, column: 10, scope: !10596)
!10608 = !DILocation(line: 1934, column: 18, scope: !10596)
!10609 = !DILocation(line: 1933, column: 8, scope: !10596)
!10610 = !DILocation(line: 1933, column: 6, scope: !10596)
!10611 = !DILocation(line: 1936, column: 9, scope: !10596)
!10612 = !DILocation(line: 1936, column: 13, scope: !10596)
!10613 = !DILocation(line: 1936, column: 23, scope: !10596)
!10614 = !DILocation(line: 1936, column: 2, scope: !10596)
!10615 = !DILocation(line: 1937, column: 1, scope: !10596)
!10616 = distinct !DISubprogram(name: "genphy_setup_forced", scope: !3, file: !3, line: 1948, type: !7135, scopeLine: 1949, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10617 = !DILocalVariable(name: "phydev", arg: 1, scope: !10616, file: !3, line: 1948, type: !7020)
!10618 = !DILocation(line: 1948, column: 44, scope: !10616)
!10619 = !DILocalVariable(name: "ctl", scope: !10616, file: !3, line: 1950, type: !581)
!10620 = !DILocation(line: 1950, column: 6, scope: !10616)
!10621 = !DILocation(line: 1952, column: 2, scope: !10616)
!10622 = !DILocation(line: 1952, column: 10, scope: !10616)
!10623 = !DILocation(line: 1952, column: 16, scope: !10616)
!10624 = !DILocation(line: 1953, column: 2, scope: !10616)
!10625 = !DILocation(line: 1953, column: 10, scope: !10616)
!10626 = !DILocation(line: 1953, column: 21, scope: !10616)
!10627 = !DILocation(line: 1955, column: 20, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10616, file: !3, line: 1955, column: 6)
!10629 = !DILocation(line: 1955, column: 28, scope: !10628)
!10630 = !DILocation(line: 1955, column: 17, scope: !10628)
!10631 = !DILocation(line: 1955, column: 6, scope: !10616)
!10632 = !DILocation(line: 1956, column: 7, scope: !10628)
!10633 = !DILocation(line: 1956, column: 3, scope: !10628)
!10634 = !DILocation(line: 1957, column: 24, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10628, file: !3, line: 1957, column: 11)
!10636 = !DILocation(line: 1957, column: 32, scope: !10635)
!10637 = !DILocation(line: 1957, column: 21, scope: !10635)
!10638 = !DILocation(line: 1957, column: 11, scope: !10628)
!10639 = !DILocation(line: 1958, column: 7, scope: !10635)
!10640 = !DILocation(line: 1958, column: 3, scope: !10635)
!10641 = !DILocation(line: 1960, column: 21, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10616, file: !3, line: 1960, column: 6)
!10643 = !DILocation(line: 1960, column: 29, scope: !10642)
!10644 = !DILocation(line: 1960, column: 18, scope: !10642)
!10645 = !DILocation(line: 1960, column: 6, scope: !10616)
!10646 = !DILocation(line: 1961, column: 7, scope: !10642)
!10647 = !DILocation(line: 1961, column: 3, scope: !10642)
!10648 = !DILocation(line: 1963, column: 20, scope: !10616)
!10649 = !DILocation(line: 1964, column: 52, scope: !10616)
!10650 = !DILocation(line: 1963, column: 9, scope: !10616)
!10651 = !DILocation(line: 1963, column: 2, scope: !10616)
!10652 = distinct !DISubprogram(name: "genphy_restart_aneg", scope: !3, file: !3, line: 2056, type: !7135, scopeLine: 2057, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10653 = !DILocalVariable(name: "phydev", arg: 1, scope: !10652, file: !3, line: 2056, type: !7020)
!10654 = !DILocation(line: 2056, column: 44, scope: !10652)
!10655 = !DILocation(line: 2059, column: 20, scope: !10652)
!10656 = !DILocation(line: 2059, column: 9, scope: !10652)
!10657 = !DILocation(line: 2059, column: 2, scope: !10652)
!10658 = distinct !DISubprogram(name: "genphy_check_and_restart_aneg", scope: !3, file: !3, line: 2071, type: !7232, scopeLine: 2072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10659 = !DILocalVariable(name: "phydev", arg: 1, scope: !10658, file: !3, line: 2071, type: !7020)
!10660 = !DILocation(line: 2071, column: 54, scope: !10658)
!10661 = !DILocalVariable(name: "restart", arg: 2, scope: !10658, file: !3, line: 2071, type: !771)
!10662 = !DILocation(line: 2071, column: 67, scope: !10658)
!10663 = !DILocalVariable(name: "ret", scope: !10658, file: !3, line: 2073, type: !32)
!10664 = !DILocation(line: 2073, column: 6, scope: !10658)
!10665 = !DILocation(line: 2075, column: 7, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10658, file: !3, line: 2075, column: 6)
!10667 = !DILocation(line: 2075, column: 6, scope: !10658)
!10668 = !DILocation(line: 2079, column: 18, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 2075, column: 16)
!10670 = !DILocation(line: 2079, column: 9, scope: !10669)
!10671 = !DILocation(line: 2079, column: 7, scope: !10669)
!10672 = !DILocation(line: 2080, column: 7, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 2080, column: 7)
!10674 = !DILocation(line: 2080, column: 11, scope: !10673)
!10675 = !DILocation(line: 2080, column: 7, scope: !10669)
!10676 = !DILocation(line: 2081, column: 11, scope: !10673)
!10677 = !DILocation(line: 2081, column: 4, scope: !10673)
!10678 = !DILocation(line: 2083, column: 9, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 2083, column: 7)
!10680 = !DILocation(line: 2083, column: 13, scope: !10679)
!10681 = !DILocation(line: 2083, column: 30, scope: !10679)
!10682 = !DILocation(line: 2083, column: 34, scope: !10679)
!10683 = !DILocation(line: 2083, column: 38, scope: !10679)
!10684 = !DILocation(line: 2083, column: 7, scope: !10669)
!10685 = !DILocation(line: 2084, column: 12, scope: !10679)
!10686 = !DILocation(line: 2084, column: 4, scope: !10679)
!10687 = !DILocation(line: 2085, column: 2, scope: !10669)
!10688 = !DILocation(line: 2087, column: 6, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10658, file: !3, line: 2087, column: 6)
!10690 = !DILocation(line: 2087, column: 6, scope: !10658)
!10691 = !DILocation(line: 2088, column: 30, scope: !10689)
!10692 = !DILocation(line: 2088, column: 10, scope: !10689)
!10693 = !DILocation(line: 2088, column: 3, scope: !10689)
!10694 = !DILocation(line: 2090, column: 2, scope: !10658)
!10695 = !DILocation(line: 2091, column: 1, scope: !10658)
!10696 = distinct !DISubprogram(name: "phy_read", scope: !7022, file: !7022, line: 939, type: !8494, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10697 = !DILocalVariable(name: "phydev", arg: 1, scope: !10696, file: !7022, line: 939, type: !7020)
!10698 = !DILocation(line: 939, column: 47, scope: !10696)
!10699 = !DILocalVariable(name: "regnum", arg: 2, scope: !10696, file: !7022, line: 939, type: !987)
!10700 = !DILocation(line: 939, column: 59, scope: !10696)
!10701 = !DILocation(line: 941, column: 22, scope: !10696)
!10702 = !DILocation(line: 941, column: 30, scope: !10696)
!10703 = !DILocation(line: 941, column: 35, scope: !10696)
!10704 = !DILocation(line: 941, column: 40, scope: !10696)
!10705 = !DILocation(line: 941, column: 48, scope: !10696)
!10706 = !DILocation(line: 941, column: 53, scope: !10696)
!10707 = !DILocation(line: 941, column: 59, scope: !10696)
!10708 = !DILocation(line: 941, column: 9, scope: !10696)
!10709 = !DILocation(line: 941, column: 2, scope: !10696)
!10710 = distinct !DISubprogram(name: "__genphy_config_aneg", scope: !3, file: !3, line: 2103, type: !7232, scopeLine: 2104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10711 = !DILocalVariable(name: "phydev", arg: 1, scope: !10710, file: !3, line: 2103, type: !7020)
!10712 = !DILocation(line: 2103, column: 45, scope: !10710)
!10713 = !DILocalVariable(name: "changed", arg: 2, scope: !10710, file: !3, line: 2103, type: !771)
!10714 = !DILocation(line: 2103, column: 58, scope: !10710)
!10715 = !DILocalVariable(name: "err", scope: !10710, file: !3, line: 2105, type: !32)
!10716 = !DILocation(line: 2105, column: 6, scope: !10710)
!10717 = !DILocation(line: 2107, column: 31, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 2107, column: 6)
!10719 = !DILocation(line: 2107, column: 6, scope: !10718)
!10720 = !DILocation(line: 2107, column: 6, scope: !10710)
!10721 = !DILocation(line: 2108, column: 11, scope: !10718)
!10722 = !DILocation(line: 2108, column: 3, scope: !10718)
!10723 = !DILocation(line: 2110, column: 34, scope: !10710)
!10724 = !DILocation(line: 2110, column: 8, scope: !10710)
!10725 = !DILocation(line: 2110, column: 6, scope: !10710)
!10726 = !DILocation(line: 2111, column: 6, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 2111, column: 6)
!10728 = !DILocation(line: 2111, column: 10, scope: !10727)
!10729 = !DILocation(line: 2111, column: 6, scope: !10710)
!10730 = !DILocation(line: 2112, column: 10, scope: !10727)
!10731 = !DILocation(line: 2112, column: 3, scope: !10727)
!10732 = !DILocation(line: 2113, column: 11, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10727, file: !3, line: 2113, column: 11)
!10734 = !DILocation(line: 2113, column: 11, scope: !10727)
!10735 = !DILocation(line: 2114, column: 11, scope: !10733)
!10736 = !DILocation(line: 2114, column: 3, scope: !10733)
!10737 = !DILocation(line: 2116, column: 24, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 2116, column: 6)
!10739 = !DILocation(line: 2116, column: 32, scope: !10738)
!10740 = !DILocation(line: 2116, column: 21, scope: !10738)
!10741 = !DILocation(line: 2116, column: 6, scope: !10710)
!10742 = !DILocation(line: 2117, column: 30, scope: !10738)
!10743 = !DILocation(line: 2117, column: 10, scope: !10738)
!10744 = !DILocation(line: 2117, column: 3, scope: !10738)
!10745 = !DILocation(line: 2119, column: 29, scope: !10710)
!10746 = !DILocation(line: 2119, column: 8, scope: !10710)
!10747 = !DILocation(line: 2119, column: 6, scope: !10710)
!10748 = !DILocation(line: 2120, column: 6, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10710, file: !3, line: 2120, column: 6)
!10750 = !DILocation(line: 2120, column: 10, scope: !10749)
!10751 = !DILocation(line: 2120, column: 6, scope: !10710)
!10752 = !DILocation(line: 2121, column: 10, scope: !10749)
!10753 = !DILocation(line: 2121, column: 3, scope: !10749)
!10754 = !DILocation(line: 2122, column: 11, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10749, file: !3, line: 2122, column: 11)
!10756 = !DILocation(line: 2122, column: 11, scope: !10749)
!10757 = !DILocation(line: 2123, column: 11, scope: !10755)
!10758 = !DILocation(line: 2123, column: 3, scope: !10755)
!10759 = !DILocation(line: 2125, column: 39, scope: !10710)
!10760 = !DILocation(line: 2125, column: 47, scope: !10710)
!10761 = !DILocation(line: 2125, column: 9, scope: !10710)
!10762 = !DILocation(line: 2125, column: 2, scope: !10710)
!10763 = !DILocation(line: 2126, column: 1, scope: !10710)
!10764 = distinct !DISubprogram(name: "genphy_setup_master_slave", scope: !3, file: !3, line: 1968, type: !7135, scopeLine: 1969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10765 = !DILocalVariable(name: "phydev", arg: 1, scope: !10764, file: !3, line: 1968, type: !7020)
!10766 = !DILocation(line: 1968, column: 57, scope: !10764)
!10767 = !DILocalVariable(name: "ctl", scope: !10764, file: !3, line: 1970, type: !581)
!10768 = !DILocation(line: 1970, column: 6, scope: !10764)
!10769 = !DILocation(line: 1972, column: 7, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 1972, column: 6)
!10771 = !DILocation(line: 1972, column: 15, scope: !10770)
!10772 = !DILocation(line: 1972, column: 6, scope: !10764)
!10773 = !DILocation(line: 1973, column: 3, scope: !10770)
!10774 = !DILocation(line: 1975, column: 10, scope: !10764)
!10775 = !DILocation(line: 1975, column: 18, scope: !10764)
!10776 = !DILocation(line: 1975, column: 2, scope: !10764)
!10777 = !DILocation(line: 1977, column: 7, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 1975, column: 36)
!10779 = !DILocation(line: 1978, column: 3, scope: !10778)
!10780 = !DILocation(line: 1980, column: 3, scope: !10778)
!10781 = !DILocation(line: 1982, column: 7, scope: !10778)
!10782 = !DILocation(line: 1982, column: 3, scope: !10778)
!10783 = !DILocation(line: 1985, column: 7, scope: !10778)
!10784 = !DILocation(line: 1986, column: 3, scope: !10778)
!10785 = !DILocation(line: 1989, column: 3, scope: !10778)
!10786 = !DILocation(line: 1991, column: 3, scope: !10778)
!10787 = !DILocation(line: 1992, column: 3, scope: !10778)
!10788 = !DILocation(line: 1995, column: 28, scope: !10764)
!10789 = !DILocation(line: 1997, column: 32, scope: !10764)
!10790 = !DILocation(line: 1995, column: 9, scope: !10764)
!10791 = !DILocation(line: 1995, column: 2, scope: !10764)
!10792 = !DILocation(line: 1998, column: 1, scope: !10764)
!10793 = distinct !DISubprogram(name: "genphy_config_advert", scope: !3, file: !3, line: 1838, type: !7135, scopeLine: 1839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10794 = !DILocalVariable(name: "phydev", arg: 1, scope: !10793, file: !3, line: 1838, type: !7020)
!10795 = !DILocation(line: 1838, column: 52, scope: !10793)
!10796 = !DILocalVariable(name: "err", scope: !10793, file: !3, line: 1840, type: !32)
!10797 = !DILocation(line: 1840, column: 6, scope: !10793)
!10798 = !DILocalVariable(name: "bmsr", scope: !10793, file: !3, line: 1840, type: !32)
!10799 = !DILocation(line: 1840, column: 11, scope: !10793)
!10800 = !DILocalVariable(name: "changed", scope: !10793, file: !3, line: 1840, type: !32)
!10801 = !DILocation(line: 1840, column: 17, scope: !10793)
!10802 = !DILocalVariable(name: "adv", scope: !10793, file: !3, line: 1841, type: !987)
!10803 = !DILocation(line: 1841, column: 6, scope: !10793)
!10804 = !DILocation(line: 1844, column: 15, scope: !10793)
!10805 = !DILocation(line: 1844, column: 23, scope: !10793)
!10806 = !DILocation(line: 1844, column: 36, scope: !10793)
!10807 = !DILocation(line: 1844, column: 44, scope: !10793)
!10808 = !DILocation(line: 1845, column: 8, scope: !10793)
!10809 = !DILocation(line: 1845, column: 16, scope: !10793)
!10810 = !DILocation(line: 1844, column: 2, scope: !10793)
!10811 = !DILocation(line: 1847, column: 34, scope: !10793)
!10812 = !DILocation(line: 1847, column: 42, scope: !10793)
!10813 = !DILocation(line: 1847, column: 8, scope: !10793)
!10814 = !DILocation(line: 1847, column: 6, scope: !10793)
!10815 = !DILocation(line: 1850, column: 27, scope: !10793)
!10816 = !DILocation(line: 1853, column: 6, scope: !10793)
!10817 = !DILocation(line: 1850, column: 8, scope: !10793)
!10818 = !DILocation(line: 1850, column: 6, scope: !10793)
!10819 = !DILocation(line: 1854, column: 6, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 1854, column: 6)
!10821 = !DILocation(line: 1854, column: 10, scope: !10820)
!10822 = !DILocation(line: 1854, column: 6, scope: !10793)
!10823 = !DILocation(line: 1855, column: 10, scope: !10820)
!10824 = !DILocation(line: 1855, column: 3, scope: !10820)
!10825 = !DILocation(line: 1856, column: 6, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 1856, column: 6)
!10827 = !DILocation(line: 1856, column: 10, scope: !10826)
!10828 = !DILocation(line: 1856, column: 6, scope: !10793)
!10829 = !DILocation(line: 1857, column: 11, scope: !10826)
!10830 = !DILocation(line: 1857, column: 3, scope: !10826)
!10831 = !DILocation(line: 1859, column: 18, scope: !10793)
!10832 = !DILocation(line: 1859, column: 9, scope: !10793)
!10833 = !DILocation(line: 1859, column: 7, scope: !10793)
!10834 = !DILocation(line: 1860, column: 6, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 1860, column: 6)
!10836 = !DILocation(line: 1860, column: 11, scope: !10835)
!10837 = !DILocation(line: 1860, column: 6, scope: !10793)
!10838 = !DILocation(line: 1861, column: 10, scope: !10835)
!10839 = !DILocation(line: 1861, column: 3, scope: !10835)
!10840 = !DILocation(line: 1867, column: 8, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 1867, column: 6)
!10842 = !DILocation(line: 1867, column: 13, scope: !10841)
!10843 = !DILocation(line: 1867, column: 6, scope: !10793)
!10844 = !DILocation(line: 1868, column: 10, scope: !10841)
!10845 = !DILocation(line: 1868, column: 3, scope: !10841)
!10846 = !DILocation(line: 1870, column: 39, scope: !10793)
!10847 = !DILocation(line: 1870, column: 47, scope: !10793)
!10848 = !DILocation(line: 1870, column: 8, scope: !10793)
!10849 = !DILocation(line: 1870, column: 6, scope: !10793)
!10850 = !DILocation(line: 1872, column: 27, scope: !10793)
!10851 = !DILocation(line: 1874, column: 6, scope: !10793)
!10852 = !DILocation(line: 1872, column: 8, scope: !10793)
!10853 = !DILocation(line: 1872, column: 6, scope: !10793)
!10854 = !DILocation(line: 1875, column: 6, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 1875, column: 6)
!10856 = !DILocation(line: 1875, column: 10, scope: !10855)
!10857 = !DILocation(line: 1875, column: 6, scope: !10793)
!10858 = !DILocation(line: 1876, column: 10, scope: !10855)
!10859 = !DILocation(line: 1876, column: 3, scope: !10855)
!10860 = !DILocation(line: 1877, column: 6, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 1877, column: 6)
!10862 = !DILocation(line: 1877, column: 10, scope: !10861)
!10863 = !DILocation(line: 1877, column: 6, scope: !10793)
!10864 = !DILocation(line: 1878, column: 11, scope: !10861)
!10865 = !DILocation(line: 1878, column: 3, scope: !10861)
!10866 = !DILocation(line: 1880, column: 9, scope: !10793)
!10867 = !DILocation(line: 1880, column: 2, scope: !10793)
!10868 = !DILocation(line: 1881, column: 1, scope: !10793)
!10869 = distinct !DISubprogram(name: "genphy_c37_config_aneg", scope: !3, file: !3, line: 2138, type: !7135, scopeLine: 2139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10870 = !DILocalVariable(name: "phydev", arg: 1, scope: !10869, file: !3, line: 2138, type: !7020)
!10871 = !DILocation(line: 2138, column: 47, scope: !10869)
!10872 = !DILocalVariable(name: "err", scope: !10869, file: !3, line: 2140, type: !32)
!10873 = !DILocation(line: 2140, column: 6, scope: !10869)
!10874 = !DILocalVariable(name: "changed", scope: !10869, file: !3, line: 2140, type: !32)
!10875 = !DILocation(line: 2140, column: 11, scope: !10869)
!10876 = !DILocation(line: 2142, column: 6, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10869, file: !3, line: 2142, column: 6)
!10878 = !DILocation(line: 2142, column: 14, scope: !10877)
!10879 = !DILocation(line: 2142, column: 22, scope: !10877)
!10880 = !DILocation(line: 2142, column: 6, scope: !10869)
!10881 = !DILocation(line: 2143, column: 30, scope: !10877)
!10882 = !DILocation(line: 2143, column: 10, scope: !10877)
!10883 = !DILocation(line: 2143, column: 3, scope: !10877)
!10884 = !DILocation(line: 2145, column: 19, scope: !10869)
!10885 = !DILocation(line: 2145, column: 8, scope: !10869)
!10886 = !DILocation(line: 2145, column: 6, scope: !10869)
!10887 = !DILocation(line: 2147, column: 6, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10869, file: !3, line: 2147, column: 6)
!10889 = !DILocation(line: 2147, column: 6, scope: !10869)
!10890 = !DILocation(line: 2148, column: 10, scope: !10888)
!10891 = !DILocation(line: 2148, column: 3, scope: !10888)
!10892 = !DILocation(line: 2150, column: 37, scope: !10869)
!10893 = !DILocation(line: 2150, column: 12, scope: !10869)
!10894 = !DILocation(line: 2150, column: 10, scope: !10869)
!10895 = !DILocation(line: 2151, column: 6, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10869, file: !3, line: 2151, column: 6)
!10897 = !DILocation(line: 2151, column: 14, scope: !10896)
!10898 = !DILocation(line: 2151, column: 6, scope: !10869)
!10899 = !DILocation(line: 2152, column: 10, scope: !10896)
!10900 = !DILocation(line: 2152, column: 3, scope: !10896)
!10901 = !DILocation(line: 2154, column: 7, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10869, file: !3, line: 2154, column: 6)
!10903 = !DILocation(line: 2154, column: 6, scope: !10869)
!10904 = !DILocalVariable(name: "ctl", scope: !10905, file: !3, line: 2158, type: !32)
!10905 = distinct !DILexicalBlock(scope: !10902, file: !3, line: 2154, column: 16)
!10906 = !DILocation(line: 2158, column: 7, scope: !10905)
!10907 = !DILocation(line: 2158, column: 22, scope: !10905)
!10908 = !DILocation(line: 2158, column: 13, scope: !10905)
!10909 = !DILocation(line: 2160, column: 7, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10905, file: !3, line: 2160, column: 7)
!10911 = !DILocation(line: 2160, column: 11, scope: !10910)
!10912 = !DILocation(line: 2160, column: 7, scope: !10905)
!10913 = !DILocation(line: 2161, column: 11, scope: !10910)
!10914 = !DILocation(line: 2161, column: 4, scope: !10910)
!10915 = !DILocation(line: 2163, column: 9, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10905, file: !3, line: 2163, column: 7)
!10917 = !DILocation(line: 2163, column: 13, scope: !10916)
!10918 = !DILocation(line: 2163, column: 30, scope: !10916)
!10919 = !DILocation(line: 2163, column: 34, scope: !10916)
!10920 = !DILocation(line: 2163, column: 38, scope: !10916)
!10921 = !DILocation(line: 2163, column: 7, scope: !10905)
!10922 = !DILocation(line: 2164, column: 12, scope: !10916)
!10923 = !DILocation(line: 2164, column: 4, scope: !10916)
!10924 = !DILocation(line: 2165, column: 2, scope: !10905)
!10925 = !DILocation(line: 2170, column: 6, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10869, file: !3, line: 2170, column: 6)
!10927 = !DILocation(line: 2170, column: 14, scope: !10926)
!10928 = !DILocation(line: 2170, column: 6, scope: !10869)
!10929 = !DILocation(line: 2171, column: 30, scope: !10926)
!10930 = !DILocation(line: 2171, column: 10, scope: !10926)
!10931 = !DILocation(line: 2171, column: 3, scope: !10926)
!10932 = !DILocation(line: 2173, column: 2, scope: !10869)
!10933 = !DILocation(line: 2174, column: 1, scope: !10869)
!10934 = distinct !DISubprogram(name: "genphy_c37_config_advert", scope: !3, file: !3, line: 1893, type: !7135, scopeLine: 1894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10935 = !DILocalVariable(name: "phydev", arg: 1, scope: !10934, file: !3, line: 1893, type: !7020)
!10936 = !DILocation(line: 1893, column: 56, scope: !10934)
!10937 = !DILocalVariable(name: "adv", scope: !10934, file: !3, line: 1895, type: !581)
!10938 = !DILocation(line: 1895, column: 6, scope: !10934)
!10939 = !DILocation(line: 1898, column: 15, scope: !10934)
!10940 = !DILocation(line: 1898, column: 23, scope: !10934)
!10941 = !DILocation(line: 1898, column: 36, scope: !10934)
!10942 = !DILocation(line: 1898, column: 44, scope: !10934)
!10943 = !DILocation(line: 1899, column: 8, scope: !10934)
!10944 = !DILocation(line: 1899, column: 16, scope: !10934)
!10945 = !DILocation(line: 1898, column: 2, scope: !10934)
!10946 = !DILocation(line: 1902, column: 10, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 1901, column: 6)
!10948 = !DILocation(line: 1902, column: 18, scope: !10947)
!10949 = !DILocation(line: 1901, column: 6, scope: !10947)
!10950 = !DILocation(line: 1901, column: 6, scope: !10934)
!10951 = !DILocation(line: 1903, column: 7, scope: !10947)
!10952 = !DILocation(line: 1903, column: 3, scope: !10947)
!10953 = !DILocation(line: 1905, column: 10, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 1904, column: 6)
!10955 = !DILocation(line: 1905, column: 18, scope: !10954)
!10956 = !DILocation(line: 1904, column: 6, scope: !10954)
!10957 = !DILocation(line: 1904, column: 6, scope: !10934)
!10958 = !DILocation(line: 1906, column: 7, scope: !10954)
!10959 = !DILocation(line: 1906, column: 3, scope: !10954)
!10960 = !DILocation(line: 1908, column: 10, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 1907, column: 6)
!10962 = !DILocation(line: 1908, column: 18, scope: !10961)
!10963 = !DILocation(line: 1907, column: 6, scope: !10961)
!10964 = !DILocation(line: 1907, column: 6, scope: !10934)
!10965 = !DILocation(line: 1909, column: 7, scope: !10961)
!10966 = !DILocation(line: 1909, column: 3, scope: !10961)
!10967 = !DILocation(line: 1911, column: 28, scope: !10934)
!10968 = !DILocation(line: 1914, column: 7, scope: !10934)
!10969 = !DILocation(line: 1911, column: 9, scope: !10934)
!10970 = !DILocation(line: 1911, column: 2, scope: !10934)
!10971 = distinct !DISubprogram(name: "genphy_aneg_done", scope: !3, file: !3, line: 2185, type: !7135, scopeLine: 2186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10972 = !DILocalVariable(name: "phydev", arg: 1, scope: !10971, file: !3, line: 2185, type: !7020)
!10973 = !DILocation(line: 2185, column: 41, scope: !10971)
!10974 = !DILocalVariable(name: "retval", scope: !10971, file: !3, line: 2187, type: !32)
!10975 = !DILocation(line: 2187, column: 6, scope: !10971)
!10976 = !DILocation(line: 2187, column: 24, scope: !10971)
!10977 = !DILocation(line: 2187, column: 15, scope: !10971)
!10978 = !DILocation(line: 2189, column: 10, scope: !10971)
!10979 = !DILocation(line: 2189, column: 17, scope: !10971)
!10980 = !DILocation(line: 2189, column: 9, scope: !10971)
!10981 = !DILocation(line: 2189, column: 24, scope: !10971)
!10982 = !DILocation(line: 2189, column: 34, scope: !10971)
!10983 = !DILocation(line: 2189, column: 41, scope: !10971)
!10984 = !DILocation(line: 2189, column: 2, scope: !10971)
!10985 = distinct !DISubprogram(name: "genphy_update_link", scope: !3, file: !3, line: 2201, type: !7135, scopeLine: 2202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!10986 = !DILocalVariable(name: "phydev", arg: 1, scope: !10985, file: !3, line: 2201, type: !7020)
!10987 = !DILocation(line: 2201, column: 43, scope: !10985)
!10988 = !DILocalVariable(name: "status", scope: !10985, file: !3, line: 2203, type: !32)
!10989 = !DILocation(line: 2203, column: 6, scope: !10985)
!10990 = !DILocalVariable(name: "bmcr", scope: !10985, file: !3, line: 2203, type: !32)
!10991 = !DILocation(line: 2203, column: 18, scope: !10985)
!10992 = !DILocation(line: 2205, column: 18, scope: !10985)
!10993 = !DILocation(line: 2205, column: 9, scope: !10985)
!10994 = !DILocation(line: 2205, column: 7, scope: !10985)
!10995 = !DILocation(line: 2206, column: 6, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 2206, column: 6)
!10997 = !DILocation(line: 2206, column: 11, scope: !10996)
!10998 = !DILocation(line: 2206, column: 6, scope: !10985)
!10999 = !DILocation(line: 2207, column: 10, scope: !10996)
!11000 = !DILocation(line: 2207, column: 3, scope: !10996)
!11001 = !DILocation(line: 2212, column: 6, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 2212, column: 6)
!11003 = !DILocation(line: 2212, column: 11, scope: !11002)
!11004 = !DILocation(line: 2212, column: 6, scope: !10985)
!11005 = !DILocation(line: 2213, column: 3, scope: !11002)
!11006 = !DILocation(line: 2220, column: 24, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 2220, column: 6)
!11008 = !DILocation(line: 2220, column: 7, scope: !11007)
!11009 = !DILocation(line: 2220, column: 32, scope: !11007)
!11010 = !DILocation(line: 2220, column: 36, scope: !11007)
!11011 = !DILocation(line: 2220, column: 44, scope: !11007)
!11012 = !DILocation(line: 2220, column: 6, scope: !10985)
!11013 = !DILocation(line: 2221, column: 21, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11007, file: !3, line: 2220, column: 50)
!11015 = !DILocation(line: 2221, column: 12, scope: !11014)
!11016 = !DILocation(line: 2221, column: 10, scope: !11014)
!11017 = !DILocation(line: 2222, column: 7, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11014, file: !3, line: 2222, column: 7)
!11019 = !DILocation(line: 2222, column: 14, scope: !11018)
!11020 = !DILocation(line: 2222, column: 7, scope: !11014)
!11021 = !DILocation(line: 2223, column: 11, scope: !11018)
!11022 = !DILocation(line: 2223, column: 4, scope: !11018)
!11023 = !DILocation(line: 2224, column: 12, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11018, file: !3, line: 2224, column: 12)
!11025 = !DILocation(line: 2224, column: 19, scope: !11024)
!11026 = !DILocation(line: 2224, column: 12, scope: !11018)
!11027 = !DILocation(line: 2225, column: 4, scope: !11024)
!11028 = !DILocation(line: 2226, column: 2, scope: !11014)
!11029 = !DILocation(line: 2229, column: 20, scope: !10985)
!11030 = !DILocation(line: 2229, column: 11, scope: !10985)
!11031 = !DILocation(line: 2229, column: 9, scope: !10985)
!11032 = !DILocation(line: 2230, column: 6, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 2230, column: 6)
!11034 = !DILocation(line: 2230, column: 13, scope: !11033)
!11035 = !DILocation(line: 2230, column: 6, scope: !10985)
!11036 = !DILocation(line: 2231, column: 10, scope: !11033)
!11037 = !DILocation(line: 2231, column: 3, scope: !11033)
!11038 = !DILocation(line: 2230, column: 15, scope: !11033)
!11039 = !DILabel(scope: !10985, name: "done", file: !3, line: 2232)
!11040 = !DILocation(line: 2232, column: 1, scope: !10985)
!11041 = !DILocation(line: 2233, column: 17, scope: !10985)
!11042 = !DILocation(line: 2233, column: 24, scope: !10985)
!11043 = !DILocation(line: 2233, column: 2, scope: !10985)
!11044 = !DILocation(line: 2233, column: 10, scope: !10985)
!11045 = !DILocation(line: 2233, column: 15, scope: !10985)
!11046 = !DILocation(line: 2234, column: 29, scope: !10985)
!11047 = !DILocation(line: 2234, column: 36, scope: !10985)
!11048 = !DILocation(line: 2234, column: 2, scope: !10985)
!11049 = !DILocation(line: 2234, column: 10, scope: !10985)
!11050 = !DILocation(line: 2234, column: 27, scope: !10985)
!11051 = !DILocation(line: 2239, column: 6, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !10985, file: !3, line: 2239, column: 6)
!11053 = !DILocation(line: 2239, column: 14, scope: !11052)
!11054 = !DILocation(line: 2239, column: 22, scope: !11052)
!11055 = !DILocation(line: 2239, column: 40, scope: !11052)
!11056 = !DILocation(line: 2239, column: 44, scope: !11052)
!11057 = !DILocation(line: 2239, column: 52, scope: !11052)
!11058 = !DILocation(line: 2239, column: 6, scope: !10985)
!11059 = !DILocation(line: 2240, column: 3, scope: !11052)
!11060 = !DILocation(line: 2240, column: 11, scope: !11052)
!11061 = !DILocation(line: 2240, column: 16, scope: !11052)
!11062 = !DILocation(line: 2242, column: 2, scope: !10985)
!11063 = !DILocation(line: 2243, column: 1, scope: !10985)
!11064 = distinct !DISubprogram(name: "phy_polling_mode", scope: !7022, file: !7022, line: 1214, type: !9234, scopeLine: 1215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11065 = !DILocalVariable(name: "phydev", arg: 1, scope: !11064, file: !7022, line: 1214, type: !7020)
!11066 = !DILocation(line: 1214, column: 56, scope: !11064)
!11067 = !DILocation(line: 1216, column: 6, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11064, file: !7022, line: 1216, column: 6)
!11069 = !DILocation(line: 1216, column: 14, scope: !11068)
!11070 = !DILocation(line: 1216, column: 20, scope: !11068)
!11071 = !DILocation(line: 1216, column: 6, scope: !11064)
!11072 = !DILocation(line: 1217, column: 7, scope: !11073)
!11073 = distinct !DILexicalBlock(scope: !11068, file: !7022, line: 1217, column: 7)
!11074 = !DILocation(line: 1217, column: 15, scope: !11073)
!11075 = !DILocation(line: 1217, column: 20, scope: !11073)
!11076 = !DILocation(line: 1217, column: 26, scope: !11073)
!11077 = !DILocation(line: 1217, column: 7, scope: !11068)
!11078 = !DILocation(line: 1218, column: 4, scope: !11073)
!11079 = !DILocation(line: 1217, column: 28, scope: !11073)
!11080 = !DILocation(line: 1220, column: 9, scope: !11064)
!11081 = !DILocation(line: 1220, column: 17, scope: !11064)
!11082 = !DILocation(line: 1220, column: 21, scope: !11064)
!11083 = !DILocation(line: 1220, column: 2, scope: !11064)
!11084 = !DILocation(line: 1221, column: 1, scope: !11064)
!11085 = distinct !DISubprogram(name: "genphy_read_lpa", scope: !3, file: !3, line: 2246, type: !7135, scopeLine: 2247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11086 = !DILocalVariable(name: "phydev", arg: 1, scope: !11085, file: !3, line: 2246, type: !7020)
!11087 = !DILocation(line: 2246, column: 40, scope: !11085)
!11088 = !DILocalVariable(name: "lpa", scope: !11085, file: !3, line: 2248, type: !32)
!11089 = !DILocation(line: 2248, column: 6, scope: !11085)
!11090 = !DILocalVariable(name: "lpagb", scope: !11085, file: !3, line: 2248, type: !32)
!11091 = !DILocation(line: 2248, column: 11, scope: !11085)
!11092 = !DILocation(line: 2250, column: 6, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11085, file: !3, line: 2250, column: 6)
!11094 = !DILocation(line: 2250, column: 14, scope: !11093)
!11095 = !DILocation(line: 2250, column: 22, scope: !11093)
!11096 = !DILocation(line: 2250, column: 6, scope: !11085)
!11097 = !DILocation(line: 2251, column: 8, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 2251, column: 7)
!11099 = distinct !DILexicalBlock(scope: !11093, file: !3, line: 2250, column: 41)
!11100 = !DILocation(line: 2251, column: 16, scope: !11098)
!11101 = !DILocation(line: 2251, column: 7, scope: !11099)
!11102 = !DILocation(line: 2252, column: 36, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 2251, column: 34)
!11104 = !DILocation(line: 2252, column: 44, scope: !11103)
!11105 = !DILocation(line: 2252, column: 4, scope: !11103)
!11106 = !DILocation(line: 2254, column: 31, scope: !11103)
!11107 = !DILocation(line: 2254, column: 39, scope: !11103)
!11108 = !DILocation(line: 2254, column: 4, scope: !11103)
!11109 = !DILocation(line: 2255, column: 4, scope: !11103)
!11110 = !DILocation(line: 2258, column: 7, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 2258, column: 7)
!11112 = !DILocation(line: 2258, column: 15, scope: !11111)
!11113 = !DILocation(line: 2258, column: 7, scope: !11099)
!11114 = !DILocation(line: 2259, column: 21, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11111, file: !3, line: 2258, column: 35)
!11116 = !DILocation(line: 2259, column: 12, scope: !11115)
!11117 = !DILocation(line: 2259, column: 10, scope: !11115)
!11118 = !DILocation(line: 2260, column: 8, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11115, file: !3, line: 2260, column: 8)
!11120 = !DILocation(line: 2260, column: 14, scope: !11119)
!11121 = !DILocation(line: 2260, column: 8, scope: !11115)
!11122 = !DILocation(line: 2261, column: 12, scope: !11119)
!11123 = !DILocation(line: 2261, column: 5, scope: !11119)
!11124 = !DILocation(line: 2263, column: 8, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11115, file: !3, line: 2263, column: 8)
!11126 = !DILocation(line: 2263, column: 14, scope: !11125)
!11127 = !DILocation(line: 2263, column: 8, scope: !11115)
!11128 = !DILocalVariable(name: "adv", scope: !11129, file: !3, line: 2264, type: !32)
!11129 = distinct !DILexicalBlock(scope: !11125, file: !3, line: 2263, column: 32)
!11130 = !DILocation(line: 2264, column: 9, scope: !11129)
!11131 = !DILocation(line: 2264, column: 24, scope: !11129)
!11132 = !DILocation(line: 2264, column: 15, scope: !11129)
!11133 = !DILocation(line: 2266, column: 9, scope: !11134)
!11134 = distinct !DILexicalBlock(scope: !11129, file: !3, line: 2266, column: 9)
!11135 = !DILocation(line: 2266, column: 13, scope: !11134)
!11136 = !DILocation(line: 2266, column: 9, scope: !11129)
!11137 = !DILocation(line: 2267, column: 13, scope: !11134)
!11138 = !DILocation(line: 2267, column: 6, scope: !11134)
!11139 = !DILocation(line: 2269, column: 9, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11129, file: !3, line: 2269, column: 9)
!11141 = !DILocation(line: 2269, column: 13, scope: !11140)
!11142 = !DILocation(line: 2269, column: 9, scope: !11129)
!11143 = !DILocation(line: 2270, column: 6, scope: !11140)
!11144 = !DILocation(line: 2272, column: 6, scope: !11140)
!11145 = !DILocation(line: 2273, column: 5, scope: !11129)
!11146 = !DILocation(line: 2276, column: 36, scope: !11115)
!11147 = !DILocation(line: 2276, column: 44, scope: !11115)
!11148 = !DILocation(line: 2277, column: 8, scope: !11115)
!11149 = !DILocation(line: 2276, column: 4, scope: !11115)
!11150 = !DILocation(line: 2278, column: 3, scope: !11115)
!11151 = !DILocation(line: 2280, column: 18, scope: !11099)
!11152 = !DILocation(line: 2280, column: 9, scope: !11099)
!11153 = !DILocation(line: 2280, column: 7, scope: !11099)
!11154 = !DILocation(line: 2281, column: 7, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 2281, column: 7)
!11156 = !DILocation(line: 2281, column: 11, scope: !11155)
!11157 = !DILocation(line: 2281, column: 7, scope: !11099)
!11158 = !DILocation(line: 2282, column: 11, scope: !11155)
!11159 = !DILocation(line: 2282, column: 4, scope: !11155)
!11160 = !DILocation(line: 2284, column: 30, scope: !11099)
!11161 = !DILocation(line: 2284, column: 38, scope: !11099)
!11162 = !DILocation(line: 2284, column: 54, scope: !11099)
!11163 = !DILocation(line: 2284, column: 3, scope: !11099)
!11164 = !DILocation(line: 2285, column: 2, scope: !11099)
!11165 = !DILocation(line: 2286, column: 17, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11093, file: !3, line: 2285, column: 9)
!11167 = !DILocation(line: 2286, column: 25, scope: !11166)
!11168 = !DILocation(line: 2286, column: 3, scope: !11166)
!11169 = !DILocation(line: 2289, column: 2, scope: !11085)
!11170 = !DILocation(line: 2290, column: 1, scope: !11085)
!11171 = distinct !DISubprogram(name: "mii_stat1000_mod_linkmode_lpa_t", scope: !11172, file: !11172, line: 299, type: !11173, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11172 = !DIFile(filename: "./include/linux/mii.h", directory: "/home/lizy2001/genbc/linux")
!11173 = !DISubroutineType(types: !11174)
!11174 = !{null, !3437, !987}
!11175 = !DILocalVariable(name: "advertising", arg: 1, scope: !11171, file: !11172, line: 299, type: !3437)
!11176 = !DILocation(line: 299, column: 67, scope: !11171)
!11177 = !DILocalVariable(name: "lpa", arg: 2, scope: !11171, file: !11172, line: 300, type: !987)
!11178 = !DILocation(line: 300, column: 14, scope: !11171)
!11179 = !DILocation(line: 303, column: 5, scope: !11171)
!11180 = !DILocation(line: 303, column: 18, scope: !11171)
!11181 = !DILocation(line: 303, column: 22, scope: !11171)
!11182 = !DILocation(line: 302, column: 2, scope: !11171)
!11183 = !DILocation(line: 306, column: 5, scope: !11171)
!11184 = !DILocation(line: 306, column: 18, scope: !11171)
!11185 = !DILocation(line: 306, column: 22, scope: !11171)
!11186 = !DILocation(line: 305, column: 2, scope: !11171)
!11187 = !DILocation(line: 307, column: 1, scope: !11171)
!11188 = distinct !DISubprogram(name: "mii_lpa_mod_linkmode_lpa_t", scope: !11172, file: !11172, line: 481, type: !11173, scopeLine: 483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11189 = !DILocalVariable(name: "lp_advertising", arg: 1, scope: !11188, file: !11172, line: 481, type: !3437)
!11190 = !DILocation(line: 481, column: 62, scope: !11188)
!11191 = !DILocalVariable(name: "lpa", arg: 2, scope: !11188, file: !11172, line: 482, type: !987)
!11192 = !DILocation(line: 482, column: 16, scope: !11188)
!11193 = !DILocation(line: 484, column: 29, scope: !11188)
!11194 = !DILocation(line: 484, column: 45, scope: !11188)
!11195 = !DILocation(line: 484, column: 2, scope: !11188)
!11196 = !DILocation(line: 487, column: 5, scope: !11188)
!11197 = !DILocation(line: 487, column: 21, scope: !11188)
!11198 = !DILocation(line: 487, column: 25, scope: !11188)
!11199 = !DILocation(line: 486, column: 2, scope: !11188)
!11200 = !DILocation(line: 488, column: 1, scope: !11188)
!11201 = distinct !DISubprogram(name: "linkmode_zero", scope: !11202, file: !11202, line: 8, type: !11203, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11202 = !DIFile(filename: "./include/linux/linkmode.h", directory: "/home/lizy2001/genbc/linux")
!11203 = !DISubroutineType(types: !11204)
!11204 = !{null, !3437}
!11205 = !DILocalVariable(name: "dst", arg: 1, scope: !11201, file: !11202, line: 8, type: !3437)
!11206 = !DILocation(line: 8, column: 49, scope: !11201)
!11207 = !DILocation(line: 10, column: 14, scope: !11201)
!11208 = !DILocation(line: 10, column: 2, scope: !11201)
!11209 = !DILocation(line: 11, column: 1, scope: !11201)
!11210 = distinct !DISubprogram(name: "genphy_read_status_fixed", scope: !3, file: !3, line: 2300, type: !7135, scopeLine: 2301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11211 = !DILocalVariable(name: "phydev", arg: 1, scope: !11210, file: !3, line: 2300, type: !7020)
!11212 = !DILocation(line: 2300, column: 49, scope: !11210)
!11213 = !DILocalVariable(name: "bmcr", scope: !11210, file: !3, line: 2302, type: !32)
!11214 = !DILocation(line: 2302, column: 6, scope: !11210)
!11215 = !DILocation(line: 2302, column: 22, scope: !11210)
!11216 = !DILocation(line: 2302, column: 13, scope: !11210)
!11217 = !DILocation(line: 2304, column: 6, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11210, file: !3, line: 2304, column: 6)
!11219 = !DILocation(line: 2304, column: 11, scope: !11218)
!11220 = !DILocation(line: 2304, column: 6, scope: !11210)
!11221 = !DILocation(line: 2305, column: 10, scope: !11218)
!11222 = !DILocation(line: 2305, column: 3, scope: !11218)
!11223 = !DILocation(line: 2307, column: 6, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11210, file: !3, line: 2307, column: 6)
!11225 = !DILocation(line: 2307, column: 11, scope: !11224)
!11226 = !DILocation(line: 2307, column: 6, scope: !11210)
!11227 = !DILocation(line: 2308, column: 3, scope: !11224)
!11228 = !DILocation(line: 2308, column: 11, scope: !11224)
!11229 = !DILocation(line: 2308, column: 18, scope: !11224)
!11230 = !DILocation(line: 2310, column: 3, scope: !11224)
!11231 = !DILocation(line: 2310, column: 11, scope: !11224)
!11232 = !DILocation(line: 2310, column: 18, scope: !11224)
!11233 = !DILocation(line: 2312, column: 6, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11210, file: !3, line: 2312, column: 6)
!11235 = !DILocation(line: 2312, column: 11, scope: !11234)
!11236 = !DILocation(line: 2312, column: 6, scope: !11210)
!11237 = !DILocation(line: 2313, column: 3, scope: !11234)
!11238 = !DILocation(line: 2313, column: 11, scope: !11234)
!11239 = !DILocation(line: 2313, column: 17, scope: !11234)
!11240 = !DILocation(line: 2314, column: 11, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11234, file: !3, line: 2314, column: 11)
!11242 = !DILocation(line: 2314, column: 16, scope: !11241)
!11243 = !DILocation(line: 2314, column: 11, scope: !11234)
!11244 = !DILocation(line: 2315, column: 3, scope: !11241)
!11245 = !DILocation(line: 2315, column: 11, scope: !11241)
!11246 = !DILocation(line: 2315, column: 17, scope: !11241)
!11247 = !DILocation(line: 2317, column: 3, scope: !11241)
!11248 = !DILocation(line: 2317, column: 11, scope: !11241)
!11249 = !DILocation(line: 2317, column: 17, scope: !11241)
!11250 = !DILocation(line: 2319, column: 2, scope: !11210)
!11251 = !DILocation(line: 2320, column: 1, scope: !11210)
!11252 = distinct !DISubprogram(name: "genphy_read_status", scope: !3, file: !3, line: 2332, type: !7135, scopeLine: 2333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11253 = !DILocalVariable(name: "phydev", arg: 1, scope: !11252, file: !3, line: 2332, type: !7020)
!11254 = !DILocation(line: 2332, column: 43, scope: !11252)
!11255 = !DILocalVariable(name: "err", scope: !11252, file: !3, line: 2334, type: !32)
!11256 = !DILocation(line: 2334, column: 6, scope: !11252)
!11257 = !DILocalVariable(name: "old_link", scope: !11252, file: !3, line: 2334, type: !32)
!11258 = !DILocation(line: 2334, column: 11, scope: !11252)
!11259 = !DILocation(line: 2334, column: 22, scope: !11252)
!11260 = !DILocation(line: 2334, column: 30, scope: !11252)
!11261 = !DILocation(line: 2337, column: 27, scope: !11252)
!11262 = !DILocation(line: 2337, column: 8, scope: !11252)
!11263 = !DILocation(line: 2337, column: 6, scope: !11252)
!11264 = !DILocation(line: 2338, column: 6, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 2338, column: 6)
!11266 = !DILocation(line: 2338, column: 6, scope: !11252)
!11267 = !DILocation(line: 2339, column: 10, scope: !11265)
!11268 = !DILocation(line: 2339, column: 3, scope: !11265)
!11269 = !DILocation(line: 2342, column: 6, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 2342, column: 6)
!11271 = !DILocation(line: 2342, column: 14, scope: !11270)
!11272 = !DILocation(line: 2342, column: 22, scope: !11270)
!11273 = !DILocation(line: 2342, column: 40, scope: !11270)
!11274 = !DILocation(line: 2342, column: 43, scope: !11270)
!11275 = !DILocation(line: 2342, column: 52, scope: !11270)
!11276 = !DILocation(line: 2342, column: 55, scope: !11270)
!11277 = !DILocation(line: 2342, column: 63, scope: !11270)
!11278 = !DILocation(line: 2342, column: 6, scope: !11252)
!11279 = !DILocation(line: 2343, column: 3, scope: !11270)
!11280 = !DILocation(line: 2345, column: 2, scope: !11252)
!11281 = !DILocation(line: 2345, column: 10, scope: !11252)
!11282 = !DILocation(line: 2345, column: 16, scope: !11252)
!11283 = !DILocation(line: 2346, column: 2, scope: !11252)
!11284 = !DILocation(line: 2346, column: 10, scope: !11252)
!11285 = !DILocation(line: 2346, column: 17, scope: !11252)
!11286 = !DILocation(line: 2347, column: 2, scope: !11252)
!11287 = !DILocation(line: 2347, column: 10, scope: !11252)
!11288 = !DILocation(line: 2347, column: 16, scope: !11252)
!11289 = !DILocation(line: 2348, column: 2, scope: !11252)
!11290 = !DILocation(line: 2348, column: 10, scope: !11252)
!11291 = !DILocation(line: 2348, column: 21, scope: !11252)
!11292 = !DILocation(line: 2350, column: 33, scope: !11252)
!11293 = !DILocation(line: 2350, column: 8, scope: !11252)
!11294 = !DILocation(line: 2350, column: 6, scope: !11252)
!11295 = !DILocation(line: 2351, column: 6, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 2351, column: 6)
!11297 = !DILocation(line: 2351, column: 10, scope: !11296)
!11298 = !DILocation(line: 2351, column: 6, scope: !11252)
!11299 = !DILocation(line: 2352, column: 10, scope: !11296)
!11300 = !DILocation(line: 2352, column: 3, scope: !11296)
!11301 = !DILocation(line: 2354, column: 24, scope: !11252)
!11302 = !DILocation(line: 2354, column: 8, scope: !11252)
!11303 = !DILocation(line: 2354, column: 6, scope: !11252)
!11304 = !DILocation(line: 2355, column: 6, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 2355, column: 6)
!11306 = !DILocation(line: 2355, column: 10, scope: !11305)
!11307 = !DILocation(line: 2355, column: 6, scope: !11252)
!11308 = !DILocation(line: 2356, column: 10, scope: !11305)
!11309 = !DILocation(line: 2356, column: 3, scope: !11305)
!11310 = !DILocation(line: 2358, column: 6, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 2358, column: 6)
!11312 = !DILocation(line: 2358, column: 14, scope: !11311)
!11313 = !DILocation(line: 2358, column: 22, scope: !11311)
!11314 = !DILocation(line: 2358, column: 40, scope: !11311)
!11315 = !DILocation(line: 2358, column: 43, scope: !11311)
!11316 = !DILocation(line: 2358, column: 51, scope: !11311)
!11317 = !DILocation(line: 2358, column: 6, scope: !11252)
!11318 = !DILocation(line: 2359, column: 29, scope: !11319)
!11319 = distinct !DILexicalBlock(scope: !11311, file: !3, line: 2358, column: 69)
!11320 = !DILocation(line: 2359, column: 3, scope: !11319)
!11321 = !DILocation(line: 2360, column: 2, scope: !11319)
!11322 = !DILocation(line: 2360, column: 13, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11311, file: !3, line: 2360, column: 13)
!11324 = !DILocation(line: 2360, column: 21, scope: !11323)
!11325 = !DILocation(line: 2360, column: 29, scope: !11323)
!11326 = !DILocation(line: 2360, column: 13, scope: !11311)
!11327 = !DILocation(line: 2361, column: 34, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11323, file: !3, line: 2360, column: 49)
!11329 = !DILocation(line: 2361, column: 9, scope: !11328)
!11330 = !DILocation(line: 2361, column: 7, scope: !11328)
!11331 = !DILocation(line: 2362, column: 7, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11328, file: !3, line: 2362, column: 7)
!11333 = !DILocation(line: 2362, column: 11, scope: !11332)
!11334 = !DILocation(line: 2362, column: 7, scope: !11328)
!11335 = !DILocation(line: 2363, column: 11, scope: !11332)
!11336 = !DILocation(line: 2363, column: 4, scope: !11332)
!11337 = !DILocation(line: 2364, column: 2, scope: !11328)
!11338 = !DILocation(line: 2366, column: 2, scope: !11252)
!11339 = !DILocation(line: 2367, column: 1, scope: !11252)
!11340 = distinct !DISubprogram(name: "genphy_read_master_slave", scope: !3, file: !3, line: 2000, type: !7135, scopeLine: 2001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11341 = !DILocalVariable(name: "phydev", arg: 1, scope: !11340, file: !3, line: 2000, type: !7020)
!11342 = !DILocation(line: 2000, column: 56, scope: !11340)
!11343 = !DILocalVariable(name: "cfg", scope: !11340, file: !3, line: 2002, type: !32)
!11344 = !DILocation(line: 2002, column: 6, scope: !11340)
!11345 = !DILocalVariable(name: "state", scope: !11340, file: !3, line: 2002, type: !32)
!11346 = !DILocation(line: 2002, column: 11, scope: !11340)
!11347 = !DILocalVariable(name: "val", scope: !11340, file: !3, line: 2003, type: !32)
!11348 = !DILocation(line: 2003, column: 6, scope: !11340)
!11349 = !DILocation(line: 2005, column: 7, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11340, file: !3, line: 2005, column: 6)
!11351 = !DILocation(line: 2005, column: 15, scope: !11350)
!11352 = !DILocation(line: 2005, column: 6, scope: !11340)
!11353 = !DILocation(line: 2006, column: 3, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11350, file: !3, line: 2005, column: 35)
!11355 = !DILocation(line: 2006, column: 11, scope: !11354)
!11356 = !DILocation(line: 2006, column: 28, scope: !11354)
!11357 = !DILocation(line: 2007, column: 3, scope: !11354)
!11358 = !DILocation(line: 2007, column: 11, scope: !11354)
!11359 = !DILocation(line: 2007, column: 30, scope: !11354)
!11360 = !DILocation(line: 2008, column: 3, scope: !11354)
!11361 = !DILocation(line: 2011, column: 2, scope: !11340)
!11362 = !DILocation(line: 2011, column: 10, scope: !11340)
!11363 = !DILocation(line: 2011, column: 27, scope: !11340)
!11364 = !DILocation(line: 2012, column: 2, scope: !11340)
!11365 = !DILocation(line: 2012, column: 10, scope: !11340)
!11366 = !DILocation(line: 2012, column: 29, scope: !11340)
!11367 = !DILocation(line: 2014, column: 17, scope: !11340)
!11368 = !DILocation(line: 2014, column: 8, scope: !11340)
!11369 = !DILocation(line: 2014, column: 6, scope: !11340)
!11370 = !DILocation(line: 2015, column: 6, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11340, file: !3, line: 2015, column: 6)
!11372 = !DILocation(line: 2015, column: 10, scope: !11371)
!11373 = !DILocation(line: 2015, column: 6, scope: !11340)
!11374 = !DILocation(line: 2016, column: 10, scope: !11371)
!11375 = !DILocation(line: 2016, column: 3, scope: !11371)
!11376 = !DILocation(line: 2018, column: 6, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11340, file: !3, line: 2018, column: 6)
!11378 = !DILocation(line: 2018, column: 10, scope: !11377)
!11379 = !DILocation(line: 2018, column: 6, scope: !11340)
!11380 = !DILocation(line: 2019, column: 7, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 2019, column: 7)
!11382 = distinct !DILexicalBlock(scope: !11377, file: !3, line: 2018, column: 35)
!11383 = !DILocation(line: 2019, column: 11, scope: !11381)
!11384 = !DILocation(line: 2019, column: 7, scope: !11382)
!11385 = !DILocation(line: 2020, column: 8, scope: !11381)
!11386 = !DILocation(line: 2020, column: 4, scope: !11381)
!11387 = !DILocation(line: 2022, column: 8, scope: !11381)
!11388 = !DILocation(line: 2023, column: 2, scope: !11382)
!11389 = !DILocation(line: 2024, column: 7, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11391, file: !3, line: 2024, column: 7)
!11391 = distinct !DILexicalBlock(scope: !11377, file: !3, line: 2023, column: 9)
!11392 = !DILocation(line: 2024, column: 11, scope: !11390)
!11393 = !DILocation(line: 2024, column: 7, scope: !11391)
!11394 = !DILocation(line: 2025, column: 8, scope: !11390)
!11395 = !DILocation(line: 2025, column: 4, scope: !11390)
!11396 = !DILocation(line: 2027, column: 8, scope: !11390)
!11397 = !DILocation(line: 2030, column: 17, scope: !11340)
!11398 = !DILocation(line: 2030, column: 8, scope: !11340)
!11399 = !DILocation(line: 2030, column: 6, scope: !11340)
!11400 = !DILocation(line: 2031, column: 6, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11340, file: !3, line: 2031, column: 6)
!11402 = !DILocation(line: 2031, column: 10, scope: !11401)
!11403 = !DILocation(line: 2031, column: 6, scope: !11340)
!11404 = !DILocation(line: 2032, column: 10, scope: !11401)
!11405 = !DILocation(line: 2032, column: 3, scope: !11401)
!11406 = !DILocation(line: 2034, column: 6, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11340, file: !3, line: 2034, column: 6)
!11408 = !DILocation(line: 2034, column: 10, scope: !11407)
!11409 = !DILocation(line: 2034, column: 6, scope: !11340)
!11410 = !DILocation(line: 2035, column: 9, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 2034, column: 28)
!11412 = !DILocation(line: 2036, column: 2, scope: !11411)
!11413 = !DILocation(line: 2036, column: 13, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 2036, column: 13)
!11415 = !DILocation(line: 2036, column: 21, scope: !11414)
!11416 = !DILocation(line: 2036, column: 13, scope: !11407)
!11417 = !DILocation(line: 2038, column: 7, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11419, file: !3, line: 2038, column: 7)
!11419 = distinct !DILexicalBlock(scope: !11414, file: !3, line: 2036, column: 27)
!11420 = !DILocation(line: 2038, column: 11, scope: !11418)
!11421 = !DILocation(line: 2038, column: 7, scope: !11419)
!11422 = !DILocation(line: 2039, column: 10, scope: !11418)
!11423 = !DILocation(line: 2039, column: 4, scope: !11418)
!11424 = !DILocation(line: 2041, column: 10, scope: !11418)
!11425 = !DILocation(line: 2042, column: 2, scope: !11419)
!11426 = !DILocation(line: 2043, column: 9, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11414, file: !3, line: 2042, column: 9)
!11428 = !DILocation(line: 2046, column: 29, scope: !11340)
!11429 = !DILocation(line: 2046, column: 2, scope: !11340)
!11430 = !DILocation(line: 2046, column: 10, scope: !11340)
!11431 = !DILocation(line: 2046, column: 27, scope: !11340)
!11432 = !DILocation(line: 2047, column: 31, scope: !11340)
!11433 = !DILocation(line: 2047, column: 2, scope: !11340)
!11434 = !DILocation(line: 2047, column: 10, scope: !11340)
!11435 = !DILocation(line: 2047, column: 29, scope: !11340)
!11436 = !DILocation(line: 2049, column: 2, scope: !11340)
!11437 = !DILocation(line: 2050, column: 1, scope: !11340)
!11438 = distinct !DISubprogram(name: "genphy_c37_read_status", scope: !3, file: !3, line: 2378, type: !7135, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11439 = !DILocalVariable(name: "phydev", arg: 1, scope: !11438, file: !3, line: 2378, type: !7020)
!11440 = !DILocation(line: 2378, column: 47, scope: !11438)
!11441 = !DILocalVariable(name: "lpa", scope: !11438, file: !3, line: 2380, type: !32)
!11442 = !DILocation(line: 2380, column: 6, scope: !11438)
!11443 = !DILocalVariable(name: "err", scope: !11438, file: !3, line: 2380, type: !32)
!11444 = !DILocation(line: 2380, column: 11, scope: !11438)
!11445 = !DILocalVariable(name: "old_link", scope: !11438, file: !3, line: 2380, type: !32)
!11446 = !DILocation(line: 2380, column: 16, scope: !11438)
!11447 = !DILocation(line: 2380, column: 27, scope: !11438)
!11448 = !DILocation(line: 2380, column: 35, scope: !11438)
!11449 = !DILocation(line: 2383, column: 27, scope: !11438)
!11450 = !DILocation(line: 2383, column: 8, scope: !11438)
!11451 = !DILocation(line: 2383, column: 6, scope: !11438)
!11452 = !DILocation(line: 2384, column: 6, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 2384, column: 6)
!11454 = !DILocation(line: 2384, column: 6, scope: !11438)
!11455 = !DILocation(line: 2385, column: 10, scope: !11453)
!11456 = !DILocation(line: 2385, column: 3, scope: !11453)
!11457 = !DILocation(line: 2388, column: 6, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 2388, column: 6)
!11459 = !DILocation(line: 2388, column: 14, scope: !11458)
!11460 = !DILocation(line: 2388, column: 22, scope: !11458)
!11461 = !DILocation(line: 2388, column: 40, scope: !11458)
!11462 = !DILocation(line: 2388, column: 43, scope: !11458)
!11463 = !DILocation(line: 2388, column: 52, scope: !11458)
!11464 = !DILocation(line: 2388, column: 55, scope: !11458)
!11465 = !DILocation(line: 2388, column: 63, scope: !11458)
!11466 = !DILocation(line: 2388, column: 6, scope: !11438)
!11467 = !DILocation(line: 2389, column: 3, scope: !11458)
!11468 = !DILocation(line: 2391, column: 2, scope: !11438)
!11469 = !DILocation(line: 2391, column: 10, scope: !11438)
!11470 = !DILocation(line: 2391, column: 17, scope: !11438)
!11471 = !DILocation(line: 2392, column: 2, scope: !11438)
!11472 = !DILocation(line: 2392, column: 10, scope: !11438)
!11473 = !DILocation(line: 2392, column: 16, scope: !11438)
!11474 = !DILocation(line: 2393, column: 2, scope: !11438)
!11475 = !DILocation(line: 2393, column: 10, scope: !11438)
!11476 = !DILocation(line: 2393, column: 21, scope: !11438)
!11477 = !DILocation(line: 2395, column: 6, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11438, file: !3, line: 2395, column: 6)
!11479 = !DILocation(line: 2395, column: 14, scope: !11478)
!11480 = !DILocation(line: 2395, column: 22, scope: !11478)
!11481 = !DILocation(line: 2395, column: 40, scope: !11478)
!11482 = !DILocation(line: 2395, column: 43, scope: !11478)
!11483 = !DILocation(line: 2395, column: 51, scope: !11478)
!11484 = !DILocation(line: 2395, column: 6, scope: !11438)
!11485 = !DILocation(line: 2396, column: 18, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11478, file: !3, line: 2395, column: 69)
!11487 = !DILocation(line: 2396, column: 9, scope: !11486)
!11488 = !DILocation(line: 2396, column: 7, scope: !11486)
!11489 = !DILocation(line: 2397, column: 7, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11486, file: !3, line: 2397, column: 7)
!11491 = !DILocation(line: 2397, column: 11, scope: !11490)
!11492 = !DILocation(line: 2397, column: 7, scope: !11486)
!11493 = !DILocation(line: 2398, column: 11, scope: !11490)
!11494 = !DILocation(line: 2398, column: 4, scope: !11490)
!11495 = !DILocation(line: 2401, column: 6, scope: !11486)
!11496 = !DILocation(line: 2401, column: 14, scope: !11486)
!11497 = !DILocation(line: 2401, column: 30, scope: !11486)
!11498 = !DILocation(line: 2401, column: 34, scope: !11486)
!11499 = !DILocation(line: 2400, column: 3, scope: !11486)
!11500 = !DILocation(line: 2403, column: 6, scope: !11486)
!11501 = !DILocation(line: 2403, column: 14, scope: !11486)
!11502 = !DILocation(line: 2403, column: 30, scope: !11486)
!11503 = !DILocation(line: 2403, column: 34, scope: !11486)
!11504 = !DILocation(line: 2402, column: 3, scope: !11486)
!11505 = !DILocation(line: 2405, column: 6, scope: !11486)
!11506 = !DILocation(line: 2405, column: 14, scope: !11486)
!11507 = !DILocation(line: 2405, column: 30, scope: !11486)
!11508 = !DILocation(line: 2405, column: 34, scope: !11486)
!11509 = !DILocation(line: 2404, column: 3, scope: !11486)
!11510 = !DILocation(line: 2407, column: 6, scope: !11486)
!11511 = !DILocation(line: 2407, column: 14, scope: !11486)
!11512 = !DILocation(line: 2408, column: 6, scope: !11486)
!11513 = !DILocation(line: 2408, column: 10, scope: !11486)
!11514 = !DILocation(line: 2406, column: 3, scope: !11486)
!11515 = !DILocation(line: 2410, column: 29, scope: !11486)
!11516 = !DILocation(line: 2410, column: 3, scope: !11486)
!11517 = !DILocation(line: 2411, column: 2, scope: !11486)
!11518 = !DILocation(line: 2411, column: 13, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11478, file: !3, line: 2411, column: 13)
!11520 = !DILocation(line: 2411, column: 21, scope: !11519)
!11521 = !DILocation(line: 2411, column: 29, scope: !11519)
!11522 = !DILocation(line: 2411, column: 13, scope: !11478)
!11523 = !DILocalVariable(name: "bmcr", scope: !11524, file: !3, line: 2412, type: !32)
!11524 = distinct !DILexicalBlock(scope: !11519, file: !3, line: 2411, column: 49)
!11525 = !DILocation(line: 2412, column: 7, scope: !11524)
!11526 = !DILocation(line: 2412, column: 23, scope: !11524)
!11527 = !DILocation(line: 2412, column: 14, scope: !11524)
!11528 = !DILocation(line: 2414, column: 7, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 2414, column: 7)
!11530 = !DILocation(line: 2414, column: 12, scope: !11529)
!11531 = !DILocation(line: 2414, column: 7, scope: !11524)
!11532 = !DILocation(line: 2415, column: 11, scope: !11529)
!11533 = !DILocation(line: 2415, column: 4, scope: !11529)
!11534 = !DILocation(line: 2417, column: 7, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 2417, column: 7)
!11536 = !DILocation(line: 2417, column: 12, scope: !11535)
!11537 = !DILocation(line: 2417, column: 7, scope: !11524)
!11538 = !DILocation(line: 2418, column: 4, scope: !11535)
!11539 = !DILocation(line: 2418, column: 12, scope: !11535)
!11540 = !DILocation(line: 2418, column: 19, scope: !11535)
!11541 = !DILocation(line: 2420, column: 4, scope: !11535)
!11542 = !DILocation(line: 2420, column: 12, scope: !11535)
!11543 = !DILocation(line: 2420, column: 19, scope: !11535)
!11544 = !DILocation(line: 2421, column: 2, scope: !11524)
!11545 = !DILocation(line: 2423, column: 2, scope: !11438)
!11546 = !DILocation(line: 2424, column: 1, scope: !11438)
!11547 = distinct !DISubprogram(name: "linkmode_mod_bit", scope: !11202, file: !11202, line: 60, type: !11548, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11548 = !DISubroutineType(types: !11549)
!11549 = !{null, !32, !11550, !32}
!11550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11551, size: 64)
!11551 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !312)
!11552 = !DILocalVariable(name: "nr", arg: 1, scope: !11547, file: !11202, line: 60, type: !32)
!11553 = !DILocation(line: 60, column: 41, scope: !11547)
!11554 = !DILocalVariable(name: "addr", arg: 2, scope: !11547, file: !11202, line: 60, type: !11550)
!11555 = !DILocation(line: 60, column: 69, scope: !11547)
!11556 = !DILocalVariable(name: "set", arg: 3, scope: !11547, file: !11202, line: 61, type: !32)
!11557 = !DILocation(line: 61, column: 13, scope: !11547)
!11558 = !DILocation(line: 63, column: 6, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11547, file: !11202, line: 63, column: 6)
!11560 = !DILocation(line: 63, column: 6, scope: !11547)
!11561 = !DILocation(line: 64, column: 20, scope: !11559)
!11562 = !DILocation(line: 64, column: 24, scope: !11559)
!11563 = !DILocation(line: 64, column: 3, scope: !11559)
!11564 = !DILocation(line: 66, column: 22, scope: !11559)
!11565 = !DILocation(line: 66, column: 26, scope: !11559)
!11566 = !DILocation(line: 66, column: 3, scope: !11559)
!11567 = !DILocation(line: 67, column: 1, scope: !11547)
!11568 = distinct !DISubprogram(name: "genphy_soft_reset", scope: !3, file: !3, line: 2436, type: !7135, scopeLine: 2437, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11569 = !DILocalVariable(name: "phydev", arg: 1, scope: !11568, file: !3, line: 2436, type: !7020)
!11570 = !DILocation(line: 2436, column: 42, scope: !11568)
!11571 = !DILocalVariable(name: "res", scope: !11568, file: !3, line: 2438, type: !581)
!11572 = !DILocation(line: 2438, column: 6, scope: !11568)
!11573 = !DILocalVariable(name: "ret", scope: !11568, file: !3, line: 2439, type: !32)
!11574 = !DILocation(line: 2439, column: 6, scope: !11568)
!11575 = !DILocation(line: 2441, column: 6, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11568, file: !3, line: 2441, column: 6)
!11577 = !DILocation(line: 2441, column: 14, scope: !11576)
!11578 = !DILocation(line: 2441, column: 22, scope: !11576)
!11579 = !DILocation(line: 2441, column: 6, scope: !11568)
!11580 = !DILocation(line: 2442, column: 7, scope: !11576)
!11581 = !DILocation(line: 2442, column: 3, scope: !11576)
!11582 = !DILocation(line: 2444, column: 19, scope: !11568)
!11583 = !DILocation(line: 2444, column: 51, scope: !11568)
!11584 = !DILocation(line: 2444, column: 8, scope: !11568)
!11585 = !DILocation(line: 2444, column: 6, scope: !11568)
!11586 = !DILocation(line: 2445, column: 6, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11568, file: !3, line: 2445, column: 6)
!11588 = !DILocation(line: 2445, column: 10, scope: !11587)
!11589 = !DILocation(line: 2445, column: 6, scope: !11568)
!11590 = !DILocation(line: 2446, column: 10, scope: !11587)
!11591 = !DILocation(line: 2446, column: 3, scope: !11587)
!11592 = !DILocation(line: 2452, column: 2, scope: !11568)
!11593 = !DILocation(line: 2452, column: 10, scope: !11568)
!11594 = !DILocation(line: 2452, column: 20, scope: !11568)
!11595 = !DILocation(line: 2454, column: 23, scope: !11568)
!11596 = !DILocation(line: 2454, column: 8, scope: !11568)
!11597 = !DILocation(line: 2454, column: 6, scope: !11568)
!11598 = !DILocation(line: 2455, column: 6, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11568, file: !3, line: 2455, column: 6)
!11600 = !DILocation(line: 2455, column: 6, scope: !11568)
!11601 = !DILocation(line: 2456, column: 10, scope: !11599)
!11602 = !DILocation(line: 2456, column: 3, scope: !11599)
!11603 = !DILocation(line: 2459, column: 6, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11568, file: !3, line: 2459, column: 6)
!11605 = !DILocation(line: 2459, column: 14, scope: !11604)
!11606 = !DILocation(line: 2459, column: 22, scope: !11604)
!11607 = !DILocation(line: 2459, column: 6, scope: !11568)
!11608 = !DILocation(line: 2460, column: 29, scope: !11604)
!11609 = !DILocation(line: 2460, column: 9, scope: !11604)
!11610 = !DILocation(line: 2460, column: 7, scope: !11604)
!11611 = !DILocation(line: 2460, column: 3, scope: !11604)
!11612 = !DILocation(line: 2462, column: 9, scope: !11568)
!11613 = !DILocation(line: 2462, column: 2, scope: !11568)
!11614 = !DILocation(line: 2463, column: 1, scope: !11568)
!11615 = distinct !DISubprogram(name: "phy_poll_reset", scope: !3, file: !3, line: 1106, type: !7135, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11616 = !DILocalVariable(name: "phydev", arg: 1, scope: !11615, file: !3, line: 1106, type: !7020)
!11617 = !DILocation(line: 1106, column: 46, scope: !11615)
!11618 = !DILocalVariable(name: "ret", scope: !11615, file: !3, line: 1109, type: !32)
!11619 = !DILocation(line: 1109, column: 6, scope: !11615)
!11620 = !DILocalVariable(name: "val", scope: !11615, file: !3, line: 1109, type: !32)
!11621 = !DILocation(line: 1109, column: 11, scope: !11615)
!11622 = !DILocalVariable(name: "__ret", scope: !11623, file: !3, line: 1111, type: !32)
!11623 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 1111, column: 8)
!11624 = !DILocation(line: 1111, column: 8, scope: !11623)
!11625 = !DILocalVariable(name: "__timeout_us", scope: !11626, file: !3, line: 1111, type: !331)
!11626 = distinct !DILexicalBlock(scope: !11623, file: !3, line: 1111, column: 8)
!11627 = !DILocation(line: 1111, column: 8, scope: !11626)
!11628 = !DILocalVariable(name: "__sleep_us", scope: !11626, file: !3, line: 1111, type: !312)
!11629 = !DILocalVariable(name: "__timeout", scope: !11626, file: !3, line: 1111, type: !453)
!11630 = !DILocation(line: 1111, column: 8, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11632, file: !3, line: 1111, column: 8)
!11632 = distinct !DILexicalBlock(scope: !11626, file: !3, line: 1111, column: 8)
!11633 = !DILocation(line: 1111, column: 8, scope: !11632)
!11634 = !DILocation(line: 1111, column: 8, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11631, file: !3, line: 1111, column: 8)
!11636 = !DILocation(line: 1111, column: 8, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 1111, column: 8)
!11638 = !DILocation(line: 1111, column: 8, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11626, file: !3, line: 1111, column: 8)
!11640 = !DILocation(line: 1111, column: 8, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11642, file: !3, line: 1111, column: 8)
!11642 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 1111, column: 8)
!11643 = distinct !DILexicalBlock(scope: !11626, file: !3, line: 1111, column: 8)
!11644 = !DILocation(line: 1111, column: 8, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 1111, column: 8)
!11646 = !DILocation(line: 1111, column: 8, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 1111, column: 8)
!11648 = !DILocation(line: 1111, column: 8, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11647, file: !3, line: 1111, column: 8)
!11650 = !DILocation(line: 1111, column: 8, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 1111, column: 8)
!11652 = !DILocation(line: 1111, column: 8, scope: !11642)
!11653 = distinct !{!11653, !11654, !11654}
!11654 = !DILocation(line: 1111, column: 8, scope: !11643)
!11655 = !DILocation(line: 1111, column: 8, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11623, file: !3, line: 1111, column: 8)
!11657 = !DILocation(line: 1111, column: 8, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11623, file: !3, line: 1111, column: 8)
!11659 = !DILocation(line: 1111, column: 6, scope: !11615)
!11660 = !DILocation(line: 1113, column: 6, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11615, file: !3, line: 1113, column: 6)
!11662 = !DILocation(line: 1113, column: 6, scope: !11615)
!11663 = !DILocation(line: 1114, column: 10, scope: !11661)
!11664 = !DILocation(line: 1114, column: 3, scope: !11661)
!11665 = !DILocation(line: 1118, column: 2, scope: !11615)
!11666 = !DILocation(line: 1119, column: 2, scope: !11615)
!11667 = !DILocation(line: 1120, column: 1, scope: !11615)
!11668 = distinct !DISubprogram(name: "genphy_read_abilities", scope: !3, file: !3, line: 2475, type: !7135, scopeLine: 2476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11669 = !DILocalVariable(name: "phydev", arg: 1, scope: !11668, file: !3, line: 2475, type: !7020)
!11670 = !DILocation(line: 2475, column: 46, scope: !11668)
!11671 = !DILocalVariable(name: "val", scope: !11668, file: !3, line: 2477, type: !32)
!11672 = !DILocation(line: 2477, column: 6, scope: !11668)
!11673 = !DILocation(line: 2481, column: 11, scope: !11668)
!11674 = !DILocation(line: 2481, column: 19, scope: !11668)
!11675 = !DILocation(line: 2479, column: 2, scope: !11668)
!11676 = !DILocation(line: 2483, column: 17, scope: !11668)
!11677 = !DILocation(line: 2483, column: 8, scope: !11668)
!11678 = !DILocation(line: 2483, column: 6, scope: !11668)
!11679 = !DILocation(line: 2484, column: 6, scope: !11680)
!11680 = distinct !DILexicalBlock(scope: !11668, file: !3, line: 2484, column: 6)
!11681 = !DILocation(line: 2484, column: 10, scope: !11680)
!11682 = !DILocation(line: 2484, column: 6, scope: !11668)
!11683 = !DILocation(line: 2485, column: 10, scope: !11680)
!11684 = !DILocation(line: 2485, column: 3, scope: !11680)
!11685 = !DILocation(line: 2487, column: 50, scope: !11668)
!11686 = !DILocation(line: 2487, column: 58, scope: !11668)
!11687 = !DILocation(line: 2488, column: 5, scope: !11668)
!11688 = !DILocation(line: 2488, column: 9, scope: !11668)
!11689 = !DILocation(line: 2487, column: 2, scope: !11668)
!11690 = !DILocation(line: 2490, column: 56, scope: !11668)
!11691 = !DILocation(line: 2490, column: 64, scope: !11668)
!11692 = !DILocation(line: 2491, column: 5, scope: !11668)
!11693 = !DILocation(line: 2491, column: 9, scope: !11668)
!11694 = !DILocation(line: 2490, column: 2, scope: !11668)
!11695 = !DILocation(line: 2492, column: 56, scope: !11668)
!11696 = !DILocation(line: 2492, column: 64, scope: !11668)
!11697 = !DILocation(line: 2493, column: 5, scope: !11668)
!11698 = !DILocation(line: 2493, column: 9, scope: !11668)
!11699 = !DILocation(line: 2492, column: 2, scope: !11668)
!11700 = !DILocation(line: 2494, column: 55, scope: !11668)
!11701 = !DILocation(line: 2494, column: 63, scope: !11668)
!11702 = !DILocation(line: 2495, column: 5, scope: !11668)
!11703 = !DILocation(line: 2495, column: 9, scope: !11668)
!11704 = !DILocation(line: 2494, column: 2, scope: !11668)
!11705 = !DILocation(line: 2496, column: 55, scope: !11668)
!11706 = !DILocation(line: 2496, column: 63, scope: !11668)
!11707 = !DILocation(line: 2497, column: 5, scope: !11668)
!11708 = !DILocation(line: 2497, column: 9, scope: !11668)
!11709 = !DILocation(line: 2496, column: 2, scope: !11668)
!11710 = !DILocation(line: 2499, column: 6, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11668, file: !3, line: 2499, column: 6)
!11712 = !DILocation(line: 2499, column: 10, scope: !11711)
!11713 = !DILocation(line: 2499, column: 6, scope: !11668)
!11714 = !DILocation(line: 2500, column: 18, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 2499, column: 26)
!11716 = !DILocation(line: 2500, column: 9, scope: !11715)
!11717 = !DILocation(line: 2500, column: 7, scope: !11715)
!11718 = !DILocation(line: 2501, column: 7, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11715, file: !3, line: 2501, column: 7)
!11720 = !DILocation(line: 2501, column: 11, scope: !11719)
!11721 = !DILocation(line: 2501, column: 7, scope: !11715)
!11722 = !DILocation(line: 2502, column: 11, scope: !11719)
!11723 = !DILocation(line: 2502, column: 4, scope: !11719)
!11724 = !DILocation(line: 2505, column: 6, scope: !11715)
!11725 = !DILocation(line: 2505, column: 14, scope: !11715)
!11726 = !DILocation(line: 2505, column: 25, scope: !11715)
!11727 = !DILocation(line: 2505, column: 29, scope: !11715)
!11728 = !DILocation(line: 2504, column: 3, scope: !11715)
!11729 = !DILocation(line: 2507, column: 6, scope: !11715)
!11730 = !DILocation(line: 2507, column: 14, scope: !11715)
!11731 = !DILocation(line: 2507, column: 25, scope: !11715)
!11732 = !DILocation(line: 2507, column: 29, scope: !11715)
!11733 = !DILocation(line: 2506, column: 3, scope: !11715)
!11734 = !DILocation(line: 2509, column: 6, scope: !11715)
!11735 = !DILocation(line: 2509, column: 14, scope: !11715)
!11736 = !DILocation(line: 2509, column: 25, scope: !11715)
!11737 = !DILocation(line: 2509, column: 29, scope: !11715)
!11738 = !DILocation(line: 2508, column: 3, scope: !11715)
!11739 = !DILocation(line: 2510, column: 2, scope: !11715)
!11740 = !DILocation(line: 2512, column: 2, scope: !11668)
!11741 = !DILocation(line: 2513, column: 1, scope: !11668)
!11742 = distinct !DISubprogram(name: "linkmode_set_bit_array", scope: !11202, file: !11202, line: 46, type: !11743, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11743 = !DISubroutineType(types: !11744)
!11744 = !{null, !11745, !32, !3437}
!11745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7576, size: 64)
!11746 = !DILocalVariable(name: "array", arg: 1, scope: !11742, file: !11202, line: 46, type: !11745)
!11747 = !DILocation(line: 46, column: 54, scope: !11742)
!11748 = !DILocalVariable(name: "array_size", arg: 2, scope: !11742, file: !11202, line: 46, type: !32)
!11749 = !DILocation(line: 46, column: 65, scope: !11742)
!11750 = !DILocalVariable(name: "addr", arg: 3, scope: !11742, file: !11202, line: 47, type: !3437)
!11751 = !DILocation(line: 47, column: 23, scope: !11742)
!11752 = !DILocalVariable(name: "i", scope: !11742, file: !11202, line: 49, type: !32)
!11753 = !DILocation(line: 49, column: 6, scope: !11742)
!11754 = !DILocation(line: 51, column: 9, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11742, file: !11202, line: 51, column: 2)
!11756 = !DILocation(line: 51, column: 7, scope: !11755)
!11757 = !DILocation(line: 51, column: 14, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11755, file: !11202, line: 51, column: 2)
!11759 = !DILocation(line: 51, column: 18, scope: !11758)
!11760 = !DILocation(line: 51, column: 16, scope: !11758)
!11761 = !DILocation(line: 51, column: 2, scope: !11755)
!11762 = !DILocation(line: 52, column: 20, scope: !11758)
!11763 = !DILocation(line: 52, column: 26, scope: !11758)
!11764 = !DILocation(line: 52, column: 30, scope: !11758)
!11765 = !DILocation(line: 52, column: 3, scope: !11758)
!11766 = !DILocation(line: 51, column: 31, scope: !11758)
!11767 = !DILocation(line: 51, column: 2, scope: !11758)
!11768 = distinct !{!11768, !11761, !11769}
!11769 = !DILocation(line: 52, column: 34, scope: !11755)
!11770 = !DILocation(line: 53, column: 1, scope: !11742)
!11771 = distinct !DISubprogram(name: "genphy_read_mmd_unsupported", scope: !3, file: !3, line: 2520, type: !7175, scopeLine: 2521, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11772 = !DILocalVariable(name: "phdev", arg: 1, scope: !11771, file: !3, line: 2520, type: !7020)
!11773 = !DILocation(line: 2520, column: 52, scope: !11771)
!11774 = !DILocalVariable(name: "devad", arg: 2, scope: !11771, file: !3, line: 2520, type: !32)
!11775 = !DILocation(line: 2520, column: 63, scope: !11771)
!11776 = !DILocalVariable(name: "regnum", arg: 3, scope: !11771, file: !3, line: 2520, type: !581)
!11777 = !DILocation(line: 2520, column: 74, scope: !11771)
!11778 = !DILocation(line: 2522, column: 2, scope: !11771)
!11779 = distinct !DISubprogram(name: "genphy_write_mmd_unsupported", scope: !3, file: !3, line: 2526, type: !7179, scopeLine: 2528, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11780 = !DILocalVariable(name: "phdev", arg: 1, scope: !11779, file: !3, line: 2526, type: !7020)
!11781 = !DILocation(line: 2526, column: 53, scope: !11779)
!11782 = !DILocalVariable(name: "devnum", arg: 2, scope: !11779, file: !3, line: 2526, type: !32)
!11783 = !DILocation(line: 2526, column: 64, scope: !11779)
!11784 = !DILocalVariable(name: "regnum", arg: 3, scope: !11779, file: !3, line: 2527, type: !581)
!11785 = !DILocation(line: 2527, column: 10, scope: !11779)
!11786 = !DILocalVariable(name: "val", arg: 4, scope: !11779, file: !3, line: 2527, type: !581)
!11787 = !DILocation(line: 2527, column: 22, scope: !11779)
!11788 = !DILocation(line: 2529, column: 2, scope: !11779)
!11789 = distinct !DISubprogram(name: "genphy_suspend", scope: !3, file: !3, line: 2533, type: !7135, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11790 = !DILocalVariable(name: "phydev", arg: 1, scope: !11789, file: !3, line: 2533, type: !7020)
!11791 = !DILocation(line: 2533, column: 39, scope: !11789)
!11792 = !DILocation(line: 2535, column: 22, scope: !11789)
!11793 = !DILocation(line: 2535, column: 9, scope: !11789)
!11794 = !DILocation(line: 2535, column: 2, scope: !11789)
!11795 = distinct !DISubprogram(name: "phy_set_bits", scope: !7022, file: !7022, line: 1121, type: !11796, scopeLine: 1122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11796 = !DISubroutineType(types: !11797)
!11797 = !{!32, !7020, !987, !581}
!11798 = !DILocalVariable(name: "phydev", arg: 1, scope: !11795, file: !7022, line: 1121, type: !7020)
!11799 = !DILocation(line: 1121, column: 51, scope: !11795)
!11800 = !DILocalVariable(name: "regnum", arg: 2, scope: !11795, file: !7022, line: 1121, type: !987)
!11801 = !DILocation(line: 1121, column: 63, scope: !11795)
!11802 = !DILocalVariable(name: "val", arg: 3, scope: !11795, file: !7022, line: 1121, type: !581)
!11803 = !DILocation(line: 1121, column: 75, scope: !11795)
!11804 = !DILocation(line: 1123, column: 20, scope: !11795)
!11805 = !DILocation(line: 1123, column: 28, scope: !11795)
!11806 = !DILocation(line: 1123, column: 39, scope: !11795)
!11807 = !DILocation(line: 1123, column: 9, scope: !11795)
!11808 = !DILocation(line: 1123, column: 2, scope: !11795)
!11809 = distinct !DISubprogram(name: "genphy_resume", scope: !3, file: !3, line: 2539, type: !7135, scopeLine: 2540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11810 = !DILocalVariable(name: "phydev", arg: 1, scope: !11809, file: !3, line: 2539, type: !7020)
!11811 = !DILocation(line: 2539, column: 38, scope: !11809)
!11812 = !DILocation(line: 2541, column: 24, scope: !11809)
!11813 = !DILocation(line: 2541, column: 9, scope: !11809)
!11814 = !DILocation(line: 2541, column: 2, scope: !11809)
!11815 = distinct !DISubprogram(name: "phy_clear_bits", scope: !7022, file: !7022, line: 1132, type: !11796, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11816 = !DILocalVariable(name: "phydev", arg: 1, scope: !11815, file: !7022, line: 1132, type: !7020)
!11817 = !DILocation(line: 1132, column: 53, scope: !11815)
!11818 = !DILocalVariable(name: "regnum", arg: 2, scope: !11815, file: !7022, line: 1132, type: !987)
!11819 = !DILocation(line: 1132, column: 65, scope: !11815)
!11820 = !DILocalVariable(name: "val", arg: 3, scope: !11815, file: !7022, line: 1132, type: !581)
!11821 = !DILocation(line: 1132, column: 77, scope: !11815)
!11822 = !DILocation(line: 1134, column: 20, scope: !11815)
!11823 = !DILocation(line: 1134, column: 28, scope: !11815)
!11824 = !DILocation(line: 1134, column: 36, scope: !11815)
!11825 = !DILocation(line: 1134, column: 9, scope: !11815)
!11826 = !DILocation(line: 1134, column: 2, scope: !11815)
!11827 = distinct !DISubprogram(name: "genphy_loopback", scope: !3, file: !3, line: 2545, type: !7232, scopeLine: 2546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11828 = !DILocalVariable(name: "phydev", arg: 1, scope: !11827, file: !3, line: 2545, type: !7020)
!11829 = !DILocation(line: 2545, column: 40, scope: !11827)
!11830 = !DILocalVariable(name: "enable", arg: 2, scope: !11827, file: !3, line: 2545, type: !771)
!11831 = !DILocation(line: 2545, column: 53, scope: !11827)
!11832 = !DILocation(line: 2547, column: 20, scope: !11827)
!11833 = !DILocation(line: 2548, column: 6, scope: !11827)
!11834 = !DILocation(line: 2547, column: 9, scope: !11827)
!11835 = !DILocation(line: 2547, column: 2, scope: !11827)
!11836 = distinct !DISubprogram(name: "phy_remove_link_mode", scope: !3, file: !3, line: 2561, type: !11837, scopeLine: 2562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11837 = !DISubroutineType(types: !11838)
!11838 = !{null, !7020, !987}
!11839 = !DILocalVariable(name: "phydev", arg: 1, scope: !11836, file: !3, line: 2561, type: !7020)
!11840 = !DILocation(line: 2561, column: 46, scope: !11836)
!11841 = !DILocalVariable(name: "link_mode", arg: 2, scope: !11836, file: !3, line: 2561, type: !987)
!11842 = !DILocation(line: 2561, column: 58, scope: !11836)
!11843 = !DILocation(line: 2563, column: 21, scope: !11836)
!11844 = !DILocation(line: 2563, column: 32, scope: !11836)
!11845 = !DILocation(line: 2563, column: 40, scope: !11836)
!11846 = !DILocation(line: 2563, column: 2, scope: !11836)
!11847 = !DILocation(line: 2564, column: 26, scope: !11836)
!11848 = !DILocation(line: 2564, column: 2, scope: !11836)
!11849 = !DILocation(line: 2565, column: 1, scope: !11836)
!11850 = distinct !DISubprogram(name: "linkmode_clear_bit", scope: !11202, file: !11202, line: 55, type: !11851, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11851 = !DISubroutineType(types: !11852)
!11852 = !{null, !32, !11550}
!11853 = !DILocalVariable(name: "nr", arg: 1, scope: !11850, file: !11202, line: 55, type: !32)
!11854 = !DILocation(line: 55, column: 43, scope: !11850)
!11855 = !DILocalVariable(name: "addr", arg: 2, scope: !11850, file: !11202, line: 55, type: !11550)
!11856 = !DILocation(line: 55, column: 71, scope: !11850)
!11857 = !DILocation(line: 57, column: 14, scope: !11850)
!11858 = !DILocation(line: 57, column: 18, scope: !11850)
!11859 = !DILocation(line: 57, column: 2, scope: !11850)
!11860 = !DILocation(line: 58, column: 1, scope: !11850)
!11861 = distinct !DISubprogram(name: "phy_advertise_supported", scope: !3, file: !3, line: 2583, type: !7161, scopeLine: 2584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11862 = !DILocalVariable(name: "phydev", arg: 1, scope: !11861, file: !3, line: 2583, type: !7020)
!11863 = !DILocation(line: 2583, column: 49, scope: !11861)
!11864 = !DILocalVariable(name: "new", scope: !11861, file: !3, line: 2585, type: !6009)
!11865 = !DILocation(line: 2585, column: 2, scope: !11861)
!11866 = !DILocation(line: 2587, column: 16, scope: !11861)
!11867 = !DILocation(line: 2587, column: 21, scope: !11861)
!11868 = !DILocation(line: 2587, column: 29, scope: !11861)
!11869 = !DILocation(line: 2587, column: 2, scope: !11861)
!11870 = !DILocation(line: 2588, column: 22, scope: !11861)
!11871 = !DILocation(line: 2588, column: 27, scope: !11861)
!11872 = !DILocation(line: 2588, column: 35, scope: !11861)
!11873 = !DILocation(line: 2588, column: 2, scope: !11861)
!11874 = !DILocation(line: 2589, column: 16, scope: !11861)
!11875 = !DILocation(line: 2589, column: 24, scope: !11861)
!11876 = !DILocation(line: 2589, column: 37, scope: !11861)
!11877 = !DILocation(line: 2589, column: 2, scope: !11861)
!11878 = !DILocation(line: 2590, column: 1, scope: !11861)
!11879 = distinct !DISubprogram(name: "linkmode_copy", scope: !11202, file: !11202, line: 13, type: !11880, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11880 = !DISubroutineType(types: !11881)
!11881 = !{null, !3437, !7130}
!11882 = !DILocalVariable(name: "dst", arg: 1, scope: !11879, file: !11202, line: 13, type: !3437)
!11883 = !DILocation(line: 13, column: 49, scope: !11879)
!11884 = !DILocalVariable(name: "src", arg: 2, scope: !11879, file: !11202, line: 13, type: !7130)
!11885 = !DILocation(line: 13, column: 75, scope: !11879)
!11886 = !DILocation(line: 15, column: 14, scope: !11879)
!11887 = !DILocation(line: 15, column: 19, scope: !11879)
!11888 = !DILocation(line: 15, column: 2, scope: !11879)
!11889 = !DILocation(line: 16, column: 1, scope: !11879)
!11890 = distinct !DISubprogram(name: "phy_copy_pause_bits", scope: !3, file: !3, line: 2568, type: !11891, scopeLine: 2569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11891 = !DISubroutineType(types: !11892)
!11892 = !{null, !3437, !3437}
!11893 = !DILocalVariable(name: "dst", arg: 1, scope: !11890, file: !3, line: 2568, type: !3437)
!11894 = !DILocation(line: 2568, column: 48, scope: !11890)
!11895 = !DILocalVariable(name: "src", arg: 2, scope: !11890, file: !3, line: 2568, type: !3437)
!11896 = !DILocation(line: 2568, column: 68, scope: !11890)
!11897 = !DILocation(line: 2570, column: 53, scope: !11890)
!11898 = !DILocation(line: 2571, column: 55, scope: !11890)
!11899 = !DILocation(line: 2571, column: 3, scope: !11890)
!11900 = !DILocation(line: 2570, column: 2, scope: !11890)
!11901 = !DILocation(line: 2572, column: 48, scope: !11890)
!11902 = !DILocation(line: 2573, column: 50, scope: !11890)
!11903 = !DILocation(line: 2573, column: 3, scope: !11890)
!11904 = !DILocation(line: 2572, column: 2, scope: !11890)
!11905 = !DILocation(line: 2574, column: 1, scope: !11890)
!11906 = distinct !DISubprogram(name: "phy_support_sym_pause", scope: !3, file: !3, line: 2600, type: !7161, scopeLine: 2601, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11907 = !DILocalVariable(name: "phydev", arg: 1, scope: !11906, file: !3, line: 2600, type: !7020)
!11908 = !DILocation(line: 2600, column: 47, scope: !11906)
!11909 = !DILocation(line: 2602, column: 55, scope: !11906)
!11910 = !DILocation(line: 2602, column: 63, scope: !11906)
!11911 = !DILocation(line: 2602, column: 2, scope: !11906)
!11912 = !DILocation(line: 2603, column: 22, scope: !11906)
!11913 = !DILocation(line: 2603, column: 30, scope: !11906)
!11914 = !DILocation(line: 2603, column: 43, scope: !11906)
!11915 = !DILocation(line: 2603, column: 51, scope: !11906)
!11916 = !DILocation(line: 2603, column: 2, scope: !11906)
!11917 = !DILocation(line: 2604, column: 1, scope: !11906)
!11918 = distinct !DISubprogram(name: "phy_support_asym_pause", scope: !3, file: !3, line: 2613, type: !7161, scopeLine: 2614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11919 = !DILocalVariable(name: "phydev", arg: 1, scope: !11918, file: !3, line: 2613, type: !7020)
!11920 = !DILocation(line: 2613, column: 48, scope: !11918)
!11921 = !DILocation(line: 2615, column: 22, scope: !11918)
!11922 = !DILocation(line: 2615, column: 30, scope: !11918)
!11923 = !DILocation(line: 2615, column: 43, scope: !11918)
!11924 = !DILocation(line: 2615, column: 51, scope: !11918)
!11925 = !DILocation(line: 2615, column: 2, scope: !11918)
!11926 = !DILocation(line: 2616, column: 1, scope: !11918)
!11927 = distinct !DISubprogram(name: "phy_set_sym_pause", scope: !3, file: !3, line: 2630, type: !11928, scopeLine: 2632, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11928 = !DISubroutineType(types: !11929)
!11929 = !{null, !7020, !771, !771, !771}
!11930 = !DILocalVariable(name: "phydev", arg: 1, scope: !11927, file: !3, line: 2630, type: !7020)
!11931 = !DILocation(line: 2630, column: 43, scope: !11927)
!11932 = !DILocalVariable(name: "rx", arg: 2, scope: !11927, file: !3, line: 2630, type: !771)
!11933 = !DILocation(line: 2630, column: 56, scope: !11927)
!11934 = !DILocalVariable(name: "tx", arg: 3, scope: !11927, file: !3, line: 2630, type: !771)
!11935 = !DILocation(line: 2630, column: 65, scope: !11927)
!11936 = !DILocalVariable(name: "autoneg", arg: 4, scope: !11927, file: !3, line: 2631, type: !771)
!11937 = !DILocation(line: 2631, column: 15, scope: !11927)
!11938 = !DILocation(line: 2633, column: 50, scope: !11927)
!11939 = !DILocation(line: 2633, column: 58, scope: !11927)
!11940 = !DILocation(line: 2633, column: 2, scope: !11927)
!11941 = !DILocation(line: 2635, column: 6, scope: !11942)
!11942 = distinct !DILexicalBlock(scope: !11927, file: !3, line: 2635, column: 6)
!11943 = !DILocation(line: 2635, column: 9, scope: !11942)
!11944 = !DILocation(line: 2635, column: 12, scope: !11942)
!11945 = !DILocation(line: 2635, column: 15, scope: !11942)
!11946 = !DILocation(line: 2635, column: 18, scope: !11942)
!11947 = !DILocation(line: 2635, column: 6, scope: !11927)
!11948 = !DILocation(line: 2637, column: 6, scope: !11942)
!11949 = !DILocation(line: 2637, column: 14, scope: !11942)
!11950 = !DILocation(line: 2636, column: 3, scope: !11942)
!11951 = !DILocation(line: 2639, column: 16, scope: !11927)
!11952 = !DILocation(line: 2639, column: 24, scope: !11927)
!11953 = !DILocation(line: 2639, column: 37, scope: !11927)
!11954 = !DILocation(line: 2639, column: 45, scope: !11927)
!11955 = !DILocation(line: 2639, column: 2, scope: !11927)
!11956 = !DILocation(line: 2640, column: 1, scope: !11927)
!11957 = distinct !DISubprogram(name: "linkmode_set_bit", scope: !11202, file: !11202, line: 41, type: !11851, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11958 = !DILocalVariable(name: "nr", arg: 1, scope: !11957, file: !11202, line: 41, type: !32)
!11959 = !DILocation(line: 41, column: 41, scope: !11957)
!11960 = !DILocalVariable(name: "addr", arg: 2, scope: !11957, file: !11202, line: 41, type: !11550)
!11961 = !DILocation(line: 41, column: 69, scope: !11957)
!11962 = !DILocation(line: 43, column: 12, scope: !11957)
!11963 = !DILocation(line: 43, column: 16, scope: !11957)
!11964 = !DILocation(line: 43, column: 2, scope: !11957)
!11965 = !DILocation(line: 44, column: 1, scope: !11957)
!11966 = distinct !DISubprogram(name: "phy_set_asym_pause", scope: !3, file: !3, line: 2654, type: !11967, scopeLine: 2655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11967 = !DISubroutineType(types: !11968)
!11968 = !{null, !7020, !771, !771}
!11969 = !DILocalVariable(name: "phydev", arg: 1, scope: !11966, file: !3, line: 2654, type: !7020)
!11970 = !DILocation(line: 2654, column: 44, scope: !11966)
!11971 = !DILocalVariable(name: "rx", arg: 2, scope: !11966, file: !3, line: 2654, type: !771)
!11972 = !DILocation(line: 2654, column: 57, scope: !11966)
!11973 = !DILocalVariable(name: "tx", arg: 3, scope: !11966, file: !3, line: 2654, type: !771)
!11974 = !DILocation(line: 2654, column: 66, scope: !11966)
!11975 = !DILocalVariable(name: "oldadv", scope: !11966, file: !3, line: 2656, type: !6009)
!11976 = !DILocation(line: 2656, column: 2, scope: !11966)
!11977 = !DILocation(line: 2658, column: 16, scope: !11966)
!11978 = !DILocation(line: 2658, column: 24, scope: !11966)
!11979 = !DILocation(line: 2658, column: 32, scope: !11966)
!11980 = !DILocation(line: 2658, column: 2, scope: !11966)
!11981 = !DILocation(line: 2659, column: 21, scope: !11966)
!11982 = !DILocation(line: 2659, column: 29, scope: !11966)
!11983 = !DILocation(line: 2659, column: 42, scope: !11966)
!11984 = !DILocation(line: 2659, column: 46, scope: !11966)
!11985 = !DILocation(line: 2659, column: 2, scope: !11966)
!11986 = !DILocation(line: 2661, column: 22, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11966, file: !3, line: 2661, column: 6)
!11988 = !DILocation(line: 2661, column: 30, scope: !11987)
!11989 = !DILocation(line: 2661, column: 38, scope: !11987)
!11990 = !DILocation(line: 2661, column: 7, scope: !11987)
!11991 = !DILocation(line: 2661, column: 51, scope: !11987)
!11992 = !DILocation(line: 2662, column: 6, scope: !11987)
!11993 = !DILocation(line: 2662, column: 14, scope: !11987)
!11994 = !DILocation(line: 2661, column: 6, scope: !11966)
!11995 = !DILocation(line: 2663, column: 18, scope: !11987)
!11996 = !DILocation(line: 2663, column: 3, scope: !11987)
!11997 = !DILocation(line: 2664, column: 1, scope: !11966)
!11998 = distinct !DISubprogram(name: "linkmode_equal", scope: !11202, file: !11202, line: 79, type: !11999, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!11999 = !DISubroutineType(types: !12000)
!12000 = !{!32, !7130, !7130}
!12001 = !DILocalVariable(name: "src1", arg: 1, scope: !11998, file: !11202, line: 79, type: !7130)
!12002 = !DILocation(line: 79, column: 55, scope: !11998)
!12003 = !DILocalVariable(name: "src2", arg: 2, scope: !11998, file: !11202, line: 80, type: !7130)
!12004 = !DILocation(line: 80, column: 27, scope: !11998)
!12005 = !DILocation(line: 82, column: 22, scope: !11998)
!12006 = !DILocation(line: 82, column: 28, scope: !11998)
!12007 = !DILocation(line: 82, column: 9, scope: !11998)
!12008 = !DILocation(line: 82, column: 2, scope: !11998)
!12009 = distinct !DISubprogram(name: "phy_validate_pause", scope: !3, file: !3, line: 2676, type: !12010, scopeLine: 2678, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12010 = !DISubroutineType(types: !12011)
!12011 = !{!771, !7020, !5676}
!12012 = !DILocalVariable(name: "phydev", arg: 1, scope: !12009, file: !3, line: 2676, type: !7020)
!12013 = !DILocation(line: 2676, column: 44, scope: !12009)
!12014 = !DILocalVariable(name: "pp", arg: 2, scope: !12009, file: !3, line: 2677, type: !5676)
!12015 = !DILocation(line: 2677, column: 31, scope: !12009)
!12016 = !DILocation(line: 2680, column: 11, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12009, file: !3, line: 2679, column: 6)
!12018 = !DILocation(line: 2680, column: 19, scope: !12017)
!12019 = !DILocation(line: 2679, column: 7, scope: !12017)
!12020 = !DILocation(line: 2680, column: 30, scope: !12017)
!12021 = !DILocation(line: 2680, column: 33, scope: !12017)
!12022 = !DILocation(line: 2680, column: 37, scope: !12017)
!12023 = !DILocation(line: 2679, column: 6, scope: !12009)
!12024 = !DILocation(line: 2681, column: 3, scope: !12017)
!12025 = !DILocation(line: 2684, column: 11, scope: !12026)
!12026 = distinct !DILexicalBlock(scope: !12009, file: !3, line: 2683, column: 6)
!12027 = !DILocation(line: 2684, column: 19, scope: !12026)
!12028 = !DILocation(line: 2683, column: 7, scope: !12026)
!12029 = !DILocation(line: 2684, column: 30, scope: !12026)
!12030 = !DILocation(line: 2685, column: 6, scope: !12026)
!12031 = !DILocation(line: 2685, column: 10, scope: !12026)
!12032 = !DILocation(line: 2685, column: 22, scope: !12026)
!12033 = !DILocation(line: 2685, column: 26, scope: !12026)
!12034 = !DILocation(line: 2685, column: 19, scope: !12026)
!12035 = !DILocation(line: 2683, column: 6, scope: !12009)
!12036 = !DILocation(line: 2686, column: 3, scope: !12026)
!12037 = !DILocation(line: 2688, column: 2, scope: !12009)
!12038 = !DILocation(line: 2689, column: 1, scope: !12009)
!12039 = distinct !DISubprogram(name: "linkmode_test_bit", scope: !11202, file: !11202, line: 74, type: !12040, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12040 = !DISubroutineType(types: !12041)
!12041 = !{!32, !32, !12042}
!12042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12043, size: 64)
!12043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11551)
!12044 = !DILocalVariable(name: "nr", arg: 1, scope: !12039, file: !11202, line: 74, type: !32)
!12045 = !DILocation(line: 74, column: 41, scope: !12039)
!12046 = !DILocalVariable(name: "addr", arg: 2, scope: !12039, file: !11202, line: 74, type: !12042)
!12047 = !DILocation(line: 74, column: 75, scope: !12039)
!12048 = !DILocation(line: 76, column: 18, scope: !12039)
!12049 = !DILocation(line: 76, column: 22, scope: !12039)
!12050 = !DILocation(line: 76, column: 9, scope: !12039)
!12051 = !DILocation(line: 76, column: 2, scope: !12039)
!12052 = distinct !DISubprogram(name: "phy_get_pause", scope: !3, file: !3, line: 2704, type: !12053, scopeLine: 2705, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12053 = !DISubroutineType(types: !12054)
!12054 = !{null, !7020, !2006, !2006}
!12055 = !DILocalVariable(name: "phydev", arg: 1, scope: !12052, file: !3, line: 2704, type: !7020)
!12056 = !DILocation(line: 2704, column: 39, scope: !12052)
!12057 = !DILocalVariable(name: "tx_pause", arg: 2, scope: !12052, file: !3, line: 2704, type: !2006)
!12058 = !DILocation(line: 2704, column: 53, scope: !12052)
!12059 = !DILocalVariable(name: "rx_pause", arg: 3, scope: !12052, file: !3, line: 2704, type: !2006)
!12060 = !DILocation(line: 2704, column: 69, scope: !12052)
!12061 = !DILocation(line: 2706, column: 6, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12052, file: !3, line: 2706, column: 6)
!12063 = !DILocation(line: 2706, column: 14, scope: !12062)
!12064 = !DILocation(line: 2706, column: 21, scope: !12062)
!12065 = !DILocation(line: 2706, column: 6, scope: !12052)
!12066 = !DILocation(line: 2707, column: 4, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12062, file: !3, line: 2706, column: 37)
!12068 = !DILocation(line: 2707, column: 13, scope: !12067)
!12069 = !DILocation(line: 2708, column: 4, scope: !12067)
!12070 = !DILocation(line: 2708, column: 13, scope: !12067)
!12071 = !DILocation(line: 2709, column: 3, scope: !12067)
!12072 = !DILocation(line: 2712, column: 32, scope: !12052)
!12073 = !DILocation(line: 2712, column: 40, scope: !12052)
!12074 = !DILocation(line: 2713, column: 11, scope: !12052)
!12075 = !DILocation(line: 2713, column: 19, scope: !12052)
!12076 = !DILocation(line: 2714, column: 11, scope: !12052)
!12077 = !DILocation(line: 2714, column: 21, scope: !12052)
!12078 = !DILocation(line: 2712, column: 9, scope: !12052)
!12079 = !DILocation(line: 2712, column: 2, scope: !12052)
!12080 = !DILocation(line: 2715, column: 1, scope: !12052)
!12081 = distinct !DISubprogram(name: "phy_get_internal_delay", scope: !3, file: !3, line: 2753, type: !12082, scopeLine: 2755, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12082 = !DISubroutineType(types: !12083)
!12083 = !{!2544, !7020, !6545, !11745, !32, !771}
!12084 = !DILocalVariable(name: "phydev", arg: 1, scope: !12081, file: !3, line: 2753, type: !7020)
!12085 = !DILocation(line: 2753, column: 47, scope: !12081)
!12086 = !DILocalVariable(name: "dev", arg: 2, scope: !12081, file: !3, line: 2753, type: !6545)
!12087 = !DILocation(line: 2753, column: 70, scope: !12081)
!12088 = !DILocalVariable(name: "delay_values", arg: 3, scope: !12081, file: !3, line: 2754, type: !11745)
!12089 = !DILocation(line: 2754, column: 18, scope: !12081)
!12090 = !DILocalVariable(name: "size", arg: 4, scope: !12081, file: !3, line: 2754, type: !32)
!12091 = !DILocation(line: 2754, column: 36, scope: !12081)
!12092 = !DILocalVariable(name: "is_rx", arg: 5, scope: !12081, file: !3, line: 2754, type: !771)
!12093 = !DILocation(line: 2754, column: 47, scope: !12081)
!12094 = !DILocalVariable(name: "delay", scope: !12081, file: !3, line: 2756, type: !2544)
!12095 = !DILocation(line: 2756, column: 6, scope: !12081)
!12096 = !DILocalVariable(name: "i", scope: !12081, file: !3, line: 2757, type: !32)
!12097 = !DILocation(line: 2757, column: 6, scope: !12081)
!12098 = !DILocation(line: 2759, column: 6, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12081, file: !3, line: 2759, column: 6)
!12100 = !DILocation(line: 2759, column: 6, scope: !12081)
!12101 = !DILocation(line: 2760, column: 38, scope: !12102)
!12102 = distinct !DILexicalBlock(scope: !12099, file: !3, line: 2759, column: 13)
!12103 = !DILocation(line: 2760, column: 11, scope: !12102)
!12104 = !DILocation(line: 2760, column: 9, scope: !12102)
!12105 = !DILocation(line: 2761, column: 7, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !12102, file: !3, line: 2761, column: 7)
!12107 = !DILocation(line: 2761, column: 13, scope: !12106)
!12108 = !DILocation(line: 2761, column: 17, scope: !12106)
!12109 = !DILocation(line: 2761, column: 20, scope: !12106)
!12110 = !DILocation(line: 2761, column: 25, scope: !12106)
!12111 = !DILocation(line: 2761, column: 7, scope: !12102)
!12112 = !DILocation(line: 2762, column: 8, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12114, file: !3, line: 2762, column: 8)
!12114 = distinct !DILexicalBlock(scope: !12106, file: !3, line: 2761, column: 31)
!12115 = !DILocation(line: 2762, column: 16, scope: !12113)
!12116 = !DILocation(line: 2762, column: 26, scope: !12113)
!12117 = !DILocation(line: 2762, column: 57, scope: !12113)
!12118 = !DILocation(line: 2763, column: 8, scope: !12113)
!12119 = !DILocation(line: 2763, column: 16, scope: !12113)
!12120 = !DILocation(line: 2763, column: 26, scope: !12113)
!12121 = !DILocation(line: 2762, column: 8, scope: !12114)
!12122 = !DILocation(line: 2764, column: 5, scope: !12113)
!12123 = !DILocation(line: 2766, column: 5, scope: !12113)
!12124 = !DILocation(line: 2769, column: 2, scope: !12102)
!12125 = !DILocation(line: 2770, column: 38, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12099, file: !3, line: 2769, column: 9)
!12127 = !DILocation(line: 2770, column: 11, scope: !12126)
!12128 = !DILocation(line: 2770, column: 9, scope: !12126)
!12129 = !DILocation(line: 2771, column: 7, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12126, file: !3, line: 2771, column: 7)
!12131 = !DILocation(line: 2771, column: 13, scope: !12130)
!12132 = !DILocation(line: 2771, column: 17, scope: !12130)
!12133 = !DILocation(line: 2771, column: 20, scope: !12130)
!12134 = !DILocation(line: 2771, column: 25, scope: !12130)
!12135 = !DILocation(line: 2771, column: 7, scope: !12126)
!12136 = !DILocation(line: 2772, column: 8, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12138, file: !3, line: 2772, column: 8)
!12138 = distinct !DILexicalBlock(scope: !12130, file: !3, line: 2771, column: 31)
!12139 = !DILocation(line: 2772, column: 16, scope: !12137)
!12140 = !DILocation(line: 2772, column: 26, scope: !12137)
!12141 = !DILocation(line: 2772, column: 57, scope: !12137)
!12142 = !DILocation(line: 2773, column: 8, scope: !12137)
!12143 = !DILocation(line: 2773, column: 16, scope: !12137)
!12144 = !DILocation(line: 2773, column: 26, scope: !12137)
!12145 = !DILocation(line: 2772, column: 8, scope: !12138)
!12146 = !DILocation(line: 2774, column: 5, scope: !12137)
!12147 = !DILocation(line: 2776, column: 5, scope: !12137)
!12148 = !DILocation(line: 2780, column: 6, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12081, file: !3, line: 2780, column: 6)
!12150 = !DILocation(line: 2780, column: 12, scope: !12149)
!12151 = !DILocation(line: 2780, column: 6, scope: !12081)
!12152 = !DILocation(line: 2781, column: 10, scope: !12149)
!12153 = !DILocation(line: 2781, column: 3, scope: !12149)
!12154 = !DILocation(line: 2783, column: 6, scope: !12155)
!12155 = distinct !DILexicalBlock(scope: !12081, file: !3, line: 2783, column: 6)
!12156 = !DILocation(line: 2783, column: 12, scope: !12155)
!12157 = !DILocation(line: 2783, column: 15, scope: !12155)
!12158 = !DILocation(line: 2783, column: 20, scope: !12155)
!12159 = !DILocation(line: 2783, column: 6, scope: !12081)
!12160 = !DILocation(line: 2784, column: 10, scope: !12155)
!12161 = !DILocation(line: 2784, column: 3, scope: !12155)
!12162 = !DILocation(line: 2786, column: 6, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12081, file: !3, line: 2786, column: 6)
!12164 = !DILocation(line: 2786, column: 14, scope: !12163)
!12165 = !DILocation(line: 2786, column: 12, scope: !12163)
!12166 = !DILocation(line: 2786, column: 30, scope: !12163)
!12167 = !DILocation(line: 2786, column: 33, scope: !12163)
!12168 = !DILocation(line: 2786, column: 41, scope: !12163)
!12169 = !DILocation(line: 2786, column: 54, scope: !12163)
!12170 = !DILocation(line: 2786, column: 59, scope: !12163)
!12171 = !DILocation(line: 2786, column: 39, scope: !12163)
!12172 = !DILocation(line: 2786, column: 6, scope: !12081)
!12173 = !DILocation(line: 2787, column: 3, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12163, file: !3, line: 2786, column: 65)
!12175 = !DILocation(line: 2788, column: 3, scope: !12174)
!12176 = !DILocation(line: 2791, column: 6, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12081, file: !3, line: 2791, column: 6)
!12178 = !DILocation(line: 2791, column: 15, scope: !12177)
!12179 = !DILocation(line: 2791, column: 12, scope: !12177)
!12180 = !DILocation(line: 2791, column: 6, scope: !12081)
!12181 = !DILocation(line: 2792, column: 3, scope: !12177)
!12182 = !DILocation(line: 2794, column: 9, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12081, file: !3, line: 2794, column: 2)
!12184 = !DILocation(line: 2794, column: 7, scope: !12183)
!12185 = !DILocation(line: 2794, column: 14, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12183, file: !3, line: 2794, column: 2)
!12187 = !DILocation(line: 2794, column: 18, scope: !12186)
!12188 = !DILocation(line: 2794, column: 16, scope: !12186)
!12189 = !DILocation(line: 2794, column: 2, scope: !12183)
!12190 = !DILocation(line: 2795, column: 7, scope: !12191)
!12191 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 2795, column: 7)
!12192 = distinct !DILexicalBlock(scope: !12186, file: !3, line: 2794, column: 29)
!12193 = !DILocation(line: 2795, column: 16, scope: !12191)
!12194 = !DILocation(line: 2795, column: 29, scope: !12191)
!12195 = !DILocation(line: 2795, column: 13, scope: !12191)
!12196 = !DILocation(line: 2795, column: 7, scope: !12192)
!12197 = !DILocation(line: 2796, column: 11, scope: !12191)
!12198 = !DILocation(line: 2796, column: 4, scope: !12191)
!12199 = !DILocation(line: 2799, column: 7, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 2799, column: 7)
!12201 = !DILocation(line: 2799, column: 15, scope: !12200)
!12202 = !DILocation(line: 2799, column: 28, scope: !12200)
!12203 = !DILocation(line: 2799, column: 30, scope: !12200)
!12204 = !DILocation(line: 2799, column: 13, scope: !12200)
!12205 = !DILocation(line: 2799, column: 35, scope: !12200)
!12206 = !DILocation(line: 2800, column: 7, scope: !12200)
!12207 = !DILocation(line: 2800, column: 15, scope: !12200)
!12208 = !DILocation(line: 2800, column: 28, scope: !12200)
!12209 = !DILocation(line: 2800, column: 13, scope: !12200)
!12210 = !DILocation(line: 2799, column: 7, scope: !12192)
!12211 = !DILocation(line: 2801, column: 8, scope: !12212)
!12212 = distinct !DILexicalBlock(scope: !12213, file: !3, line: 2801, column: 8)
!12213 = distinct !DILexicalBlock(scope: !12200, file: !3, line: 2800, column: 32)
!12214 = !DILocation(line: 2801, column: 16, scope: !12212)
!12215 = !DILocation(line: 2801, column: 29, scope: !12212)
!12216 = !DILocation(line: 2801, column: 31, scope: !12212)
!12217 = !DILocation(line: 2801, column: 14, scope: !12212)
!12218 = !DILocation(line: 2802, column: 8, scope: !12212)
!12219 = !DILocation(line: 2802, column: 21, scope: !12212)
!12220 = !DILocation(line: 2802, column: 26, scope: !12212)
!12221 = !DILocation(line: 2802, column: 24, scope: !12212)
!12222 = !DILocation(line: 2801, column: 36, scope: !12212)
!12223 = !DILocation(line: 2801, column: 8, scope: !12213)
!12224 = !DILocation(line: 2803, column: 12, scope: !12212)
!12225 = !DILocation(line: 2803, column: 14, scope: !12212)
!12226 = !DILocation(line: 2803, column: 5, scope: !12212)
!12227 = !DILocation(line: 2805, column: 12, scope: !12212)
!12228 = !DILocation(line: 2805, column: 5, scope: !12212)
!12229 = !DILocation(line: 2807, column: 2, scope: !12192)
!12230 = !DILocation(line: 2794, column: 25, scope: !12186)
!12231 = !DILocation(line: 2794, column: 2, scope: !12186)
!12232 = distinct !{!12232, !12189, !12233}
!12233 = !DILocation(line: 2807, column: 2, scope: !12183)
!12234 = !DILocation(line: 2809, column: 2, scope: !12081)
!12235 = !DILocation(line: 2812, column: 2, scope: !12081)
!12236 = !DILocation(line: 2813, column: 1, scope: !12081)
!12237 = distinct !DISubprogram(name: "phy_get_int_delay_property", scope: !3, file: !3, line: 2719, type: !12238, scopeLine: 2720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12238 = !DISubroutineType(types: !12239)
!12239 = !{!32, !6545, !292}
!12240 = !DILocalVariable(name: "dev", arg: 1, scope: !12237, file: !3, line: 2719, type: !6545)
!12241 = !DILocation(line: 2719, column: 54, scope: !12237)
!12242 = !DILocalVariable(name: "name", arg: 2, scope: !12237, file: !3, line: 2719, type: !292)
!12243 = !DILocation(line: 2719, column: 71, scope: !12237)
!12244 = !DILocalVariable(name: "int_delay", scope: !12237, file: !3, line: 2721, type: !2544)
!12245 = !DILocation(line: 2721, column: 6, scope: !12237)
!12246 = !DILocalVariable(name: "ret", scope: !12237, file: !3, line: 2722, type: !32)
!12247 = !DILocation(line: 2722, column: 6, scope: !12237)
!12248 = !DILocation(line: 2724, column: 33, scope: !12237)
!12249 = !DILocation(line: 2724, column: 38, scope: !12237)
!12250 = !DILocation(line: 2724, column: 8, scope: !12237)
!12251 = !DILocation(line: 2724, column: 6, scope: !12237)
!12252 = !DILocation(line: 2725, column: 6, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12237, file: !3, line: 2725, column: 6)
!12254 = !DILocation(line: 2725, column: 6, scope: !12237)
!12255 = !DILocation(line: 2726, column: 10, scope: !12253)
!12256 = !DILocation(line: 2726, column: 3, scope: !12253)
!12257 = !DILocation(line: 2728, column: 9, scope: !12237)
!12258 = !DILocation(line: 2728, column: 2, scope: !12237)
!12259 = !DILocation(line: 2729, column: 1, scope: !12237)
!12260 = distinct !DISubprogram(name: "phy_driver_register", scope: !3, file: !3, line: 2955, type: !12261, scopeLine: 2956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12261 = !DISubroutineType(types: !12262)
!12262 = !{!32, !7117, !980}
!12263 = !DILocalVariable(name: "new_driver", arg: 1, scope: !12260, file: !3, line: 2955, type: !7117)
!12264 = !DILocation(line: 2955, column: 44, scope: !12260)
!12265 = !DILocalVariable(name: "owner", arg: 2, scope: !12260, file: !3, line: 2955, type: !980)
!12266 = !DILocation(line: 2955, column: 71, scope: !12260)
!12267 = !DILocalVariable(name: "retval", scope: !12260, file: !3, line: 2957, type: !32)
!12268 = !DILocation(line: 2957, column: 6, scope: !12260)
!12269 = !DILocalVariable(name: "__ret_warn_on", scope: !12270, file: !3, line: 2962, type: !32)
!12270 = distinct !DILexicalBlock(scope: !12271, file: !3, line: 2962, column: 6)
!12271 = distinct !DILexicalBlock(scope: !12260, file: !3, line: 2962, column: 6)
!12272 = !DILocation(line: 2962, column: 6, scope: !12270)
!12273 = !DILocation(line: 0, scope: !12270)
!12274 = !DILocation(line: 2962, column: 6, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12270, file: !3, line: 2962, column: 6)
!12276 = !DILocation(line: 2962, column: 6, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12275, file: !3, line: 2962, column: 6)
!12278 = !DILocation(line: 2962, column: 6, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12277, file: !3, line: 2962, column: 6)
!12280 = !DILocation(line: 2962, column: 6, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12277, file: !3, line: 2962, column: 6)
!12282 = !{i32 -2139717078, i32 -2139717049, i32 -2139717003, i32 -2139716945, i32 -2139716891, i32 -2139716837, i32 -2139716782, i32 -2139716751}
!12283 = !DILocation(line: 2962, column: 6, scope: !12284)
!12284 = distinct !DILexicalBlock(scope: !12277, file: !3, line: 2962, column: 6)
!12285 = !{i32 -2139716340, i32 -2139716333, i32 -2139716281, i32 -2139716250, i32 -2139716220}
!12286 = !DILocation(line: 2962, column: 6, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12277, file: !3, line: 2962, column: 6)
!12288 = !DILocation(line: 2962, column: 6, scope: !12271)
!12289 = !DILocation(line: 2962, column: 6, scope: !12260)
!12290 = !DILocation(line: 2963, column: 3, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12271, file: !3, line: 2962, column: 65)
!12292 = !DILocation(line: 2965, column: 3, scope: !12291)
!12293 = !DILocation(line: 2968, column: 2, scope: !12260)
!12294 = !DILocation(line: 2968, column: 14, scope: !12260)
!12295 = !DILocation(line: 2968, column: 22, scope: !12260)
!12296 = !DILocation(line: 2968, column: 28, scope: !12260)
!12297 = !DILocation(line: 2969, column: 36, scope: !12260)
!12298 = !DILocation(line: 2969, column: 48, scope: !12260)
!12299 = !DILocation(line: 2969, column: 2, scope: !12260)
!12300 = !DILocation(line: 2969, column: 14, scope: !12260)
!12301 = !DILocation(line: 2969, column: 22, scope: !12260)
!12302 = !DILocation(line: 2969, column: 29, scope: !12260)
!12303 = !DILocation(line: 2969, column: 34, scope: !12260)
!12304 = !DILocation(line: 2970, column: 2, scope: !12260)
!12305 = !DILocation(line: 2970, column: 14, scope: !12260)
!12306 = !DILocation(line: 2970, column: 22, scope: !12260)
!12307 = !DILocation(line: 2970, column: 29, scope: !12260)
!12308 = !DILocation(line: 2970, column: 33, scope: !12260)
!12309 = !DILocation(line: 2971, column: 2, scope: !12260)
!12310 = !DILocation(line: 2971, column: 14, scope: !12260)
!12311 = !DILocation(line: 2971, column: 22, scope: !12260)
!12312 = !DILocation(line: 2971, column: 29, scope: !12260)
!12313 = !DILocation(line: 2971, column: 35, scope: !12260)
!12314 = !DILocation(line: 2972, column: 2, scope: !12260)
!12315 = !DILocation(line: 2972, column: 14, scope: !12260)
!12316 = !DILocation(line: 2972, column: 22, scope: !12260)
!12317 = !DILocation(line: 2972, column: 29, scope: !12260)
!12318 = !DILocation(line: 2972, column: 36, scope: !12260)
!12319 = !DILocation(line: 2973, column: 37, scope: !12260)
!12320 = !DILocation(line: 2973, column: 2, scope: !12260)
!12321 = !DILocation(line: 2973, column: 14, scope: !12260)
!12322 = !DILocation(line: 2973, column: 22, scope: !12260)
!12323 = !DILocation(line: 2973, column: 29, scope: !12260)
!12324 = !DILocation(line: 2973, column: 35, scope: !12260)
!12325 = !DILocation(line: 2974, column: 2, scope: !12260)
!12326 = !DILocation(line: 2974, column: 14, scope: !12260)
!12327 = !DILocation(line: 2974, column: 22, scope: !12260)
!12328 = !DILocation(line: 2974, column: 29, scope: !12260)
!12329 = !DILocation(line: 2974, column: 40, scope: !12260)
!12330 = !DILocation(line: 2976, column: 28, scope: !12260)
!12331 = !DILocation(line: 2976, column: 40, scope: !12260)
!12332 = !DILocation(line: 2976, column: 48, scope: !12260)
!12333 = !DILocation(line: 2976, column: 11, scope: !12260)
!12334 = !DILocation(line: 2976, column: 9, scope: !12260)
!12335 = !DILocation(line: 2977, column: 6, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12260, file: !3, line: 2977, column: 6)
!12337 = !DILocation(line: 2977, column: 6, scope: !12260)
!12338 = !DILocation(line: 2978, column: 3, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12336, file: !3, line: 2977, column: 14)
!12340 = !DILocation(line: 2981, column: 10, scope: !12339)
!12341 = !DILocation(line: 2981, column: 3, scope: !12339)
!12342 = !DILocation(line: 2984, column: 2, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12344, file: !3, line: 2984, column: 2)
!12344 = distinct !DILexicalBlock(scope: !12260, file: !3, line: 2984, column: 2)
!12345 = !DILocation(line: 2984, column: 2, scope: !12344)
!12346 = !DILocation(line: 2986, column: 2, scope: !12260)
!12347 = !DILocation(line: 2987, column: 1, scope: !12260)
!12348 = distinct !DISubprogram(name: "phy_probe", scope: !3, file: !3, line: 2829, type: !6578, scopeLine: 2830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12349 = !DILocalVariable(name: "dev", arg: 1, scope: !12348, file: !3, line: 2829, type: !6545)
!12350 = !DILocation(line: 2829, column: 37, scope: !12348)
!12351 = !DILocalVariable(name: "phydev", scope: !12348, file: !3, line: 2831, type: !7020)
!12352 = !DILocation(line: 2831, column: 21, scope: !12348)
!12353 = !DILocalVariable(name: "__mptr", scope: !12354, file: !3, line: 2831, type: !591)
!12354 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2831, column: 30)
!12355 = !DILocation(line: 2831, column: 30, scope: !12354)
!12356 = !DILocalVariable(name: "__mptr", scope: !12357, file: !3, line: 2831, type: !591)
!12357 = distinct !DILexicalBlock(scope: !12354, file: !3, line: 2831, column: 30)
!12358 = !DILocation(line: 2831, column: 30, scope: !12357)
!12359 = !DILocation(line: 2831, column: 30, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12357, file: !3, line: 2831, column: 30)
!12361 = !DILocation(line: 2831, column: 30, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12354, file: !3, line: 2831, column: 30)
!12363 = !DILocalVariable(name: "drv", scope: !12348, file: !3, line: 2832, type: !6617)
!12364 = !DILocation(line: 2832, column: 24, scope: !12348)
!12365 = !DILocation(line: 2832, column: 30, scope: !12348)
!12366 = !DILocation(line: 2832, column: 38, scope: !12348)
!12367 = !DILocation(line: 2832, column: 43, scope: !12348)
!12368 = !DILocation(line: 2832, column: 47, scope: !12348)
!12369 = !DILocalVariable(name: "phydrv", scope: !12348, file: !3, line: 2833, type: !7117)
!12370 = !DILocation(line: 2833, column: 21, scope: !12348)
!12371 = !DILocalVariable(name: "__mptr", scope: !12372, file: !3, line: 2833, type: !591)
!12372 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2833, column: 30)
!12373 = !DILocation(line: 2833, column: 30, scope: !12372)
!12374 = !DILocalVariable(name: "__mptr", scope: !12375, file: !3, line: 2833, type: !591)
!12375 = distinct !DILexicalBlock(scope: !12372, file: !3, line: 2833, column: 30)
!12376 = !DILocation(line: 2833, column: 30, scope: !12375)
!12377 = !DILocation(line: 2833, column: 30, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12375, file: !3, line: 2833, column: 30)
!12379 = !DILocation(line: 2833, column: 30, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12372, file: !3, line: 2833, column: 30)
!12381 = !DILocalVariable(name: "err", scope: !12348, file: !3, line: 2834, type: !32)
!12382 = !DILocation(line: 2834, column: 6, scope: !12348)
!12383 = !DILocation(line: 2836, column: 16, scope: !12348)
!12384 = !DILocation(line: 2836, column: 2, scope: !12348)
!12385 = !DILocation(line: 2836, column: 10, scope: !12348)
!12386 = !DILocation(line: 2836, column: 14, scope: !12348)
!12387 = !DILocation(line: 2841, column: 29, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2841, column: 7)
!12389 = !DILocation(line: 2841, column: 8, scope: !12388)
!12390 = !DILocation(line: 2841, column: 37, scope: !12388)
!12391 = !DILocation(line: 2841, column: 63, scope: !12388)
!12392 = !DILocation(line: 2841, column: 40, scope: !12388)
!12393 = !DILocation(line: 2841, column: 7, scope: !12348)
!12394 = !DILocation(line: 2842, column: 3, scope: !12388)
!12395 = !DILocation(line: 2842, column: 11, scope: !12388)
!12396 = !DILocation(line: 2842, column: 15, scope: !12388)
!12397 = !DILocation(line: 2844, column: 6, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2844, column: 6)
!12399 = !DILocation(line: 2844, column: 14, scope: !12398)
!12400 = !DILocation(line: 2844, column: 20, scope: !12398)
!12401 = !DILocation(line: 2844, column: 6, scope: !12348)
!12402 = !DILocation(line: 2845, column: 3, scope: !12398)
!12403 = !DILocation(line: 2845, column: 11, scope: !12398)
!12404 = !DILocation(line: 2845, column: 23, scope: !12398)
!12405 = !DILocation(line: 2847, column: 14, scope: !12348)
!12406 = !DILocation(line: 2847, column: 22, scope: !12348)
!12407 = !DILocation(line: 2847, column: 2, scope: !12348)
!12408 = !DILocation(line: 2850, column: 19, scope: !12348)
!12409 = !DILocation(line: 2850, column: 2, scope: !12348)
!12410 = !DILocation(line: 2852, column: 6, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2852, column: 6)
!12412 = !DILocation(line: 2852, column: 14, scope: !12411)
!12413 = !DILocation(line: 2852, column: 19, scope: !12411)
!12414 = !DILocation(line: 2852, column: 6, scope: !12348)
!12415 = !DILocation(line: 2853, column: 9, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12411, file: !3, line: 2852, column: 26)
!12417 = !DILocation(line: 2853, column: 17, scope: !12416)
!12418 = !DILocation(line: 2853, column: 22, scope: !12416)
!12419 = !DILocation(line: 2853, column: 28, scope: !12416)
!12420 = !DILocation(line: 2853, column: 7, scope: !12416)
!12421 = !DILocation(line: 2854, column: 7, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 2854, column: 7)
!12423 = !DILocation(line: 2854, column: 7, scope: !12416)
!12424 = !DILocation(line: 2855, column: 4, scope: !12422)
!12425 = !DILocation(line: 2856, column: 2, scope: !12416)
!12426 = !DILocation(line: 2862, column: 6, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2862, column: 6)
!12428 = !DILocation(line: 2862, column: 14, scope: !12427)
!12429 = !DILocation(line: 2862, column: 6, scope: !12348)
!12430 = !DILocation(line: 2863, column: 17, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12427, file: !3, line: 2862, column: 24)
!12432 = !DILocation(line: 2863, column: 25, scope: !12431)
!12433 = !DILocation(line: 2863, column: 36, scope: !12431)
!12434 = !DILocation(line: 2863, column: 44, scope: !12431)
!12435 = !DILocation(line: 2863, column: 3, scope: !12431)
!12436 = !DILocation(line: 2864, column: 2, scope: !12431)
!12437 = !DILocation(line: 2864, column: 13, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12427, file: !3, line: 2864, column: 13)
!12439 = !DILocation(line: 2864, column: 21, scope: !12438)
!12440 = !DILocation(line: 2864, column: 13, scope: !12427)
!12441 = !DILocation(line: 2865, column: 9, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12438, file: !3, line: 2864, column: 35)
!12443 = !DILocation(line: 2865, column: 17, scope: !12442)
!12444 = !DILocation(line: 2865, column: 30, scope: !12442)
!12445 = !DILocation(line: 2865, column: 7, scope: !12442)
!12446 = !DILocation(line: 2866, column: 2, scope: !12442)
!12447 = !DILocation(line: 2866, column: 13, scope: !12448)
!12448 = distinct !DILexicalBlock(scope: !12438, file: !3, line: 2866, column: 13)
!12449 = !DILocation(line: 2866, column: 21, scope: !12448)
!12450 = !DILocation(line: 2866, column: 13, scope: !12438)
!12451 = !DILocation(line: 2867, column: 39, scope: !12452)
!12452 = distinct !DILexicalBlock(scope: !12448, file: !3, line: 2866, column: 29)
!12453 = !DILocation(line: 2867, column: 9, scope: !12452)
!12454 = !DILocation(line: 2867, column: 7, scope: !12452)
!12455 = !DILocation(line: 2868, column: 2, scope: !12452)
!12456 = !DILocation(line: 2869, column: 31, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12448, file: !3, line: 2868, column: 9)
!12458 = !DILocation(line: 2869, column: 9, scope: !12457)
!12459 = !DILocation(line: 2869, column: 7, scope: !12457)
!12460 = !DILocation(line: 2872, column: 6, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2872, column: 6)
!12462 = !DILocation(line: 2872, column: 6, scope: !12348)
!12463 = !DILocation(line: 2873, column: 3, scope: !12461)
!12464 = !DILocation(line: 2876, column: 11, scope: !12465)
!12465 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2875, column: 6)
!12466 = !DILocation(line: 2876, column: 19, scope: !12465)
!12467 = !DILocation(line: 2875, column: 7, scope: !12465)
!12468 = !DILocation(line: 2875, column: 6, scope: !12348)
!12469 = !DILocation(line: 2877, column: 3, scope: !12465)
!12470 = !DILocation(line: 2877, column: 11, scope: !12465)
!12471 = !DILocation(line: 2877, column: 19, scope: !12465)
!12472 = !DILocation(line: 2880, column: 10, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2879, column: 6)
!12474 = !DILocation(line: 2880, column: 18, scope: !12473)
!12475 = !DILocation(line: 2879, column: 6, scope: !12473)
!12476 = !DILocation(line: 2879, column: 6, scope: !12348)
!12477 = !DILocation(line: 2881, column: 3, scope: !12473)
!12478 = !DILocation(line: 2881, column: 11, scope: !12473)
!12479 = !DILocation(line: 2881, column: 30, scope: !12473)
!12480 = !DILocation(line: 2883, column: 10, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2882, column: 6)
!12482 = !DILocation(line: 2883, column: 18, scope: !12481)
!12483 = !DILocation(line: 2882, column: 6, scope: !12481)
!12484 = !DILocation(line: 2882, column: 6, scope: !12348)
!12485 = !DILocation(line: 2884, column: 3, scope: !12481)
!12486 = !DILocation(line: 2884, column: 11, scope: !12481)
!12487 = !DILocation(line: 2884, column: 30, scope: !12481)
!12488 = !DILocation(line: 2886, column: 23, scope: !12348)
!12489 = !DILocation(line: 2886, column: 2, scope: !12348)
!12490 = !DILocation(line: 2887, column: 26, scope: !12348)
!12491 = !DILocation(line: 2887, column: 2, scope: !12348)
!12492 = !DILocation(line: 2892, column: 24, scope: !12348)
!12493 = !DILocation(line: 2892, column: 2, scope: !12348)
!12494 = !DILocation(line: 2905, column: 45, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2905, column: 6)
!12496 = !DILocation(line: 2905, column: 53, scope: !12495)
!12497 = !DILocation(line: 2905, column: 7, scope: !12495)
!12498 = !DILocation(line: 2905, column: 64, scope: !12495)
!12499 = !DILocation(line: 2906, column: 50, scope: !12495)
!12500 = !DILocation(line: 2906, column: 58, scope: !12495)
!12501 = !DILocation(line: 2906, column: 7, scope: !12495)
!12502 = !DILocation(line: 2905, column: 6, scope: !12348)
!12503 = !DILocation(line: 2908, column: 6, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12495, file: !3, line: 2906, column: 70)
!12505 = !DILocation(line: 2908, column: 14, scope: !12504)
!12506 = !DILocation(line: 2907, column: 3, scope: !12504)
!12507 = !DILocation(line: 2910, column: 6, scope: !12504)
!12508 = !DILocation(line: 2910, column: 14, scope: !12504)
!12509 = !DILocation(line: 2909, column: 3, scope: !12504)
!12510 = !DILocation(line: 2911, column: 2, scope: !12504)
!12511 = !DILocation(line: 2914, column: 2, scope: !12348)
!12512 = !DILocation(line: 2914, column: 10, scope: !12348)
!12513 = !DILocation(line: 2914, column: 16, scope: !12348)
!12514 = !DILabel(scope: !12348, name: "out", file: !3, line: 2916)
!12515 = !DILocation(line: 2916, column: 1, scope: !12348)
!12516 = !DILocation(line: 2918, column: 6, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2918, column: 6)
!12518 = !DILocation(line: 2918, column: 6, scope: !12348)
!12519 = !DILocation(line: 2919, column: 20, scope: !12517)
!12520 = !DILocation(line: 2919, column: 3, scope: !12517)
!12521 = !DILocation(line: 2921, column: 16, scope: !12348)
!12522 = !DILocation(line: 2921, column: 24, scope: !12348)
!12523 = !DILocation(line: 2921, column: 2, scope: !12348)
!12524 = !DILocation(line: 2923, column: 9, scope: !12348)
!12525 = !DILocation(line: 2923, column: 2, scope: !12348)
!12526 = distinct !DISubprogram(name: "phy_remove", scope: !3, file: !3, line: 2926, type: !6578, scopeLine: 2927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12527 = !DILocalVariable(name: "dev", arg: 1, scope: !12526, file: !3, line: 2926, type: !6545)
!12528 = !DILocation(line: 2926, column: 38, scope: !12526)
!12529 = !DILocalVariable(name: "phydev", scope: !12526, file: !3, line: 2928, type: !7020)
!12530 = !DILocation(line: 2928, column: 21, scope: !12526)
!12531 = !DILocalVariable(name: "__mptr", scope: !12532, file: !3, line: 2928, type: !591)
!12532 = distinct !DILexicalBlock(scope: !12526, file: !3, line: 2928, column: 30)
!12533 = !DILocation(line: 2928, column: 30, scope: !12532)
!12534 = !DILocalVariable(name: "__mptr", scope: !12535, file: !3, line: 2928, type: !591)
!12535 = distinct !DILexicalBlock(scope: !12532, file: !3, line: 2928, column: 30)
!12536 = !DILocation(line: 2928, column: 30, scope: !12535)
!12537 = !DILocation(line: 2928, column: 30, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !12535, file: !3, line: 2928, column: 30)
!12539 = !DILocation(line: 2928, column: 30, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12532, file: !3, line: 2928, column: 30)
!12541 = !DILocation(line: 2930, column: 28, scope: !12526)
!12542 = !DILocation(line: 2930, column: 36, scope: !12526)
!12543 = !DILocation(line: 2930, column: 2, scope: !12526)
!12544 = !DILocation(line: 2932, column: 14, scope: !12526)
!12545 = !DILocation(line: 2932, column: 22, scope: !12526)
!12546 = !DILocation(line: 2932, column: 2, scope: !12526)
!12547 = !DILocation(line: 2933, column: 2, scope: !12526)
!12548 = !DILocation(line: 2933, column: 10, scope: !12526)
!12549 = !DILocation(line: 2933, column: 16, scope: !12526)
!12550 = !DILocation(line: 2934, column: 16, scope: !12526)
!12551 = !DILocation(line: 2934, column: 24, scope: !12526)
!12552 = !DILocation(line: 2934, column: 2, scope: !12526)
!12553 = !DILocation(line: 2936, column: 23, scope: !12526)
!12554 = !DILocation(line: 2936, column: 31, scope: !12526)
!12555 = !DILocation(line: 2936, column: 2, scope: !12526)
!12556 = !DILocation(line: 2937, column: 2, scope: !12526)
!12557 = !DILocation(line: 2937, column: 10, scope: !12526)
!12558 = !DILocation(line: 2937, column: 18, scope: !12526)
!12559 = !DILocation(line: 2939, column: 6, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12526, file: !3, line: 2939, column: 6)
!12561 = !DILocation(line: 2939, column: 14, scope: !12560)
!12562 = !DILocation(line: 2939, column: 18, scope: !12560)
!12563 = !DILocation(line: 2939, column: 21, scope: !12560)
!12564 = !DILocation(line: 2939, column: 29, scope: !12560)
!12565 = !DILocation(line: 2939, column: 34, scope: !12560)
!12566 = !DILocation(line: 2939, column: 6, scope: !12526)
!12567 = !DILocation(line: 2940, column: 3, scope: !12560)
!12568 = !DILocation(line: 2940, column: 11, scope: !12560)
!12569 = !DILocation(line: 2940, column: 16, scope: !12560)
!12570 = !DILocation(line: 2940, column: 23, scope: !12560)
!12571 = !DILocation(line: 2943, column: 19, scope: !12526)
!12572 = !DILocation(line: 2943, column: 2, scope: !12526)
!12573 = !DILocation(line: 2945, column: 2, scope: !12526)
!12574 = !DILocation(line: 2945, column: 10, scope: !12526)
!12575 = !DILocation(line: 2945, column: 14, scope: !12526)
!12576 = !DILocation(line: 2947, column: 2, scope: !12526)
!12577 = distinct !DISubprogram(name: "phy_drivers_register", scope: !3, file: !3, line: 2990, type: !12578, scopeLine: 2992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12578 = !DISubroutineType(types: !12579)
!12579 = !{!32, !7117, !32, !980}
!12580 = !DILocalVariable(name: "new_driver", arg: 1, scope: !12577, file: !3, line: 2990, type: !7117)
!12581 = !DILocation(line: 2990, column: 45, scope: !12577)
!12582 = !DILocalVariable(name: "n", arg: 2, scope: !12577, file: !3, line: 2990, type: !32)
!12583 = !DILocation(line: 2990, column: 61, scope: !12577)
!12584 = !DILocalVariable(name: "owner", arg: 3, scope: !12577, file: !3, line: 2991, type: !980)
!12585 = !DILocation(line: 2991, column: 20, scope: !12577)
!12586 = !DILocalVariable(name: "i", scope: !12577, file: !3, line: 2993, type: !32)
!12587 = !DILocation(line: 2993, column: 6, scope: !12577)
!12588 = !DILocalVariable(name: "ret", scope: !12577, file: !3, line: 2993, type: !32)
!12589 = !DILocation(line: 2993, column: 9, scope: !12577)
!12590 = !DILocation(line: 2995, column: 9, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12577, file: !3, line: 2995, column: 2)
!12592 = !DILocation(line: 2995, column: 7, scope: !12591)
!12593 = !DILocation(line: 2995, column: 14, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12591, file: !3, line: 2995, column: 2)
!12595 = !DILocation(line: 2995, column: 18, scope: !12594)
!12596 = !DILocation(line: 2995, column: 16, scope: !12594)
!12597 = !DILocation(line: 2995, column: 2, scope: !12591)
!12598 = !DILocation(line: 2996, column: 29, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12594, file: !3, line: 2995, column: 26)
!12600 = !DILocation(line: 2996, column: 42, scope: !12599)
!12601 = !DILocation(line: 2996, column: 40, scope: !12599)
!12602 = !DILocation(line: 2996, column: 45, scope: !12599)
!12603 = !DILocation(line: 2996, column: 9, scope: !12599)
!12604 = !DILocation(line: 2996, column: 7, scope: !12599)
!12605 = !DILocation(line: 2997, column: 7, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12599, file: !3, line: 2997, column: 7)
!12607 = !DILocation(line: 2997, column: 7, scope: !12599)
!12608 = !DILocation(line: 2998, column: 4, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12606, file: !3, line: 2997, column: 12)
!12610 = !DILocation(line: 2998, column: 12, scope: !12609)
!12611 = !DILocation(line: 2998, column: 15, scope: !12609)
!12612 = !DILocation(line: 2999, column: 27, scope: !12609)
!12613 = !DILocation(line: 2999, column: 40, scope: !12609)
!12614 = !DILocation(line: 2999, column: 38, scope: !12609)
!12615 = !DILocation(line: 2999, column: 5, scope: !12609)
!12616 = distinct !{!12616, !12608, !12617}
!12617 = !DILocation(line: 2999, column: 41, scope: !12609)
!12618 = !DILocation(line: 3000, column: 4, scope: !12609)
!12619 = !DILocation(line: 3002, column: 2, scope: !12599)
!12620 = !DILocation(line: 2995, column: 22, scope: !12594)
!12621 = !DILocation(line: 2995, column: 2, scope: !12594)
!12622 = distinct !{!12622, !12597, !12623}
!12623 = !DILocation(line: 3002, column: 2, scope: !12591)
!12624 = !DILocation(line: 3003, column: 9, scope: !12577)
!12625 = !DILocation(line: 3003, column: 2, scope: !12577)
!12626 = distinct !DISubprogram(name: "phy_driver_unregister", scope: !3, file: !3, line: 3007, type: !12627, scopeLine: 3008, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12627 = !DISubroutineType(types: !12628)
!12628 = !{null, !7117}
!12629 = !DILocalVariable(name: "drv", arg: 1, scope: !12626, file: !3, line: 3007, type: !7117)
!12630 = !DILocation(line: 3007, column: 47, scope: !12626)
!12631 = !DILocation(line: 3009, column: 21, scope: !12626)
!12632 = !DILocation(line: 3009, column: 26, scope: !12626)
!12633 = !DILocation(line: 3009, column: 34, scope: !12626)
!12634 = !DILocation(line: 3009, column: 2, scope: !12626)
!12635 = !DILocation(line: 3010, column: 1, scope: !12626)
!12636 = distinct !DISubprogram(name: "phy_drivers_unregister", scope: !3, file: !3, line: 3013, type: !12637, scopeLine: 3014, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12637 = !DISubroutineType(types: !12638)
!12638 = !{null, !7117, !32}
!12639 = !DILocalVariable(name: "drv", arg: 1, scope: !12636, file: !3, line: 3013, type: !7117)
!12640 = !DILocation(line: 3013, column: 48, scope: !12636)
!12641 = !DILocalVariable(name: "n", arg: 2, scope: !12636, file: !3, line: 3013, type: !32)
!12642 = !DILocation(line: 3013, column: 57, scope: !12636)
!12643 = !DILocalVariable(name: "i", scope: !12636, file: !3, line: 3015, type: !32)
!12644 = !DILocation(line: 3015, column: 6, scope: !12636)
!12645 = !DILocation(line: 3017, column: 9, scope: !12646)
!12646 = distinct !DILexicalBlock(scope: !12636, file: !3, line: 3017, column: 2)
!12647 = !DILocation(line: 3017, column: 7, scope: !12646)
!12648 = !DILocation(line: 3017, column: 14, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12646, file: !3, line: 3017, column: 2)
!12650 = !DILocation(line: 3017, column: 18, scope: !12649)
!12651 = !DILocation(line: 3017, column: 16, scope: !12649)
!12652 = !DILocation(line: 3017, column: 2, scope: !12646)
!12653 = !DILocation(line: 3018, column: 25, scope: !12649)
!12654 = !DILocation(line: 3018, column: 31, scope: !12649)
!12655 = !DILocation(line: 3018, column: 29, scope: !12649)
!12656 = !DILocation(line: 3018, column: 3, scope: !12649)
!12657 = !DILocation(line: 3017, column: 22, scope: !12649)
!12658 = !DILocation(line: 3017, column: 2, scope: !12649)
!12659 = distinct !{!12659, !12652, !12660}
!12660 = !DILocation(line: 3018, column: 32, scope: !12646)
!12661 = !DILocation(line: 3019, column: 1, scope: !12636)
!12662 = distinct !DISubprogram(name: "phy_exit", scope: !3, file: !3, line: 3065, type: !3807, scopeLine: 3066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12663 = !DILocation(line: 3067, column: 2, scope: !12662)
!12664 = !DILocation(line: 3068, column: 2, scope: !12662)
!12665 = !DILocation(line: 3069, column: 2, scope: !12662)
!12666 = !DILocation(line: 3070, column: 2, scope: !12662)
!12667 = !DILocation(line: 3071, column: 1, scope: !12662)
!12668 = distinct !DISubprogram(name: "phy_init", scope: !3, file: !3, line: 3040, type: !12669, scopeLine: 3041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12669 = !DISubroutineType(types: !12670)
!12670 = !{!32}
!12671 = !DILocalVariable(name: "rc", scope: !12668, file: !3, line: 3042, type: !32)
!12672 = !DILocation(line: 3042, column: 6, scope: !12668)
!12673 = !DILocation(line: 3044, column: 7, scope: !12668)
!12674 = !DILocation(line: 3044, column: 5, scope: !12668)
!12675 = !DILocation(line: 3045, column: 6, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12668, file: !3, line: 3045, column: 6)
!12677 = !DILocation(line: 3045, column: 6, scope: !12668)
!12678 = !DILocation(line: 3046, column: 10, scope: !12676)
!12679 = !DILocation(line: 3046, column: 3, scope: !12676)
!12680 = !DILocation(line: 3048, column: 2, scope: !12668)
!12681 = !DILocation(line: 3049, column: 2, scope: !12668)
!12682 = !DILocation(line: 3051, column: 7, scope: !12668)
!12683 = !DILocation(line: 3051, column: 5, scope: !12668)
!12684 = !DILocation(line: 3052, column: 6, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12668, file: !3, line: 3052, column: 6)
!12686 = !DILocation(line: 3052, column: 6, scope: !12668)
!12687 = !DILocation(line: 3053, column: 3, scope: !12685)
!12688 = !DILocation(line: 3055, column: 7, scope: !12668)
!12689 = !DILocation(line: 3055, column: 5, scope: !12668)
!12690 = !DILocation(line: 3056, column: 6, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12668, file: !3, line: 3056, column: 6)
!12692 = !DILocation(line: 3056, column: 6, scope: !12668)
!12693 = !DILocation(line: 3057, column: 3, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12691, file: !3, line: 3056, column: 10)
!12695 = !DILabel(scope: !12694, name: "err_c45", file: !3, line: 3058)
!12696 = !DILocation(line: 3058, column: 1, scope: !12694)
!12697 = !DILocation(line: 3059, column: 3, scope: !12694)
!12698 = !DILocation(line: 3060, column: 2, scope: !12694)
!12699 = !DILocation(line: 3062, column: 9, scope: !12668)
!12700 = !DILocation(line: 3062, column: 2, scope: !12668)
!12701 = !DILocation(line: 3063, column: 1, scope: !12668)
!12702 = distinct !DISubprogram(name: "get_order", scope: !12703, file: !12703, line: 29, type: !12704, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12703 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!12704 = !DISubroutineType(types: !12705)
!12705 = !{!32, !312}
!12706 = !DILocalVariable(name: "x", arg: 1, scope: !12707, file: !12708, line: 366, type: !333)
!12707 = distinct !DISubprogram(name: "fls64", scope: !12708, file: !12708, line: 366, type: !12709, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12708 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!12709 = !DISubroutineType(types: !12710)
!12710 = !{!32, !333}
!12711 = !DILocation(line: 366, column: 40, scope: !12707, inlinedAt: !12712)
!12712 = distinct !DILocation(line: 46, column: 9, scope: !12702)
!12713 = !DILocalVariable(name: "bitpos", scope: !12707, file: !12708, line: 368, type: !32)
!12714 = !DILocation(line: 368, column: 6, scope: !12707, inlinedAt: !12712)
!12715 = !DILocalVariable(name: "size", arg: 1, scope: !12702, file: !12703, line: 29, type: !312)
!12716 = !DILocation(line: 29, column: 63, scope: !12702)
!12717 = !DILocation(line: 31, column: 27, scope: !12718)
!12718 = distinct !DILexicalBlock(scope: !12702, file: !12703, line: 31, column: 6)
!12719 = !DILocation(line: 31, column: 6, scope: !12718)
!12720 = !DILocation(line: 31, column: 6, scope: !12702)
!12721 = !DILocation(line: 32, column: 8, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12723, file: !12703, line: 32, column: 7)
!12723 = distinct !DILexicalBlock(scope: !12718, file: !12703, line: 31, column: 34)
!12724 = !DILocation(line: 32, column: 7, scope: !12723)
!12725 = !DILocation(line: 33, column: 4, scope: !12722)
!12726 = !DILocation(line: 35, column: 7, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12723, file: !12703, line: 35, column: 7)
!12728 = !DILocation(line: 35, column: 12, scope: !12727)
!12729 = !DILocation(line: 35, column: 7, scope: !12723)
!12730 = !DILocation(line: 36, column: 4, scope: !12727)
!12731 = !DILocation(line: 38, column: 10, scope: !12723)
!12732 = !DILocation(line: 38, column: 28, scope: !12723)
!12733 = !DILocation(line: 38, column: 41, scope: !12723)
!12734 = !DILocation(line: 38, column: 3, scope: !12723)
!12735 = !DILocation(line: 41, column: 6, scope: !12702)
!12736 = !DILocation(line: 42, column: 7, scope: !12702)
!12737 = !DILocation(line: 46, column: 15, scope: !12702)
!12738 = !DILocation(line: 374, column: 2, scope: !12707, inlinedAt: !12712)
!12739 = !DILocation(line: 376, column: 14, scope: !12707, inlinedAt: !12712)
!12740 = !{i32 290101}
!12741 = !DILocation(line: 377, column: 9, scope: !12707, inlinedAt: !12712)
!12742 = !DILocation(line: 377, column: 16, scope: !12707, inlinedAt: !12712)
!12743 = !DILocation(line: 46, column: 2, scope: !12702)
!12744 = !DILocation(line: 48, column: 1, scope: !12702)
!12745 = distinct !DISubprogram(name: "__ilog2_u64", scope: !12746, file: !12746, line: 30, type: !12747, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12746 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!12747 = !DISubroutineType(types: !12748)
!12748 = !{!32, !331}
!12749 = !DILocation(line: 366, column: 40, scope: !12707, inlinedAt: !12750)
!12750 = distinct !DILocation(line: 32, column: 9, scope: !12745)
!12751 = !DILocation(line: 368, column: 6, scope: !12707, inlinedAt: !12750)
!12752 = !DILocalVariable(name: "n", arg: 1, scope: !12745, file: !12746, line: 30, type: !331)
!12753 = !DILocation(line: 30, column: 21, scope: !12745)
!12754 = !DILocation(line: 32, column: 15, scope: !12745)
!12755 = !DILocation(line: 374, column: 2, scope: !12707, inlinedAt: !12750)
!12756 = !DILocation(line: 376, column: 14, scope: !12707, inlinedAt: !12750)
!12757 = !DILocation(line: 377, column: 9, scope: !12707, inlinedAt: !12750)
!12758 = !DILocation(line: 377, column: 16, scope: !12707, inlinedAt: !12750)
!12759 = !DILocation(line: 32, column: 18, scope: !12745)
!12760 = !DILocation(line: 32, column: 2, scope: !12745)
!12761 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !12762, file: !12762, line: 137, type: !12763, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12762 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!12763 = !DISubroutineType(types: !12764)
!12764 = !{!591, !2050, !3256, !1039, !1741}
!12765 = !DILocalVariable(name: "s", arg: 1, scope: !12761, file: !12762, line: 137, type: !2050)
!12766 = !DILocation(line: 137, column: 54, scope: !12761)
!12767 = !DILocalVariable(name: "object", arg: 2, scope: !12761, file: !12762, line: 137, type: !3256)
!12768 = !DILocation(line: 137, column: 69, scope: !12761)
!12769 = !DILocalVariable(name: "size", arg: 3, scope: !12761, file: !12762, line: 138, type: !1039)
!12770 = !DILocation(line: 138, column: 12, scope: !12761)
!12771 = !DILocalVariable(name: "flags", arg: 4, scope: !12761, file: !12762, line: 138, type: !1741)
!12772 = !DILocation(line: 138, column: 24, scope: !12761)
!12773 = !DILocation(line: 140, column: 17, scope: !12761)
!12774 = !DILocation(line: 140, column: 2, scope: !12761)
!12775 = distinct !DISubprogram(name: "__list_add", scope: !8016, file: !8016, line: 63, type: !12776, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12776 = !DISubroutineType(types: !12777)
!12777 = !{null, !287, !287, !287}
!12778 = !DILocalVariable(name: "new", arg: 1, scope: !12775, file: !8016, line: 63, type: !287)
!12779 = !DILocation(line: 63, column: 49, scope: !12775)
!12780 = !DILocalVariable(name: "prev", arg: 2, scope: !12775, file: !8016, line: 64, type: !287)
!12781 = !DILocation(line: 64, column: 28, scope: !12775)
!12782 = !DILocalVariable(name: "next", arg: 3, scope: !12775, file: !8016, line: 65, type: !287)
!12783 = !DILocation(line: 65, column: 28, scope: !12775)
!12784 = !DILocation(line: 67, column: 24, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12775, file: !8016, line: 67, column: 6)
!12786 = !DILocation(line: 67, column: 29, scope: !12785)
!12787 = !DILocation(line: 67, column: 35, scope: !12785)
!12788 = !DILocation(line: 67, column: 7, scope: !12785)
!12789 = !DILocation(line: 67, column: 6, scope: !12775)
!12790 = !DILocation(line: 68, column: 3, scope: !12785)
!12791 = !DILocation(line: 70, column: 15, scope: !12775)
!12792 = !DILocation(line: 70, column: 2, scope: !12775)
!12793 = !DILocation(line: 70, column: 8, scope: !12775)
!12794 = !DILocation(line: 70, column: 13, scope: !12775)
!12795 = !DILocation(line: 71, column: 14, scope: !12775)
!12796 = !DILocation(line: 71, column: 2, scope: !12775)
!12797 = !DILocation(line: 71, column: 7, scope: !12775)
!12798 = !DILocation(line: 71, column: 12, scope: !12775)
!12799 = !DILocation(line: 72, column: 14, scope: !12775)
!12800 = !DILocation(line: 72, column: 2, scope: !12775)
!12801 = !DILocation(line: 72, column: 7, scope: !12775)
!12802 = !DILocation(line: 72, column: 12, scope: !12775)
!12803 = !DILocation(line: 73, column: 2, scope: !12775)
!12804 = !DILocation(line: 73, column: 2, scope: !12805)
!12805 = distinct !DILexicalBlock(scope: !12775, file: !8016, line: 73, column: 2)
!12806 = !DILocation(line: 73, column: 2, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12805, file: !8016, line: 73, column: 2)
!12808 = !DILocation(line: 73, column: 2, scope: !12809)
!12809 = distinct !DILexicalBlock(scope: !12805, file: !8016, line: 73, column: 2)
!12810 = !DILocation(line: 74, column: 1, scope: !12775)
!12811 = distinct !DISubprogram(name: "__list_add_valid", scope: !8016, file: !8016, line: 45, type: !12812, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12812 = !DISubroutineType(types: !12813)
!12813 = !{!771, !287, !287, !287}
!12814 = !DILocalVariable(name: "new", arg: 1, scope: !12811, file: !8016, line: 45, type: !287)
!12815 = !DILocation(line: 45, column: 55, scope: !12811)
!12816 = !DILocalVariable(name: "prev", arg: 2, scope: !12811, file: !8016, line: 46, type: !287)
!12817 = !DILocation(line: 46, column: 23, scope: !12811)
!12818 = !DILocalVariable(name: "next", arg: 3, scope: !12811, file: !8016, line: 47, type: !287)
!12819 = !DILocation(line: 47, column: 23, scope: !12811)
!12820 = !DILocation(line: 49, column: 2, scope: !12811)
!12821 = distinct !DISubprogram(name: "__list_del_entry", scope: !8016, file: !8016, line: 130, type: !8114, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12822 = !DILocalVariable(name: "entry", arg: 1, scope: !12821, file: !8016, line: 130, type: !287)
!12823 = !DILocation(line: 130, column: 55, scope: !12821)
!12824 = !DILocation(line: 132, column: 30, scope: !12825)
!12825 = distinct !DILexicalBlock(scope: !12821, file: !8016, line: 132, column: 6)
!12826 = !DILocation(line: 132, column: 7, scope: !12825)
!12827 = !DILocation(line: 132, column: 6, scope: !12821)
!12828 = !DILocation(line: 133, column: 3, scope: !12825)
!12829 = !DILocation(line: 135, column: 13, scope: !12821)
!12830 = !DILocation(line: 135, column: 20, scope: !12821)
!12831 = !DILocation(line: 135, column: 26, scope: !12821)
!12832 = !DILocation(line: 135, column: 33, scope: !12821)
!12833 = !DILocation(line: 135, column: 2, scope: !12821)
!12834 = !DILocation(line: 136, column: 1, scope: !12821)
!12835 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !8016, file: !8016, line: 51, type: !12836, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12836 = !DISubroutineType(types: !12837)
!12837 = !{!771, !287}
!12838 = !DILocalVariable(name: "entry", arg: 1, scope: !12835, file: !8016, line: 51, type: !287)
!12839 = !DILocation(line: 51, column: 61, scope: !12835)
!12840 = !DILocation(line: 53, column: 2, scope: !12835)
!12841 = distinct !DISubprogram(name: "__list_del", scope: !8016, file: !8016, line: 110, type: !8017, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12842 = !DILocalVariable(name: "prev", arg: 1, scope: !12841, file: !8016, line: 110, type: !287)
!12843 = !DILocation(line: 110, column: 50, scope: !12841)
!12844 = !DILocalVariable(name: "next", arg: 2, scope: !12841, file: !8016, line: 110, type: !287)
!12845 = !DILocation(line: 110, column: 75, scope: !12841)
!12846 = !DILocation(line: 112, column: 15, scope: !12841)
!12847 = !DILocation(line: 112, column: 2, scope: !12841)
!12848 = !DILocation(line: 112, column: 8, scope: !12841)
!12849 = !DILocation(line: 112, column: 13, scope: !12841)
!12850 = !DILocation(line: 113, column: 2, scope: !12841)
!12851 = !DILocation(line: 113, column: 2, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12841, file: !8016, line: 113, column: 2)
!12853 = !DILocation(line: 113, column: 2, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12852, file: !8016, line: 113, column: 2)
!12855 = !DILocation(line: 113, column: 2, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12852, file: !8016, line: 113, column: 2)
!12857 = !DILocation(line: 114, column: 1, scope: !12841)
!12858 = distinct !DISubprogram(name: "phy_device_release", scope: !3, file: !3, line: 215, type: !6568, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12859 = !DILocalVariable(name: "dev", arg: 1, scope: !12858, file: !3, line: 215, type: !6545)
!12860 = !DILocation(line: 215, column: 47, scope: !12858)
!12861 = !DILocalVariable(name: "__mptr", scope: !12862, file: !3, line: 217, type: !591)
!12862 = distinct !DILexicalBlock(scope: !12858, file: !3, line: 217, column: 8)
!12863 = !DILocation(line: 217, column: 8, scope: !12862)
!12864 = !DILocalVariable(name: "__mptr", scope: !12865, file: !3, line: 217, type: !591)
!12865 = distinct !DILexicalBlock(scope: !12862, file: !3, line: 217, column: 8)
!12866 = !DILocation(line: 217, column: 8, scope: !12865)
!12867 = !DILocation(line: 217, column: 8, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12865, file: !3, line: 217, column: 8)
!12869 = !DILocation(line: 217, column: 8, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12862, file: !3, line: 217, column: 8)
!12871 = !DILocation(line: 217, column: 8, scope: !12858)
!12872 = !DILocation(line: 217, column: 2, scope: !12858)
!12873 = !DILocation(line: 218, column: 1, scope: !12858)
!12874 = distinct !DISubprogram(name: "phy_id_show", scope: !3, file: !3, line: 512, type: !7643, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12875 = !DILocalVariable(name: "dev", arg: 1, scope: !12874, file: !3, line: 512, type: !6545)
!12876 = !DILocation(line: 512, column: 28, scope: !12874)
!12877 = !DILocalVariable(name: "attr", arg: 2, scope: !12874, file: !3, line: 512, type: !7645)
!12878 = !DILocation(line: 512, column: 58, scope: !12874)
!12879 = !DILocalVariable(name: "buf", arg: 3, scope: !12874, file: !3, line: 512, type: !1038)
!12880 = !DILocation(line: 512, column: 70, scope: !12874)
!12881 = !DILocalVariable(name: "phydev", scope: !12874, file: !3, line: 514, type: !7020)
!12882 = !DILocation(line: 514, column: 21, scope: !12874)
!12883 = !DILocalVariable(name: "__mptr", scope: !12884, file: !3, line: 514, type: !591)
!12884 = distinct !DILexicalBlock(scope: !12874, file: !3, line: 514, column: 30)
!12885 = !DILocation(line: 514, column: 30, scope: !12884)
!12886 = !DILocalVariable(name: "__mptr", scope: !12887, file: !3, line: 514, type: !591)
!12887 = distinct !DILexicalBlock(scope: !12884, file: !3, line: 514, column: 30)
!12888 = !DILocation(line: 514, column: 30, scope: !12887)
!12889 = !DILocation(line: 514, column: 30, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12887, file: !3, line: 514, column: 30)
!12891 = !DILocation(line: 514, column: 30, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12884, file: !3, line: 514, column: 30)
!12893 = !DILocation(line: 516, column: 17, scope: !12874)
!12894 = !DILocation(line: 516, column: 50, scope: !12874)
!12895 = !DILocation(line: 516, column: 58, scope: !12874)
!12896 = !DILocation(line: 516, column: 35, scope: !12874)
!12897 = !DILocation(line: 516, column: 9, scope: !12874)
!12898 = !DILocation(line: 516, column: 2, scope: !12874)
!12899 = distinct !DISubprogram(name: "phy_interface_show", scope: !3, file: !3, line: 521, type: !7643, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12900 = !DILocalVariable(name: "dev", arg: 1, scope: !12899, file: !3, line: 521, type: !6545)
!12901 = !DILocation(line: 521, column: 35, scope: !12899)
!12902 = !DILocalVariable(name: "attr", arg: 2, scope: !12899, file: !3, line: 521, type: !7645)
!12903 = !DILocation(line: 521, column: 65, scope: !12899)
!12904 = !DILocalVariable(name: "buf", arg: 3, scope: !12899, file: !3, line: 521, type: !1038)
!12905 = !DILocation(line: 521, column: 77, scope: !12899)
!12906 = !DILocalVariable(name: "phydev", scope: !12899, file: !3, line: 523, type: !7020)
!12907 = !DILocation(line: 523, column: 21, scope: !12899)
!12908 = !DILocalVariable(name: "__mptr", scope: !12909, file: !3, line: 523, type: !591)
!12909 = distinct !DILexicalBlock(scope: !12899, file: !3, line: 523, column: 30)
!12910 = !DILocation(line: 523, column: 30, scope: !12909)
!12911 = !DILocalVariable(name: "__mptr", scope: !12912, file: !3, line: 523, type: !591)
!12912 = distinct !DILexicalBlock(scope: !12909, file: !3, line: 523, column: 30)
!12913 = !DILocation(line: 523, column: 30, scope: !12912)
!12914 = !DILocation(line: 523, column: 30, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12912, file: !3, line: 523, column: 30)
!12916 = !DILocation(line: 523, column: 30, scope: !12917)
!12917 = distinct !DILexicalBlock(scope: !12909, file: !3, line: 523, column: 30)
!12918 = !DILocalVariable(name: "mode", scope: !12899, file: !3, line: 524, type: !292)
!12919 = !DILocation(line: 524, column: 14, scope: !12899)
!12920 = !DILocation(line: 526, column: 22, scope: !12921)
!12921 = distinct !DILexicalBlock(scope: !12899, file: !3, line: 526, column: 6)
!12922 = !DILocation(line: 526, column: 6, scope: !12921)
!12923 = !DILocation(line: 526, column: 6, scope: !12899)
!12924 = !DILocation(line: 527, column: 8, scope: !12921)
!12925 = !DILocation(line: 527, column: 3, scope: !12921)
!12926 = !DILocation(line: 529, column: 20, scope: !12921)
!12927 = !DILocation(line: 529, column: 28, scope: !12921)
!12928 = !DILocation(line: 529, column: 10, scope: !12921)
!12929 = !DILocation(line: 529, column: 8, scope: !12921)
!12930 = !DILocation(line: 531, column: 17, scope: !12899)
!12931 = !DILocation(line: 531, column: 30, scope: !12899)
!12932 = !DILocation(line: 531, column: 9, scope: !12899)
!12933 = !DILocation(line: 531, column: 2, scope: !12899)
!12934 = distinct !DISubprogram(name: "phy_is_internal", scope: !7022, file: !7022, line: 1287, type: !9234, scopeLine: 1288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12935 = !DILocalVariable(name: "phydev", arg: 1, scope: !12934, file: !7022, line: 1287, type: !7020)
!12936 = !DILocation(line: 1287, column: 55, scope: !12934)
!12937 = !DILocation(line: 1289, column: 9, scope: !12934)
!12938 = !DILocation(line: 1289, column: 17, scope: !12934)
!12939 = !DILocation(line: 1289, column: 2, scope: !12934)
!12940 = distinct !DISubprogram(name: "phy_modes", scope: !7022, file: !7022, line: 165, type: !12941, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12941 = !DISubroutineType(types: !12942)
!12942 = !{!292, !7269}
!12943 = !DILocalVariable(name: "interface", arg: 1, scope: !12940, file: !7022, line: 165, type: !7269)
!12944 = !DILocation(line: 165, column: 53, scope: !12940)
!12945 = !DILocation(line: 167, column: 10, scope: !12940)
!12946 = !DILocation(line: 167, column: 2, scope: !12940)
!12947 = !DILocation(line: 169, column: 3, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12940, file: !7022, line: 167, column: 21)
!12949 = !DILocation(line: 171, column: 3, scope: !12948)
!12950 = !DILocation(line: 173, column: 3, scope: !12948)
!12951 = !DILocation(line: 175, column: 3, scope: !12948)
!12952 = !DILocation(line: 177, column: 3, scope: !12948)
!12953 = !DILocation(line: 179, column: 3, scope: !12948)
!12954 = !DILocation(line: 181, column: 3, scope: !12948)
!12955 = !DILocation(line: 183, column: 3, scope: !12948)
!12956 = !DILocation(line: 185, column: 3, scope: !12948)
!12957 = !DILocation(line: 187, column: 3, scope: !12948)
!12958 = !DILocation(line: 189, column: 3, scope: !12948)
!12959 = !DILocation(line: 191, column: 3, scope: !12948)
!12960 = !DILocation(line: 193, column: 3, scope: !12948)
!12961 = !DILocation(line: 195, column: 3, scope: !12948)
!12962 = !DILocation(line: 197, column: 3, scope: !12948)
!12963 = !DILocation(line: 199, column: 3, scope: !12948)
!12964 = !DILocation(line: 201, column: 3, scope: !12948)
!12965 = !DILocation(line: 203, column: 3, scope: !12948)
!12966 = !DILocation(line: 205, column: 3, scope: !12948)
!12967 = !DILocation(line: 207, column: 3, scope: !12948)
!12968 = !DILocation(line: 209, column: 3, scope: !12948)
!12969 = !DILocation(line: 211, column: 3, scope: !12948)
!12970 = !DILocation(line: 213, column: 3, scope: !12948)
!12971 = !DILocation(line: 215, column: 3, scope: !12948)
!12972 = !DILocation(line: 217, column: 3, scope: !12948)
!12973 = !DILocation(line: 219, column: 3, scope: !12948)
!12974 = !DILocation(line: 221, column: 3, scope: !12948)
!12975 = !DILocation(line: 223, column: 1, scope: !12940)
!12976 = distinct !DISubprogram(name: "phy_has_fixups_show", scope: !3, file: !3, line: 536, type: !7643, scopeLine: 538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!12977 = !DILocalVariable(name: "dev", arg: 1, scope: !12976, file: !3, line: 536, type: !6545)
!12978 = !DILocation(line: 536, column: 36, scope: !12976)
!12979 = !DILocalVariable(name: "attr", arg: 2, scope: !12976, file: !3, line: 536, type: !7645)
!12980 = !DILocation(line: 536, column: 66, scope: !12976)
!12981 = !DILocalVariable(name: "buf", arg: 3, scope: !12976, file: !3, line: 537, type: !1038)
!12982 = !DILocation(line: 537, column: 13, scope: !12976)
!12983 = !DILocalVariable(name: "phydev", scope: !12976, file: !3, line: 539, type: !7020)
!12984 = !DILocation(line: 539, column: 21, scope: !12976)
!12985 = !DILocalVariable(name: "__mptr", scope: !12986, file: !3, line: 539, type: !591)
!12986 = distinct !DILexicalBlock(scope: !12976, file: !3, line: 539, column: 30)
!12987 = !DILocation(line: 539, column: 30, scope: !12986)
!12988 = !DILocalVariable(name: "__mptr", scope: !12989, file: !3, line: 539, type: !591)
!12989 = distinct !DILexicalBlock(scope: !12986, file: !3, line: 539, column: 30)
!12990 = !DILocation(line: 539, column: 30, scope: !12989)
!12991 = !DILocation(line: 539, column: 30, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12989, file: !3, line: 539, column: 30)
!12993 = !DILocation(line: 539, column: 30, scope: !12994)
!12994 = distinct !DILexicalBlock(scope: !12986, file: !3, line: 539, column: 30)
!12995 = !DILocation(line: 541, column: 17, scope: !12976)
!12996 = !DILocation(line: 541, column: 30, scope: !12976)
!12997 = !DILocation(line: 541, column: 38, scope: !12976)
!12998 = !DILocation(line: 541, column: 9, scope: !12976)
!12999 = !DILocation(line: 541, column: 2, scope: !12976)
!13000 = distinct !DISubprogram(name: "mdio_bus_phy_suspend", scope: !3, file: !3, line: 273, type: !6578, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13001 = !DILocalVariable(name: "dev", arg: 1, scope: !13000, file: !3, line: 273, type: !6545)
!13002 = !DILocation(line: 273, column: 48, scope: !13000)
!13003 = !DILocalVariable(name: "phydev", scope: !13000, file: !3, line: 275, type: !7020)
!13004 = !DILocation(line: 275, column: 21, scope: !13000)
!13005 = !DILocalVariable(name: "__mptr", scope: !13006, file: !3, line: 275, type: !591)
!13006 = distinct !DILexicalBlock(scope: !13000, file: !3, line: 275, column: 30)
!13007 = !DILocation(line: 275, column: 30, scope: !13006)
!13008 = !DILocalVariable(name: "__mptr", scope: !13009, file: !3, line: 275, type: !591)
!13009 = distinct !DILexicalBlock(scope: !13006, file: !3, line: 275, column: 30)
!13010 = !DILocation(line: 275, column: 30, scope: !13009)
!13011 = !DILocation(line: 275, column: 30, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !13009, file: !3, line: 275, column: 30)
!13013 = !DILocation(line: 275, column: 30, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !13006, file: !3, line: 275, column: 30)
!13015 = !DILocation(line: 282, column: 6, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !13000, file: !3, line: 282, column: 6)
!13017 = !DILocation(line: 282, column: 14, scope: !13016)
!13018 = !DILocation(line: 282, column: 27, scope: !13016)
!13019 = !DILocation(line: 282, column: 30, scope: !13016)
!13020 = !DILocation(line: 282, column: 38, scope: !13016)
!13021 = !DILocation(line: 282, column: 6, scope: !13000)
!13022 = !DILocation(line: 283, column: 20, scope: !13016)
!13023 = !DILocation(line: 283, column: 3, scope: !13016)
!13024 = !DILocation(line: 285, column: 32, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13000, file: !3, line: 285, column: 6)
!13026 = !DILocation(line: 285, column: 7, scope: !13025)
!13027 = !DILocation(line: 285, column: 6, scope: !13000)
!13028 = !DILocation(line: 286, column: 3, scope: !13025)
!13029 = !DILocation(line: 288, column: 2, scope: !13000)
!13030 = !DILocation(line: 288, column: 10, scope: !13000)
!13031 = !DILocation(line: 288, column: 32, scope: !13000)
!13032 = !DILocation(line: 290, column: 21, scope: !13000)
!13033 = !DILocation(line: 290, column: 9, scope: !13000)
!13034 = !DILocation(line: 290, column: 2, scope: !13000)
!13035 = !DILocation(line: 291, column: 1, scope: !13000)
!13036 = distinct !DISubprogram(name: "mdio_bus_phy_resume", scope: !3, file: !3, line: 293, type: !6578, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13037 = !DILocalVariable(name: "dev", arg: 1, scope: !13036, file: !3, line: 293, type: !6545)
!13038 = !DILocation(line: 293, column: 47, scope: !13036)
!13039 = !DILocalVariable(name: "phydev", scope: !13036, file: !3, line: 295, type: !7020)
!13040 = !DILocation(line: 295, column: 21, scope: !13036)
!13041 = !DILocalVariable(name: "__mptr", scope: !13042, file: !3, line: 295, type: !591)
!13042 = distinct !DILexicalBlock(scope: !13036, file: !3, line: 295, column: 30)
!13043 = !DILocation(line: 295, column: 30, scope: !13042)
!13044 = !DILocalVariable(name: "__mptr", scope: !13045, file: !3, line: 295, type: !591)
!13045 = distinct !DILexicalBlock(scope: !13042, file: !3, line: 295, column: 30)
!13046 = !DILocation(line: 295, column: 30, scope: !13045)
!13047 = !DILocation(line: 295, column: 30, scope: !13048)
!13048 = distinct !DILexicalBlock(scope: !13045, file: !3, line: 295, column: 30)
!13049 = !DILocation(line: 295, column: 30, scope: !13050)
!13050 = distinct !DILexicalBlock(scope: !13042, file: !3, line: 295, column: 30)
!13051 = !DILocalVariable(name: "ret", scope: !13036, file: !3, line: 296, type: !32)
!13052 = !DILocation(line: 296, column: 6, scope: !13036)
!13053 = !DILocation(line: 298, column: 7, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13036, file: !3, line: 298, column: 6)
!13055 = !DILocation(line: 298, column: 15, scope: !13054)
!13056 = !DILocation(line: 298, column: 6, scope: !13036)
!13057 = !DILocation(line: 299, column: 3, scope: !13054)
!13058 = !DILocation(line: 301, column: 2, scope: !13036)
!13059 = !DILocation(line: 301, column: 10, scope: !13036)
!13060 = !DILocation(line: 301, column: 32, scope: !13036)
!13061 = !DILocation(line: 303, column: 19, scope: !13036)
!13062 = !DILocation(line: 303, column: 8, scope: !13036)
!13063 = !DILocation(line: 303, column: 6, scope: !13036)
!13064 = !DILocation(line: 304, column: 6, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13036, file: !3, line: 304, column: 6)
!13066 = !DILocation(line: 304, column: 10, scope: !13065)
!13067 = !DILocation(line: 304, column: 6, scope: !13036)
!13068 = !DILocation(line: 305, column: 10, scope: !13065)
!13069 = !DILocation(line: 305, column: 3, scope: !13065)
!13070 = !DILocation(line: 304, column: 12, scope: !13065)
!13071 = !DILabel(scope: !13036, name: "no_resume", file: !3, line: 307)
!13072 = !DILocation(line: 307, column: 1, scope: !13036)
!13073 = !DILocation(line: 308, column: 6, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !13036, file: !3, line: 308, column: 6)
!13075 = !DILocation(line: 308, column: 14, scope: !13074)
!13076 = !DILocation(line: 308, column: 27, scope: !13074)
!13077 = !DILocation(line: 308, column: 30, scope: !13074)
!13078 = !DILocation(line: 308, column: 38, scope: !13074)
!13079 = !DILocation(line: 308, column: 6, scope: !13036)
!13080 = !DILocation(line: 309, column: 21, scope: !13074)
!13081 = !DILocation(line: 309, column: 3, scope: !13074)
!13082 = !DILocation(line: 311, column: 2, scope: !13036)
!13083 = !DILocation(line: 312, column: 1, scope: !13036)
!13084 = distinct !DISubprogram(name: "mdio_bus_phy_restore", scope: !3, file: !3, line: 314, type: !6578, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13085 = !DILocalVariable(name: "dev", arg: 1, scope: !13084, file: !3, line: 314, type: !6545)
!13086 = !DILocation(line: 314, column: 48, scope: !13084)
!13087 = !DILocalVariable(name: "phydev", scope: !13084, file: !3, line: 316, type: !7020)
!13088 = !DILocation(line: 316, column: 21, scope: !13084)
!13089 = !DILocalVariable(name: "__mptr", scope: !13090, file: !3, line: 316, type: !591)
!13090 = distinct !DILexicalBlock(scope: !13084, file: !3, line: 316, column: 30)
!13091 = !DILocation(line: 316, column: 30, scope: !13090)
!13092 = !DILocalVariable(name: "__mptr", scope: !13093, file: !3, line: 316, type: !591)
!13093 = distinct !DILexicalBlock(scope: !13090, file: !3, line: 316, column: 30)
!13094 = !DILocation(line: 316, column: 30, scope: !13093)
!13095 = !DILocation(line: 316, column: 30, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13093, file: !3, line: 316, column: 30)
!13097 = !DILocation(line: 316, column: 30, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !13090, file: !3, line: 316, column: 30)
!13099 = !DILocalVariable(name: "netdev", scope: !13084, file: !3, line: 317, type: !290)
!13100 = !DILocation(line: 317, column: 21, scope: !13084)
!13101 = !DILocation(line: 317, column: 30, scope: !13084)
!13102 = !DILocation(line: 317, column: 38, scope: !13084)
!13103 = !DILocalVariable(name: "ret", scope: !13084, file: !3, line: 318, type: !32)
!13104 = !DILocation(line: 318, column: 6, scope: !13084)
!13105 = !DILocation(line: 320, column: 7, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13084, file: !3, line: 320, column: 6)
!13107 = !DILocation(line: 320, column: 6, scope: !13084)
!13108 = !DILocation(line: 321, column: 3, scope: !13106)
!13109 = !DILocation(line: 323, column: 20, scope: !13084)
!13110 = !DILocation(line: 323, column: 8, scope: !13084)
!13111 = !DILocation(line: 323, column: 6, scope: !13084)
!13112 = !DILocation(line: 324, column: 6, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13084, file: !3, line: 324, column: 6)
!13114 = !DILocation(line: 324, column: 10, scope: !13113)
!13115 = !DILocation(line: 324, column: 6, scope: !13084)
!13116 = !DILocation(line: 325, column: 10, scope: !13113)
!13117 = !DILocation(line: 325, column: 3, scope: !13113)
!13118 = !DILocation(line: 327, column: 6, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13084, file: !3, line: 327, column: 6)
!13120 = !DILocation(line: 327, column: 14, scope: !13119)
!13121 = !DILocation(line: 327, column: 27, scope: !13119)
!13122 = !DILocation(line: 327, column: 30, scope: !13119)
!13123 = !DILocation(line: 327, column: 38, scope: !13119)
!13124 = !DILocation(line: 327, column: 6, scope: !13084)
!13125 = !DILocation(line: 328, column: 21, scope: !13119)
!13126 = !DILocation(line: 328, column: 3, scope: !13119)
!13127 = !DILocation(line: 330, column: 2, scope: !13084)
!13128 = !DILocation(line: 331, column: 1, scope: !13084)
!13129 = distinct !DISubprogram(name: "mdio_bus_phy_may_suspend", scope: !3, file: !3, line: 234, type: !9234, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13130 = !DILocalVariable(name: "phydev", arg: 1, scope: !13129, file: !3, line: 234, type: !7020)
!13131 = !DILocation(line: 234, column: 57, scope: !13129)
!13132 = !DILocalVariable(name: "drv", scope: !13129, file: !3, line: 236, type: !6617)
!13133 = !DILocation(line: 236, column: 24, scope: !13129)
!13134 = !DILocation(line: 236, column: 30, scope: !13129)
!13135 = !DILocation(line: 236, column: 38, scope: !13129)
!13136 = !DILocation(line: 236, column: 43, scope: !13129)
!13137 = !DILocation(line: 236, column: 47, scope: !13129)
!13138 = !DILocalVariable(name: "phydrv", scope: !13129, file: !3, line: 237, type: !7117)
!13139 = !DILocation(line: 237, column: 21, scope: !13129)
!13140 = !DILocalVariable(name: "__mptr", scope: !13141, file: !3, line: 237, type: !591)
!13141 = distinct !DILexicalBlock(scope: !13129, file: !3, line: 237, column: 30)
!13142 = !DILocation(line: 237, column: 30, scope: !13141)
!13143 = !DILocalVariable(name: "__mptr", scope: !13144, file: !3, line: 237, type: !591)
!13144 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 237, column: 30)
!13145 = !DILocation(line: 237, column: 30, scope: !13144)
!13146 = !DILocation(line: 237, column: 30, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13144, file: !3, line: 237, column: 30)
!13148 = !DILocation(line: 237, column: 30, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 237, column: 30)
!13150 = !DILocalVariable(name: "netdev", scope: !13129, file: !3, line: 238, type: !290)
!13151 = !DILocation(line: 238, column: 21, scope: !13129)
!13152 = !DILocation(line: 238, column: 30, scope: !13129)
!13153 = !DILocation(line: 238, column: 38, scope: !13129)
!13154 = !DILocation(line: 240, column: 7, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13129, file: !3, line: 240, column: 6)
!13156 = !DILocation(line: 240, column: 11, scope: !13155)
!13157 = !DILocation(line: 240, column: 15, scope: !13155)
!13158 = !DILocation(line: 240, column: 23, scope: !13155)
!13159 = !DILocation(line: 240, column: 6, scope: !13129)
!13160 = !DILocation(line: 241, column: 3, scope: !13155)
!13161 = !DILocation(line: 248, column: 7, scope: !13162)
!13162 = distinct !DILexicalBlock(scope: !13129, file: !3, line: 248, column: 6)
!13163 = !DILocation(line: 248, column: 6, scope: !13129)
!13164 = !DILocation(line: 249, column: 3, scope: !13162)
!13165 = !DILocation(line: 251, column: 6, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13129, file: !3, line: 251, column: 6)
!13167 = !DILocation(line: 251, column: 14, scope: !13166)
!13168 = !DILocation(line: 251, column: 6, scope: !13129)
!13169 = !DILocation(line: 252, column: 3, scope: !13166)
!13170 = !DILocation(line: 259, column: 6, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13129, file: !3, line: 259, column: 6)
!13172 = !DILocation(line: 259, column: 14, scope: !13171)
!13173 = !DILocation(line: 259, column: 18, scope: !13171)
!13174 = !DILocation(line: 259, column: 25, scope: !13171)
!13175 = !DILocation(line: 259, column: 46, scope: !13171)
!13176 = !DILocation(line: 259, column: 54, scope: !13171)
!13177 = !DILocation(line: 259, column: 58, scope: !13171)
!13178 = !DILocation(line: 259, column: 28, scope: !13171)
!13179 = !DILocation(line: 259, column: 6, scope: !13129)
!13180 = !DILocation(line: 260, column: 3, scope: !13171)
!13181 = !DILocation(line: 266, column: 25, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13129, file: !3, line: 266, column: 6)
!13183 = !DILocation(line: 266, column: 33, scope: !13182)
!13184 = !DILocation(line: 266, column: 6, scope: !13182)
!13185 = !DILocation(line: 266, column: 6, scope: !13129)
!13186 = !DILocation(line: 267, column: 3, scope: !13182)
!13187 = !DILocation(line: 266, column: 36, scope: !13182)
!13188 = !DILabel(scope: !13129, name: "out", file: !3, line: 269)
!13189 = !DILocation(line: 269, column: 1, scope: !13129)
!13190 = !DILocation(line: 270, column: 10, scope: !13129)
!13191 = !DILocation(line: 270, column: 18, scope: !13129)
!13192 = !DILocation(line: 270, column: 9, scope: !13129)
!13193 = !DILocation(line: 270, column: 2, scope: !13129)
!13194 = !DILocation(line: 271, column: 1, scope: !13129)
!13195 = distinct !DISubprogram(name: "device_may_wakeup", scope: !6734, file: !6734, line: 82, type: !13196, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13196 = !DISubroutineType(types: !13197)
!13197 = !{!771, !6545}
!13198 = !DILocalVariable(name: "dev", arg: 1, scope: !13195, file: !6734, line: 82, type: !6545)
!13199 = !DILocation(line: 82, column: 53, scope: !13195)
!13200 = !DILocation(line: 84, column: 9, scope: !13195)
!13201 = !DILocation(line: 84, column: 14, scope: !13195)
!13202 = !DILocation(line: 84, column: 20, scope: !13195)
!13203 = !DILocation(line: 84, column: 31, scope: !13195)
!13204 = !DILocation(line: 84, column: 36, scope: !13195)
!13205 = !DILocation(line: 84, column: 41, scope: !13195)
!13206 = !DILocation(line: 84, column: 47, scope: !13195)
!13207 = !DILocation(line: 84, column: 35, scope: !13195)
!13208 = !DILocation(line: 84, column: 34, scope: !13195)
!13209 = !DILocation(line: 0, scope: !13195)
!13210 = !DILocation(line: 84, column: 2, scope: !13195)
!13211 = distinct !DISubprogram(name: "request_module", scope: !13212, file: !13212, line: 30, type: !13213, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13212 = !DIFile(filename: "./include/linux/kmod.h", directory: "/home/lizy2001/genbc/linux")
!13213 = !DISubroutineType(types: !13214)
!13214 = !{!32, !292, null}
!13215 = !DILocalVariable(name: "name", arg: 1, scope: !13211, file: !13212, line: 30, type: !292)
!13216 = !DILocation(line: 30, column: 46, scope: !13211)
!13217 = !DILocation(line: 30, column: 59, scope: !13211)
!13218 = distinct !DISubprogram(name: "phy_c45_probe_present", scope: !3, file: !3, line: 674, type: !7042, scopeLine: 675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13219 = !DILocalVariable(name: "bus", arg: 1, scope: !13218, file: !3, line: 674, type: !7030)
!13220 = !DILocation(line: 674, column: 50, scope: !13218)
!13221 = !DILocalVariable(name: "prtad", arg: 2, scope: !13218, file: !3, line: 674, type: !32)
!13222 = !DILocation(line: 674, column: 59, scope: !13218)
!13223 = !DILocalVariable(name: "devad", arg: 3, scope: !13218, file: !3, line: 674, type: !32)
!13224 = !DILocation(line: 674, column: 70, scope: !13218)
!13225 = !DILocalVariable(name: "stat2", scope: !13218, file: !3, line: 676, type: !32)
!13226 = !DILocation(line: 676, column: 6, scope: !13218)
!13227 = !DILocation(line: 678, column: 27, scope: !13218)
!13228 = !DILocation(line: 678, column: 32, scope: !13218)
!13229 = !DILocation(line: 678, column: 39, scope: !13218)
!13230 = !DILocation(line: 678, column: 10, scope: !13218)
!13231 = !DILocation(line: 678, column: 8, scope: !13218)
!13232 = !DILocation(line: 679, column: 6, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13218, file: !3, line: 679, column: 6)
!13234 = !DILocation(line: 679, column: 12, scope: !13233)
!13235 = !DILocation(line: 679, column: 6, scope: !13218)
!13236 = !DILocation(line: 680, column: 10, scope: !13233)
!13237 = !DILocation(line: 680, column: 3, scope: !13233)
!13238 = !DILocation(line: 682, column: 10, scope: !13218)
!13239 = !DILocation(line: 682, column: 16, scope: !13218)
!13240 = !DILocation(line: 682, column: 38, scope: !13218)
!13241 = !DILocation(line: 682, column: 2, scope: !13218)
!13242 = !DILocation(line: 683, column: 1, scope: !13218)
!13243 = distinct !DISubprogram(name: "get_phy_c45_devs_in_pkg", scope: !3, file: !3, line: 696, type: !13244, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13244 = !DISubroutineType(types: !13245)
!13245 = !{!32, !7030, !32, !32, !2515}
!13246 = !DILocalVariable(name: "bus", arg: 1, scope: !13243, file: !3, line: 696, type: !7030)
!13247 = !DILocation(line: 696, column: 52, scope: !13243)
!13248 = !DILocalVariable(name: "addr", arg: 2, scope: !13243, file: !3, line: 696, type: !32)
!13249 = !DILocation(line: 696, column: 61, scope: !13243)
!13250 = !DILocalVariable(name: "dev_addr", arg: 3, scope: !13243, file: !3, line: 696, type: !32)
!13251 = !DILocation(line: 696, column: 71, scope: !13243)
!13252 = !DILocalVariable(name: "devices_in_package", arg: 4, scope: !13243, file: !3, line: 697, type: !2515)
!13253 = !DILocation(line: 697, column: 13, scope: !13243)
!13254 = !DILocalVariable(name: "phy_reg", scope: !13243, file: !3, line: 699, type: !32)
!13255 = !DILocation(line: 699, column: 6, scope: !13243)
!13256 = !DILocation(line: 701, column: 29, scope: !13243)
!13257 = !DILocation(line: 701, column: 34, scope: !13243)
!13258 = !DILocation(line: 701, column: 40, scope: !13243)
!13259 = !DILocation(line: 701, column: 12, scope: !13243)
!13260 = !DILocation(line: 701, column: 10, scope: !13243)
!13261 = !DILocation(line: 702, column: 6, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13243, file: !3, line: 702, column: 6)
!13263 = !DILocation(line: 702, column: 14, scope: !13262)
!13264 = !DILocation(line: 702, column: 6, scope: !13243)
!13265 = !DILocation(line: 703, column: 3, scope: !13262)
!13266 = !DILocation(line: 704, column: 24, scope: !13243)
!13267 = !DILocation(line: 704, column: 32, scope: !13243)
!13268 = !DILocation(line: 704, column: 3, scope: !13243)
!13269 = !DILocation(line: 704, column: 22, scope: !13243)
!13270 = !DILocation(line: 706, column: 29, scope: !13243)
!13271 = !DILocation(line: 706, column: 34, scope: !13243)
!13272 = !DILocation(line: 706, column: 40, scope: !13243)
!13273 = !DILocation(line: 706, column: 12, scope: !13243)
!13274 = !DILocation(line: 706, column: 10, scope: !13243)
!13275 = !DILocation(line: 707, column: 6, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13243, file: !3, line: 707, column: 6)
!13277 = !DILocation(line: 707, column: 14, scope: !13276)
!13278 = !DILocation(line: 707, column: 6, scope: !13243)
!13279 = !DILocation(line: 708, column: 3, scope: !13276)
!13280 = !DILocation(line: 709, column: 25, scope: !13243)
!13281 = !DILocation(line: 709, column: 3, scope: !13243)
!13282 = !DILocation(line: 709, column: 22, scope: !13243)
!13283 = !DILocation(line: 711, column: 2, scope: !13243)
!13284 = !DILocation(line: 712, column: 1, scope: !13243)
!13285 = distinct !DISubprogram(name: "mdiobus_c45_read", scope: !7026, file: !7026, line: 355, type: !7046, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13286 = !DILocalVariable(name: "bus", arg: 1, scope: !13285, file: !7026, line: 355, type: !7030)
!13287 = !DILocation(line: 355, column: 52, scope: !13285)
!13288 = !DILocalVariable(name: "prtad", arg: 2, scope: !13285, file: !7026, line: 355, type: !32)
!13289 = !DILocation(line: 355, column: 61, scope: !13285)
!13290 = !DILocalVariable(name: "devad", arg: 3, scope: !13285, file: !7026, line: 355, type: !32)
!13291 = !DILocation(line: 355, column: 72, scope: !13285)
!13292 = !DILocalVariable(name: "regnum", arg: 4, scope: !13285, file: !7026, line: 356, type: !581)
!13293 = !DILocation(line: 356, column: 12, scope: !13285)
!13294 = !DILocation(line: 358, column: 22, scope: !13285)
!13295 = !DILocation(line: 358, column: 27, scope: !13285)
!13296 = !DILocation(line: 358, column: 51, scope: !13285)
!13297 = !DILocation(line: 358, column: 58, scope: !13285)
!13298 = !DILocation(line: 358, column: 34, scope: !13285)
!13299 = !DILocation(line: 358, column: 9, scope: !13285)
!13300 = !DILocation(line: 358, column: 2, scope: !13285)
!13301 = distinct !DISubprogram(name: "mdiobus_c45_addr", scope: !7026, file: !7026, line: 337, type: !13302, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13302 = !DISubroutineType(types: !13303)
!13303 = !{!987, !32, !581}
!13304 = !DILocalVariable(name: "devad", arg: 1, scope: !13301, file: !7026, line: 337, type: !32)
!13305 = !DILocation(line: 337, column: 40, scope: !13301)
!13306 = !DILocalVariable(name: "regnum", arg: 2, scope: !13301, file: !7026, line: 337, type: !581)
!13307 = !DILocation(line: 337, column: 51, scope: !13301)
!13308 = !DILocation(line: 339, column: 24, scope: !13301)
!13309 = !DILocation(line: 339, column: 30, scope: !13301)
!13310 = !DILocation(line: 339, column: 22, scope: !13301)
!13311 = !DILocation(line: 339, column: 57, scope: !13301)
!13312 = !DILocation(line: 339, column: 55, scope: !13301)
!13313 = !DILocation(line: 339, column: 2, scope: !13301)
!13314 = distinct !DISubprogram(name: "phy_needs_fixup", scope: !3, file: !3, line: 445, type: !13315, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13315 = !DISubroutineType(types: !13316)
!13316 = !{!32, !7020, !7541}
!13317 = !DILocalVariable(name: "phydev", arg: 1, scope: !13314, file: !3, line: 445, type: !7020)
!13318 = !DILocation(line: 445, column: 47, scope: !13314)
!13319 = !DILocalVariable(name: "fixup", arg: 2, scope: !13314, file: !3, line: 445, type: !7541)
!13320 = !DILocation(line: 445, column: 73, scope: !13314)
!13321 = !DILocation(line: 447, column: 13, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13314, file: !3, line: 447, column: 6)
!13323 = !DILocation(line: 447, column: 20, scope: !13322)
!13324 = !DILocation(line: 447, column: 40, scope: !13322)
!13325 = !DILocation(line: 447, column: 28, scope: !13322)
!13326 = !DILocation(line: 447, column: 6, scope: !13322)
!13327 = !DILocation(line: 447, column: 49, scope: !13322)
!13328 = !DILocation(line: 447, column: 6, scope: !13314)
!13329 = !DILocation(line: 448, column: 14, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13322, file: !3, line: 448, column: 7)
!13331 = !DILocation(line: 448, column: 21, scope: !13330)
!13332 = !DILocation(line: 448, column: 7, scope: !13330)
!13333 = !DILocation(line: 448, column: 41, scope: !13330)
!13334 = !DILocation(line: 448, column: 7, scope: !13322)
!13335 = !DILocation(line: 449, column: 4, scope: !13330)
!13336 = !DILocation(line: 448, column: 44, scope: !13330)
!13337 = !DILocation(line: 451, column: 7, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13314, file: !3, line: 451, column: 6)
!13339 = !DILocation(line: 451, column: 14, scope: !13338)
!13340 = !DILocation(line: 451, column: 24, scope: !13338)
!13341 = !DILocation(line: 451, column: 31, scope: !13338)
!13342 = !DILocation(line: 451, column: 22, scope: !13338)
!13343 = !DILocation(line: 452, column: 7, scope: !13338)
!13344 = !DILocation(line: 452, column: 15, scope: !13338)
!13345 = !DILocation(line: 452, column: 24, scope: !13338)
!13346 = !DILocation(line: 452, column: 31, scope: !13338)
!13347 = !DILocation(line: 452, column: 22, scope: !13338)
!13348 = !DILocation(line: 451, column: 45, scope: !13338)
!13349 = !DILocation(line: 451, column: 6, scope: !13314)
!13350 = !DILocation(line: 453, column: 7, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13338, file: !3, line: 453, column: 7)
!13352 = !DILocation(line: 453, column: 14, scope: !13351)
!13353 = !DILocation(line: 453, column: 22, scope: !13351)
!13354 = !DILocation(line: 453, column: 7, scope: !13338)
!13355 = !DILocation(line: 454, column: 4, scope: !13351)
!13356 = !DILocation(line: 453, column: 25, scope: !13351)
!13357 = !DILocation(line: 456, column: 2, scope: !13314)
!13358 = !DILocation(line: 457, column: 1, scope: !13314)
!13359 = distinct !DISubprogram(name: "dev_name", scope: !6541, file: !6541, line: 609, type: !13360, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13360 = !DISubroutineType(types: !13361)
!13361 = !{!292, !6892}
!13362 = !DILocalVariable(name: "dev", arg: 1, scope: !13359, file: !6541, line: 609, type: !6892)
!13363 = !DILocation(line: 609, column: 57, scope: !13359)
!13364 = !DILocation(line: 612, column: 6, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13359, file: !6541, line: 612, column: 6)
!13366 = !DILocation(line: 612, column: 11, scope: !13365)
!13367 = !DILocation(line: 612, column: 6, scope: !13359)
!13368 = !DILocation(line: 613, column: 10, scope: !13365)
!13369 = !DILocation(line: 613, column: 15, scope: !13365)
!13370 = !DILocation(line: 613, column: 3, scope: !13365)
!13371 = !DILocation(line: 615, column: 23, scope: !13359)
!13372 = !DILocation(line: 615, column: 28, scope: !13359)
!13373 = !DILocation(line: 615, column: 9, scope: !13359)
!13374 = !DILocation(line: 615, column: 2, scope: !13359)
!13375 = !DILocation(line: 616, column: 1, scope: !13359)
!13376 = distinct !DISubprogram(name: "kobject_name", scope: !6113, file: !6113, line: 88, type: !13377, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13377 = !DISubroutineType(types: !13378)
!13378 = !{!292, !13379}
!13379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13380, size: 64)
!13380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6118)
!13381 = !DILocalVariable(name: "kobj", arg: 1, scope: !13376, file: !6113, line: 88, type: !13379)
!13382 = !DILocation(line: 88, column: 62, scope: !13376)
!13383 = !DILocation(line: 90, column: 9, scope: !13376)
!13384 = !DILocation(line: 90, column: 15, scope: !13376)
!13385 = !DILocation(line: 90, column: 2, scope: !13376)
!13386 = distinct !DISubprogram(name: "phy_standalone_show", scope: !3, file: !3, line: 1235, type: !7643, scopeLine: 1237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13387 = !DILocalVariable(name: "dev", arg: 1, scope: !13386, file: !3, line: 1235, type: !6545)
!13388 = !DILocation(line: 1235, column: 36, scope: !13386)
!13389 = !DILocalVariable(name: "attr", arg: 2, scope: !13386, file: !3, line: 1235, type: !7645)
!13390 = !DILocation(line: 1235, column: 66, scope: !13386)
!13391 = !DILocalVariable(name: "buf", arg: 3, scope: !13386, file: !3, line: 1236, type: !1038)
!13392 = !DILocation(line: 1236, column: 13, scope: !13386)
!13393 = !DILocalVariable(name: "phydev", scope: !13386, file: !3, line: 1238, type: !7020)
!13394 = !DILocation(line: 1238, column: 21, scope: !13386)
!13395 = !DILocalVariable(name: "__mptr", scope: !13396, file: !3, line: 1238, type: !591)
!13396 = distinct !DILexicalBlock(scope: !13386, file: !3, line: 1238, column: 30)
!13397 = !DILocation(line: 1238, column: 30, scope: !13396)
!13398 = !DILocalVariable(name: "__mptr", scope: !13399, file: !3, line: 1238, type: !591)
!13399 = distinct !DILexicalBlock(scope: !13396, file: !3, line: 1238, column: 30)
!13400 = !DILocation(line: 1238, column: 30, scope: !13399)
!13401 = !DILocation(line: 1238, column: 30, scope: !13402)
!13402 = distinct !DILexicalBlock(scope: !13399, file: !3, line: 1238, column: 30)
!13403 = !DILocation(line: 1238, column: 30, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13396, file: !3, line: 1238, column: 30)
!13405 = !DILocation(line: 1240, column: 17, scope: !13386)
!13406 = !DILocation(line: 1240, column: 31, scope: !13386)
!13407 = !DILocation(line: 1240, column: 39, scope: !13386)
!13408 = !DILocation(line: 1240, column: 30, scope: !13386)
!13409 = !DILocation(line: 1240, column: 9, scope: !13386)
!13410 = !DILocation(line: 1240, column: 2, scope: !13386)
!13411 = distinct !DISubprogram(name: "kasan_check_write", scope: !13412, file: !13412, line: 38, type: !13413, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13412 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!13413 = !DISubroutineType(types: !13414)
!13414 = !{!771, !10241, !7}
!13415 = !DILocalVariable(name: "p", arg: 1, scope: !13411, file: !13412, line: 38, type: !10241)
!13416 = !DILocation(line: 38, column: 59, scope: !13411)
!13417 = !DILocalVariable(name: "size", arg: 2, scope: !13411, file: !13412, line: 38, type: !7)
!13418 = !DILocation(line: 38, column: 75, scope: !13411)
!13419 = !DILocation(line: 40, column: 2, scope: !13411)
!13420 = distinct !DISubprogram(name: "kcsan_check_access", scope: !13421, file: !13421, line: 178, type: !13422, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13421 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!13422 = !DISubroutineType(types: !13423)
!13423 = !{null, !10241, !1039, !32}
!13424 = !DILocalVariable(name: "ptr", arg: 1, scope: !13420, file: !13421, line: 178, type: !10241)
!13425 = !DILocation(line: 178, column: 60, scope: !13420)
!13426 = !DILocalVariable(name: "size", arg: 2, scope: !13420, file: !13421, line: 178, type: !1039)
!13427 = !DILocation(line: 178, column: 72, scope: !13420)
!13428 = !DILocalVariable(name: "type", arg: 3, scope: !13420, file: !13421, line: 179, type: !32)
!13429 = !DILocation(line: 179, column: 15, scope: !13420)
!13430 = !DILocation(line: 179, column: 23, scope: !13420)
!13431 = distinct !DISubprogram(name: "__refcount_inc", scope: !569, file: !569, line: 248, type: !13432, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13432 = !DISubroutineType(types: !13433)
!13433 = !{null, !10222, !1001}
!13434 = !DILocalVariable(name: "r", arg: 1, scope: !13431, file: !569, line: 248, type: !10222)
!13435 = !DILocation(line: 248, column: 47, scope: !13431)
!13436 = !DILocalVariable(name: "oldp", arg: 2, scope: !13431, file: !569, line: 248, type: !1001)
!13437 = !DILocation(line: 248, column: 55, scope: !13431)
!13438 = !DILocation(line: 250, column: 20, scope: !13431)
!13439 = !DILocation(line: 250, column: 23, scope: !13431)
!13440 = !DILocation(line: 250, column: 2, scope: !13431)
!13441 = !DILocation(line: 251, column: 1, scope: !13431)
!13442 = distinct !DISubprogram(name: "__refcount_add", scope: !569, file: !569, line: 191, type: !13443, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13443 = !DISubroutineType(types: !13444)
!13444 = !{null, !32, !10222, !1001}
!13445 = !DILocalVariable(name: "i", arg: 1, scope: !13446, file: !10225, line: 182, type: !32)
!13446 = distinct !DISubprogram(name: "arch_atomic_fetch_add", scope: !10225, file: !10225, line: 182, type: !13447, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13447 = !DISubroutineType(types: !13448)
!13448 = !{!32, !32, !10228}
!13449 = !DILocation(line: 182, column: 54, scope: !13446, inlinedAt: !13450)
!13450 = distinct !DILocation(line: 143, column: 9, scope: !13451, inlinedAt: !13452)
!13451 = distinct !DISubprogram(name: "atomic_fetch_add_relaxed", scope: !10232, file: !10232, line: 140, type: !13447, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13452 = distinct !DILocation(line: 193, column: 12, scope: !13442)
!13453 = !DILocalVariable(name: "v", arg: 2, scope: !13446, file: !10225, line: 182, type: !10228)
!13454 = !DILocation(line: 182, column: 67, scope: !13446, inlinedAt: !13450)
!13455 = !DILocalVariable(name: "__ret", scope: !13456, file: !10225, line: 184, type: !32)
!13456 = distinct !DILexicalBlock(scope: !13446, file: !10225, line: 184, column: 9)
!13457 = !DILocation(line: 184, column: 9, scope: !13456, inlinedAt: !13450)
!13458 = !DILocalVariable(name: "v", arg: 1, scope: !13459, file: !10238, line: 99, type: !10241)
!13459 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !10238, file: !10238, line: 99, type: !10239, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13460 = !DILocation(line: 99, column: 79, scope: !13459, inlinedAt: !13461)
!13461 = distinct !DILocation(line: 142, column: 2, scope: !13451, inlinedAt: !13452)
!13462 = !DILocalVariable(name: "size", arg: 2, scope: !13459, file: !10238, line: 99, type: !1039)
!13463 = !DILocation(line: 99, column: 89, scope: !13459, inlinedAt: !13461)
!13464 = !DILocalVariable(name: "i", arg: 1, scope: !13451, file: !10232, line: 140, type: !32)
!13465 = !DILocation(line: 140, column: 30, scope: !13451, inlinedAt: !13452)
!13466 = !DILocalVariable(name: "v", arg: 2, scope: !13451, file: !10232, line: 140, type: !10228)
!13467 = !DILocation(line: 140, column: 43, scope: !13451, inlinedAt: !13452)
!13468 = !DILocalVariable(name: "i", arg: 1, scope: !13442, file: !569, line: 191, type: !32)
!13469 = !DILocation(line: 191, column: 39, scope: !13442)
!13470 = !DILocalVariable(name: "r", arg: 2, scope: !13442, file: !569, line: 191, type: !10222)
!13471 = !DILocation(line: 191, column: 54, scope: !13442)
!13472 = !DILocalVariable(name: "oldp", arg: 3, scope: !13442, file: !569, line: 191, type: !1001)
!13473 = !DILocation(line: 191, column: 62, scope: !13442)
!13474 = !DILocalVariable(name: "old", scope: !13442, file: !569, line: 193, type: !32)
!13475 = !DILocation(line: 193, column: 6, scope: !13442)
!13476 = !DILocation(line: 193, column: 37, scope: !13442)
!13477 = !DILocation(line: 193, column: 41, scope: !13442)
!13478 = !DILocation(line: 193, column: 44, scope: !13442)
!13479 = !DILocation(line: 142, column: 31, scope: !13451, inlinedAt: !13452)
!13480 = !DILocation(line: 101, column: 20, scope: !13459, inlinedAt: !13461)
!13481 = !DILocation(line: 101, column: 23, scope: !13459, inlinedAt: !13461)
!13482 = !DILocation(line: 101, column: 2, scope: !13459, inlinedAt: !13461)
!13483 = !DILocation(line: 102, column: 2, scope: !13459, inlinedAt: !13461)
!13484 = !DILocation(line: 143, column: 39, scope: !13451, inlinedAt: !13452)
!13485 = !DILocation(line: 143, column: 42, scope: !13451, inlinedAt: !13452)
!13486 = !{i32 -2146957057}
!13487 = !DILocation(line: 195, column: 6, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13442, file: !569, line: 195, column: 6)
!13489 = !DILocation(line: 195, column: 6, scope: !13442)
!13490 = !DILocation(line: 196, column: 11, scope: !13488)
!13491 = !DILocation(line: 196, column: 4, scope: !13488)
!13492 = !DILocation(line: 196, column: 9, scope: !13488)
!13493 = !DILocation(line: 196, column: 3, scope: !13488)
!13494 = !DILocation(line: 198, column: 6, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13442, file: !569, line: 198, column: 6)
!13496 = !DILocation(line: 198, column: 6, scope: !13442)
!13497 = !DILocation(line: 199, column: 26, scope: !13495)
!13498 = !DILocation(line: 199, column: 3, scope: !13495)
!13499 = !DILocation(line: 200, column: 11, scope: !13500)
!13500 = distinct !DILexicalBlock(scope: !13495, file: !569, line: 200, column: 11)
!13501 = !DILocation(line: 200, column: 11, scope: !13495)
!13502 = !DILocation(line: 201, column: 26, scope: !13500)
!13503 = !DILocation(line: 201, column: 3, scope: !13500)
!13504 = !DILocation(line: 202, column: 1, scope: !13442)
!13505 = distinct !DISubprogram(name: "linkmode_and", scope: !11202, file: !11202, line: 18, type: !13506, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13506 = !DISubroutineType(types: !13507)
!13507 = !{null, !3437, !7130, !7130}
!13508 = !DILocalVariable(name: "dst", arg: 1, scope: !13505, file: !11202, line: 18, type: !3437)
!13509 = !DILocation(line: 18, column: 48, scope: !13505)
!13510 = !DILocalVariable(name: "a", arg: 2, scope: !13505, file: !11202, line: 18, type: !7130)
!13511 = !DILocation(line: 18, column: 74, scope: !13505)
!13512 = !DILocalVariable(name: "b", arg: 3, scope: !13505, file: !11202, line: 19, type: !7130)
!13513 = !DILocation(line: 19, column: 26, scope: !13505)
!13514 = !DILocation(line: 21, column: 13, scope: !13505)
!13515 = !DILocation(line: 21, column: 18, scope: !13505)
!13516 = !DILocation(line: 21, column: 21, scope: !13505)
!13517 = !DILocation(line: 21, column: 2, scope: !13505)
!13518 = !DILocation(line: 22, column: 1, scope: !13505)
!13519 = distinct !DISubprogram(name: "linkmode_adv_to_mii_adv_t", scope: !11172, file: !11172, line: 143, type: !13520, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13520 = !DISubroutineType(types: !13521)
!13521 = !{!987, !3437}
!13522 = !DILocalVariable(name: "advertising", arg: 1, scope: !13519, file: !11172, line: 143, type: !3437)
!13523 = !DILocation(line: 143, column: 60, scope: !13519)
!13524 = !DILocalVariable(name: "result", scope: !13519, file: !11172, line: 145, type: !987)
!13525 = !DILocation(line: 145, column: 6, scope: !13519)
!13526 = !DILocation(line: 147, column: 60, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13519, file: !11172, line: 147, column: 6)
!13528 = !DILocation(line: 147, column: 6, scope: !13527)
!13529 = !DILocation(line: 147, column: 6, scope: !13519)
!13530 = !DILocation(line: 148, column: 10, scope: !13527)
!13531 = !DILocation(line: 148, column: 3, scope: !13527)
!13532 = !DILocation(line: 149, column: 60, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13519, file: !11172, line: 149, column: 6)
!13534 = !DILocation(line: 149, column: 6, scope: !13533)
!13535 = !DILocation(line: 149, column: 6, scope: !13519)
!13536 = !DILocation(line: 150, column: 10, scope: !13533)
!13537 = !DILocation(line: 150, column: 3, scope: !13533)
!13538 = !DILocation(line: 151, column: 61, scope: !13539)
!13539 = distinct !DILexicalBlock(scope: !13519, file: !11172, line: 151, column: 6)
!13540 = !DILocation(line: 151, column: 6, scope: !13539)
!13541 = !DILocation(line: 151, column: 6, scope: !13519)
!13542 = !DILocation(line: 152, column: 10, scope: !13539)
!13543 = !DILocation(line: 152, column: 3, scope: !13539)
!13544 = !DILocation(line: 153, column: 61, scope: !13545)
!13545 = distinct !DILexicalBlock(scope: !13519, file: !11172, line: 153, column: 6)
!13546 = !DILocation(line: 153, column: 6, scope: !13545)
!13547 = !DILocation(line: 153, column: 6, scope: !13519)
!13548 = !DILocation(line: 154, column: 10, scope: !13545)
!13549 = !DILocation(line: 154, column: 3, scope: !13545)
!13550 = !DILocation(line: 155, column: 53, scope: !13551)
!13551 = distinct !DILexicalBlock(scope: !13519, file: !11172, line: 155, column: 6)
!13552 = !DILocation(line: 155, column: 6, scope: !13551)
!13553 = !DILocation(line: 155, column: 6, scope: !13519)
!13554 = !DILocation(line: 156, column: 10, scope: !13551)
!13555 = !DILocation(line: 156, column: 3, scope: !13551)
!13556 = !DILocation(line: 157, column: 58, scope: !13557)
!13557 = distinct !DILexicalBlock(scope: !13519, file: !11172, line: 157, column: 6)
!13558 = !DILocation(line: 157, column: 6, scope: !13557)
!13559 = !DILocation(line: 157, column: 6, scope: !13519)
!13560 = !DILocation(line: 158, column: 10, scope: !13557)
!13561 = !DILocation(line: 158, column: 3, scope: !13557)
!13562 = !DILocation(line: 160, column: 9, scope: !13519)
!13563 = !DILocation(line: 160, column: 2, scope: !13519)
!13564 = distinct !DISubprogram(name: "linkmode_adv_to_mii_ctrl1000_t", scope: !11172, file: !11172, line: 218, type: !13520, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13565 = !DILocalVariable(name: "advertising", arg: 1, scope: !13564, file: !11172, line: 218, type: !3437)
!13566 = !DILocation(line: 218, column: 65, scope: !13564)
!13567 = !DILocalVariable(name: "result", scope: !13564, file: !11172, line: 220, type: !987)
!13568 = !DILocation(line: 220, column: 6, scope: !13564)
!13569 = !DILocation(line: 223, column: 10, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13564, file: !11172, line: 222, column: 6)
!13571 = !DILocation(line: 222, column: 6, scope: !13570)
!13572 = !DILocation(line: 222, column: 6, scope: !13564)
!13573 = !DILocation(line: 224, column: 10, scope: !13570)
!13574 = !DILocation(line: 224, column: 3, scope: !13570)
!13575 = !DILocation(line: 226, column: 10, scope: !13576)
!13576 = distinct !DILexicalBlock(scope: !13564, file: !11172, line: 225, column: 6)
!13577 = !DILocation(line: 225, column: 6, scope: !13576)
!13578 = !DILocation(line: 225, column: 6, scope: !13564)
!13579 = !DILocation(line: 227, column: 10, scope: !13576)
!13580 = !DILocation(line: 227, column: 3, scope: !13576)
!13581 = !DILocation(line: 229, column: 9, scope: !13564)
!13582 = !DILocation(line: 229, column: 2, scope: !13564)
!13583 = distinct !DISubprogram(name: "bitmap_and", scope: !13584, file: !13584, line: 283, type: !13585, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13584 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!13585 = !DISubroutineType(types: !13586)
!13586 = !{!32, !3437, !7130, !7130, !7}
!13587 = !DILocalVariable(name: "dst", arg: 1, scope: !13583, file: !13584, line: 283, type: !3437)
!13588 = !DILocation(line: 283, column: 45, scope: !13583)
!13589 = !DILocalVariable(name: "src1", arg: 2, scope: !13583, file: !13584, line: 283, type: !7130)
!13590 = !DILocation(line: 283, column: 71, scope: !13583)
!13591 = !DILocalVariable(name: "src2", arg: 3, scope: !13583, file: !13584, line: 284, type: !7130)
!13592 = !DILocation(line: 284, column: 25, scope: !13583)
!13593 = !DILocalVariable(name: "nbits", arg: 4, scope: !13583, file: !13584, line: 284, type: !7)
!13594 = !DILocation(line: 284, column: 44, scope: !13583)
!13595 = !DILocation(line: 286, column: 6, scope: !13596)
!13596 = distinct !DILexicalBlock(scope: !13583, file: !13584, line: 286, column: 6)
!13597 = !DILocation(line: 286, column: 6, scope: !13583)
!13598 = !DILocation(line: 287, column: 19, scope: !13596)
!13599 = !DILocation(line: 287, column: 18, scope: !13596)
!13600 = !DILocation(line: 287, column: 27, scope: !13596)
!13601 = !DILocation(line: 287, column: 26, scope: !13596)
!13602 = !DILocation(line: 287, column: 24, scope: !13596)
!13603 = !DILocation(line: 287, column: 34, scope: !13596)
!13604 = !DILocation(line: 287, column: 32, scope: !13596)
!13605 = !DILocation(line: 287, column: 12, scope: !13596)
!13606 = !DILocation(line: 287, column: 16, scope: !13596)
!13607 = !DILocation(line: 287, column: 64, scope: !13596)
!13608 = !DILocation(line: 287, column: 3, scope: !13596)
!13609 = !DILocation(line: 288, column: 22, scope: !13583)
!13610 = !DILocation(line: 288, column: 27, scope: !13583)
!13611 = !DILocation(line: 288, column: 33, scope: !13583)
!13612 = !DILocation(line: 288, column: 39, scope: !13583)
!13613 = !DILocation(line: 288, column: 9, scope: !13583)
!13614 = !DILocation(line: 288, column: 2, scope: !13583)
!13615 = !DILocation(line: 289, column: 1, scope: !13583)
!13616 = distinct !DISubprogram(name: "mii_adv_mod_linkmode_adv_t", scope: !11172, file: !11172, line: 415, type: !11173, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13617 = !DILocalVariable(name: "advertising", arg: 1, scope: !13616, file: !11172, line: 415, type: !3437)
!13618 = !DILocation(line: 415, column: 62, scope: !13616)
!13619 = !DILocalVariable(name: "adv", arg: 2, scope: !13616, file: !11172, line: 416, type: !987)
!13620 = !DILocation(line: 416, column: 16, scope: !13616)
!13621 = !DILocation(line: 419, column: 5, scope: !13616)
!13622 = !DILocation(line: 419, column: 18, scope: !13616)
!13623 = !DILocation(line: 419, column: 22, scope: !13616)
!13624 = !DILocation(line: 418, column: 2, scope: !13616)
!13625 = !DILocation(line: 422, column: 5, scope: !13616)
!13626 = !DILocation(line: 422, column: 18, scope: !13616)
!13627 = !DILocation(line: 422, column: 22, scope: !13616)
!13628 = !DILocation(line: 421, column: 2, scope: !13616)
!13629 = !DILocation(line: 425, column: 5, scope: !13616)
!13630 = !DILocation(line: 425, column: 18, scope: !13616)
!13631 = !DILocation(line: 425, column: 22, scope: !13616)
!13632 = !DILocation(line: 424, column: 2, scope: !13616)
!13633 = !DILocation(line: 428, column: 5, scope: !13616)
!13634 = !DILocation(line: 428, column: 18, scope: !13616)
!13635 = !DILocation(line: 428, column: 22, scope: !13616)
!13636 = !DILocation(line: 427, column: 2, scope: !13616)
!13637 = !DILocation(line: 430, column: 48, scope: !13616)
!13638 = !DILocation(line: 431, column: 5, scope: !13616)
!13639 = !DILocation(line: 431, column: 9, scope: !13616)
!13640 = !DILocation(line: 430, column: 2, scope: !13616)
!13641 = !DILocation(line: 434, column: 5, scope: !13616)
!13642 = !DILocation(line: 434, column: 18, scope: !13616)
!13643 = !DILocation(line: 434, column: 22, scope: !13616)
!13644 = !DILocation(line: 433, column: 2, scope: !13616)
!13645 = !DILocation(line: 435, column: 1, scope: !13616)
!13646 = distinct !DISubprogram(name: "bitmap_zero", scope: !13584, file: !13584, line: 235, type: !13647, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13647 = !DISubroutineType(types: !13648)
!13648 = !{null, !3437, !7}
!13649 = !DILocalVariable(name: "dst", arg: 1, scope: !13646, file: !13584, line: 235, type: !3437)
!13650 = !DILocation(line: 235, column: 47, scope: !13646)
!13651 = !DILocalVariable(name: "nbits", arg: 2, scope: !13646, file: !13584, line: 235, type: !7)
!13652 = !DILocation(line: 235, column: 65, scope: !13646)
!13653 = !DILocalVariable(name: "len", scope: !13646, file: !13584, line: 237, type: !7)
!13654 = !DILocation(line: 237, column: 15, scope: !13646)
!13655 = !DILocation(line: 237, column: 21, scope: !13646)
!13656 = !DILocation(line: 237, column: 42, scope: !13646)
!13657 = !DILocation(line: 238, column: 9, scope: !13646)
!13658 = !DILocation(line: 238, column: 2, scope: !13646)
!13659 = !DILocation(line: 238, column: 17, scope: !13646)
!13660 = !DILocation(line: 239, column: 1, scope: !13646)
!13661 = distinct !DISubprogram(name: "ktime_add_us", scope: !454, file: !454, line: 179, type: !13662, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13662 = !DISubroutineType(types: !13663)
!13663 = !{!453, !13664, !13665}
!13664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !453)
!13665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !331)
!13666 = !DILocalVariable(name: "kt", arg: 1, scope: !13661, file: !454, line: 179, type: !13664)
!13667 = !DILocation(line: 179, column: 50, scope: !13661)
!13668 = !DILocalVariable(name: "usec", arg: 2, scope: !13661, file: !454, line: 179, type: !13665)
!13669 = !DILocation(line: 179, column: 64, scope: !13661)
!13670 = !DILocation(line: 181, column: 9, scope: !13661)
!13671 = !DILocation(line: 181, column: 2, scope: !13661)
!13672 = distinct !DISubprogram(name: "ktime_compare", scope: !454, file: !454, line: 95, type: !13673, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13673 = !DISubroutineType(types: !13674)
!13674 = !{!32, !13664, !13664}
!13675 = !DILocalVariable(name: "cmp1", arg: 1, scope: !13672, file: !454, line: 95, type: !13664)
!13676 = !DILocation(line: 95, column: 47, scope: !13672)
!13677 = !DILocalVariable(name: "cmp2", arg: 2, scope: !13672, file: !454, line: 95, type: !13664)
!13678 = !DILocation(line: 95, column: 67, scope: !13672)
!13679 = !DILocation(line: 97, column: 6, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13672, file: !454, line: 97, column: 6)
!13681 = !DILocation(line: 97, column: 13, scope: !13680)
!13682 = !DILocation(line: 97, column: 11, scope: !13680)
!13683 = !DILocation(line: 97, column: 6, scope: !13672)
!13684 = !DILocation(line: 98, column: 3, scope: !13680)
!13685 = !DILocation(line: 99, column: 6, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13672, file: !454, line: 99, column: 6)
!13687 = !DILocation(line: 99, column: 13, scope: !13686)
!13688 = !DILocation(line: 99, column: 11, scope: !13686)
!13689 = !DILocation(line: 99, column: 6, scope: !13672)
!13690 = !DILocation(line: 100, column: 3, scope: !13686)
!13691 = !DILocation(line: 101, column: 2, scope: !13672)
!13692 = !DILocation(line: 102, column: 1, scope: !13672)
!13693 = distinct !DISubprogram(name: "__clear_bit", scope: !13694, file: !13694, line: 40, type: !13695, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13694 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!13695 = !DISubroutineType(types: !13696)
!13696 = !{null, !998, !11550}
!13697 = !DILocalVariable(name: "nr", arg: 1, scope: !13698, file: !12708, line: 92, type: !998)
!13698 = distinct !DISubprogram(name: "arch___clear_bit", scope: !12708, file: !12708, line: 92, type: !13695, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13699 = !DILocation(line: 92, column: 23, scope: !13698, inlinedAt: !13700)
!13700 = distinct !DILocation(line: 43, column: 2, scope: !13693)
!13701 = !DILocalVariable(name: "addr", arg: 2, scope: !13698, file: !12708, line: 92, type: !11550)
!13702 = !DILocation(line: 92, column: 51, scope: !13698, inlinedAt: !13700)
!13703 = !DILocalVariable(name: "v", arg: 1, scope: !13704, file: !10238, line: 39, type: !10241)
!13704 = distinct !DISubprogram(name: "instrument_write", scope: !10238, file: !10238, line: 39, type: !10239, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13705 = !DILocation(line: 39, column: 67, scope: !13704, inlinedAt: !13706)
!13706 = distinct !DILocation(line: 42, column: 2, scope: !13693)
!13707 = !DILocalVariable(name: "size", arg: 2, scope: !13704, file: !10238, line: 39, type: !1039)
!13708 = !DILocation(line: 39, column: 77, scope: !13704, inlinedAt: !13706)
!13709 = !DILocalVariable(name: "nr", arg: 1, scope: !13693, file: !13694, line: 40, type: !998)
!13710 = !DILocation(line: 40, column: 37, scope: !13693)
!13711 = !DILocalVariable(name: "addr", arg: 2, scope: !13693, file: !13694, line: 40, type: !11550)
!13712 = !DILocation(line: 40, column: 65, scope: !13693)
!13713 = !DILocation(line: 42, column: 19, scope: !13693)
!13714 = !DILocation(line: 42, column: 26, scope: !13693)
!13715 = !DILocation(line: 42, column: 24, scope: !13693)
!13716 = !DILocation(line: 41, column: 20, scope: !13704, inlinedAt: !13706)
!13717 = !DILocation(line: 41, column: 23, scope: !13704, inlinedAt: !13706)
!13718 = !DILocation(line: 41, column: 2, scope: !13704, inlinedAt: !13706)
!13719 = !DILocation(line: 42, column: 2, scope: !13704, inlinedAt: !13706)
!13720 = !DILocation(line: 43, column: 19, scope: !13693)
!13721 = !DILocation(line: 43, column: 23, scope: !13693)
!13722 = !DILocation(line: 94, column: 44, scope: !13698, inlinedAt: !13700)
!13723 = !DILocation(line: 94, column: 56, scope: !13698, inlinedAt: !13700)
!13724 = !DILocation(line: 94, column: 2, scope: !13698, inlinedAt: !13700)
!13725 = !{i32 -2147159903}
!13726 = !DILocation(line: 44, column: 1, scope: !13693)
!13727 = distinct !DISubprogram(name: "bitmap_copy", scope: !13584, file: !13584, line: 247, type: !13728, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13728 = !DISubroutineType(types: !13729)
!13729 = !{null, !3437, !7130, !7}
!13730 = !DILocalVariable(name: "dst", arg: 1, scope: !13727, file: !13584, line: 247, type: !3437)
!13731 = !DILocation(line: 247, column: 47, scope: !13727)
!13732 = !DILocalVariable(name: "src", arg: 2, scope: !13727, file: !13584, line: 247, type: !7130)
!13733 = !DILocation(line: 247, column: 73, scope: !13727)
!13734 = !DILocalVariable(name: "nbits", arg: 3, scope: !13727, file: !13584, line: 248, type: !7)
!13735 = !DILocation(line: 248, column: 17, scope: !13727)
!13736 = !DILocalVariable(name: "len", scope: !13727, file: !13584, line: 250, type: !7)
!13737 = !DILocation(line: 250, column: 15, scope: !13727)
!13738 = !DILocation(line: 250, column: 21, scope: !13727)
!13739 = !DILocation(line: 250, column: 42, scope: !13727)
!13740 = !DILocation(line: 251, column: 9, scope: !13727)
!13741 = !DILocation(line: 251, column: 2, scope: !13727)
!13742 = !DILocation(line: 251, column: 14, scope: !13727)
!13743 = !DILocation(line: 251, column: 19, scope: !13727)
!13744 = !DILocation(line: 252, column: 1, scope: !13727)
!13745 = distinct !DISubprogram(name: "__set_bit", scope: !13694, file: !13694, line: 25, type: !13695, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13746 = !DILocalVariable(name: "nr", arg: 1, scope: !13747, file: !12708, line: 66, type: !998)
!13747 = distinct !DISubprogram(name: "arch___set_bit", scope: !12708, file: !12708, line: 66, type: !13695, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13748 = !DILocation(line: 66, column: 21, scope: !13747, inlinedAt: !13749)
!13749 = distinct !DILocation(line: 28, column: 2, scope: !13745)
!13750 = !DILocalVariable(name: "addr", arg: 2, scope: !13747, file: !12708, line: 66, type: !11550)
!13751 = !DILocation(line: 66, column: 49, scope: !13747, inlinedAt: !13749)
!13752 = !DILocation(line: 39, column: 67, scope: !13704, inlinedAt: !13753)
!13753 = distinct !DILocation(line: 27, column: 2, scope: !13745)
!13754 = !DILocation(line: 39, column: 77, scope: !13704, inlinedAt: !13753)
!13755 = !DILocalVariable(name: "nr", arg: 1, scope: !13745, file: !13694, line: 25, type: !998)
!13756 = !DILocation(line: 25, column: 35, scope: !13745)
!13757 = !DILocalVariable(name: "addr", arg: 2, scope: !13745, file: !13694, line: 25, type: !11550)
!13758 = !DILocation(line: 25, column: 63, scope: !13745)
!13759 = !DILocation(line: 27, column: 19, scope: !13745)
!13760 = !DILocation(line: 27, column: 26, scope: !13745)
!13761 = !DILocation(line: 27, column: 24, scope: !13745)
!13762 = !DILocation(line: 41, column: 20, scope: !13704, inlinedAt: !13753)
!13763 = !DILocation(line: 41, column: 23, scope: !13704, inlinedAt: !13753)
!13764 = !DILocation(line: 41, column: 2, scope: !13704, inlinedAt: !13753)
!13765 = !DILocation(line: 42, column: 2, scope: !13704, inlinedAt: !13753)
!13766 = !DILocation(line: 28, column: 17, scope: !13745)
!13767 = !DILocation(line: 28, column: 21, scope: !13745)
!13768 = !DILocation(line: 68, column: 44, scope: !13747, inlinedAt: !13749)
!13769 = !DILocation(line: 68, column: 56, scope: !13747, inlinedAt: !13749)
!13770 = !DILocation(line: 68, column: 2, scope: !13747, inlinedAt: !13749)
!13771 = !{i32 -2147161114}
!13772 = !DILocation(line: 29, column: 1, scope: !13745)
!13773 = distinct !DISubprogram(name: "bitmap_equal", scope: !13584, file: !13584, line: 333, type: !13774, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13774 = !DISubroutineType(types: !13775)
!13775 = !{!32, !7130, !7130, !7}
!13776 = !DILocalVariable(name: "src1", arg: 1, scope: !13773, file: !13584, line: 333, type: !7130)
!13777 = !DILocation(line: 333, column: 53, scope: !13773)
!13778 = !DILocalVariable(name: "src2", arg: 2, scope: !13773, file: !13584, line: 334, type: !7130)
!13779 = !DILocation(line: 334, column: 25, scope: !13773)
!13780 = !DILocalVariable(name: "nbits", arg: 3, scope: !13773, file: !13584, line: 334, type: !7)
!13781 = !DILocation(line: 334, column: 44, scope: !13773)
!13782 = !DILocation(line: 336, column: 6, scope: !13783)
!13783 = distinct !DILexicalBlock(scope: !13773, file: !13584, line: 336, column: 6)
!13784 = !DILocation(line: 336, column: 6, scope: !13773)
!13785 = !DILocation(line: 337, column: 14, scope: !13783)
!13786 = !DILocation(line: 337, column: 13, scope: !13783)
!13787 = !DILocation(line: 337, column: 22, scope: !13783)
!13788 = !DILocation(line: 337, column: 21, scope: !13783)
!13789 = !DILocation(line: 337, column: 19, scope: !13783)
!13790 = !DILocation(line: 337, column: 30, scope: !13783)
!13791 = !DILocation(line: 337, column: 28, scope: !13783)
!13792 = !DILocation(line: 337, column: 10, scope: !13783)
!13793 = !DILocation(line: 337, column: 3, scope: !13783)
!13794 = !DILocation(line: 338, column: 27, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13773, file: !13584, line: 338, column: 6)
!13796 = !DILocation(line: 338, column: 33, scope: !13795)
!13797 = !DILocation(line: 338, column: 6, scope: !13795)
!13798 = !DILocation(line: 338, column: 52, scope: !13795)
!13799 = !DILocation(line: 339, column: 6, scope: !13795)
!13800 = !DILocation(line: 338, column: 6, scope: !13773)
!13801 = !DILocation(line: 340, column: 18, scope: !13795)
!13802 = !DILocation(line: 340, column: 24, scope: !13795)
!13803 = !DILocation(line: 340, column: 30, scope: !13795)
!13804 = !DILocation(line: 340, column: 36, scope: !13795)
!13805 = !DILocation(line: 340, column: 11, scope: !13795)
!13806 = !DILocation(line: 340, column: 10, scope: !13795)
!13807 = !DILocation(line: 340, column: 3, scope: !13795)
!13808 = !DILocation(line: 341, column: 24, scope: !13773)
!13809 = !DILocation(line: 341, column: 30, scope: !13773)
!13810 = !DILocation(line: 341, column: 36, scope: !13773)
!13811 = !DILocation(line: 341, column: 9, scope: !13773)
!13812 = !DILocation(line: 341, column: 2, scope: !13773)
!13813 = !DILocation(line: 342, column: 1, scope: !13773)
!13814 = distinct !DISubprogram(name: "test_bit", scope: !13694, file: !13694, line: 132, type: !13815, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13815 = !DISubroutineType(types: !13816)
!13816 = !{!771, !998, !12042}
!13817 = !DILocalVariable(name: "nr", arg: 1, scope: !13818, file: !12708, line: 210, type: !998)
!13818 = distinct !DISubprogram(name: "variable_test_bit", scope: !12708, file: !12708, line: 210, type: !13815, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13819 = !DILocation(line: 210, column: 52, scope: !13818, inlinedAt: !13820)
!13820 = distinct !DILocation(line: 135, column: 9, scope: !13814)
!13821 = !DILocalVariable(name: "addr", arg: 2, scope: !13818, file: !12708, line: 210, type: !12042)
!13822 = !DILocation(line: 210, column: 86, scope: !13818, inlinedAt: !13820)
!13823 = !DILocalVariable(name: "oldbit", scope: !13818, file: !12708, line: 212, type: !771)
!13824 = !DILocation(line: 212, column: 7, scope: !13818, inlinedAt: !13820)
!13825 = !DILocalVariable(name: "nr", arg: 1, scope: !13826, file: !12708, line: 204, type: !998)
!13826 = distinct !DISubprogram(name: "constant_test_bit", scope: !12708, file: !12708, line: 204, type: !13815, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13827 = !DILocation(line: 204, column: 52, scope: !13826, inlinedAt: !13828)
!13828 = distinct !DILocation(line: 135, column: 9, scope: !13814)
!13829 = !DILocalVariable(name: "addr", arg: 2, scope: !13826, file: !12708, line: 204, type: !12042)
!13830 = !DILocation(line: 204, column: 86, scope: !13826, inlinedAt: !13828)
!13831 = !DILocalVariable(name: "v", arg: 1, scope: !13832, file: !10238, line: 69, type: !10241)
!13832 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !10238, file: !10238, line: 69, type: !10239, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13833 = !DILocation(line: 69, column: 73, scope: !13832, inlinedAt: !13834)
!13834 = distinct !DILocation(line: 134, column: 2, scope: !13814)
!13835 = !DILocalVariable(name: "size", arg: 2, scope: !13832, file: !10238, line: 69, type: !1039)
!13836 = !DILocation(line: 69, column: 83, scope: !13832, inlinedAt: !13834)
!13837 = !DILocalVariable(name: "nr", arg: 1, scope: !13814, file: !13694, line: 132, type: !998)
!13838 = !DILocation(line: 132, column: 34, scope: !13814)
!13839 = !DILocalVariable(name: "addr", arg: 2, scope: !13814, file: !13694, line: 132, type: !12042)
!13840 = !DILocation(line: 132, column: 68, scope: !13814)
!13841 = !DILocation(line: 134, column: 25, scope: !13814)
!13842 = !DILocation(line: 134, column: 32, scope: !13814)
!13843 = !DILocation(line: 134, column: 30, scope: !13814)
!13844 = !DILocation(line: 71, column: 19, scope: !13832, inlinedAt: !13834)
!13845 = !DILocation(line: 71, column: 22, scope: !13832, inlinedAt: !13834)
!13846 = !DILocation(line: 71, column: 2, scope: !13832, inlinedAt: !13834)
!13847 = !DILocation(line: 72, column: 2, scope: !13832, inlinedAt: !13834)
!13848 = !DILocation(line: 135, column: 9, scope: !13814)
!13849 = !DILocation(line: 206, column: 19, scope: !13826, inlinedAt: !13828)
!13850 = !DILocation(line: 206, column: 22, scope: !13826, inlinedAt: !13828)
!13851 = !DILocation(line: 206, column: 15, scope: !13826, inlinedAt: !13828)
!13852 = !DILocation(line: 207, column: 4, scope: !13826, inlinedAt: !13828)
!13853 = !DILocation(line: 207, column: 9, scope: !13826, inlinedAt: !13828)
!13854 = !DILocation(line: 207, column: 12, scope: !13826, inlinedAt: !13828)
!13855 = !DILocation(line: 206, column: 44, scope: !13826, inlinedAt: !13828)
!13856 = !DILocation(line: 207, column: 37, scope: !13826, inlinedAt: !13828)
!13857 = !DILocation(line: 217, column: 33, scope: !13818, inlinedAt: !13820)
!13858 = !DILocation(line: 217, column: 46, scope: !13818, inlinedAt: !13820)
!13859 = !DILocation(line: 214, column: 2, scope: !13818, inlinedAt: !13820)
!13860 = !{i32 -2147152438, i32 -2147152378}
!13861 = !DILocation(line: 219, column: 9, scope: !13818, inlinedAt: !13820)
!13862 = !DILocation(line: 135, column: 2, scope: !13814)
!13863 = distinct !DISubprogram(name: "kasan_check_read", scope: !13412, file: !13412, line: 34, type: !13413, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13864 = !DILocalVariable(name: "p", arg: 1, scope: !13863, file: !13412, line: 34, type: !10241)
!13865 = !DILocation(line: 34, column: 58, scope: !13863)
!13866 = !DILocalVariable(name: "size", arg: 2, scope: !13863, file: !13412, line: 34, type: !7)
!13867 = !DILocation(line: 34, column: 74, scope: !13863)
!13868 = !DILocation(line: 36, column: 2, scope: !13863)
!13869 = distinct !DISubprogram(name: "device_property_read_u32", scope: !13870, file: !13870, line: 141, type: !13871, scopeLine: 143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13870 = !DIFile(filename: "./include/linux/property.h", directory: "/home/lizy2001/genbc/linux")
!13871 = !DISubroutineType(types: !13872)
!13872 = !{!32, !6545, !292, !2515}
!13873 = !DILocalVariable(name: "dev", arg: 1, scope: !13869, file: !13870, line: 141, type: !6545)
!13874 = !DILocation(line: 141, column: 59, scope: !13869)
!13875 = !DILocalVariable(name: "propname", arg: 2, scope: !13869, file: !13870, line: 142, type: !292)
!13876 = !DILocation(line: 142, column: 21, scope: !13869)
!13877 = !DILocalVariable(name: "val", arg: 3, scope: !13869, file: !13870, line: 142, type: !2515)
!13878 = !DILocation(line: 142, column: 36, scope: !13869)
!13879 = !DILocation(line: 144, column: 40, scope: !13869)
!13880 = !DILocation(line: 144, column: 45, scope: !13869)
!13881 = !DILocation(line: 144, column: 55, scope: !13869)
!13882 = !DILocation(line: 144, column: 9, scope: !13869)
!13883 = !DILocation(line: 144, column: 2, scope: !13869)
!13884 = distinct !DISubprogram(name: "phy_drv_supports_irq", scope: !3, file: !3, line: 2816, type: !13885, scopeLine: 2817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13885 = !DISubroutineType(types: !13886)
!13886 = !{!771, !7117}
!13887 = !DILocalVariable(name: "phydrv", arg: 1, scope: !13884, file: !3, line: 2816, type: !7117)
!13888 = !DILocation(line: 2816, column: 53, scope: !13884)
!13889 = !DILocation(line: 2818, column: 9, scope: !13884)
!13890 = !DILocation(line: 2818, column: 17, scope: !13884)
!13891 = !DILocation(line: 2818, column: 29, scope: !13884)
!13892 = !DILocation(line: 2818, column: 32, scope: !13884)
!13893 = !DILocation(line: 2818, column: 40, scope: !13884)
!13894 = !DILocation(line: 0, scope: !13884)
!13895 = !DILocation(line: 2818, column: 2, scope: !13884)
!13896 = distinct !DISubprogram(name: "sfp_bus_del_upstream", scope: !9654, file: !9654, line: 613, type: !9872, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13897 = !DILocalVariable(name: "bus", arg: 1, scope: !13896, file: !9654, line: 613, type: !7327)
!13898 = !DILocation(line: 613, column: 57, scope: !13896)
!13899 = !DILocation(line: 615, column: 1, scope: !13896)
!13900 = distinct !DISubprogram(name: "features_init", scope: !3, file: !3, line: 123, type: !3807, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1586)
!13901 = !DILocation(line: 126, column: 2, scope: !13900)
!13902 = !DILocation(line: 129, column: 2, scope: !13900)
!13903 = !DILocation(line: 134, column: 2, scope: !13900)
!13904 = !DILocation(line: 139, column: 2, scope: !13900)
!13905 = !DILocation(line: 142, column: 2, scope: !13900)
!13906 = !DILocation(line: 145, column: 2, scope: !13900)
!13907 = !DILocation(line: 150, column: 2, scope: !13900)
!13908 = !DILocation(line: 153, column: 2, scope: !13900)
!13909 = !DILocation(line: 156, column: 2, scope: !13900)
!13910 = !DILocation(line: 159, column: 2, scope: !13900)
!13911 = !DILocation(line: 164, column: 2, scope: !13900)
!13912 = !DILocation(line: 167, column: 2, scope: !13900)
!13913 = !DILocation(line: 170, column: 2, scope: !13900)
!13914 = !DILocation(line: 175, column: 2, scope: !13900)
!13915 = !DILocation(line: 178, column: 2, scope: !13900)
!13916 = !DILocation(line: 181, column: 2, scope: !13900)
!13917 = !DILocation(line: 184, column: 2, scope: !13900)
!13918 = !DILocation(line: 189, column: 2, scope: !13900)
!13919 = !DILocation(line: 192, column: 2, scope: !13900)
!13920 = !DILocation(line: 196, column: 2, scope: !13900)
!13921 = !DILocation(line: 199, column: 1, scope: !13900)
